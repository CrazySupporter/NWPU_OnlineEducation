{"version":3,"sources":["webpack:///webpack/bootstrap b47a11872c7377ec2f77","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/pdfjs-dist/build/pdf.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","g","this","Function","eval","e","window","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","length","extraBytes","parts","len2","push","encodeChunk","lookup","join","Uint8Array","Array","code","Error","indexOf","start","end","num","output","global","base64","ieee754","isArray","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","arg","encodingOrOffset","allocUnsafe","from","value","TypeError","ArrayBuffer","array","byteOffset","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","checked","copy","buffer","val","type","data","fromObject","assertSize","size","toString","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","b","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","utf8Slice","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","Symbol","species","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","max","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","Infinity","leadSurrogate","trim","replace","stringtrim","base64clean","src","dst","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","args","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","log","LN2","factory","self","__w_pdfjs_require__","unreachable","warn","utf8StringToString","stringToUTF8String","stringToPDFString","stringToBytes","string32","shadow","setVerbosityLevel","ReadableStream","removeNullCharacters","readUint32","readUint16","log2","isEvalSupported","isLittleEndian","createValidAbsoluteUrl","isSameOrigin","isSpace","isString","isNum","isEmptyObj","isBool","isArrayBuffer","info","getVerbosityLevel","getLookupTableFactory","getInheritableProperty","deprecated","createObjectURL","createPromiseCapability","createBlob","bytesToString","assert","arraysToBytes","arrayByteLength","FormatError","XRefParseException","Util","UnknownErrorException","UnexpectedResponseException","TextRenderingMode","StreamType","PasswordResponses","PasswordException","PageViewport","NotImplementedException","NativeImageDecoding","MissingPDFException","MissingDataException","MessageHandler","InvalidPDFException","AbortException","CMapCompressionType","ImageKind","FontType","AnnotationType","AnnotationFlag","AnnotationFieldFlag","AnnotationBorderStyleType","UNSUPPORTED_FEATURES","VerbosityLevel","OPS","IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","_typeof","iterator","constructor","_streams_polyfill","ERRORS","WARNINGS","INFOS","verbosity","msg","console","cond","message","details","status","begin","NullCharactersRegExp","rgbBuf","makeCssRgb","r","transform","m1","m2","applyTransform","applyInverseTransform","getAxialAlignedBoundingBox","p1","p2","p3","p4","inverseTransform","apply3dTransform","v","singularValueDecompose2dScale","transpose","first","second","sqrt","sx","sy","normalizeRect","rect","intersect","rect1","rect2","orderedX","sort","orderedY","result","ROMAN_NUMBER_MAP","toRoman","number","lowerCase","isInteger","romanBuf","romanStr","appendToArray","arr1","arr2","prependToArray","unshift","extendObj","obj1","obj2","key","inherit","base","prop","create","loadScript","callback","script","document","createElement","loaded","setAttribute","onload","getElementsByTagName","appendChild","viewBox","scale","rotation","offsetX","offsetY","dontFlip","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","width","height","centerX","centerY","fontScale","clone","convertToViewportPoint","convertToViewportRectangle","tl","br","convertToPdfPoint","PDFStringTranslateTable","capability","promise","Promise","resolve","reject","digits","contentType","Blob","URL","blob","ii","b1","b2","b3","resolveCall","fn","thisArg","wrapReason","reason","resolveOrReject","success","sourceName","targetName","comObj","_this","callbackId","streamId","postMessageTransfers","streamSinks","streamControllers","callbacksCapabilities","ah","actionHandler","_onComObjOnMessage","event","stream","_processStreamMessage","isReply","error","action","_sourceName","_targetName","then","postMessage","makeReasonSerializable","_createStreamSink","addEventListener","actionName","handler","scope","send","transfers","sendWithPromise","sendWithStream","queueingStrategy","_this2","controller","startCapability","startCall","isClosed","desiredSize","pull","pullCapability","pullCall","cancel","cancelCapability","cancelCall","_this3","sendStreamRequest","_ref2","chunk","streamSink","enqueue","isCancelled","lastDesiredSize","sinkCapability","ready","close","onPull","onCancel","_this4","sendStreamResponse","_ref3","deleteStreamController","all","map","catch","destroy","removeEventListener","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","forms","javaScript","smask","shadingPattern","font","SOLID","DASHED","BEVELED","INSET","UNDERLINE","READONLY","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","INVISIBLE","HIDDEN","PRINT","NOZOOM","NOROTATE","NOVIEW","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","UNKNOWN","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","NONE","BINARY","STREAM","DECODE","DISPLAY","NEED_PASSWORD","INCORRECT_PASSWORD","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RL","FILL","STROKE","FILL_STROKE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","item","itemLength","resultLength","strBuf","chunkEnd","_ref","dict","_ref$getArray","getArray","_ref$stopWhenFound","stopWhenFound","loopCount","values","initializer","ch","baseUrl","otherUrl","origin","other","url","absoluteUrl","protocol","isValidProtocol","ex","buffer8","Uint32Array","ceil","level","writable","charAt","decodeURIComponent","escape","unescape","encodeURIComponent","EOF","Name","nameCache","nameValue","Cmd","cmd","cmdCache","cmdValue","Dict","nonSerializable","xref","_map","objId","suppressEncryption","__nonSerializable__","assignXref","newXref","key1","key2","key3","fetchIfRef","getAsync","fetchIfRefAsync","isRef","fetch","getRaw","getKeys","keys","has","forEach","empty","merge","dictArray","mergedDict","isDict","keyName","Ref","gen","RefSet","ref","put","remove","RefSetCache","putAlias","aliasRef","clear","isName","isEOF","isCmd","isRefsEqual","v1","v2","isStream","getBytes","store","uid","_Symbol","USE_SYMBOL","it","LZWStream","StringStream","StreamsSequenceStream","Stream","RunLengthStream","PredictorStream","NullStream","FlateStream","DecodeStream","DecryptStream","AsciiHexStream","Ascii85Stream","_util","_primitives","arrayBuffer","isEmpty","getByte","getUint16","b0","getInt32","strEnd","peekByte","peekedByte","peekBytes","skip","reset","moveStart","makeSubStream","emptyBuffer","maybeMinBufferLength","bufferLength","eof","minBufferLength","readBlock","ensureBuffer","requested","buffer2","bufEnd","getBaseStreams","streams","shift","newLength","baseStreams","codeLenCodeMap","Int32Array","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","maybeLength","cmf","flg","codeSize","codeBuf","getBits","bits","getCode","table","codes","maxLen","codeLen","codeVal","generateHuffmanTable","lengths","code2","t","hdr","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","bitsLength","bitsOffset","what","codeLengths","repeatLength","code1","dist","k","blockLen","check","params","predictor","readBlockTiff","readBlockPng","colors","columns","pixBytes","rowBytes","rawBytes","inbuf","outbuf","inbits","outbits","bytesPerPixel","sum","compArray","bitMask","kk","prevRow","up","upLeft","left","pa","pb","pc","decrypt","nextChunk","initialized","hasMoreData","input","firstDigit","maxDecodeLength","digit","repeatHeader","source","earlyChange","cachedData","bitsCached","lzwState","codeLength","nextCode","dictionaryValues","dictionaryLengths","Uint16Array","dictionaryPrevCodes","currentSequence","currentSequenceLength","readBits","lastCode","q","estimatedDecodedSize","blockSize","prevCode","decodedLength","currentBufferLength","hasPrev","core","hide","redefine","ctx","$export","own","exp","IS_FORCED","F","IS_GLOBAL","G","IS_PROTO","P","IS_BIND","B","S","expProto","U","W","R","__g","__e","isObject","SRC","$toString","TPL","split","inspectSource","O","safe","isFunction","aFunction","dP","createDesc","f","exec","anObject","IE8_DOM_DEFINE","toPrimitive","Attributes","IObject","defined","ColorSpace","getRgb","srcOffset","rgb","getRgbItem","dest","destOffset","getRgbBuffer","count","alpha01","getOutputLength","inputLength","isPassthrough","fillRgb","originalWidth","originalHeight","actualHeight","bpc","comps","numComponentColors","needsResizing","numComps","allColors","destPos","rgbPos","colorMap","w1","h1","w2","h2","py","oldIndex","xRatio","yRatio","newIndex","xScaled","w1Scanline","resizeRgbImage","usesZeroToOneRange","parse","cs","pdfFunctionFactory","IR","parseToIR","fromIR","whitePoint","blackPoint","gamma","singletons","gray","cmyk","CalGrayCS","matrix","CalRGBCS","basePatternCS","PatternCS","baseIndexedCS","hiVal","IndexedCS","alt","tintFnIR","AlternateCS","createFromIR","range","LabCS","colorSpaces","resCS","mode","altIR","createIR","isDefaultDecode","decode","DeviceGrayCS","DeviceRgbCS","DeviceCmykCS","tintFn","defaultColor","Float32Array","tmpBuf","baseNumComps","baseBuf","scaled","tinted","decodeMap","baseCS","highVal","outputDelta","lookupPos","convertToRgb","srcScale","XW","YW","ZW","XB","YB","ZB","A","AG","L","BRADFORD_SCALE_MATRIX","BRADFORD_SCALE_INVERSE_MATRIX","SRGB_D65_XYZ_TO_RGB_MATRIX","FLAT_WHITEPOINT_MATRIX","tempNormalizeMatrix","tempConvertMatrix1","tempConvertMatrix2","DECODE_L_CONSTANT","GR","GG","GB","MXA","MYA","MZA","MXB","MYB","MZB","MXC","MYC","MZC","matrixProduct","sRGBTransferFunction","color","adjustToRange","decodeL","C","AGR","BGG","CGB","X","Y","Z","XYZ","XYZ_Flat","sourceWhitePoint","XYZ_In","LMS","LMS_Flat","convertToFlat","normalizeWhitePointToFlat","XYZ_Black","sourceBlackPoint","zeroDecodeL","X_Scale","X_Offset","Y_Scale","Y_Offset","Z_Scale","Z_Offset","compensateBlackPoint","XYZ_D65","LMS_D65","convertToD65","normalizeWhitePointToD65","SRGB","sR","sG","sB","round","amin","amax","bmin","bmax","fn_g","high1","low2","high2","maxVal","Ls","as","bs","M","N","ExpertEncoding","MacExpertEncoding","MacRomanEncoding","StandardEncoding","WinAnsiEncoding","SymbolSetEncoding","ZapfDingbatsEncoding","getEncoding","encodingName","id","px","random","$keys","enumBugKeys","def","TAG","tag","stat","isArrayIter","toLength","getIterFn","BREAK","RETURN","_exports","iterable","entries","ITERATOR","step","iterFn","index","next","done","Parser","Linearization","Lexer","_stream","_ccitt_stream","_jbig2_stream","_jpeg_stream","_jpx_stream","MAX_ADLER32_LENGTH","computeAdler32","bytesLength","lexer","allowStreams","recoveryMode","imageCache","refill","buf1","getObj","buf2","tryShift","cipherTransform","makeInlineImage","makeStream","decryptString","findDefaultInlineStreamEnd","startPos","state","maybeEIPos","followingBytes","findDCTDecodeInlineStreamEnd","markerLength","foundEOI","inlineStreamSkipEI","findASCII85DecodeInlineStreamEnd","findASCIIHexDecodeInlineStreamEnd","dictLength","beginInlineImagePos","filterName","filter","filterZero","imageStream","cacheKey","imageBytes","initialStreamPos","dictBytes","cacheEntry","createStream","skipToNextLine","nextChar","ENDSTREAM_SIGNATURE","skipped","scanBytes","scanLength","makeFilter","filterArray","paramsArray","xrefStreamStats","stats","streamTypes","JpegStream","JpxStream","CCITTFaxStream","Jbig2Stream","knownCommands","specialChars","toHexDigit","currentChar","peekChar","getNumber","eNotation","divideBy","sign","baseValue","powerValue","powerValueSign","currentDigit","getString","numParen","charBuffered","getName","previousCh","x2","getHexString","secondDigit","isFirstHex","comment","knownCommandFound","possibleCommand","getInt","allowZeroValue","linDict","parser","obj3","hints","hintsLength","getHints","objectNumberFirst","endFirst","numPages","mainXRefEntriesOffset","pageFirst","is","bitmap","cof","propertyIsEnumerable","toInteger","ARG","T","tryGet","callee","shared","Constructor","forbiddenField","$$resolve","$$reject","META","setDesc","isExtensible","FREEZE","preventExtensions","setMeta","w","meta","KEY","NEED","fastKey","getWeak","onFreeze","_jpg","jpegImage","JpegImage","decodeArr","forceRGB","bitsPerComponent","decodeArrLength","transformNeeded","maxValue","decodeTransform","colorTransform","getData","drawWidth","drawHeight","getIR","forceDataSchema","OperatorList","QueueOptimizer","addState","parentState","pattern","checkFn","iterateFn","processFn","InitialState","context","iCurr","fnArray","argsArray","lastProcessed","curr","iFirstSave","iFirstTransform","iFirstPIIXO","maxX","maxLineHeight","currentX","currentY","img","h","imgWidth","imgHeight","imgData","imgRowSize","rowSize","dataOffset","splice","kind","iFirstPIMXO","imageMask","handlePaintSolidColorImageMask","iTransform","transformArgs","isSameImage","firstPIMXOArg0","firstTransformArg0","firstTransformArg3","iPIMXO","positions","images","maskParams","firstPIXOArg0","iFirstSetFont","firstSetFontArg0","firstSetFontArg1","iFirstBeginText","iFirstSetTextMatrix","iFirstShowText","iFirstEndText","iFirst","iEndText","_optimize","flush","NullOptimizer","intent","messageHandler","pageIndex","optimizer","dependencies","_totalLength","weight","totalLength","addOp","CHUNK_SIZE","addDependency","addDependencies","addOpList","opList","lastChunk","cached","getTransfers","operatorList","getGlyphsUnicode","getDingbatsGlyphsUnicode","valueOf","toIObject","toAbsoluteIndex","IS_INCLUDES","$this","el","fromIndex","UNSCOPABLES","ArrayProto","classof","test","LIBRARY","Iterators","$iterCreate","setToStringTag","getPrototypeOf","BUGGY","returnThis","Base","NAME","DEFAULT","IS_SET","FORCED","methods","IteratorPrototype","getMethod","proto","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","documentElement","$iterators","wks","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","SPECIES","D","defer","channel","port","invoke","html","cel","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","counter","listener","now","port2","port1","onmessage","importScripts","removeChild","newPromiseCapability","promiseCapability","SAFE_CLOSING","riter","skipClosing","iter","toObject","asc","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","callbackfn","_t","ChunkedStreamManager","ChunkedStream","chunkSize","manager","loadedChunks","numChunksLoaded","numChunks","progressiveDataLength","lastSuccessfulEnsureByteChunk","getMissingChunks","chunks","allChunksLoaded","onReceiveData","curChunk","beginChunk","endChunk","onReceiveProgressiveData","position","ensureByte","ensureRange","nextEmptyChunk","hasChunk","getByteRange","ChunkedStreamSubstream","missingChunks","subStream","pdfNetworkStream","rangeChunkSize","disableAutoFetch","msgHandler","currRequestId","chunksNeededByRequest","requestsByChunk","promisesByRequest","aborted","_loadedStreamCapability","onLoadedStream","sendRequest","rangeReader","getRangeReader","isStreamingSupported","onProgress","bind","readChunk","chunkData","requestAllChunks","_requestChunks","requestId","chunksNeeded","chunksToRequest","groupedChunksToRequest","groupChunks","groupedChunk","getStream","requestRange","getBeginChunk","getEndChunk","requestRanges","ranges","groupedChunks","prevChunk","bytesLoaded","total","isProgressive","loadedRequests","requestIds","onError","err","abort","cancelAllRequests","FileSpec","XRef","ObjectLoader","Catalog","_slicedToArray","_n","_d","_e","_s","_i","sliceIterator","_parser","_chunked_stream","_crypto","_colorspace","pdfManager","pageFactory","catDict","getCatalogObj","fontCache","builtInCMapCache","pageKidsCountCache","pagePromises","metadata","streamRef","encryptMetadata","encrypt","subtype","toplevelPagesDict","pagesObj","documentOutline","readDocumentOutline","root","items","parent","processed","blackColor","outlineDict","parseDestDictionary","destDict","resultObj","docBaseUrl","flags","rgbColor","outlineItem","unsafeUrl","newWindow","bold","italic","destinations","fetchDestination","nameTreeRef","nameDictionaryRef","dests","names","NameTree","getAll","getDestination","destinationId","pageLabels","readPageLabels","style","prefix","nums","NumberTree","currentLabel","currentIndex","labelDict","st","baseCharCode","letterIndex","character","charBuf","jj","pageMode","attachments","fs","serializable","appendIfJavaScriptDict","jsDict","js","openactionDict","actionType","cleanup","promises","translatedFonts","translated","getPage","getPageDict","createPage","nodesToVisit","currentPageIndex","currentNode","pop","fetchAsync","kids","last","getPageIndex","pageRef","kidRef","parentRef","node","kidPromises","kid","pagesBeforeRef","addDefaultProtocolToUrl","urlDict","remoteDest","JSON","stringify","namedAction","jsAction","jsUrl","RegExp","tryConvertUrlEncoding","href","xrefstms","cache","fontTypes","setStartXRef","startXRef","startXRefQueue","trailerDict","indexObjects","readXRef","trailer","ids","fileId","CipherTransformFactory","password","processXRefTable","tableState","entryNum","streamPos","parserBuf1","parserBuf2","readXRefTable","firstEntryNum","entryCount","entry","free","uncompressed","processXRefStream","streamParameters","byteWidths","streamState","entryRanges","readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","LF","CR","LT","readToken","token","skipUntil","dataLength","objRegExp","endobjRegExp","nestedObjRegExp","trailerBytes","startxrefBytes","objBytes","xrefBytes","trailers","xrefStms","contentLength","endPos","checkPos","tokenStr","objToken","content","xrefTagOffset","startXRefParsedCache","topDict","getEntry","xrefEntry","fetchUncompressed","fetchCompressed","substring","createCipherTransform","tableOffset","streamManager","tryFetch","NameOrNumberTree","_type","kidsOrEntries","limits","currentKey","description","contentAvailable","pickPlatformItem","filename","_filename","contentRef","fileObj","mayHaveChildren","addChildren","dictKeys","rawValue","_ii","refSet","load","_walk","nodesToRevisit","pendingRequests","foundMissingData","_i2","_ii2","CCITTFaxDecoder","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","options","eoline","byteAlign","rows","eoblock","black","codingLine","refLine","codingPos","row","nextLine2D","inputBits","inputBuf","outputBits","rowsDone","_lookBits","_eatBits","readNextChar","refPos","blackPixels","code3","_getTwoDimCode","_addPixels","_getBlackCode","_getWhiteCode","_addPixelsNeg","gotEOL","a1","_findTableCode","limitValue","ArithmeticDecoder","QeTable","qe","nmps","nlps","switchFlag","bp","dataEnd","chigh","clow","byteIn","ct","readBit","contexts","cx_index","cx_mps","qeTableIcx","qeIcx","JpxImage","_arithmetic_decoder","JpxError","SubbandsGainLog2","LL","LH","HL","HH","failOnCorruptedImage","calculateComponentDimensions","component","siz","x0","XOsiz","XRsiz","x1","Xsiz","y0","YOsiz","YRsiz","y1","Ysiz","calculateTileGrids","components","tile","SIZ","tiles","numXtiles","XTOsiz","XTsiz","numYtiles","YTOsiz","YTsiz","tx0","ty0","tx1","ty1","Csiz","tileComponent","tcx0","tcy0","tcx1","tcy1","getBlocksDimensions","codOrCoc","codingStyleParameters","entropyCoderWithCustomPrecincts","PPx","precinctsSizes","PPy","xcb_","xcb","ycb_","ycb","buildPrecincts","resolution","dimensions","precinctWidth","precinctHeight","isZeroRes","resLevel","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","trx1","trx0","numprecinctshigh","try1","try0","numprecincts","precinctParameters","buildCodeblocks","subband","codeblock","precinctNumber","codeblockWidth","codeblockHeight","cbx0","tbx0","cby0","tby0","cbx1","tbx1","cby1","tby1","codeblocks","precincts","cbx","cby","tbx0_","tby0_","tbx1_","tby1_","subbandType","Lblock","precinct","cbxMin","cbxMax","cbyMin","cbyMax","codeblockParameters","numcodeblockwide","numcodeblockhigh","createPacket","layerNumber","precinctCodeblocks","subbands","getPrecinctIndexIfExist","pxIndex","pyIndex","sizeInImageScale","precinctIterationSizes","posX","minWidth","posY","minHeight","startPrecinctRowIndex","getPrecinctSizesInImageScale","componentsCount","MAX_VALUE","maxNumWide","maxNumHigh","sizePerComponent","decompositionLevelsCount","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","resolutions","widthCurrentResolution","heightCurrentResolution","buildPackets","tileIndex","currentTile","blocksDimensions","bscale","resolutionSubbands","progressionOrder","codingStyleDefaultParameters","packetsIterator","layersCount","maxDecompositionLevelsCount","nextPacket","packet","maxNumPrecinctsInLevel","maxNumPrecincts","precinctsIterationSizes","parseTilePackets","bufferSize","skipNextBit","skipMarkerIfEqual","skipBytes","alignToByte","readCodingpasses","sopMarkerUsed","COD","ephMarkerUsed","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","inclusionTree","zeroBitPlanesTree","InclusionTree","TagTree","incrementValue","nextLevel","included","zeroBitPlanes","codingpasses","codingpassesLog2","codedDataLength","packetItem","copyCoefficients","coefficients","levelWidth","levelHeight","delta","mb","reversible","segmentationSymbolUsed","right","bottom","blockWidth","blockHeight","bitModel","currentCodingpassType","BitModel","dataItem","encodedData","decoder","setDecoder","runSignificancePropagationPass","runMagnitudeRefinementPass","runCleanupPass","checkSegmentationSymbol","nb","coefficentsSign","magnitude","coefficentsMagnitude","bitsDecoded","magnitudeCorrection","interleave","levelOffset","transformTile","quantizationParameters","spqcds","SPqcds","scalarExpounded","guardBits","precision","reversibleTransformation","ReversibleTransform","IrreversibleTransform","subbandCoefficients","mu","epsilon","gainLog2","calculate","top","initializeTile","qcdOrQcc","QCC","QCD","COC","headerSize","lbox","tbox","jumpDataLength","method","colorspace","parseCodestream","headerType","parseImageProperties","newByte","doNotRecover","sqcd","spqcdSize","mainHeader","isSigned","qcd","noQuantization","spqcd","cqcc","qcc","cod","scod","multipleComponentTransform","blockStyle","selectiveArithmeticCodingBypass","resetContextProbabilities","terminationOnEachCodingPass","verticallyStripe","predictableTermination","precinctsSize","unsupported","partIndex","partsCount","resultImages","transformedTiles","y2","tile0","Uint8ClampedArray","fourComponents","y0items","y1items","y2items","y3items","component0","transformComponents","levelsLength","levels","currentLevel","defaultValue","stopValue","propagateValues","levelIndex","currentValue","LLAndLHContextsLabel","HLContextLabel","HHContextLabel","contextLabelTable","coefficientCount","neighborsSignificance","processingFlags","Int8Array","setNeighborsSignificance","column","labels","i0","i1","contextLabel","decodeSignBit","contribution","sign0","sign1","significance1","decoded","horizontalContribution","indexNext","width4","index0","bit","iNext","oneRowDown","twoRowsDown","threeRowsDown","indexBase","checkAllEmpty","i2","Transform","u0","v0","ll","iterate","extend","j1","j2","hl_lh_hh","u","llWidth","llHeight","llItems","rowBuffer","numBuffers","colBuffers","currentBuffer","current","alpha","beta","K","calculateSHA512","calculateSHA384","calculateSHA256","calculateMD5","PDF20","PDF17","ARCFourCipher","AES256Cipher","AES128Cipher","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","_classCallCheck","instance","keyLength","encryptBlock","tmp2","decryptBlock","h0","h3","paddedLength","padded","rotateArg","rotate","Word64","highInteger","lowInteger","high","low","and","word","xor","or","shiftRight","places","shiftLeft","rotateRight","not","add","lowAdd","highAdd","copyTo","assign","rotr","z","maj","sigma","sigmaPrime","littleSigma","h4","h5","h6","h7","t1","t2","littleSigmaPrime","mode384","tmp3","tmp1","NullCipher","AESBaseCipher","_inv_s","_mix","_mixCol","bufferPosition","cipherKey","_keySize","_cyclesOfRepetition","_j","_j2","_k","_j3","s0","s1","s2","s3","_j4","_j5","_j6","_j7","_j8","_j9","_k2","finalize","sourceLength","iv","plain","_decrypt","_key","outputLength","lastBlock","psLen","_j10","_decryptBlock2","cipher","_encrypt","_i3","_j11","_AESBaseCipher","_rcon","_expandKey","rcon","t3","t4","_AESBaseCipher2","compareByteArrays","array1","array2","checkOwnerPassword","ownerValidationSalt","userBytes","ownerPassword","hashData","checkUserPassword","userValidationSalt","userPassword","getOwnerKey","ownerKeySalt","ownerEncryption","getUserKey","userKeySalt","userEncryption","concatArrays","calculatePDF20Hash","arrayLength","k1","remainder","hash","concatBytes","CipherTransform","stringCipherConstructor","streamCipherConstructor","StringCipherConstructor","StreamCipherConstructor","defaultPasswordBytes","prepareKeyData","revision","hashDataSize","keyLengthInBytes","checkData","encryptionKey","derivedKey","identityName","algorithm","cfDict","streamCryptoName","handlerDict","passwordBytes","fileIdBytes","uBytes","perms","passwordLength","pdfAlgorithm","createEncryptionKey20","decodeUserPassword","cf","stmf","strf","eff","buildObjectKey","isAes","buildCipherConstructor","cfm","cryptFilter","cipherConstructor","CFFCompiler","CFFPrivateDict","CFFTopDict","CFFCharset","CFFIndex","CFFStrings","CFFHeader","CFF","CFFParser","CFFStandardStrings","_charsets","_encodings","CharstringValidationData","stackClearing","stem","resetStack","undefStack","CharstringValidationData12","stackDelta","stackFn","stack","file","properties","seacAnalysisEnabled","cff","header","parseHeader","nameIndex","parseIndex","topDictIndex","stringIndex","globalSubrIndex","topDictParsed","parseDict","createDict","strings","parseNameIndex","parseStringIndex","parsePrivateDict","isCIDFont","hasName","charStringOffset","getByName","charStringIndex","fontMatrix","charset","fontBBox","ascent","descent","ascentScaled","fdArrayIndex","dictRaw","fontDict","fdArray","parseCharsets","fdSelect","parseFDSelect","parseEncoding","charStringsAndSeacs","parseCharStrings","charStrings","localSubrIndex","privateDict","subrsIndex","seacs","widths","major","minor","hdrSize","offSize","parseOperand","parseFloat","parseFloatOperand","operands","cffIndex","offsets","offsetSize","offsetStart","offsetEnd","Type","cffDict","pair","setByKey","parseCharString","callDepth","stackSize","validationCommand","seac","bias","subrNumber","firstStackClearing","charstring","valid","localSubrToUse","privateDictToUse","fdIndex","getFDIndex","nominalWidth","defaultWidth","emptyPrivateDictionary","parentDict","privateOffset","privateDictEnd","dictData","subrsOffset","relativeOffset","removeByName","cid","CFFCharsetPredefinedTypes","ISO_ADOBE","ISOAdobeCharset","EXPERT","ExpertCharset","EXPERT_SUBSET","ExpertSubsetCharset","format","raw","predefined","baseEncoding","dataStart","glyphsCount","rangesCount","gid","supplementsCount","sid","readSupplement","CFFEncoding","invalidFirstGID","CFFFDSelect","objects","CFFDict","tables","keyToNameMap","nameToKeyMap","defaults","types","opcodes","order","valueLength","setByName","createTables","layout","glyphIndex","CFFOffsetTracker","isTracking","track","location","setEntryLocation","offset0","offset1","offset2","offset3","offset4","compile","compileHeader","compileNameIndex","subDict","compiled","compileTopDicts","topDictTracker","trackers","compileStringIndex","compileIndex","compileEncoding","compileCharset","compileCharStrings","compileFDSelect","fontDictTrackers","compilePrivateDicts","encodeNumber","encodeFloat","encodeInteger","nibbles","sanitizedName","char","dicts","removeCidKeys","fontDictTracker","fontDictData","compileDict","privateDictTracker","privateDictData","subrs","offsetTracker","compileGlobalSubrIndex","writeByteArray","compileTypedArray","lastOffset","getSupplementalGlyphMapForCalibri","getSupplementalGlyphMapForArialBlack","getGlyphMapForStandardFonts","getSymbolsFonts","getSerifFonts","getNonStdFontMap","getStdFontMap","getSpecialPUASymbols","UnicodeRanges","getNormalizedUnicodes","mapSpecialUnicodeValues","reverseIfRtl","chars","charsLength","getUnicodeRangeFor","getUnicodeForGlyph","glyphsUnicodeMap","unicode","hexStr","nameLen","toUpperCase","PostScriptCompiler","PostScriptEvaluator","PDFFunctionFactory","isPDFFunction","_ps_parser","IsEvalSupportedCached","_ref$isEvalSupported","PDFFunction","fnObj","parseArray","getSampleArray","outputSize","bps","sampleMul","strBytes","strIdx","typeFn","constructSampled","constructInterpolated","constructStiched","constructPostScript","constructSampledFromIR","constructInterpolatedFromIR","constructStichedFromIR","constructPostScriptFromIR","_ref4","_ref5","_ref6","toMultiArray","domain","inputSize","encode","_ref7","interpolate","xmin","xmax","ymin","ymax","samples","cubeVertices","cubeN","Float64Array","cubeVertex","domain_2i","domain_2i_1","size_i","e0","n0","n1","rj","_ref8","c0","c1","diff","_ref9","_ref10","fnRefs","fns","_ref11","bounds","fnsIR","dmin","dmax","rmin","rmax","_ref12","PostScriptLexer","PostScriptParser","_ref13","numOutputs","numInputs","evaluator","cache_available","cachedValue","execute","stackIndex","bound","PostScriptStack","initialStack","roll","operators","operator","atan","cos","LN10","sin","AstNode","AstArgument","AstLiteral","AstBinaryOperation","op","arg1","arg2","AstMin","AstVariable","AstVariableDefinition","variable","ExpressionBuilderVisitor","buildAddOperation","num1","num2","buildMulOperation","buildSubOperation","buildMinOperation","visit","visitor","visitArgument","visitLiteral","visitBinaryOperation","visitMin","visitVariable","visitVariableDefinition","literal","operation","definition","ast1","ast2","tmpVar","instructions","lastRegister","instruction","statementBuilder","expr","fnDict","pdfjsCoreWorker","WorkerMessageHandler","WorkerTask","_pdf_manager","_is_node","_is_node2","default","maybePort","terminated","_capability","finished","finish","terminate","ensureNotTerminated","PDFWorkerStream","_msgHandler","_contentLength","_fullRequestReader","_rangeRequestReaders","PDFWorkerStreamReader","_isRangeSupported","_isStreamingSupported","readableStream","_reader","getReader","_headersReady","isRangeSupported","PDFWorkerStreamRangeReader","getFullReader","reader","headersReady","setup","testMessageProcessed","supportTransfers","xhr","XMLHttpRequest","responseExists","responseType","supportTypedArray","createDocumentHandler","docParams","cancelXHRs","WorkerTasks","apiVersion","docId","workerHandlerName","startWorkerTask","task","finishWorkerTask","loadDocument","loadDocumentCapability","parseSuccess","ensureDoc","fingerprint","parseFailure","getPdfManager","evaluatorOptions","pdfManagerCapability","LocalPdfManager","pdfStream","cachedChunks","fullRequest","NetworkPdfManager","sendProgressiveData","pdfFile","flushChunks","page","rotatePromise","ensure","refPromise","userUnitPromise","viewPromise","results","userUnit","view","pdfDocument","catalog","ensureCatalog","requestLoadedStream","pageNum","Date","getOperatorList","renderInteractiveForms","featureId","wrappedException","minimumStackMessage","sink","extractTextContent","normalizeWhitespace","combineTextItems","waitOn","onSuccess","doc","pdfInfo","onFailure","updatePassword","pdfManagerReady","disableCreateObjectURL","maxImageSize","disableFontFace","nativeImageDecoderSupport","ignoreErrors","newPdfManager","setupDoc","initializeFromPort","globalScope","_pdfjsCompatibilityChecked","isNodeJS","hasDOM","btoa","atob","scripts","Element","parentNode","WeakMap","hasWorkingUrl","pathname","relative","relativePathDotMapping","ALPHA","ALPHANUMERIC","JURL","_isInvalid","_url","authority","_username","_password","_isRelative","host","_query","_fragment","_scheme","_port","_host","hostname","_path","_schemeData","search","_","OriginalURL","revokeObjectURL","isRelativeScheme","scheme","invalid","IDNAToASCII","percentEscape","percentEscapeQuery","stateOverride","errors","cursor","seenAt","seenBracket","loop","nextC","nextNextC","cp","tempC","temp","searchString","isRegExp","MATCH","re","$includes","$at","iterated","point","TO_STRING","dPs","IE_PROTO","Empty","_createDict","iframeDocument","iframe","display","contentWindow","open","lt","Properties","ObjectProto","addToUnscopables","Arguments","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","anInstance","forOf","speciesConstructor","microtask","newPromiseCapabilityModule","perform","promiseResolve","$Promise","isNode","USE_NATIVE","FakePromise","PromiseRejectionEvent","isThenable","notify","isReject","chain","_c","_v","ok","reaction","exited","fail","_h","onHandleUnhandled","enter","exit","onUnhandled","unhandled","isUnhandled","onunhandledrejection","_a","onrejectionhandled","$reject","_w","$resolve","wrapper","executor","onFulfilled","onRejected","$index","alreadyCalled","race","getIteratorMethod","un","macrotask","Observer","MutationObserver","WebKitMutationObserver","head","navigator","standalone","toggle","createTextNode","observe","characterData","DESCRIPTORS","finally","onFinally","try","InternalMap","each","weak","fails","validate","uncaughtFrozenStore","ufstore","$WeakMap","freeze","getConstructor","_f","original","gOPS","pIE","$assign","aLen","getSymbols","isEnum","getOwnPropertySymbols","redefineAll","createArrayMethod","$has","arrayFind","arrayFindIndex","_l","UncaughtFrozenStore","findUncaughtFrozen","delete","ADDER","$iterDetect","inheritIfRequired","common","IS_WEAK","fixMethod","HASNT_CHAINING","THROWS_ON_PRIMITIVES","ACCEPT_ITERABLES","BUGGY_ZERO","$instance","setStrong","buggy","gOPD","getOwnPropertyDescriptor","COLLECTION","of","mapping","cb","mapFn","nextItem","$values","isEntries","isReadableStreamSupported","_typeof2","IsPropertyKey","argument","Call","V","typeIsObject","createDataProperty","createArrayFromList","elements","ArrayBufferCopy","CreateIterResultObject","IsFiniteNonNegativeNumber","InvokeOrNoop","PromiseInvokeOrNoop","returnValueE","PromiseInvokeOrPerformFallback","argsF","methodE","TransferArrayBuffer","ValidateAndNormalizeHighWaterMark","highWaterMark","ValidateAndNormalizeQueuingStrategy","AssertionError","rethrowAssertionErrorRejection","_require","_require2","_require3","DequeueValue","EnqueueValueWithSize","PeekQueueValue","ResetQueue","WritableStream","underlyingSink","_ref$highWaterMark","_state","_storedError","_writer","_writableStreamController","_writeRequests","_inFlightWriteRequest","_closeRequest","_inFlightCloseRequest","_pendingAbortRequest","_backpressure","WritableStreamDefaultController","__startSteps","IsWritableStream","streamBrandCheckException","IsWritableStreamLocked","WritableStreamAbort","AcquireWritableStreamDefaultWriter","WritableStreamDefaultWriter","wasAlreadyErroring","_resolve","_reject","_reason","_wasAlreadyErroring","WritableStreamStartErroring","WritableStreamDealWithRejection","WritableStreamFinishErroring","writer","WritableStreamDefaultWriterEnsureReadyPromiseRejected","WritableStreamHasOperationMarkedInFlight","_started","__errorSteps","storedError","abortRequest","WritableStreamRejectCloseAndClosedPromiseIfNeeded","__abortSteps","WritableStreamFinishInFlightClose","_closedPromise_resolve","_closedPromise_reject","_closedPromiseState","defaultWriterClosedPromiseResolve","WritableStreamCloseQueuedOrInFlight","defaultWriterClosedPromiseReject","_closedPromise","WritableStreamUpdateBackpressure","backpressure","_readyPromise_resolve","_readyPromise_reject","_readyPromise","_readyPromiseState","defaultWriterReadyPromiseReset","defaultWriterReadyPromiseResolve","WritableStreamDefaultControllerError","WritableStreamDefaultWriterCloseWithErrorPropagation","_ownerWritableStream","WritableStreamDefaultWriterClose","WritableStreamDefaultWriterRelease","WritableStreamDefaultWriterWrite","defaultWriterReadyPromiseInitializeAsResolved","defaultWriterClosedPromiseInitialize","defaultWriterReadyPromiseInitializeAsRejected","defaultWriterClosedPromiseInitializeAsResolved","defaultWriterClosedPromiseInitializeAsRejected","IsWritableStreamDefaultWriter","defaultWriterBrandCheckException","defaultWriterLockException","WritableStreamDefaultWriterAbort","WritableStreamDefaultControllerGetDesiredSize","WritableStreamDefaultWriterGetDesiredSize","closeRequest","WritableStreamDefaultControllerAdvanceQueueIfNeeded","WritableStreamDefaultWriterEnsureClosedPromiseRejected","defaultWriterClosedPromiseResetToRejected","defaultWriterReadyPromiseReject","defaultWriterReadyPromiseResetToRejected","releasedError","strategySize","_strategySize","chunkSizeE","WritableStreamDefaultControllerErrorIfNeeded","WritableStreamDefaultControllerGetChunkSize","writeRequest","WritableStreamAddWriteRequest","writeRecord","enqueueE","_controlledWritableStream","WritableStreamDefaultControllerGetBackpressure","WritableStreamDefaultControllerWrite","_underlyingSink","_queue","_queueTotalSize","normalizedStrategy","_strategyHWM","IsWritableStreamDefaultController","startResult","WritableStreamMarkCloseRequestInFlight","WritableStreamFinishInFlightCloseWithError","WritableStreamDefaultControllerProcessClose","WritableStreamMarkFirstWriteRequestInFlight","WritableStreamFinishInFlightWrite","WritableStreamFinishInFlightWriteWithError","WritableStreamDefaultControllerProcessWrite","container","_require4","_require5","underlyingSource","_disturbed","_readableStreamController","ReadableByteStreamController","ReadableStreamDefaultController","IsReadableStream","IsReadableStreamLocked","ReadableStreamCancel","AcquireReadableStreamDefaultReader","ReadableStreamBYOBReader","readable","ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue","pipeTo","preventClose","preventAbort","preventCancel","Boolean","shuttingDown","currentWrite","isOrBecomesErrored","shutdownWithAction","shutdown","destClosed","waitForWritesToFinish","oldCurrentWrite","originalIsError","originalError","doTheRest","newError","isError","ReadableStreamReaderGenericRelease","pipeLoop","ReadableStreamDefaultReaderRead","branches","ReadableStreamTee","ReadableStreamDefaultReader","cloneForBranch2","teeState","closedOrErrored","canceled1","canceled2","reason1","reason2","branch1","_branch1","branch2","_branch2","_teeState","ReadableStreamDefaultControllerClose","value1","value2","ReadableStreamDefaultControllerEnqueue","create_ReadableStreamTeePullFunction","_cloneForBranch2","cancel1","compositeReason","cancelResult","create_ReadableStreamTeeBranch1CancelFunction","cancel2","create_ReadableStreamTeeBranch2CancelFunction","underlyingSource1","branch1Stream","underlyingSource2","branch2Stream","ReadableStreamDefaultControllerError","ReadableStreamAddReadIntoRequest","IsReadableStreamBYOBReader","readIntoRequest","_readIntoRequests","ReadableStreamAddReadRequest","IsReadableStreamDefaultReader","readRequest","_readRequests","ReadableStreamClose","__cancelSteps","defaultReaderClosedPromiseResolve","ReadableStreamError","defaultReaderClosedPromiseReject","ReadableStreamFulfillReadRequest","ReadableStreamGetNumReadIntoRequests","ReadableStreamGetNumReadRequests","ReadableStreamHasBYOBReader","ReadableStreamHasDefaultReader","IsReadableStreamDisturbed","ReadableStreamDefaultControllerGetDesiredSize","ReadableStreamReaderGenericInitialize","defaultReaderBrandCheckException","_ownerReadableStream","readerLockException","ReadableStreamReaderGenericCancel","IsReadableByteStreamController","byobReaderBrandCheckException","_controlledReadableStream","elementSize","DataView","BYTES_PER_ELEMENT","ctor","pullIntoDescriptor","bytesFilled","readerType","_pendingPullIntos","emptyView","ReadableByteStreamControllerFillPullIntoDescriptorFromQueue","filledView","ReadableByteStreamControllerConvertPullIntoDescriptor","ReadableByteStreamControllerHandleQueueDrain","_closeRequested","ReadableByteStreamControllerError","ReadableByteStreamControllerCallPullIfNeeded","ReadableByteStreamControllerPullInto","ReadableStreamBYOBReaderRead","defaultReaderClosedPromiseInitialize","defaultReaderClosedPromiseInitializeAsResolved","defaultReaderClosedPromiseInitializeAsRejected","defaultReaderClosedPromiseResetToRejected","__pullSteps","_underlyingSource","_pullAgain","_pulling","ReadableStreamDefaultControllerCallPullIfNeeded","ReadableStreamDefaultControllerErrorIfNeeded","IsReadableStreamDefaultController","defaultControllerBrandCheckException","pendingPromise","ReadableStreamDefaultControllerShouldCallPull","ReadableStreamBYOBRequest","_associatedReadableByteStreamController","_view","bytesWritten","IsReadableStreamBYOBRequest","byobRequestBrandCheckException","ReadableByteStreamControllerRespondInternal","ReadableByteStreamControllerRespond","firstDescriptor","ReadableByteStreamControllerRespondWithNewView","underlyingByteSource","_underlyingByteSource","ReadableByteStreamControllerClearPendingPullIntos","autoAllocateChunkSize","_autoAllocateChunkSize","byteStreamControllerBrandCheckException","firstPendingPullInto","ReadableByteStreamControllerClose","transferredBuffer","ReadableByteStreamControllerEnqueueChunkToQueue","transferredView","ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue","ReadableByteStreamControllerEnqueue","viewE","bufferE","_byobRequest","ReadableByteStreamControllerGetDesiredSize","ReadableByteStreamControllerShouldCallPull","ReadableByteStreamControllerInvalidateBYOBRequest","ReadableByteStreamControllerCommitPullIntoDescriptor","ReadableStreamFulfillReadIntoRequest","currentAlignedBytes","maxBytesToCopy","maxBytesFilled","maxAlignedBytes","totalBytesToCopyRemaining","headOfQueue","bytesToCopy","destStart","ReadableByteStreamControllerFillHeadPullIntoDescriptor","ReadableByteStreamControllerShiftPendingPullInto","ReadableByteStreamControllerRespondInClosedState","remainderSize","ReadableByteStreamControllerRespondInReadableState","transformStream","writableStream","TransformStream","TransformStreamEnqueueToReadable","_errored","_readableClosed","_readableController","TransformStreamErrorIfNeeded","TransformStreamSetBackpressure","TransformStreamCloseReadableInternal","TransformStreamErrorInternal","_writableDone","_writableController","TransformStreamReadableReadyPromise","_backpressureChangePromise","_backpressureChangePromise_resolve","TransformStreamDefaultTransform","transformStreamController","_controlledTransformStream","IsTransformStreamDefaultController","IsTransformStream","TransformStreamSink","startPromise","_transformStream","_startPromise","_transforming","transformer","_transformer","_transformStreamController","TransformStreamTransform","TransformStreamSource","TransformStreamDefaultController","TransformStreamCloseReadable","TransformStreamError","readableController","readableStrategy","writableStrategy","startPromise_resolve","_readable","_writable","_document","BasePdfManager","_docId","_docBaseUrl","ensureXRef","PDFDocument","ensureHelper","Page","_obj","_annotation","_operator_list","_evaluator","_function","LETTER_SIZE_MEDIABOX","isAnnotationRenderable","annotation","viewable","printable","pageDict","resourcesPromise","uniquePrefix","idCounters","idFactory","createObjId","_getInheritableProperty","resources","mediaBox","cropBox","intersection","getContentStream","loadResources","contentStreamPromise","partialEvaluator","PartialEvaluator","pageListPromise","contentStream","transparency","hasBlendModes","annotationsPromise","pageOpList","annotations","opListPromises","opLists","getTextContent","getAnnotationsData","annotationsData","annotationRefs","annotationRef","AnnotationFactory","find","needle","backwards","DocumentInfoValidators","Title","Author","Subject","Keywords","Creator","Producer","CreationDate","ModDate","Trapped","pdfFormatVersion","acroForm","xfa","fields","linearization","checkHeader","parseStartXRef","documentInfo","infoDict","docInfo","PDFFormatVersion","IsAcroFormPresent","IsXFAPresent","validEntries","fileID","idArray","hex","_ccitt","ccittFaxDecoder","EndOfLine","EncodedByteAlign","Columns","Rows","EndOfBlock","BlackIs1","_jbig","jbig2Image","Jbig2Image","globalsStream","globals","parseChunks","Jbig2Error","ContextCache","DecodingContext","decodeInteger","contextCache","procedure","getContexts","prev","decodeIAID","SegmentTypes","CodingTemplates","RefinementTemplates","coding","reference","ReusedContexts","RefinementReusedContexts","decodeBitmap","mmr","templateIndex","prediction","at","decodingContext","decodeMMRBitmap","Reader","pixel","row1","row2","decodeBitmapTemplate0","useskip","template","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","minX","minY","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","j0","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ltp","decodeRefinement","referenceBitmap","codingTemplate","codingTemplateLength","codingTemplateX","codingTemplateY","referenceTemplate","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","decodeTextRegion","huffman","refinement","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","symbolCodeLength","transposed","dsOffset","referenceCorner","combinationOperator","huffmanTables","refinementTemplateIndex","refinementAt","logStripSize","huffmanInput","stripT","tableDeltaT","firstS","currentS","tableFirstS","currentT","symbolId","symbolIDTable","applyRefinement","symbolBitmap","symbolWidth","symbolHeight","rdw","rdh","symbolRow","offsetT","offsetS","maxWidth","deltaS","tableDeltaS","readSegmentHeader","segmentHeader","segmentType","typeName","deferredNonRetain","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","referredToSegmentNumberSize","referredTo","pageAssociation","genericRegionInfo","readRegionSegmentInformation","genericRegionMmr","RegionSegmentInformationFieldLength","searchPattern","headerEnd","readSegments","segments","segment","randomAccess","processSegment","atLength","dictionary","dictionaryFlags","huffmanDHSelector","huffmanDWSelector","bitmapSizeSelector","aggregationInstancesSelector","bitmapCodingContextUsed","bitmapCodingContextRetained","refinementTemplate","numberOfExportedSymbols","numberOfNewSymbols","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","huffmanFS","huffmanDS","huffmanDT","huffmanRefinementDW","huffmanRefinementDH","huffmanRefinementDX","huffmanRefinementDY","huffmanRefinementSizeSelector","patternDictionary","patternDictionaryFlags","patternWidth","patternHeight","maxPatternIndex","halftoneRegion","halftoneRegionFlags","enableSkip","gridWidth","gridHeight","gridOffsetX","gridOffsetY","gridVectorX","gridVectorY","genericRegion","genericRegionSegmentFlags","pageInfo","resolutionX","resolutionY","pageSegmentFlags","lossless","requiresBuffer","combinationOperatorOverride","callbackName","processSegments","SimpleSegmentVisitor","HuffmanLine","lineData","isOOB","rangeLow","prefixLength","rangeLength","prefixCode","isLowerRange","HuffmanTreeNode","line","children","isLeaf","HuffmanTable","lines","prefixCodesDone","assignPrefixCodes","rootNode","buildTree","onPageInformation","currentPageInfo","drawBitmap","regionInfo","mask","mask0","onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","onSymbolDictionary","currentSegment","referredSegments","customTables","customIndex","tableDeltaHeight","tableDeltaWidth","getStandardTable","getCustomHuffmanTable","tableBitmapSize","tableAggregateInstances","getSymbolDictionaryHuffmanTables","symbols","referredSymbols","newSymbols","currentHeight","tableB1","symbolWidths","currentWidth","totalWidth","firstSymbol","deltaWidth","numberOfInstances","rdx","rdy","bitmapSize","collectiveBitmap","readUncompressedBitmap","originalEnd","bitmapEnd","numberOfSymbolsDecoded","xMin","xMax","exportedSymbols","currentFlag","totalSymbolsLength","runLength","decodeSymbolDictionary","onImmediateTextRegion","numberOfSymbols","runCodesTable","repeatedLength","numberOfRepeats","getTextRegionHuffmanTables","onImmediateLosslessTextRegion","onPatternDictionary","patterns","patternBitmap","decodePatternDictionary","onImmediateHalftoneRegion","regionWidth","regionHeight","regionBitmap","numberOfPatterns","pattern0","bitsPerValue","grayScaleBitPlanes","mmrInput","mg","ng","patternIndex","patternRow","regionRow","regionX","regionY","decodeHalftoneRegion","onImmediateLosslessHalftoneRegion","onTables","lowestValue","highestValue","prefixSizeBits","rangeSizeBits","currentRangeLow","decodeTablesSegment","decodeNode","htOffset","linesLength","prefixLengthMax","histogram","currentLength","firstCode","currentCode","currentTemp","standardTablesCache","currentByte","endOfBlock","numBits","parseJbig2Chunks","JpegError","DNLMarkerError","scanLines","dctZigZag","dctCos1","dctSin1","dctCos3","dctSin3","dctCos6","dctSin6","dctSqrt2","dctSqrt1d2","buildHuffmanTable","getBlockBufferOffset","col","blocksPerLine","decodeScan","frame","resetInterval","spectralStart","spectralEnd","successivePrev","successive","parseDNLMarker","mcusPerLine","progressive","startOffset","bitsData","bitsCount","nextByte","decodeHuffman","tree","receive","receiveAndExtend","eobrun","successiveACNextValue","successiveACState","decodeMcu","mcu","mcuCol","decodeBlock","decodeFn","componentsLength","huffmanTableDC","blockData","pred","rs","huffmanTableAC","offsetZ","fileMarker","mcuExpected","blocksPerColumn","mcusPerColumn","mcuToRead","findNextFileMarker","quantizeAndInverse","blockBufferOffset","v3","v4","v5","v6","v7","p0","p5","p6","p7","qt","quantizationTable","buildComponentData","computationBuffer","Int16Array","blockRow","blockCol","currentPos","peekUint16","maxPos","newPos","currentMarker","newMarker","_ref$dnlScanLines","dnlScanLines","readDataBlock","endOffset","prepareComponents","samplesPerLine","maxH","maxV","blocksPerLineForMcu","blocksBufferSize","jfif","adobe","numSOSMarkers","quantizationTables","huffmanTablesAC","huffmanTablesDC","appData","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesEnd","quantizationTableSpec","tableData","extended","sofScanLines","componentIds","componentId","qId","quantizationId","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","componentIndex","tableSpec","successiveApproximation","nextFileMarker","scaleX","scaleY","numComponents","_getLinearizedBlockData","componentScaleX","componentScaleY","blocksPerScanline","xScaleBlockOffset","_isColorConversionNeeded","_convertYccToRgb","Cb","Cr","_convertYcckToRgb","_convertYcckToCmyk","_convertCmykToRgb","forceRGBoutput","rgbData","grayColor","_jpx","jpxImage","tileCount","tileComponents","tileWidth","tileHeight","tileLeft","tileTop","srcPosition","dataPosition","tileRowSize","AnnotationBorderStyle","Annotation","_get","receiver","desc","parameters","LinkAnnotation","TextAnnotation","fieldType","TextWidgetAnnotation","ButtonWidgetAnnotation","ChoiceWidgetAnnotation","WidgetAnnotation","PopupAnnotation","LineAnnotation","SquareAnnotation","CircleAnnotation","PolylineAnnotation","PolygonAnnotation","HighlightAnnotation","UnderlineAnnotation","SquigglyAnnotation","StrikeOutAnnotation","StampAnnotation","FileAttachmentAnnotation","setFlags","setRectangle","setColor","setBorderStyle","setAppearance","annotationFlags","borderStyle","hasAppearance","appearance","flag","_hasFlag","dictType","setWidth","setStyle","setDashArray","setHorizontalCornerRadius","setVerticalCornerRadius","appearanceStates","normalAppearanceState","hasPopup","contents","renderForms","appearanceDict","bbox","maxY","getTransformMatrix","_isViewable","_isPrintable","dashArray","horizontalCornerRadius","verticalCornerRadius","isValid","allZeros","element","radius","_Annotation","annotationType","fieldName","_constructFieldName","fieldValue","alternativeText","defaultAppearance","fieldResources","fieldFlags","readOnly","hasFieldFlag","loopDict","_WidgetAnnotation","alignment","textAlignment","maximumLength","multiLine","comb","_WidgetAnnotation2","checkBox","radioButton","pushButton","_processCheckBox","_processRadioButton","_processPushButton","buttonValue","fieldParent","fieldParentValue","_WidgetAnnotation3","_this5","option","isOptionArray","exportValue","displayValue","combo","multiSelect","_Annotation2","_this6","_preparePopup","_Annotation3","_this7","_Annotation4","_this8","parentItem","parentSubtype","parentType","parentId","parentFlags","_Annotation5","_this9","lineCoordinates","_Annotation6","_this10","_Annotation7","_this11","_Annotation8","_this12","rawVertices","vertices","_PolylineAnnotation","_this13","_Annotation9","_this14","_Annotation10","_this15","_Annotation11","_this16","_Annotation12","_this17","_Annotation13","_this18","_Annotation14","_this19","_cmap","_fonts","_unicode","_standard_fonts","_pattern","_bidi","_glyphlist","_metrics","_murmurhash","_image","DefaultPartialEvaluatorOptions","NativeImageDecoder","_ref$forceDataSchema","_ref3$options","fetchBuiltInCMap","cachedCMap","compressionType","canDecode","image","isDecodable","colorSpace","isSupported","TimeSlotManager","endTime","deferred","newOptions","newEvaluator","nodes","graphicStates","graphicStatesKeys","bm","xObjects","xObjectsKeys","xObject","xResources","buildFormXObject","xobj","initialState","group","groupOptions","isolated","knockout","groupSubtype","backdrop","buildPaintImageXObject","_ref4$isInline","isInline","_ref4$forceDisableNat","forceDisableNativeImageDecoder","bitStrideLength","imgArray","PDFImage","createMask","imageIsFromDecodeStream","inverseDecode","softMask","createImageData","nativeImageDecoder","buildImage","nativeDecoder","imageObj","handleSMask","stateManager","smaskContent","smaskOptions","transferObj","transferFn","transferMap","handleTilingType","patternDict","tilingOpList","resourcesArray","patternResources","getTilingPatternIR","tilingPatternIR","handleSetFont","fontArgs","fontRef","fontName","loadFont","isType3Font","loadType3Data","TranslatedFont","ErrorFont","loadedName","handleText","glyphs","charsToGlyphs","isAddToPathSet","textRenderingMode","fillColorSpace","buildPath","fontChar","renderer","hasBuiltPath","path","getPathJs","glyph","accent","gState","gStateObj","gStateKeys","_loop","normalizeBlendMode","errorFont","fontRes","fontID","translatedPromise","fontCapability","preEvaluatedFont","preEvaluateFont","fontRefIsRef","fontAliases","aliasFontRef","Font","getFontID","translateFont","translatedFont","fontType","fontFile3","getFontType","lastIndex","opArgs","handleColorN","patternName","typeNum","shading","Pattern","parseShading","_ref5$initialState","EvalState","xobjs","StateManager","preprocessor","EvaluatorPreprocessor","timeSlotManager","closePendingRestoreOPS","savedStatesDepth","promiseBody","stop","resolveXObject","rejectXObject","fontSize","combinedGlyphs","arrItem","strokeColorSpace","shadingRes","patternIR","dictName","extGState","_ref6$stateManager","_ref6$normalizeWhites","_ref6$combineTextItem","_ref6$seenStyles","seenStyles","TextState","textState","WhitespaceRegexp","textContent","styles","textContentItem","vertical","lastAdvanceWidth","lastAdvanceHeight","textAdvanceScale","spaceWidth","fakeSpaceMin","fakeMultiSpaceMin","fakeMultiSpaceMax","textRunBreakAllowed","SPACE_FACTOR","MULTI_SPACE_FACTOR","MULTI_SPACE_FACTOR_MAX","skipEmptyXObjs","ensureTextContentItem","fontFamily","fallbackName","tsm","textHScale","textRise","glyphHeight","trm","ctm","textMatrix","textLineMatrix","scaleLineX","scaleCtmX","isMonospace","runBidiTransform","textChunk","bidiResult","bidi","replaceWhitespace","buildTextContentItem","glyphWidth","vmetric","glyphUnicode","NormalizedUnicodes","charSpacing","wordSpacing","addFakeSpaces","tx","ty","translateTextMatrix","fakeSpaces","flushTextContentItem","enqueueChunk","advance","fontNameArg","fontSizeArg","leading","isSameTextLine","translateTextLineMatrix","carriageReturn","calcTextLineMatrixAdvance","setTextLineMatrix","breakTextRun","currentState","xObjStateManager","sinkWrapper","enqueueInvoked","gStateFont","extractDataStructures","baseDict","toUnicode","toUnicodePromise","readToUnicode","composite","cidSystemInfo","registry","ordering","supplement","cidToGidMap","readCidToGidMap","differences","baseEncodingName","diffEncoding","defaultEncoding","isSymbolicFont","FontFlags","Symbolic","isNonsymbolicFont","Nonsymbolic","hasEncoding","buildToUnicode","_buildSimpleFontToUnicode","charcode","glyphName","ToUnicodeMap","hasIncludedToUnicodeMap","fallbackToUnicode","cMap","builtInCMap","IdentityCMap","ucs2CMapName","CMapFactory","useCMap","ucs2CMap","ucs2","IdentityToUnicodeMap","firstChar","lastChar","cmapObj","cmap","getMap","charCode","cidToGidStream","glyphsData","glyphID","extractWidths","defaultVMetrics","glyphsWidths","glyphsVMetrics","vmetrics","baseFontName","metrics","getBaseFontMetrics","buildCharCodeToWidth","firstWidth","FixedPitch","isSerifFont","fontNameWoStyle","monospace","lookupName","Metrics","getMetrics","glyphWidths","widthsByGlyphName","uint8array","df","MurmurHash3_64","update","diffLength","diffBuf","diffEntry","hexdigest","maxCharIndex","Serif","baseFont","fontNameStr","baseFontStr","cMapPromise","fontFile","length1","length2","length3","wideChars","fixedPitch","xHeight","capHeight","italicAngle","cidEncoding","type3Loaded","sent","fontData","exportData","parentOperatorList","type3Options","type3Evaluator","loadCharProcsPromise","charProcs","fontResources","charProcKeys","charProcOperatorList","_loop2","glyphStream","stateStack","old","txDiff","tyDiff","denominator","calcRenderMatrix","getOPMap","numArgs","variableArgs","opMap","nonProcessedArgs","opSpec","argsLength","preprocessCommand","CMap","BUILT_IN_CMAPS","codespaceRanges","numCodespaceRanges","addCodespaceRange","mapCidRange","dstLow","mapBfRange","lastByte","mapBfRangeToArray","mapOne","contains","charCodeOf","readCharCode","codespaceRangesLen","codespaceRange","isIdentityCMap","BinaryCMapReader","hexToInt","hexToStr","addHex","incHex","MAX_NUM_SIZE","MAX_ENCODED_NUM_SIZE","BinaryCMapStream","readByte","readNumber","readSigned","readHex","readHexNumber","sp","readHexSigned","readString","sequence","dataSize","subitemsCount","strToInt","expectString","expectInt","parseBfChar","parseBfRange","parseCidChar","parseCidRange","parseCodespaceRange","parseWMode","parseCMapName","parseCMap","previous","embeddedUseCMap","objLoop","extendCMap","createBuiltInCMap","newCMap","useCodespaceRanges","cMapData","parsedCMap","ProblematicCharRanges","PRIVATE_USE_OFFSET_END","PRIVATE_USE_OFFSET_START","SEAC_ANALYSIS_ENABLED","_cff_parser","_font_renderer","_type1_parser","SKIP_PRIVATE_USE_RANGE_F000_TO_F01F","PDF_GLYPH_SPACE_UNITS","Script","Italic","AllCap","SmallCap","ForceBold","MacStandardGlyphOrdering","adjustWidths","recoverGlyphName","Glyph","operatorListId","isInFont","matchesForCache","amend","OpenTypeFileBuilder","writeInt16","writeInt32","writeData","sfnt","getSearchParams","entriesCount","entrySize","maxPower2","searchRange","rangeShift","toArray","tablesNames","tableName","numTables","tableOffsets","searchParams","checksum","addTable","sizes","missingFile","glyphCache","toFontChar","fallbackToSystemFont","isTrueTypeFile","isOpenTypeFile","isType1File","mimetype","CFFFont","Type1Font","convert","checkAndRepair","isOpenType","seacMap","loading","ID","int16","signedInt16","string16","safeString16","buildToFontChar","isProblematicUnicodeLocation","adjustMapping","charCodeToGlyphId","missingGlyphs","isSymbolic","isIdentityUnicode","newMap","usedFontCharCodes","nextAvailableFontCharCode","originalCharCode","glyphId","fontCharCode","hasUnicodeValue","createCmapTable","numGlyphs","codeIndices","getRanges","bmpLength","trailingRangesCount","segCount","startCount","endCount","idDeltas","idRangeOffsets","glyphsIds","contiguous","format314","format31012","header31012","createOS2Table","charstrings","override","unitsPerEm","yMax","yMin","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","firstCharIndex","lastCharIndex","typoAscent","typoDescent","winAscent","winDescent","createPostTable","angle","createNameTable","stringsUnicode","strBufUnicode","platforms","encodings","languages","namesRecordCount","nameTable","strOffset","strs","FontRendererFactory","stdFontMap","nonStdFontMap","isStandardFont","remeasure","GlyphMapForStandardFonts","SupplementalGlyphMapForArialBlack","SupplementalGlyphMapForCalibri","unicodeCharCode","VALID_TABLES","readTables","readTableEntry","previousPosition","readOpenTypeHeader","ttf","entrySelector","sanitizeGlyph","sourceStart","sourceEnd","hintsValid","glyphProfile","sizeOfInstructions","glyf","contoursCount","flagsCount","instructionsStart","instructionsLength","instructionsEnd","coordinatesLength","xyLength","repeat","glyphDataLength","readNameTable","numRecords","stringsStart","records","platform","language","record","TTOpsStackDeltas","sanitizeTTProgram","ttContext","funcId","lastEndf","lastDeff","callstack","functionsCalled","tooComplexToFollowFunctions","inFDEF","ifLevel","inELSE","functionsStackDeltas","stackTop","functionsDefined","functionsUsed","foldTTTable","isTrueTypeCollectionFile","ttcData","ttc","_readTrueTypeCollecti","ttcTag","majorVersion","minorVersion","numFonts","offsetTable","dsigTag","dsigLength","dsigOffset","readTrueTypeCollectionHeader","potentialHeader","potentialTables","nameEntry","readTrueTypeCollectionData","cffFile","isTrueType","maxFunctionDefs","maxSizeOfInstructions","dupFirstEntry","fpgm","prep","cvt","checkInvalidFunctions","cvtData","sanitizeTTPrograms","numOfMetrics","numMissing","sanitizeMetrics","locaLength","indexToLocFormat","numGlyphsPlusOne","sanitizeHead","isGlyphLocationsLong","glyphsInfo","loca","itemSize","itemDecode","itemEncode","locaData","locaDataSize","oldGlyfData","oldGlyfDataLength","newGlyfData","writeOffset","locaCount","simpleGlyph","firstEntryLength","sanitizeGlyphLocations","metricsOverride","post","maxpNumGlyphs","glyphNames","glyphNameIndexes","customNames","stringLength","readPostScriptTable","hasGlyph","isCidToGidMapEmpty","cmapTable","platformId","encodingId","mappings","hasShortCmap","potentialTable","canBreak","useTable","segIndex","offsetsCount","rangeOffset","offsetIndex","readCmapTable","cmapPlatformId","cmapEncodingId","cmapMappings","cmapMappingsLength","standardGlyphName","unicodeOrCharCode","newMapping","os2","selection","validateOS2Table","compiler","namePrototype","builder","tableTag","builtInEncoding","adjustToUnicode","getGlyphMapping","getCharCodes","charCodes","createCharCode","getCharset","baseGlyphName","accentGlyphName","baseGlyphId","accentGlyphId","accentOffset","baseFontCharCode","accentFontCharCode","tan","cffWidths","hmtx","_shadowWidth","possibleSpaceReplacements","charToGlyph","widthCode","charsCache","charsCacheKey","type1FontGlyphMapping","findBlock","streamBytes","signature","startIndex","streamBytesLength","signatureLength","headerBlockLength","pfbHeader","pfbHeaderPresent","headerBlock","suggestedLength","headerBytes","headerBytesLength","block","actualLength","EEXEC_SIGNATURE","streamStartPos","getHeaderBlock","Type1Parser","extractFontHeader","eexecBytes","eexecBlock","extractFontProgram","type2Charstrings","getType2Charstrings","getType2Subrs","wrap","getSeacs","type1Charstrings","type1Subrs","type2Subrs","charsetArray","charStringsIndex","field","privateData","subrIndex","charsets","userAgent","getLong","getUshort","parseCmap","idDelta","idOffset","groups","parseCff","gsubrs","isCFFCIDFont","lookupCmap","CompiledFont","compiledGlyphs","compiledCharCodeToGlyphId","TrueTypeCompiled","Type2Compiled","cffInfo","glyphNameMap","gsubrsBias","subrsBias","compileGlyph","cmds","compileGlyphImpl","compileGlyf","quadraticCurveTo","xa","ya","numberOfContours","scale01","scale10","subglyph","endPtsOfContours","numberOfPoints","points","startPoint","endPoint","contour","compileCharString","stems","bezierCurveTo","xb","yb","subrCode","stackClean","numSubrs","achar","bchar","parseGlyfTable","Type1CharString","COMMAND_MAP","lsb","flexing","encoded","wx","sbx","dy","executeCommand","sby","flexArgs","howManyArgs","command","keepStack","stackLength","EEXEC_ENCRYPT_KEY","isHexDigit","discardNumber","decrypted","isSpecial","encrypted","isBinary","digit1","digit2","decryptAscii","readNumberArray","getToken","readInt","readBoolean","readCharStrings","lenIV","program","blueArray","charString","encodingArg","ShadingType","FUNCTION_BASED","AXIAL","RADIAL","FREE_FORM_MESH","LATTICE_FORM_MESH","COONS_PATCH_MESH","TENSOR_PATCH_MESH","getPattern","Shadings","RadialAxial","Mesh","Dummy","SMALL_NUMBER","coordsArr","shadingType","t0","domainArr","extendStart","extendEnd","extendArr","r1","r2","distance","createFromArray","colorStops","ratio","cssColor","background","r0","MeshStreamReader","tmpCompsBuf","csNumComps","tmpCsCompsBuf","colorFn","hasData","align","readFlag","bitsPerFlag","readCoordinate","bitsPerCoordinate","xi","yi","readComponents","ci","MIN_SPLIT_PATCH_CHUNKS_AMOUNT","MAX_SPLIT_PATCH_CHUNKS_AMOUNT","TRIANGLE_DENSITY","getB","lut","t_","buildB","buildFigureFromPatch","mesh","figure","figures","coords","pi","figureMinX","figureMinY","figureMaxX","figureMaxY","splitXBy","splitYBy","verticesPerRow","figureCoords","figureColors","cl","cr","c2","c3","bRow","bCol","newColor","updateBounds","patchMesh","ps","verticesLeft","coord","decodeType4Shading","decodeType5Shading","tmp4","decodeType6Shading","decodeType7Shading","coordsPacked","xy","colorsPacked","packData","xstep","ystep","paintType","tilingType","baseTypes","arabicTypes","isOdd","isEven","findUnequal","setValues","reverseValues","createBidiText","isLTR","startLevel","strLength","numBidi","charType","sor","eor","lastType","before","after","highestLevel","lowestOddLevel","nextToken","accept","expect","PostScriptTokenTypes","LBRACE","parseBlock","RBRACE","NUMBER","OPERATOR","parseCondition","conditionLocation","IF","jumpLocation","endOfTrue","IFELSE","PostScriptToken","opCache","getOperator","opValue","seed","blockCounts","tailLength","dataUint32","k2","C1","C2","handleImageData","decodeAndClamp","addend","coefficient","resizeImageMask","_ref$isInline","_ref$smask","_ref$mask","_ref$isMask","isMask","matte","needsDecode","decodeCoefficients","decodeAddends","smaskPromise","maskPromise","_ref2$isInline","_ref2$nativeDecoder","imagePromise","imageData","smaskData","maskData","computedLength","decodeBuffer","getComponents","bufferPos","rowComps","loop1End","loop2End","remainingBits","fillOpacity","rgbaBuf","alphaBuf","sw","sh","fillGrayBuffer","opacity","imageOffset","maskOffset","undoPreblend","matteRgb","matteR","matteG","matteB","forceRGBA","getImageBytes","newArray","imageLength","maybeUndoPreblend"],"mappings":"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A,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eA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ACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GA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AEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,QAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,O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,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,aAGA36B,EAAAuwI,cAIA,S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","file":"b47a11872c7377ec2f77.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"wk5V\");\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b47a11872c7377ec2f77","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = DuR2\n// module chunks = 0","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/base64-js/index.js\n// module id = EKta\n// module chunks = 0","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/buffer/index.js\n// module id = EuP9\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = W2nU\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/isarray/index.js\n// module id = sOR5\n// module chunks = 0","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ieee754/index.js\n// module id = ujcs\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf.worker\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf.worker\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf.worker\"] = root.pdfjsWorker = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __w_pdfjs_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__w_pdfjs_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__w_pdfjs_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__w_pdfjs_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__w_pdfjs_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__w_pdfjs_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 73);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unreachable = exports.warn = exports.utf8StringToString = exports.stringToUTF8String = exports.stringToPDFString = exports.stringToBytes = exports.string32 = exports.shadow = exports.setVerbosityLevel = exports.ReadableStream = exports.removeNullCharacters = exports.readUint32 = exports.readUint16 = exports.readInt8 = exports.log2 = exports.isEvalSupported = exports.isLittleEndian = exports.createValidAbsoluteUrl = exports.isSameOrigin = exports.isSpace = exports.isString = exports.isNum = exports.isEmptyObj = exports.isBool = exports.isArrayBuffer = exports.info = exports.getVerbosityLevel = exports.getLookupTableFactory = exports.getInheritableProperty = exports.deprecated = exports.createObjectURL = exports.createPromiseCapability = exports.createBlob = exports.bytesToString = exports.assert = exports.arraysToBytes = exports.arrayByteLength = exports.FormatError = exports.XRefParseException = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.PasswordResponses = exports.PasswordException = exports.PageViewport = exports.NotImplementedException = exports.NativeImageDecoding = exports.MissingPDFException = exports.MissingDataException = exports.MessageHandler = exports.InvalidPDFException = exports.AbortException = exports.CMapCompressionType = exports.ImageKind = exports.FontType = exports.AnnotationType = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.UNSUPPORTED_FEATURES = exports.VerbosityLevel = exports.OPS = exports.IDENTITY_MATRIX = exports.FONT_IDENTITY_MATRIX = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n__w_pdfjs_require__(75);\n\nvar _streams_polyfill = __w_pdfjs_require__(130);\n\nvar FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\nvar NativeImageDecoding = {\n  NONE: 'none',\n  DECODE: 'decode',\n  DISPLAY: 'display'\n};\nvar TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4\n};\nvar ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3\n};\nvar AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26\n};\nvar AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200\n};\nvar AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000\n};\nvar AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5\n};\nvar StreamType = {\n  UNKNOWN: 0,\n  FLATE: 1,\n  LZW: 2,\n  DCT: 3,\n  JPX: 4,\n  JBIG: 5,\n  A85: 6,\n  AHX: 7,\n  CCF: 8,\n  RL: 9\n};\nvar FontType = {\n  UNKNOWN: 0,\n  TYPE1: 1,\n  TYPE1C: 2,\n  CIDFONTTYPE0: 3,\n  CIDFONTTYPE0C: 4,\n  TRUETYPE: 5,\n  CIDFONTTYPE2: 6,\n  TYPE3: 7,\n  OPENTYPE: 8,\n  TYPE0: 9,\n  MMTYPE1: 10\n};\nvar VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5\n};\nvar CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2\n};\nvar OPS = {\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91\n};\nvar verbosity = VerbosityLevel.WARNINGS;\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\nfunction getVerbosityLevel() {\n  return verbosity;\n}\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log('Info: ' + msg);\n  }\n}\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log('Warning: ' + msg);\n  }\n}\nfunction deprecated(details) {\n  console.log('Deprecated API usage: ' + details);\n}\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\nvar UNSUPPORTED_FEATURES = {\n  unknown: 'unknown',\n  forms: 'forms',\n  javaScript: 'javaScript',\n  smask: 'smask',\n  shadingPattern: 'shadingPattern',\n  font: 'font'\n};\nfunction isSameOrigin(baseUrl, otherUrl) {\n  try {\n    var base = new URL(baseUrl);\n    if (!base.origin || base.origin === 'null') {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n  var other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\nfunction isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case 'http:':\n    case 'https:':\n    case 'ftp:':\n    case 'mailto:':\n    case 'tel:':\n      return true;\n    default:\n      return false;\n  }\n}\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    var absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {}\n  return null;\n}\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value: value,\n    enumerable: true,\n    configurable: true,\n    writable: false\n  });\n  return value;\n}\nfunction getLookupTableFactory(initializer) {\n  var lookup;\n  return function () {\n    if (initializer) {\n      lookup = Object.create(null);\n      initializer(lookup);\n      initializer = null;\n    }\n    return lookup;\n  };\n}\nvar PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2\n};\nvar PasswordException = function PasswordExceptionClosure() {\n  function PasswordException(msg, code) {\n    this.name = 'PasswordException';\n    this.message = msg;\n    this.code = code;\n  }\n  PasswordException.prototype = new Error();\n  PasswordException.constructor = PasswordException;\n  return PasswordException;\n}();\nvar UnknownErrorException = function UnknownErrorExceptionClosure() {\n  function UnknownErrorException(msg, details) {\n    this.name = 'UnknownErrorException';\n    this.message = msg;\n    this.details = details;\n  }\n  UnknownErrorException.prototype = new Error();\n  UnknownErrorException.constructor = UnknownErrorException;\n  return UnknownErrorException;\n}();\nvar InvalidPDFException = function InvalidPDFExceptionClosure() {\n  function InvalidPDFException(msg) {\n    this.name = 'InvalidPDFException';\n    this.message = msg;\n  }\n  InvalidPDFException.prototype = new Error();\n  InvalidPDFException.constructor = InvalidPDFException;\n  return InvalidPDFException;\n}();\nvar MissingPDFException = function MissingPDFExceptionClosure() {\n  function MissingPDFException(msg) {\n    this.name = 'MissingPDFException';\n    this.message = msg;\n  }\n  MissingPDFException.prototype = new Error();\n  MissingPDFException.constructor = MissingPDFException;\n  return MissingPDFException;\n}();\nvar UnexpectedResponseException = function UnexpectedResponseExceptionClosure() {\n  function UnexpectedResponseException(msg, status) {\n    this.name = 'UnexpectedResponseException';\n    this.message = msg;\n    this.status = status;\n  }\n  UnexpectedResponseException.prototype = new Error();\n  UnexpectedResponseException.constructor = UnexpectedResponseException;\n  return UnexpectedResponseException;\n}();\nvar NotImplementedException = function NotImplementedExceptionClosure() {\n  function NotImplementedException(msg) {\n    this.message = msg;\n  }\n  NotImplementedException.prototype = new Error();\n  NotImplementedException.prototype.name = 'NotImplementedException';\n  NotImplementedException.constructor = NotImplementedException;\n  return NotImplementedException;\n}();\nvar MissingDataException = function MissingDataExceptionClosure() {\n  function MissingDataException(begin, end) {\n    this.begin = begin;\n    this.end = end;\n    this.message = 'Missing data [' + begin + ', ' + end + ')';\n  }\n  MissingDataException.prototype = new Error();\n  MissingDataException.prototype.name = 'MissingDataException';\n  MissingDataException.constructor = MissingDataException;\n  return MissingDataException;\n}();\nvar XRefParseException = function XRefParseExceptionClosure() {\n  function XRefParseException(msg) {\n    this.message = msg;\n  }\n  XRefParseException.prototype = new Error();\n  XRefParseException.prototype.name = 'XRefParseException';\n  XRefParseException.constructor = XRefParseException;\n  return XRefParseException;\n}();\nvar FormatError = function FormatErrorClosure() {\n  function FormatError(msg) {\n    this.message = msg;\n  }\n  FormatError.prototype = new Error();\n  FormatError.prototype.name = 'FormatError';\n  FormatError.constructor = FormatError;\n  return FormatError;\n}();\nvar AbortException = function AbortExceptionClosure() {\n  function AbortException(msg) {\n    this.name = 'AbortException';\n    this.message = msg;\n  }\n  AbortException.prototype = new Error();\n  AbortException.constructor = AbortException;\n  return AbortException;\n}();\nvar NullCharactersRegExp = /\\x00/g;\nfunction removeNullCharacters(str) {\n  if (typeof str !== 'string') {\n    warn('The argument for removeNullCharacters must be a string.');\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, '');\n}\nfunction bytesToString(bytes) {\n  assert(bytes !== null && (typeof bytes === 'undefined' ? 'undefined' : _typeof(bytes)) === 'object' && bytes.length !== undefined, 'Invalid argument for bytesToString');\n  var length = bytes.length;\n  var MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  var strBuf = [];\n  for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    var chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join('');\n}\nfunction stringToBytes(str) {\n  assert(typeof str === 'string', 'Invalid argument for stringToBytes');\n  var length = str.length;\n  var bytes = new Uint8Array(length);\n  for (var i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xFF;\n  }\n  return bytes;\n}\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined);\n  return arr.byteLength;\n}\nfunction arraysToBytes(arr) {\n  if (arr.length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  var resultLength = 0;\n  var i,\n      ii = arr.length;\n  var item, itemLength;\n  for (i = 0; i < ii; i++) {\n    item = arr[i];\n    itemLength = arrayByteLength(item);\n    resultLength += itemLength;\n  }\n  var pos = 0;\n  var data = new Uint8Array(resultLength);\n  for (i = 0; i < ii; i++) {\n    item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === 'string') {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\nfunction string32(value) {\n  return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n}\nfunction log2(x) {\n  if (x <= 0) {\n    return 0;\n  }\n  return Math.ceil(Math.log2(x));\n}\nfunction readInt8(data, start) {\n  return data[start] << 24 >> 24;\n}\nfunction readUint16(data, offset) {\n  return data[offset] << 8 | data[offset + 1];\n}\nfunction readUint32(data, offset) {\n  return (data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3]) >>> 0;\n}\nfunction isLittleEndian() {\n  var buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  var view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nfunction isEvalSupported() {\n  try {\n    new Function('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction getInheritableProperty(_ref) {\n  var dict = _ref.dict,\n      key = _ref.key,\n      _ref$getArray = _ref.getArray,\n      getArray = _ref$getArray === undefined ? false : _ref$getArray,\n      _ref$stopWhenFound = _ref.stopWhenFound,\n      stopWhenFound = _ref$stopWhenFound === undefined ? true : _ref$stopWhenFound;\n\n  var LOOP_LIMIT = 100;\n  var loopCount = 0;\n  var values = void 0;\n  while (dict) {\n    var value = getArray ? dict.getArray(key) : dict.get(key);\n    if (value !== undefined) {\n      if (stopWhenFound) {\n        return value;\n      }\n      if (!values) {\n        values = [];\n      }\n      values.push(value);\n    }\n    if (++loopCount > LOOP_LIMIT) {\n      warn('getInheritableProperty: maximum loop count exceeded for \"' + key + '\"');\n      break;\n    }\n    dict = dict.get('Parent');\n  }\n  return values;\n}\nvar IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nvar Util = function UtilClosure() {\n  function Util() {}\n  var rgbBuf = ['rgb(', 0, ',', 0, ',', 0, ')'];\n  Util.makeCssRgb = function Util_makeCssRgb(r, g, b) {\n    rgbBuf[1] = r;\n    rgbBuf[3] = g;\n    rgbBuf[5] = b;\n    return rgbBuf.join('');\n  };\n  Util.transform = function Util_transform(m1, m2) {\n    return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n  };\n  Util.applyTransform = function Util_applyTransform(p, m) {\n    var xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    var yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  };\n  Util.applyInverseTransform = function Util_applyInverseTransform(p, m) {\n    var d = m[0] * m[3] - m[1] * m[2];\n    var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  };\n  Util.getAxialAlignedBoundingBox = function Util_getAxialAlignedBoundingBox(r, m) {\n    var p1 = Util.applyTransform(r, m);\n    var p2 = Util.applyTransform(r.slice(2, 4), m);\n    var p3 = Util.applyTransform([r[0], r[3]], m);\n    var p4 = Util.applyTransform([r[2], r[1]], m);\n    return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n  };\n  Util.inverseTransform = function Util_inverseTransform(m) {\n    var d = m[0] * m[3] - m[1] * m[2];\n    return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n  };\n  Util.apply3dTransform = function Util_apply3dTransform(m, v) {\n    return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n  };\n  Util.singularValueDecompose2dScale = function Util_singularValueDecompose2dScale(m) {\n    var transpose = [m[0], m[2], m[1], m[3]];\n    var a = m[0] * transpose[0] + m[1] * transpose[2];\n    var b = m[0] * transpose[1] + m[1] * transpose[3];\n    var c = m[2] * transpose[0] + m[3] * transpose[2];\n    var d = m[2] * transpose[1] + m[3] * transpose[3];\n    var first = (a + d) / 2;\n    var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    var sx = first + second || 1;\n    var sy = first - second || 1;\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  };\n  Util.normalizeRect = function Util_normalizeRect(rect) {\n    var r = rect.slice(0);\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  };\n  Util.intersect = function Util_intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n    var orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare),\n        orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare),\n        result = [];\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n    if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return false;\n    }\n    if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return false;\n    }\n    return result;\n  };\n  var ROMAN_NUMBER_MAP = ['', 'C', 'CC', 'CCC', 'CD', 'D', 'DC', 'DCC', 'DCCC', 'CM', '', 'X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC', '', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX'];\n  Util.toRoman = function Util_toRoman(number, lowerCase) {\n    assert(Number.isInteger(number) && number > 0, 'The number should be a positive integer.');\n    var pos,\n        romanBuf = [];\n    while (number >= 1000) {\n      number -= 1000;\n      romanBuf.push('M');\n    }\n    pos = number / 100 | 0;\n    number %= 100;\n    romanBuf.push(ROMAN_NUMBER_MAP[pos]);\n    pos = number / 10 | 0;\n    number %= 10;\n    romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]);\n    romanBuf.push(ROMAN_NUMBER_MAP[20 + number]);\n    var romanStr = romanBuf.join('');\n    return lowerCase ? romanStr.toLowerCase() : romanStr;\n  };\n  Util.appendToArray = function Util_appendToArray(arr1, arr2) {\n    Array.prototype.push.apply(arr1, arr2);\n  };\n  Util.prependToArray = function Util_prependToArray(arr1, arr2) {\n    Array.prototype.unshift.apply(arr1, arr2);\n  };\n  Util.extendObj = function extendObj(obj1, obj2) {\n    for (var key in obj2) {\n      obj1[key] = obj2[key];\n    }\n  };\n  Util.inherit = function Util_inherit(sub, base, prototype) {\n    sub.prototype = Object.create(base.prototype);\n    sub.prototype.constructor = sub;\n    for (var prop in prototype) {\n      sub.prototype[prop] = prototype[prop];\n    }\n  };\n  Util.loadScript = function Util_loadScript(src, callback) {\n    var script = document.createElement('script');\n    var loaded = false;\n    script.setAttribute('src', src);\n    if (callback) {\n      script.onload = function () {\n        if (!loaded) {\n          callback();\n        }\n        loaded = true;\n      };\n    }\n    document.getElementsByTagName('head')[0].appendChild(script);\n  };\n  return Util;\n}();\nvar PageViewport = function PageViewportClosure() {\n  function PageViewport(viewBox, scale, rotation, offsetX, offsetY, dontFlip) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n    var centerX = (viewBox[2] + viewBox[0]) / 2;\n    var centerY = (viewBox[3] + viewBox[1]) / 2;\n    var rotateA, rotateB, rotateC, rotateD;\n    rotation = rotation % 360;\n    rotation = rotation < 0 ? rotation + 360 : rotation;\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      default:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n    }\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n    var offsetCanvasX, offsetCanvasY;\n    var width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n    this.width = width;\n    this.height = height;\n    this.fontScale = scale;\n  }\n  PageViewport.prototype = {\n    clone: function PageViewPort_clone(args) {\n      args = args || {};\n      var scale = 'scale' in args ? args.scale : this.scale;\n      var rotation = 'rotation' in args ? args.rotation : this.rotation;\n      return new PageViewport(this.viewBox.slice(), scale, rotation, this.offsetX, this.offsetY, args.dontFlip);\n    },\n    convertToViewportPoint: function PageViewport_convertToViewportPoint(x, y) {\n      return Util.applyTransform([x, y], this.transform);\n    },\n    convertToViewportRectangle: function PageViewport_convertToViewportRectangle(rect) {\n      var tl = Util.applyTransform([rect[0], rect[1]], this.transform);\n      var br = Util.applyTransform([rect[2], rect[3]], this.transform);\n      return [tl[0], tl[1], br[0], br[1]];\n    },\n    convertToPdfPoint: function PageViewport_convertToPdfPoint(x, y) {\n      return Util.applyInverseTransform([x, y], this.transform);\n    }\n  };\n  return PageViewport;\n}();\nvar PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];\nfunction stringToPDFString(str) {\n  var i,\n      n = str.length,\n      strBuf = [];\n  if (str[0] === '\\xFE' && str[1] === '\\xFF') {\n    for (i = 2; i < n; i += 2) {\n      strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n    }\n  } else {\n    for (i = 0; i < n; ++i) {\n      var code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join('');\n}\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\nfunction isEmptyObj(obj) {\n  for (var key in obj) {\n    return false;\n  }\n  return true;\n}\nfunction isBool(v) {\n  return typeof v === 'boolean';\n}\nfunction isNum(v) {\n  return typeof v === 'number';\n}\nfunction isString(v) {\n  return typeof v === 'string';\n}\nfunction isArrayBuffer(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.byteLength !== undefined;\n}\nfunction isSpace(ch) {\n  return ch === 0x20 || ch === 0x09 || ch === 0x0D || ch === 0x0A;\n}\nfunction createPromiseCapability() {\n  var capability = {};\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = resolve;\n    capability.reject = reject;\n  });\n  return capability;\n}\nvar createBlob = function createBlob(data, contentType) {\n  if (typeof Blob !== 'undefined') {\n    return new Blob([data], { type: contentType });\n  }\n  throw new Error('The \"Blob\" constructor is not supported.');\n};\nvar createObjectURL = function createObjectURLClosure() {\n  var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  return function createObjectURL(data, contentType) {\n    var forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (!forceDataSchema && URL.createObjectURL) {\n      var blob = createBlob(data, contentType);\n      return URL.createObjectURL(blob);\n    }\n    var buffer = 'data:' + contentType + ';base64,';\n    for (var i = 0, ii = data.length; i < ii; i += 3) {\n      var b1 = data[i] & 0xFF;\n      var b2 = data[i + 1] & 0xFF;\n      var b3 = data[i + 2] & 0xFF;\n      var d1 = b1 >> 2,\n          d2 = (b1 & 3) << 4 | b2 >> 4;\n      var d3 = i + 1 < ii ? (b2 & 0xF) << 2 | b3 >> 6 : 64;\n      var d4 = i + 2 < ii ? b3 & 0x3F : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n}();\nfunction resolveCall(fn, args) {\n  var thisArg = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  if (!fn) {\n    return Promise.resolve(undefined);\n  }\n  return new Promise(function (resolve, reject) {\n    resolve(fn.apply(thisArg, args));\n  });\n}\nfunction wrapReason(reason) {\n  if ((typeof reason === 'undefined' ? 'undefined' : _typeof(reason)) !== 'object') {\n    return reason;\n  }\n  switch (reason.name) {\n    case 'AbortException':\n      return new AbortException(reason.message);\n    case 'MissingPDFException':\n      return new MissingPDFException(reason.message);\n    case 'UnexpectedResponseException':\n      return new UnexpectedResponseException(reason.message, reason.status);\n    default:\n      return new UnknownErrorException(reason.message, reason.details);\n  }\n}\nfunction makeReasonSerializable(reason) {\n  if (!(reason instanceof Error) || reason instanceof AbortException || reason instanceof MissingPDFException || reason instanceof UnexpectedResponseException || reason instanceof UnknownErrorException) {\n    return reason;\n  }\n  return new UnknownErrorException(reason.message, reason.toString());\n}\nfunction resolveOrReject(capability, success, reason) {\n  if (success) {\n    capability.resolve();\n  } else {\n    capability.reject(reason);\n  }\n}\nfunction finalize(promise) {\n  return Promise.resolve(promise).catch(function () {});\n}\nfunction MessageHandler(sourceName, targetName, comObj) {\n  var _this = this;\n\n  this.sourceName = sourceName;\n  this.targetName = targetName;\n  this.comObj = comObj;\n  this.callbackId = 1;\n  this.streamId = 1;\n  this.postMessageTransfers = true;\n  this.streamSinks = Object.create(null);\n  this.streamControllers = Object.create(null);\n  var callbacksCapabilities = this.callbacksCapabilities = Object.create(null);\n  var ah = this.actionHandler = Object.create(null);\n  this._onComObjOnMessage = function (event) {\n    var data = event.data;\n    if (data.targetName !== _this.sourceName) {\n      return;\n    }\n    if (data.stream) {\n      _this._processStreamMessage(data);\n    } else if (data.isReply) {\n      var callbackId = data.callbackId;\n      if (data.callbackId in callbacksCapabilities) {\n        var callback = callbacksCapabilities[callbackId];\n        delete callbacksCapabilities[callbackId];\n        if ('error' in data) {\n          callback.reject(wrapReason(data.error));\n        } else {\n          callback.resolve(data.data);\n        }\n      } else {\n        throw new Error('Cannot resolve callback ' + callbackId);\n      }\n    } else if (data.action in ah) {\n      var action = ah[data.action];\n      if (data.callbackId) {\n        var _sourceName = _this.sourceName;\n        var _targetName = data.sourceName;\n        Promise.resolve().then(function () {\n          return action[0].call(action[1], data.data);\n        }).then(function (result) {\n          comObj.postMessage({\n            sourceName: _sourceName,\n            targetName: _targetName,\n            isReply: true,\n            callbackId: data.callbackId,\n            data: result\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            sourceName: _sourceName,\n            targetName: _targetName,\n            isReply: true,\n            callbackId: data.callbackId,\n            error: makeReasonSerializable(reason)\n          });\n        });\n      } else if (data.streamId) {\n        _this._createStreamSink(data);\n      } else {\n        action[0].call(action[1], data.data);\n      }\n    } else {\n      throw new Error('Unknown action from worker: ' + data.action);\n    }\n  };\n  comObj.addEventListener('message', this._onComObjOnMessage);\n}\nMessageHandler.prototype = {\n  on: function on(actionName, handler, scope) {\n    var ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error('There is already an actionName called \"' + actionName + '\"');\n    }\n    ah[actionName] = [handler, scope];\n  },\n  send: function send(actionName, data, transfers) {\n    var message = {\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data: data\n    };\n    this.postMessage(message, transfers);\n  },\n  sendWithPromise: function sendWithPromise(actionName, data, transfers) {\n    var callbackId = this.callbackId++;\n    var message = {\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data: data,\n      callbackId: callbackId\n    };\n    var capability = createPromiseCapability();\n    this.callbacksCapabilities[callbackId] = capability;\n    try {\n      this.postMessage(message, transfers);\n    } catch (e) {\n      capability.reject(e);\n    }\n    return capability.promise;\n  },\n  sendWithStream: function sendWithStream(actionName, data, queueingStrategy, transfers) {\n    var _this2 = this;\n\n    var streamId = this.streamId++;\n    var sourceName = this.sourceName;\n    var targetName = this.targetName;\n    return new _streams_polyfill.ReadableStream({\n      start: function start(controller) {\n        var startCapability = createPromiseCapability();\n        _this2.streamControllers[streamId] = {\n          controller: controller,\n          startCall: startCapability,\n          isClosed: false\n        };\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          action: actionName,\n          streamId: streamId,\n          data: data,\n          desiredSize: controller.desiredSize\n        });\n        return startCapability.promise;\n      },\n      pull: function pull(controller) {\n        var pullCapability = createPromiseCapability();\n        _this2.streamControllers[streamId].pullCall = pullCapability;\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          stream: 'pull',\n          streamId: streamId,\n          desiredSize: controller.desiredSize\n        });\n        return pullCapability.promise;\n      },\n      cancel: function cancel(reason) {\n        var cancelCapability = createPromiseCapability();\n        _this2.streamControllers[streamId].cancelCall = cancelCapability;\n        _this2.streamControllers[streamId].isClosed = true;\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          stream: 'cancel',\n          reason: reason,\n          streamId: streamId\n        });\n        return cancelCapability.promise;\n      }\n    }, queueingStrategy);\n  },\n  _createStreamSink: function _createStreamSink(data) {\n    var _this3 = this;\n\n    var self = this;\n    var action = this.actionHandler[data.action];\n    var streamId = data.streamId;\n    var desiredSize = data.desiredSize;\n    var sourceName = this.sourceName;\n    var targetName = data.sourceName;\n    var capability = createPromiseCapability();\n    var sendStreamRequest = function sendStreamRequest(_ref2) {\n      var stream = _ref2.stream,\n          chunk = _ref2.chunk,\n          transfers = _ref2.transfers,\n          success = _ref2.success,\n          reason = _ref2.reason;\n\n      _this3.postMessage({\n        sourceName: sourceName,\n        targetName: targetName,\n        stream: stream,\n        streamId: streamId,\n        chunk: chunk,\n        success: success,\n        reason: reason\n      }, transfers);\n    };\n    var streamSink = {\n      enqueue: function enqueue(chunk) {\n        var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n        var transfers = arguments[2];\n\n        if (this.isCancelled) {\n          return;\n        }\n        var lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        sendStreamRequest({\n          stream: 'enqueue',\n          chunk: chunk,\n          transfers: transfers\n        });\n      },\n      close: function close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        sendStreamRequest({ stream: 'close' });\n        delete self.streamSinks[streamId];\n      },\n      error: function error(reason) {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        sendStreamRequest({\n          stream: 'error',\n          reason: reason\n        });\n      },\n\n      sinkCapability: capability,\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: desiredSize,\n      ready: null\n    };\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    resolveCall(action[0], [data.data, streamSink], action[1]).then(function () {\n      sendStreamRequest({\n        stream: 'start_complete',\n        success: true\n      });\n    }, function (reason) {\n      sendStreamRequest({\n        stream: 'start_complete',\n        success: false,\n        reason: reason\n      });\n    });\n  },\n  _processStreamMessage: function _processStreamMessage(data) {\n    var _this4 = this;\n\n    var sourceName = this.sourceName;\n    var targetName = data.sourceName;\n    var streamId = data.streamId;\n    var sendStreamResponse = function sendStreamResponse(_ref3) {\n      var stream = _ref3.stream,\n          success = _ref3.success,\n          reason = _ref3.reason;\n\n      _this4.comObj.postMessage({\n        sourceName: sourceName,\n        targetName: targetName,\n        stream: stream,\n        success: success,\n        streamId: streamId,\n        reason: reason\n      });\n    };\n    var deleteStreamController = function deleteStreamController() {\n      Promise.all([_this4.streamControllers[data.streamId].startCall, _this4.streamControllers[data.streamId].pullCall, _this4.streamControllers[data.streamId].cancelCall].map(function (capability) {\n        return capability && finalize(capability.promise);\n      })).then(function () {\n        delete _this4.streamControllers[data.streamId];\n      });\n    };\n    switch (data.stream) {\n      case 'start_complete':\n        resolveOrReject(this.streamControllers[data.streamId].startCall, data.success, wrapReason(data.reason));\n        break;\n      case 'pull_complete':\n        resolveOrReject(this.streamControllers[data.streamId].pullCall, data.success, wrapReason(data.reason));\n        break;\n      case 'pull':\n        if (!this.streamSinks[data.streamId]) {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: true\n          });\n          break;\n        }\n        if (this.streamSinks[data.streamId].desiredSize <= 0 && data.desiredSize > 0) {\n          this.streamSinks[data.streamId].sinkCapability.resolve();\n        }\n        this.streamSinks[data.streamId].desiredSize = data.desiredSize;\n        resolveCall(this.streamSinks[data.streamId].onPull).then(function () {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: true\n          });\n        }, function (reason) {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: false,\n            reason: reason\n          });\n        });\n        break;\n      case 'enqueue':\n        assert(this.streamControllers[data.streamId], 'enqueue should have stream controller');\n        if (!this.streamControllers[data.streamId].isClosed) {\n          this.streamControllers[data.streamId].controller.enqueue(data.chunk);\n        }\n        break;\n      case 'close':\n        assert(this.streamControllers[data.streamId], 'close should have stream controller');\n        if (this.streamControllers[data.streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[data.streamId].isClosed = true;\n        this.streamControllers[data.streamId].controller.close();\n        deleteStreamController();\n        break;\n      case 'error':\n        assert(this.streamControllers[data.streamId], 'error should have stream controller');\n        this.streamControllers[data.streamId].controller.error(wrapReason(data.reason));\n        deleteStreamController();\n        break;\n      case 'cancel_complete':\n        resolveOrReject(this.streamControllers[data.streamId].cancelCall, data.success, wrapReason(data.reason));\n        deleteStreamController();\n        break;\n      case 'cancel':\n        if (!this.streamSinks[data.streamId]) {\n          break;\n        }\n        resolveCall(this.streamSinks[data.streamId].onCancel, [wrapReason(data.reason)]).then(function () {\n          sendStreamResponse({\n            stream: 'cancel_complete',\n            success: true\n          });\n        }, function (reason) {\n          sendStreamResponse({\n            stream: 'cancel_complete',\n            success: false,\n            reason: reason\n          });\n        });\n        this.streamSinks[data.streamId].sinkCapability.reject(wrapReason(data.reason));\n        this.streamSinks[data.streamId].isCancelled = true;\n        delete this.streamSinks[data.streamId];\n        break;\n      default:\n        throw new Error('Unexpected stream case');\n    }\n  },\n  postMessage: function postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  },\n  destroy: function destroy() {\n    this.comObj.removeEventListener('message', this._onComObjOnMessage);\n  }\n};\nexports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\nexports.IDENTITY_MATRIX = IDENTITY_MATRIX;\nexports.OPS = OPS;\nexports.VerbosityLevel = VerbosityLevel;\nexports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\nexports.AnnotationBorderStyleType = AnnotationBorderStyleType;\nexports.AnnotationFieldFlag = AnnotationFieldFlag;\nexports.AnnotationFlag = AnnotationFlag;\nexports.AnnotationType = AnnotationType;\nexports.FontType = FontType;\nexports.ImageKind = ImageKind;\nexports.CMapCompressionType = CMapCompressionType;\nexports.AbortException = AbortException;\nexports.InvalidPDFException = InvalidPDFException;\nexports.MessageHandler = MessageHandler;\nexports.MissingDataException = MissingDataException;\nexports.MissingPDFException = MissingPDFException;\nexports.NativeImageDecoding = NativeImageDecoding;\nexports.NotImplementedException = NotImplementedException;\nexports.PageViewport = PageViewport;\nexports.PasswordException = PasswordException;\nexports.PasswordResponses = PasswordResponses;\nexports.StreamType = StreamType;\nexports.TextRenderingMode = TextRenderingMode;\nexports.UnexpectedResponseException = UnexpectedResponseException;\nexports.UnknownErrorException = UnknownErrorException;\nexports.Util = Util;\nexports.XRefParseException = XRefParseException;\nexports.FormatError = FormatError;\nexports.arrayByteLength = arrayByteLength;\nexports.arraysToBytes = arraysToBytes;\nexports.assert = assert;\nexports.bytesToString = bytesToString;\nexports.createBlob = createBlob;\nexports.createPromiseCapability = createPromiseCapability;\nexports.createObjectURL = createObjectURL;\nexports.deprecated = deprecated;\nexports.getInheritableProperty = getInheritableProperty;\nexports.getLookupTableFactory = getLookupTableFactory;\nexports.getVerbosityLevel = getVerbosityLevel;\nexports.info = info;\nexports.isArrayBuffer = isArrayBuffer;\nexports.isBool = isBool;\nexports.isEmptyObj = isEmptyObj;\nexports.isNum = isNum;\nexports.isString = isString;\nexports.isSpace = isSpace;\nexports.isSameOrigin = isSameOrigin;\nexports.createValidAbsoluteUrl = createValidAbsoluteUrl;\nexports.isLittleEndian = isLittleEndian;\nexports.isEvalSupported = isEvalSupported;\nexports.log2 = log2;\nexports.readInt8 = readInt8;\nexports.readUint16 = readUint16;\nexports.readUint32 = readUint32;\nexports.removeNullCharacters = removeNullCharacters;\nexports.ReadableStream = _streams_polyfill.ReadableStream;\nexports.setVerbosityLevel = setVerbosityLevel;\nexports.shadow = shadow;\nexports.string32 = string32;\nexports.stringToBytes = stringToBytes;\nexports.stringToPDFString = stringToPDFString;\nexports.stringToUTF8String = stringToUTF8String;\nexports.utf8StringToString = utf8StringToString;\nexports.warn = warn;\nexports.unreachable = unreachable;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar EOF = {};\nvar Name = function NameClosure() {\n  function Name(name) {\n    this.name = name;\n  }\n  Name.prototype = {};\n  var nameCache = Object.create(null);\n  Name.get = function Name_get(name) {\n    var nameValue = nameCache[name];\n    return nameValue ? nameValue : nameCache[name] = new Name(name);\n  };\n  return Name;\n}();\nvar Cmd = function CmdClosure() {\n  function Cmd(cmd) {\n    this.cmd = cmd;\n  }\n  Cmd.prototype = {};\n  var cmdCache = Object.create(null);\n  Cmd.get = function Cmd_get(cmd) {\n    var cmdValue = cmdCache[cmd];\n    return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n  };\n  return Cmd;\n}();\nvar Dict = function DictClosure() {\n  var nonSerializable = function nonSerializableClosure() {\n    return nonSerializable;\n  };\n  function Dict(xref) {\n    this._map = Object.create(null);\n    this.xref = xref;\n    this.objId = null;\n    this.suppressEncryption = false;\n    this.__nonSerializable__ = nonSerializable;\n  }\n  Dict.prototype = {\n    assignXref: function Dict_assignXref(newXref) {\n      this.xref = newXref;\n    },\n    get: function Dict_get(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      value = this._map[key3] || null;\n      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n    },\n    getAsync: function Dict_getAsync(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      value = this._map[key3] || null;\n      if (xref) {\n        return xref.fetchIfRefAsync(value, suppressEncryption);\n      }\n      return Promise.resolve(value);\n    },\n    getArray: function Dict_getArray(key1, key2, key3) {\n      var value = this.get(key1, key2, key3);\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (!Array.isArray(value) || !xref) {\n        return value;\n      }\n      value = value.slice();\n      for (var i = 0, ii = value.length; i < ii; i++) {\n        if (!isRef(value[i])) {\n          continue;\n        }\n        value[i] = xref.fetch(value[i], suppressEncryption);\n      }\n      return value;\n    },\n    getRaw: function Dict_getRaw(key) {\n      return this._map[key];\n    },\n    getKeys: function Dict_getKeys() {\n      return Object.keys(this._map);\n    },\n    set: function Dict_set(key, value) {\n      this._map[key] = value;\n    },\n    has: function Dict_has(key) {\n      return key in this._map;\n    },\n    forEach: function Dict_forEach(callback) {\n      for (var key in this._map) {\n        callback(key, this.get(key));\n      }\n    }\n  };\n  Dict.empty = new Dict(null);\n  Dict.merge = function (xref, dictArray) {\n    var mergedDict = new Dict(xref);\n    for (var i = 0, ii = dictArray.length; i < ii; i++) {\n      var dict = dictArray[i];\n      if (!isDict(dict)) {\n        continue;\n      }\n      for (var keyName in dict._map) {\n        if (mergedDict._map[keyName] !== undefined) {\n          continue;\n        }\n        mergedDict._map[keyName] = dict._map[keyName];\n      }\n    }\n    return mergedDict;\n  };\n  return Dict;\n}();\nvar Ref = function RefClosure() {\n  function Ref(num, gen) {\n    this.num = num;\n    this.gen = gen;\n  }\n  Ref.prototype = {\n    toString: function Ref_toString() {\n      var str = this.num + 'R';\n      if (this.gen !== 0) {\n        str += this.gen;\n      }\n      return str;\n    }\n  };\n  return Ref;\n}();\nvar RefSet = function RefSetClosure() {\n  function RefSet() {\n    this.dict = Object.create(null);\n  }\n  RefSet.prototype = {\n    has: function RefSet_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSet_put(ref) {\n      this.dict[ref.toString()] = true;\n    },\n    remove: function RefSet_remove(ref) {\n      delete this.dict[ref.toString()];\n    }\n  };\n  return RefSet;\n}();\nvar RefSetCache = function RefSetCacheClosure() {\n  function RefSetCache() {\n    this.dict = Object.create(null);\n  }\n  RefSetCache.prototype = {\n    get: function RefSetCache_get(ref) {\n      return this.dict[ref.toString()];\n    },\n    has: function RefSetCache_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSetCache_put(ref, obj) {\n      this.dict[ref.toString()] = obj;\n    },\n    putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n      this.dict[ref.toString()] = this.get(aliasRef);\n    },\n    forEach: function RefSetCache_forEach(fn, thisArg) {\n      for (var i in this.dict) {\n        fn.call(thisArg, this.dict[i]);\n      }\n    },\n    clear: function RefSetCache_clear() {\n      this.dict = Object.create(null);\n    }\n  };\n  return RefSetCache;\n}();\nfunction isEOF(v) {\n  return v === EOF;\n}\nfunction isName(v, name) {\n  return v instanceof Name && (name === undefined || v.name === name);\n}\nfunction isCmd(v, cmd) {\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\nfunction isDict(v, type) {\n  return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n}\nfunction isRef(v) {\n  return v instanceof Ref;\n}\nfunction isRefsEqual(v1, v2) {\n  return v1.num === v2.num && v1.gen === v2.gen;\n}\nfunction isStream(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.getBytes !== undefined;\n}\nexports.EOF = EOF;\nexports.Cmd = Cmd;\nexports.Dict = Dict;\nexports.Name = Name;\nexports.Ref = Ref;\nexports.RefSet = RefSet;\nexports.RefSetCache = RefSetCache;\nexports.isEOF = isEOF;\nexports.isCmd = isCmd;\nexports.isDict = isDict;\nexports.isName = isName;\nexports.isRef = isRef;\nexports.isRefsEqual = isRefsEqual;\nexports.isStream = isStream;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar store = __w_pdfjs_require__(47)('wks');\nvar uid = __w_pdfjs_require__(22);\nvar _Symbol = __w_pdfjs_require__(6).Symbol;\nvar USE_SYMBOL = typeof _Symbol == 'function';\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] = USE_SYMBOL && _Symbol[name] || (USE_SYMBOL ? _Symbol : uid)('Symbol.' + name));\n};\n$exports.store = store;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nmodule.exports = function (it) {\n  return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) === 'object' ? it !== null : typeof it === 'function';\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LZWStream = exports.StringStream = exports.StreamsSequenceStream = exports.Stream = exports.RunLengthStream = exports.PredictorStream = exports.NullStream = exports.FlateStream = exports.DecodeStream = exports.DecryptStream = exports.AsciiHexStream = exports.Ascii85Stream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar Stream = function StreamClosure() {\n  function Stream(arrayBuffer, start, length, dict) {\n    this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n    this.start = start || 0;\n    this.pos = this.start;\n    this.end = start + length || this.bytes.length;\n    this.dict = dict;\n  }\n  Stream.prototype = {\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function Stream_getByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.bytes[this.pos++];\n    },\n    getUint16: function Stream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function Stream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function Stream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function Stream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function Stream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    skip: function Stream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function Stream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function Stream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function Stream_makeSubStream(start, length, dict) {\n      return new Stream(this.bytes.buffer, start, length, dict);\n    }\n  };\n  return Stream;\n}();\nvar StringStream = function StringStreamClosure() {\n  function StringStream(str) {\n    var bytes = (0, _util.stringToBytes)(str);\n    Stream.call(this, bytes);\n  }\n  StringStream.prototype = Stream.prototype;\n  return StringStream;\n}();\nvar DecodeStream = function DecodeStreamClosure() {\n  var emptyBuffer = new Uint8Array(0);\n  function DecodeStream(maybeMinBufferLength) {\n    this.pos = 0;\n    this.bufferLength = 0;\n    this.eof = false;\n    this.buffer = emptyBuffer;\n    this.minBufferLength = 512;\n    if (maybeMinBufferLength) {\n      while (this.minBufferLength < maybeMinBufferLength) {\n        this.minBufferLength *= 2;\n      }\n    }\n  }\n  DecodeStream.prototype = {\n    get isEmpty() {\n      while (!this.eof && this.bufferLength === 0) {\n        this.readBlock();\n      }\n      return this.bufferLength === 0;\n    },\n    ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n      var buffer = this.buffer;\n      if (requested <= buffer.byteLength) {\n        return buffer;\n      }\n      var size = this.minBufferLength;\n      while (size < requested) {\n        size *= 2;\n      }\n      var buffer2 = new Uint8Array(size);\n      buffer2.set(buffer);\n      return this.buffer = buffer2;\n    },\n    getByte: function DecodeStream_getByte() {\n      var pos = this.pos;\n      while (this.bufferLength <= pos) {\n        if (this.eof) {\n          return -1;\n        }\n        this.readBlock();\n      }\n      return this.buffer[this.pos++];\n    },\n    getUint16: function DecodeStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function DecodeStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function DecodeStream_getBytes(length) {\n      var end,\n          pos = this.pos;\n      if (length) {\n        this.ensureBuffer(pos + length);\n        end = pos + length;\n        while (!this.eof && this.bufferLength < end) {\n          this.readBlock();\n        }\n        var bufEnd = this.bufferLength;\n        if (end > bufEnd) {\n          end = bufEnd;\n        }\n      } else {\n        while (!this.eof) {\n          this.readBlock();\n        }\n        end = this.bufferLength;\n      }\n      this.pos = end;\n      return this.buffer.subarray(pos, end);\n    },\n    peekByte: function DecodeStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function DecodeStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n      var end = start + length;\n      while (this.bufferLength <= end && !this.eof) {\n        this.readBlock();\n      }\n      return new Stream(this.buffer, start, length, dict);\n    },\n    skip: function DecodeStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function DecodeStream_reset() {\n      this.pos = 0;\n    },\n    getBaseStreams: function DecodeStream_getBaseStreams() {\n      if (this.str && this.str.getBaseStreams) {\n        return this.str.getBaseStreams();\n      }\n      return [];\n    }\n  };\n  return DecodeStream;\n}();\nvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n  function StreamsSequenceStream(streams) {\n    this.streams = streams;\n    DecodeStream.call(this, null);\n  }\n  StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n  StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n    var streams = this.streams;\n    if (streams.length === 0) {\n      this.eof = true;\n      return;\n    }\n    var stream = streams.shift();\n    var chunk = stream.getBytes();\n    var bufferLength = this.bufferLength;\n    var newLength = bufferLength + chunk.length;\n    var buffer = this.ensureBuffer(newLength);\n    buffer.set(chunk, bufferLength);\n    this.bufferLength = newLength;\n  };\n  StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n    var baseStreams = [];\n    for (var i = 0, ii = this.streams.length; i < ii; i++) {\n      var stream = this.streams[i];\n      if (stream.getBaseStreams) {\n        _util.Util.appendToArray(baseStreams, stream.getBaseStreams());\n      }\n    }\n    return baseStreams;\n  };\n  return StreamsSequenceStream;\n}();\nvar FlateStream = function FlateStreamClosure() {\n  var codeLenCodeMap = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n  var lengthDecode = new Int32Array([0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a, 0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f, 0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073, 0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102]);\n  var distDecode = new Int32Array([0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d, 0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1, 0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01, 0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001]);\n  var fixedLitCodeTab = [new Int32Array([0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0, 0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0, 0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0, 0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8, 0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8, 0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8, 0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4, 0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4, 0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4, 0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc, 0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec, 0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc, 0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2, 0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2, 0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2, 0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca, 0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea, 0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da, 0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6, 0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6, 0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6, 0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce, 0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee, 0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de, 0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe, 0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1, 0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1, 0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1, 0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9, 0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9, 0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9, 0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5, 0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5, 0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5, 0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd, 0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed, 0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd, 0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3, 0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3, 0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3, 0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb, 0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb, 0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db, 0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7, 0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7, 0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7, 0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf, 0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef, 0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df, 0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff]), 9];\n  var fixedDistCodeTab = [new Int32Array([0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c, 0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000, 0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d, 0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000]), 5];\n  function FlateStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    var cmf = str.getByte();\n    var flg = str.getByte();\n    if (cmf === -1 || flg === -1) {\n      throw new _util.FormatError('Invalid header in flate stream: ' + cmf + ', ' + flg);\n    }\n    if ((cmf & 0x0f) !== 0x08) {\n      throw new _util.FormatError('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (((cmf << 8) + flg) % 31 !== 0) {\n      throw new _util.FormatError('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (flg & 0x20) {\n      throw new _util.FormatError('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n    }\n    this.codeSize = 0;\n    this.codeBuf = 0;\n    DecodeStream.call(this, maybeLength);\n  }\n  FlateStream.prototype = Object.create(DecodeStream.prototype);\n  FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n    var str = this.str;\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < bits) {\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad encoding in flate stream');\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    b = codeBuf & (1 << bits) - 1;\n    this.codeBuf = codeBuf >> bits;\n    this.codeSize = codeSize -= bits;\n    return b;\n  };\n  FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n    var str = this.str;\n    var codes = table[0];\n    var maxLen = table[1];\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < maxLen) {\n      if ((b = str.getByte()) === -1) {\n        break;\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    var code = codes[codeBuf & (1 << maxLen) - 1];\n    var codeLen = code >> 16;\n    var codeVal = code & 0xffff;\n    if (codeLen < 1 || codeSize < codeLen) {\n      throw new _util.FormatError('Bad encoding in flate stream');\n    }\n    this.codeBuf = codeBuf >> codeLen;\n    this.codeSize = codeSize - codeLen;\n    return codeVal;\n  };\n  FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n    var n = lengths.length;\n    var maxLen = 0;\n    var i;\n    for (i = 0; i < n; ++i) {\n      if (lengths[i] > maxLen) {\n        maxLen = lengths[i];\n      }\n    }\n    var size = 1 << maxLen;\n    var codes = new Int32Array(size);\n    for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n      for (var val = 0; val < n; ++val) {\n        if (lengths[val] === len) {\n          var code2 = 0;\n          var t = code;\n          for (i = 0; i < len; ++i) {\n            code2 = code2 << 1 | t & 1;\n            t >>= 1;\n          }\n          for (i = code2; i < size; i += skip) {\n            codes[i] = len << 16 | val;\n          }\n          ++code;\n        }\n      }\n    }\n    return [codes, maxLen];\n  };\n  FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n    var buffer, len;\n    var str = this.str;\n    var hdr = this.getBits(3);\n    if (hdr & 1) {\n      this.eof = true;\n    }\n    hdr >>= 1;\n    if (hdr === 0) {\n      var b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var blockLen = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      blockLen |= b << 8;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var check = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      check |= b << 8;\n      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n        throw new _util.FormatError('Bad uncompressed block length in flate stream');\n      }\n      this.codeBuf = 0;\n      this.codeSize = 0;\n      var bufferLength = this.bufferLength;\n      buffer = this.ensureBuffer(bufferLength + blockLen);\n      var end = bufferLength + blockLen;\n      this.bufferLength = end;\n      if (blockLen === 0) {\n        if (str.peekByte() === -1) {\n          this.eof = true;\n        }\n      } else {\n        for (var n = bufferLength; n < end; ++n) {\n          if ((b = str.getByte()) === -1) {\n            this.eof = true;\n            break;\n          }\n          buffer[n] = b;\n        }\n      }\n      return;\n    }\n    var litCodeTable;\n    var distCodeTable;\n    if (hdr === 1) {\n      litCodeTable = fixedLitCodeTab;\n      distCodeTable = fixedDistCodeTab;\n    } else if (hdr === 2) {\n      var numLitCodes = this.getBits(5) + 257;\n      var numDistCodes = this.getBits(5) + 1;\n      var numCodeLenCodes = this.getBits(4) + 4;\n      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n      var i;\n      for (i = 0; i < numCodeLenCodes; ++i) {\n        codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n      }\n      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n      len = 0;\n      i = 0;\n      var codes = numLitCodes + numDistCodes;\n      var codeLengths = new Uint8Array(codes);\n      var bitsLength, bitsOffset, what;\n      while (i < codes) {\n        var code = this.getCode(codeLenCodeTab);\n        if (code === 16) {\n          bitsLength = 2;\n          bitsOffset = 3;\n          what = len;\n        } else if (code === 17) {\n          bitsLength = 3;\n          bitsOffset = 3;\n          what = len = 0;\n        } else if (code === 18) {\n          bitsLength = 7;\n          bitsOffset = 11;\n          what = len = 0;\n        } else {\n          codeLengths[i++] = len = code;\n          continue;\n        }\n        var repeatLength = this.getBits(bitsLength) + bitsOffset;\n        while (repeatLength-- > 0) {\n          codeLengths[i++] = what;\n        }\n      }\n      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n    } else {\n      throw new _util.FormatError('Unknown block type in flate stream');\n    }\n    buffer = this.buffer;\n    var limit = buffer ? buffer.length : 0;\n    var pos = this.bufferLength;\n    while (true) {\n      var code1 = this.getCode(litCodeTable);\n      if (code1 < 256) {\n        if (pos + 1 >= limit) {\n          buffer = this.ensureBuffer(pos + 1);\n          limit = buffer.length;\n        }\n        buffer[pos++] = code1;\n        continue;\n      }\n      if (code1 === 256) {\n        this.bufferLength = pos;\n        return;\n      }\n      code1 -= 257;\n      code1 = lengthDecode[code1];\n      var code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      len = (code1 & 0xffff) + code2;\n      code1 = this.getCode(distCodeTable);\n      code1 = distDecode[code1];\n      code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      var dist = (code1 & 0xffff) + code2;\n      if (pos + len >= limit) {\n        buffer = this.ensureBuffer(pos + len);\n        limit = buffer.length;\n      }\n      for (var k = 0; k < len; ++k, ++pos) {\n        buffer[pos] = buffer[pos - dist];\n      }\n    }\n  };\n  return FlateStream;\n}();\nvar PredictorStream = function PredictorStreamClosure() {\n  function PredictorStream(str, maybeLength, params) {\n    if (!(0, _primitives.isDict)(params)) {\n      return str;\n    }\n    var predictor = this.predictor = params.get('Predictor') || 1;\n    if (predictor <= 1) {\n      return str;\n    }\n    if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n      throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    if (predictor === 2) {\n      this.readBlock = this.readBlockTiff;\n    } else {\n      this.readBlock = this.readBlockPng;\n    }\n    this.str = str;\n    this.dict = str.dict;\n    var colors = this.colors = params.get('Colors') || 1;\n    var bits = this.bits = params.get('BitsPerComponent') || 8;\n    var columns = this.columns = params.get('Columns') || 1;\n    this.pixBytes = colors * bits + 7 >> 3;\n    this.rowBytes = columns * colors * bits + 7 >> 3;\n    DecodeStream.call(this, maybeLength);\n    return this;\n  }\n  PredictorStream.prototype = Object.create(DecodeStream.prototype);\n  PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n    var rowBytes = this.rowBytes;\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var bits = this.bits;\n    var colors = this.colors;\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var inbuf = 0,\n        outbuf = 0;\n    var inbits = 0,\n        outbits = 0;\n    var pos = bufferLength;\n    var i;\n    if (bits === 1 && colors === 1) {\n      for (i = 0; i < rowBytes; ++i) {\n        var c = rawBytes[i] ^ inbuf;\n        c ^= c >> 1;\n        c ^= c >> 2;\n        c ^= c >> 4;\n        inbuf = (c & 1) << 7;\n        buffer[pos++] = c;\n      }\n    } else if (bits === 8) {\n      for (i = 0; i < colors; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; ++i) {\n        buffer[pos] = buffer[pos - colors] + rawBytes[i];\n        pos++;\n      }\n    } else if (bits === 16) {\n      var bytesPerPixel = colors * 2;\n      for (i = 0; i < bytesPerPixel; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; i += 2) {\n        var sum = ((rawBytes[i] & 0xFF) << 8) + (rawBytes[i + 1] & 0xFF) + ((buffer[pos - bytesPerPixel] & 0xFF) << 8) + (buffer[pos - bytesPerPixel + 1] & 0xFF);\n        buffer[pos++] = sum >> 8 & 0xFF;\n        buffer[pos++] = sum & 0xFF;\n      }\n    } else {\n      var compArray = new Uint8Array(colors + 1);\n      var bitMask = (1 << bits) - 1;\n      var j = 0,\n          k = bufferLength;\n      var columns = this.columns;\n      for (i = 0; i < columns; ++i) {\n        for (var kk = 0; kk < colors; ++kk) {\n          if (inbits < bits) {\n            inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n            inbits += 8;\n          }\n          compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n          inbits -= bits;\n          outbuf = outbuf << bits | compArray[kk];\n          outbits += bits;\n          if (outbits >= 8) {\n            buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n            outbits -= 8;\n          }\n        }\n      }\n      if (outbits > 0) {\n        buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n      }\n    }\n    this.bufferLength += rowBytes;\n  };\n  PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n    var rowBytes = this.rowBytes;\n    var pixBytes = this.pixBytes;\n    var predictor = this.str.getByte();\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n    if (prevRow.length === 0) {\n      prevRow = new Uint8Array(rowBytes);\n    }\n    var i,\n        j = bufferLength,\n        up,\n        c;\n    switch (predictor) {\n      case 0:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        break;\n      case 1:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 2:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n        }\n        break;\n      case 3:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 4:\n        for (i = 0; i < pixBytes; ++i) {\n          up = prevRow[i];\n          c = rawBytes[i];\n          buffer[j++] = up + c;\n        }\n        for (; i < rowBytes; ++i) {\n          up = prevRow[i];\n          var upLeft = prevRow[i - pixBytes];\n          var left = buffer[j - pixBytes];\n          var p = left + up - upLeft;\n          var pa = p - left;\n          if (pa < 0) {\n            pa = -pa;\n          }\n          var pb = p - up;\n          if (pb < 0) {\n            pb = -pb;\n          }\n          var pc = p - upLeft;\n          if (pc < 0) {\n            pc = -pc;\n          }\n          c = rawBytes[i];\n          if (pa <= pb && pa <= pc) {\n            buffer[j++] = left + c;\n          } else if (pb <= pc) {\n            buffer[j++] = up + c;\n          } else {\n            buffer[j++] = upLeft + c;\n          }\n        }\n        break;\n      default:\n        throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    this.bufferLength += rowBytes;\n  };\n  return PredictorStream;\n}();\nvar DecryptStream = function DecryptStreamClosure() {\n  function DecryptStream(str, maybeLength, decrypt) {\n    this.str = str;\n    this.dict = str.dict;\n    this.decrypt = decrypt;\n    this.nextChunk = null;\n    this.initialized = false;\n    DecodeStream.call(this, maybeLength);\n  }\n  var chunkSize = 512;\n  DecryptStream.prototype = Object.create(DecodeStream.prototype);\n  DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n    var chunk;\n    if (this.initialized) {\n      chunk = this.nextChunk;\n    } else {\n      chunk = this.str.getBytes(chunkSize);\n      this.initialized = true;\n    }\n    if (!chunk || chunk.length === 0) {\n      this.eof = true;\n      return;\n    }\n    this.nextChunk = this.str.getBytes(chunkSize);\n    var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n    var decrypt = this.decrypt;\n    chunk = decrypt(chunk, !hasMoreData);\n    var bufferLength = this.bufferLength;\n    var i,\n        n = chunk.length;\n    var buffer = this.ensureBuffer(bufferLength + n);\n    for (i = 0; i < n; i++) {\n      buffer[bufferLength++] = chunk[i];\n    }\n    this.bufferLength = bufferLength;\n  };\n  return DecryptStream;\n}();\nvar Ascii85Stream = function Ascii85StreamClosure() {\n  function Ascii85Stream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.input = new Uint8Array(5);\n    if (maybeLength) {\n      maybeLength = 0.8 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n  Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n    var TILDA_CHAR = 0x7E;\n    var Z_LOWER_CHAR = 0x7A;\n    var EOF = -1;\n    var str = this.str;\n    var c = str.getByte();\n    while ((0, _util.isSpace)(c)) {\n      c = str.getByte();\n    }\n    if (c === EOF || c === TILDA_CHAR) {\n      this.eof = true;\n      return;\n    }\n    var bufferLength = this.bufferLength,\n        buffer;\n    var i;\n    if (c === Z_LOWER_CHAR) {\n      buffer = this.ensureBuffer(bufferLength + 4);\n      for (i = 0; i < 4; ++i) {\n        buffer[bufferLength + i] = 0;\n      }\n      this.bufferLength += 4;\n    } else {\n      var input = this.input;\n      input[0] = c;\n      for (i = 1; i < 5; ++i) {\n        c = str.getByte();\n        while ((0, _util.isSpace)(c)) {\n          c = str.getByte();\n        }\n        input[i] = c;\n        if (c === EOF || c === TILDA_CHAR) {\n          break;\n        }\n      }\n      buffer = this.ensureBuffer(bufferLength + i - 1);\n      this.bufferLength += i - 1;\n      if (i < 5) {\n        for (; i < 5; ++i) {\n          input[i] = 0x21 + 84;\n        }\n        this.eof = true;\n      }\n      var t = 0;\n      for (i = 0; i < 5; ++i) {\n        t = t * 85 + (input[i] - 0x21);\n      }\n      for (i = 3; i >= 0; --i) {\n        buffer[bufferLength + i] = t & 0xFF;\n        t >>= 8;\n      }\n    }\n  };\n  return Ascii85Stream;\n}();\nvar AsciiHexStream = function AsciiHexStreamClosure() {\n  function AsciiHexStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.firstDigit = -1;\n    if (maybeLength) {\n      maybeLength = 0.5 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n  AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n    var UPSTREAM_BLOCK_SIZE = 8000;\n    var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n    if (!bytes.length) {\n      this.eof = true;\n      return;\n    }\n    var maxDecodeLength = bytes.length + 1 >> 1;\n    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n    var bufferLength = this.bufferLength;\n    var firstDigit = this.firstDigit;\n    for (var i = 0, ii = bytes.length; i < ii; i++) {\n      var ch = bytes[i],\n          digit;\n      if (ch >= 0x30 && ch <= 0x39) {\n        digit = ch & 0x0F;\n      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n        digit = (ch & 0x0F) + 9;\n      } else if (ch === 0x3E) {\n        this.eof = true;\n        break;\n      } else {\n        continue;\n      }\n      if (firstDigit < 0) {\n        firstDigit = digit;\n      } else {\n        buffer[bufferLength++] = firstDigit << 4 | digit;\n        firstDigit = -1;\n      }\n    }\n    if (firstDigit >= 0 && this.eof) {\n      buffer[bufferLength++] = firstDigit << 4;\n      firstDigit = -1;\n    }\n    this.firstDigit = firstDigit;\n    this.bufferLength = bufferLength;\n  };\n  return AsciiHexStream;\n}();\nvar RunLengthStream = function RunLengthStreamClosure() {\n  function RunLengthStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    DecodeStream.call(this, maybeLength);\n  }\n  RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n  RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n    var repeatHeader = this.str.getBytes(2);\n    if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n      this.eof = true;\n      return;\n    }\n    var buffer;\n    var bufferLength = this.bufferLength;\n    var n = repeatHeader[0];\n    if (n < 128) {\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      buffer[bufferLength++] = repeatHeader[1];\n      if (n > 0) {\n        var source = this.str.getBytes(n);\n        buffer.set(source, bufferLength);\n        bufferLength += n;\n      }\n    } else {\n      n = 257 - n;\n      var b = repeatHeader[1];\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      for (var i = 0; i < n; i++) {\n        buffer[bufferLength++] = b;\n      }\n    }\n    this.bufferLength = bufferLength;\n  };\n  return RunLengthStream;\n}();\nvar LZWStream = function LZWStreamClosure() {\n  function LZWStream(str, maybeLength, earlyChange) {\n    this.str = str;\n    this.dict = str.dict;\n    this.cachedData = 0;\n    this.bitsCached = 0;\n    var maxLzwDictionarySize = 4096;\n    var lzwState = {\n      earlyChange: earlyChange,\n      codeLength: 9,\n      nextCode: 258,\n      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n      currentSequence: new Uint8Array(maxLzwDictionarySize),\n      currentSequenceLength: 0\n    };\n    for (var i = 0; i < 256; ++i) {\n      lzwState.dictionaryValues[i] = i;\n      lzwState.dictionaryLengths[i] = 1;\n    }\n    this.lzwState = lzwState;\n    DecodeStream.call(this, maybeLength);\n  }\n  LZWStream.prototype = Object.create(DecodeStream.prototype);\n  LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n    var bitsCached = this.bitsCached;\n    var cachedData = this.cachedData;\n    while (bitsCached < n) {\n      var c = this.str.getByte();\n      if (c === -1) {\n        this.eof = true;\n        return null;\n      }\n      cachedData = cachedData << 8 | c;\n      bitsCached += 8;\n    }\n    this.bitsCached = bitsCached -= n;\n    this.cachedData = cachedData;\n    this.lastCode = null;\n    return cachedData >>> bitsCached & (1 << n) - 1;\n  };\n  LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n    var blockSize = 512;\n    var estimatedDecodedSize = blockSize * 2,\n        decodedSizeDelta = blockSize;\n    var i, j, q;\n    var lzwState = this.lzwState;\n    if (!lzwState) {\n      return;\n    }\n    var earlyChange = lzwState.earlyChange;\n    var nextCode = lzwState.nextCode;\n    var dictionaryValues = lzwState.dictionaryValues;\n    var dictionaryLengths = lzwState.dictionaryLengths;\n    var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n    var codeLength = lzwState.codeLength;\n    var prevCode = lzwState.prevCode;\n    var currentSequence = lzwState.currentSequence;\n    var currentSequenceLength = lzwState.currentSequenceLength;\n    var decodedLength = 0;\n    var currentBufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n    for (i = 0; i < blockSize; i++) {\n      var code = this.readBits(codeLength);\n      var hasPrev = currentSequenceLength > 0;\n      if (code < 256) {\n        currentSequence[0] = code;\n        currentSequenceLength = 1;\n      } else if (code >= 258) {\n        if (code < nextCode) {\n          currentSequenceLength = dictionaryLengths[code];\n          for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n            currentSequence[j] = dictionaryValues[q];\n            q = dictionaryPrevCodes[q];\n          }\n        } else {\n          currentSequence[currentSequenceLength++] = currentSequence[0];\n        }\n      } else if (code === 256) {\n        codeLength = 9;\n        nextCode = 258;\n        currentSequenceLength = 0;\n        continue;\n      } else {\n        this.eof = true;\n        delete this.lzwState;\n        break;\n      }\n      if (hasPrev) {\n        dictionaryPrevCodes[nextCode] = prevCode;\n        dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n        dictionaryValues[nextCode] = currentSequence[0];\n        nextCode++;\n        codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n      }\n      prevCode = code;\n      decodedLength += currentSequenceLength;\n      if (estimatedDecodedSize < decodedLength) {\n        do {\n          estimatedDecodedSize += decodedSizeDelta;\n        } while (estimatedDecodedSize < decodedLength);\n        buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n      }\n      for (j = 0; j < currentSequenceLength; j++) {\n        buffer[currentBufferLength++] = currentSequence[j];\n      }\n    }\n    lzwState.nextCode = nextCode;\n    lzwState.codeLength = codeLength;\n    lzwState.prevCode = prevCode;\n    lzwState.currentSequenceLength = currentSequenceLength;\n    this.bufferLength = currentBufferLength;\n  };\n  return LZWStream;\n}();\nvar NullStream = function NullStreamClosure() {\n  function NullStream() {\n    Stream.call(this, new Uint8Array(0));\n  }\n  NullStream.prototype = Stream.prototype;\n  return NullStream;\n}();\nexports.Ascii85Stream = Ascii85Stream;\nexports.AsciiHexStream = AsciiHexStream;\nexports.DecryptStream = DecryptStream;\nexports.DecodeStream = DecodeStream;\nexports.FlateStream = FlateStream;\nexports.NullStream = NullStream;\nexports.PredictorStream = PredictorStream;\nexports.RunLengthStream = RunLengthStream;\nexports.Stream = Stream;\nexports.StreamsSequenceStream = StreamsSequenceStream;\nexports.StringStream = StringStream;\nexports.LZWStream = LZWStream;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(6);\nvar core = __w_pdfjs_require__(7);\nvar hide = __w_pdfjs_require__(12);\nvar redefine = __w_pdfjs_require__(9);\nvar ctx = __w_pdfjs_require__(11);\nvar PROTOTYPE = 'prototype';\nvar $export = function $export(type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    own = !IS_FORCED && target && target[key] !== undefined;\n    out = (own ? target : source)[key];\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    if (target) redefine(target, key, out, type & $export.U);\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n$export.F = 1;\n$export.G = 2;\n$export.S = 4;\n$export.P = 8;\n$export.B = 16;\n$export.W = 32;\n$export.U = 64;\n$export.R = 128;\nmodule.exports = $export;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif (typeof __g == 'number') __g = global;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar core = module.exports = { version: '2.5.5' };\nif (typeof __e == 'number') __e = core;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(6);\nvar hide = __w_pdfjs_require__(12);\nvar has = __w_pdfjs_require__(10);\nvar SRC = __w_pdfjs_require__(22)('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n__w_pdfjs_require__(7).inspectSource = function (it) {\n  return $toString.call(it);\n};\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar aFunction = __w_pdfjs_require__(17);\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1:\n      return function (a) {\n        return fn.call(that, a);\n      };\n    case 2:\n      return function (a, b) {\n        return fn.call(that, a, b);\n      };\n    case 3:\n      return function (a, b, c) {\n        return fn.call(that, a, b, c);\n      };\n  }\n  return function () {\n    return fn.apply(that, arguments);\n  };\n};\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar dP = __w_pdfjs_require__(16);\nvar createDesc = __w_pdfjs_require__(29);\nmodule.exports = __w_pdfjs_require__(13) ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = !__w_pdfjs_require__(14)(function () {\n  return Object.defineProperty({}, 'a', {\n    get: function get() {\n      return 7;\n    }\n  }).a != 7;\n});\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toString = {}.toString;\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(45);\nvar toPrimitive = __w_pdfjs_require__(46);\nvar dP = Object.defineProperty;\nexports.f = __w_pdfjs_require__(13) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) {}\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar IObject = __w_pdfjs_require__(30);\nvar defined = __w_pdfjs_require__(23);\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {};\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorSpace = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar ColorSpace = function ColorSpaceClosure() {\n  function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n    var COMPONENTS = 3;\n    alpha01 = alpha01 !== 1 ? 0 : alpha01;\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1 * COMPONENTS;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        newIndex += alpha01;\n      }\n    }\n  }\n  function ColorSpace() {\n    (0, _util.unreachable)('should not call ColorSpace constructor');\n  }\n  ColorSpace.prototype = {\n    getRgb: function ColorSpace_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      this.getRgbItem(src, srcOffset, rgb, 0);\n      return rgb;\n    },\n    getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbItem');\n    },\n    getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbBuffer');\n    },\n    getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getOutputLength');\n    },\n    isPassthrough: function ColorSpace_isPassthrough(bits) {\n      return false;\n    },\n    fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n      var count = originalWidth * originalHeight;\n      var rgbBuf = null;\n      var numComponentColors = 1 << bpc;\n      var needsResizing = originalHeight !== height || originalWidth !== width;\n      var i, ii;\n      if (this.isPassthrough(bpc)) {\n        rgbBuf = comps;\n      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n        var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n        var key;\n        for (i = 0; i < numComponentColors; i++) {\n          allColors[i] = i;\n        }\n        var colorMap = new Uint8Array(numComponentColors * 3);\n        this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n        var destPos, rgbPos;\n        if (!needsResizing) {\n          destPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            dest[destPos++] = colorMap[key];\n            dest[destPos++] = colorMap[key + 1];\n            dest[destPos++] = colorMap[key + 2];\n            destPos += alpha01;\n          }\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          rgbPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            rgbBuf[rgbPos++] = colorMap[key];\n            rgbBuf[rgbPos++] = colorMap[key + 1];\n            rgbBuf[rgbPos++] = colorMap[key + 2];\n          }\n        }\n      } else {\n        if (!needsResizing) {\n          this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n        }\n      }\n      if (rgbBuf) {\n        if (needsResizing) {\n          resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n        } else {\n          rgbPos = 0;\n          destPos = 0;\n          for (i = 0, ii = width * actualHeight; i < ii; i++) {\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            destPos += alpha01;\n          }\n        }\n      }\n    },\n    usesZeroToOneRange: true\n  };\n  ColorSpace.parse = function (cs, xref, res, pdfFunctionFactory) {\n    var IR = ColorSpace.parseToIR(cs, xref, res, pdfFunctionFactory);\n    return ColorSpace.fromIR(IR, pdfFunctionFactory);\n  };\n  ColorSpace.fromIR = function (IR, pdfFunctionFactory) {\n    var name = Array.isArray(IR) ? IR[0] : IR;\n    var whitePoint, blackPoint, gamma;\n    switch (name) {\n      case 'DeviceGrayCS':\n        return this.singletons.gray;\n      case 'DeviceRgbCS':\n        return this.singletons.rgb;\n      case 'DeviceCmykCS':\n        return this.singletons.cmyk;\n      case 'CalGrayCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        return new CalGrayCS(whitePoint, blackPoint, gamma);\n      case 'CalRGBCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        var matrix = IR[4];\n        return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n      case 'PatternCS':\n        var basePatternCS = IR[1];\n        if (basePatternCS) {\n          basePatternCS = ColorSpace.fromIR(basePatternCS, pdfFunctionFactory);\n        }\n        return new PatternCS(basePatternCS);\n      case 'IndexedCS':\n        var baseIndexedCS = IR[1];\n        var hiVal = IR[2];\n        var lookup = IR[3];\n        return new IndexedCS(ColorSpace.fromIR(baseIndexedCS, pdfFunctionFactory), hiVal, lookup);\n      case 'AlternateCS':\n        var numComps = IR[1];\n        var alt = IR[2];\n        var tintFnIR = IR[3];\n        return new AlternateCS(numComps, ColorSpace.fromIR(alt, pdfFunctionFactory), pdfFunctionFactory.createFromIR(tintFnIR));\n      case 'LabCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        var range = IR[3];\n        return new LabCS(whitePoint, blackPoint, range);\n      default:\n        throw new _util.FormatError('Unknown colorspace name: ' + name);\n    }\n  };\n  ColorSpace.parseToIR = function (cs, xref) {\n    var res = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var pdfFunctionFactory = arguments[3];\n\n    cs = xref.fetchIfRef(cs);\n    if ((0, _primitives.isName)(cs)) {\n      switch (cs.name) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'Pattern':\n          return ['PatternCS', null];\n        default:\n          if ((0, _primitives.isDict)(res)) {\n            var colorSpaces = res.get('ColorSpace');\n            if ((0, _primitives.isDict)(colorSpaces)) {\n              var resCS = colorSpaces.get(cs.name);\n              if (resCS) {\n                if ((0, _primitives.isName)(resCS)) {\n                  return ColorSpace.parseToIR(resCS, xref, res, pdfFunctionFactory);\n                }\n                cs = resCS;\n                break;\n              }\n            }\n          }\n          throw new _util.FormatError('unrecognized colorspace ' + cs.name);\n      }\n    }\n    if (Array.isArray(cs)) {\n      var mode = xref.fetchIfRef(cs[0]).name;\n      var numComps, params, alt, whitePoint, blackPoint, gamma;\n      switch (mode) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'CalGray':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.get('Gamma');\n          return ['CalGrayCS', whitePoint, blackPoint, gamma];\n        case 'CalRGB':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.getArray('Gamma');\n          var matrix = params.getArray('Matrix');\n          return ['CalRGBCS', whitePoint, blackPoint, gamma, matrix];\n        case 'ICCBased':\n          var stream = xref.fetchIfRef(cs[1]);\n          var dict = stream.dict;\n          numComps = dict.get('N');\n          alt = dict.get('Alternate');\n          if (alt) {\n            var altIR = ColorSpace.parseToIR(alt, xref, res, pdfFunctionFactory);\n            var altCS = ColorSpace.fromIR(altIR, pdfFunctionFactory);\n            if (altCS.numComps === numComps) {\n              return altIR;\n            }\n            (0, _util.warn)('ICCBased color space: Ignoring incorrect /Alternate entry.');\n          }\n          if (numComps === 1) {\n            return 'DeviceGrayCS';\n          } else if (numComps === 3) {\n            return 'DeviceRgbCS';\n          } else if (numComps === 4) {\n            return 'DeviceCmykCS';\n          }\n          break;\n        case 'Pattern':\n          var basePatternCS = cs[1] || null;\n          if (basePatternCS) {\n            basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res, pdfFunctionFactory);\n          }\n          return ['PatternCS', basePatternCS];\n        case 'Indexed':\n        case 'I':\n          var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res, pdfFunctionFactory);\n          var hiVal = xref.fetchIfRef(cs[2]) + 1;\n          var lookup = xref.fetchIfRef(cs[3]);\n          if ((0, _primitives.isStream)(lookup)) {\n            lookup = lookup.getBytes();\n          }\n          return ['IndexedCS', baseIndexedCS, hiVal, lookup];\n        case 'Separation':\n        case 'DeviceN':\n          var name = xref.fetchIfRef(cs[1]);\n          numComps = Array.isArray(name) ? name.length : 1;\n          alt = ColorSpace.parseToIR(cs[2], xref, res, pdfFunctionFactory);\n          var tintFnIR = pdfFunctionFactory.createIR(xref.fetchIfRef(cs[3]));\n          return ['AlternateCS', numComps, alt, tintFnIR];\n        case 'Lab':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          var range = params.getArray('Range');\n          return ['LabCS', whitePoint, blackPoint, range];\n        default:\n          throw new _util.FormatError('unimplemented color space object \"' + mode + '\"');\n      }\n    }\n    throw new _util.FormatError('unrecognized color space object: \"' + cs + '\"');\n  };\n  ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n    if (!Array.isArray(decode)) {\n      return true;\n    }\n    if (n * 2 !== decode.length) {\n      (0, _util.warn)('The decode map is not the correct length');\n      return true;\n    }\n    for (var i = 0, ii = decode.length; i < ii; i += 2) {\n      if (decode[i] !== 0 || decode[i + 1] !== 1) {\n        return false;\n      }\n    }\n    return true;\n  };\n  ColorSpace.singletons = {\n    get gray() {\n      return (0, _util.shadow)(this, 'gray', new DeviceGrayCS());\n    },\n    get rgb() {\n      return (0, _util.shadow)(this, 'rgb', new DeviceRgbCS());\n    },\n    get cmyk() {\n      return (0, _util.shadow)(this, 'cmyk', new DeviceCmykCS());\n    }\n  };\n  return ColorSpace;\n}();\nvar AlternateCS = function AlternateCSClosure() {\n  function AlternateCS(numComps, base, tintFn) {\n    this.name = 'Alternate';\n    this.numComps = numComps;\n    this.defaultColor = new Float32Array(numComps);\n    for (var i = 0; i < numComps; ++i) {\n      this.defaultColor[i] = 1;\n    }\n    this.base = base;\n    this.tintFn = tintFn;\n    this.tmpBuf = new Float32Array(base.numComps);\n  }\n  AlternateCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var tmpBuf = this.tmpBuf;\n      this.tintFn(src, srcOffset, tmpBuf, 0);\n      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n    },\n    getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var tintFn = this.tintFn;\n      var base = this.base;\n      var scale = 1 / ((1 << bits) - 1);\n      var baseNumComps = base.numComps;\n      var usesZeroToOneRange = base.usesZeroToOneRange;\n      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n      var pos = isPassthrough ? destOffset : 0;\n      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n      var numComps = this.numComps;\n      var scaled = new Float32Array(numComps);\n      var tinted = new Float32Array(baseNumComps);\n      var i, j;\n      for (i = 0; i < count; i++) {\n        for (j = 0; j < numComps; j++) {\n          scaled[j] = src[srcOffset++] * scale;\n        }\n        tintFn(scaled, 0, tinted, 0);\n        if (usesZeroToOneRange) {\n          for (j = 0; j < baseNumComps; j++) {\n            baseBuf[pos++] = tinted[j] * 255;\n          }\n        } else {\n          base.getRgbItem(tinted, 0, baseBuf, pos);\n          pos += baseNumComps;\n        }\n      }\n      if (!isPassthrough) {\n        base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n      }\n    },\n    getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return AlternateCS;\n}();\nvar PatternCS = function PatternCSClosure() {\n  function PatternCS(baseCS) {\n    this.name = 'Pattern';\n    this.base = baseCS;\n  }\n  PatternCS.prototype = {};\n  return PatternCS;\n}();\nvar IndexedCS = function IndexedCSClosure() {\n  function IndexedCS(base, highVal, lookup) {\n    this.name = 'Indexed';\n    this.numComps = 1;\n    this.defaultColor = new Uint8Array(this.numComps);\n    this.base = base;\n    this.highVal = highVal;\n    var baseNumComps = base.numComps;\n    var length = baseNumComps * highVal;\n    if ((0, _primitives.isStream)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      var bytes = lookup.getBytes(length);\n      this.lookup.set(bytes);\n    } else if ((0, _util.isString)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      for (var i = 0; i < length; ++i) {\n        this.lookup[i] = lookup.charCodeAt(i);\n      }\n    } else if (lookup instanceof Uint8Array) {\n      this.lookup = lookup;\n    } else {\n      throw new _util.FormatError('Unrecognized lookup table: ' + lookup);\n    }\n  }\n  IndexedCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var numComps = this.base.numComps;\n      var start = src[srcOffset] * numComps;\n      this.base.getRgbBuffer(this.lookup, start, 1, dest, destOffset, 8, 0);\n    },\n    getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var base = this.base;\n      var numComps = base.numComps;\n      var outputDelta = base.getOutputLength(numComps, alpha01);\n      var lookup = this.lookup;\n      for (var i = 0; i < count; ++i) {\n        var lookupPos = src[srcOffset++] * numComps;\n        base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n        destOffset += outputDelta;\n      }\n    },\n    getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: true\n  };\n  return IndexedCS;\n}();\nvar DeviceGrayCS = function DeviceGrayCSClosure() {\n  function DeviceGrayCS() {\n    this.name = 'DeviceGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var c = src[srcOffset] * 255 | 0;\n      c = c < 0 ? 0 : c > 255 ? 255 : c;\n      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n    },\n    getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        var c = scale * src[j++] | 0;\n        dest[q++] = c;\n        dest[q++] = c;\n        dest[q++] = c;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceGrayCS;\n}();\nvar DeviceRgbCS = function DeviceRgbCSClosure() {\n  function DeviceRgbCS() {\n    this.name = 'DeviceRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceRgbCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var r = src[srcOffset] * 255 | 0;\n      var g = src[srcOffset + 1] * 255 | 0;\n      var b = src[srcOffset + 2] * 255 | 0;\n      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n    },\n    getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      if (bits === 8 && alpha01 === 0) {\n        dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n        return;\n      }\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n      return bits === 8;\n    },\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceRgbCS;\n}();\nvar DeviceCmykCS = function DeviceCmykCSClosure() {\n  function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n    var c = src[srcOffset + 0] * srcScale;\n    var m = src[srcOffset + 1] * srcScale;\n    var y = src[srcOffset + 2] * srcScale;\n    var k = src[srcOffset + 3] * srcScale;\n    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n    dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n    dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n    dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n  }\n  function DeviceCmykCS() {\n    this.name = 'DeviceCMYK';\n    this.numComps = 4;\n    this.defaultColor = new Float32Array(this.numComps);\n    this.defaultColor[3] = 1;\n  }\n  DeviceCmykCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(src, srcOffset, 1, dest, destOffset);\n    },\n    getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; i++) {\n        convertToRgb(src, srcOffset, scale, dest, destOffset);\n        srcOffset += 4;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n      return inputLength / 4 * (3 + alpha01) | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceCmykCS;\n}();\nvar CalGrayCS = function CalGrayCSClosure() {\n  function CalGrayCS(whitePoint, blackPoint, gamma) {\n    this.name = 'CalGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalGray');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    gamma = gamma || 1;\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    this.G = gamma;\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ', falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n      (0, _util.warn)(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n    }\n    if (this.G < 1) {\n      (0, _util.info)('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n      this.G = 1;\n    }\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = src[srcOffset] * scale;\n    var AG = Math.pow(A, cs.G);\n    var L = cs.YW * AG;\n    var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n    dest[destOffset] = val;\n    dest[destOffset + 1] = val;\n    dest[destOffset + 2] = val;\n  }\n  CalGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 1;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalGrayCS;\n}();\nvar CalRGBCS = function CalRGBCSClosure() {\n  var BRADFORD_SCALE_MATRIX = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]);\n  var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -0.0085287, 0.0400428, 0.9684867]);\n  var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.9692660, 1.8760108, 0.0415560, 0.0556434, -0.2040259, 1.0572252]);\n  var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\n  var tempNormalizeMatrix = new Float32Array(3);\n  var tempConvertMatrix1 = new Float32Array(3);\n  var tempConvertMatrix2 = new Float32Array(3);\n  var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n  function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n    this.name = 'CalRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalRGB');\n    }\n    blackPoint = blackPoint || new Float32Array(3);\n    gamma = gamma || new Float32Array([1, 1, 1]);\n    matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n    var XW = whitePoint[0];\n    var YW = whitePoint[1];\n    var ZW = whitePoint[2];\n    this.whitePoint = whitePoint;\n    var XB = blackPoint[0];\n    var YB = blackPoint[1];\n    var ZB = blackPoint[2];\n    this.blackPoint = blackPoint;\n    this.GR = gamma[0];\n    this.GG = gamma[1];\n    this.GB = gamma[2];\n    this.MXA = matrix[0];\n    this.MYA = matrix[1];\n    this.MZA = matrix[2];\n    this.MXB = matrix[3];\n    this.MYB = matrix[4];\n    this.MZB = matrix[5];\n    this.MXC = matrix[6];\n    this.MYC = matrix[7];\n    this.MZC = matrix[8];\n    if (XW < 0 || ZW < 0 || YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (XB < 0 || YB < 0 || ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n      this.blackPoint = new Float32Array(3);\n    }\n    if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n      (0, _util.info)('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n      this.GR = this.GG = this.GB = 1;\n    }\n    if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n      (0, _util.info)('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n      this.MXA = this.MYB = this.MZC = 1;\n      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n    }\n  }\n  function matrixProduct(a, b, result) {\n    result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n    result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n    result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n  }\n  function convertToFlat(sourceWhitePoint, LMS, result) {\n    result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n    result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n    result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n  }\n  function convertToD65(sourceWhitePoint, LMS, result) {\n    var D65X = 0.95047;\n    var D65Y = 1;\n    var D65Z = 1.08883;\n    result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n    result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n    result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n  }\n  function sRGBTransferFunction(color) {\n    if (color <= 0.0031308) {\n      return adjustToRange(0, 1, 12.92 * color);\n    }\n    return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n  }\n  function adjustToRange(min, max, value) {\n    return Math.max(min, Math.min(max, value));\n  }\n  function decodeL(L) {\n    if (L < 0) {\n      return -decodeL(-L);\n    }\n    if (L > 8.0) {\n      return Math.pow((L + 16) / 116, 3);\n    }\n    return L * DECODE_L_CONSTANT;\n  }\n  function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n    if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n      result[0] = XYZ_Flat[0];\n      result[1] = XYZ_Flat[1];\n      result[2] = XYZ_Flat[2];\n      return;\n    }\n    var zeroDecodeL = decodeL(0);\n    var X_DST = zeroDecodeL;\n    var X_SRC = decodeL(sourceBlackPoint[0]);\n    var Y_DST = zeroDecodeL;\n    var Y_SRC = decodeL(sourceBlackPoint[1]);\n    var Z_DST = zeroDecodeL;\n    var Z_SRC = decodeL(sourceBlackPoint[2]);\n    var X_Scale = (1 - X_DST) / (1 - X_SRC);\n    var X_Offset = 1 - X_Scale;\n    var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n    var Y_Offset = 1 - Y_Scale;\n    var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n    var Z_Offset = 1 - Z_Scale;\n    result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n    result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n    result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n  }\n  function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n    if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n      result[0] = XYZ_In[0];\n      result[1] = XYZ_In[1];\n      result[2] = XYZ_In[2];\n      return;\n    }\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_Flat = tempNormalizeMatrix;\n    convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n  }\n  function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_D65 = tempNormalizeMatrix;\n    convertToD65(sourceWhitePoint, LMS, LMS_D65);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = adjustToRange(0, 1, src[srcOffset] * scale);\n    var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n    var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n    var AGR = Math.pow(A, cs.GR);\n    var BGG = Math.pow(B, cs.GG);\n    var CGB = Math.pow(C, cs.GB);\n    var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n    var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n    var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n    var XYZ = tempConvertMatrix1;\n    XYZ[0] = X;\n    XYZ[1] = Y;\n    XYZ[2] = Z;\n    var XYZ_Flat = tempConvertMatrix2;\n    normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n    var XYZ_Black = tempConvertMatrix1;\n    compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n    var XYZ_D65 = tempConvertMatrix2;\n    normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n    var SRGB = tempConvertMatrix1;\n    matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n    var sR = sRGBTransferFunction(SRGB[0]);\n    var sG = sRGBTransferFunction(SRGB[1]);\n    var sB = sRGBTransferFunction(SRGB[2]);\n    dest[destOffset] = Math.round(sR * 255);\n    dest[destOffset + 1] = Math.round(sG * 255);\n    dest[destOffset + 2] = Math.round(sB * 255);\n  }\n  CalRGBCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalRGBCS;\n}();\nvar LabCS = function LabCSClosure() {\n  function LabCS(whitePoint, blackPoint, range) {\n    this.name = 'Lab';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space Lab');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    range = range || [-100, 100, -100, 100];\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.amin = range[0];\n    this.amax = range[1];\n    this.bmin = range[2];\n    this.bmax = range[3];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components, no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint, falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.amin > this.amax || this.bmin > this.bmax) {\n      (0, _util.info)('Invalid Range, falling back to defaults');\n      this.amin = -100;\n      this.amax = 100;\n      this.bmin = -100;\n      this.bmax = 100;\n    }\n  }\n  function fn_g(x) {\n    var result;\n    if (x >= 6 / 29) {\n      result = x * x * x;\n    } else {\n      result = 108 / 841 * (x - 4 / 29);\n    }\n    return result;\n  }\n  function decode(value, high1, low2, high2) {\n    return low2 + value * (high2 - low2) / high1;\n  }\n  function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n    var Ls = src[srcOffset];\n    var as = src[srcOffset + 1];\n    var bs = src[srcOffset + 2];\n    if (maxVal !== false) {\n      Ls = decode(Ls, maxVal, 0, 100);\n      as = decode(as, maxVal, cs.amin, cs.amax);\n      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n    }\n    as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n    bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n    var M = (Ls + 16) / 116;\n    var L = M + as / 500;\n    var N = M - bs / 200;\n    var X = cs.XW * fn_g(L);\n    var Y = cs.YW * fn_g(M);\n    var Z = cs.ZW * fn_g(N);\n    var r, g, b;\n    if (cs.ZW < 1) {\n      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n    } else {\n      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n    }\n    dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n    dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n    dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n  }\n  LabCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, false, dest, destOffset);\n    },\n    getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var maxVal = (1 << bits) - 1;\n      for (var i = 0; i < count; i++) {\n        convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: false\n  };\n  return LabCS;\n}();\nexports.ColorSpace = ColorSpace;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar MacExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', 'centoldstyle', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', '', 'threequartersemdash', '', 'questionsmall', '', '', '', '', 'Ethsmall', '', '', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', '', '', '', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hypheninferior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', 'asuperior', 'centsuperior', '', '', '', '', 'Aacutesmall', 'Agravesmall', 'Acircumflexsmall', 'Adieresissmall', 'Atildesmall', 'Aringsmall', 'Ccedillasmall', 'Eacutesmall', 'Egravesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Iacutesmall', 'Igravesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ntildesmall', 'Oacutesmall', 'Ogravesmall', 'Ocircumflexsmall', 'Odieresissmall', 'Otildesmall', 'Uacutesmall', 'Ugravesmall', 'Ucircumflexsmall', 'Udieresissmall', '', 'eightsuperior', 'fourinferior', 'threeinferior', 'sixinferior', 'eightinferior', 'seveninferior', 'Scaronsmall', '', 'centinferior', 'twoinferior', '', 'Dieresissmall', '', 'Caronsmall', 'osuperior', 'fiveinferior', '', 'commainferior', 'periodinferior', 'Yacutesmall', '', 'dollarinferior', '', '', 'Thornsmall', '', 'nineinferior', 'zeroinferior', 'Zcaronsmall', 'AEsmall', 'Oslashsmall', 'questiondownsmall', 'oneinferior', 'Lslashsmall', '', '', '', '', '', '', 'Cedillasmall', '', '', '', '', '', 'OEsmall', 'figuredash', 'hyphensuperior', '', '', '', '', 'exclamdownsmall', '', 'Ydieresissmall', '', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'ninesuperior', 'zerosuperior', '', 'esuperior', 'rsuperior', 'tsuperior', '', '', 'isuperior', 'ssuperior', 'dsuperior', '', '', '', '', '', 'lsuperior', 'Ogoneksmall', 'Brevesmall', 'Macronsmall', 'bsuperior', 'nsuperior', 'msuperior', 'commasuperior', 'periodsuperior', 'Dotaccentsmall', 'Ringsmall', '', '', '', ''];\nvar MacRomanEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'space', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron'];\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls', '', '', '', ''];\nvar WinAnsiEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'bullet', 'Euro', 'bullet', 'quotesinglbase', 'florin', 'quotedblbase', 'ellipsis', 'dagger', 'daggerdbl', 'circumflex', 'perthousand', 'Scaron', 'guilsinglleft', 'OE', 'bullet', 'Zcaron', 'bullet', 'bullet', 'quoteleft', 'quoteright', 'quotedblleft', 'quotedblright', 'bullet', 'endash', 'emdash', 'tilde', 'trademark', 'scaron', 'guilsinglright', 'oe', 'bullet', 'zcaron', 'Ydieresis', 'space', 'exclamdown', 'cent', 'sterling', 'currency', 'yen', 'brokenbar', 'section', 'dieresis', 'copyright', 'ordfeminine', 'guillemotleft', 'logicalnot', 'hyphen', 'registered', 'macron', 'degree', 'plusminus', 'twosuperior', 'threesuperior', 'acute', 'mu', 'paragraph', 'periodcentered', 'cedilla', 'onesuperior', 'ordmasculine', 'guillemotright', 'onequarter', 'onehalf', 'threequarters', 'questiondown', 'Agrave', 'Aacute', 'Acircumflex', 'Atilde', 'Adieresis', 'Aring', 'AE', 'Ccedilla', 'Egrave', 'Eacute', 'Ecircumflex', 'Edieresis', 'Igrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Eth', 'Ntilde', 'Ograve', 'Oacute', 'Ocircumflex', 'Otilde', 'Odieresis', 'multiply', 'Oslash', 'Ugrave', 'Uacute', 'Ucircumflex', 'Udieresis', 'Yacute', 'Thorn', 'germandbls', 'agrave', 'aacute', 'acircumflex', 'atilde', 'adieresis', 'aring', 'ae', 'ccedilla', 'egrave', 'eacute', 'ecircumflex', 'edieresis', 'igrave', 'iacute', 'icircumflex', 'idieresis', 'eth', 'ntilde', 'ograve', 'oacute', 'ocircumflex', 'otilde', 'odieresis', 'divide', 'oslash', 'ugrave', 'uacute', 'ucircumflex', 'udieresis', 'yacute', 'thorn', 'ydieresis'];\nvar SymbolSetEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'universal', 'numbersign', 'existential', 'percent', 'ampersand', 'suchthat', 'parenleft', 'parenright', 'asteriskmath', 'plus', 'comma', 'minus', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'congruent', 'Alpha', 'Beta', 'Chi', 'Delta', 'Epsilon', 'Phi', 'Gamma', 'Eta', 'Iota', 'theta1', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Omicron', 'Pi', 'Theta', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'sigma1', 'Omega', 'Xi', 'Psi', 'Zeta', 'bracketleft', 'therefore', 'bracketright', 'perpendicular', 'underscore', 'radicalex', 'alpha', 'beta', 'chi', 'delta', 'epsilon', 'phi', 'gamma', 'eta', 'iota', 'phi1', 'kappa', 'lambda', 'mu', 'nu', 'omicron', 'pi', 'theta', 'rho', 'sigma', 'tau', 'upsilon', 'omega1', 'omega', 'xi', 'psi', 'zeta', 'braceleft', 'bar', 'braceright', 'similar', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'Euro', 'Upsilon1', 'minute', 'lessequal', 'fraction', 'infinity', 'florin', 'club', 'diamond', 'heart', 'spade', 'arrowboth', 'arrowleft', 'arrowup', 'arrowright', 'arrowdown', 'degree', 'plusminus', 'second', 'greaterequal', 'multiply', 'proportional', 'partialdiff', 'bullet', 'divide', 'notequal', 'equivalence', 'approxequal', 'ellipsis', 'arrowvertex', 'arrowhorizex', 'carriagereturn', 'aleph', 'Ifraktur', 'Rfraktur', 'weierstrass', 'circlemultiply', 'circleplus', 'emptyset', 'intersection', 'union', 'propersuperset', 'reflexsuperset', 'notsubset', 'propersubset', 'reflexsubset', 'element', 'notelement', 'angle', 'gradient', 'registerserif', 'copyrightserif', 'trademarkserif', 'product', 'radical', 'dotmath', 'logicalnot', 'logicaland', 'logicalor', 'arrowdblboth', 'arrowdblleft', 'arrowdblup', 'arrowdblright', 'arrowdbldown', 'lozenge', 'angleleft', 'registersans', 'copyrightsans', 'trademarksans', 'summation', 'parenlefttp', 'parenleftex', 'parenleftbt', 'bracketlefttp', 'bracketleftex', 'bracketleftbt', 'bracelefttp', 'braceleftmid', 'braceleftbt', 'braceex', '', 'angleright', 'integral', 'integraltp', 'integralex', 'integralbt', 'parenrighttp', 'parenrightex', 'parenrightbt', 'bracketrighttp', 'bracketrightex', 'bracketrightbt', 'bracerighttp', 'bracerightmid', 'bracerightbt', ''];\nvar ZapfDingbatsEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'a1', 'a2', 'a202', 'a3', 'a4', 'a5', 'a119', 'a118', 'a117', 'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a105', 'a17', 'a18', 'a19', 'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a6', 'a7', 'a8', 'a9', 'a10', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36', 'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46', 'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56', 'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66', 'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a203', 'a75', 'a204', 'a76', 'a77', 'a78', 'a79', 'a81', 'a82', 'a83', 'a84', 'a97', 'a98', 'a99', 'a100', '', 'a89', 'a90', 'a93', 'a94', 'a91', 'a92', 'a205', 'a85', 'a206', 'a86', 'a87', 'a88', 'a95', 'a96', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'a101', 'a102', 'a103', 'a104', 'a106', 'a107', 'a108', 'a112', 'a111', 'a110', 'a109', 'a120', 'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129', 'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138', 'a139', 'a140', 'a141', 'a142', 'a143', 'a144', 'a145', 'a146', 'a147', 'a148', 'a149', 'a150', 'a151', 'a152', 'a153', 'a154', 'a155', 'a156', 'a157', 'a158', 'a159', 'a160', 'a161', 'a163', 'a164', 'a196', 'a165', 'a192', 'a166', 'a167', 'a168', 'a169', 'a170', 'a171', 'a172', 'a173', 'a162', 'a174', 'a175', 'a176', 'a177', 'a178', 'a179', 'a193', 'a180', 'a199', 'a181', 'a200', 'a182', '', 'a201', 'a183', 'a184', 'a197', 'a185', 'a194', 'a198', 'a186', 'a195', 'a187', 'a188', 'a189', 'a190', 'a191', ''];\nfunction getEncoding(encodingName) {\n  switch (encodingName) {\n    case 'WinAnsiEncoding':\n      return WinAnsiEncoding;\n    case 'StandardEncoding':\n      return StandardEncoding;\n    case 'MacRomanEncoding':\n      return MacRomanEncoding;\n    case 'SymbolSetEncoding':\n      return SymbolSetEncoding;\n    case 'ZapfDingbatsEncoding':\n      return ZapfDingbatsEncoding;\n    case 'ExpertEncoding':\n      return ExpertEncoding;\n    case 'MacExpertEncoding':\n      return MacExpertEncoding;\n    default:\n      return null;\n  }\n}\nexports.WinAnsiEncoding = WinAnsiEncoding;\nexports.StandardEncoding = StandardEncoding;\nexports.MacRomanEncoding = MacRomanEncoding;\nexports.SymbolSetEncoding = SymbolSetEncoding;\nexports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\nexports.ExpertEncoding = ExpertEncoding;\nexports.getEncoding = getEncoding;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $keys = __w_pdfjs_require__(98);\nvar enumBugKeys = __w_pdfjs_require__(53);\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar def = __w_pdfjs_require__(16).f;\nvar has = __w_pdfjs_require__(10);\nvar TAG = __w_pdfjs_require__(2)('toStringTag');\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {\n    configurable: true,\n    value: tag\n  });\n};\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(11);\nvar call = __w_pdfjs_require__(103);\nvar isArrayIter = __w_pdfjs_require__(104);\nvar anObject = __w_pdfjs_require__(8);\nvar toLength = __w_pdfjs_require__(31);\nvar getIterFn = __w_pdfjs_require__(105);\nvar BREAK = {};\nvar RETURN = {};\nvar _exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () {\n    return iterable;\n  } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\n_exports.BREAK = BREAK;\n_exports.RETURN = RETURN;\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = exports.Linearization = exports.Lexer = undefined;\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _ccitt_stream = __w_pdfjs_require__(134);\n\nvar _jbig2_stream = __w_pdfjs_require__(135);\n\nvar _jpeg_stream = __w_pdfjs_require__(41);\n\nvar _jpx_stream = __w_pdfjs_require__(138);\n\nvar MAX_LENGTH_TO_CACHE = 1000;\nvar MAX_ADLER32_LENGTH = 5552;\nfunction computeAdler32(bytes) {\n  var bytesLength = bytes.length;\n  if (bytesLength >= MAX_ADLER32_LENGTH) {\n    throw new Error('computeAdler32: The input is too large.');\n  }\n  var a = 1,\n      b = 0;\n  for (var i = 0; i < bytesLength; ++i) {\n    a += bytes[i] & 0xFF;\n    b += a;\n  }\n  return b % 65521 << 16 | a % 65521;\n}\nvar Parser = function ParserClosure() {\n  function Parser(lexer, allowStreams, xref, recoveryMode) {\n    this.lexer = lexer;\n    this.allowStreams = allowStreams;\n    this.xref = xref;\n    this.recoveryMode = recoveryMode || false;\n    this.imageCache = Object.create(null);\n    this.refill();\n  }\n  Parser.prototype = {\n    refill: function Parser_refill() {\n      this.buf1 = this.lexer.getObj();\n      this.buf2 = this.lexer.getObj();\n    },\n    shift: function Parser_shift() {\n      if ((0, _primitives.isCmd)(this.buf2, 'ID')) {\n        this.buf1 = this.buf2;\n        this.buf2 = null;\n      } else {\n        this.buf1 = this.buf2;\n        this.buf2 = this.lexer.getObj();\n      }\n    },\n    tryShift: function Parser_tryShift() {\n      try {\n        this.shift();\n        return true;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        return false;\n      }\n    },\n    getObj: function Parser_getObj(cipherTransform) {\n      var buf1 = this.buf1;\n      this.shift();\n      if (buf1 instanceof _primitives.Cmd) {\n        switch (buf1.cmd) {\n          case 'BI':\n            return this.makeInlineImage(cipherTransform);\n          case '[':\n            var array = [];\n            while (!(0, _primitives.isCmd)(this.buf1, ']') && !(0, _primitives.isEOF)(this.buf1)) {\n              array.push(this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside array');\n              }\n              return array;\n            }\n            this.shift();\n            return array;\n          case '<<':\n            var dict = new _primitives.Dict(this.xref);\n            while (!(0, _primitives.isCmd)(this.buf1, '>>') && !(0, _primitives.isEOF)(this.buf1)) {\n              if (!(0, _primitives.isName)(this.buf1)) {\n                (0, _util.info)('Malformed dictionary: key must be a name object');\n                this.shift();\n                continue;\n              }\n              var key = this.buf1.name;\n              this.shift();\n              if ((0, _primitives.isEOF)(this.buf1)) {\n                break;\n              }\n              dict.set(key, this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside dictionary');\n              }\n              return dict;\n            }\n            if ((0, _primitives.isCmd)(this.buf2, 'stream')) {\n              return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n            }\n            this.shift();\n            return dict;\n          default:\n            return buf1;\n        }\n      }\n      if (Number.isInteger(buf1)) {\n        var num = buf1;\n        if (Number.isInteger(this.buf1) && (0, _primitives.isCmd)(this.buf2, 'R')) {\n          var ref = new _primitives.Ref(num, this.buf1);\n          this.shift();\n          this.shift();\n          return ref;\n        }\n        return num;\n      }\n      if ((0, _util.isString)(buf1)) {\n        var str = buf1;\n        if (cipherTransform) {\n          str = cipherTransform.decryptString(str);\n        }\n        return str;\n      }\n      return buf1;\n    },\n    findDefaultInlineStreamEnd: function findDefaultInlineStreamEnd(stream) {\n      var E = 0x45,\n          I = 0x49,\n          SPACE = 0x20,\n          LF = 0xA,\n          CR = 0xD;\n      var n = 10,\n          NUL = 0x0;\n      var startPos = stream.pos,\n          state = 0,\n          ch = void 0,\n          maybeEIPos = void 0;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else {\n          (0, _util.assert)(state === 2);\n          if (ch === SPACE || ch === LF || ch === CR) {\n            maybeEIPos = stream.pos;\n            var followingBytes = stream.peekBytes(n);\n            for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n              ch = followingBytes[i];\n              if (ch === NUL && followingBytes[i + 1] !== NUL) {\n                continue;\n              }\n              if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n                state = 0;\n                break;\n              }\n            }\n            if (state === 2) {\n              break;\n            }\n          } else {\n            state = 0;\n          }\n        }\n      }\n      if (ch === -1) {\n        (0, _util.warn)('findDefaultInlineStreamEnd: ' + 'Reached the end of the stream without finding a valid EI marker');\n        if (maybeEIPos) {\n          (0, _util.warn)('... trying to recover by using the last \"EI\" occurrence.');\n          stream.skip(-(stream.pos - maybeEIPos));\n        }\n      }\n      return stream.pos - 4 - startPos;\n    },\n\n    findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n      var startPos = stream.pos,\n          foundEOI = false,\n          b,\n          markerLength,\n          length;\n      while ((b = stream.getByte()) !== -1) {\n        if (b !== 0xFF) {\n          continue;\n        }\n        switch (stream.getByte()) {\n          case 0x00:\n            break;\n          case 0xFF:\n            stream.skip(-1);\n            break;\n          case 0xD9:\n            foundEOI = true;\n            break;\n          case 0xC0:\n          case 0xC1:\n          case 0xC2:\n          case 0xC3:\n          case 0xC5:\n          case 0xC6:\n          case 0xC7:\n          case 0xC9:\n          case 0xCA:\n          case 0xCB:\n          case 0xCD:\n          case 0xCE:\n          case 0xCF:\n          case 0xC4:\n          case 0xCC:\n          case 0xDA:\n          case 0xDB:\n          case 0xDC:\n          case 0xDD:\n          case 0xDE:\n          case 0xDF:\n          case 0xE0:\n          case 0xE1:\n          case 0xE2:\n          case 0xE3:\n          case 0xE4:\n          case 0xE5:\n          case 0xE6:\n          case 0xE7:\n          case 0xE8:\n          case 0xE9:\n          case 0xEA:\n          case 0xEB:\n          case 0xEC:\n          case 0xED:\n          case 0xEE:\n          case 0xEF:\n          case 0xFE:\n            markerLength = stream.getUint16();\n            if (markerLength > 2) {\n              stream.skip(markerLength - 2);\n            } else {\n              stream.skip(-2);\n            }\n            break;\n        }\n        if (foundEOI) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (b === -1) {\n        (0, _util.warn)('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n      var TILDE = 0x7E,\n          GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === TILDE && stream.peekByte() === GT) {\n          stream.skip();\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n      var GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === GT) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n      var E = 0x45,\n          I = 0x49;\n      var state = 0,\n          ch;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else if (state === 2) {\n          break;\n        }\n      }\n    },\n    makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      var dict = new _primitives.Dict(this.xref),\n          dictLength = void 0;\n      while (!(0, _primitives.isCmd)(this.buf1, 'ID') && !(0, _primitives.isEOF)(this.buf1)) {\n        if (!(0, _primitives.isName)(this.buf1)) {\n          throw new _util.FormatError('Dictionary key must be a name object');\n        }\n        var key = this.buf1.name;\n        this.shift();\n        if ((0, _primitives.isEOF)(this.buf1)) {\n          break;\n        }\n        dict.set(key, this.getObj(cipherTransform));\n      }\n      if (lexer.beginInlineImagePos !== -1) {\n        dictLength = stream.pos - lexer.beginInlineImagePos;\n      }\n      var filter = dict.get('Filter', 'F'),\n          filterName;\n      if ((0, _primitives.isName)(filter)) {\n        filterName = filter.name;\n      } else if (Array.isArray(filter)) {\n        var filterZero = this.xref.fetchIfRef(filter[0]);\n        if ((0, _primitives.isName)(filterZero)) {\n          filterName = filterZero.name;\n        }\n      }\n      var startPos = stream.pos,\n          length = void 0;\n      if (filterName === 'DCTDecode' || filterName === 'DCT') {\n        length = this.findDCTDecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCII85Decode' || filterName === 'A85') {\n        length = this.findASCII85DecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n        length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n      } else {\n        length = this.findDefaultInlineStreamEnd(stream);\n      }\n      var imageStream = stream.makeSubStream(startPos, length, dict);\n      var cacheKey = void 0;\n      if (length < MAX_LENGTH_TO_CACHE && dictLength < MAX_ADLER32_LENGTH) {\n        var imageBytes = imageStream.getBytes();\n        imageStream.reset();\n        var initialStreamPos = stream.pos;\n        stream.pos = lexer.beginInlineImagePos;\n        var dictBytes = stream.getBytes(dictLength);\n        stream.pos = initialStreamPos;\n        cacheKey = computeAdler32(imageBytes) + '_' + computeAdler32(dictBytes);\n        var cacheEntry = this.imageCache[cacheKey];\n        if (cacheEntry !== undefined) {\n          this.buf2 = _primitives.Cmd.get('EI');\n          this.shift();\n          cacheEntry.reset();\n          return cacheEntry;\n        }\n      }\n      if (cipherTransform) {\n        imageStream = cipherTransform.createStream(imageStream, length);\n      }\n      imageStream = this.filter(imageStream, dict, length);\n      imageStream.dict = dict;\n      if (cacheKey !== undefined) {\n        imageStream.cacheKey = 'inline_' + length + '_' + cacheKey;\n        this.imageCache[cacheKey] = imageStream;\n      }\n      this.buf2 = _primitives.Cmd.get('EI');\n      this.shift();\n      return imageStream;\n    },\n    makeStream: function Parser_makeStream(dict, cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      lexer.skipToNextLine();\n      var pos = stream.pos - 1;\n      var length = dict.get('Length');\n      if (!Number.isInteger(length)) {\n        (0, _util.info)('Bad ' + length + ' attribute in stream');\n        length = 0;\n      }\n      stream.pos = pos + length;\n      lexer.nextChar();\n      if (this.tryShift() && (0, _primitives.isCmd)(this.buf2, 'endstream')) {\n        this.shift();\n      } else {\n        stream.pos = pos;\n        var SCAN_BLOCK_SIZE = 2048;\n        var ENDSTREAM_SIGNATURE_LENGTH = 9;\n        var ENDSTREAM_SIGNATURE = [0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D];\n        var skipped = 0,\n            found = false,\n            i,\n            j;\n        while (stream.pos < stream.end) {\n          var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n          var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n          if (scanLength <= 0) {\n            break;\n          }\n          found = false;\n          i = 0;\n          while (i < scanLength) {\n            j = 0;\n            while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n              j++;\n            }\n            if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n              found = true;\n              break;\n            }\n            i++;\n          }\n          if (found) {\n            skipped += i;\n            stream.pos += i;\n            break;\n          }\n          skipped += scanLength;\n          stream.pos += scanLength;\n        }\n        if (!found) {\n          throw new _util.FormatError('Missing endstream');\n        }\n        length = skipped;\n        lexer.nextChar();\n        this.shift();\n        this.shift();\n      }\n      this.shift();\n      stream = stream.makeSubStream(pos, length, dict);\n      if (cipherTransform) {\n        stream = cipherTransform.createStream(stream, length);\n      }\n      stream = this.filter(stream, dict, length);\n      stream.dict = dict;\n      return stream;\n    },\n    filter: function Parser_filter(stream, dict, length) {\n      var filter = dict.get('Filter', 'F');\n      var params = dict.get('DecodeParms', 'DP');\n      if ((0, _primitives.isName)(filter)) {\n        if (Array.isArray(params)) {\n          (0, _util.warn)('/DecodeParms should not contain an Array, ' + 'when /Filter contains a Name.');\n        }\n        return this.makeFilter(stream, filter.name, length, params);\n      }\n      var maybeLength = length;\n      if (Array.isArray(filter)) {\n        var filterArray = filter;\n        var paramsArray = params;\n        for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n          filter = this.xref.fetchIfRef(filterArray[i]);\n          if (!(0, _primitives.isName)(filter)) {\n            throw new _util.FormatError('Bad filter name: ' + filter);\n          }\n          params = null;\n          if (Array.isArray(paramsArray) && i in paramsArray) {\n            params = this.xref.fetchIfRef(paramsArray[i]);\n          }\n          stream = this.makeFilter(stream, filter.name, maybeLength, params);\n          maybeLength = null;\n        }\n      }\n      return stream;\n    },\n    makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n      if (maybeLength === 0) {\n        (0, _util.warn)('Empty \"' + name + '\" stream.');\n        return new _stream.NullStream();\n      }\n      try {\n        var xrefStreamStats = this.xref.stats.streamTypes;\n        if (name === 'FlateDecode' || name === 'Fl') {\n          xrefStreamStats[_util.StreamType.FLATE] = true;\n          if (params) {\n            return new _stream.PredictorStream(new _stream.FlateStream(stream, maybeLength), maybeLength, params);\n          }\n          return new _stream.FlateStream(stream, maybeLength);\n        }\n        if (name === 'LZWDecode' || name === 'LZW') {\n          xrefStreamStats[_util.StreamType.LZW] = true;\n          var earlyChange = 1;\n          if (params) {\n            if (params.has('EarlyChange')) {\n              earlyChange = params.get('EarlyChange');\n            }\n            return new _stream.PredictorStream(new _stream.LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n          }\n          return new _stream.LZWStream(stream, maybeLength, earlyChange);\n        }\n        if (name === 'DCTDecode' || name === 'DCT') {\n          xrefStreamStats[_util.StreamType.DCT] = true;\n          return new _jpeg_stream.JpegStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'JPXDecode' || name === 'JPX') {\n          xrefStreamStats[_util.StreamType.JPX] = true;\n          return new _jpx_stream.JpxStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'ASCII85Decode' || name === 'A85') {\n          xrefStreamStats[_util.StreamType.A85] = true;\n          return new _stream.Ascii85Stream(stream, maybeLength);\n        }\n        if (name === 'ASCIIHexDecode' || name === 'AHx') {\n          xrefStreamStats[_util.StreamType.AHX] = true;\n          return new _stream.AsciiHexStream(stream, maybeLength);\n        }\n        if (name === 'CCITTFaxDecode' || name === 'CCF') {\n          xrefStreamStats[_util.StreamType.CCF] = true;\n          return new _ccitt_stream.CCITTFaxStream(stream, maybeLength, params);\n        }\n        if (name === 'RunLengthDecode' || name === 'RL') {\n          xrefStreamStats[_util.StreamType.RL] = true;\n          return new _stream.RunLengthStream(stream, maybeLength);\n        }\n        if (name === 'JBIG2Decode') {\n          xrefStreamStats[_util.StreamType.JBIG] = true;\n          return new _jbig2_stream.Jbig2Stream(stream, maybeLength, stream.dict, params);\n        }\n        (0, _util.warn)('filter \"' + name + '\" not supported yet');\n        return stream;\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid stream: \\\"' + ex + '\\\"');\n        return new _stream.NullStream();\n      }\n    }\n  };\n  return Parser;\n}();\nvar Lexer = function LexerClosure() {\n  function Lexer(stream, knownCommands) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n    this.knownCommands = knownCommands;\n    this.beginInlineImagePos = -1;\n  }\n  var specialChars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  function toHexDigit(ch) {\n    if (ch >= 0x30 && ch <= 0x39) {\n      return ch & 0x0F;\n    }\n    if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n      return (ch & 0x0F) + 9;\n    }\n    return -1;\n  }\n  Lexer.prototype = {\n    nextChar: function Lexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    peekChar: function Lexer_peekChar() {\n      return this.stream.peekByte();\n    },\n    getNumber: function Lexer_getNumber() {\n      var ch = this.currentChar;\n      var eNotation = false;\n      var divideBy = 0;\n      var sign = 1;\n      if (ch === 0x2D) {\n        sign = -1;\n        ch = this.nextChar();\n        if (ch === 0x2D) {\n          ch = this.nextChar();\n        }\n      } else if (ch === 0x2B) {\n        ch = this.nextChar();\n      }\n      if (ch === 0x2E) {\n        divideBy = 10;\n        ch = this.nextChar();\n      }\n      if (ch === 0x0A || ch === 0x0D) {\n        do {\n          ch = this.nextChar();\n        } while (ch === 0x0A || ch === 0x0D);\n      }\n      if (ch < 0x30 || ch > 0x39) {\n        throw new _util.FormatError('Invalid number: ' + String.fromCharCode(ch) + ' (charCode ' + ch + ')');\n      }\n      var baseValue = ch - 0x30;\n      var powerValue = 0;\n      var powerValueSign = 1;\n      while ((ch = this.nextChar()) >= 0) {\n        if (0x30 <= ch && ch <= 0x39) {\n          var currentDigit = ch - 0x30;\n          if (eNotation) {\n            powerValue = powerValue * 10 + currentDigit;\n          } else {\n            if (divideBy !== 0) {\n              divideBy *= 10;\n            }\n            baseValue = baseValue * 10 + currentDigit;\n          }\n        } else if (ch === 0x2E) {\n          if (divideBy === 0) {\n            divideBy = 1;\n          } else {\n            break;\n          }\n        } else if (ch === 0x2D) {\n          (0, _util.warn)('Badly formatted number');\n        } else if (ch === 0x45 || ch === 0x65) {\n          ch = this.peekChar();\n          if (ch === 0x2B || ch === 0x2D) {\n            powerValueSign = ch === 0x2D ? -1 : 1;\n            this.nextChar();\n          } else if (ch < 0x30 || ch > 0x39) {\n            break;\n          }\n          eNotation = true;\n        } else {\n          break;\n        }\n      }\n      if (divideBy !== 0) {\n        baseValue /= divideBy;\n      }\n      if (eNotation) {\n        baseValue *= Math.pow(10, powerValueSign * powerValue);\n      }\n      return sign * baseValue;\n    },\n    getString: function Lexer_getString() {\n      var numParen = 1;\n      var done = false;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.nextChar();\n      while (true) {\n        var charBuffered = false;\n        switch (ch | 0) {\n          case -1:\n            (0, _util.warn)('Unterminated string');\n            done = true;\n            break;\n          case 0x28:\n            ++numParen;\n            strBuf.push('(');\n            break;\n          case 0x29:\n            if (--numParen === 0) {\n              this.nextChar();\n              done = true;\n            } else {\n              strBuf.push(')');\n            }\n            break;\n          case 0x5C:\n            ch = this.nextChar();\n            switch (ch) {\n              case -1:\n                (0, _util.warn)('Unterminated string');\n                done = true;\n                break;\n              case 0x6E:\n                strBuf.push('\\n');\n                break;\n              case 0x72:\n                strBuf.push('\\r');\n                break;\n              case 0x74:\n                strBuf.push('\\t');\n                break;\n              case 0x62:\n                strBuf.push('\\b');\n                break;\n              case 0x66:\n                strBuf.push('\\f');\n                break;\n              case 0x5C:\n              case 0x28:\n              case 0x29:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n              case 0x30:\n              case 0x31:\n              case 0x32:\n              case 0x33:\n              case 0x34:\n              case 0x35:\n              case 0x36:\n              case 0x37:\n                var x = ch & 0x0F;\n                ch = this.nextChar();\n                charBuffered = true;\n                if (ch >= 0x30 && ch <= 0x37) {\n                  x = (x << 3) + (ch & 0x0F);\n                  ch = this.nextChar();\n                  if (ch >= 0x30 && ch <= 0x37) {\n                    charBuffered = false;\n                    x = (x << 3) + (ch & 0x0F);\n                  }\n                }\n                strBuf.push(String.fromCharCode(x));\n                break;\n              case 0x0D:\n                if (this.peekChar() === 0x0A) {\n                  this.nextChar();\n                }\n                break;\n              case 0x0A:\n                break;\n              default:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n            }\n            break;\n          default:\n            strBuf.push(String.fromCharCode(ch));\n            break;\n        }\n        if (done) {\n          break;\n        }\n        if (!charBuffered) {\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getName: function Lexer_getName() {\n      var ch, previousCh;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        if (ch === 0x23) {\n          ch = this.nextChar();\n          if (specialChars[ch]) {\n            (0, _util.warn)('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n            strBuf.push('#');\n            break;\n          }\n          var x = toHexDigit(ch);\n          if (x !== -1) {\n            previousCh = ch;\n            ch = this.nextChar();\n            var x2 = toHexDigit(ch);\n            if (x2 === -1) {\n              (0, _util.warn)('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n              strBuf.push('#', String.fromCharCode(previousCh));\n              if (specialChars[ch]) {\n                break;\n              }\n              strBuf.push(String.fromCharCode(ch));\n              continue;\n            }\n            strBuf.push(String.fromCharCode(x << 4 | x2));\n          } else {\n            strBuf.push('#', String.fromCharCode(ch));\n          }\n        } else {\n          strBuf.push(String.fromCharCode(ch));\n        }\n      }\n      if (strBuf.length > 127) {\n        (0, _util.warn)('name token is longer than allowed by the spec: ' + strBuf.length);\n      }\n      return _primitives.Name.get(strBuf.join(''));\n    },\n    getHexString: function Lexer_getHexString() {\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.currentChar;\n      var isFirstHex = true;\n      var firstDigit;\n      var secondDigit;\n      while (true) {\n        if (ch < 0) {\n          (0, _util.warn)('Unterminated hex string');\n          break;\n        } else if (ch === 0x3E) {\n          this.nextChar();\n          break;\n        } else if (specialChars[ch] === 1) {\n          ch = this.nextChar();\n          continue;\n        } else {\n          if (isFirstHex) {\n            firstDigit = toHexDigit(ch);\n            if (firstDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n          } else {\n            secondDigit = toHexDigit(ch);\n            if (secondDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n            strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n          }\n          isFirstHex = !isFirstHex;\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getObj: function Lexer_getObj() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (specialChars[ch] !== 1) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return this.getNumber();\n        case 0x28:\n          return this.getString();\n        case 0x2F:\n          return this.getName();\n        case 0x5B:\n          this.nextChar();\n          return _primitives.Cmd.get('[');\n        case 0x5D:\n          this.nextChar();\n          return _primitives.Cmd.get(']');\n        case 0x3C:\n          ch = this.nextChar();\n          if (ch === 0x3C) {\n            this.nextChar();\n            return _primitives.Cmd.get('<<');\n          }\n          return this.getHexString();\n        case 0x3E:\n          ch = this.nextChar();\n          if (ch === 0x3E) {\n            this.nextChar();\n            return _primitives.Cmd.get('>>');\n          }\n          return _primitives.Cmd.get('>');\n        case 0x7B:\n          this.nextChar();\n          return _primitives.Cmd.get('{');\n        case 0x7D:\n          this.nextChar();\n          return _primitives.Cmd.get('}');\n        case 0x29:\n          this.nextChar();\n          throw new _util.FormatError('Illegal character: ' + ch);\n      }\n      var str = String.fromCharCode(ch);\n      var knownCommands = this.knownCommands;\n      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        var possibleCommand = str + String.fromCharCode(ch);\n        if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n          break;\n        }\n        if (str.length === 128) {\n          throw new _util.FormatError('Command token too long: ' + str.length);\n        }\n        str = possibleCommand;\n        knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      }\n      if (str === 'true') {\n        return true;\n      }\n      if (str === 'false') {\n        return false;\n      }\n      if (str === 'null') {\n        return null;\n      }\n      if (str === 'BI') {\n        this.beginInlineImagePos = this.stream.pos;\n      }\n      return _primitives.Cmd.get(str);\n    },\n    skipToNextLine: function Lexer_skipToNextLine() {\n      var ch = this.currentChar;\n      while (ch >= 0) {\n        if (ch === 0x0D) {\n          ch = this.nextChar();\n          if (ch === 0x0A) {\n            this.nextChar();\n          }\n          break;\n        } else if (ch === 0x0A) {\n          this.nextChar();\n          break;\n        }\n        ch = this.nextChar();\n      }\n    }\n  };\n  return Lexer;\n}();\nvar Linearization = {\n  create: function LinearizationCreate(stream) {\n    function getInt(name, allowZeroValue) {\n      var obj = linDict.get(name);\n      if (Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n        return obj;\n      }\n      throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n    }\n    function getHints() {\n      var hints = linDict.get('H'),\n          hintsLength,\n          item;\n      if (Array.isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n        for (var index = 0; index < hintsLength; index++) {\n          if (!(Number.isInteger(item = hints[index]) && item > 0)) {\n            throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n          }\n        }\n        return hints;\n      }\n      throw new Error('Hint array in the linearization dictionary is invalid.');\n    }\n    var parser = new Parser(new Lexer(stream), false, null);\n    var obj1 = parser.getObj();\n    var obj2 = parser.getObj();\n    var obj3 = parser.getObj();\n    var linDict = parser.getObj();\n    var obj, length;\n    if (!(Number.isInteger(obj1) && Number.isInteger(obj2) && (0, _primitives.isCmd)(obj3, 'obj') && (0, _primitives.isDict)(linDict) && (0, _util.isNum)(obj = linDict.get('Linearized')) && obj > 0)) {\n      return null;\n    } else if ((length = getInt('L')) !== stream.length) {\n      throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n    }\n    return {\n      length: length,\n      hints: getHints(),\n      objectNumberFirst: getInt('O'),\n      endFirst: getInt('E'),\n      numPages: getInt('N'),\n      mainXRefEntriesOffset: getInt('T'),\n      pageFirst: linDict.has('P') ? getInt('P', true) : 0\n    };\n  }\n};\nexports.Lexer = Lexer;\nexports.Linearization = Linearization;\nexports.Parser = Parser;\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar document = __w_pdfjs_require__(6).document;\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(15);\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(32);\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0;\n};\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(15);\nvar TAG = __w_pdfjs_require__(2)('toStringTag');\nvar ARG = cof(function () {\n  return arguments;\n}()) == 'Arguments';\nvar tryGet = function tryGet(it, key) {\n  try {\n    return it[key];\n  } catch (e) {}\n};\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null' : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T : ARG ? cof(O) : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar shared = __w_pdfjs_require__(47)('keys');\nvar uid = __w_pdfjs_require__(22);\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar defined = __w_pdfjs_require__(23);\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) {\n    throw TypeError(name + ': incorrect invocation!');\n  }\n  return it;\n};\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar aFunction = __w_pdfjs_require__(17);\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar redefine = __w_pdfjs_require__(9);\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    redefine(target, key, src[key], safe);\n  }return target;\n};\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar META = __w_pdfjs_require__(22)('meta');\nvar isObject = __w_pdfjs_require__(3);\nvar has = __w_pdfjs_require__(10);\nvar setDesc = __w_pdfjs_require__(16).f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !__w_pdfjs_require__(14)(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function setMeta(it) {\n  setDesc(it, META, {\n    value: {\n      i: 'O' + ++id,\n      w: {}\n    }\n  });\n};\nvar fastKey = function fastKey(it, create) {\n  if (!isObject(it)) return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    if (!isExtensible(it)) return 'F';\n    if (!create) return 'E';\n    setMeta(it);\n  }\n  return it[META].i;\n};\nvar getWeak = function getWeak(it, create) {\n  if (!has(it, META)) {\n    if (!isExtensible(it)) return true;\n    if (!create) return false;\n    setMeta(it);\n  }\n  return it[META].w;\n};\nvar onFreeze = function onFreeze(it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nexports.f = {}.propertyIsEnumerable;\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegStream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _jpg = __w_pdfjs_require__(137);\n\nvar JpegStream = function JpegStreamClosure() {\n  function JpegStream(stream, maybeLength, dict, params) {\n    var ch = void 0;\n    while ((ch = stream.getByte()) !== -1) {\n      if (ch === 0xFF) {\n        stream.skip(-1);\n        break;\n      }\n    }\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpegStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpegStream.prototype, 'bytes', {\n    get: function JpegStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpegStream.prototype.ensureBuffer = function (requested) {};\n  JpegStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpegImage = new _jpg.JpegImage();\n    var decodeArr = this.dict.getArray('Decode', 'D');\n    if (this.forceRGB && Array.isArray(decodeArr)) {\n      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n      var decodeArrLength = decodeArr.length;\n      var transform = new Int32Array(decodeArrLength);\n      var transformNeeded = false;\n      var maxValue = (1 << bitsPerComponent) - 1;\n      for (var i = 0; i < decodeArrLength; i += 2) {\n        transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n        transform[i + 1] = decodeArr[i] * maxValue | 0;\n        if (transform[i] !== 256 || transform[i + 1] !== 0) {\n          transformNeeded = true;\n        }\n      }\n      if (transformNeeded) {\n        jpegImage.decodeTransform = transform;\n      }\n    }\n    if ((0, _primitives.isDict)(this.params)) {\n      var colorTransform = this.params.get('ColorTransform');\n      if (Number.isInteger(colorTransform)) {\n        jpegImage.colorTransform = colorTransform;\n      }\n    }\n    jpegImage.parse(this.bytes);\n    var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n    this.buffer = data;\n    this.bufferLength = data.length;\n    this.eof = true;\n  };\n  JpegStream.prototype.getIR = function () {\n    var forceDataSchema = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    return (0, _util.createObjectURL)(this.bytes, 'image/jpeg', forceDataSchema);\n  };\n  return JpegStream;\n}();\nexports.JpegStream = JpegStream;\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OperatorList = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar QueueOptimizer = function QueueOptimizerClosure() {\n  function addState(parentState, pattern, checkFn, iterateFn, processFn) {\n    var state = parentState;\n    for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n      var item = pattern[i];\n      state = state[item] || (state[item] = []);\n    }\n    state[pattern[pattern.length - 1]] = {\n      checkFn: checkFn,\n      iterateFn: iterateFn,\n      processFn: processFn\n    };\n  }\n  function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n    var iFirstPIMXO = iFirstSave + 2;\n    for (var i = 0; i < count; i++) {\n      var arg = argsArray[iFirstPIMXO + 4 * i];\n      var imageMask = arg.length === 1 && arg[0];\n      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n        fnArray[iFirstPIMXO + 4 * i] = _util.OPS.paintSolidColorImageMask;\n        continue;\n      }\n      break;\n    }\n    return count - i;\n  }\n  var InitialState = [];\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintInlineImageXObject, _util.OPS.restore], null, function iterateInlineImageGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintInlineImageXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundInlineImageGroup(context, i) {\n    var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n    var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n    var MAX_WIDTH = 1000;\n    var IMAGE_PADDING = 1;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIIXO = curr - 1;\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n    if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var maxX = 0;\n    var map = [],\n        maxLineHeight = 0;\n    var currentX = IMAGE_PADDING,\n        currentY = IMAGE_PADDING;\n    var q;\n    for (q = 0; q < count; q++) {\n      var transform = argsArray[iFirstTransform + (q << 2)];\n      var img = argsArray[iFirstPIIXO + (q << 2)][0];\n      if (currentX + img.width > MAX_WIDTH) {\n        maxX = Math.max(maxX, currentX);\n        currentY += maxLineHeight + 2 * IMAGE_PADDING;\n        currentX = 0;\n        maxLineHeight = 0;\n      }\n      map.push({\n        transform: transform,\n        x: currentX,\n        y: currentY,\n        w: img.width,\n        h: img.height\n      });\n      currentX += img.width + 2 * IMAGE_PADDING;\n      maxLineHeight = Math.max(maxLineHeight, img.height);\n    }\n    var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n    var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n    var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n    var imgRowSize = imgWidth << 2;\n    for (q = 0; q < count; q++) {\n      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n      var rowSize = map[q].w << 2;\n      var dataOffset = 0;\n      var offset = map[q].x + map[q].y * imgWidth << 2;\n      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n      for (var k = 0, kk = map[q].h; k < kk; k++) {\n        imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n        dataOffset += rowSize;\n        offset += imgRowSize;\n      }\n      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n      while (offset >= 0) {\n        data[offset - 4] = data[offset];\n        data[offset - 3] = data[offset + 1];\n        data[offset - 2] = data[offset + 2];\n        data[offset - 1] = data[offset + 3];\n        data[offset + rowSize] = data[offset + rowSize - 4];\n        data[offset + rowSize + 1] = data[offset + rowSize - 3];\n        data[offset + rowSize + 2] = data[offset + rowSize - 2];\n        data[offset + rowSize + 3] = data[offset + rowSize - 1];\n        offset -= imgRowSize;\n      }\n    }\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintInlineImageXObjectGroup);\n    argsArray.splice(iFirstSave, count * 4, [{\n      width: imgWidth,\n      height: imgHeight,\n      kind: _util.ImageKind.RGBA_32BPP,\n      data: imgData\n    }, map]);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageMaskXObject, _util.OPS.restore], null, function iterateImageMaskGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintImageMaskXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundImageMaskGroup(context, i) {\n    var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n    var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n    var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIMXO = curr - 1;\n    var count = Math.floor((i - iFirstSave) / 4);\n    count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n    if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var q;\n    var isSameImage = false;\n    var iTransform, transformArgs;\n    var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n    if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n      isSameImage = true;\n      var firstTransformArg0 = argsArray[iFirstTransform][0];\n      var firstTransformArg3 = argsArray[iFirstTransform][3];\n      iTransform = iFirstTransform + 4;\n      var iPIMXO = iFirstPIMXO + 4;\n      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n        transformArgs = argsArray[iTransform];\n        if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n          if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n            isSameImage = false;\n          } else {\n            count = q;\n          }\n          break;\n        }\n      }\n    }\n    if (isSameImage) {\n      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n      var positions = new Float32Array(count * 2);\n      iTransform = iFirstTransform;\n      for (q = 0; q < count; q++, iTransform += 4) {\n        transformArgs = argsArray[iTransform];\n        positions[q << 1] = transformArgs[4];\n        positions[(q << 1) + 1] = transformArgs[5];\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectRepeat);\n      argsArray.splice(iFirstSave, count * 4, [firstPIMXOArg0, firstTransformArg0, firstTransformArg3, positions]);\n    } else {\n      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n      var images = [];\n      for (q = 0; q < count; q++) {\n        transformArgs = argsArray[iFirstTransform + (q << 2)];\n        var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n        images.push({\n          data: maskParams.data,\n          width: maskParams.width,\n          height: maskParams.height,\n          transform: transformArgs\n        });\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectGroup);\n      argsArray.splice(iFirstSave, count * 4, [images]);\n    }\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageXObject, _util.OPS.restore], function (context) {\n    var argsArray = context.argsArray;\n    var iFirstTransform = context.iCurr - 2;\n    return argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0;\n  }, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        if (fnArray[i] !== _util.OPS.transform) {\n          return false;\n        }\n        var iFirstTransform = context.iCurr - 2;\n        var firstTransformArg0 = argsArray[iFirstTransform][0];\n        var firstTransformArg3 = argsArray[iFirstTransform][3];\n        if (argsArray[i][0] !== firstTransformArg0 || argsArray[i][1] !== 0 || argsArray[i][2] !== 0 || argsArray[i][3] !== firstTransformArg3) {\n          return false;\n        }\n        return true;\n      case 2:\n        if (fnArray[i] !== _util.OPS.paintImageXObject) {\n          return false;\n        }\n        var iFirstPIXO = context.iCurr - 1;\n        var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n        if (argsArray[i][0] !== firstPIXOArg0) {\n          return false;\n        }\n        return true;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function (context, i) {\n    var MIN_IMAGES_IN_BLOCK = 3;\n    var MAX_IMAGES_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIXO = curr - 1;\n    var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n    var firstTransformArg0 = argsArray[iFirstTransform][0];\n    var firstTransformArg3 = argsArray[iFirstTransform][3];\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_BLOCK);\n    if (count < MIN_IMAGES_IN_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var positions = new Float32Array(count * 2);\n    var iTransform = iFirstTransform;\n    for (var q = 0; q < count; q++, iTransform += 4) {\n      var transformArgs = argsArray[iTransform];\n      positions[q << 1] = transformArgs[4];\n      positions[(q << 1) + 1] = transformArgs[5];\n    }\n    var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3, positions];\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageXObjectRepeat);\n    argsArray.splice(iFirstSave, count * 4, args);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.beginText, _util.OPS.setFont, _util.OPS.setTextMatrix, _util.OPS.showText, _util.OPS.endText], null, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 4;\n    var pos = (i - iFirstSave) % 5;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.beginText;\n      case 1:\n        return fnArray[i] === _util.OPS.setFont;\n      case 2:\n        return fnArray[i] === _util.OPS.setTextMatrix;\n      case 3:\n        if (fnArray[i] !== _util.OPS.showText) {\n          return false;\n        }\n        var iFirstSetFont = context.iCurr - 3;\n        var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n        var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n        if (argsArray[i][0] !== firstSetFontArg0 || argsArray[i][1] !== firstSetFontArg1) {\n          return false;\n        }\n        return true;\n      case 4:\n        return fnArray[i] === _util.OPS.endText;\n    }\n  }, function (context, i) {\n    var MIN_CHARS_IN_BLOCK = 3;\n    var MAX_CHARS_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstBeginText = curr - 4;\n    var iFirstSetFont = curr - 3;\n    var iFirstSetTextMatrix = curr - 2;\n    var iFirstShowText = curr - 1;\n    var iFirstEndText = curr;\n    var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n    var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n    var count = Math.min(Math.floor((i - iFirstBeginText) / 5), MAX_CHARS_IN_BLOCK);\n    if (count < MIN_CHARS_IN_BLOCK) {\n      return i - (i - iFirstBeginText) % 5;\n    }\n    var iFirst = iFirstBeginText;\n    if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n      count++;\n      iFirst -= 5;\n    }\n    var iEndText = iFirst + 4;\n    for (var q = 1; q < count; q++) {\n      fnArray.splice(iEndText, 3);\n      argsArray.splice(iEndText, 3);\n      iEndText += 2;\n    }\n    return iEndText + 1;\n  });\n  function QueueOptimizer(queue) {\n    this.queue = queue;\n    this.state = null;\n    this.context = {\n      iCurr: 0,\n      fnArray: queue.fnArray,\n      argsArray: queue.argsArray\n    };\n    this.match = null;\n    this.lastProcessed = 0;\n  }\n  QueueOptimizer.prototype = {\n    _optimize: function _optimize() {\n      var fnArray = this.queue.fnArray;\n      var i = this.lastProcessed,\n          ii = fnArray.length;\n      var state = this.state;\n      var match = this.match;\n      if (!state && !match && i + 1 === ii && !InitialState[fnArray[i]]) {\n        this.lastProcessed = ii;\n        return;\n      }\n      var context = this.context;\n      while (i < ii) {\n        if (match) {\n          var iterate = (0, match.iterateFn)(context, i);\n          if (iterate) {\n            i++;\n            continue;\n          }\n          i = (0, match.processFn)(context, i + 1);\n          ii = fnArray.length;\n          match = null;\n          state = null;\n          if (i >= ii) {\n            break;\n          }\n        }\n        state = (state || InitialState)[fnArray[i]];\n        if (!state || Array.isArray(state)) {\n          i++;\n          continue;\n        }\n        context.iCurr = i;\n        i++;\n        if (state.checkFn && !(0, state.checkFn)(context)) {\n          state = null;\n          continue;\n        }\n        match = state;\n        state = null;\n      }\n      this.state = state;\n      this.match = match;\n      this.lastProcessed = i;\n    },\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n      this._optimize();\n    },\n    flush: function flush() {\n      while (this.match) {\n        var length = this.queue.fnArray.length;\n        this.lastProcessed = (0, this.match.processFn)(this.context, length);\n        this.match = null;\n        this.state = null;\n        this._optimize();\n      }\n    },\n    reset: function reset() {\n      this.state = null;\n      this.match = null;\n      this.lastProcessed = 0;\n    }\n  };\n  return QueueOptimizer;\n}();\nvar NullOptimizer = function NullOptimizerClosure() {\n  function NullOptimizer(queue) {\n    this.queue = queue;\n  }\n  NullOptimizer.prototype = {\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n    },\n    flush: function flush() {}\n  };\n  return NullOptimizer;\n}();\nvar OperatorList = function OperatorListClosure() {\n  var CHUNK_SIZE = 1000;\n  var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n  function getTransfers(queue) {\n    var transfers = [];\n    var fnArray = queue.fnArray,\n        argsArray = queue.argsArray;\n    for (var i = 0, ii = queue.length; i < ii; i++) {\n      switch (fnArray[i]) {\n        case _util.OPS.paintInlineImageXObject:\n        case _util.OPS.paintInlineImageXObjectGroup:\n        case _util.OPS.paintImageMaskXObject:\n          var arg = argsArray[i][0];\n          if (!arg.cached) {\n            transfers.push(arg.data.buffer);\n          }\n          break;\n      }\n    }\n    return transfers;\n  }\n  function OperatorList(intent, messageHandler, pageIndex) {\n    this.messageHandler = messageHandler;\n    this.fnArray = [];\n    this.argsArray = [];\n    if (messageHandler && this.intent !== 'oplist') {\n      this.optimizer = new QueueOptimizer(this);\n    } else {\n      this.optimizer = new NullOptimizer(this);\n    }\n    this.dependencies = Object.create(null);\n    this._totalLength = 0;\n    this.pageIndex = pageIndex;\n    this.intent = intent;\n    this.weight = 0;\n  }\n  OperatorList.prototype = {\n    get length() {\n      return this.argsArray.length;\n    },\n    get totalLength() {\n      return this._totalLength + this.length;\n    },\n    addOp: function addOp(fn, args) {\n      this.optimizer.push(fn, args);\n      this.weight++;\n      if (this.messageHandler) {\n        if (this.weight >= CHUNK_SIZE) {\n          this.flush();\n        } else if (this.weight >= CHUNK_SIZE_ABOUT && (fn === _util.OPS.restore || fn === _util.OPS.endText)) {\n          this.flush();\n        }\n      }\n    },\n    addDependency: function addDependency(dependency) {\n      if (dependency in this.dependencies) {\n        return;\n      }\n      this.dependencies[dependency] = true;\n      this.addOp(_util.OPS.dependency, [dependency]);\n    },\n    addDependencies: function addDependencies(dependencies) {\n      for (var key in dependencies) {\n        this.addDependency(key);\n      }\n    },\n    addOpList: function addOpList(opList) {\n      _util.Util.extendObj(this.dependencies, opList.dependencies);\n      for (var i = 0, ii = opList.length; i < ii; i++) {\n        this.addOp(opList.fnArray[i], opList.argsArray[i]);\n      }\n    },\n    getIR: function getIR() {\n      return {\n        fnArray: this.fnArray,\n        argsArray: this.argsArray,\n        length: this.length\n      };\n    },\n    flush: function flush(lastChunk) {\n      this.optimizer.flush();\n      var transfers = getTransfers(this);\n      var length = this.length;\n      this._totalLength += length;\n      this.messageHandler.send('RenderPageChunk', {\n        operatorList: {\n          fnArray: this.fnArray,\n          argsArray: this.argsArray,\n          lastChunk: lastChunk,\n          length: length\n        },\n        pageIndex: this.pageIndex,\n        intent: this.intent\n      }, transfers);\n      this.dependencies = Object.create(null);\n      this.fnArray.length = 0;\n      this.argsArray.length = 0;\n      this.weight = 0;\n      this.optimizer.reset();\n    }\n  };\n  return OperatorList;\n}();\nexports.OperatorList = OperatorList;\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getLookupTableFactory = __w_pdfjs_require__(0).getLookupTableFactory;\nvar getGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['A'] = 0x0041;\n  t['AE'] = 0x00C6;\n  t['AEacute'] = 0x01FC;\n  t['AEmacron'] = 0x01E2;\n  t['AEsmall'] = 0xF7E6;\n  t['Aacute'] = 0x00C1;\n  t['Aacutesmall'] = 0xF7E1;\n  t['Abreve'] = 0x0102;\n  t['Abreveacute'] = 0x1EAE;\n  t['Abrevecyrillic'] = 0x04D0;\n  t['Abrevedotbelow'] = 0x1EB6;\n  t['Abrevegrave'] = 0x1EB0;\n  t['Abrevehookabove'] = 0x1EB2;\n  t['Abrevetilde'] = 0x1EB4;\n  t['Acaron'] = 0x01CD;\n  t['Acircle'] = 0x24B6;\n  t['Acircumflex'] = 0x00C2;\n  t['Acircumflexacute'] = 0x1EA4;\n  t['Acircumflexdotbelow'] = 0x1EAC;\n  t['Acircumflexgrave'] = 0x1EA6;\n  t['Acircumflexhookabove'] = 0x1EA8;\n  t['Acircumflexsmall'] = 0xF7E2;\n  t['Acircumflextilde'] = 0x1EAA;\n  t['Acute'] = 0xF6C9;\n  t['Acutesmall'] = 0xF7B4;\n  t['Acyrillic'] = 0x0410;\n  t['Adblgrave'] = 0x0200;\n  t['Adieresis'] = 0x00C4;\n  t['Adieresiscyrillic'] = 0x04D2;\n  t['Adieresismacron'] = 0x01DE;\n  t['Adieresissmall'] = 0xF7E4;\n  t['Adotbelow'] = 0x1EA0;\n  t['Adotmacron'] = 0x01E0;\n  t['Agrave'] = 0x00C0;\n  t['Agravesmall'] = 0xF7E0;\n  t['Ahookabove'] = 0x1EA2;\n  t['Aiecyrillic'] = 0x04D4;\n  t['Ainvertedbreve'] = 0x0202;\n  t['Alpha'] = 0x0391;\n  t['Alphatonos'] = 0x0386;\n  t['Amacron'] = 0x0100;\n  t['Amonospace'] = 0xFF21;\n  t['Aogonek'] = 0x0104;\n  t['Aring'] = 0x00C5;\n  t['Aringacute'] = 0x01FA;\n  t['Aringbelow'] = 0x1E00;\n  t['Aringsmall'] = 0xF7E5;\n  t['Asmall'] = 0xF761;\n  t['Atilde'] = 0x00C3;\n  t['Atildesmall'] = 0xF7E3;\n  t['Aybarmenian'] = 0x0531;\n  t['B'] = 0x0042;\n  t['Bcircle'] = 0x24B7;\n  t['Bdotaccent'] = 0x1E02;\n  t['Bdotbelow'] = 0x1E04;\n  t['Becyrillic'] = 0x0411;\n  t['Benarmenian'] = 0x0532;\n  t['Beta'] = 0x0392;\n  t['Bhook'] = 0x0181;\n  t['Blinebelow'] = 0x1E06;\n  t['Bmonospace'] = 0xFF22;\n  t['Brevesmall'] = 0xF6F4;\n  t['Bsmall'] = 0xF762;\n  t['Btopbar'] = 0x0182;\n  t['C'] = 0x0043;\n  t['Caarmenian'] = 0x053E;\n  t['Cacute'] = 0x0106;\n  t['Caron'] = 0xF6CA;\n  t['Caronsmall'] = 0xF6F5;\n  t['Ccaron'] = 0x010C;\n  t['Ccedilla'] = 0x00C7;\n  t['Ccedillaacute'] = 0x1E08;\n  t['Ccedillasmall'] = 0xF7E7;\n  t['Ccircle'] = 0x24B8;\n  t['Ccircumflex'] = 0x0108;\n  t['Cdot'] = 0x010A;\n  t['Cdotaccent'] = 0x010A;\n  t['Cedillasmall'] = 0xF7B8;\n  t['Chaarmenian'] = 0x0549;\n  t['Cheabkhasiancyrillic'] = 0x04BC;\n  t['Checyrillic'] = 0x0427;\n  t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n  t['Chedescendercyrillic'] = 0x04B6;\n  t['Chedieresiscyrillic'] = 0x04F4;\n  t['Cheharmenian'] = 0x0543;\n  t['Chekhakassiancyrillic'] = 0x04CB;\n  t['Cheverticalstrokecyrillic'] = 0x04B8;\n  t['Chi'] = 0x03A7;\n  t['Chook'] = 0x0187;\n  t['Circumflexsmall'] = 0xF6F6;\n  t['Cmonospace'] = 0xFF23;\n  t['Coarmenian'] = 0x0551;\n  t['Csmall'] = 0xF763;\n  t['D'] = 0x0044;\n  t['DZ'] = 0x01F1;\n  t['DZcaron'] = 0x01C4;\n  t['Daarmenian'] = 0x0534;\n  t['Dafrican'] = 0x0189;\n  t['Dcaron'] = 0x010E;\n  t['Dcedilla'] = 0x1E10;\n  t['Dcircle'] = 0x24B9;\n  t['Dcircumflexbelow'] = 0x1E12;\n  t['Dcroat'] = 0x0110;\n  t['Ddotaccent'] = 0x1E0A;\n  t['Ddotbelow'] = 0x1E0C;\n  t['Decyrillic'] = 0x0414;\n  t['Deicoptic'] = 0x03EE;\n  t['Delta'] = 0x2206;\n  t['Deltagreek'] = 0x0394;\n  t['Dhook'] = 0x018A;\n  t['Dieresis'] = 0xF6CB;\n  t['DieresisAcute'] = 0xF6CC;\n  t['DieresisGrave'] = 0xF6CD;\n  t['Dieresissmall'] = 0xF7A8;\n  t['Digammagreek'] = 0x03DC;\n  t['Djecyrillic'] = 0x0402;\n  t['Dlinebelow'] = 0x1E0E;\n  t['Dmonospace'] = 0xFF24;\n  t['Dotaccentsmall'] = 0xF6F7;\n  t['Dslash'] = 0x0110;\n  t['Dsmall'] = 0xF764;\n  t['Dtopbar'] = 0x018B;\n  t['Dz'] = 0x01F2;\n  t['Dzcaron'] = 0x01C5;\n  t['Dzeabkhasiancyrillic'] = 0x04E0;\n  t['Dzecyrillic'] = 0x0405;\n  t['Dzhecyrillic'] = 0x040F;\n  t['E'] = 0x0045;\n  t['Eacute'] = 0x00C9;\n  t['Eacutesmall'] = 0xF7E9;\n  t['Ebreve'] = 0x0114;\n  t['Ecaron'] = 0x011A;\n  t['Ecedillabreve'] = 0x1E1C;\n  t['Echarmenian'] = 0x0535;\n  t['Ecircle'] = 0x24BA;\n  t['Ecircumflex'] = 0x00CA;\n  t['Ecircumflexacute'] = 0x1EBE;\n  t['Ecircumflexbelow'] = 0x1E18;\n  t['Ecircumflexdotbelow'] = 0x1EC6;\n  t['Ecircumflexgrave'] = 0x1EC0;\n  t['Ecircumflexhookabove'] = 0x1EC2;\n  t['Ecircumflexsmall'] = 0xF7EA;\n  t['Ecircumflextilde'] = 0x1EC4;\n  t['Ecyrillic'] = 0x0404;\n  t['Edblgrave'] = 0x0204;\n  t['Edieresis'] = 0x00CB;\n  t['Edieresissmall'] = 0xF7EB;\n  t['Edot'] = 0x0116;\n  t['Edotaccent'] = 0x0116;\n  t['Edotbelow'] = 0x1EB8;\n  t['Efcyrillic'] = 0x0424;\n  t['Egrave'] = 0x00C8;\n  t['Egravesmall'] = 0xF7E8;\n  t['Eharmenian'] = 0x0537;\n  t['Ehookabove'] = 0x1EBA;\n  t['Eightroman'] = 0x2167;\n  t['Einvertedbreve'] = 0x0206;\n  t['Eiotifiedcyrillic'] = 0x0464;\n  t['Elcyrillic'] = 0x041B;\n  t['Elevenroman'] = 0x216A;\n  t['Emacron'] = 0x0112;\n  t['Emacronacute'] = 0x1E16;\n  t['Emacrongrave'] = 0x1E14;\n  t['Emcyrillic'] = 0x041C;\n  t['Emonospace'] = 0xFF25;\n  t['Encyrillic'] = 0x041D;\n  t['Endescendercyrillic'] = 0x04A2;\n  t['Eng'] = 0x014A;\n  t['Enghecyrillic'] = 0x04A4;\n  t['Enhookcyrillic'] = 0x04C7;\n  t['Eogonek'] = 0x0118;\n  t['Eopen'] = 0x0190;\n  t['Epsilon'] = 0x0395;\n  t['Epsilontonos'] = 0x0388;\n  t['Ercyrillic'] = 0x0420;\n  t['Ereversed'] = 0x018E;\n  t['Ereversedcyrillic'] = 0x042D;\n  t['Escyrillic'] = 0x0421;\n  t['Esdescendercyrillic'] = 0x04AA;\n  t['Esh'] = 0x01A9;\n  t['Esmall'] = 0xF765;\n  t['Eta'] = 0x0397;\n  t['Etarmenian'] = 0x0538;\n  t['Etatonos'] = 0x0389;\n  t['Eth'] = 0x00D0;\n  t['Ethsmall'] = 0xF7F0;\n  t['Etilde'] = 0x1EBC;\n  t['Etildebelow'] = 0x1E1A;\n  t['Euro'] = 0x20AC;\n  t['Ezh'] = 0x01B7;\n  t['Ezhcaron'] = 0x01EE;\n  t['Ezhreversed'] = 0x01B8;\n  t['F'] = 0x0046;\n  t['Fcircle'] = 0x24BB;\n  t['Fdotaccent'] = 0x1E1E;\n  t['Feharmenian'] = 0x0556;\n  t['Feicoptic'] = 0x03E4;\n  t['Fhook'] = 0x0191;\n  t['Fitacyrillic'] = 0x0472;\n  t['Fiveroman'] = 0x2164;\n  t['Fmonospace'] = 0xFF26;\n  t['Fourroman'] = 0x2163;\n  t['Fsmall'] = 0xF766;\n  t['G'] = 0x0047;\n  t['GBsquare'] = 0x3387;\n  t['Gacute'] = 0x01F4;\n  t['Gamma'] = 0x0393;\n  t['Gammaafrican'] = 0x0194;\n  t['Gangiacoptic'] = 0x03EA;\n  t['Gbreve'] = 0x011E;\n  t['Gcaron'] = 0x01E6;\n  t['Gcedilla'] = 0x0122;\n  t['Gcircle'] = 0x24BC;\n  t['Gcircumflex'] = 0x011C;\n  t['Gcommaaccent'] = 0x0122;\n  t['Gdot'] = 0x0120;\n  t['Gdotaccent'] = 0x0120;\n  t['Gecyrillic'] = 0x0413;\n  t['Ghadarmenian'] = 0x0542;\n  t['Ghemiddlehookcyrillic'] = 0x0494;\n  t['Ghestrokecyrillic'] = 0x0492;\n  t['Gheupturncyrillic'] = 0x0490;\n  t['Ghook'] = 0x0193;\n  t['Gimarmenian'] = 0x0533;\n  t['Gjecyrillic'] = 0x0403;\n  t['Gmacron'] = 0x1E20;\n  t['Gmonospace'] = 0xFF27;\n  t['Grave'] = 0xF6CE;\n  t['Gravesmall'] = 0xF760;\n  t['Gsmall'] = 0xF767;\n  t['Gsmallhook'] = 0x029B;\n  t['Gstroke'] = 0x01E4;\n  t['H'] = 0x0048;\n  t['H18533'] = 0x25CF;\n  t['H18543'] = 0x25AA;\n  t['H18551'] = 0x25AB;\n  t['H22073'] = 0x25A1;\n  t['HPsquare'] = 0x33CB;\n  t['Haabkhasiancyrillic'] = 0x04A8;\n  t['Hadescendercyrillic'] = 0x04B2;\n  t['Hardsigncyrillic'] = 0x042A;\n  t['Hbar'] = 0x0126;\n  t['Hbrevebelow'] = 0x1E2A;\n  t['Hcedilla'] = 0x1E28;\n  t['Hcircle'] = 0x24BD;\n  t['Hcircumflex'] = 0x0124;\n  t['Hdieresis'] = 0x1E26;\n  t['Hdotaccent'] = 0x1E22;\n  t['Hdotbelow'] = 0x1E24;\n  t['Hmonospace'] = 0xFF28;\n  t['Hoarmenian'] = 0x0540;\n  t['Horicoptic'] = 0x03E8;\n  t['Hsmall'] = 0xF768;\n  t['Hungarumlaut'] = 0xF6CF;\n  t['Hungarumlautsmall'] = 0xF6F8;\n  t['Hzsquare'] = 0x3390;\n  t['I'] = 0x0049;\n  t['IAcyrillic'] = 0x042F;\n  t['IJ'] = 0x0132;\n  t['IUcyrillic'] = 0x042E;\n  t['Iacute'] = 0x00CD;\n  t['Iacutesmall'] = 0xF7ED;\n  t['Ibreve'] = 0x012C;\n  t['Icaron'] = 0x01CF;\n  t['Icircle'] = 0x24BE;\n  t['Icircumflex'] = 0x00CE;\n  t['Icircumflexsmall'] = 0xF7EE;\n  t['Icyrillic'] = 0x0406;\n  t['Idblgrave'] = 0x0208;\n  t['Idieresis'] = 0x00CF;\n  t['Idieresisacute'] = 0x1E2E;\n  t['Idieresiscyrillic'] = 0x04E4;\n  t['Idieresissmall'] = 0xF7EF;\n  t['Idot'] = 0x0130;\n  t['Idotaccent'] = 0x0130;\n  t['Idotbelow'] = 0x1ECA;\n  t['Iebrevecyrillic'] = 0x04D6;\n  t['Iecyrillic'] = 0x0415;\n  t['Ifraktur'] = 0x2111;\n  t['Igrave'] = 0x00CC;\n  t['Igravesmall'] = 0xF7EC;\n  t['Ihookabove'] = 0x1EC8;\n  t['Iicyrillic'] = 0x0418;\n  t['Iinvertedbreve'] = 0x020A;\n  t['Iishortcyrillic'] = 0x0419;\n  t['Imacron'] = 0x012A;\n  t['Imacroncyrillic'] = 0x04E2;\n  t['Imonospace'] = 0xFF29;\n  t['Iniarmenian'] = 0x053B;\n  t['Iocyrillic'] = 0x0401;\n  t['Iogonek'] = 0x012E;\n  t['Iota'] = 0x0399;\n  t['Iotaafrican'] = 0x0196;\n  t['Iotadieresis'] = 0x03AA;\n  t['Iotatonos'] = 0x038A;\n  t['Ismall'] = 0xF769;\n  t['Istroke'] = 0x0197;\n  t['Itilde'] = 0x0128;\n  t['Itildebelow'] = 0x1E2C;\n  t['Izhitsacyrillic'] = 0x0474;\n  t['Izhitsadblgravecyrillic'] = 0x0476;\n  t['J'] = 0x004A;\n  t['Jaarmenian'] = 0x0541;\n  t['Jcircle'] = 0x24BF;\n  t['Jcircumflex'] = 0x0134;\n  t['Jecyrillic'] = 0x0408;\n  t['Jheharmenian'] = 0x054B;\n  t['Jmonospace'] = 0xFF2A;\n  t['Jsmall'] = 0xF76A;\n  t['K'] = 0x004B;\n  t['KBsquare'] = 0x3385;\n  t['KKsquare'] = 0x33CD;\n  t['Kabashkircyrillic'] = 0x04A0;\n  t['Kacute'] = 0x1E30;\n  t['Kacyrillic'] = 0x041A;\n  t['Kadescendercyrillic'] = 0x049A;\n  t['Kahookcyrillic'] = 0x04C3;\n  t['Kappa'] = 0x039A;\n  t['Kastrokecyrillic'] = 0x049E;\n  t['Kaverticalstrokecyrillic'] = 0x049C;\n  t['Kcaron'] = 0x01E8;\n  t['Kcedilla'] = 0x0136;\n  t['Kcircle'] = 0x24C0;\n  t['Kcommaaccent'] = 0x0136;\n  t['Kdotbelow'] = 0x1E32;\n  t['Keharmenian'] = 0x0554;\n  t['Kenarmenian'] = 0x053F;\n  t['Khacyrillic'] = 0x0425;\n  t['Kheicoptic'] = 0x03E6;\n  t['Khook'] = 0x0198;\n  t['Kjecyrillic'] = 0x040C;\n  t['Klinebelow'] = 0x1E34;\n  t['Kmonospace'] = 0xFF2B;\n  t['Koppacyrillic'] = 0x0480;\n  t['Koppagreek'] = 0x03DE;\n  t['Ksicyrillic'] = 0x046E;\n  t['Ksmall'] = 0xF76B;\n  t['L'] = 0x004C;\n  t['LJ'] = 0x01C7;\n  t['LL'] = 0xF6BF;\n  t['Lacute'] = 0x0139;\n  t['Lambda'] = 0x039B;\n  t['Lcaron'] = 0x013D;\n  t['Lcedilla'] = 0x013B;\n  t['Lcircle'] = 0x24C1;\n  t['Lcircumflexbelow'] = 0x1E3C;\n  t['Lcommaaccent'] = 0x013B;\n  t['Ldot'] = 0x013F;\n  t['Ldotaccent'] = 0x013F;\n  t['Ldotbelow'] = 0x1E36;\n  t['Ldotbelowmacron'] = 0x1E38;\n  t['Liwnarmenian'] = 0x053C;\n  t['Lj'] = 0x01C8;\n  t['Ljecyrillic'] = 0x0409;\n  t['Llinebelow'] = 0x1E3A;\n  t['Lmonospace'] = 0xFF2C;\n  t['Lslash'] = 0x0141;\n  t['Lslashsmall'] = 0xF6F9;\n  t['Lsmall'] = 0xF76C;\n  t['M'] = 0x004D;\n  t['MBsquare'] = 0x3386;\n  t['Macron'] = 0xF6D0;\n  t['Macronsmall'] = 0xF7AF;\n  t['Macute'] = 0x1E3E;\n  t['Mcircle'] = 0x24C2;\n  t['Mdotaccent'] = 0x1E40;\n  t['Mdotbelow'] = 0x1E42;\n  t['Menarmenian'] = 0x0544;\n  t['Mmonospace'] = 0xFF2D;\n  t['Msmall'] = 0xF76D;\n  t['Mturned'] = 0x019C;\n  t['Mu'] = 0x039C;\n  t['N'] = 0x004E;\n  t['NJ'] = 0x01CA;\n  t['Nacute'] = 0x0143;\n  t['Ncaron'] = 0x0147;\n  t['Ncedilla'] = 0x0145;\n  t['Ncircle'] = 0x24C3;\n  t['Ncircumflexbelow'] = 0x1E4A;\n  t['Ncommaaccent'] = 0x0145;\n  t['Ndotaccent'] = 0x1E44;\n  t['Ndotbelow'] = 0x1E46;\n  t['Nhookleft'] = 0x019D;\n  t['Nineroman'] = 0x2168;\n  t['Nj'] = 0x01CB;\n  t['Njecyrillic'] = 0x040A;\n  t['Nlinebelow'] = 0x1E48;\n  t['Nmonospace'] = 0xFF2E;\n  t['Nowarmenian'] = 0x0546;\n  t['Nsmall'] = 0xF76E;\n  t['Ntilde'] = 0x00D1;\n  t['Ntildesmall'] = 0xF7F1;\n  t['Nu'] = 0x039D;\n  t['O'] = 0x004F;\n  t['OE'] = 0x0152;\n  t['OEsmall'] = 0xF6FA;\n  t['Oacute'] = 0x00D3;\n  t['Oacutesmall'] = 0xF7F3;\n  t['Obarredcyrillic'] = 0x04E8;\n  t['Obarreddieresiscyrillic'] = 0x04EA;\n  t['Obreve'] = 0x014E;\n  t['Ocaron'] = 0x01D1;\n  t['Ocenteredtilde'] = 0x019F;\n  t['Ocircle'] = 0x24C4;\n  t['Ocircumflex'] = 0x00D4;\n  t['Ocircumflexacute'] = 0x1ED0;\n  t['Ocircumflexdotbelow'] = 0x1ED8;\n  t['Ocircumflexgrave'] = 0x1ED2;\n  t['Ocircumflexhookabove'] = 0x1ED4;\n  t['Ocircumflexsmall'] = 0xF7F4;\n  t['Ocircumflextilde'] = 0x1ED6;\n  t['Ocyrillic'] = 0x041E;\n  t['Odblacute'] = 0x0150;\n  t['Odblgrave'] = 0x020C;\n  t['Odieresis'] = 0x00D6;\n  t['Odieresiscyrillic'] = 0x04E6;\n  t['Odieresissmall'] = 0xF7F6;\n  t['Odotbelow'] = 0x1ECC;\n  t['Ogoneksmall'] = 0xF6FB;\n  t['Ograve'] = 0x00D2;\n  t['Ogravesmall'] = 0xF7F2;\n  t['Oharmenian'] = 0x0555;\n  t['Ohm'] = 0x2126;\n  t['Ohookabove'] = 0x1ECE;\n  t['Ohorn'] = 0x01A0;\n  t['Ohornacute'] = 0x1EDA;\n  t['Ohorndotbelow'] = 0x1EE2;\n  t['Ohorngrave'] = 0x1EDC;\n  t['Ohornhookabove'] = 0x1EDE;\n  t['Ohorntilde'] = 0x1EE0;\n  t['Ohungarumlaut'] = 0x0150;\n  t['Oi'] = 0x01A2;\n  t['Oinvertedbreve'] = 0x020E;\n  t['Omacron'] = 0x014C;\n  t['Omacronacute'] = 0x1E52;\n  t['Omacrongrave'] = 0x1E50;\n  t['Omega'] = 0x2126;\n  t['Omegacyrillic'] = 0x0460;\n  t['Omegagreek'] = 0x03A9;\n  t['Omegaroundcyrillic'] = 0x047A;\n  t['Omegatitlocyrillic'] = 0x047C;\n  t['Omegatonos'] = 0x038F;\n  t['Omicron'] = 0x039F;\n  t['Omicrontonos'] = 0x038C;\n  t['Omonospace'] = 0xFF2F;\n  t['Oneroman'] = 0x2160;\n  t['Oogonek'] = 0x01EA;\n  t['Oogonekmacron'] = 0x01EC;\n  t['Oopen'] = 0x0186;\n  t['Oslash'] = 0x00D8;\n  t['Oslashacute'] = 0x01FE;\n  t['Oslashsmall'] = 0xF7F8;\n  t['Osmall'] = 0xF76F;\n  t['Ostrokeacute'] = 0x01FE;\n  t['Otcyrillic'] = 0x047E;\n  t['Otilde'] = 0x00D5;\n  t['Otildeacute'] = 0x1E4C;\n  t['Otildedieresis'] = 0x1E4E;\n  t['Otildesmall'] = 0xF7F5;\n  t['P'] = 0x0050;\n  t['Pacute'] = 0x1E54;\n  t['Pcircle'] = 0x24C5;\n  t['Pdotaccent'] = 0x1E56;\n  t['Pecyrillic'] = 0x041F;\n  t['Peharmenian'] = 0x054A;\n  t['Pemiddlehookcyrillic'] = 0x04A6;\n  t['Phi'] = 0x03A6;\n  t['Phook'] = 0x01A4;\n  t['Pi'] = 0x03A0;\n  t['Piwrarmenian'] = 0x0553;\n  t['Pmonospace'] = 0xFF30;\n  t['Psi'] = 0x03A8;\n  t['Psicyrillic'] = 0x0470;\n  t['Psmall'] = 0xF770;\n  t['Q'] = 0x0051;\n  t['Qcircle'] = 0x24C6;\n  t['Qmonospace'] = 0xFF31;\n  t['Qsmall'] = 0xF771;\n  t['R'] = 0x0052;\n  t['Raarmenian'] = 0x054C;\n  t['Racute'] = 0x0154;\n  t['Rcaron'] = 0x0158;\n  t['Rcedilla'] = 0x0156;\n  t['Rcircle'] = 0x24C7;\n  t['Rcommaaccent'] = 0x0156;\n  t['Rdblgrave'] = 0x0210;\n  t['Rdotaccent'] = 0x1E58;\n  t['Rdotbelow'] = 0x1E5A;\n  t['Rdotbelowmacron'] = 0x1E5C;\n  t['Reharmenian'] = 0x0550;\n  t['Rfraktur'] = 0x211C;\n  t['Rho'] = 0x03A1;\n  t['Ringsmall'] = 0xF6FC;\n  t['Rinvertedbreve'] = 0x0212;\n  t['Rlinebelow'] = 0x1E5E;\n  t['Rmonospace'] = 0xFF32;\n  t['Rsmall'] = 0xF772;\n  t['Rsmallinverted'] = 0x0281;\n  t['Rsmallinvertedsuperior'] = 0x02B6;\n  t['S'] = 0x0053;\n  t['SF010000'] = 0x250C;\n  t['SF020000'] = 0x2514;\n  t['SF030000'] = 0x2510;\n  t['SF040000'] = 0x2518;\n  t['SF050000'] = 0x253C;\n  t['SF060000'] = 0x252C;\n  t['SF070000'] = 0x2534;\n  t['SF080000'] = 0x251C;\n  t['SF090000'] = 0x2524;\n  t['SF100000'] = 0x2500;\n  t['SF110000'] = 0x2502;\n  t['SF190000'] = 0x2561;\n  t['SF200000'] = 0x2562;\n  t['SF210000'] = 0x2556;\n  t['SF220000'] = 0x2555;\n  t['SF230000'] = 0x2563;\n  t['SF240000'] = 0x2551;\n  t['SF250000'] = 0x2557;\n  t['SF260000'] = 0x255D;\n  t['SF270000'] = 0x255C;\n  t['SF280000'] = 0x255B;\n  t['SF360000'] = 0x255E;\n  t['SF370000'] = 0x255F;\n  t['SF380000'] = 0x255A;\n  t['SF390000'] = 0x2554;\n  t['SF400000'] = 0x2569;\n  t['SF410000'] = 0x2566;\n  t['SF420000'] = 0x2560;\n  t['SF430000'] = 0x2550;\n  t['SF440000'] = 0x256C;\n  t['SF450000'] = 0x2567;\n  t['SF460000'] = 0x2568;\n  t['SF470000'] = 0x2564;\n  t['SF480000'] = 0x2565;\n  t['SF490000'] = 0x2559;\n  t['SF500000'] = 0x2558;\n  t['SF510000'] = 0x2552;\n  t['SF520000'] = 0x2553;\n  t['SF530000'] = 0x256B;\n  t['SF540000'] = 0x256A;\n  t['Sacute'] = 0x015A;\n  t['Sacutedotaccent'] = 0x1E64;\n  t['Sampigreek'] = 0x03E0;\n  t['Scaron'] = 0x0160;\n  t['Scarondotaccent'] = 0x1E66;\n  t['Scaronsmall'] = 0xF6FD;\n  t['Scedilla'] = 0x015E;\n  t['Schwa'] = 0x018F;\n  t['Schwacyrillic'] = 0x04D8;\n  t['Schwadieresiscyrillic'] = 0x04DA;\n  t['Scircle'] = 0x24C8;\n  t['Scircumflex'] = 0x015C;\n  t['Scommaaccent'] = 0x0218;\n  t['Sdotaccent'] = 0x1E60;\n  t['Sdotbelow'] = 0x1E62;\n  t['Sdotbelowdotaccent'] = 0x1E68;\n  t['Seharmenian'] = 0x054D;\n  t['Sevenroman'] = 0x2166;\n  t['Shaarmenian'] = 0x0547;\n  t['Shacyrillic'] = 0x0428;\n  t['Shchacyrillic'] = 0x0429;\n  t['Sheicoptic'] = 0x03E2;\n  t['Shhacyrillic'] = 0x04BA;\n  t['Shimacoptic'] = 0x03EC;\n  t['Sigma'] = 0x03A3;\n  t['Sixroman'] = 0x2165;\n  t['Smonospace'] = 0xFF33;\n  t['Softsigncyrillic'] = 0x042C;\n  t['Ssmall'] = 0xF773;\n  t['Stigmagreek'] = 0x03DA;\n  t['T'] = 0x0054;\n  t['Tau'] = 0x03A4;\n  t['Tbar'] = 0x0166;\n  t['Tcaron'] = 0x0164;\n  t['Tcedilla'] = 0x0162;\n  t['Tcircle'] = 0x24C9;\n  t['Tcircumflexbelow'] = 0x1E70;\n  t['Tcommaaccent'] = 0x0162;\n  t['Tdotaccent'] = 0x1E6A;\n  t['Tdotbelow'] = 0x1E6C;\n  t['Tecyrillic'] = 0x0422;\n  t['Tedescendercyrillic'] = 0x04AC;\n  t['Tenroman'] = 0x2169;\n  t['Tetsecyrillic'] = 0x04B4;\n  t['Theta'] = 0x0398;\n  t['Thook'] = 0x01AC;\n  t['Thorn'] = 0x00DE;\n  t['Thornsmall'] = 0xF7FE;\n  t['Threeroman'] = 0x2162;\n  t['Tildesmall'] = 0xF6FE;\n  t['Tiwnarmenian'] = 0x054F;\n  t['Tlinebelow'] = 0x1E6E;\n  t['Tmonospace'] = 0xFF34;\n  t['Toarmenian'] = 0x0539;\n  t['Tonefive'] = 0x01BC;\n  t['Tonesix'] = 0x0184;\n  t['Tonetwo'] = 0x01A7;\n  t['Tretroflexhook'] = 0x01AE;\n  t['Tsecyrillic'] = 0x0426;\n  t['Tshecyrillic'] = 0x040B;\n  t['Tsmall'] = 0xF774;\n  t['Twelveroman'] = 0x216B;\n  t['Tworoman'] = 0x2161;\n  t['U'] = 0x0055;\n  t['Uacute'] = 0x00DA;\n  t['Uacutesmall'] = 0xF7FA;\n  t['Ubreve'] = 0x016C;\n  t['Ucaron'] = 0x01D3;\n  t['Ucircle'] = 0x24CA;\n  t['Ucircumflex'] = 0x00DB;\n  t['Ucircumflexbelow'] = 0x1E76;\n  t['Ucircumflexsmall'] = 0xF7FB;\n  t['Ucyrillic'] = 0x0423;\n  t['Udblacute'] = 0x0170;\n  t['Udblgrave'] = 0x0214;\n  t['Udieresis'] = 0x00DC;\n  t['Udieresisacute'] = 0x01D7;\n  t['Udieresisbelow'] = 0x1E72;\n  t['Udieresiscaron'] = 0x01D9;\n  t['Udieresiscyrillic'] = 0x04F0;\n  t['Udieresisgrave'] = 0x01DB;\n  t['Udieresismacron'] = 0x01D5;\n  t['Udieresissmall'] = 0xF7FC;\n  t['Udotbelow'] = 0x1EE4;\n  t['Ugrave'] = 0x00D9;\n  t['Ugravesmall'] = 0xF7F9;\n  t['Uhookabove'] = 0x1EE6;\n  t['Uhorn'] = 0x01AF;\n  t['Uhornacute'] = 0x1EE8;\n  t['Uhorndotbelow'] = 0x1EF0;\n  t['Uhorngrave'] = 0x1EEA;\n  t['Uhornhookabove'] = 0x1EEC;\n  t['Uhorntilde'] = 0x1EEE;\n  t['Uhungarumlaut'] = 0x0170;\n  t['Uhungarumlautcyrillic'] = 0x04F2;\n  t['Uinvertedbreve'] = 0x0216;\n  t['Ukcyrillic'] = 0x0478;\n  t['Umacron'] = 0x016A;\n  t['Umacroncyrillic'] = 0x04EE;\n  t['Umacrondieresis'] = 0x1E7A;\n  t['Umonospace'] = 0xFF35;\n  t['Uogonek'] = 0x0172;\n  t['Upsilon'] = 0x03A5;\n  t['Upsilon1'] = 0x03D2;\n  t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n  t['Upsilonafrican'] = 0x01B1;\n  t['Upsilondieresis'] = 0x03AB;\n  t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n  t['Upsilonhooksymbol'] = 0x03D2;\n  t['Upsilontonos'] = 0x038E;\n  t['Uring'] = 0x016E;\n  t['Ushortcyrillic'] = 0x040E;\n  t['Usmall'] = 0xF775;\n  t['Ustraightcyrillic'] = 0x04AE;\n  t['Ustraightstrokecyrillic'] = 0x04B0;\n  t['Utilde'] = 0x0168;\n  t['Utildeacute'] = 0x1E78;\n  t['Utildebelow'] = 0x1E74;\n  t['V'] = 0x0056;\n  t['Vcircle'] = 0x24CB;\n  t['Vdotbelow'] = 0x1E7E;\n  t['Vecyrillic'] = 0x0412;\n  t['Vewarmenian'] = 0x054E;\n  t['Vhook'] = 0x01B2;\n  t['Vmonospace'] = 0xFF36;\n  t['Voarmenian'] = 0x0548;\n  t['Vsmall'] = 0xF776;\n  t['Vtilde'] = 0x1E7C;\n  t['W'] = 0x0057;\n  t['Wacute'] = 0x1E82;\n  t['Wcircle'] = 0x24CC;\n  t['Wcircumflex'] = 0x0174;\n  t['Wdieresis'] = 0x1E84;\n  t['Wdotaccent'] = 0x1E86;\n  t['Wdotbelow'] = 0x1E88;\n  t['Wgrave'] = 0x1E80;\n  t['Wmonospace'] = 0xFF37;\n  t['Wsmall'] = 0xF777;\n  t['X'] = 0x0058;\n  t['Xcircle'] = 0x24CD;\n  t['Xdieresis'] = 0x1E8C;\n  t['Xdotaccent'] = 0x1E8A;\n  t['Xeharmenian'] = 0x053D;\n  t['Xi'] = 0x039E;\n  t['Xmonospace'] = 0xFF38;\n  t['Xsmall'] = 0xF778;\n  t['Y'] = 0x0059;\n  t['Yacute'] = 0x00DD;\n  t['Yacutesmall'] = 0xF7FD;\n  t['Yatcyrillic'] = 0x0462;\n  t['Ycircle'] = 0x24CE;\n  t['Ycircumflex'] = 0x0176;\n  t['Ydieresis'] = 0x0178;\n  t['Ydieresissmall'] = 0xF7FF;\n  t['Ydotaccent'] = 0x1E8E;\n  t['Ydotbelow'] = 0x1EF4;\n  t['Yericyrillic'] = 0x042B;\n  t['Yerudieresiscyrillic'] = 0x04F8;\n  t['Ygrave'] = 0x1EF2;\n  t['Yhook'] = 0x01B3;\n  t['Yhookabove'] = 0x1EF6;\n  t['Yiarmenian'] = 0x0545;\n  t['Yicyrillic'] = 0x0407;\n  t['Yiwnarmenian'] = 0x0552;\n  t['Ymonospace'] = 0xFF39;\n  t['Ysmall'] = 0xF779;\n  t['Ytilde'] = 0x1EF8;\n  t['Yusbigcyrillic'] = 0x046A;\n  t['Yusbigiotifiedcyrillic'] = 0x046C;\n  t['Yuslittlecyrillic'] = 0x0466;\n  t['Yuslittleiotifiedcyrillic'] = 0x0468;\n  t['Z'] = 0x005A;\n  t['Zaarmenian'] = 0x0536;\n  t['Zacute'] = 0x0179;\n  t['Zcaron'] = 0x017D;\n  t['Zcaronsmall'] = 0xF6FF;\n  t['Zcircle'] = 0x24CF;\n  t['Zcircumflex'] = 0x1E90;\n  t['Zdot'] = 0x017B;\n  t['Zdotaccent'] = 0x017B;\n  t['Zdotbelow'] = 0x1E92;\n  t['Zecyrillic'] = 0x0417;\n  t['Zedescendercyrillic'] = 0x0498;\n  t['Zedieresiscyrillic'] = 0x04DE;\n  t['Zeta'] = 0x0396;\n  t['Zhearmenian'] = 0x053A;\n  t['Zhebrevecyrillic'] = 0x04C1;\n  t['Zhecyrillic'] = 0x0416;\n  t['Zhedescendercyrillic'] = 0x0496;\n  t['Zhedieresiscyrillic'] = 0x04DC;\n  t['Zlinebelow'] = 0x1E94;\n  t['Zmonospace'] = 0xFF3A;\n  t['Zsmall'] = 0xF77A;\n  t['Zstroke'] = 0x01B5;\n  t['a'] = 0x0061;\n  t['aabengali'] = 0x0986;\n  t['aacute'] = 0x00E1;\n  t['aadeva'] = 0x0906;\n  t['aagujarati'] = 0x0A86;\n  t['aagurmukhi'] = 0x0A06;\n  t['aamatragurmukhi'] = 0x0A3E;\n  t['aarusquare'] = 0x3303;\n  t['aavowelsignbengali'] = 0x09BE;\n  t['aavowelsigndeva'] = 0x093E;\n  t['aavowelsigngujarati'] = 0x0ABE;\n  t['abbreviationmarkarmenian'] = 0x055F;\n  t['abbreviationsigndeva'] = 0x0970;\n  t['abengali'] = 0x0985;\n  t['abopomofo'] = 0x311A;\n  t['abreve'] = 0x0103;\n  t['abreveacute'] = 0x1EAF;\n  t['abrevecyrillic'] = 0x04D1;\n  t['abrevedotbelow'] = 0x1EB7;\n  t['abrevegrave'] = 0x1EB1;\n  t['abrevehookabove'] = 0x1EB3;\n  t['abrevetilde'] = 0x1EB5;\n  t['acaron'] = 0x01CE;\n  t['acircle'] = 0x24D0;\n  t['acircumflex'] = 0x00E2;\n  t['acircumflexacute'] = 0x1EA5;\n  t['acircumflexdotbelow'] = 0x1EAD;\n  t['acircumflexgrave'] = 0x1EA7;\n  t['acircumflexhookabove'] = 0x1EA9;\n  t['acircumflextilde'] = 0x1EAB;\n  t['acute'] = 0x00B4;\n  t['acutebelowcmb'] = 0x0317;\n  t['acutecmb'] = 0x0301;\n  t['acutecomb'] = 0x0301;\n  t['acutedeva'] = 0x0954;\n  t['acutelowmod'] = 0x02CF;\n  t['acutetonecmb'] = 0x0341;\n  t['acyrillic'] = 0x0430;\n  t['adblgrave'] = 0x0201;\n  t['addakgurmukhi'] = 0x0A71;\n  t['adeva'] = 0x0905;\n  t['adieresis'] = 0x00E4;\n  t['adieresiscyrillic'] = 0x04D3;\n  t['adieresismacron'] = 0x01DF;\n  t['adotbelow'] = 0x1EA1;\n  t['adotmacron'] = 0x01E1;\n  t['ae'] = 0x00E6;\n  t['aeacute'] = 0x01FD;\n  t['aekorean'] = 0x3150;\n  t['aemacron'] = 0x01E3;\n  t['afii00208'] = 0x2015;\n  t['afii08941'] = 0x20A4;\n  t['afii10017'] = 0x0410;\n  t['afii10018'] = 0x0411;\n  t['afii10019'] = 0x0412;\n  t['afii10020'] = 0x0413;\n  t['afii10021'] = 0x0414;\n  t['afii10022'] = 0x0415;\n  t['afii10023'] = 0x0401;\n  t['afii10024'] = 0x0416;\n  t['afii10025'] = 0x0417;\n  t['afii10026'] = 0x0418;\n  t['afii10027'] = 0x0419;\n  t['afii10028'] = 0x041A;\n  t['afii10029'] = 0x041B;\n  t['afii10030'] = 0x041C;\n  t['afii10031'] = 0x041D;\n  t['afii10032'] = 0x041E;\n  t['afii10033'] = 0x041F;\n  t['afii10034'] = 0x0420;\n  t['afii10035'] = 0x0421;\n  t['afii10036'] = 0x0422;\n  t['afii10037'] = 0x0423;\n  t['afii10038'] = 0x0424;\n  t['afii10039'] = 0x0425;\n  t['afii10040'] = 0x0426;\n  t['afii10041'] = 0x0427;\n  t['afii10042'] = 0x0428;\n  t['afii10043'] = 0x0429;\n  t['afii10044'] = 0x042A;\n  t['afii10045'] = 0x042B;\n  t['afii10046'] = 0x042C;\n  t['afii10047'] = 0x042D;\n  t['afii10048'] = 0x042E;\n  t['afii10049'] = 0x042F;\n  t['afii10050'] = 0x0490;\n  t['afii10051'] = 0x0402;\n  t['afii10052'] = 0x0403;\n  t['afii10053'] = 0x0404;\n  t['afii10054'] = 0x0405;\n  t['afii10055'] = 0x0406;\n  t['afii10056'] = 0x0407;\n  t['afii10057'] = 0x0408;\n  t['afii10058'] = 0x0409;\n  t['afii10059'] = 0x040A;\n  t['afii10060'] = 0x040B;\n  t['afii10061'] = 0x040C;\n  t['afii10062'] = 0x040E;\n  t['afii10063'] = 0xF6C4;\n  t['afii10064'] = 0xF6C5;\n  t['afii10065'] = 0x0430;\n  t['afii10066'] = 0x0431;\n  t['afii10067'] = 0x0432;\n  t['afii10068'] = 0x0433;\n  t['afii10069'] = 0x0434;\n  t['afii10070'] = 0x0435;\n  t['afii10071'] = 0x0451;\n  t['afii10072'] = 0x0436;\n  t['afii10073'] = 0x0437;\n  t['afii10074'] = 0x0438;\n  t['afii10075'] = 0x0439;\n  t['afii10076'] = 0x043A;\n  t['afii10077'] = 0x043B;\n  t['afii10078'] = 0x043C;\n  t['afii10079'] = 0x043D;\n  t['afii10080'] = 0x043E;\n  t['afii10081'] = 0x043F;\n  t['afii10082'] = 0x0440;\n  t['afii10083'] = 0x0441;\n  t['afii10084'] = 0x0442;\n  t['afii10085'] = 0x0443;\n  t['afii10086'] = 0x0444;\n  t['afii10087'] = 0x0445;\n  t['afii10088'] = 0x0446;\n  t['afii10089'] = 0x0447;\n  t['afii10090'] = 0x0448;\n  t['afii10091'] = 0x0449;\n  t['afii10092'] = 0x044A;\n  t['afii10093'] = 0x044B;\n  t['afii10094'] = 0x044C;\n  t['afii10095'] = 0x044D;\n  t['afii10096'] = 0x044E;\n  t['afii10097'] = 0x044F;\n  t['afii10098'] = 0x0491;\n  t['afii10099'] = 0x0452;\n  t['afii10100'] = 0x0453;\n  t['afii10101'] = 0x0454;\n  t['afii10102'] = 0x0455;\n  t['afii10103'] = 0x0456;\n  t['afii10104'] = 0x0457;\n  t['afii10105'] = 0x0458;\n  t['afii10106'] = 0x0459;\n  t['afii10107'] = 0x045A;\n  t['afii10108'] = 0x045B;\n  t['afii10109'] = 0x045C;\n  t['afii10110'] = 0x045E;\n  t['afii10145'] = 0x040F;\n  t['afii10146'] = 0x0462;\n  t['afii10147'] = 0x0472;\n  t['afii10148'] = 0x0474;\n  t['afii10192'] = 0xF6C6;\n  t['afii10193'] = 0x045F;\n  t['afii10194'] = 0x0463;\n  t['afii10195'] = 0x0473;\n  t['afii10196'] = 0x0475;\n  t['afii10831'] = 0xF6C7;\n  t['afii10832'] = 0xF6C8;\n  t['afii10846'] = 0x04D9;\n  t['afii299'] = 0x200E;\n  t['afii300'] = 0x200F;\n  t['afii301'] = 0x200D;\n  t['afii57381'] = 0x066A;\n  t['afii57388'] = 0x060C;\n  t['afii57392'] = 0x0660;\n  t['afii57393'] = 0x0661;\n  t['afii57394'] = 0x0662;\n  t['afii57395'] = 0x0663;\n  t['afii57396'] = 0x0664;\n  t['afii57397'] = 0x0665;\n  t['afii57398'] = 0x0666;\n  t['afii57399'] = 0x0667;\n  t['afii57400'] = 0x0668;\n  t['afii57401'] = 0x0669;\n  t['afii57403'] = 0x061B;\n  t['afii57407'] = 0x061F;\n  t['afii57409'] = 0x0621;\n  t['afii57410'] = 0x0622;\n  t['afii57411'] = 0x0623;\n  t['afii57412'] = 0x0624;\n  t['afii57413'] = 0x0625;\n  t['afii57414'] = 0x0626;\n  t['afii57415'] = 0x0627;\n  t['afii57416'] = 0x0628;\n  t['afii57417'] = 0x0629;\n  t['afii57418'] = 0x062A;\n  t['afii57419'] = 0x062B;\n  t['afii57420'] = 0x062C;\n  t['afii57421'] = 0x062D;\n  t['afii57422'] = 0x062E;\n  t['afii57423'] = 0x062F;\n  t['afii57424'] = 0x0630;\n  t['afii57425'] = 0x0631;\n  t['afii57426'] = 0x0632;\n  t['afii57427'] = 0x0633;\n  t['afii57428'] = 0x0634;\n  t['afii57429'] = 0x0635;\n  t['afii57430'] = 0x0636;\n  t['afii57431'] = 0x0637;\n  t['afii57432'] = 0x0638;\n  t['afii57433'] = 0x0639;\n  t['afii57434'] = 0x063A;\n  t['afii57440'] = 0x0640;\n  t['afii57441'] = 0x0641;\n  t['afii57442'] = 0x0642;\n  t['afii57443'] = 0x0643;\n  t['afii57444'] = 0x0644;\n  t['afii57445'] = 0x0645;\n  t['afii57446'] = 0x0646;\n  t['afii57448'] = 0x0648;\n  t['afii57449'] = 0x0649;\n  t['afii57450'] = 0x064A;\n  t['afii57451'] = 0x064B;\n  t['afii57452'] = 0x064C;\n  t['afii57453'] = 0x064D;\n  t['afii57454'] = 0x064E;\n  t['afii57455'] = 0x064F;\n  t['afii57456'] = 0x0650;\n  t['afii57457'] = 0x0651;\n  t['afii57458'] = 0x0652;\n  t['afii57470'] = 0x0647;\n  t['afii57505'] = 0x06A4;\n  t['afii57506'] = 0x067E;\n  t['afii57507'] = 0x0686;\n  t['afii57508'] = 0x0698;\n  t['afii57509'] = 0x06AF;\n  t['afii57511'] = 0x0679;\n  t['afii57512'] = 0x0688;\n  t['afii57513'] = 0x0691;\n  t['afii57514'] = 0x06BA;\n  t['afii57519'] = 0x06D2;\n  t['afii57534'] = 0x06D5;\n  t['afii57636'] = 0x20AA;\n  t['afii57645'] = 0x05BE;\n  t['afii57658'] = 0x05C3;\n  t['afii57664'] = 0x05D0;\n  t['afii57665'] = 0x05D1;\n  t['afii57666'] = 0x05D2;\n  t['afii57667'] = 0x05D3;\n  t['afii57668'] = 0x05D4;\n  t['afii57669'] = 0x05D5;\n  t['afii57670'] = 0x05D6;\n  t['afii57671'] = 0x05D7;\n  t['afii57672'] = 0x05D8;\n  t['afii57673'] = 0x05D9;\n  t['afii57674'] = 0x05DA;\n  t['afii57675'] = 0x05DB;\n  t['afii57676'] = 0x05DC;\n  t['afii57677'] = 0x05DD;\n  t['afii57678'] = 0x05DE;\n  t['afii57679'] = 0x05DF;\n  t['afii57680'] = 0x05E0;\n  t['afii57681'] = 0x05E1;\n  t['afii57682'] = 0x05E2;\n  t['afii57683'] = 0x05E3;\n  t['afii57684'] = 0x05E4;\n  t['afii57685'] = 0x05E5;\n  t['afii57686'] = 0x05E6;\n  t['afii57687'] = 0x05E7;\n  t['afii57688'] = 0x05E8;\n  t['afii57689'] = 0x05E9;\n  t['afii57690'] = 0x05EA;\n  t['afii57694'] = 0xFB2A;\n  t['afii57695'] = 0xFB2B;\n  t['afii57700'] = 0xFB4B;\n  t['afii57705'] = 0xFB1F;\n  t['afii57716'] = 0x05F0;\n  t['afii57717'] = 0x05F1;\n  t['afii57718'] = 0x05F2;\n  t['afii57723'] = 0xFB35;\n  t['afii57793'] = 0x05B4;\n  t['afii57794'] = 0x05B5;\n  t['afii57795'] = 0x05B6;\n  t['afii57796'] = 0x05BB;\n  t['afii57797'] = 0x05B8;\n  t['afii57798'] = 0x05B7;\n  t['afii57799'] = 0x05B0;\n  t['afii57800'] = 0x05B2;\n  t['afii57801'] = 0x05B1;\n  t['afii57802'] = 0x05B3;\n  t['afii57803'] = 0x05C2;\n  t['afii57804'] = 0x05C1;\n  t['afii57806'] = 0x05B9;\n  t['afii57807'] = 0x05BC;\n  t['afii57839'] = 0x05BD;\n  t['afii57841'] = 0x05BF;\n  t['afii57842'] = 0x05C0;\n  t['afii57929'] = 0x02BC;\n  t['afii61248'] = 0x2105;\n  t['afii61289'] = 0x2113;\n  t['afii61352'] = 0x2116;\n  t['afii61573'] = 0x202C;\n  t['afii61574'] = 0x202D;\n  t['afii61575'] = 0x202E;\n  t['afii61664'] = 0x200C;\n  t['afii63167'] = 0x066D;\n  t['afii64937'] = 0x02BD;\n  t['agrave'] = 0x00E0;\n  t['agujarati'] = 0x0A85;\n  t['agurmukhi'] = 0x0A05;\n  t['ahiragana'] = 0x3042;\n  t['ahookabove'] = 0x1EA3;\n  t['aibengali'] = 0x0990;\n  t['aibopomofo'] = 0x311E;\n  t['aideva'] = 0x0910;\n  t['aiecyrillic'] = 0x04D5;\n  t['aigujarati'] = 0x0A90;\n  t['aigurmukhi'] = 0x0A10;\n  t['aimatragurmukhi'] = 0x0A48;\n  t['ainarabic'] = 0x0639;\n  t['ainfinalarabic'] = 0xFECA;\n  t['aininitialarabic'] = 0xFECB;\n  t['ainmedialarabic'] = 0xFECC;\n  t['ainvertedbreve'] = 0x0203;\n  t['aivowelsignbengali'] = 0x09C8;\n  t['aivowelsigndeva'] = 0x0948;\n  t['aivowelsigngujarati'] = 0x0AC8;\n  t['akatakana'] = 0x30A2;\n  t['akatakanahalfwidth'] = 0xFF71;\n  t['akorean'] = 0x314F;\n  t['alef'] = 0x05D0;\n  t['alefarabic'] = 0x0627;\n  t['alefdageshhebrew'] = 0xFB30;\n  t['aleffinalarabic'] = 0xFE8E;\n  t['alefhamzaabovearabic'] = 0x0623;\n  t['alefhamzaabovefinalarabic'] = 0xFE84;\n  t['alefhamzabelowarabic'] = 0x0625;\n  t['alefhamzabelowfinalarabic'] = 0xFE88;\n  t['alefhebrew'] = 0x05D0;\n  t['aleflamedhebrew'] = 0xFB4F;\n  t['alefmaddaabovearabic'] = 0x0622;\n  t['alefmaddaabovefinalarabic'] = 0xFE82;\n  t['alefmaksuraarabic'] = 0x0649;\n  t['alefmaksurafinalarabic'] = 0xFEF0;\n  t['alefmaksurainitialarabic'] = 0xFEF3;\n  t['alefmaksuramedialarabic'] = 0xFEF4;\n  t['alefpatahhebrew'] = 0xFB2E;\n  t['alefqamatshebrew'] = 0xFB2F;\n  t['aleph'] = 0x2135;\n  t['allequal'] = 0x224C;\n  t['alpha'] = 0x03B1;\n  t['alphatonos'] = 0x03AC;\n  t['amacron'] = 0x0101;\n  t['amonospace'] = 0xFF41;\n  t['ampersand'] = 0x0026;\n  t['ampersandmonospace'] = 0xFF06;\n  t['ampersandsmall'] = 0xF726;\n  t['amsquare'] = 0x33C2;\n  t['anbopomofo'] = 0x3122;\n  t['angbopomofo'] = 0x3124;\n  t['angbracketleft'] = 0x3008;\n  t['angbracketright'] = 0x3009;\n  t['angkhankhuthai'] = 0x0E5A;\n  t['angle'] = 0x2220;\n  t['anglebracketleft'] = 0x3008;\n  t['anglebracketleftvertical'] = 0xFE3F;\n  t['anglebracketright'] = 0x3009;\n  t['anglebracketrightvertical'] = 0xFE40;\n  t['angleleft'] = 0x2329;\n  t['angleright'] = 0x232A;\n  t['angstrom'] = 0x212B;\n  t['anoteleia'] = 0x0387;\n  t['anudattadeva'] = 0x0952;\n  t['anusvarabengali'] = 0x0982;\n  t['anusvaradeva'] = 0x0902;\n  t['anusvaragujarati'] = 0x0A82;\n  t['aogonek'] = 0x0105;\n  t['apaatosquare'] = 0x3300;\n  t['aparen'] = 0x249C;\n  t['apostrophearmenian'] = 0x055A;\n  t['apostrophemod'] = 0x02BC;\n  t['apple'] = 0xF8FF;\n  t['approaches'] = 0x2250;\n  t['approxequal'] = 0x2248;\n  t['approxequalorimage'] = 0x2252;\n  t['approximatelyequal'] = 0x2245;\n  t['araeaekorean'] = 0x318E;\n  t['araeakorean'] = 0x318D;\n  t['arc'] = 0x2312;\n  t['arighthalfring'] = 0x1E9A;\n  t['aring'] = 0x00E5;\n  t['aringacute'] = 0x01FB;\n  t['aringbelow'] = 0x1E01;\n  t['arrowboth'] = 0x2194;\n  t['arrowdashdown'] = 0x21E3;\n  t['arrowdashleft'] = 0x21E0;\n  t['arrowdashright'] = 0x21E2;\n  t['arrowdashup'] = 0x21E1;\n  t['arrowdblboth'] = 0x21D4;\n  t['arrowdbldown'] = 0x21D3;\n  t['arrowdblleft'] = 0x21D0;\n  t['arrowdblright'] = 0x21D2;\n  t['arrowdblup'] = 0x21D1;\n  t['arrowdown'] = 0x2193;\n  t['arrowdownleft'] = 0x2199;\n  t['arrowdownright'] = 0x2198;\n  t['arrowdownwhite'] = 0x21E9;\n  t['arrowheaddownmod'] = 0x02C5;\n  t['arrowheadleftmod'] = 0x02C2;\n  t['arrowheadrightmod'] = 0x02C3;\n  t['arrowheadupmod'] = 0x02C4;\n  t['arrowhorizex'] = 0xF8E7;\n  t['arrowleft'] = 0x2190;\n  t['arrowleftdbl'] = 0x21D0;\n  t['arrowleftdblstroke'] = 0x21CD;\n  t['arrowleftoverright'] = 0x21C6;\n  t['arrowleftwhite'] = 0x21E6;\n  t['arrowright'] = 0x2192;\n  t['arrowrightdblstroke'] = 0x21CF;\n  t['arrowrightheavy'] = 0x279E;\n  t['arrowrightoverleft'] = 0x21C4;\n  t['arrowrightwhite'] = 0x21E8;\n  t['arrowtableft'] = 0x21E4;\n  t['arrowtabright'] = 0x21E5;\n  t['arrowup'] = 0x2191;\n  t['arrowupdn'] = 0x2195;\n  t['arrowupdnbse'] = 0x21A8;\n  t['arrowupdownbase'] = 0x21A8;\n  t['arrowupleft'] = 0x2196;\n  t['arrowupleftofdown'] = 0x21C5;\n  t['arrowupright'] = 0x2197;\n  t['arrowupwhite'] = 0x21E7;\n  t['arrowvertex'] = 0xF8E6;\n  t['asciicircum'] = 0x005E;\n  t['asciicircummonospace'] = 0xFF3E;\n  t['asciitilde'] = 0x007E;\n  t['asciitildemonospace'] = 0xFF5E;\n  t['ascript'] = 0x0251;\n  t['ascriptturned'] = 0x0252;\n  t['asmallhiragana'] = 0x3041;\n  t['asmallkatakana'] = 0x30A1;\n  t['asmallkatakanahalfwidth'] = 0xFF67;\n  t['asterisk'] = 0x002A;\n  t['asteriskaltonearabic'] = 0x066D;\n  t['asteriskarabic'] = 0x066D;\n  t['asteriskmath'] = 0x2217;\n  t['asteriskmonospace'] = 0xFF0A;\n  t['asterisksmall'] = 0xFE61;\n  t['asterism'] = 0x2042;\n  t['asuperior'] = 0xF6E9;\n  t['asymptoticallyequal'] = 0x2243;\n  t['at'] = 0x0040;\n  t['atilde'] = 0x00E3;\n  t['atmonospace'] = 0xFF20;\n  t['atsmall'] = 0xFE6B;\n  t['aturned'] = 0x0250;\n  t['aubengali'] = 0x0994;\n  t['aubopomofo'] = 0x3120;\n  t['audeva'] = 0x0914;\n  t['augujarati'] = 0x0A94;\n  t['augurmukhi'] = 0x0A14;\n  t['aulengthmarkbengali'] = 0x09D7;\n  t['aumatragurmukhi'] = 0x0A4C;\n  t['auvowelsignbengali'] = 0x09CC;\n  t['auvowelsigndeva'] = 0x094C;\n  t['auvowelsigngujarati'] = 0x0ACC;\n  t['avagrahadeva'] = 0x093D;\n  t['aybarmenian'] = 0x0561;\n  t['ayin'] = 0x05E2;\n  t['ayinaltonehebrew'] = 0xFB20;\n  t['ayinhebrew'] = 0x05E2;\n  t['b'] = 0x0062;\n  t['babengali'] = 0x09AC;\n  t['backslash'] = 0x005C;\n  t['backslashmonospace'] = 0xFF3C;\n  t['badeva'] = 0x092C;\n  t['bagujarati'] = 0x0AAC;\n  t['bagurmukhi'] = 0x0A2C;\n  t['bahiragana'] = 0x3070;\n  t['bahtthai'] = 0x0E3F;\n  t['bakatakana'] = 0x30D0;\n  t['bar'] = 0x007C;\n  t['barmonospace'] = 0xFF5C;\n  t['bbopomofo'] = 0x3105;\n  t['bcircle'] = 0x24D1;\n  t['bdotaccent'] = 0x1E03;\n  t['bdotbelow'] = 0x1E05;\n  t['beamedsixteenthnotes'] = 0x266C;\n  t['because'] = 0x2235;\n  t['becyrillic'] = 0x0431;\n  t['beharabic'] = 0x0628;\n  t['behfinalarabic'] = 0xFE90;\n  t['behinitialarabic'] = 0xFE91;\n  t['behiragana'] = 0x3079;\n  t['behmedialarabic'] = 0xFE92;\n  t['behmeeminitialarabic'] = 0xFC9F;\n  t['behmeemisolatedarabic'] = 0xFC08;\n  t['behnoonfinalarabic'] = 0xFC6D;\n  t['bekatakana'] = 0x30D9;\n  t['benarmenian'] = 0x0562;\n  t['bet'] = 0x05D1;\n  t['beta'] = 0x03B2;\n  t['betasymbolgreek'] = 0x03D0;\n  t['betdagesh'] = 0xFB31;\n  t['betdageshhebrew'] = 0xFB31;\n  t['bethebrew'] = 0x05D1;\n  t['betrafehebrew'] = 0xFB4C;\n  t['bhabengali'] = 0x09AD;\n  t['bhadeva'] = 0x092D;\n  t['bhagujarati'] = 0x0AAD;\n  t['bhagurmukhi'] = 0x0A2D;\n  t['bhook'] = 0x0253;\n  t['bihiragana'] = 0x3073;\n  t['bikatakana'] = 0x30D3;\n  t['bilabialclick'] = 0x0298;\n  t['bindigurmukhi'] = 0x0A02;\n  t['birusquare'] = 0x3331;\n  t['blackcircle'] = 0x25CF;\n  t['blackdiamond'] = 0x25C6;\n  t['blackdownpointingtriangle'] = 0x25BC;\n  t['blackleftpointingpointer'] = 0x25C4;\n  t['blackleftpointingtriangle'] = 0x25C0;\n  t['blacklenticularbracketleft'] = 0x3010;\n  t['blacklenticularbracketleftvertical'] = 0xFE3B;\n  t['blacklenticularbracketright'] = 0x3011;\n  t['blacklenticularbracketrightvertical'] = 0xFE3C;\n  t['blacklowerlefttriangle'] = 0x25E3;\n  t['blacklowerrighttriangle'] = 0x25E2;\n  t['blackrectangle'] = 0x25AC;\n  t['blackrightpointingpointer'] = 0x25BA;\n  t['blackrightpointingtriangle'] = 0x25B6;\n  t['blacksmallsquare'] = 0x25AA;\n  t['blacksmilingface'] = 0x263B;\n  t['blacksquare'] = 0x25A0;\n  t['blackstar'] = 0x2605;\n  t['blackupperlefttriangle'] = 0x25E4;\n  t['blackupperrighttriangle'] = 0x25E5;\n  t['blackuppointingsmalltriangle'] = 0x25B4;\n  t['blackuppointingtriangle'] = 0x25B2;\n  t['blank'] = 0x2423;\n  t['blinebelow'] = 0x1E07;\n  t['block'] = 0x2588;\n  t['bmonospace'] = 0xFF42;\n  t['bobaimaithai'] = 0x0E1A;\n  t['bohiragana'] = 0x307C;\n  t['bokatakana'] = 0x30DC;\n  t['bparen'] = 0x249D;\n  t['bqsquare'] = 0x33C3;\n  t['braceex'] = 0xF8F4;\n  t['braceleft'] = 0x007B;\n  t['braceleftbt'] = 0xF8F3;\n  t['braceleftmid'] = 0xF8F2;\n  t['braceleftmonospace'] = 0xFF5B;\n  t['braceleftsmall'] = 0xFE5B;\n  t['bracelefttp'] = 0xF8F1;\n  t['braceleftvertical'] = 0xFE37;\n  t['braceright'] = 0x007D;\n  t['bracerightbt'] = 0xF8FE;\n  t['bracerightmid'] = 0xF8FD;\n  t['bracerightmonospace'] = 0xFF5D;\n  t['bracerightsmall'] = 0xFE5C;\n  t['bracerighttp'] = 0xF8FC;\n  t['bracerightvertical'] = 0xFE38;\n  t['bracketleft'] = 0x005B;\n  t['bracketleftbt'] = 0xF8F0;\n  t['bracketleftex'] = 0xF8EF;\n  t['bracketleftmonospace'] = 0xFF3B;\n  t['bracketlefttp'] = 0xF8EE;\n  t['bracketright'] = 0x005D;\n  t['bracketrightbt'] = 0xF8FB;\n  t['bracketrightex'] = 0xF8FA;\n  t['bracketrightmonospace'] = 0xFF3D;\n  t['bracketrighttp'] = 0xF8F9;\n  t['breve'] = 0x02D8;\n  t['brevebelowcmb'] = 0x032E;\n  t['brevecmb'] = 0x0306;\n  t['breveinvertedbelowcmb'] = 0x032F;\n  t['breveinvertedcmb'] = 0x0311;\n  t['breveinverteddoublecmb'] = 0x0361;\n  t['bridgebelowcmb'] = 0x032A;\n  t['bridgeinvertedbelowcmb'] = 0x033A;\n  t['brokenbar'] = 0x00A6;\n  t['bstroke'] = 0x0180;\n  t['bsuperior'] = 0xF6EA;\n  t['btopbar'] = 0x0183;\n  t['buhiragana'] = 0x3076;\n  t['bukatakana'] = 0x30D6;\n  t['bullet'] = 0x2022;\n  t['bulletinverse'] = 0x25D8;\n  t['bulletoperator'] = 0x2219;\n  t['bullseye'] = 0x25CE;\n  t['c'] = 0x0063;\n  t['caarmenian'] = 0x056E;\n  t['cabengali'] = 0x099A;\n  t['cacute'] = 0x0107;\n  t['cadeva'] = 0x091A;\n  t['cagujarati'] = 0x0A9A;\n  t['cagurmukhi'] = 0x0A1A;\n  t['calsquare'] = 0x3388;\n  t['candrabindubengali'] = 0x0981;\n  t['candrabinducmb'] = 0x0310;\n  t['candrabindudeva'] = 0x0901;\n  t['candrabindugujarati'] = 0x0A81;\n  t['capslock'] = 0x21EA;\n  t['careof'] = 0x2105;\n  t['caron'] = 0x02C7;\n  t['caronbelowcmb'] = 0x032C;\n  t['caroncmb'] = 0x030C;\n  t['carriagereturn'] = 0x21B5;\n  t['cbopomofo'] = 0x3118;\n  t['ccaron'] = 0x010D;\n  t['ccedilla'] = 0x00E7;\n  t['ccedillaacute'] = 0x1E09;\n  t['ccircle'] = 0x24D2;\n  t['ccircumflex'] = 0x0109;\n  t['ccurl'] = 0x0255;\n  t['cdot'] = 0x010B;\n  t['cdotaccent'] = 0x010B;\n  t['cdsquare'] = 0x33C5;\n  t['cedilla'] = 0x00B8;\n  t['cedillacmb'] = 0x0327;\n  t['cent'] = 0x00A2;\n  t['centigrade'] = 0x2103;\n  t['centinferior'] = 0xF6DF;\n  t['centmonospace'] = 0xFFE0;\n  t['centoldstyle'] = 0xF7A2;\n  t['centsuperior'] = 0xF6E0;\n  t['chaarmenian'] = 0x0579;\n  t['chabengali'] = 0x099B;\n  t['chadeva'] = 0x091B;\n  t['chagujarati'] = 0x0A9B;\n  t['chagurmukhi'] = 0x0A1B;\n  t['chbopomofo'] = 0x3114;\n  t['cheabkhasiancyrillic'] = 0x04BD;\n  t['checkmark'] = 0x2713;\n  t['checyrillic'] = 0x0447;\n  t['chedescenderabkhasiancyrillic'] = 0x04BF;\n  t['chedescendercyrillic'] = 0x04B7;\n  t['chedieresiscyrillic'] = 0x04F5;\n  t['cheharmenian'] = 0x0573;\n  t['chekhakassiancyrillic'] = 0x04CC;\n  t['cheverticalstrokecyrillic'] = 0x04B9;\n  t['chi'] = 0x03C7;\n  t['chieuchacirclekorean'] = 0x3277;\n  t['chieuchaparenkorean'] = 0x3217;\n  t['chieuchcirclekorean'] = 0x3269;\n  t['chieuchkorean'] = 0x314A;\n  t['chieuchparenkorean'] = 0x3209;\n  t['chochangthai'] = 0x0E0A;\n  t['chochanthai'] = 0x0E08;\n  t['chochingthai'] = 0x0E09;\n  t['chochoethai'] = 0x0E0C;\n  t['chook'] = 0x0188;\n  t['cieucacirclekorean'] = 0x3276;\n  t['cieucaparenkorean'] = 0x3216;\n  t['cieuccirclekorean'] = 0x3268;\n  t['cieuckorean'] = 0x3148;\n  t['cieucparenkorean'] = 0x3208;\n  t['cieucuparenkorean'] = 0x321C;\n  t['circle'] = 0x25CB;\n  t['circlecopyrt'] = 0x00A9;\n  t['circlemultiply'] = 0x2297;\n  t['circleot'] = 0x2299;\n  t['circleplus'] = 0x2295;\n  t['circlepostalmark'] = 0x3036;\n  t['circlewithlefthalfblack'] = 0x25D0;\n  t['circlewithrighthalfblack'] = 0x25D1;\n  t['circumflex'] = 0x02C6;\n  t['circumflexbelowcmb'] = 0x032D;\n  t['circumflexcmb'] = 0x0302;\n  t['clear'] = 0x2327;\n  t['clickalveolar'] = 0x01C2;\n  t['clickdental'] = 0x01C0;\n  t['clicklateral'] = 0x01C1;\n  t['clickretroflex'] = 0x01C3;\n  t['club'] = 0x2663;\n  t['clubsuitblack'] = 0x2663;\n  t['clubsuitwhite'] = 0x2667;\n  t['cmcubedsquare'] = 0x33A4;\n  t['cmonospace'] = 0xFF43;\n  t['cmsquaredsquare'] = 0x33A0;\n  t['coarmenian'] = 0x0581;\n  t['colon'] = 0x003A;\n  t['colonmonetary'] = 0x20A1;\n  t['colonmonospace'] = 0xFF1A;\n  t['colonsign'] = 0x20A1;\n  t['colonsmall'] = 0xFE55;\n  t['colontriangularhalfmod'] = 0x02D1;\n  t['colontriangularmod'] = 0x02D0;\n  t['comma'] = 0x002C;\n  t['commaabovecmb'] = 0x0313;\n  t['commaaboverightcmb'] = 0x0315;\n  t['commaaccent'] = 0xF6C3;\n  t['commaarabic'] = 0x060C;\n  t['commaarmenian'] = 0x055D;\n  t['commainferior'] = 0xF6E1;\n  t['commamonospace'] = 0xFF0C;\n  t['commareversedabovecmb'] = 0x0314;\n  t['commareversedmod'] = 0x02BD;\n  t['commasmall'] = 0xFE50;\n  t['commasuperior'] = 0xF6E2;\n  t['commaturnedabovecmb'] = 0x0312;\n  t['commaturnedmod'] = 0x02BB;\n  t['compass'] = 0x263C;\n  t['congruent'] = 0x2245;\n  t['contourintegral'] = 0x222E;\n  t['control'] = 0x2303;\n  t['controlACK'] = 0x0006;\n  t['controlBEL'] = 0x0007;\n  t['controlBS'] = 0x0008;\n  t['controlCAN'] = 0x0018;\n  t['controlCR'] = 0x000D;\n  t['controlDC1'] = 0x0011;\n  t['controlDC2'] = 0x0012;\n  t['controlDC3'] = 0x0013;\n  t['controlDC4'] = 0x0014;\n  t['controlDEL'] = 0x007F;\n  t['controlDLE'] = 0x0010;\n  t['controlEM'] = 0x0019;\n  t['controlENQ'] = 0x0005;\n  t['controlEOT'] = 0x0004;\n  t['controlESC'] = 0x001B;\n  t['controlETB'] = 0x0017;\n  t['controlETX'] = 0x0003;\n  t['controlFF'] = 0x000C;\n  t['controlFS'] = 0x001C;\n  t['controlGS'] = 0x001D;\n  t['controlHT'] = 0x0009;\n  t['controlLF'] = 0x000A;\n  t['controlNAK'] = 0x0015;\n  t['controlNULL'] = 0x0000;\n  t['controlRS'] = 0x001E;\n  t['controlSI'] = 0x000F;\n  t['controlSO'] = 0x000E;\n  t['controlSOT'] = 0x0002;\n  t['controlSTX'] = 0x0001;\n  t['controlSUB'] = 0x001A;\n  t['controlSYN'] = 0x0016;\n  t['controlUS'] = 0x001F;\n  t['controlVT'] = 0x000B;\n  t['copyright'] = 0x00A9;\n  t['copyrightsans'] = 0xF8E9;\n  t['copyrightserif'] = 0xF6D9;\n  t['cornerbracketleft'] = 0x300C;\n  t['cornerbracketlefthalfwidth'] = 0xFF62;\n  t['cornerbracketleftvertical'] = 0xFE41;\n  t['cornerbracketright'] = 0x300D;\n  t['cornerbracketrighthalfwidth'] = 0xFF63;\n  t['cornerbracketrightvertical'] = 0xFE42;\n  t['corporationsquare'] = 0x337F;\n  t['cosquare'] = 0x33C7;\n  t['coverkgsquare'] = 0x33C6;\n  t['cparen'] = 0x249E;\n  t['cruzeiro'] = 0x20A2;\n  t['cstretched'] = 0x0297;\n  t['curlyand'] = 0x22CF;\n  t['curlyor'] = 0x22CE;\n  t['currency'] = 0x00A4;\n  t['cyrBreve'] = 0xF6D1;\n  t['cyrFlex'] = 0xF6D2;\n  t['cyrbreve'] = 0xF6D4;\n  t['cyrflex'] = 0xF6D5;\n  t['d'] = 0x0064;\n  t['daarmenian'] = 0x0564;\n  t['dabengali'] = 0x09A6;\n  t['dadarabic'] = 0x0636;\n  t['dadeva'] = 0x0926;\n  t['dadfinalarabic'] = 0xFEBE;\n  t['dadinitialarabic'] = 0xFEBF;\n  t['dadmedialarabic'] = 0xFEC0;\n  t['dagesh'] = 0x05BC;\n  t['dageshhebrew'] = 0x05BC;\n  t['dagger'] = 0x2020;\n  t['daggerdbl'] = 0x2021;\n  t['dagujarati'] = 0x0AA6;\n  t['dagurmukhi'] = 0x0A26;\n  t['dahiragana'] = 0x3060;\n  t['dakatakana'] = 0x30C0;\n  t['dalarabic'] = 0x062F;\n  t['dalet'] = 0x05D3;\n  t['daletdagesh'] = 0xFB33;\n  t['daletdageshhebrew'] = 0xFB33;\n  t['dalethebrew'] = 0x05D3;\n  t['dalfinalarabic'] = 0xFEAA;\n  t['dammaarabic'] = 0x064F;\n  t['dammalowarabic'] = 0x064F;\n  t['dammatanaltonearabic'] = 0x064C;\n  t['dammatanarabic'] = 0x064C;\n  t['danda'] = 0x0964;\n  t['dargahebrew'] = 0x05A7;\n  t['dargalefthebrew'] = 0x05A7;\n  t['dasiapneumatacyrilliccmb'] = 0x0485;\n  t['dblGrave'] = 0xF6D3;\n  t['dblanglebracketleft'] = 0x300A;\n  t['dblanglebracketleftvertical'] = 0xFE3D;\n  t['dblanglebracketright'] = 0x300B;\n  t['dblanglebracketrightvertical'] = 0xFE3E;\n  t['dblarchinvertedbelowcmb'] = 0x032B;\n  t['dblarrowleft'] = 0x21D4;\n  t['dblarrowright'] = 0x21D2;\n  t['dbldanda'] = 0x0965;\n  t['dblgrave'] = 0xF6D6;\n  t['dblgravecmb'] = 0x030F;\n  t['dblintegral'] = 0x222C;\n  t['dbllowline'] = 0x2017;\n  t['dbllowlinecmb'] = 0x0333;\n  t['dbloverlinecmb'] = 0x033F;\n  t['dblprimemod'] = 0x02BA;\n  t['dblverticalbar'] = 0x2016;\n  t['dblverticallineabovecmb'] = 0x030E;\n  t['dbopomofo'] = 0x3109;\n  t['dbsquare'] = 0x33C8;\n  t['dcaron'] = 0x010F;\n  t['dcedilla'] = 0x1E11;\n  t['dcircle'] = 0x24D3;\n  t['dcircumflexbelow'] = 0x1E13;\n  t['dcroat'] = 0x0111;\n  t['ddabengali'] = 0x09A1;\n  t['ddadeva'] = 0x0921;\n  t['ddagujarati'] = 0x0AA1;\n  t['ddagurmukhi'] = 0x0A21;\n  t['ddalarabic'] = 0x0688;\n  t['ddalfinalarabic'] = 0xFB89;\n  t['dddhadeva'] = 0x095C;\n  t['ddhabengali'] = 0x09A2;\n  t['ddhadeva'] = 0x0922;\n  t['ddhagujarati'] = 0x0AA2;\n  t['ddhagurmukhi'] = 0x0A22;\n  t['ddotaccent'] = 0x1E0B;\n  t['ddotbelow'] = 0x1E0D;\n  t['decimalseparatorarabic'] = 0x066B;\n  t['decimalseparatorpersian'] = 0x066B;\n  t['decyrillic'] = 0x0434;\n  t['degree'] = 0x00B0;\n  t['dehihebrew'] = 0x05AD;\n  t['dehiragana'] = 0x3067;\n  t['deicoptic'] = 0x03EF;\n  t['dekatakana'] = 0x30C7;\n  t['deleteleft'] = 0x232B;\n  t['deleteright'] = 0x2326;\n  t['delta'] = 0x03B4;\n  t['deltaturned'] = 0x018D;\n  t['denominatorminusonenumeratorbengali'] = 0x09F8;\n  t['dezh'] = 0x02A4;\n  t['dhabengali'] = 0x09A7;\n  t['dhadeva'] = 0x0927;\n  t['dhagujarati'] = 0x0AA7;\n  t['dhagurmukhi'] = 0x0A27;\n  t['dhook'] = 0x0257;\n  t['dialytikatonos'] = 0x0385;\n  t['dialytikatonoscmb'] = 0x0344;\n  t['diamond'] = 0x2666;\n  t['diamondsuitwhite'] = 0x2662;\n  t['dieresis'] = 0x00A8;\n  t['dieresisacute'] = 0xF6D7;\n  t['dieresisbelowcmb'] = 0x0324;\n  t['dieresiscmb'] = 0x0308;\n  t['dieresisgrave'] = 0xF6D8;\n  t['dieresistonos'] = 0x0385;\n  t['dihiragana'] = 0x3062;\n  t['dikatakana'] = 0x30C2;\n  t['dittomark'] = 0x3003;\n  t['divide'] = 0x00F7;\n  t['divides'] = 0x2223;\n  t['divisionslash'] = 0x2215;\n  t['djecyrillic'] = 0x0452;\n  t['dkshade'] = 0x2593;\n  t['dlinebelow'] = 0x1E0F;\n  t['dlsquare'] = 0x3397;\n  t['dmacron'] = 0x0111;\n  t['dmonospace'] = 0xFF44;\n  t['dnblock'] = 0x2584;\n  t['dochadathai'] = 0x0E0E;\n  t['dodekthai'] = 0x0E14;\n  t['dohiragana'] = 0x3069;\n  t['dokatakana'] = 0x30C9;\n  t['dollar'] = 0x0024;\n  t['dollarinferior'] = 0xF6E3;\n  t['dollarmonospace'] = 0xFF04;\n  t['dollaroldstyle'] = 0xF724;\n  t['dollarsmall'] = 0xFE69;\n  t['dollarsuperior'] = 0xF6E4;\n  t['dong'] = 0x20AB;\n  t['dorusquare'] = 0x3326;\n  t['dotaccent'] = 0x02D9;\n  t['dotaccentcmb'] = 0x0307;\n  t['dotbelowcmb'] = 0x0323;\n  t['dotbelowcomb'] = 0x0323;\n  t['dotkatakana'] = 0x30FB;\n  t['dotlessi'] = 0x0131;\n  t['dotlessj'] = 0xF6BE;\n  t['dotlessjstrokehook'] = 0x0284;\n  t['dotmath'] = 0x22C5;\n  t['dottedcircle'] = 0x25CC;\n  t['doubleyodpatah'] = 0xFB1F;\n  t['doubleyodpatahhebrew'] = 0xFB1F;\n  t['downtackbelowcmb'] = 0x031E;\n  t['downtackmod'] = 0x02D5;\n  t['dparen'] = 0x249F;\n  t['dsuperior'] = 0xF6EB;\n  t['dtail'] = 0x0256;\n  t['dtopbar'] = 0x018C;\n  t['duhiragana'] = 0x3065;\n  t['dukatakana'] = 0x30C5;\n  t['dz'] = 0x01F3;\n  t['dzaltone'] = 0x02A3;\n  t['dzcaron'] = 0x01C6;\n  t['dzcurl'] = 0x02A5;\n  t['dzeabkhasiancyrillic'] = 0x04E1;\n  t['dzecyrillic'] = 0x0455;\n  t['dzhecyrillic'] = 0x045F;\n  t['e'] = 0x0065;\n  t['eacute'] = 0x00E9;\n  t['earth'] = 0x2641;\n  t['ebengali'] = 0x098F;\n  t['ebopomofo'] = 0x311C;\n  t['ebreve'] = 0x0115;\n  t['ecandradeva'] = 0x090D;\n  t['ecandragujarati'] = 0x0A8D;\n  t['ecandravowelsigndeva'] = 0x0945;\n  t['ecandravowelsigngujarati'] = 0x0AC5;\n  t['ecaron'] = 0x011B;\n  t['ecedillabreve'] = 0x1E1D;\n  t['echarmenian'] = 0x0565;\n  t['echyiwnarmenian'] = 0x0587;\n  t['ecircle'] = 0x24D4;\n  t['ecircumflex'] = 0x00EA;\n  t['ecircumflexacute'] = 0x1EBF;\n  t['ecircumflexbelow'] = 0x1E19;\n  t['ecircumflexdotbelow'] = 0x1EC7;\n  t['ecircumflexgrave'] = 0x1EC1;\n  t['ecircumflexhookabove'] = 0x1EC3;\n  t['ecircumflextilde'] = 0x1EC5;\n  t['ecyrillic'] = 0x0454;\n  t['edblgrave'] = 0x0205;\n  t['edeva'] = 0x090F;\n  t['edieresis'] = 0x00EB;\n  t['edot'] = 0x0117;\n  t['edotaccent'] = 0x0117;\n  t['edotbelow'] = 0x1EB9;\n  t['eegurmukhi'] = 0x0A0F;\n  t['eematragurmukhi'] = 0x0A47;\n  t['efcyrillic'] = 0x0444;\n  t['egrave'] = 0x00E8;\n  t['egujarati'] = 0x0A8F;\n  t['eharmenian'] = 0x0567;\n  t['ehbopomofo'] = 0x311D;\n  t['ehiragana'] = 0x3048;\n  t['ehookabove'] = 0x1EBB;\n  t['eibopomofo'] = 0x311F;\n  t['eight'] = 0x0038;\n  t['eightarabic'] = 0x0668;\n  t['eightbengali'] = 0x09EE;\n  t['eightcircle'] = 0x2467;\n  t['eightcircleinversesansserif'] = 0x2791;\n  t['eightdeva'] = 0x096E;\n  t['eighteencircle'] = 0x2471;\n  t['eighteenparen'] = 0x2485;\n  t['eighteenperiod'] = 0x2499;\n  t['eightgujarati'] = 0x0AEE;\n  t['eightgurmukhi'] = 0x0A6E;\n  t['eighthackarabic'] = 0x0668;\n  t['eighthangzhou'] = 0x3028;\n  t['eighthnotebeamed'] = 0x266B;\n  t['eightideographicparen'] = 0x3227;\n  t['eightinferior'] = 0x2088;\n  t['eightmonospace'] = 0xFF18;\n  t['eightoldstyle'] = 0xF738;\n  t['eightparen'] = 0x247B;\n  t['eightperiod'] = 0x248F;\n  t['eightpersian'] = 0x06F8;\n  t['eightroman'] = 0x2177;\n  t['eightsuperior'] = 0x2078;\n  t['eightthai'] = 0x0E58;\n  t['einvertedbreve'] = 0x0207;\n  t['eiotifiedcyrillic'] = 0x0465;\n  t['ekatakana'] = 0x30A8;\n  t['ekatakanahalfwidth'] = 0xFF74;\n  t['ekonkargurmukhi'] = 0x0A74;\n  t['ekorean'] = 0x3154;\n  t['elcyrillic'] = 0x043B;\n  t['element'] = 0x2208;\n  t['elevencircle'] = 0x246A;\n  t['elevenparen'] = 0x247E;\n  t['elevenperiod'] = 0x2492;\n  t['elevenroman'] = 0x217A;\n  t['ellipsis'] = 0x2026;\n  t['ellipsisvertical'] = 0x22EE;\n  t['emacron'] = 0x0113;\n  t['emacronacute'] = 0x1E17;\n  t['emacrongrave'] = 0x1E15;\n  t['emcyrillic'] = 0x043C;\n  t['emdash'] = 0x2014;\n  t['emdashvertical'] = 0xFE31;\n  t['emonospace'] = 0xFF45;\n  t['emphasismarkarmenian'] = 0x055B;\n  t['emptyset'] = 0x2205;\n  t['enbopomofo'] = 0x3123;\n  t['encyrillic'] = 0x043D;\n  t['endash'] = 0x2013;\n  t['endashvertical'] = 0xFE32;\n  t['endescendercyrillic'] = 0x04A3;\n  t['eng'] = 0x014B;\n  t['engbopomofo'] = 0x3125;\n  t['enghecyrillic'] = 0x04A5;\n  t['enhookcyrillic'] = 0x04C8;\n  t['enspace'] = 0x2002;\n  t['eogonek'] = 0x0119;\n  t['eokorean'] = 0x3153;\n  t['eopen'] = 0x025B;\n  t['eopenclosed'] = 0x029A;\n  t['eopenreversed'] = 0x025C;\n  t['eopenreversedclosed'] = 0x025E;\n  t['eopenreversedhook'] = 0x025D;\n  t['eparen'] = 0x24A0;\n  t['epsilon'] = 0x03B5;\n  t['epsilontonos'] = 0x03AD;\n  t['equal'] = 0x003D;\n  t['equalmonospace'] = 0xFF1D;\n  t['equalsmall'] = 0xFE66;\n  t['equalsuperior'] = 0x207C;\n  t['equivalence'] = 0x2261;\n  t['erbopomofo'] = 0x3126;\n  t['ercyrillic'] = 0x0440;\n  t['ereversed'] = 0x0258;\n  t['ereversedcyrillic'] = 0x044D;\n  t['escyrillic'] = 0x0441;\n  t['esdescendercyrillic'] = 0x04AB;\n  t['esh'] = 0x0283;\n  t['eshcurl'] = 0x0286;\n  t['eshortdeva'] = 0x090E;\n  t['eshortvowelsigndeva'] = 0x0946;\n  t['eshreversedloop'] = 0x01AA;\n  t['eshsquatreversed'] = 0x0285;\n  t['esmallhiragana'] = 0x3047;\n  t['esmallkatakana'] = 0x30A7;\n  t['esmallkatakanahalfwidth'] = 0xFF6A;\n  t['estimated'] = 0x212E;\n  t['esuperior'] = 0xF6EC;\n  t['eta'] = 0x03B7;\n  t['etarmenian'] = 0x0568;\n  t['etatonos'] = 0x03AE;\n  t['eth'] = 0x00F0;\n  t['etilde'] = 0x1EBD;\n  t['etildebelow'] = 0x1E1B;\n  t['etnahtafoukhhebrew'] = 0x0591;\n  t['etnahtafoukhlefthebrew'] = 0x0591;\n  t['etnahtahebrew'] = 0x0591;\n  t['etnahtalefthebrew'] = 0x0591;\n  t['eturned'] = 0x01DD;\n  t['eukorean'] = 0x3161;\n  t['euro'] = 0x20AC;\n  t['evowelsignbengali'] = 0x09C7;\n  t['evowelsigndeva'] = 0x0947;\n  t['evowelsigngujarati'] = 0x0AC7;\n  t['exclam'] = 0x0021;\n  t['exclamarmenian'] = 0x055C;\n  t['exclamdbl'] = 0x203C;\n  t['exclamdown'] = 0x00A1;\n  t['exclamdownsmall'] = 0xF7A1;\n  t['exclammonospace'] = 0xFF01;\n  t['exclamsmall'] = 0xF721;\n  t['existential'] = 0x2203;\n  t['ezh'] = 0x0292;\n  t['ezhcaron'] = 0x01EF;\n  t['ezhcurl'] = 0x0293;\n  t['ezhreversed'] = 0x01B9;\n  t['ezhtail'] = 0x01BA;\n  t['f'] = 0x0066;\n  t['fadeva'] = 0x095E;\n  t['fagurmukhi'] = 0x0A5E;\n  t['fahrenheit'] = 0x2109;\n  t['fathaarabic'] = 0x064E;\n  t['fathalowarabic'] = 0x064E;\n  t['fathatanarabic'] = 0x064B;\n  t['fbopomofo'] = 0x3108;\n  t['fcircle'] = 0x24D5;\n  t['fdotaccent'] = 0x1E1F;\n  t['feharabic'] = 0x0641;\n  t['feharmenian'] = 0x0586;\n  t['fehfinalarabic'] = 0xFED2;\n  t['fehinitialarabic'] = 0xFED3;\n  t['fehmedialarabic'] = 0xFED4;\n  t['feicoptic'] = 0x03E5;\n  t['female'] = 0x2640;\n  t['ff'] = 0xFB00;\n  t['ffi'] = 0xFB03;\n  t['ffl'] = 0xFB04;\n  t['fi'] = 0xFB01;\n  t['fifteencircle'] = 0x246E;\n  t['fifteenparen'] = 0x2482;\n  t['fifteenperiod'] = 0x2496;\n  t['figuredash'] = 0x2012;\n  t['filledbox'] = 0x25A0;\n  t['filledrect'] = 0x25AC;\n  t['finalkaf'] = 0x05DA;\n  t['finalkafdagesh'] = 0xFB3A;\n  t['finalkafdageshhebrew'] = 0xFB3A;\n  t['finalkafhebrew'] = 0x05DA;\n  t['finalmem'] = 0x05DD;\n  t['finalmemhebrew'] = 0x05DD;\n  t['finalnun'] = 0x05DF;\n  t['finalnunhebrew'] = 0x05DF;\n  t['finalpe'] = 0x05E3;\n  t['finalpehebrew'] = 0x05E3;\n  t['finaltsadi'] = 0x05E5;\n  t['finaltsadihebrew'] = 0x05E5;\n  t['firsttonechinese'] = 0x02C9;\n  t['fisheye'] = 0x25C9;\n  t['fitacyrillic'] = 0x0473;\n  t['five'] = 0x0035;\n  t['fivearabic'] = 0x0665;\n  t['fivebengali'] = 0x09EB;\n  t['fivecircle'] = 0x2464;\n  t['fivecircleinversesansserif'] = 0x278E;\n  t['fivedeva'] = 0x096B;\n  t['fiveeighths'] = 0x215D;\n  t['fivegujarati'] = 0x0AEB;\n  t['fivegurmukhi'] = 0x0A6B;\n  t['fivehackarabic'] = 0x0665;\n  t['fivehangzhou'] = 0x3025;\n  t['fiveideographicparen'] = 0x3224;\n  t['fiveinferior'] = 0x2085;\n  t['fivemonospace'] = 0xFF15;\n  t['fiveoldstyle'] = 0xF735;\n  t['fiveparen'] = 0x2478;\n  t['fiveperiod'] = 0x248C;\n  t['fivepersian'] = 0x06F5;\n  t['fiveroman'] = 0x2174;\n  t['fivesuperior'] = 0x2075;\n  t['fivethai'] = 0x0E55;\n  t['fl'] = 0xFB02;\n  t['florin'] = 0x0192;\n  t['fmonospace'] = 0xFF46;\n  t['fmsquare'] = 0x3399;\n  t['fofanthai'] = 0x0E1F;\n  t['fofathai'] = 0x0E1D;\n  t['fongmanthai'] = 0x0E4F;\n  t['forall'] = 0x2200;\n  t['four'] = 0x0034;\n  t['fourarabic'] = 0x0664;\n  t['fourbengali'] = 0x09EA;\n  t['fourcircle'] = 0x2463;\n  t['fourcircleinversesansserif'] = 0x278D;\n  t['fourdeva'] = 0x096A;\n  t['fourgujarati'] = 0x0AEA;\n  t['fourgurmukhi'] = 0x0A6A;\n  t['fourhackarabic'] = 0x0664;\n  t['fourhangzhou'] = 0x3024;\n  t['fourideographicparen'] = 0x3223;\n  t['fourinferior'] = 0x2084;\n  t['fourmonospace'] = 0xFF14;\n  t['fournumeratorbengali'] = 0x09F7;\n  t['fouroldstyle'] = 0xF734;\n  t['fourparen'] = 0x2477;\n  t['fourperiod'] = 0x248B;\n  t['fourpersian'] = 0x06F4;\n  t['fourroman'] = 0x2173;\n  t['foursuperior'] = 0x2074;\n  t['fourteencircle'] = 0x246D;\n  t['fourteenparen'] = 0x2481;\n  t['fourteenperiod'] = 0x2495;\n  t['fourthai'] = 0x0E54;\n  t['fourthtonechinese'] = 0x02CB;\n  t['fparen'] = 0x24A1;\n  t['fraction'] = 0x2044;\n  t['franc'] = 0x20A3;\n  t['g'] = 0x0067;\n  t['gabengali'] = 0x0997;\n  t['gacute'] = 0x01F5;\n  t['gadeva'] = 0x0917;\n  t['gafarabic'] = 0x06AF;\n  t['gaffinalarabic'] = 0xFB93;\n  t['gafinitialarabic'] = 0xFB94;\n  t['gafmedialarabic'] = 0xFB95;\n  t['gagujarati'] = 0x0A97;\n  t['gagurmukhi'] = 0x0A17;\n  t['gahiragana'] = 0x304C;\n  t['gakatakana'] = 0x30AC;\n  t['gamma'] = 0x03B3;\n  t['gammalatinsmall'] = 0x0263;\n  t['gammasuperior'] = 0x02E0;\n  t['gangiacoptic'] = 0x03EB;\n  t['gbopomofo'] = 0x310D;\n  t['gbreve'] = 0x011F;\n  t['gcaron'] = 0x01E7;\n  t['gcedilla'] = 0x0123;\n  t['gcircle'] = 0x24D6;\n  t['gcircumflex'] = 0x011D;\n  t['gcommaaccent'] = 0x0123;\n  t['gdot'] = 0x0121;\n  t['gdotaccent'] = 0x0121;\n  t['gecyrillic'] = 0x0433;\n  t['gehiragana'] = 0x3052;\n  t['gekatakana'] = 0x30B2;\n  t['geometricallyequal'] = 0x2251;\n  t['gereshaccenthebrew'] = 0x059C;\n  t['gereshhebrew'] = 0x05F3;\n  t['gereshmuqdamhebrew'] = 0x059D;\n  t['germandbls'] = 0x00DF;\n  t['gershayimaccenthebrew'] = 0x059E;\n  t['gershayimhebrew'] = 0x05F4;\n  t['getamark'] = 0x3013;\n  t['ghabengali'] = 0x0998;\n  t['ghadarmenian'] = 0x0572;\n  t['ghadeva'] = 0x0918;\n  t['ghagujarati'] = 0x0A98;\n  t['ghagurmukhi'] = 0x0A18;\n  t['ghainarabic'] = 0x063A;\n  t['ghainfinalarabic'] = 0xFECE;\n  t['ghaininitialarabic'] = 0xFECF;\n  t['ghainmedialarabic'] = 0xFED0;\n  t['ghemiddlehookcyrillic'] = 0x0495;\n  t['ghestrokecyrillic'] = 0x0493;\n  t['gheupturncyrillic'] = 0x0491;\n  t['ghhadeva'] = 0x095A;\n  t['ghhagurmukhi'] = 0x0A5A;\n  t['ghook'] = 0x0260;\n  t['ghzsquare'] = 0x3393;\n  t['gihiragana'] = 0x304E;\n  t['gikatakana'] = 0x30AE;\n  t['gimarmenian'] = 0x0563;\n  t['gimel'] = 0x05D2;\n  t['gimeldagesh'] = 0xFB32;\n  t['gimeldageshhebrew'] = 0xFB32;\n  t['gimelhebrew'] = 0x05D2;\n  t['gjecyrillic'] = 0x0453;\n  t['glottalinvertedstroke'] = 0x01BE;\n  t['glottalstop'] = 0x0294;\n  t['glottalstopinverted'] = 0x0296;\n  t['glottalstopmod'] = 0x02C0;\n  t['glottalstopreversed'] = 0x0295;\n  t['glottalstopreversedmod'] = 0x02C1;\n  t['glottalstopreversedsuperior'] = 0x02E4;\n  t['glottalstopstroke'] = 0x02A1;\n  t['glottalstopstrokereversed'] = 0x02A2;\n  t['gmacron'] = 0x1E21;\n  t['gmonospace'] = 0xFF47;\n  t['gohiragana'] = 0x3054;\n  t['gokatakana'] = 0x30B4;\n  t['gparen'] = 0x24A2;\n  t['gpasquare'] = 0x33AC;\n  t['gradient'] = 0x2207;\n  t['grave'] = 0x0060;\n  t['gravebelowcmb'] = 0x0316;\n  t['gravecmb'] = 0x0300;\n  t['gravecomb'] = 0x0300;\n  t['gravedeva'] = 0x0953;\n  t['gravelowmod'] = 0x02CE;\n  t['gravemonospace'] = 0xFF40;\n  t['gravetonecmb'] = 0x0340;\n  t['greater'] = 0x003E;\n  t['greaterequal'] = 0x2265;\n  t['greaterequalorless'] = 0x22DB;\n  t['greatermonospace'] = 0xFF1E;\n  t['greaterorequivalent'] = 0x2273;\n  t['greaterorless'] = 0x2277;\n  t['greateroverequal'] = 0x2267;\n  t['greatersmall'] = 0xFE65;\n  t['gscript'] = 0x0261;\n  t['gstroke'] = 0x01E5;\n  t['guhiragana'] = 0x3050;\n  t['guillemotleft'] = 0x00AB;\n  t['guillemotright'] = 0x00BB;\n  t['guilsinglleft'] = 0x2039;\n  t['guilsinglright'] = 0x203A;\n  t['gukatakana'] = 0x30B0;\n  t['guramusquare'] = 0x3318;\n  t['gysquare'] = 0x33C9;\n  t['h'] = 0x0068;\n  t['haabkhasiancyrillic'] = 0x04A9;\n  t['haaltonearabic'] = 0x06C1;\n  t['habengali'] = 0x09B9;\n  t['hadescendercyrillic'] = 0x04B3;\n  t['hadeva'] = 0x0939;\n  t['hagujarati'] = 0x0AB9;\n  t['hagurmukhi'] = 0x0A39;\n  t['haharabic'] = 0x062D;\n  t['hahfinalarabic'] = 0xFEA2;\n  t['hahinitialarabic'] = 0xFEA3;\n  t['hahiragana'] = 0x306F;\n  t['hahmedialarabic'] = 0xFEA4;\n  t['haitusquare'] = 0x332A;\n  t['hakatakana'] = 0x30CF;\n  t['hakatakanahalfwidth'] = 0xFF8A;\n  t['halantgurmukhi'] = 0x0A4D;\n  t['hamzaarabic'] = 0x0621;\n  t['hamzalowarabic'] = 0x0621;\n  t['hangulfiller'] = 0x3164;\n  t['hardsigncyrillic'] = 0x044A;\n  t['harpoonleftbarbup'] = 0x21BC;\n  t['harpoonrightbarbup'] = 0x21C0;\n  t['hasquare'] = 0x33CA;\n  t['hatafpatah'] = 0x05B2;\n  t['hatafpatah16'] = 0x05B2;\n  t['hatafpatah23'] = 0x05B2;\n  t['hatafpatah2f'] = 0x05B2;\n  t['hatafpatahhebrew'] = 0x05B2;\n  t['hatafpatahnarrowhebrew'] = 0x05B2;\n  t['hatafpatahquarterhebrew'] = 0x05B2;\n  t['hatafpatahwidehebrew'] = 0x05B2;\n  t['hatafqamats'] = 0x05B3;\n  t['hatafqamats1b'] = 0x05B3;\n  t['hatafqamats28'] = 0x05B3;\n  t['hatafqamats34'] = 0x05B3;\n  t['hatafqamatshebrew'] = 0x05B3;\n  t['hatafqamatsnarrowhebrew'] = 0x05B3;\n  t['hatafqamatsquarterhebrew'] = 0x05B3;\n  t['hatafqamatswidehebrew'] = 0x05B3;\n  t['hatafsegol'] = 0x05B1;\n  t['hatafsegol17'] = 0x05B1;\n  t['hatafsegol24'] = 0x05B1;\n  t['hatafsegol30'] = 0x05B1;\n  t['hatafsegolhebrew'] = 0x05B1;\n  t['hatafsegolnarrowhebrew'] = 0x05B1;\n  t['hatafsegolquarterhebrew'] = 0x05B1;\n  t['hatafsegolwidehebrew'] = 0x05B1;\n  t['hbar'] = 0x0127;\n  t['hbopomofo'] = 0x310F;\n  t['hbrevebelow'] = 0x1E2B;\n  t['hcedilla'] = 0x1E29;\n  t['hcircle'] = 0x24D7;\n  t['hcircumflex'] = 0x0125;\n  t['hdieresis'] = 0x1E27;\n  t['hdotaccent'] = 0x1E23;\n  t['hdotbelow'] = 0x1E25;\n  t['he'] = 0x05D4;\n  t['heart'] = 0x2665;\n  t['heartsuitblack'] = 0x2665;\n  t['heartsuitwhite'] = 0x2661;\n  t['hedagesh'] = 0xFB34;\n  t['hedageshhebrew'] = 0xFB34;\n  t['hehaltonearabic'] = 0x06C1;\n  t['heharabic'] = 0x0647;\n  t['hehebrew'] = 0x05D4;\n  t['hehfinalaltonearabic'] = 0xFBA7;\n  t['hehfinalalttwoarabic'] = 0xFEEA;\n  t['hehfinalarabic'] = 0xFEEA;\n  t['hehhamzaabovefinalarabic'] = 0xFBA5;\n  t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n  t['hehinitialaltonearabic'] = 0xFBA8;\n  t['hehinitialarabic'] = 0xFEEB;\n  t['hehiragana'] = 0x3078;\n  t['hehmedialaltonearabic'] = 0xFBA9;\n  t['hehmedialarabic'] = 0xFEEC;\n  t['heiseierasquare'] = 0x337B;\n  t['hekatakana'] = 0x30D8;\n  t['hekatakanahalfwidth'] = 0xFF8D;\n  t['hekutaarusquare'] = 0x3336;\n  t['henghook'] = 0x0267;\n  t['herutusquare'] = 0x3339;\n  t['het'] = 0x05D7;\n  t['hethebrew'] = 0x05D7;\n  t['hhook'] = 0x0266;\n  t['hhooksuperior'] = 0x02B1;\n  t['hieuhacirclekorean'] = 0x327B;\n  t['hieuhaparenkorean'] = 0x321B;\n  t['hieuhcirclekorean'] = 0x326D;\n  t['hieuhkorean'] = 0x314E;\n  t['hieuhparenkorean'] = 0x320D;\n  t['hihiragana'] = 0x3072;\n  t['hikatakana'] = 0x30D2;\n  t['hikatakanahalfwidth'] = 0xFF8B;\n  t['hiriq'] = 0x05B4;\n  t['hiriq14'] = 0x05B4;\n  t['hiriq21'] = 0x05B4;\n  t['hiriq2d'] = 0x05B4;\n  t['hiriqhebrew'] = 0x05B4;\n  t['hiriqnarrowhebrew'] = 0x05B4;\n  t['hiriqquarterhebrew'] = 0x05B4;\n  t['hiriqwidehebrew'] = 0x05B4;\n  t['hlinebelow'] = 0x1E96;\n  t['hmonospace'] = 0xFF48;\n  t['hoarmenian'] = 0x0570;\n  t['hohipthai'] = 0x0E2B;\n  t['hohiragana'] = 0x307B;\n  t['hokatakana'] = 0x30DB;\n  t['hokatakanahalfwidth'] = 0xFF8E;\n  t['holam'] = 0x05B9;\n  t['holam19'] = 0x05B9;\n  t['holam26'] = 0x05B9;\n  t['holam32'] = 0x05B9;\n  t['holamhebrew'] = 0x05B9;\n  t['holamnarrowhebrew'] = 0x05B9;\n  t['holamquarterhebrew'] = 0x05B9;\n  t['holamwidehebrew'] = 0x05B9;\n  t['honokhukthai'] = 0x0E2E;\n  t['hookabovecomb'] = 0x0309;\n  t['hookcmb'] = 0x0309;\n  t['hookpalatalizedbelowcmb'] = 0x0321;\n  t['hookretroflexbelowcmb'] = 0x0322;\n  t['hoonsquare'] = 0x3342;\n  t['horicoptic'] = 0x03E9;\n  t['horizontalbar'] = 0x2015;\n  t['horncmb'] = 0x031B;\n  t['hotsprings'] = 0x2668;\n  t['house'] = 0x2302;\n  t['hparen'] = 0x24A3;\n  t['hsuperior'] = 0x02B0;\n  t['hturned'] = 0x0265;\n  t['huhiragana'] = 0x3075;\n  t['huiitosquare'] = 0x3333;\n  t['hukatakana'] = 0x30D5;\n  t['hukatakanahalfwidth'] = 0xFF8C;\n  t['hungarumlaut'] = 0x02DD;\n  t['hungarumlautcmb'] = 0x030B;\n  t['hv'] = 0x0195;\n  t['hyphen'] = 0x002D;\n  t['hypheninferior'] = 0xF6E5;\n  t['hyphenmonospace'] = 0xFF0D;\n  t['hyphensmall'] = 0xFE63;\n  t['hyphensuperior'] = 0xF6E6;\n  t['hyphentwo'] = 0x2010;\n  t['i'] = 0x0069;\n  t['iacute'] = 0x00ED;\n  t['iacyrillic'] = 0x044F;\n  t['ibengali'] = 0x0987;\n  t['ibopomofo'] = 0x3127;\n  t['ibreve'] = 0x012D;\n  t['icaron'] = 0x01D0;\n  t['icircle'] = 0x24D8;\n  t['icircumflex'] = 0x00EE;\n  t['icyrillic'] = 0x0456;\n  t['idblgrave'] = 0x0209;\n  t['ideographearthcircle'] = 0x328F;\n  t['ideographfirecircle'] = 0x328B;\n  t['ideographicallianceparen'] = 0x323F;\n  t['ideographiccallparen'] = 0x323A;\n  t['ideographiccentrecircle'] = 0x32A5;\n  t['ideographicclose'] = 0x3006;\n  t['ideographiccomma'] = 0x3001;\n  t['ideographiccommaleft'] = 0xFF64;\n  t['ideographiccongratulationparen'] = 0x3237;\n  t['ideographiccorrectcircle'] = 0x32A3;\n  t['ideographicearthparen'] = 0x322F;\n  t['ideographicenterpriseparen'] = 0x323D;\n  t['ideographicexcellentcircle'] = 0x329D;\n  t['ideographicfestivalparen'] = 0x3240;\n  t['ideographicfinancialcircle'] = 0x3296;\n  t['ideographicfinancialparen'] = 0x3236;\n  t['ideographicfireparen'] = 0x322B;\n  t['ideographichaveparen'] = 0x3232;\n  t['ideographichighcircle'] = 0x32A4;\n  t['ideographiciterationmark'] = 0x3005;\n  t['ideographiclaborcircle'] = 0x3298;\n  t['ideographiclaborparen'] = 0x3238;\n  t['ideographicleftcircle'] = 0x32A7;\n  t['ideographiclowcircle'] = 0x32A6;\n  t['ideographicmedicinecircle'] = 0x32A9;\n  t['ideographicmetalparen'] = 0x322E;\n  t['ideographicmoonparen'] = 0x322A;\n  t['ideographicnameparen'] = 0x3234;\n  t['ideographicperiod'] = 0x3002;\n  t['ideographicprintcircle'] = 0x329E;\n  t['ideographicreachparen'] = 0x3243;\n  t['ideographicrepresentparen'] = 0x3239;\n  t['ideographicresourceparen'] = 0x323E;\n  t['ideographicrightcircle'] = 0x32A8;\n  t['ideographicsecretcircle'] = 0x3299;\n  t['ideographicselfparen'] = 0x3242;\n  t['ideographicsocietyparen'] = 0x3233;\n  t['ideographicspace'] = 0x3000;\n  t['ideographicspecialparen'] = 0x3235;\n  t['ideographicstockparen'] = 0x3231;\n  t['ideographicstudyparen'] = 0x323B;\n  t['ideographicsunparen'] = 0x3230;\n  t['ideographicsuperviseparen'] = 0x323C;\n  t['ideographicwaterparen'] = 0x322C;\n  t['ideographicwoodparen'] = 0x322D;\n  t['ideographiczero'] = 0x3007;\n  t['ideographmetalcircle'] = 0x328E;\n  t['ideographmooncircle'] = 0x328A;\n  t['ideographnamecircle'] = 0x3294;\n  t['ideographsuncircle'] = 0x3290;\n  t['ideographwatercircle'] = 0x328C;\n  t['ideographwoodcircle'] = 0x328D;\n  t['ideva'] = 0x0907;\n  t['idieresis'] = 0x00EF;\n  t['idieresisacute'] = 0x1E2F;\n  t['idieresiscyrillic'] = 0x04E5;\n  t['idotbelow'] = 0x1ECB;\n  t['iebrevecyrillic'] = 0x04D7;\n  t['iecyrillic'] = 0x0435;\n  t['ieungacirclekorean'] = 0x3275;\n  t['ieungaparenkorean'] = 0x3215;\n  t['ieungcirclekorean'] = 0x3267;\n  t['ieungkorean'] = 0x3147;\n  t['ieungparenkorean'] = 0x3207;\n  t['igrave'] = 0x00EC;\n  t['igujarati'] = 0x0A87;\n  t['igurmukhi'] = 0x0A07;\n  t['ihiragana'] = 0x3044;\n  t['ihookabove'] = 0x1EC9;\n  t['iibengali'] = 0x0988;\n  t['iicyrillic'] = 0x0438;\n  t['iideva'] = 0x0908;\n  t['iigujarati'] = 0x0A88;\n  t['iigurmukhi'] = 0x0A08;\n  t['iimatragurmukhi'] = 0x0A40;\n  t['iinvertedbreve'] = 0x020B;\n  t['iishortcyrillic'] = 0x0439;\n  t['iivowelsignbengali'] = 0x09C0;\n  t['iivowelsigndeva'] = 0x0940;\n  t['iivowelsigngujarati'] = 0x0AC0;\n  t['ij'] = 0x0133;\n  t['ikatakana'] = 0x30A4;\n  t['ikatakanahalfwidth'] = 0xFF72;\n  t['ikorean'] = 0x3163;\n  t['ilde'] = 0x02DC;\n  t['iluyhebrew'] = 0x05AC;\n  t['imacron'] = 0x012B;\n  t['imacroncyrillic'] = 0x04E3;\n  t['imageorapproximatelyequal'] = 0x2253;\n  t['imatragurmukhi'] = 0x0A3F;\n  t['imonospace'] = 0xFF49;\n  t['increment'] = 0x2206;\n  t['infinity'] = 0x221E;\n  t['iniarmenian'] = 0x056B;\n  t['integral'] = 0x222B;\n  t['integralbottom'] = 0x2321;\n  t['integralbt'] = 0x2321;\n  t['integralex'] = 0xF8F5;\n  t['integraltop'] = 0x2320;\n  t['integraltp'] = 0x2320;\n  t['intersection'] = 0x2229;\n  t['intisquare'] = 0x3305;\n  t['invbullet'] = 0x25D8;\n  t['invcircle'] = 0x25D9;\n  t['invsmileface'] = 0x263B;\n  t['iocyrillic'] = 0x0451;\n  t['iogonek'] = 0x012F;\n  t['iota'] = 0x03B9;\n  t['iotadieresis'] = 0x03CA;\n  t['iotadieresistonos'] = 0x0390;\n  t['iotalatin'] = 0x0269;\n  t['iotatonos'] = 0x03AF;\n  t['iparen'] = 0x24A4;\n  t['irigurmukhi'] = 0x0A72;\n  t['ismallhiragana'] = 0x3043;\n  t['ismallkatakana'] = 0x30A3;\n  t['ismallkatakanahalfwidth'] = 0xFF68;\n  t['issharbengali'] = 0x09FA;\n  t['istroke'] = 0x0268;\n  t['isuperior'] = 0xF6ED;\n  t['iterationhiragana'] = 0x309D;\n  t['iterationkatakana'] = 0x30FD;\n  t['itilde'] = 0x0129;\n  t['itildebelow'] = 0x1E2D;\n  t['iubopomofo'] = 0x3129;\n  t['iucyrillic'] = 0x044E;\n  t['ivowelsignbengali'] = 0x09BF;\n  t['ivowelsigndeva'] = 0x093F;\n  t['ivowelsigngujarati'] = 0x0ABF;\n  t['izhitsacyrillic'] = 0x0475;\n  t['izhitsadblgravecyrillic'] = 0x0477;\n  t['j'] = 0x006A;\n  t['jaarmenian'] = 0x0571;\n  t['jabengali'] = 0x099C;\n  t['jadeva'] = 0x091C;\n  t['jagujarati'] = 0x0A9C;\n  t['jagurmukhi'] = 0x0A1C;\n  t['jbopomofo'] = 0x3110;\n  t['jcaron'] = 0x01F0;\n  t['jcircle'] = 0x24D9;\n  t['jcircumflex'] = 0x0135;\n  t['jcrossedtail'] = 0x029D;\n  t['jdotlessstroke'] = 0x025F;\n  t['jecyrillic'] = 0x0458;\n  t['jeemarabic'] = 0x062C;\n  t['jeemfinalarabic'] = 0xFE9E;\n  t['jeeminitialarabic'] = 0xFE9F;\n  t['jeemmedialarabic'] = 0xFEA0;\n  t['jeharabic'] = 0x0698;\n  t['jehfinalarabic'] = 0xFB8B;\n  t['jhabengali'] = 0x099D;\n  t['jhadeva'] = 0x091D;\n  t['jhagujarati'] = 0x0A9D;\n  t['jhagurmukhi'] = 0x0A1D;\n  t['jheharmenian'] = 0x057B;\n  t['jis'] = 0x3004;\n  t['jmonospace'] = 0xFF4A;\n  t['jparen'] = 0x24A5;\n  t['jsuperior'] = 0x02B2;\n  t['k'] = 0x006B;\n  t['kabashkircyrillic'] = 0x04A1;\n  t['kabengali'] = 0x0995;\n  t['kacute'] = 0x1E31;\n  t['kacyrillic'] = 0x043A;\n  t['kadescendercyrillic'] = 0x049B;\n  t['kadeva'] = 0x0915;\n  t['kaf'] = 0x05DB;\n  t['kafarabic'] = 0x0643;\n  t['kafdagesh'] = 0xFB3B;\n  t['kafdageshhebrew'] = 0xFB3B;\n  t['kaffinalarabic'] = 0xFEDA;\n  t['kafhebrew'] = 0x05DB;\n  t['kafinitialarabic'] = 0xFEDB;\n  t['kafmedialarabic'] = 0xFEDC;\n  t['kafrafehebrew'] = 0xFB4D;\n  t['kagujarati'] = 0x0A95;\n  t['kagurmukhi'] = 0x0A15;\n  t['kahiragana'] = 0x304B;\n  t['kahookcyrillic'] = 0x04C4;\n  t['kakatakana'] = 0x30AB;\n  t['kakatakanahalfwidth'] = 0xFF76;\n  t['kappa'] = 0x03BA;\n  t['kappasymbolgreek'] = 0x03F0;\n  t['kapyeounmieumkorean'] = 0x3171;\n  t['kapyeounphieuphkorean'] = 0x3184;\n  t['kapyeounpieupkorean'] = 0x3178;\n  t['kapyeounssangpieupkorean'] = 0x3179;\n  t['karoriisquare'] = 0x330D;\n  t['kashidaautoarabic'] = 0x0640;\n  t['kashidaautonosidebearingarabic'] = 0x0640;\n  t['kasmallkatakana'] = 0x30F5;\n  t['kasquare'] = 0x3384;\n  t['kasraarabic'] = 0x0650;\n  t['kasratanarabic'] = 0x064D;\n  t['kastrokecyrillic'] = 0x049F;\n  t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n  t['kaverticalstrokecyrillic'] = 0x049D;\n  t['kbopomofo'] = 0x310E;\n  t['kcalsquare'] = 0x3389;\n  t['kcaron'] = 0x01E9;\n  t['kcedilla'] = 0x0137;\n  t['kcircle'] = 0x24DA;\n  t['kcommaaccent'] = 0x0137;\n  t['kdotbelow'] = 0x1E33;\n  t['keharmenian'] = 0x0584;\n  t['kehiragana'] = 0x3051;\n  t['kekatakana'] = 0x30B1;\n  t['kekatakanahalfwidth'] = 0xFF79;\n  t['kenarmenian'] = 0x056F;\n  t['kesmallkatakana'] = 0x30F6;\n  t['kgreenlandic'] = 0x0138;\n  t['khabengali'] = 0x0996;\n  t['khacyrillic'] = 0x0445;\n  t['khadeva'] = 0x0916;\n  t['khagujarati'] = 0x0A96;\n  t['khagurmukhi'] = 0x0A16;\n  t['khaharabic'] = 0x062E;\n  t['khahfinalarabic'] = 0xFEA6;\n  t['khahinitialarabic'] = 0xFEA7;\n  t['khahmedialarabic'] = 0xFEA8;\n  t['kheicoptic'] = 0x03E7;\n  t['khhadeva'] = 0x0959;\n  t['khhagurmukhi'] = 0x0A59;\n  t['khieukhacirclekorean'] = 0x3278;\n  t['khieukhaparenkorean'] = 0x3218;\n  t['khieukhcirclekorean'] = 0x326A;\n  t['khieukhkorean'] = 0x314B;\n  t['khieukhparenkorean'] = 0x320A;\n  t['khokhaithai'] = 0x0E02;\n  t['khokhonthai'] = 0x0E05;\n  t['khokhuatthai'] = 0x0E03;\n  t['khokhwaithai'] = 0x0E04;\n  t['khomutthai'] = 0x0E5B;\n  t['khook'] = 0x0199;\n  t['khorakhangthai'] = 0x0E06;\n  t['khzsquare'] = 0x3391;\n  t['kihiragana'] = 0x304D;\n  t['kikatakana'] = 0x30AD;\n  t['kikatakanahalfwidth'] = 0xFF77;\n  t['kiroguramusquare'] = 0x3315;\n  t['kiromeetorusquare'] = 0x3316;\n  t['kirosquare'] = 0x3314;\n  t['kiyeokacirclekorean'] = 0x326E;\n  t['kiyeokaparenkorean'] = 0x320E;\n  t['kiyeokcirclekorean'] = 0x3260;\n  t['kiyeokkorean'] = 0x3131;\n  t['kiyeokparenkorean'] = 0x3200;\n  t['kiyeoksioskorean'] = 0x3133;\n  t['kjecyrillic'] = 0x045C;\n  t['klinebelow'] = 0x1E35;\n  t['klsquare'] = 0x3398;\n  t['kmcubedsquare'] = 0x33A6;\n  t['kmonospace'] = 0xFF4B;\n  t['kmsquaredsquare'] = 0x33A2;\n  t['kohiragana'] = 0x3053;\n  t['kohmsquare'] = 0x33C0;\n  t['kokaithai'] = 0x0E01;\n  t['kokatakana'] = 0x30B3;\n  t['kokatakanahalfwidth'] = 0xFF7A;\n  t['kooposquare'] = 0x331E;\n  t['koppacyrillic'] = 0x0481;\n  t['koreanstandardsymbol'] = 0x327F;\n  t['koroniscmb'] = 0x0343;\n  t['kparen'] = 0x24A6;\n  t['kpasquare'] = 0x33AA;\n  t['ksicyrillic'] = 0x046F;\n  t['ktsquare'] = 0x33CF;\n  t['kturned'] = 0x029E;\n  t['kuhiragana'] = 0x304F;\n  t['kukatakana'] = 0x30AF;\n  t['kukatakanahalfwidth'] = 0xFF78;\n  t['kvsquare'] = 0x33B8;\n  t['kwsquare'] = 0x33BE;\n  t['l'] = 0x006C;\n  t['labengali'] = 0x09B2;\n  t['lacute'] = 0x013A;\n  t['ladeva'] = 0x0932;\n  t['lagujarati'] = 0x0AB2;\n  t['lagurmukhi'] = 0x0A32;\n  t['lakkhangyaothai'] = 0x0E45;\n  t['lamaleffinalarabic'] = 0xFEFC;\n  t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n  t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n  t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n  t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n  t['lamalefisolatedarabic'] = 0xFEFB;\n  t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n  t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n  t['lamarabic'] = 0x0644;\n  t['lambda'] = 0x03BB;\n  t['lambdastroke'] = 0x019B;\n  t['lamed'] = 0x05DC;\n  t['lameddagesh'] = 0xFB3C;\n  t['lameddageshhebrew'] = 0xFB3C;\n  t['lamedhebrew'] = 0x05DC;\n  t['lamfinalarabic'] = 0xFEDE;\n  t['lamhahinitialarabic'] = 0xFCCA;\n  t['laminitialarabic'] = 0xFEDF;\n  t['lamjeeminitialarabic'] = 0xFCC9;\n  t['lamkhahinitialarabic'] = 0xFCCB;\n  t['lamlamhehisolatedarabic'] = 0xFDF2;\n  t['lammedialarabic'] = 0xFEE0;\n  t['lammeemhahinitialarabic'] = 0xFD88;\n  t['lammeeminitialarabic'] = 0xFCCC;\n  t['largecircle'] = 0x25EF;\n  t['lbar'] = 0x019A;\n  t['lbelt'] = 0x026C;\n  t['lbopomofo'] = 0x310C;\n  t['lcaron'] = 0x013E;\n  t['lcedilla'] = 0x013C;\n  t['lcircle'] = 0x24DB;\n  t['lcircumflexbelow'] = 0x1E3D;\n  t['lcommaaccent'] = 0x013C;\n  t['ldot'] = 0x0140;\n  t['ldotaccent'] = 0x0140;\n  t['ldotbelow'] = 0x1E37;\n  t['ldotbelowmacron'] = 0x1E39;\n  t['leftangleabovecmb'] = 0x031A;\n  t['lefttackbelowcmb'] = 0x0318;\n  t['less'] = 0x003C;\n  t['lessequal'] = 0x2264;\n  t['lessequalorgreater'] = 0x22DA;\n  t['lessmonospace'] = 0xFF1C;\n  t['lessorequivalent'] = 0x2272;\n  t['lessorgreater'] = 0x2276;\n  t['lessoverequal'] = 0x2266;\n  t['lesssmall'] = 0xFE64;\n  t['lezh'] = 0x026E;\n  t['lfblock'] = 0x258C;\n  t['lhookretroflex'] = 0x026D;\n  t['lira'] = 0x20A4;\n  t['liwnarmenian'] = 0x056C;\n  t['lj'] = 0x01C9;\n  t['ljecyrillic'] = 0x0459;\n  t['ll'] = 0xF6C0;\n  t['lladeva'] = 0x0933;\n  t['llagujarati'] = 0x0AB3;\n  t['llinebelow'] = 0x1E3B;\n  t['llladeva'] = 0x0934;\n  t['llvocalicbengali'] = 0x09E1;\n  t['llvocalicdeva'] = 0x0961;\n  t['llvocalicvowelsignbengali'] = 0x09E3;\n  t['llvocalicvowelsigndeva'] = 0x0963;\n  t['lmiddletilde'] = 0x026B;\n  t['lmonospace'] = 0xFF4C;\n  t['lmsquare'] = 0x33D0;\n  t['lochulathai'] = 0x0E2C;\n  t['logicaland'] = 0x2227;\n  t['logicalnot'] = 0x00AC;\n  t['logicalnotreversed'] = 0x2310;\n  t['logicalor'] = 0x2228;\n  t['lolingthai'] = 0x0E25;\n  t['longs'] = 0x017F;\n  t['lowlinecenterline'] = 0xFE4E;\n  t['lowlinecmb'] = 0x0332;\n  t['lowlinedashed'] = 0xFE4D;\n  t['lozenge'] = 0x25CA;\n  t['lparen'] = 0x24A7;\n  t['lslash'] = 0x0142;\n  t['lsquare'] = 0x2113;\n  t['lsuperior'] = 0xF6EE;\n  t['ltshade'] = 0x2591;\n  t['luthai'] = 0x0E26;\n  t['lvocalicbengali'] = 0x098C;\n  t['lvocalicdeva'] = 0x090C;\n  t['lvocalicvowelsignbengali'] = 0x09E2;\n  t['lvocalicvowelsigndeva'] = 0x0962;\n  t['lxsquare'] = 0x33D3;\n  t['m'] = 0x006D;\n  t['mabengali'] = 0x09AE;\n  t['macron'] = 0x00AF;\n  t['macronbelowcmb'] = 0x0331;\n  t['macroncmb'] = 0x0304;\n  t['macronlowmod'] = 0x02CD;\n  t['macronmonospace'] = 0xFFE3;\n  t['macute'] = 0x1E3F;\n  t['madeva'] = 0x092E;\n  t['magujarati'] = 0x0AAE;\n  t['magurmukhi'] = 0x0A2E;\n  t['mahapakhhebrew'] = 0x05A4;\n  t['mahapakhlefthebrew'] = 0x05A4;\n  t['mahiragana'] = 0x307E;\n  t['maichattawalowleftthai'] = 0xF895;\n  t['maichattawalowrightthai'] = 0xF894;\n  t['maichattawathai'] = 0x0E4B;\n  t['maichattawaupperleftthai'] = 0xF893;\n  t['maieklowleftthai'] = 0xF88C;\n  t['maieklowrightthai'] = 0xF88B;\n  t['maiekthai'] = 0x0E48;\n  t['maiekupperleftthai'] = 0xF88A;\n  t['maihanakatleftthai'] = 0xF884;\n  t['maihanakatthai'] = 0x0E31;\n  t['maitaikhuleftthai'] = 0xF889;\n  t['maitaikhuthai'] = 0x0E47;\n  t['maitholowleftthai'] = 0xF88F;\n  t['maitholowrightthai'] = 0xF88E;\n  t['maithothai'] = 0x0E49;\n  t['maithoupperleftthai'] = 0xF88D;\n  t['maitrilowleftthai'] = 0xF892;\n  t['maitrilowrightthai'] = 0xF891;\n  t['maitrithai'] = 0x0E4A;\n  t['maitriupperleftthai'] = 0xF890;\n  t['maiyamokthai'] = 0x0E46;\n  t['makatakana'] = 0x30DE;\n  t['makatakanahalfwidth'] = 0xFF8F;\n  t['male'] = 0x2642;\n  t['mansyonsquare'] = 0x3347;\n  t['maqafhebrew'] = 0x05BE;\n  t['mars'] = 0x2642;\n  t['masoracirclehebrew'] = 0x05AF;\n  t['masquare'] = 0x3383;\n  t['mbopomofo'] = 0x3107;\n  t['mbsquare'] = 0x33D4;\n  t['mcircle'] = 0x24DC;\n  t['mcubedsquare'] = 0x33A5;\n  t['mdotaccent'] = 0x1E41;\n  t['mdotbelow'] = 0x1E43;\n  t['meemarabic'] = 0x0645;\n  t['meemfinalarabic'] = 0xFEE2;\n  t['meeminitialarabic'] = 0xFEE3;\n  t['meemmedialarabic'] = 0xFEE4;\n  t['meemmeeminitialarabic'] = 0xFCD1;\n  t['meemmeemisolatedarabic'] = 0xFC48;\n  t['meetorusquare'] = 0x334D;\n  t['mehiragana'] = 0x3081;\n  t['meizierasquare'] = 0x337E;\n  t['mekatakana'] = 0x30E1;\n  t['mekatakanahalfwidth'] = 0xFF92;\n  t['mem'] = 0x05DE;\n  t['memdagesh'] = 0xFB3E;\n  t['memdageshhebrew'] = 0xFB3E;\n  t['memhebrew'] = 0x05DE;\n  t['menarmenian'] = 0x0574;\n  t['merkhahebrew'] = 0x05A5;\n  t['merkhakefulahebrew'] = 0x05A6;\n  t['merkhakefulalefthebrew'] = 0x05A6;\n  t['merkhalefthebrew'] = 0x05A5;\n  t['mhook'] = 0x0271;\n  t['mhzsquare'] = 0x3392;\n  t['middledotkatakanahalfwidth'] = 0xFF65;\n  t['middot'] = 0x00B7;\n  t['mieumacirclekorean'] = 0x3272;\n  t['mieumaparenkorean'] = 0x3212;\n  t['mieumcirclekorean'] = 0x3264;\n  t['mieumkorean'] = 0x3141;\n  t['mieumpansioskorean'] = 0x3170;\n  t['mieumparenkorean'] = 0x3204;\n  t['mieumpieupkorean'] = 0x316E;\n  t['mieumsioskorean'] = 0x316F;\n  t['mihiragana'] = 0x307F;\n  t['mikatakana'] = 0x30DF;\n  t['mikatakanahalfwidth'] = 0xFF90;\n  t['minus'] = 0x2212;\n  t['minusbelowcmb'] = 0x0320;\n  t['minuscircle'] = 0x2296;\n  t['minusmod'] = 0x02D7;\n  t['minusplus'] = 0x2213;\n  t['minute'] = 0x2032;\n  t['miribaarusquare'] = 0x334A;\n  t['mirisquare'] = 0x3349;\n  t['mlonglegturned'] = 0x0270;\n  t['mlsquare'] = 0x3396;\n  t['mmcubedsquare'] = 0x33A3;\n  t['mmonospace'] = 0xFF4D;\n  t['mmsquaredsquare'] = 0x339F;\n  t['mohiragana'] = 0x3082;\n  t['mohmsquare'] = 0x33C1;\n  t['mokatakana'] = 0x30E2;\n  t['mokatakanahalfwidth'] = 0xFF93;\n  t['molsquare'] = 0x33D6;\n  t['momathai'] = 0x0E21;\n  t['moverssquare'] = 0x33A7;\n  t['moverssquaredsquare'] = 0x33A8;\n  t['mparen'] = 0x24A8;\n  t['mpasquare'] = 0x33AB;\n  t['mssquare'] = 0x33B3;\n  t['msuperior'] = 0xF6EF;\n  t['mturned'] = 0x026F;\n  t['mu'] = 0x00B5;\n  t['mu1'] = 0x00B5;\n  t['muasquare'] = 0x3382;\n  t['muchgreater'] = 0x226B;\n  t['muchless'] = 0x226A;\n  t['mufsquare'] = 0x338C;\n  t['mugreek'] = 0x03BC;\n  t['mugsquare'] = 0x338D;\n  t['muhiragana'] = 0x3080;\n  t['mukatakana'] = 0x30E0;\n  t['mukatakanahalfwidth'] = 0xFF91;\n  t['mulsquare'] = 0x3395;\n  t['multiply'] = 0x00D7;\n  t['mumsquare'] = 0x339B;\n  t['munahhebrew'] = 0x05A3;\n  t['munahlefthebrew'] = 0x05A3;\n  t['musicalnote'] = 0x266A;\n  t['musicalnotedbl'] = 0x266B;\n  t['musicflatsign'] = 0x266D;\n  t['musicsharpsign'] = 0x266F;\n  t['mussquare'] = 0x33B2;\n  t['muvsquare'] = 0x33B6;\n  t['muwsquare'] = 0x33BC;\n  t['mvmegasquare'] = 0x33B9;\n  t['mvsquare'] = 0x33B7;\n  t['mwmegasquare'] = 0x33BF;\n  t['mwsquare'] = 0x33BD;\n  t['n'] = 0x006E;\n  t['nabengali'] = 0x09A8;\n  t['nabla'] = 0x2207;\n  t['nacute'] = 0x0144;\n  t['nadeva'] = 0x0928;\n  t['nagujarati'] = 0x0AA8;\n  t['nagurmukhi'] = 0x0A28;\n  t['nahiragana'] = 0x306A;\n  t['nakatakana'] = 0x30CA;\n  t['nakatakanahalfwidth'] = 0xFF85;\n  t['napostrophe'] = 0x0149;\n  t['nasquare'] = 0x3381;\n  t['nbopomofo'] = 0x310B;\n  t['nbspace'] = 0x00A0;\n  t['ncaron'] = 0x0148;\n  t['ncedilla'] = 0x0146;\n  t['ncircle'] = 0x24DD;\n  t['ncircumflexbelow'] = 0x1E4B;\n  t['ncommaaccent'] = 0x0146;\n  t['ndotaccent'] = 0x1E45;\n  t['ndotbelow'] = 0x1E47;\n  t['nehiragana'] = 0x306D;\n  t['nekatakana'] = 0x30CD;\n  t['nekatakanahalfwidth'] = 0xFF88;\n  t['newsheqelsign'] = 0x20AA;\n  t['nfsquare'] = 0x338B;\n  t['ngabengali'] = 0x0999;\n  t['ngadeva'] = 0x0919;\n  t['ngagujarati'] = 0x0A99;\n  t['ngagurmukhi'] = 0x0A19;\n  t['ngonguthai'] = 0x0E07;\n  t['nhiragana'] = 0x3093;\n  t['nhookleft'] = 0x0272;\n  t['nhookretroflex'] = 0x0273;\n  t['nieunacirclekorean'] = 0x326F;\n  t['nieunaparenkorean'] = 0x320F;\n  t['nieuncieuckorean'] = 0x3135;\n  t['nieuncirclekorean'] = 0x3261;\n  t['nieunhieuhkorean'] = 0x3136;\n  t['nieunkorean'] = 0x3134;\n  t['nieunpansioskorean'] = 0x3168;\n  t['nieunparenkorean'] = 0x3201;\n  t['nieunsioskorean'] = 0x3167;\n  t['nieuntikeutkorean'] = 0x3166;\n  t['nihiragana'] = 0x306B;\n  t['nikatakana'] = 0x30CB;\n  t['nikatakanahalfwidth'] = 0xFF86;\n  t['nikhahitleftthai'] = 0xF899;\n  t['nikhahitthai'] = 0x0E4D;\n  t['nine'] = 0x0039;\n  t['ninearabic'] = 0x0669;\n  t['ninebengali'] = 0x09EF;\n  t['ninecircle'] = 0x2468;\n  t['ninecircleinversesansserif'] = 0x2792;\n  t['ninedeva'] = 0x096F;\n  t['ninegujarati'] = 0x0AEF;\n  t['ninegurmukhi'] = 0x0A6F;\n  t['ninehackarabic'] = 0x0669;\n  t['ninehangzhou'] = 0x3029;\n  t['nineideographicparen'] = 0x3228;\n  t['nineinferior'] = 0x2089;\n  t['ninemonospace'] = 0xFF19;\n  t['nineoldstyle'] = 0xF739;\n  t['nineparen'] = 0x247C;\n  t['nineperiod'] = 0x2490;\n  t['ninepersian'] = 0x06F9;\n  t['nineroman'] = 0x2178;\n  t['ninesuperior'] = 0x2079;\n  t['nineteencircle'] = 0x2472;\n  t['nineteenparen'] = 0x2486;\n  t['nineteenperiod'] = 0x249A;\n  t['ninethai'] = 0x0E59;\n  t['nj'] = 0x01CC;\n  t['njecyrillic'] = 0x045A;\n  t['nkatakana'] = 0x30F3;\n  t['nkatakanahalfwidth'] = 0xFF9D;\n  t['nlegrightlong'] = 0x019E;\n  t['nlinebelow'] = 0x1E49;\n  t['nmonospace'] = 0xFF4E;\n  t['nmsquare'] = 0x339A;\n  t['nnabengali'] = 0x09A3;\n  t['nnadeva'] = 0x0923;\n  t['nnagujarati'] = 0x0AA3;\n  t['nnagurmukhi'] = 0x0A23;\n  t['nnnadeva'] = 0x0929;\n  t['nohiragana'] = 0x306E;\n  t['nokatakana'] = 0x30CE;\n  t['nokatakanahalfwidth'] = 0xFF89;\n  t['nonbreakingspace'] = 0x00A0;\n  t['nonenthai'] = 0x0E13;\n  t['nonuthai'] = 0x0E19;\n  t['noonarabic'] = 0x0646;\n  t['noonfinalarabic'] = 0xFEE6;\n  t['noonghunnaarabic'] = 0x06BA;\n  t['noonghunnafinalarabic'] = 0xFB9F;\n  t['nooninitialarabic'] = 0xFEE7;\n  t['noonjeeminitialarabic'] = 0xFCD2;\n  t['noonjeemisolatedarabic'] = 0xFC4B;\n  t['noonmedialarabic'] = 0xFEE8;\n  t['noonmeeminitialarabic'] = 0xFCD5;\n  t['noonmeemisolatedarabic'] = 0xFC4E;\n  t['noonnoonfinalarabic'] = 0xFC8D;\n  t['notcontains'] = 0x220C;\n  t['notelement'] = 0x2209;\n  t['notelementof'] = 0x2209;\n  t['notequal'] = 0x2260;\n  t['notgreater'] = 0x226F;\n  t['notgreaternorequal'] = 0x2271;\n  t['notgreaternorless'] = 0x2279;\n  t['notidentical'] = 0x2262;\n  t['notless'] = 0x226E;\n  t['notlessnorequal'] = 0x2270;\n  t['notparallel'] = 0x2226;\n  t['notprecedes'] = 0x2280;\n  t['notsubset'] = 0x2284;\n  t['notsucceeds'] = 0x2281;\n  t['notsuperset'] = 0x2285;\n  t['nowarmenian'] = 0x0576;\n  t['nparen'] = 0x24A9;\n  t['nssquare'] = 0x33B1;\n  t['nsuperior'] = 0x207F;\n  t['ntilde'] = 0x00F1;\n  t['nu'] = 0x03BD;\n  t['nuhiragana'] = 0x306C;\n  t['nukatakana'] = 0x30CC;\n  t['nukatakanahalfwidth'] = 0xFF87;\n  t['nuktabengali'] = 0x09BC;\n  t['nuktadeva'] = 0x093C;\n  t['nuktagujarati'] = 0x0ABC;\n  t['nuktagurmukhi'] = 0x0A3C;\n  t['numbersign'] = 0x0023;\n  t['numbersignmonospace'] = 0xFF03;\n  t['numbersignsmall'] = 0xFE5F;\n  t['numeralsigngreek'] = 0x0374;\n  t['numeralsignlowergreek'] = 0x0375;\n  t['numero'] = 0x2116;\n  t['nun'] = 0x05E0;\n  t['nundagesh'] = 0xFB40;\n  t['nundageshhebrew'] = 0xFB40;\n  t['nunhebrew'] = 0x05E0;\n  t['nvsquare'] = 0x33B5;\n  t['nwsquare'] = 0x33BB;\n  t['nyabengali'] = 0x099E;\n  t['nyadeva'] = 0x091E;\n  t['nyagujarati'] = 0x0A9E;\n  t['nyagurmukhi'] = 0x0A1E;\n  t['o'] = 0x006F;\n  t['oacute'] = 0x00F3;\n  t['oangthai'] = 0x0E2D;\n  t['obarred'] = 0x0275;\n  t['obarredcyrillic'] = 0x04E9;\n  t['obarreddieresiscyrillic'] = 0x04EB;\n  t['obengali'] = 0x0993;\n  t['obopomofo'] = 0x311B;\n  t['obreve'] = 0x014F;\n  t['ocandradeva'] = 0x0911;\n  t['ocandragujarati'] = 0x0A91;\n  t['ocandravowelsigndeva'] = 0x0949;\n  t['ocandravowelsigngujarati'] = 0x0AC9;\n  t['ocaron'] = 0x01D2;\n  t['ocircle'] = 0x24DE;\n  t['ocircumflex'] = 0x00F4;\n  t['ocircumflexacute'] = 0x1ED1;\n  t['ocircumflexdotbelow'] = 0x1ED9;\n  t['ocircumflexgrave'] = 0x1ED3;\n  t['ocircumflexhookabove'] = 0x1ED5;\n  t['ocircumflextilde'] = 0x1ED7;\n  t['ocyrillic'] = 0x043E;\n  t['odblacute'] = 0x0151;\n  t['odblgrave'] = 0x020D;\n  t['odeva'] = 0x0913;\n  t['odieresis'] = 0x00F6;\n  t['odieresiscyrillic'] = 0x04E7;\n  t['odotbelow'] = 0x1ECD;\n  t['oe'] = 0x0153;\n  t['oekorean'] = 0x315A;\n  t['ogonek'] = 0x02DB;\n  t['ogonekcmb'] = 0x0328;\n  t['ograve'] = 0x00F2;\n  t['ogujarati'] = 0x0A93;\n  t['oharmenian'] = 0x0585;\n  t['ohiragana'] = 0x304A;\n  t['ohookabove'] = 0x1ECF;\n  t['ohorn'] = 0x01A1;\n  t['ohornacute'] = 0x1EDB;\n  t['ohorndotbelow'] = 0x1EE3;\n  t['ohorngrave'] = 0x1EDD;\n  t['ohornhookabove'] = 0x1EDF;\n  t['ohorntilde'] = 0x1EE1;\n  t['ohungarumlaut'] = 0x0151;\n  t['oi'] = 0x01A3;\n  t['oinvertedbreve'] = 0x020F;\n  t['okatakana'] = 0x30AA;\n  t['okatakanahalfwidth'] = 0xFF75;\n  t['okorean'] = 0x3157;\n  t['olehebrew'] = 0x05AB;\n  t['omacron'] = 0x014D;\n  t['omacronacute'] = 0x1E53;\n  t['omacrongrave'] = 0x1E51;\n  t['omdeva'] = 0x0950;\n  t['omega'] = 0x03C9;\n  t['omega1'] = 0x03D6;\n  t['omegacyrillic'] = 0x0461;\n  t['omegalatinclosed'] = 0x0277;\n  t['omegaroundcyrillic'] = 0x047B;\n  t['omegatitlocyrillic'] = 0x047D;\n  t['omegatonos'] = 0x03CE;\n  t['omgujarati'] = 0x0AD0;\n  t['omicron'] = 0x03BF;\n  t['omicrontonos'] = 0x03CC;\n  t['omonospace'] = 0xFF4F;\n  t['one'] = 0x0031;\n  t['onearabic'] = 0x0661;\n  t['onebengali'] = 0x09E7;\n  t['onecircle'] = 0x2460;\n  t['onecircleinversesansserif'] = 0x278A;\n  t['onedeva'] = 0x0967;\n  t['onedotenleader'] = 0x2024;\n  t['oneeighth'] = 0x215B;\n  t['onefitted'] = 0xF6DC;\n  t['onegujarati'] = 0x0AE7;\n  t['onegurmukhi'] = 0x0A67;\n  t['onehackarabic'] = 0x0661;\n  t['onehalf'] = 0x00BD;\n  t['onehangzhou'] = 0x3021;\n  t['oneideographicparen'] = 0x3220;\n  t['oneinferior'] = 0x2081;\n  t['onemonospace'] = 0xFF11;\n  t['onenumeratorbengali'] = 0x09F4;\n  t['oneoldstyle'] = 0xF731;\n  t['oneparen'] = 0x2474;\n  t['oneperiod'] = 0x2488;\n  t['onepersian'] = 0x06F1;\n  t['onequarter'] = 0x00BC;\n  t['oneroman'] = 0x2170;\n  t['onesuperior'] = 0x00B9;\n  t['onethai'] = 0x0E51;\n  t['onethird'] = 0x2153;\n  t['oogonek'] = 0x01EB;\n  t['oogonekmacron'] = 0x01ED;\n  t['oogurmukhi'] = 0x0A13;\n  t['oomatragurmukhi'] = 0x0A4B;\n  t['oopen'] = 0x0254;\n  t['oparen'] = 0x24AA;\n  t['openbullet'] = 0x25E6;\n  t['option'] = 0x2325;\n  t['ordfeminine'] = 0x00AA;\n  t['ordmasculine'] = 0x00BA;\n  t['orthogonal'] = 0x221F;\n  t['oshortdeva'] = 0x0912;\n  t['oshortvowelsigndeva'] = 0x094A;\n  t['oslash'] = 0x00F8;\n  t['oslashacute'] = 0x01FF;\n  t['osmallhiragana'] = 0x3049;\n  t['osmallkatakana'] = 0x30A9;\n  t['osmallkatakanahalfwidth'] = 0xFF6B;\n  t['ostrokeacute'] = 0x01FF;\n  t['osuperior'] = 0xF6F0;\n  t['otcyrillic'] = 0x047F;\n  t['otilde'] = 0x00F5;\n  t['otildeacute'] = 0x1E4D;\n  t['otildedieresis'] = 0x1E4F;\n  t['oubopomofo'] = 0x3121;\n  t['overline'] = 0x203E;\n  t['overlinecenterline'] = 0xFE4A;\n  t['overlinecmb'] = 0x0305;\n  t['overlinedashed'] = 0xFE49;\n  t['overlinedblwavy'] = 0xFE4C;\n  t['overlinewavy'] = 0xFE4B;\n  t['overscore'] = 0x00AF;\n  t['ovowelsignbengali'] = 0x09CB;\n  t['ovowelsigndeva'] = 0x094B;\n  t['ovowelsigngujarati'] = 0x0ACB;\n  t['p'] = 0x0070;\n  t['paampssquare'] = 0x3380;\n  t['paasentosquare'] = 0x332B;\n  t['pabengali'] = 0x09AA;\n  t['pacute'] = 0x1E55;\n  t['padeva'] = 0x092A;\n  t['pagedown'] = 0x21DF;\n  t['pageup'] = 0x21DE;\n  t['pagujarati'] = 0x0AAA;\n  t['pagurmukhi'] = 0x0A2A;\n  t['pahiragana'] = 0x3071;\n  t['paiyannoithai'] = 0x0E2F;\n  t['pakatakana'] = 0x30D1;\n  t['palatalizationcyrilliccmb'] = 0x0484;\n  t['palochkacyrillic'] = 0x04C0;\n  t['pansioskorean'] = 0x317F;\n  t['paragraph'] = 0x00B6;\n  t['parallel'] = 0x2225;\n  t['parenleft'] = 0x0028;\n  t['parenleftaltonearabic'] = 0xFD3E;\n  t['parenleftbt'] = 0xF8ED;\n  t['parenleftex'] = 0xF8EC;\n  t['parenleftinferior'] = 0x208D;\n  t['parenleftmonospace'] = 0xFF08;\n  t['parenleftsmall'] = 0xFE59;\n  t['parenleftsuperior'] = 0x207D;\n  t['parenlefttp'] = 0xF8EB;\n  t['parenleftvertical'] = 0xFE35;\n  t['parenright'] = 0x0029;\n  t['parenrightaltonearabic'] = 0xFD3F;\n  t['parenrightbt'] = 0xF8F8;\n  t['parenrightex'] = 0xF8F7;\n  t['parenrightinferior'] = 0x208E;\n  t['parenrightmonospace'] = 0xFF09;\n  t['parenrightsmall'] = 0xFE5A;\n  t['parenrightsuperior'] = 0x207E;\n  t['parenrighttp'] = 0xF8F6;\n  t['parenrightvertical'] = 0xFE36;\n  t['partialdiff'] = 0x2202;\n  t['paseqhebrew'] = 0x05C0;\n  t['pashtahebrew'] = 0x0599;\n  t['pasquare'] = 0x33A9;\n  t['patah'] = 0x05B7;\n  t['patah11'] = 0x05B7;\n  t['patah1d'] = 0x05B7;\n  t['patah2a'] = 0x05B7;\n  t['patahhebrew'] = 0x05B7;\n  t['patahnarrowhebrew'] = 0x05B7;\n  t['patahquarterhebrew'] = 0x05B7;\n  t['patahwidehebrew'] = 0x05B7;\n  t['pazerhebrew'] = 0x05A1;\n  t['pbopomofo'] = 0x3106;\n  t['pcircle'] = 0x24DF;\n  t['pdotaccent'] = 0x1E57;\n  t['pe'] = 0x05E4;\n  t['pecyrillic'] = 0x043F;\n  t['pedagesh'] = 0xFB44;\n  t['pedageshhebrew'] = 0xFB44;\n  t['peezisquare'] = 0x333B;\n  t['pefinaldageshhebrew'] = 0xFB43;\n  t['peharabic'] = 0x067E;\n  t['peharmenian'] = 0x057A;\n  t['pehebrew'] = 0x05E4;\n  t['pehfinalarabic'] = 0xFB57;\n  t['pehinitialarabic'] = 0xFB58;\n  t['pehiragana'] = 0x307A;\n  t['pehmedialarabic'] = 0xFB59;\n  t['pekatakana'] = 0x30DA;\n  t['pemiddlehookcyrillic'] = 0x04A7;\n  t['perafehebrew'] = 0xFB4E;\n  t['percent'] = 0x0025;\n  t['percentarabic'] = 0x066A;\n  t['percentmonospace'] = 0xFF05;\n  t['percentsmall'] = 0xFE6A;\n  t['period'] = 0x002E;\n  t['periodarmenian'] = 0x0589;\n  t['periodcentered'] = 0x00B7;\n  t['periodhalfwidth'] = 0xFF61;\n  t['periodinferior'] = 0xF6E7;\n  t['periodmonospace'] = 0xFF0E;\n  t['periodsmall'] = 0xFE52;\n  t['periodsuperior'] = 0xF6E8;\n  t['perispomenigreekcmb'] = 0x0342;\n  t['perpendicular'] = 0x22A5;\n  t['perthousand'] = 0x2030;\n  t['peseta'] = 0x20A7;\n  t['pfsquare'] = 0x338A;\n  t['phabengali'] = 0x09AB;\n  t['phadeva'] = 0x092B;\n  t['phagujarati'] = 0x0AAB;\n  t['phagurmukhi'] = 0x0A2B;\n  t['phi'] = 0x03C6;\n  t['phi1'] = 0x03D5;\n  t['phieuphacirclekorean'] = 0x327A;\n  t['phieuphaparenkorean'] = 0x321A;\n  t['phieuphcirclekorean'] = 0x326C;\n  t['phieuphkorean'] = 0x314D;\n  t['phieuphparenkorean'] = 0x320C;\n  t['philatin'] = 0x0278;\n  t['phinthuthai'] = 0x0E3A;\n  t['phisymbolgreek'] = 0x03D5;\n  t['phook'] = 0x01A5;\n  t['phophanthai'] = 0x0E1E;\n  t['phophungthai'] = 0x0E1C;\n  t['phosamphaothai'] = 0x0E20;\n  t['pi'] = 0x03C0;\n  t['pieupacirclekorean'] = 0x3273;\n  t['pieupaparenkorean'] = 0x3213;\n  t['pieupcieuckorean'] = 0x3176;\n  t['pieupcirclekorean'] = 0x3265;\n  t['pieupkiyeokkorean'] = 0x3172;\n  t['pieupkorean'] = 0x3142;\n  t['pieupparenkorean'] = 0x3205;\n  t['pieupsioskiyeokkorean'] = 0x3174;\n  t['pieupsioskorean'] = 0x3144;\n  t['pieupsiostikeutkorean'] = 0x3175;\n  t['pieupthieuthkorean'] = 0x3177;\n  t['pieuptikeutkorean'] = 0x3173;\n  t['pihiragana'] = 0x3074;\n  t['pikatakana'] = 0x30D4;\n  t['pisymbolgreek'] = 0x03D6;\n  t['piwrarmenian'] = 0x0583;\n  t['plus'] = 0x002B;\n  t['plusbelowcmb'] = 0x031F;\n  t['pluscircle'] = 0x2295;\n  t['plusminus'] = 0x00B1;\n  t['plusmod'] = 0x02D6;\n  t['plusmonospace'] = 0xFF0B;\n  t['plussmall'] = 0xFE62;\n  t['plussuperior'] = 0x207A;\n  t['pmonospace'] = 0xFF50;\n  t['pmsquare'] = 0x33D8;\n  t['pohiragana'] = 0x307D;\n  t['pointingindexdownwhite'] = 0x261F;\n  t['pointingindexleftwhite'] = 0x261C;\n  t['pointingindexrightwhite'] = 0x261E;\n  t['pointingindexupwhite'] = 0x261D;\n  t['pokatakana'] = 0x30DD;\n  t['poplathai'] = 0x0E1B;\n  t['postalmark'] = 0x3012;\n  t['postalmarkface'] = 0x3020;\n  t['pparen'] = 0x24AB;\n  t['precedes'] = 0x227A;\n  t['prescription'] = 0x211E;\n  t['primemod'] = 0x02B9;\n  t['primereversed'] = 0x2035;\n  t['product'] = 0x220F;\n  t['projective'] = 0x2305;\n  t['prolongedkana'] = 0x30FC;\n  t['propellor'] = 0x2318;\n  t['propersubset'] = 0x2282;\n  t['propersuperset'] = 0x2283;\n  t['proportion'] = 0x2237;\n  t['proportional'] = 0x221D;\n  t['psi'] = 0x03C8;\n  t['psicyrillic'] = 0x0471;\n  t['psilipneumatacyrilliccmb'] = 0x0486;\n  t['pssquare'] = 0x33B0;\n  t['puhiragana'] = 0x3077;\n  t['pukatakana'] = 0x30D7;\n  t['pvsquare'] = 0x33B4;\n  t['pwsquare'] = 0x33BA;\n  t['q'] = 0x0071;\n  t['qadeva'] = 0x0958;\n  t['qadmahebrew'] = 0x05A8;\n  t['qafarabic'] = 0x0642;\n  t['qaffinalarabic'] = 0xFED6;\n  t['qafinitialarabic'] = 0xFED7;\n  t['qafmedialarabic'] = 0xFED8;\n  t['qamats'] = 0x05B8;\n  t['qamats10'] = 0x05B8;\n  t['qamats1a'] = 0x05B8;\n  t['qamats1c'] = 0x05B8;\n  t['qamats27'] = 0x05B8;\n  t['qamats29'] = 0x05B8;\n  t['qamats33'] = 0x05B8;\n  t['qamatsde'] = 0x05B8;\n  t['qamatshebrew'] = 0x05B8;\n  t['qamatsnarrowhebrew'] = 0x05B8;\n  t['qamatsqatanhebrew'] = 0x05B8;\n  t['qamatsqatannarrowhebrew'] = 0x05B8;\n  t['qamatsqatanquarterhebrew'] = 0x05B8;\n  t['qamatsqatanwidehebrew'] = 0x05B8;\n  t['qamatsquarterhebrew'] = 0x05B8;\n  t['qamatswidehebrew'] = 0x05B8;\n  t['qarneyparahebrew'] = 0x059F;\n  t['qbopomofo'] = 0x3111;\n  t['qcircle'] = 0x24E0;\n  t['qhook'] = 0x02A0;\n  t['qmonospace'] = 0xFF51;\n  t['qof'] = 0x05E7;\n  t['qofdagesh'] = 0xFB47;\n  t['qofdageshhebrew'] = 0xFB47;\n  t['qofhebrew'] = 0x05E7;\n  t['qparen'] = 0x24AC;\n  t['quarternote'] = 0x2669;\n  t['qubuts'] = 0x05BB;\n  t['qubuts18'] = 0x05BB;\n  t['qubuts25'] = 0x05BB;\n  t['qubuts31'] = 0x05BB;\n  t['qubutshebrew'] = 0x05BB;\n  t['qubutsnarrowhebrew'] = 0x05BB;\n  t['qubutsquarterhebrew'] = 0x05BB;\n  t['qubutswidehebrew'] = 0x05BB;\n  t['question'] = 0x003F;\n  t['questionarabic'] = 0x061F;\n  t['questionarmenian'] = 0x055E;\n  t['questiondown'] = 0x00BF;\n  t['questiondownsmall'] = 0xF7BF;\n  t['questiongreek'] = 0x037E;\n  t['questionmonospace'] = 0xFF1F;\n  t['questionsmall'] = 0xF73F;\n  t['quotedbl'] = 0x0022;\n  t['quotedblbase'] = 0x201E;\n  t['quotedblleft'] = 0x201C;\n  t['quotedblmonospace'] = 0xFF02;\n  t['quotedblprime'] = 0x301E;\n  t['quotedblprimereversed'] = 0x301D;\n  t['quotedblright'] = 0x201D;\n  t['quoteleft'] = 0x2018;\n  t['quoteleftreversed'] = 0x201B;\n  t['quotereversed'] = 0x201B;\n  t['quoteright'] = 0x2019;\n  t['quoterightn'] = 0x0149;\n  t['quotesinglbase'] = 0x201A;\n  t['quotesingle'] = 0x0027;\n  t['quotesinglemonospace'] = 0xFF07;\n  t['r'] = 0x0072;\n  t['raarmenian'] = 0x057C;\n  t['rabengali'] = 0x09B0;\n  t['racute'] = 0x0155;\n  t['radeva'] = 0x0930;\n  t['radical'] = 0x221A;\n  t['radicalex'] = 0xF8E5;\n  t['radoverssquare'] = 0x33AE;\n  t['radoverssquaredsquare'] = 0x33AF;\n  t['radsquare'] = 0x33AD;\n  t['rafe'] = 0x05BF;\n  t['rafehebrew'] = 0x05BF;\n  t['ragujarati'] = 0x0AB0;\n  t['ragurmukhi'] = 0x0A30;\n  t['rahiragana'] = 0x3089;\n  t['rakatakana'] = 0x30E9;\n  t['rakatakanahalfwidth'] = 0xFF97;\n  t['ralowerdiagonalbengali'] = 0x09F1;\n  t['ramiddlediagonalbengali'] = 0x09F0;\n  t['ramshorn'] = 0x0264;\n  t['ratio'] = 0x2236;\n  t['rbopomofo'] = 0x3116;\n  t['rcaron'] = 0x0159;\n  t['rcedilla'] = 0x0157;\n  t['rcircle'] = 0x24E1;\n  t['rcommaaccent'] = 0x0157;\n  t['rdblgrave'] = 0x0211;\n  t['rdotaccent'] = 0x1E59;\n  t['rdotbelow'] = 0x1E5B;\n  t['rdotbelowmacron'] = 0x1E5D;\n  t['referencemark'] = 0x203B;\n  t['reflexsubset'] = 0x2286;\n  t['reflexsuperset'] = 0x2287;\n  t['registered'] = 0x00AE;\n  t['registersans'] = 0xF8E8;\n  t['registerserif'] = 0xF6DA;\n  t['reharabic'] = 0x0631;\n  t['reharmenian'] = 0x0580;\n  t['rehfinalarabic'] = 0xFEAE;\n  t['rehiragana'] = 0x308C;\n  t['rekatakana'] = 0x30EC;\n  t['rekatakanahalfwidth'] = 0xFF9A;\n  t['resh'] = 0x05E8;\n  t['reshdageshhebrew'] = 0xFB48;\n  t['reshhebrew'] = 0x05E8;\n  t['reversedtilde'] = 0x223D;\n  t['reviahebrew'] = 0x0597;\n  t['reviamugrashhebrew'] = 0x0597;\n  t['revlogicalnot'] = 0x2310;\n  t['rfishhook'] = 0x027E;\n  t['rfishhookreversed'] = 0x027F;\n  t['rhabengali'] = 0x09DD;\n  t['rhadeva'] = 0x095D;\n  t['rho'] = 0x03C1;\n  t['rhook'] = 0x027D;\n  t['rhookturned'] = 0x027B;\n  t['rhookturnedsuperior'] = 0x02B5;\n  t['rhosymbolgreek'] = 0x03F1;\n  t['rhotichookmod'] = 0x02DE;\n  t['rieulacirclekorean'] = 0x3271;\n  t['rieulaparenkorean'] = 0x3211;\n  t['rieulcirclekorean'] = 0x3263;\n  t['rieulhieuhkorean'] = 0x3140;\n  t['rieulkiyeokkorean'] = 0x313A;\n  t['rieulkiyeoksioskorean'] = 0x3169;\n  t['rieulkorean'] = 0x3139;\n  t['rieulmieumkorean'] = 0x313B;\n  t['rieulpansioskorean'] = 0x316C;\n  t['rieulparenkorean'] = 0x3203;\n  t['rieulphieuphkorean'] = 0x313F;\n  t['rieulpieupkorean'] = 0x313C;\n  t['rieulpieupsioskorean'] = 0x316B;\n  t['rieulsioskorean'] = 0x313D;\n  t['rieulthieuthkorean'] = 0x313E;\n  t['rieultikeutkorean'] = 0x316A;\n  t['rieulyeorinhieuhkorean'] = 0x316D;\n  t['rightangle'] = 0x221F;\n  t['righttackbelowcmb'] = 0x0319;\n  t['righttriangle'] = 0x22BF;\n  t['rihiragana'] = 0x308A;\n  t['rikatakana'] = 0x30EA;\n  t['rikatakanahalfwidth'] = 0xFF98;\n  t['ring'] = 0x02DA;\n  t['ringbelowcmb'] = 0x0325;\n  t['ringcmb'] = 0x030A;\n  t['ringhalfleft'] = 0x02BF;\n  t['ringhalfleftarmenian'] = 0x0559;\n  t['ringhalfleftbelowcmb'] = 0x031C;\n  t['ringhalfleftcentered'] = 0x02D3;\n  t['ringhalfright'] = 0x02BE;\n  t['ringhalfrightbelowcmb'] = 0x0339;\n  t['ringhalfrightcentered'] = 0x02D2;\n  t['rinvertedbreve'] = 0x0213;\n  t['rittorusquare'] = 0x3351;\n  t['rlinebelow'] = 0x1E5F;\n  t['rlongleg'] = 0x027C;\n  t['rlonglegturned'] = 0x027A;\n  t['rmonospace'] = 0xFF52;\n  t['rohiragana'] = 0x308D;\n  t['rokatakana'] = 0x30ED;\n  t['rokatakanahalfwidth'] = 0xFF9B;\n  t['roruathai'] = 0x0E23;\n  t['rparen'] = 0x24AD;\n  t['rrabengali'] = 0x09DC;\n  t['rradeva'] = 0x0931;\n  t['rragurmukhi'] = 0x0A5C;\n  t['rreharabic'] = 0x0691;\n  t['rrehfinalarabic'] = 0xFB8D;\n  t['rrvocalicbengali'] = 0x09E0;\n  t['rrvocalicdeva'] = 0x0960;\n  t['rrvocalicgujarati'] = 0x0AE0;\n  t['rrvocalicvowelsignbengali'] = 0x09C4;\n  t['rrvocalicvowelsigndeva'] = 0x0944;\n  t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n  t['rsuperior'] = 0xF6F1;\n  t['rtblock'] = 0x2590;\n  t['rturned'] = 0x0279;\n  t['rturnedsuperior'] = 0x02B4;\n  t['ruhiragana'] = 0x308B;\n  t['rukatakana'] = 0x30EB;\n  t['rukatakanahalfwidth'] = 0xFF99;\n  t['rupeemarkbengali'] = 0x09F2;\n  t['rupeesignbengali'] = 0x09F3;\n  t['rupiah'] = 0xF6DD;\n  t['ruthai'] = 0x0E24;\n  t['rvocalicbengali'] = 0x098B;\n  t['rvocalicdeva'] = 0x090B;\n  t['rvocalicgujarati'] = 0x0A8B;\n  t['rvocalicvowelsignbengali'] = 0x09C3;\n  t['rvocalicvowelsigndeva'] = 0x0943;\n  t['rvocalicvowelsigngujarati'] = 0x0AC3;\n  t['s'] = 0x0073;\n  t['sabengali'] = 0x09B8;\n  t['sacute'] = 0x015B;\n  t['sacutedotaccent'] = 0x1E65;\n  t['sadarabic'] = 0x0635;\n  t['sadeva'] = 0x0938;\n  t['sadfinalarabic'] = 0xFEBA;\n  t['sadinitialarabic'] = 0xFEBB;\n  t['sadmedialarabic'] = 0xFEBC;\n  t['sagujarati'] = 0x0AB8;\n  t['sagurmukhi'] = 0x0A38;\n  t['sahiragana'] = 0x3055;\n  t['sakatakana'] = 0x30B5;\n  t['sakatakanahalfwidth'] = 0xFF7B;\n  t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n  t['samekh'] = 0x05E1;\n  t['samekhdagesh'] = 0xFB41;\n  t['samekhdageshhebrew'] = 0xFB41;\n  t['samekhhebrew'] = 0x05E1;\n  t['saraaathai'] = 0x0E32;\n  t['saraaethai'] = 0x0E41;\n  t['saraaimaimalaithai'] = 0x0E44;\n  t['saraaimaimuanthai'] = 0x0E43;\n  t['saraamthai'] = 0x0E33;\n  t['saraathai'] = 0x0E30;\n  t['saraethai'] = 0x0E40;\n  t['saraiileftthai'] = 0xF886;\n  t['saraiithai'] = 0x0E35;\n  t['saraileftthai'] = 0xF885;\n  t['saraithai'] = 0x0E34;\n  t['saraothai'] = 0x0E42;\n  t['saraueeleftthai'] = 0xF888;\n  t['saraueethai'] = 0x0E37;\n  t['saraueleftthai'] = 0xF887;\n  t['sarauethai'] = 0x0E36;\n  t['sarauthai'] = 0x0E38;\n  t['sarauuthai'] = 0x0E39;\n  t['sbopomofo'] = 0x3119;\n  t['scaron'] = 0x0161;\n  t['scarondotaccent'] = 0x1E67;\n  t['scedilla'] = 0x015F;\n  t['schwa'] = 0x0259;\n  t['schwacyrillic'] = 0x04D9;\n  t['schwadieresiscyrillic'] = 0x04DB;\n  t['schwahook'] = 0x025A;\n  t['scircle'] = 0x24E2;\n  t['scircumflex'] = 0x015D;\n  t['scommaaccent'] = 0x0219;\n  t['sdotaccent'] = 0x1E61;\n  t['sdotbelow'] = 0x1E63;\n  t['sdotbelowdotaccent'] = 0x1E69;\n  t['seagullbelowcmb'] = 0x033C;\n  t['second'] = 0x2033;\n  t['secondtonechinese'] = 0x02CA;\n  t['section'] = 0x00A7;\n  t['seenarabic'] = 0x0633;\n  t['seenfinalarabic'] = 0xFEB2;\n  t['seeninitialarabic'] = 0xFEB3;\n  t['seenmedialarabic'] = 0xFEB4;\n  t['segol'] = 0x05B6;\n  t['segol13'] = 0x05B6;\n  t['segol1f'] = 0x05B6;\n  t['segol2c'] = 0x05B6;\n  t['segolhebrew'] = 0x05B6;\n  t['segolnarrowhebrew'] = 0x05B6;\n  t['segolquarterhebrew'] = 0x05B6;\n  t['segoltahebrew'] = 0x0592;\n  t['segolwidehebrew'] = 0x05B6;\n  t['seharmenian'] = 0x057D;\n  t['sehiragana'] = 0x305B;\n  t['sekatakana'] = 0x30BB;\n  t['sekatakanahalfwidth'] = 0xFF7E;\n  t['semicolon'] = 0x003B;\n  t['semicolonarabic'] = 0x061B;\n  t['semicolonmonospace'] = 0xFF1B;\n  t['semicolonsmall'] = 0xFE54;\n  t['semivoicedmarkkana'] = 0x309C;\n  t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n  t['sentisquare'] = 0x3322;\n  t['sentosquare'] = 0x3323;\n  t['seven'] = 0x0037;\n  t['sevenarabic'] = 0x0667;\n  t['sevenbengali'] = 0x09ED;\n  t['sevencircle'] = 0x2466;\n  t['sevencircleinversesansserif'] = 0x2790;\n  t['sevendeva'] = 0x096D;\n  t['seveneighths'] = 0x215E;\n  t['sevengujarati'] = 0x0AED;\n  t['sevengurmukhi'] = 0x0A6D;\n  t['sevenhackarabic'] = 0x0667;\n  t['sevenhangzhou'] = 0x3027;\n  t['sevenideographicparen'] = 0x3226;\n  t['seveninferior'] = 0x2087;\n  t['sevenmonospace'] = 0xFF17;\n  t['sevenoldstyle'] = 0xF737;\n  t['sevenparen'] = 0x247A;\n  t['sevenperiod'] = 0x248E;\n  t['sevenpersian'] = 0x06F7;\n  t['sevenroman'] = 0x2176;\n  t['sevensuperior'] = 0x2077;\n  t['seventeencircle'] = 0x2470;\n  t['seventeenparen'] = 0x2484;\n  t['seventeenperiod'] = 0x2498;\n  t['seventhai'] = 0x0E57;\n  t['sfthyphen'] = 0x00AD;\n  t['shaarmenian'] = 0x0577;\n  t['shabengali'] = 0x09B6;\n  t['shacyrillic'] = 0x0448;\n  t['shaddaarabic'] = 0x0651;\n  t['shaddadammaarabic'] = 0xFC61;\n  t['shaddadammatanarabic'] = 0xFC5E;\n  t['shaddafathaarabic'] = 0xFC60;\n  t['shaddakasraarabic'] = 0xFC62;\n  t['shaddakasratanarabic'] = 0xFC5F;\n  t['shade'] = 0x2592;\n  t['shadedark'] = 0x2593;\n  t['shadelight'] = 0x2591;\n  t['shademedium'] = 0x2592;\n  t['shadeva'] = 0x0936;\n  t['shagujarati'] = 0x0AB6;\n  t['shagurmukhi'] = 0x0A36;\n  t['shalshelethebrew'] = 0x0593;\n  t['shbopomofo'] = 0x3115;\n  t['shchacyrillic'] = 0x0449;\n  t['sheenarabic'] = 0x0634;\n  t['sheenfinalarabic'] = 0xFEB6;\n  t['sheeninitialarabic'] = 0xFEB7;\n  t['sheenmedialarabic'] = 0xFEB8;\n  t['sheicoptic'] = 0x03E3;\n  t['sheqel'] = 0x20AA;\n  t['sheqelhebrew'] = 0x20AA;\n  t['sheva'] = 0x05B0;\n  t['sheva115'] = 0x05B0;\n  t['sheva15'] = 0x05B0;\n  t['sheva22'] = 0x05B0;\n  t['sheva2e'] = 0x05B0;\n  t['shevahebrew'] = 0x05B0;\n  t['shevanarrowhebrew'] = 0x05B0;\n  t['shevaquarterhebrew'] = 0x05B0;\n  t['shevawidehebrew'] = 0x05B0;\n  t['shhacyrillic'] = 0x04BB;\n  t['shimacoptic'] = 0x03ED;\n  t['shin'] = 0x05E9;\n  t['shindagesh'] = 0xFB49;\n  t['shindageshhebrew'] = 0xFB49;\n  t['shindageshshindot'] = 0xFB2C;\n  t['shindageshshindothebrew'] = 0xFB2C;\n  t['shindageshsindot'] = 0xFB2D;\n  t['shindageshsindothebrew'] = 0xFB2D;\n  t['shindothebrew'] = 0x05C1;\n  t['shinhebrew'] = 0x05E9;\n  t['shinshindot'] = 0xFB2A;\n  t['shinshindothebrew'] = 0xFB2A;\n  t['shinsindot'] = 0xFB2B;\n  t['shinsindothebrew'] = 0xFB2B;\n  t['shook'] = 0x0282;\n  t['sigma'] = 0x03C3;\n  t['sigma1'] = 0x03C2;\n  t['sigmafinal'] = 0x03C2;\n  t['sigmalunatesymbolgreek'] = 0x03F2;\n  t['sihiragana'] = 0x3057;\n  t['sikatakana'] = 0x30B7;\n  t['sikatakanahalfwidth'] = 0xFF7C;\n  t['siluqhebrew'] = 0x05BD;\n  t['siluqlefthebrew'] = 0x05BD;\n  t['similar'] = 0x223C;\n  t['sindothebrew'] = 0x05C2;\n  t['siosacirclekorean'] = 0x3274;\n  t['siosaparenkorean'] = 0x3214;\n  t['sioscieuckorean'] = 0x317E;\n  t['sioscirclekorean'] = 0x3266;\n  t['sioskiyeokkorean'] = 0x317A;\n  t['sioskorean'] = 0x3145;\n  t['siosnieunkorean'] = 0x317B;\n  t['siosparenkorean'] = 0x3206;\n  t['siospieupkorean'] = 0x317D;\n  t['siostikeutkorean'] = 0x317C;\n  t['six'] = 0x0036;\n  t['sixarabic'] = 0x0666;\n  t['sixbengali'] = 0x09EC;\n  t['sixcircle'] = 0x2465;\n  t['sixcircleinversesansserif'] = 0x278F;\n  t['sixdeva'] = 0x096C;\n  t['sixgujarati'] = 0x0AEC;\n  t['sixgurmukhi'] = 0x0A6C;\n  t['sixhackarabic'] = 0x0666;\n  t['sixhangzhou'] = 0x3026;\n  t['sixideographicparen'] = 0x3225;\n  t['sixinferior'] = 0x2086;\n  t['sixmonospace'] = 0xFF16;\n  t['sixoldstyle'] = 0xF736;\n  t['sixparen'] = 0x2479;\n  t['sixperiod'] = 0x248D;\n  t['sixpersian'] = 0x06F6;\n  t['sixroman'] = 0x2175;\n  t['sixsuperior'] = 0x2076;\n  t['sixteencircle'] = 0x246F;\n  t['sixteencurrencydenominatorbengali'] = 0x09F9;\n  t['sixteenparen'] = 0x2483;\n  t['sixteenperiod'] = 0x2497;\n  t['sixthai'] = 0x0E56;\n  t['slash'] = 0x002F;\n  t['slashmonospace'] = 0xFF0F;\n  t['slong'] = 0x017F;\n  t['slongdotaccent'] = 0x1E9B;\n  t['smileface'] = 0x263A;\n  t['smonospace'] = 0xFF53;\n  t['sofpasuqhebrew'] = 0x05C3;\n  t['softhyphen'] = 0x00AD;\n  t['softsigncyrillic'] = 0x044C;\n  t['sohiragana'] = 0x305D;\n  t['sokatakana'] = 0x30BD;\n  t['sokatakanahalfwidth'] = 0xFF7F;\n  t['soliduslongoverlaycmb'] = 0x0338;\n  t['solidusshortoverlaycmb'] = 0x0337;\n  t['sorusithai'] = 0x0E29;\n  t['sosalathai'] = 0x0E28;\n  t['sosothai'] = 0x0E0B;\n  t['sosuathai'] = 0x0E2A;\n  t['space'] = 0x0020;\n  t['spacehackarabic'] = 0x0020;\n  t['spade'] = 0x2660;\n  t['spadesuitblack'] = 0x2660;\n  t['spadesuitwhite'] = 0x2664;\n  t['sparen'] = 0x24AE;\n  t['squarebelowcmb'] = 0x033B;\n  t['squarecc'] = 0x33C4;\n  t['squarecm'] = 0x339D;\n  t['squarediagonalcrosshatchfill'] = 0x25A9;\n  t['squarehorizontalfill'] = 0x25A4;\n  t['squarekg'] = 0x338F;\n  t['squarekm'] = 0x339E;\n  t['squarekmcapital'] = 0x33CE;\n  t['squareln'] = 0x33D1;\n  t['squarelog'] = 0x33D2;\n  t['squaremg'] = 0x338E;\n  t['squaremil'] = 0x33D5;\n  t['squaremm'] = 0x339C;\n  t['squaremsquared'] = 0x33A1;\n  t['squareorthogonalcrosshatchfill'] = 0x25A6;\n  t['squareupperlefttolowerrightfill'] = 0x25A7;\n  t['squareupperrighttolowerleftfill'] = 0x25A8;\n  t['squareverticalfill'] = 0x25A5;\n  t['squarewhitewithsmallblack'] = 0x25A3;\n  t['srsquare'] = 0x33DB;\n  t['ssabengali'] = 0x09B7;\n  t['ssadeva'] = 0x0937;\n  t['ssagujarati'] = 0x0AB7;\n  t['ssangcieuckorean'] = 0x3149;\n  t['ssanghieuhkorean'] = 0x3185;\n  t['ssangieungkorean'] = 0x3180;\n  t['ssangkiyeokkorean'] = 0x3132;\n  t['ssangnieunkorean'] = 0x3165;\n  t['ssangpieupkorean'] = 0x3143;\n  t['ssangsioskorean'] = 0x3146;\n  t['ssangtikeutkorean'] = 0x3138;\n  t['ssuperior'] = 0xF6F2;\n  t['sterling'] = 0x00A3;\n  t['sterlingmonospace'] = 0xFFE1;\n  t['strokelongoverlaycmb'] = 0x0336;\n  t['strokeshortoverlaycmb'] = 0x0335;\n  t['subset'] = 0x2282;\n  t['subsetnotequal'] = 0x228A;\n  t['subsetorequal'] = 0x2286;\n  t['succeeds'] = 0x227B;\n  t['suchthat'] = 0x220B;\n  t['suhiragana'] = 0x3059;\n  t['sukatakana'] = 0x30B9;\n  t['sukatakanahalfwidth'] = 0xFF7D;\n  t['sukunarabic'] = 0x0652;\n  t['summation'] = 0x2211;\n  t['sun'] = 0x263C;\n  t['superset'] = 0x2283;\n  t['supersetnotequal'] = 0x228B;\n  t['supersetorequal'] = 0x2287;\n  t['svsquare'] = 0x33DC;\n  t['syouwaerasquare'] = 0x337C;\n  t['t'] = 0x0074;\n  t['tabengali'] = 0x09A4;\n  t['tackdown'] = 0x22A4;\n  t['tackleft'] = 0x22A3;\n  t['tadeva'] = 0x0924;\n  t['tagujarati'] = 0x0AA4;\n  t['tagurmukhi'] = 0x0A24;\n  t['taharabic'] = 0x0637;\n  t['tahfinalarabic'] = 0xFEC2;\n  t['tahinitialarabic'] = 0xFEC3;\n  t['tahiragana'] = 0x305F;\n  t['tahmedialarabic'] = 0xFEC4;\n  t['taisyouerasquare'] = 0x337D;\n  t['takatakana'] = 0x30BF;\n  t['takatakanahalfwidth'] = 0xFF80;\n  t['tatweelarabic'] = 0x0640;\n  t['tau'] = 0x03C4;\n  t['tav'] = 0x05EA;\n  t['tavdages'] = 0xFB4A;\n  t['tavdagesh'] = 0xFB4A;\n  t['tavdageshhebrew'] = 0xFB4A;\n  t['tavhebrew'] = 0x05EA;\n  t['tbar'] = 0x0167;\n  t['tbopomofo'] = 0x310A;\n  t['tcaron'] = 0x0165;\n  t['tccurl'] = 0x02A8;\n  t['tcedilla'] = 0x0163;\n  t['tcheharabic'] = 0x0686;\n  t['tchehfinalarabic'] = 0xFB7B;\n  t['tchehinitialarabic'] = 0xFB7C;\n  t['tchehmedialarabic'] = 0xFB7D;\n  t['tcircle'] = 0x24E3;\n  t['tcircumflexbelow'] = 0x1E71;\n  t['tcommaaccent'] = 0x0163;\n  t['tdieresis'] = 0x1E97;\n  t['tdotaccent'] = 0x1E6B;\n  t['tdotbelow'] = 0x1E6D;\n  t['tecyrillic'] = 0x0442;\n  t['tedescendercyrillic'] = 0x04AD;\n  t['teharabic'] = 0x062A;\n  t['tehfinalarabic'] = 0xFE96;\n  t['tehhahinitialarabic'] = 0xFCA2;\n  t['tehhahisolatedarabic'] = 0xFC0C;\n  t['tehinitialarabic'] = 0xFE97;\n  t['tehiragana'] = 0x3066;\n  t['tehjeeminitialarabic'] = 0xFCA1;\n  t['tehjeemisolatedarabic'] = 0xFC0B;\n  t['tehmarbutaarabic'] = 0x0629;\n  t['tehmarbutafinalarabic'] = 0xFE94;\n  t['tehmedialarabic'] = 0xFE98;\n  t['tehmeeminitialarabic'] = 0xFCA4;\n  t['tehmeemisolatedarabic'] = 0xFC0E;\n  t['tehnoonfinalarabic'] = 0xFC73;\n  t['tekatakana'] = 0x30C6;\n  t['tekatakanahalfwidth'] = 0xFF83;\n  t['telephone'] = 0x2121;\n  t['telephoneblack'] = 0x260E;\n  t['telishagedolahebrew'] = 0x05A0;\n  t['telishaqetanahebrew'] = 0x05A9;\n  t['tencircle'] = 0x2469;\n  t['tenideographicparen'] = 0x3229;\n  t['tenparen'] = 0x247D;\n  t['tenperiod'] = 0x2491;\n  t['tenroman'] = 0x2179;\n  t['tesh'] = 0x02A7;\n  t['tet'] = 0x05D8;\n  t['tetdagesh'] = 0xFB38;\n  t['tetdageshhebrew'] = 0xFB38;\n  t['tethebrew'] = 0x05D8;\n  t['tetsecyrillic'] = 0x04B5;\n  t['tevirhebrew'] = 0x059B;\n  t['tevirlefthebrew'] = 0x059B;\n  t['thabengali'] = 0x09A5;\n  t['thadeva'] = 0x0925;\n  t['thagujarati'] = 0x0AA5;\n  t['thagurmukhi'] = 0x0A25;\n  t['thalarabic'] = 0x0630;\n  t['thalfinalarabic'] = 0xFEAC;\n  t['thanthakhatlowleftthai'] = 0xF898;\n  t['thanthakhatlowrightthai'] = 0xF897;\n  t['thanthakhatthai'] = 0x0E4C;\n  t['thanthakhatupperleftthai'] = 0xF896;\n  t['theharabic'] = 0x062B;\n  t['thehfinalarabic'] = 0xFE9A;\n  t['thehinitialarabic'] = 0xFE9B;\n  t['thehmedialarabic'] = 0xFE9C;\n  t['thereexists'] = 0x2203;\n  t['therefore'] = 0x2234;\n  t['theta'] = 0x03B8;\n  t['theta1'] = 0x03D1;\n  t['thetasymbolgreek'] = 0x03D1;\n  t['thieuthacirclekorean'] = 0x3279;\n  t['thieuthaparenkorean'] = 0x3219;\n  t['thieuthcirclekorean'] = 0x326B;\n  t['thieuthkorean'] = 0x314C;\n  t['thieuthparenkorean'] = 0x320B;\n  t['thirteencircle'] = 0x246C;\n  t['thirteenparen'] = 0x2480;\n  t['thirteenperiod'] = 0x2494;\n  t['thonangmonthothai'] = 0x0E11;\n  t['thook'] = 0x01AD;\n  t['thophuthaothai'] = 0x0E12;\n  t['thorn'] = 0x00FE;\n  t['thothahanthai'] = 0x0E17;\n  t['thothanthai'] = 0x0E10;\n  t['thothongthai'] = 0x0E18;\n  t['thothungthai'] = 0x0E16;\n  t['thousandcyrillic'] = 0x0482;\n  t['thousandsseparatorarabic'] = 0x066C;\n  t['thousandsseparatorpersian'] = 0x066C;\n  t['three'] = 0x0033;\n  t['threearabic'] = 0x0663;\n  t['threebengali'] = 0x09E9;\n  t['threecircle'] = 0x2462;\n  t['threecircleinversesansserif'] = 0x278C;\n  t['threedeva'] = 0x0969;\n  t['threeeighths'] = 0x215C;\n  t['threegujarati'] = 0x0AE9;\n  t['threegurmukhi'] = 0x0A69;\n  t['threehackarabic'] = 0x0663;\n  t['threehangzhou'] = 0x3023;\n  t['threeideographicparen'] = 0x3222;\n  t['threeinferior'] = 0x2083;\n  t['threemonospace'] = 0xFF13;\n  t['threenumeratorbengali'] = 0x09F6;\n  t['threeoldstyle'] = 0xF733;\n  t['threeparen'] = 0x2476;\n  t['threeperiod'] = 0x248A;\n  t['threepersian'] = 0x06F3;\n  t['threequarters'] = 0x00BE;\n  t['threequartersemdash'] = 0xF6DE;\n  t['threeroman'] = 0x2172;\n  t['threesuperior'] = 0x00B3;\n  t['threethai'] = 0x0E53;\n  t['thzsquare'] = 0x3394;\n  t['tihiragana'] = 0x3061;\n  t['tikatakana'] = 0x30C1;\n  t['tikatakanahalfwidth'] = 0xFF81;\n  t['tikeutacirclekorean'] = 0x3270;\n  t['tikeutaparenkorean'] = 0x3210;\n  t['tikeutcirclekorean'] = 0x3262;\n  t['tikeutkorean'] = 0x3137;\n  t['tikeutparenkorean'] = 0x3202;\n  t['tilde'] = 0x02DC;\n  t['tildebelowcmb'] = 0x0330;\n  t['tildecmb'] = 0x0303;\n  t['tildecomb'] = 0x0303;\n  t['tildedoublecmb'] = 0x0360;\n  t['tildeoperator'] = 0x223C;\n  t['tildeoverlaycmb'] = 0x0334;\n  t['tildeverticalcmb'] = 0x033E;\n  t['timescircle'] = 0x2297;\n  t['tipehahebrew'] = 0x0596;\n  t['tipehalefthebrew'] = 0x0596;\n  t['tippigurmukhi'] = 0x0A70;\n  t['titlocyrilliccmb'] = 0x0483;\n  t['tiwnarmenian'] = 0x057F;\n  t['tlinebelow'] = 0x1E6F;\n  t['tmonospace'] = 0xFF54;\n  t['toarmenian'] = 0x0569;\n  t['tohiragana'] = 0x3068;\n  t['tokatakana'] = 0x30C8;\n  t['tokatakanahalfwidth'] = 0xFF84;\n  t['tonebarextrahighmod'] = 0x02E5;\n  t['tonebarextralowmod'] = 0x02E9;\n  t['tonebarhighmod'] = 0x02E6;\n  t['tonebarlowmod'] = 0x02E8;\n  t['tonebarmidmod'] = 0x02E7;\n  t['tonefive'] = 0x01BD;\n  t['tonesix'] = 0x0185;\n  t['tonetwo'] = 0x01A8;\n  t['tonos'] = 0x0384;\n  t['tonsquare'] = 0x3327;\n  t['topatakthai'] = 0x0E0F;\n  t['tortoiseshellbracketleft'] = 0x3014;\n  t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n  t['tortoiseshellbracketleftvertical'] = 0xFE39;\n  t['tortoiseshellbracketright'] = 0x3015;\n  t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n  t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n  t['totaothai'] = 0x0E15;\n  t['tpalatalhook'] = 0x01AB;\n  t['tparen'] = 0x24AF;\n  t['trademark'] = 0x2122;\n  t['trademarksans'] = 0xF8EA;\n  t['trademarkserif'] = 0xF6DB;\n  t['tretroflexhook'] = 0x0288;\n  t['triagdn'] = 0x25BC;\n  t['triaglf'] = 0x25C4;\n  t['triagrt'] = 0x25BA;\n  t['triagup'] = 0x25B2;\n  t['ts'] = 0x02A6;\n  t['tsadi'] = 0x05E6;\n  t['tsadidagesh'] = 0xFB46;\n  t['tsadidageshhebrew'] = 0xFB46;\n  t['tsadihebrew'] = 0x05E6;\n  t['tsecyrillic'] = 0x0446;\n  t['tsere'] = 0x05B5;\n  t['tsere12'] = 0x05B5;\n  t['tsere1e'] = 0x05B5;\n  t['tsere2b'] = 0x05B5;\n  t['tserehebrew'] = 0x05B5;\n  t['tserenarrowhebrew'] = 0x05B5;\n  t['tserequarterhebrew'] = 0x05B5;\n  t['tserewidehebrew'] = 0x05B5;\n  t['tshecyrillic'] = 0x045B;\n  t['tsuperior'] = 0xF6F3;\n  t['ttabengali'] = 0x099F;\n  t['ttadeva'] = 0x091F;\n  t['ttagujarati'] = 0x0A9F;\n  t['ttagurmukhi'] = 0x0A1F;\n  t['tteharabic'] = 0x0679;\n  t['ttehfinalarabic'] = 0xFB67;\n  t['ttehinitialarabic'] = 0xFB68;\n  t['ttehmedialarabic'] = 0xFB69;\n  t['tthabengali'] = 0x09A0;\n  t['tthadeva'] = 0x0920;\n  t['tthagujarati'] = 0x0AA0;\n  t['tthagurmukhi'] = 0x0A20;\n  t['tturned'] = 0x0287;\n  t['tuhiragana'] = 0x3064;\n  t['tukatakana'] = 0x30C4;\n  t['tukatakanahalfwidth'] = 0xFF82;\n  t['tusmallhiragana'] = 0x3063;\n  t['tusmallkatakana'] = 0x30C3;\n  t['tusmallkatakanahalfwidth'] = 0xFF6F;\n  t['twelvecircle'] = 0x246B;\n  t['twelveparen'] = 0x247F;\n  t['twelveperiod'] = 0x2493;\n  t['twelveroman'] = 0x217B;\n  t['twentycircle'] = 0x2473;\n  t['twentyhangzhou'] = 0x5344;\n  t['twentyparen'] = 0x2487;\n  t['twentyperiod'] = 0x249B;\n  t['two'] = 0x0032;\n  t['twoarabic'] = 0x0662;\n  t['twobengali'] = 0x09E8;\n  t['twocircle'] = 0x2461;\n  t['twocircleinversesansserif'] = 0x278B;\n  t['twodeva'] = 0x0968;\n  t['twodotenleader'] = 0x2025;\n  t['twodotleader'] = 0x2025;\n  t['twodotleadervertical'] = 0xFE30;\n  t['twogujarati'] = 0x0AE8;\n  t['twogurmukhi'] = 0x0A68;\n  t['twohackarabic'] = 0x0662;\n  t['twohangzhou'] = 0x3022;\n  t['twoideographicparen'] = 0x3221;\n  t['twoinferior'] = 0x2082;\n  t['twomonospace'] = 0xFF12;\n  t['twonumeratorbengali'] = 0x09F5;\n  t['twooldstyle'] = 0xF732;\n  t['twoparen'] = 0x2475;\n  t['twoperiod'] = 0x2489;\n  t['twopersian'] = 0x06F2;\n  t['tworoman'] = 0x2171;\n  t['twostroke'] = 0x01BB;\n  t['twosuperior'] = 0x00B2;\n  t['twothai'] = 0x0E52;\n  t['twothirds'] = 0x2154;\n  t['u'] = 0x0075;\n  t['uacute'] = 0x00FA;\n  t['ubar'] = 0x0289;\n  t['ubengali'] = 0x0989;\n  t['ubopomofo'] = 0x3128;\n  t['ubreve'] = 0x016D;\n  t['ucaron'] = 0x01D4;\n  t['ucircle'] = 0x24E4;\n  t['ucircumflex'] = 0x00FB;\n  t['ucircumflexbelow'] = 0x1E77;\n  t['ucyrillic'] = 0x0443;\n  t['udattadeva'] = 0x0951;\n  t['udblacute'] = 0x0171;\n  t['udblgrave'] = 0x0215;\n  t['udeva'] = 0x0909;\n  t['udieresis'] = 0x00FC;\n  t['udieresisacute'] = 0x01D8;\n  t['udieresisbelow'] = 0x1E73;\n  t['udieresiscaron'] = 0x01DA;\n  t['udieresiscyrillic'] = 0x04F1;\n  t['udieresisgrave'] = 0x01DC;\n  t['udieresismacron'] = 0x01D6;\n  t['udotbelow'] = 0x1EE5;\n  t['ugrave'] = 0x00F9;\n  t['ugujarati'] = 0x0A89;\n  t['ugurmukhi'] = 0x0A09;\n  t['uhiragana'] = 0x3046;\n  t['uhookabove'] = 0x1EE7;\n  t['uhorn'] = 0x01B0;\n  t['uhornacute'] = 0x1EE9;\n  t['uhorndotbelow'] = 0x1EF1;\n  t['uhorngrave'] = 0x1EEB;\n  t['uhornhookabove'] = 0x1EED;\n  t['uhorntilde'] = 0x1EEF;\n  t['uhungarumlaut'] = 0x0171;\n  t['uhungarumlautcyrillic'] = 0x04F3;\n  t['uinvertedbreve'] = 0x0217;\n  t['ukatakana'] = 0x30A6;\n  t['ukatakanahalfwidth'] = 0xFF73;\n  t['ukcyrillic'] = 0x0479;\n  t['ukorean'] = 0x315C;\n  t['umacron'] = 0x016B;\n  t['umacroncyrillic'] = 0x04EF;\n  t['umacrondieresis'] = 0x1E7B;\n  t['umatragurmukhi'] = 0x0A41;\n  t['umonospace'] = 0xFF55;\n  t['underscore'] = 0x005F;\n  t['underscoredbl'] = 0x2017;\n  t['underscoremonospace'] = 0xFF3F;\n  t['underscorevertical'] = 0xFE33;\n  t['underscorewavy'] = 0xFE4F;\n  t['union'] = 0x222A;\n  t['universal'] = 0x2200;\n  t['uogonek'] = 0x0173;\n  t['uparen'] = 0x24B0;\n  t['upblock'] = 0x2580;\n  t['upperdothebrew'] = 0x05C4;\n  t['upsilon'] = 0x03C5;\n  t['upsilondieresis'] = 0x03CB;\n  t['upsilondieresistonos'] = 0x03B0;\n  t['upsilonlatin'] = 0x028A;\n  t['upsilontonos'] = 0x03CD;\n  t['uptackbelowcmb'] = 0x031D;\n  t['uptackmod'] = 0x02D4;\n  t['uragurmukhi'] = 0x0A73;\n  t['uring'] = 0x016F;\n  t['ushortcyrillic'] = 0x045E;\n  t['usmallhiragana'] = 0x3045;\n  t['usmallkatakana'] = 0x30A5;\n  t['usmallkatakanahalfwidth'] = 0xFF69;\n  t['ustraightcyrillic'] = 0x04AF;\n  t['ustraightstrokecyrillic'] = 0x04B1;\n  t['utilde'] = 0x0169;\n  t['utildeacute'] = 0x1E79;\n  t['utildebelow'] = 0x1E75;\n  t['uubengali'] = 0x098A;\n  t['uudeva'] = 0x090A;\n  t['uugujarati'] = 0x0A8A;\n  t['uugurmukhi'] = 0x0A0A;\n  t['uumatragurmukhi'] = 0x0A42;\n  t['uuvowelsignbengali'] = 0x09C2;\n  t['uuvowelsigndeva'] = 0x0942;\n  t['uuvowelsigngujarati'] = 0x0AC2;\n  t['uvowelsignbengali'] = 0x09C1;\n  t['uvowelsigndeva'] = 0x0941;\n  t['uvowelsigngujarati'] = 0x0AC1;\n  t['v'] = 0x0076;\n  t['vadeva'] = 0x0935;\n  t['vagujarati'] = 0x0AB5;\n  t['vagurmukhi'] = 0x0A35;\n  t['vakatakana'] = 0x30F7;\n  t['vav'] = 0x05D5;\n  t['vavdagesh'] = 0xFB35;\n  t['vavdagesh65'] = 0xFB35;\n  t['vavdageshhebrew'] = 0xFB35;\n  t['vavhebrew'] = 0x05D5;\n  t['vavholam'] = 0xFB4B;\n  t['vavholamhebrew'] = 0xFB4B;\n  t['vavvavhebrew'] = 0x05F0;\n  t['vavyodhebrew'] = 0x05F1;\n  t['vcircle'] = 0x24E5;\n  t['vdotbelow'] = 0x1E7F;\n  t['vecyrillic'] = 0x0432;\n  t['veharabic'] = 0x06A4;\n  t['vehfinalarabic'] = 0xFB6B;\n  t['vehinitialarabic'] = 0xFB6C;\n  t['vehmedialarabic'] = 0xFB6D;\n  t['vekatakana'] = 0x30F9;\n  t['venus'] = 0x2640;\n  t['verticalbar'] = 0x007C;\n  t['verticallineabovecmb'] = 0x030D;\n  t['verticallinebelowcmb'] = 0x0329;\n  t['verticallinelowmod'] = 0x02CC;\n  t['verticallinemod'] = 0x02C8;\n  t['vewarmenian'] = 0x057E;\n  t['vhook'] = 0x028B;\n  t['vikatakana'] = 0x30F8;\n  t['viramabengali'] = 0x09CD;\n  t['viramadeva'] = 0x094D;\n  t['viramagujarati'] = 0x0ACD;\n  t['visargabengali'] = 0x0983;\n  t['visargadeva'] = 0x0903;\n  t['visargagujarati'] = 0x0A83;\n  t['vmonospace'] = 0xFF56;\n  t['voarmenian'] = 0x0578;\n  t['voicediterationhiragana'] = 0x309E;\n  t['voicediterationkatakana'] = 0x30FE;\n  t['voicedmarkkana'] = 0x309B;\n  t['voicedmarkkanahalfwidth'] = 0xFF9E;\n  t['vokatakana'] = 0x30FA;\n  t['vparen'] = 0x24B1;\n  t['vtilde'] = 0x1E7D;\n  t['vturned'] = 0x028C;\n  t['vuhiragana'] = 0x3094;\n  t['vukatakana'] = 0x30F4;\n  t['w'] = 0x0077;\n  t['wacute'] = 0x1E83;\n  t['waekorean'] = 0x3159;\n  t['wahiragana'] = 0x308F;\n  t['wakatakana'] = 0x30EF;\n  t['wakatakanahalfwidth'] = 0xFF9C;\n  t['wakorean'] = 0x3158;\n  t['wasmallhiragana'] = 0x308E;\n  t['wasmallkatakana'] = 0x30EE;\n  t['wattosquare'] = 0x3357;\n  t['wavedash'] = 0x301C;\n  t['wavyunderscorevertical'] = 0xFE34;\n  t['wawarabic'] = 0x0648;\n  t['wawfinalarabic'] = 0xFEEE;\n  t['wawhamzaabovearabic'] = 0x0624;\n  t['wawhamzaabovefinalarabic'] = 0xFE86;\n  t['wbsquare'] = 0x33DD;\n  t['wcircle'] = 0x24E6;\n  t['wcircumflex'] = 0x0175;\n  t['wdieresis'] = 0x1E85;\n  t['wdotaccent'] = 0x1E87;\n  t['wdotbelow'] = 0x1E89;\n  t['wehiragana'] = 0x3091;\n  t['weierstrass'] = 0x2118;\n  t['wekatakana'] = 0x30F1;\n  t['wekorean'] = 0x315E;\n  t['weokorean'] = 0x315D;\n  t['wgrave'] = 0x1E81;\n  t['whitebullet'] = 0x25E6;\n  t['whitecircle'] = 0x25CB;\n  t['whitecircleinverse'] = 0x25D9;\n  t['whitecornerbracketleft'] = 0x300E;\n  t['whitecornerbracketleftvertical'] = 0xFE43;\n  t['whitecornerbracketright'] = 0x300F;\n  t['whitecornerbracketrightvertical'] = 0xFE44;\n  t['whitediamond'] = 0x25C7;\n  t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n  t['whitedownpointingsmalltriangle'] = 0x25BF;\n  t['whitedownpointingtriangle'] = 0x25BD;\n  t['whiteleftpointingsmalltriangle'] = 0x25C3;\n  t['whiteleftpointingtriangle'] = 0x25C1;\n  t['whitelenticularbracketleft'] = 0x3016;\n  t['whitelenticularbracketright'] = 0x3017;\n  t['whiterightpointingsmalltriangle'] = 0x25B9;\n  t['whiterightpointingtriangle'] = 0x25B7;\n  t['whitesmallsquare'] = 0x25AB;\n  t['whitesmilingface'] = 0x263A;\n  t['whitesquare'] = 0x25A1;\n  t['whitestar'] = 0x2606;\n  t['whitetelephone'] = 0x260F;\n  t['whitetortoiseshellbracketleft'] = 0x3018;\n  t['whitetortoiseshellbracketright'] = 0x3019;\n  t['whiteuppointingsmalltriangle'] = 0x25B5;\n  t['whiteuppointingtriangle'] = 0x25B3;\n  t['wihiragana'] = 0x3090;\n  t['wikatakana'] = 0x30F0;\n  t['wikorean'] = 0x315F;\n  t['wmonospace'] = 0xFF57;\n  t['wohiragana'] = 0x3092;\n  t['wokatakana'] = 0x30F2;\n  t['wokatakanahalfwidth'] = 0xFF66;\n  t['won'] = 0x20A9;\n  t['wonmonospace'] = 0xFFE6;\n  t['wowaenthai'] = 0x0E27;\n  t['wparen'] = 0x24B2;\n  t['wring'] = 0x1E98;\n  t['wsuperior'] = 0x02B7;\n  t['wturned'] = 0x028D;\n  t['wynn'] = 0x01BF;\n  t['x'] = 0x0078;\n  t['xabovecmb'] = 0x033D;\n  t['xbopomofo'] = 0x3112;\n  t['xcircle'] = 0x24E7;\n  t['xdieresis'] = 0x1E8D;\n  t['xdotaccent'] = 0x1E8B;\n  t['xeharmenian'] = 0x056D;\n  t['xi'] = 0x03BE;\n  t['xmonospace'] = 0xFF58;\n  t['xparen'] = 0x24B3;\n  t['xsuperior'] = 0x02E3;\n  t['y'] = 0x0079;\n  t['yaadosquare'] = 0x334E;\n  t['yabengali'] = 0x09AF;\n  t['yacute'] = 0x00FD;\n  t['yadeva'] = 0x092F;\n  t['yaekorean'] = 0x3152;\n  t['yagujarati'] = 0x0AAF;\n  t['yagurmukhi'] = 0x0A2F;\n  t['yahiragana'] = 0x3084;\n  t['yakatakana'] = 0x30E4;\n  t['yakatakanahalfwidth'] = 0xFF94;\n  t['yakorean'] = 0x3151;\n  t['yamakkanthai'] = 0x0E4E;\n  t['yasmallhiragana'] = 0x3083;\n  t['yasmallkatakana'] = 0x30E3;\n  t['yasmallkatakanahalfwidth'] = 0xFF6C;\n  t['yatcyrillic'] = 0x0463;\n  t['ycircle'] = 0x24E8;\n  t['ycircumflex'] = 0x0177;\n  t['ydieresis'] = 0x00FF;\n  t['ydotaccent'] = 0x1E8F;\n  t['ydotbelow'] = 0x1EF5;\n  t['yeharabic'] = 0x064A;\n  t['yehbarreearabic'] = 0x06D2;\n  t['yehbarreefinalarabic'] = 0xFBAF;\n  t['yehfinalarabic'] = 0xFEF2;\n  t['yehhamzaabovearabic'] = 0x0626;\n  t['yehhamzaabovefinalarabic'] = 0xFE8A;\n  t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n  t['yehhamzaabovemedialarabic'] = 0xFE8C;\n  t['yehinitialarabic'] = 0xFEF3;\n  t['yehmedialarabic'] = 0xFEF4;\n  t['yehmeeminitialarabic'] = 0xFCDD;\n  t['yehmeemisolatedarabic'] = 0xFC58;\n  t['yehnoonfinalarabic'] = 0xFC94;\n  t['yehthreedotsbelowarabic'] = 0x06D1;\n  t['yekorean'] = 0x3156;\n  t['yen'] = 0x00A5;\n  t['yenmonospace'] = 0xFFE5;\n  t['yeokorean'] = 0x3155;\n  t['yeorinhieuhkorean'] = 0x3186;\n  t['yerahbenyomohebrew'] = 0x05AA;\n  t['yerahbenyomolefthebrew'] = 0x05AA;\n  t['yericyrillic'] = 0x044B;\n  t['yerudieresiscyrillic'] = 0x04F9;\n  t['yesieungkorean'] = 0x3181;\n  t['yesieungpansioskorean'] = 0x3183;\n  t['yesieungsioskorean'] = 0x3182;\n  t['yetivhebrew'] = 0x059A;\n  t['ygrave'] = 0x1EF3;\n  t['yhook'] = 0x01B4;\n  t['yhookabove'] = 0x1EF7;\n  t['yiarmenian'] = 0x0575;\n  t['yicyrillic'] = 0x0457;\n  t['yikorean'] = 0x3162;\n  t['yinyang'] = 0x262F;\n  t['yiwnarmenian'] = 0x0582;\n  t['ymonospace'] = 0xFF59;\n  t['yod'] = 0x05D9;\n  t['yoddagesh'] = 0xFB39;\n  t['yoddageshhebrew'] = 0xFB39;\n  t['yodhebrew'] = 0x05D9;\n  t['yodyodhebrew'] = 0x05F2;\n  t['yodyodpatahhebrew'] = 0xFB1F;\n  t['yohiragana'] = 0x3088;\n  t['yoikorean'] = 0x3189;\n  t['yokatakana'] = 0x30E8;\n  t['yokatakanahalfwidth'] = 0xFF96;\n  t['yokorean'] = 0x315B;\n  t['yosmallhiragana'] = 0x3087;\n  t['yosmallkatakana'] = 0x30E7;\n  t['yosmallkatakanahalfwidth'] = 0xFF6E;\n  t['yotgreek'] = 0x03F3;\n  t['yoyaekorean'] = 0x3188;\n  t['yoyakorean'] = 0x3187;\n  t['yoyakthai'] = 0x0E22;\n  t['yoyingthai'] = 0x0E0D;\n  t['yparen'] = 0x24B4;\n  t['ypogegrammeni'] = 0x037A;\n  t['ypogegrammenigreekcmb'] = 0x0345;\n  t['yr'] = 0x01A6;\n  t['yring'] = 0x1E99;\n  t['ysuperior'] = 0x02B8;\n  t['ytilde'] = 0x1EF9;\n  t['yturned'] = 0x028E;\n  t['yuhiragana'] = 0x3086;\n  t['yuikorean'] = 0x318C;\n  t['yukatakana'] = 0x30E6;\n  t['yukatakanahalfwidth'] = 0xFF95;\n  t['yukorean'] = 0x3160;\n  t['yusbigcyrillic'] = 0x046B;\n  t['yusbigiotifiedcyrillic'] = 0x046D;\n  t['yuslittlecyrillic'] = 0x0467;\n  t['yuslittleiotifiedcyrillic'] = 0x0469;\n  t['yusmallhiragana'] = 0x3085;\n  t['yusmallkatakana'] = 0x30E5;\n  t['yusmallkatakanahalfwidth'] = 0xFF6D;\n  t['yuyekorean'] = 0x318B;\n  t['yuyeokorean'] = 0x318A;\n  t['yyabengali'] = 0x09DF;\n  t['yyadeva'] = 0x095F;\n  t['z'] = 0x007A;\n  t['zaarmenian'] = 0x0566;\n  t['zacute'] = 0x017A;\n  t['zadeva'] = 0x095B;\n  t['zagurmukhi'] = 0x0A5B;\n  t['zaharabic'] = 0x0638;\n  t['zahfinalarabic'] = 0xFEC6;\n  t['zahinitialarabic'] = 0xFEC7;\n  t['zahiragana'] = 0x3056;\n  t['zahmedialarabic'] = 0xFEC8;\n  t['zainarabic'] = 0x0632;\n  t['zainfinalarabic'] = 0xFEB0;\n  t['zakatakana'] = 0x30B6;\n  t['zaqefgadolhebrew'] = 0x0595;\n  t['zaqefqatanhebrew'] = 0x0594;\n  t['zarqahebrew'] = 0x0598;\n  t['zayin'] = 0x05D6;\n  t['zayindagesh'] = 0xFB36;\n  t['zayindageshhebrew'] = 0xFB36;\n  t['zayinhebrew'] = 0x05D6;\n  t['zbopomofo'] = 0x3117;\n  t['zcaron'] = 0x017E;\n  t['zcircle'] = 0x24E9;\n  t['zcircumflex'] = 0x1E91;\n  t['zcurl'] = 0x0291;\n  t['zdot'] = 0x017C;\n  t['zdotaccent'] = 0x017C;\n  t['zdotbelow'] = 0x1E93;\n  t['zecyrillic'] = 0x0437;\n  t['zedescendercyrillic'] = 0x0499;\n  t['zedieresiscyrillic'] = 0x04DF;\n  t['zehiragana'] = 0x305C;\n  t['zekatakana'] = 0x30BC;\n  t['zero'] = 0x0030;\n  t['zeroarabic'] = 0x0660;\n  t['zerobengali'] = 0x09E6;\n  t['zerodeva'] = 0x0966;\n  t['zerogujarati'] = 0x0AE6;\n  t['zerogurmukhi'] = 0x0A66;\n  t['zerohackarabic'] = 0x0660;\n  t['zeroinferior'] = 0x2080;\n  t['zeromonospace'] = 0xFF10;\n  t['zerooldstyle'] = 0xF730;\n  t['zeropersian'] = 0x06F0;\n  t['zerosuperior'] = 0x2070;\n  t['zerothai'] = 0x0E50;\n  t['zerowidthjoiner'] = 0xFEFF;\n  t['zerowidthnonjoiner'] = 0x200C;\n  t['zerowidthspace'] = 0x200B;\n  t['zeta'] = 0x03B6;\n  t['zhbopomofo'] = 0x3113;\n  t['zhearmenian'] = 0x056A;\n  t['zhebrevecyrillic'] = 0x04C2;\n  t['zhecyrillic'] = 0x0436;\n  t['zhedescendercyrillic'] = 0x0497;\n  t['zhedieresiscyrillic'] = 0x04DD;\n  t['zihiragana'] = 0x3058;\n  t['zikatakana'] = 0x30B8;\n  t['zinorhebrew'] = 0x05AE;\n  t['zlinebelow'] = 0x1E95;\n  t['zmonospace'] = 0xFF5A;\n  t['zohiragana'] = 0x305E;\n  t['zokatakana'] = 0x30BE;\n  t['zparen'] = 0x24B5;\n  t['zretroflexhook'] = 0x0290;\n  t['zstroke'] = 0x01B6;\n  t['zuhiragana'] = 0x305A;\n  t['zukatakana'] = 0x30BA;\n  t['.notdef'] = 0x0000;\n  t['angbracketleftbig'] = 0x2329;\n  t['angbracketleftBig'] = 0x2329;\n  t['angbracketleftbigg'] = 0x2329;\n  t['angbracketleftBigg'] = 0x2329;\n  t['angbracketrightBig'] = 0x232A;\n  t['angbracketrightbig'] = 0x232A;\n  t['angbracketrightBigg'] = 0x232A;\n  t['angbracketrightbigg'] = 0x232A;\n  t['arrowhookleft'] = 0x21AA;\n  t['arrowhookright'] = 0x21A9;\n  t['arrowlefttophalf'] = 0x21BC;\n  t['arrowleftbothalf'] = 0x21BD;\n  t['arrownortheast'] = 0x2197;\n  t['arrownorthwest'] = 0x2196;\n  t['arrowrighttophalf'] = 0x21C0;\n  t['arrowrightbothalf'] = 0x21C1;\n  t['arrowsoutheast'] = 0x2198;\n  t['arrowsouthwest'] = 0x2199;\n  t['backslashbig'] = 0x2216;\n  t['backslashBig'] = 0x2216;\n  t['backslashBigg'] = 0x2216;\n  t['backslashbigg'] = 0x2216;\n  t['bardbl'] = 0x2016;\n  t['bracehtipdownleft'] = 0xFE37;\n  t['bracehtipdownright'] = 0xFE37;\n  t['bracehtipupleft'] = 0xFE38;\n  t['bracehtipupright'] = 0xFE38;\n  t['braceleftBig'] = 0x007B;\n  t['braceleftbig'] = 0x007B;\n  t['braceleftbigg'] = 0x007B;\n  t['braceleftBigg'] = 0x007B;\n  t['bracerightBig'] = 0x007D;\n  t['bracerightbig'] = 0x007D;\n  t['bracerightbigg'] = 0x007D;\n  t['bracerightBigg'] = 0x007D;\n  t['bracketleftbig'] = 0x005B;\n  t['bracketleftBig'] = 0x005B;\n  t['bracketleftbigg'] = 0x005B;\n  t['bracketleftBigg'] = 0x005B;\n  t['bracketrightBig'] = 0x005D;\n  t['bracketrightbig'] = 0x005D;\n  t['bracketrightbigg'] = 0x005D;\n  t['bracketrightBigg'] = 0x005D;\n  t['ceilingleftbig'] = 0x2308;\n  t['ceilingleftBig'] = 0x2308;\n  t['ceilingleftBigg'] = 0x2308;\n  t['ceilingleftbigg'] = 0x2308;\n  t['ceilingrightbig'] = 0x2309;\n  t['ceilingrightBig'] = 0x2309;\n  t['ceilingrightbigg'] = 0x2309;\n  t['ceilingrightBigg'] = 0x2309;\n  t['circledotdisplay'] = 0x2299;\n  t['circledottext'] = 0x2299;\n  t['circlemultiplydisplay'] = 0x2297;\n  t['circlemultiplytext'] = 0x2297;\n  t['circleplusdisplay'] = 0x2295;\n  t['circleplustext'] = 0x2295;\n  t['contintegraldisplay'] = 0x222E;\n  t['contintegraltext'] = 0x222E;\n  t['coproductdisplay'] = 0x2210;\n  t['coproducttext'] = 0x2210;\n  t['floorleftBig'] = 0x230A;\n  t['floorleftbig'] = 0x230A;\n  t['floorleftbigg'] = 0x230A;\n  t['floorleftBigg'] = 0x230A;\n  t['floorrightbig'] = 0x230B;\n  t['floorrightBig'] = 0x230B;\n  t['floorrightBigg'] = 0x230B;\n  t['floorrightbigg'] = 0x230B;\n  t['hatwide'] = 0x0302;\n  t['hatwider'] = 0x0302;\n  t['hatwidest'] = 0x0302;\n  t['intercal'] = 0x1D40;\n  t['integraldisplay'] = 0x222B;\n  t['integraltext'] = 0x222B;\n  t['intersectiondisplay'] = 0x22C2;\n  t['intersectiontext'] = 0x22C2;\n  t['logicalanddisplay'] = 0x2227;\n  t['logicalandtext'] = 0x2227;\n  t['logicalordisplay'] = 0x2228;\n  t['logicalortext'] = 0x2228;\n  t['parenleftBig'] = 0x0028;\n  t['parenleftbig'] = 0x0028;\n  t['parenleftBigg'] = 0x0028;\n  t['parenleftbigg'] = 0x0028;\n  t['parenrightBig'] = 0x0029;\n  t['parenrightbig'] = 0x0029;\n  t['parenrightBigg'] = 0x0029;\n  t['parenrightbigg'] = 0x0029;\n  t['prime'] = 0x2032;\n  t['productdisplay'] = 0x220F;\n  t['producttext'] = 0x220F;\n  t['radicalbig'] = 0x221A;\n  t['radicalBig'] = 0x221A;\n  t['radicalBigg'] = 0x221A;\n  t['radicalbigg'] = 0x221A;\n  t['radicalbt'] = 0x221A;\n  t['radicaltp'] = 0x221A;\n  t['radicalvertex'] = 0x221A;\n  t['slashbig'] = 0x002F;\n  t['slashBig'] = 0x002F;\n  t['slashBigg'] = 0x002F;\n  t['slashbigg'] = 0x002F;\n  t['summationdisplay'] = 0x2211;\n  t['summationtext'] = 0x2211;\n  t['tildewide'] = 0x02DC;\n  t['tildewider'] = 0x02DC;\n  t['tildewidest'] = 0x02DC;\n  t['uniondisplay'] = 0x22C3;\n  t['unionmultidisplay'] = 0x228E;\n  t['unionmultitext'] = 0x228E;\n  t['unionsqdisplay'] = 0x2294;\n  t['unionsqtext'] = 0x2294;\n  t['uniontext'] = 0x22C3;\n  t['vextenddouble'] = 0x2225;\n  t['vextendsingle'] = 0x2223;\n});\nvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['space'] = 0x0020;\n  t['a1'] = 0x2701;\n  t['a2'] = 0x2702;\n  t['a202'] = 0x2703;\n  t['a3'] = 0x2704;\n  t['a4'] = 0x260E;\n  t['a5'] = 0x2706;\n  t['a119'] = 0x2707;\n  t['a118'] = 0x2708;\n  t['a117'] = 0x2709;\n  t['a11'] = 0x261B;\n  t['a12'] = 0x261E;\n  t['a13'] = 0x270C;\n  t['a14'] = 0x270D;\n  t['a15'] = 0x270E;\n  t['a16'] = 0x270F;\n  t['a105'] = 0x2710;\n  t['a17'] = 0x2711;\n  t['a18'] = 0x2712;\n  t['a19'] = 0x2713;\n  t['a20'] = 0x2714;\n  t['a21'] = 0x2715;\n  t['a22'] = 0x2716;\n  t['a23'] = 0x2717;\n  t['a24'] = 0x2718;\n  t['a25'] = 0x2719;\n  t['a26'] = 0x271A;\n  t['a27'] = 0x271B;\n  t['a28'] = 0x271C;\n  t['a6'] = 0x271D;\n  t['a7'] = 0x271E;\n  t['a8'] = 0x271F;\n  t['a9'] = 0x2720;\n  t['a10'] = 0x2721;\n  t['a29'] = 0x2722;\n  t['a30'] = 0x2723;\n  t['a31'] = 0x2724;\n  t['a32'] = 0x2725;\n  t['a33'] = 0x2726;\n  t['a34'] = 0x2727;\n  t['a35'] = 0x2605;\n  t['a36'] = 0x2729;\n  t['a37'] = 0x272A;\n  t['a38'] = 0x272B;\n  t['a39'] = 0x272C;\n  t['a40'] = 0x272D;\n  t['a41'] = 0x272E;\n  t['a42'] = 0x272F;\n  t['a43'] = 0x2730;\n  t['a44'] = 0x2731;\n  t['a45'] = 0x2732;\n  t['a46'] = 0x2733;\n  t['a47'] = 0x2734;\n  t['a48'] = 0x2735;\n  t['a49'] = 0x2736;\n  t['a50'] = 0x2737;\n  t['a51'] = 0x2738;\n  t['a52'] = 0x2739;\n  t['a53'] = 0x273A;\n  t['a54'] = 0x273B;\n  t['a55'] = 0x273C;\n  t['a56'] = 0x273D;\n  t['a57'] = 0x273E;\n  t['a58'] = 0x273F;\n  t['a59'] = 0x2740;\n  t['a60'] = 0x2741;\n  t['a61'] = 0x2742;\n  t['a62'] = 0x2743;\n  t['a63'] = 0x2744;\n  t['a64'] = 0x2745;\n  t['a65'] = 0x2746;\n  t['a66'] = 0x2747;\n  t['a67'] = 0x2748;\n  t['a68'] = 0x2749;\n  t['a69'] = 0x274A;\n  t['a70'] = 0x274B;\n  t['a71'] = 0x25CF;\n  t['a72'] = 0x274D;\n  t['a73'] = 0x25A0;\n  t['a74'] = 0x274F;\n  t['a203'] = 0x2750;\n  t['a75'] = 0x2751;\n  t['a204'] = 0x2752;\n  t['a76'] = 0x25B2;\n  t['a77'] = 0x25BC;\n  t['a78'] = 0x25C6;\n  t['a79'] = 0x2756;\n  t['a81'] = 0x25D7;\n  t['a82'] = 0x2758;\n  t['a83'] = 0x2759;\n  t['a84'] = 0x275A;\n  t['a97'] = 0x275B;\n  t['a98'] = 0x275C;\n  t['a99'] = 0x275D;\n  t['a100'] = 0x275E;\n  t['a101'] = 0x2761;\n  t['a102'] = 0x2762;\n  t['a103'] = 0x2763;\n  t['a104'] = 0x2764;\n  t['a106'] = 0x2765;\n  t['a107'] = 0x2766;\n  t['a108'] = 0x2767;\n  t['a112'] = 0x2663;\n  t['a111'] = 0x2666;\n  t['a110'] = 0x2665;\n  t['a109'] = 0x2660;\n  t['a120'] = 0x2460;\n  t['a121'] = 0x2461;\n  t['a122'] = 0x2462;\n  t['a123'] = 0x2463;\n  t['a124'] = 0x2464;\n  t['a125'] = 0x2465;\n  t['a126'] = 0x2466;\n  t['a127'] = 0x2467;\n  t['a128'] = 0x2468;\n  t['a129'] = 0x2469;\n  t['a130'] = 0x2776;\n  t['a131'] = 0x2777;\n  t['a132'] = 0x2778;\n  t['a133'] = 0x2779;\n  t['a134'] = 0x277A;\n  t['a135'] = 0x277B;\n  t['a136'] = 0x277C;\n  t['a137'] = 0x277D;\n  t['a138'] = 0x277E;\n  t['a139'] = 0x277F;\n  t['a140'] = 0x2780;\n  t['a141'] = 0x2781;\n  t['a142'] = 0x2782;\n  t['a143'] = 0x2783;\n  t['a144'] = 0x2784;\n  t['a145'] = 0x2785;\n  t['a146'] = 0x2786;\n  t['a147'] = 0x2787;\n  t['a148'] = 0x2788;\n  t['a149'] = 0x2789;\n  t['a150'] = 0x278A;\n  t['a151'] = 0x278B;\n  t['a152'] = 0x278C;\n  t['a153'] = 0x278D;\n  t['a154'] = 0x278E;\n  t['a155'] = 0x278F;\n  t['a156'] = 0x2790;\n  t['a157'] = 0x2791;\n  t['a158'] = 0x2792;\n  t['a159'] = 0x2793;\n  t['a160'] = 0x2794;\n  t['a161'] = 0x2192;\n  t['a163'] = 0x2194;\n  t['a164'] = 0x2195;\n  t['a196'] = 0x2798;\n  t['a165'] = 0x2799;\n  t['a192'] = 0x279A;\n  t['a166'] = 0x279B;\n  t['a167'] = 0x279C;\n  t['a168'] = 0x279D;\n  t['a169'] = 0x279E;\n  t['a170'] = 0x279F;\n  t['a171'] = 0x27A0;\n  t['a172'] = 0x27A1;\n  t['a173'] = 0x27A2;\n  t['a162'] = 0x27A3;\n  t['a174'] = 0x27A4;\n  t['a175'] = 0x27A5;\n  t['a176'] = 0x27A6;\n  t['a177'] = 0x27A7;\n  t['a178'] = 0x27A8;\n  t['a179'] = 0x27A9;\n  t['a193'] = 0x27AA;\n  t['a180'] = 0x27AB;\n  t['a199'] = 0x27AC;\n  t['a181'] = 0x27AD;\n  t['a200'] = 0x27AE;\n  t['a182'] = 0x27AF;\n  t['a201'] = 0x27B1;\n  t['a183'] = 0x27B2;\n  t['a184'] = 0x27B3;\n  t['a197'] = 0x27B4;\n  t['a185'] = 0x27B5;\n  t['a194'] = 0x27B6;\n  t['a198'] = 0x27B7;\n  t['a186'] = 0x27B8;\n  t['a195'] = 0x27B9;\n  t['a187'] = 0x27BA;\n  t['a188'] = 0x27BB;\n  t['a189'] = 0x27BC;\n  t['a190'] = 0x27BD;\n  t['a191'] = 0x27BE;\n  t['a89'] = 0x2768;\n  t['a90'] = 0x2769;\n  t['a93'] = 0x276A;\n  t['a94'] = 0x276B;\n  t['a91'] = 0x276C;\n  t['a92'] = 0x276D;\n  t['a205'] = 0x276E;\n  t['a85'] = 0x276F;\n  t['a206'] = 0x2770;\n  t['a86'] = 0x2771;\n  t['a87'] = 0x2772;\n  t['a88'] = 0x2773;\n  t['a95'] = 0x2774;\n  t['a96'] = 0x2775;\n  t['.notdef'] = 0x0000;\n});\nexports.getGlyphsUnicode = getGlyphsUnicode;\nexports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nmodule.exports = function isNodeJS() {\n  return (typeof process === 'undefined' ? 'undefined' : _typeof(process)) === 'object' && process + '' === '[object process]';\n};\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = !__w_pdfjs_require__(13) && !__w_pdfjs_require__(14)(function () {\n  return Object.defineProperty(__w_pdfjs_require__(28)('div'), 'a', {\n    get: function get() {\n      return 7;\n    }\n  }).a != 7;\n});\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(6);\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toIObject = __w_pdfjs_require__(18);\nvar toLength = __w_pdfjs_require__(31);\nvar toAbsoluteIndex = __w_pdfjs_require__(84);\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      if (value != value) return true;\n    } else for (; length > index; index++) {\n      if (IS_INCLUDES || index in O) {\n        if (O[index] === el) return IS_INCLUDES || index || 0;\n      }\n    }return !IS_INCLUDES && -1;\n  };\n};\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar UNSCOPABLES = __w_pdfjs_require__(2)('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) __w_pdfjs_require__(12)(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar classof = __w_pdfjs_require__(33);\nvar test = {};\ntest[__w_pdfjs_require__(2)('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  __w_pdfjs_require__(9)(Object.prototype, 'toString', function toString() {\n    return '[object ' + classof(this) + ']';\n  }, true);\n}\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar LIBRARY = __w_pdfjs_require__(52);\nvar $export = __w_pdfjs_require__(5);\nvar redefine = __w_pdfjs_require__(9);\nvar hide = __w_pdfjs_require__(12);\nvar Iterators = __w_pdfjs_require__(19);\nvar $iterCreate = __w_pdfjs_require__(95);\nvar setToStringTag = __w_pdfjs_require__(25);\nvar getPrototypeOf = __w_pdfjs_require__(99);\nvar ITERATOR = __w_pdfjs_require__(2)('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys());\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar returnThis = function returnThis() {\n  return this;\n};\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function getMethod(kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS:\n        return function keys() {\n          return new Constructor(this, kind);\n        };\n      case VALUES:\n        return function values() {\n          return new Constructor(this, kind);\n        };\n    }\n    return function entries() {\n      return new Constructor(this, kind);\n    };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      setToStringTag(IteratorPrototype, TAG, true);\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() {\n      return $native.call(this);\n    };\n  }\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = false;\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar document = __w_pdfjs_require__(6).document;\nmodule.exports = document && document.documentElement;\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $iterators = __w_pdfjs_require__(100);\nvar getKeys = __w_pdfjs_require__(24);\nvar redefine = __w_pdfjs_require__(9);\nvar global = __w_pdfjs_require__(6);\nvar hide = __w_pdfjs_require__(12);\nvar Iterators = __w_pdfjs_require__(19);\nvar wks = __w_pdfjs_require__(2);\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\nvar DOMIterables = {\n  CSSRuleList: true,\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true,\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true,\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) {\n      if (!proto[key]) redefine(proto, key, $iterators[key], true);\n    }\n  }\n}\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar aFunction = __w_pdfjs_require__(17);\nvar SPECIES = __w_pdfjs_require__(2)('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(11);\nvar invoke = __w_pdfjs_require__(106);\nvar html = __w_pdfjs_require__(54);\nvar cel = __w_pdfjs_require__(28);\nvar global = __w_pdfjs_require__(6);\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function run() {\n  var id = +this;\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function listener(event) {\n  run.call(event.data);\n};\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) {\n      args.push(arguments[i++]);\n    }queue[++counter] = function () {\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  if (__w_pdfjs_require__(15)(process) == 'process') {\n    defer = function defer(id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  } else if (Dispatch && Dispatch.now) {\n    defer = function defer(id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function defer(id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function defer(id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  } else {\n    defer = function defer(id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (exec) {\n  try {\n    return {\n      e: false,\n      v: exec()\n    };\n  } catch (e) {\n    return {\n      e: true,\n      v: e\n    };\n  }\n};\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar isObject = __w_pdfjs_require__(3);\nvar newPromiseCapability = __w_pdfjs_require__(37);\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ITERATOR = __w_pdfjs_require__(2)('iterator');\nvar SAFE_CLOSING = false;\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () {\n    SAFE_CLOSING = true;\n  };\n  Array.from(riter, function () {\n    throw 2;\n  });\n} catch (e) {}\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () {\n      return { done: safe = true };\n    };\n    arr[ITERATOR] = function () {\n      return iter;\n    };\n    exec(arr);\n  } catch (e) {}\n  return safe;\n};\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(11);\nvar IObject = __w_pdfjs_require__(30);\nvar toObject = __w_pdfjs_require__(35);\nvar toLength = __w_pdfjs_require__(31);\nvar asc = __w_pdfjs_require__(113);\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (; length > index; index++) {\n      if (NO_HOLES || index in self) {\n        val = self[index];\n        res = f(val, index, O);\n        if (TYPE) {\n          if (IS_MAP) result[index] = res;else if (res) switch (TYPE) {\n            case 3:\n              return true;\n            case 5:\n              return val;\n            case 6:\n              return index;\n            case 2:\n              result.push(val);\n          } else if (IS_EVERY) return false;\n        }\n      }\n    }return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it, TYPE) {\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n  return it;\n};\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChunkedStreamManager = exports.ChunkedStream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar ChunkedStream = function ChunkedStreamClosure() {\n  function ChunkedStream(length, chunkSize, manager) {\n    this.bytes = new Uint8Array(length);\n    this.start = 0;\n    this.pos = 0;\n    this.end = length;\n    this.chunkSize = chunkSize;\n    this.loadedChunks = [];\n    this.numChunksLoaded = 0;\n    this.numChunks = Math.ceil(length / chunkSize);\n    this.manager = manager;\n    this.progressiveDataLength = 0;\n    this.lastSuccessfulEnsureByteChunk = -1;\n  }\n  ChunkedStream.prototype = {\n    getMissingChunks: function ChunkedStream_getMissingChunks() {\n      var chunks = [];\n      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          chunks.push(chunk);\n        }\n      }\n      return chunks;\n    },\n    getBaseStreams: function ChunkedStream_getBaseStreams() {\n      return [this];\n    },\n    allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n      return this.numChunksLoaded === this.numChunks;\n    },\n    onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n      var end = begin + chunk.byteLength;\n      if (begin % this.chunkSize !== 0) {\n        throw new Error('Bad begin offset: ' + begin);\n      }\n      var length = this.bytes.length;\n      if (end % this.chunkSize !== 0 && end !== length) {\n        throw new Error('Bad end offset: ' + end);\n      }\n      this.bytes.set(new Uint8Array(chunk), begin);\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n      var position = this.progressiveDataLength;\n      var beginChunk = Math.floor(position / this.chunkSize);\n      this.bytes.set(new Uint8Array(data), position);\n      position += data.byteLength;\n      this.progressiveDataLength = position;\n      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    ensureByte: function ChunkedStream_ensureByte(pos) {\n      var chunk = Math.floor(pos / this.chunkSize);\n      if (chunk === this.lastSuccessfulEnsureByteChunk) {\n        return;\n      }\n      if (!this.loadedChunks[chunk]) {\n        throw new _util.MissingDataException(pos, pos + 1);\n      }\n      this.lastSuccessfulEnsureByteChunk = chunk;\n    },\n    ensureRange: function ChunkedStream_ensureRange(begin, end) {\n      if (begin >= end) {\n        return;\n      }\n      if (end <= this.progressiveDataLength) {\n        return;\n      }\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          throw new _util.MissingDataException(begin, end);\n        }\n      }\n    },\n    nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n      var chunk,\n          numChunks = this.numChunks;\n      for (var i = 0; i < numChunks; ++i) {\n        chunk = (beginChunk + i) % numChunks;\n        if (!this.loadedChunks[chunk]) {\n          return chunk;\n        }\n      }\n      return null;\n    },\n    hasChunk: function ChunkedStream_hasChunk(chunk) {\n      return !!this.loadedChunks[chunk];\n    },\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function ChunkedStream_getByte() {\n      var pos = this.pos;\n      if (pos >= this.end) {\n        return -1;\n      }\n      this.ensureByte(pos);\n      return this.bytes[this.pos++];\n    },\n    getUint16: function ChunkedStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function ChunkedStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function ChunkedStream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        this.ensureRange(pos, strEnd);\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.ensureRange(pos, end);\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function ChunkedStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function ChunkedStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    getByteRange: function ChunkedStream_getBytes(begin, end) {\n      this.ensureRange(begin, end);\n      return this.bytes.subarray(begin, end);\n    },\n    skip: function ChunkedStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function ChunkedStream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function ChunkedStream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n      this.ensureRange(start, start + length);\n      function ChunkedStreamSubstream() {}\n      ChunkedStreamSubstream.prototype = Object.create(this);\n      ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n        var chunkSize = this.chunkSize;\n        var beginChunk = Math.floor(this.start / chunkSize);\n        var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n        var missingChunks = [];\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!this.loadedChunks[chunk]) {\n            missingChunks.push(chunk);\n          }\n        }\n        return missingChunks;\n      };\n      var subStream = new ChunkedStreamSubstream();\n      subStream.pos = subStream.start = start;\n      subStream.end = start + length || this.end;\n      subStream.dict = dict;\n      return subStream;\n    }\n  };\n  return ChunkedStream;\n}();\nvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n  function ChunkedStreamManager(pdfNetworkStream, args) {\n    var chunkSize = args.rangeChunkSize;\n    var length = args.length;\n    this.stream = new ChunkedStream(length, chunkSize, this);\n    this.length = length;\n    this.chunkSize = chunkSize;\n    this.pdfNetworkStream = pdfNetworkStream;\n    this.url = args.url;\n    this.disableAutoFetch = args.disableAutoFetch;\n    this.msgHandler = args.msgHandler;\n    this.currRequestId = 0;\n    this.chunksNeededByRequest = Object.create(null);\n    this.requestsByChunk = Object.create(null);\n    this.promisesByRequest = Object.create(null);\n    this.progressiveDataLength = 0;\n    this.aborted = false;\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n  }\n  ChunkedStreamManager.prototype = {\n    onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n      var _this = this;\n\n      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n      if (!rangeReader.isStreamingSupported) {\n        rangeReader.onProgress = this.onProgress.bind(this);\n      }\n      var chunks = [],\n          loaded = 0;\n      var manager = this;\n      var promise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            if (!chunk.done) {\n              var data = chunk.value;\n              chunks.push(data);\n              loaded += (0, _util.arrayByteLength)(data);\n              if (rangeReader.isStreamingSupported) {\n                manager.onProgress({ loaded: loaded });\n              }\n              rangeReader.read().then(readChunk, reject);\n              return;\n            }\n            var chunkData = (0, _util.arraysToBytes)(chunks);\n            chunks = null;\n            resolve(chunkData);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        rangeReader.read().then(readChunk, reject);\n      });\n      promise.then(function (data) {\n        if (_this.aborted) {\n          return;\n        }\n        _this.onReceiveData({\n          chunk: data,\n          begin: begin\n        });\n      });\n    },\n    requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n      var missingChunks = this.stream.getMissingChunks();\n      this._requestChunks(missingChunks);\n      return this._loadedStreamCapability.promise;\n    },\n    _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n      var requestId = this.currRequestId++;\n      var i, ii;\n      var chunksNeeded = Object.create(null);\n      this.chunksNeededByRequest[requestId] = chunksNeeded;\n      for (i = 0, ii = chunks.length; i < ii; i++) {\n        if (!this.stream.hasChunk(chunks[i])) {\n          chunksNeeded[chunks[i]] = true;\n        }\n      }\n      if ((0, _util.isEmptyObj)(chunksNeeded)) {\n        return Promise.resolve();\n      }\n      var capability = (0, _util.createPromiseCapability)();\n      this.promisesByRequest[requestId] = capability;\n      var chunksToRequest = [];\n      for (var chunk in chunksNeeded) {\n        chunk = chunk | 0;\n        if (!(chunk in this.requestsByChunk)) {\n          this.requestsByChunk[chunk] = [];\n          chunksToRequest.push(chunk);\n        }\n        this.requestsByChunk[chunk].push(requestId);\n      }\n      if (!chunksToRequest.length) {\n        return capability.promise;\n      }\n      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n      for (i = 0; i < groupedChunksToRequest.length; ++i) {\n        var groupedChunk = groupedChunksToRequest[i];\n        var begin = groupedChunk.beginChunk * this.chunkSize;\n        var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n        this.sendRequest(begin, end);\n      }\n      return capability.promise;\n    },\n    getStream: function ChunkedStreamManager_getStream() {\n      return this.stream;\n    },\n    requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n      end = Math.min(end, this.length);\n      var beginChunk = this.getBeginChunk(begin);\n      var endChunk = this.getEndChunk(end);\n      var chunks = [];\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        chunks.push(chunk);\n      }\n      return this._requestChunks(chunks);\n    },\n    requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n      ranges = ranges || [];\n      var chunksToRequest = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var beginChunk = this.getBeginChunk(ranges[i].begin);\n        var endChunk = this.getEndChunk(ranges[i].end);\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!chunksToRequest.includes(chunk)) {\n            chunksToRequest.push(chunk);\n          }\n        }\n      }\n      chunksToRequest.sort(function (a, b) {\n        return a - b;\n      });\n      return this._requestChunks(chunksToRequest);\n    },\n    groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n      var groupedChunks = [];\n      var beginChunk = -1;\n      var prevChunk = -1;\n      for (var i = 0; i < chunks.length; ++i) {\n        var chunk = chunks[i];\n        if (beginChunk < 0) {\n          beginChunk = chunk;\n        }\n        if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: prevChunk + 1\n          });\n          beginChunk = chunk;\n        }\n        if (i + 1 === chunks.length) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: chunk + 1\n          });\n        }\n        prevChunk = chunk;\n      }\n      return groupedChunks;\n    },\n    onProgress: function ChunkedStreamManager_onProgress(args) {\n      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n      this.msgHandler.send('DocProgress', {\n        loaded: bytesLoaded,\n        total: this.length\n      });\n    },\n    onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n      var chunk = args.chunk;\n      var isProgressive = args.begin === undefined;\n      var begin = isProgressive ? this.progressiveDataLength : args.begin;\n      var end = begin + chunk.byteLength;\n      var beginChunk = Math.floor(begin / this.chunkSize);\n      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n      if (isProgressive) {\n        this.stream.onReceiveProgressiveData(chunk);\n        this.progressiveDataLength = end;\n      } else {\n        this.stream.onReceiveData(begin, chunk);\n      }\n      if (this.stream.allChunksLoaded()) {\n        this._loadedStreamCapability.resolve(this.stream);\n      }\n      var loadedRequests = [];\n      var i, requestId;\n      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n        var requestIds = this.requestsByChunk[chunk] || [];\n        delete this.requestsByChunk[chunk];\n        for (i = 0; i < requestIds.length; ++i) {\n          requestId = requestIds[i];\n          var chunksNeeded = this.chunksNeededByRequest[requestId];\n          if (chunk in chunksNeeded) {\n            delete chunksNeeded[chunk];\n          }\n          if (!(0, _util.isEmptyObj)(chunksNeeded)) {\n            continue;\n          }\n          loadedRequests.push(requestId);\n        }\n      }\n      if (!this.disableAutoFetch && (0, _util.isEmptyObj)(this.requestsByChunk)) {\n        var nextEmptyChunk;\n        if (this.stream.numChunksLoaded === 1) {\n          var lastChunk = this.stream.numChunks - 1;\n          if (!this.stream.hasChunk(lastChunk)) {\n            nextEmptyChunk = lastChunk;\n          }\n        } else {\n          nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n        }\n        if (Number.isInteger(nextEmptyChunk)) {\n          this._requestChunks([nextEmptyChunk]);\n        }\n      }\n      for (i = 0; i < loadedRequests.length; ++i) {\n        requestId = loadedRequests[i];\n        var capability = this.promisesByRequest[requestId];\n        delete this.promisesByRequest[requestId];\n        capability.resolve();\n      }\n      this.msgHandler.send('DocProgress', {\n        loaded: this.stream.numChunksLoaded * this.chunkSize,\n        total: this.length\n      });\n    },\n    onError: function ChunkedStreamManager_onError(err) {\n      this._loadedStreamCapability.reject(err);\n    },\n    getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n      var chunk = Math.floor(begin / this.chunkSize);\n      return chunk;\n    },\n    getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n      return chunk;\n    },\n    abort: function ChunkedStreamManager_abort() {\n      this.aborted = true;\n      if (this.pdfNetworkStream) {\n        this.pdfNetworkStream.cancelAllRequests('abort');\n      }\n      for (var requestId in this.promisesByRequest) {\n        var capability = this.promisesByRequest[requestId];\n        capability.reject(new Error('Request was aborted'));\n      }\n    }\n  };\n  return ChunkedStreamManager;\n}();\nexports.ChunkedStream = ChunkedStream;\nexports.ChunkedStreamManager = ChunkedStreamManager;\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FileSpec = exports.XRef = exports.ObjectLoader = exports.Catalog = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _parser = __w_pdfjs_require__(27);\n\nvar _chunked_stream = __w_pdfjs_require__(63);\n\nvar _crypto = __w_pdfjs_require__(68);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar Catalog = function CatalogClosure() {\n  function Catalog(pdfManager, xref, pageFactory) {\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.catDict = xref.getCatalogObj();\n    if (!(0, _primitives.isDict)(this.catDict)) {\n      throw new _util.FormatError('catalog object is not a dictionary');\n    }\n    this.fontCache = new _primitives.RefSetCache();\n    this.builtInCMapCache = Object.create(null);\n    this.pageKidsCountCache = new _primitives.RefSetCache();\n    this.pageFactory = pageFactory;\n    this.pagePromises = [];\n  }\n  Catalog.prototype = {\n    get metadata() {\n      var streamRef = this.catDict.getRaw('Metadata');\n      if (!(0, _primitives.isRef)(streamRef)) {\n        return (0, _util.shadow)(this, 'metadata', null);\n      }\n      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n      var stream = this.xref.fetch(streamRef, !encryptMetadata);\n      var metadata;\n      if (stream && (0, _primitives.isDict)(stream.dict)) {\n        var type = stream.dict.get('Type');\n        var subtype = stream.dict.get('Subtype');\n        if ((0, _primitives.isName)(type, 'Metadata') && (0, _primitives.isName)(subtype, 'XML')) {\n          try {\n            metadata = (0, _util.stringToUTF8String)((0, _util.bytesToString)(stream.getBytes()));\n          } catch (e) {\n            if (e instanceof _util.MissingDataException) {\n              throw e;\n            }\n            (0, _util.info)('Skipping invalid metadata.');\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'metadata', metadata);\n    },\n    get toplevelPagesDict() {\n      var pagesObj = this.catDict.get('Pages');\n      if (!(0, _primitives.isDict)(pagesObj)) {\n        throw new _util.FormatError('invalid top-level pages dictionary');\n      }\n      return (0, _util.shadow)(this, 'toplevelPagesDict', pagesObj);\n    },\n    get documentOutline() {\n      var obj = null;\n      try {\n        obj = this.readDocumentOutline();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read document outline');\n      }\n      return (0, _util.shadow)(this, 'documentOutline', obj);\n    },\n    readDocumentOutline: function Catalog_readDocumentOutline() {\n      var obj = this.catDict.get('Outlines');\n      if (!(0, _primitives.isDict)(obj)) {\n        return null;\n      }\n      obj = obj.getRaw('First');\n      if (!(0, _primitives.isRef)(obj)) {\n        return null;\n      }\n      var root = { items: [] };\n      var queue = [{\n        obj: obj,\n        parent: root\n      }];\n      var processed = new _primitives.RefSet();\n      processed.put(obj);\n      var xref = this.xref,\n          blackColor = new Uint8Array(3);\n      while (queue.length > 0) {\n        var i = queue.shift();\n        var outlineDict = xref.fetchIfRef(i.obj);\n        if (outlineDict === null) {\n          continue;\n        }\n        if (!outlineDict.has('Title')) {\n          throw new _util.FormatError('Invalid outline item');\n        }\n        var data = {\n          url: null,\n          dest: null\n        };\n        Catalog.parseDestDictionary({\n          destDict: outlineDict,\n          resultObj: data,\n          docBaseUrl: this.pdfManager.docBaseUrl\n        });\n        var title = outlineDict.get('Title');\n        var flags = outlineDict.get('F') || 0;\n        var color = outlineDict.getArray('C'),\n            rgbColor = blackColor;\n        if (Array.isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n          rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(color, 0);\n        }\n        var outlineItem = {\n          dest: data.dest,\n          url: data.url,\n          unsafeUrl: data.unsafeUrl,\n          newWindow: data.newWindow,\n          title: (0, _util.stringToPDFString)(title),\n          color: rgbColor,\n          count: outlineDict.get('Count'),\n          bold: !!(flags & 2),\n          italic: !!(flags & 1),\n          items: []\n        };\n        i.parent.items.push(outlineItem);\n        obj = outlineDict.getRaw('First');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: outlineItem\n          });\n          processed.put(obj);\n        }\n        obj = outlineDict.getRaw('Next');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: i.parent\n          });\n          processed.put(obj);\n        }\n      }\n      return root.items.length > 0 ? root.items : null;\n    },\n    get numPages() {\n      var obj = this.toplevelPagesDict.get('Count');\n      if (!Number.isInteger(obj)) {\n        throw new _util.FormatError('page count in top level pages object is not an integer');\n      }\n      return (0, _util.shadow)(this, 'numPages', obj);\n    },\n    get destinations() {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dests = {},\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        obj = nameDictionaryRef;\n        obj.forEach(function catalogForEach(key, value) {\n          if (!value) {\n            return;\n          }\n          dests[key] = fetchDestination(value);\n        });\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          dests[name] = fetchDestination(names[name]);\n        }\n      }\n      return (0, _util.shadow)(this, 'destinations', dests);\n    },\n    getDestination: function Catalog_getDestination(destinationId) {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dest = null,\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        var value = nameDictionaryRef.get(destinationId);\n        if (value) {\n          dest = fetchDestination(value);\n        }\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        dest = fetchDestination(nameTree.get(destinationId));\n      }\n      return dest;\n    },\n    get pageLabels() {\n      var obj = null;\n      try {\n        obj = this.readPageLabels();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read page labels.');\n      }\n      return (0, _util.shadow)(this, 'pageLabels', obj);\n    },\n    readPageLabels: function Catalog_readPageLabels() {\n      var obj = this.catDict.getRaw('PageLabels');\n      if (!obj) {\n        return null;\n      }\n      var pageLabels = new Array(this.numPages);\n      var style = null;\n      var prefix = '';\n      var numberTree = new NumberTree(obj, this.xref);\n      var nums = numberTree.getAll();\n      var currentLabel = '',\n          currentIndex = 1;\n      for (var i = 0, ii = this.numPages; i < ii; i++) {\n        if (i in nums) {\n          var labelDict = nums[i];\n          if (!(0, _primitives.isDict)(labelDict)) {\n            throw new _util.FormatError('The PageLabel is not a dictionary.');\n          }\n          if (labelDict.has('Type') && !(0, _primitives.isName)(labelDict.get('Type'), 'PageLabel')) {\n            throw new _util.FormatError('Invalid type in PageLabel dictionary.');\n          }\n          if (labelDict.has('S')) {\n            var s = labelDict.get('S');\n            if (!(0, _primitives.isName)(s)) {\n              throw new _util.FormatError('Invalid style in PageLabel dictionary.');\n            }\n            style = s.name;\n          } else {\n            style = null;\n          }\n          if (labelDict.has('P')) {\n            var p = labelDict.get('P');\n            if (!(0, _util.isString)(p)) {\n              throw new _util.FormatError('Invalid prefix in PageLabel dictionary.');\n            }\n            prefix = (0, _util.stringToPDFString)(p);\n          } else {\n            prefix = '';\n          }\n          if (labelDict.has('St')) {\n            var st = labelDict.get('St');\n            if (!(Number.isInteger(st) && st >= 1)) {\n              throw new _util.FormatError('Invalid start in PageLabel dictionary.');\n            }\n            currentIndex = st;\n          } else {\n            currentIndex = 1;\n          }\n        }\n        switch (style) {\n          case 'D':\n            currentLabel = currentIndex;\n            break;\n          case 'R':\n          case 'r':\n            currentLabel = _util.Util.toRoman(currentIndex, style === 'r');\n            break;\n          case 'A':\n          case 'a':\n            var LIMIT = 26;\n            var A_UPPER_CASE = 0x41,\n                A_LOWER_CASE = 0x61;\n            var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n            var letterIndex = currentIndex - 1;\n            var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n            var charBuf = [];\n            for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n              charBuf.push(character);\n            }\n            currentLabel = charBuf.join('');\n            break;\n          default:\n            if (style) {\n              throw new _util.FormatError('Invalid style \"' + style + '\" in PageLabel dictionary.');\n            }\n            currentLabel = '';\n        }\n        pageLabels[i] = prefix + currentLabel;\n        currentIndex++;\n      }\n      return pageLabels;\n    },\n    get pageMode() {\n      var obj = this.catDict.get('PageMode');\n      var pageMode = 'UseNone';\n      if ((0, _primitives.isName)(obj)) {\n        switch (obj.name) {\n          case 'UseNone':\n          case 'UseOutlines':\n          case 'UseThumbs':\n          case 'FullScreen':\n          case 'UseOC':\n          case 'UseAttachments':\n            pageMode = obj.name;\n        }\n      }\n      return (0, _util.shadow)(this, 'pageMode', pageMode);\n    },\n    get attachments() {\n      var xref = this.xref;\n      var attachments = null,\n          nameTreeRef;\n      var obj = this.catDict.get('Names');\n      if (obj) {\n        nameTreeRef = obj.getRaw('EmbeddedFiles');\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var fs = new FileSpec(names[name], xref);\n          if (!attachments) {\n            attachments = Object.create(null);\n          }\n          attachments[(0, _util.stringToPDFString)(name)] = fs.serializable;\n        }\n      }\n      return (0, _util.shadow)(this, 'attachments', attachments);\n    },\n    get javaScript() {\n      var xref = this.xref;\n      var obj = this.catDict.get('Names');\n      var javaScript = null;\n      function appendIfJavaScriptDict(jsDict) {\n        var type = jsDict.get('S');\n        if (!(0, _primitives.isName)(type, 'JavaScript')) {\n          return;\n        }\n        var js = jsDict.get('JS');\n        if ((0, _primitives.isStream)(js)) {\n          js = (0, _util.bytesToString)(js.getBytes());\n        } else if (!(0, _util.isString)(js)) {\n          return;\n        }\n        if (!javaScript) {\n          javaScript = [];\n        }\n        javaScript.push((0, _util.stringToPDFString)(js));\n      }\n      if (obj && obj.has('JavaScript')) {\n        var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var jsDict = names[name];\n          if ((0, _primitives.isDict)(jsDict)) {\n            appendIfJavaScriptDict(jsDict);\n          }\n        }\n      }\n      var openactionDict = this.catDict.get('OpenAction');\n      if ((0, _primitives.isDict)(openactionDict, 'Action')) {\n        var actionType = openactionDict.get('S');\n        if ((0, _primitives.isName)(actionType, 'Named')) {\n          var action = openactionDict.get('N');\n          if ((0, _primitives.isName)(action, 'Print')) {\n            if (!javaScript) {\n              javaScript = [];\n            }\n            javaScript.push('print({});');\n          }\n        } else {\n          appendIfJavaScriptDict(openactionDict);\n        }\n      }\n      return (0, _util.shadow)(this, 'javaScript', javaScript);\n    },\n    cleanup: function Catalog_cleanup() {\n      var _this = this;\n\n      this.pageKidsCountCache.clear();\n      var promises = [];\n      this.fontCache.forEach(function (promise) {\n        promises.push(promise);\n      });\n      return Promise.all(promises).then(function (translatedFonts) {\n        for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n          var font = translatedFonts[i].dict;\n          delete font.translated;\n        }\n        _this.fontCache.clear();\n        _this.builtInCMapCache = Object.create(null);\n      });\n    },\n    getPage: function Catalog_getPage(pageIndex) {\n      var _this2 = this;\n\n      if (!(pageIndex in this.pagePromises)) {\n        this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              dict = _ref2[0],\n              ref = _ref2[1];\n\n          return _this2.pageFactory.createPage(pageIndex, dict, ref, _this2.fontCache, _this2.builtInCMapCache);\n        });\n      }\n      return this.pagePromises[pageIndex];\n    },\n    getPageDict: function Catalog_getPageDict(pageIndex) {\n      var capability = (0, _util.createPromiseCapability)();\n      var nodesToVisit = [this.catDict.getRaw('Pages')];\n      var count,\n          currentPageIndex = 0;\n      var xref = this.xref,\n          pageKidsCountCache = this.pageKidsCountCache;\n      function next() {\n        while (nodesToVisit.length) {\n          var currentNode = nodesToVisit.pop();\n          if ((0, _primitives.isRef)(currentNode)) {\n            count = pageKidsCountCache.get(currentNode);\n            if (count > 0 && currentPageIndex + count < pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n            xref.fetchAsync(currentNode).then(function (obj) {\n              if ((0, _primitives.isDict)(obj, 'Page') || (0, _primitives.isDict)(obj) && !obj.has('Kids')) {\n                if (pageIndex === currentPageIndex) {\n                  if (currentNode && !pageKidsCountCache.has(currentNode)) {\n                    pageKidsCountCache.put(currentNode, 1);\n                  }\n                  capability.resolve([obj, currentNode]);\n                } else {\n                  currentPageIndex++;\n                  next();\n                }\n                return;\n              }\n              nodesToVisit.push(obj);\n              next();\n            }, capability.reject);\n            return;\n          }\n          if (!(0, _primitives.isDict)(currentNode)) {\n            capability.reject(new _util.FormatError('page dictionary kid reference points to wrong type of object'));\n            return;\n          }\n          count = currentNode.get('Count');\n          if (Number.isInteger(count) && count >= 0) {\n            var objId = currentNode.objId;\n            if (objId && !pageKidsCountCache.has(objId)) {\n              pageKidsCountCache.put(objId, count);\n            }\n            if (currentPageIndex + count <= pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n          }\n          var kids = currentNode.get('Kids');\n          if (!Array.isArray(kids)) {\n            if ((0, _primitives.isName)(currentNode.get('Type'), 'Page') || !currentNode.has('Type') && currentNode.has('Contents')) {\n              if (currentPageIndex === pageIndex) {\n                capability.resolve([currentNode, null]);\n                return;\n              }\n              currentPageIndex++;\n              continue;\n            }\n            capability.reject(new _util.FormatError('page dictionary kids object is not an array'));\n            return;\n          }\n          for (var last = kids.length - 1; last >= 0; last--) {\n            nodesToVisit.push(kids[last]);\n          }\n        }\n        capability.reject(new Error('Page index ' + pageIndex + ' not found.'));\n      }\n      next();\n      return capability.promise;\n    },\n    getPageIndex: function Catalog_getPageIndex(pageRef) {\n      var xref = this.xref;\n      function pagesBeforeRef(kidRef) {\n        var total = 0;\n        var parentRef;\n        return xref.fetchAsync(kidRef).then(function (node) {\n          if ((0, _primitives.isRefsEqual)(kidRef, pageRef) && !(0, _primitives.isDict)(node, 'Page') && !((0, _primitives.isDict)(node) && !node.has('Type') && node.has('Contents'))) {\n            throw new _util.FormatError('The reference does not point to a /Page Dict.');\n          }\n          if (!node) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(node)) {\n            throw new _util.FormatError('node must be a Dict.');\n          }\n          parentRef = node.getRaw('Parent');\n          return node.getAsync('Parent');\n        }).then(function (parent) {\n          if (!parent) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(parent)) {\n            throw new _util.FormatError('parent must be a Dict.');\n          }\n          return parent.getAsync('Kids');\n        }).then(function (kids) {\n          if (!kids) {\n            return null;\n          }\n          var kidPromises = [];\n          var found = false;\n          for (var i = 0; i < kids.length; i++) {\n            var kid = kids[i];\n            if (!(0, _primitives.isRef)(kid)) {\n              throw new _util.FormatError('kid must be a Ref.');\n            }\n            if ((0, _primitives.isRefsEqual)(kid, kidRef)) {\n              found = true;\n              break;\n            }\n            kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n              if (!(0, _primitives.isDict)(kid)) {\n                throw new _util.FormatError('kid node must be a Dict.');\n              }\n              if (kid.has('Count')) {\n                var count = kid.get('Count');\n                total += count;\n              } else {\n                total++;\n              }\n            }));\n          }\n          if (!found) {\n            throw new _util.FormatError('kid ref not found in parents kids');\n          }\n          return Promise.all(kidPromises).then(function () {\n            return [total, parentRef];\n          });\n        });\n      }\n      var total = 0;\n      function next(ref) {\n        return pagesBeforeRef(ref).then(function (args) {\n          if (!args) {\n            return total;\n          }\n          var count = args[0];\n          var parentRef = args[1];\n          total += count;\n          return next(parentRef);\n        });\n      }\n      return next(pageRef);\n    }\n  };\n  Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n    function addDefaultProtocolToUrl(url) {\n      if (url.indexOf('www.') === 0) {\n        return 'http://' + url;\n      }\n      return url;\n    }\n    function tryConvertUrlEncoding(url) {\n      try {\n        return (0, _util.stringToUTF8String)(url);\n      } catch (e) {\n        return url;\n      }\n    }\n    var destDict = params.destDict;\n    if (!(0, _primitives.isDict)(destDict)) {\n      (0, _util.warn)('parseDestDictionary: \"destDict\" must be a dictionary.');\n      return;\n    }\n    var resultObj = params.resultObj;\n    if ((typeof resultObj === 'undefined' ? 'undefined' : _typeof(resultObj)) !== 'object') {\n      (0, _util.warn)('parseDestDictionary: \"resultObj\" must be an object.');\n      return;\n    }\n    var docBaseUrl = params.docBaseUrl || null;\n    var action = destDict.get('A'),\n        url,\n        dest;\n    if (!(0, _primitives.isDict)(action) && destDict.has('Dest')) {\n      action = destDict.get('Dest');\n    }\n    if ((0, _primitives.isDict)(action)) {\n      var actionType = action.get('S');\n      if (!(0, _primitives.isName)(actionType)) {\n        (0, _util.warn)('parseDestDictionary: Invalid type in Action dictionary.');\n        return;\n      }\n      var actionName = actionType.name;\n      switch (actionName) {\n        case 'URI':\n          url = action.get('URI');\n          if ((0, _primitives.isName)(url)) {\n            url = '/' + url.name;\n          } else if ((0, _util.isString)(url)) {\n            url = addDefaultProtocolToUrl(url);\n          }\n          break;\n        case 'GoTo':\n          dest = action.get('D');\n          break;\n        case 'Launch':\n        case 'GoToR':\n          var urlDict = action.get('F');\n          if ((0, _primitives.isDict)(urlDict)) {\n            url = urlDict.get('F') || null;\n          } else if ((0, _util.isString)(urlDict)) {\n            url = urlDict;\n          }\n          var remoteDest = action.get('D');\n          if (remoteDest) {\n            if ((0, _primitives.isName)(remoteDest)) {\n              remoteDest = remoteDest.name;\n            }\n            if ((0, _util.isString)(url)) {\n              var baseUrl = url.split('#')[0];\n              if ((0, _util.isString)(remoteDest)) {\n                url = baseUrl + '#' + remoteDest;\n              } else if (Array.isArray(remoteDest)) {\n                url = baseUrl + '#' + JSON.stringify(remoteDest);\n              }\n            }\n          }\n          var newWindow = action.get('NewWindow');\n          if ((0, _util.isBool)(newWindow)) {\n            resultObj.newWindow = newWindow;\n          }\n          break;\n        case 'Named':\n          var namedAction = action.get('N');\n          if ((0, _primitives.isName)(namedAction)) {\n            resultObj.action = namedAction.name;\n          }\n          break;\n        case 'JavaScript':\n          var jsAction = action.get('JS'),\n              js;\n          if ((0, _primitives.isStream)(jsAction)) {\n            js = (0, _util.bytesToString)(jsAction.getBytes());\n          } else if ((0, _util.isString)(jsAction)) {\n            js = jsAction;\n          }\n          if (js) {\n            var URL_OPEN_METHODS = ['app.launchURL', 'window.open'];\n            var regex = new RegExp('^\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\.') + ')\\\\((?:\\'|\\\")([^\\'\\\"]*)(?:\\'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))', 'i');\n            var jsUrl = regex.exec((0, _util.stringToPDFString)(js));\n            if (jsUrl && jsUrl[2]) {\n              url = jsUrl[2];\n              if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\n                resultObj.newWindow = true;\n              }\n              break;\n            }\n          }\n        default:\n          (0, _util.warn)('parseDestDictionary: Unsupported Action type \"' + actionName + '\".');\n          break;\n      }\n    } else if (destDict.has('Dest')) {\n      dest = destDict.get('Dest');\n    }\n    if ((0, _util.isString)(url)) {\n      url = tryConvertUrlEncoding(url);\n      var absoluteUrl = (0, _util.createValidAbsoluteUrl)(url, docBaseUrl);\n      if (absoluteUrl) {\n        resultObj.url = absoluteUrl.href;\n      }\n      resultObj.unsafeUrl = url;\n    }\n    if (dest) {\n      if ((0, _primitives.isName)(dest)) {\n        dest = dest.name;\n      }\n      if ((0, _util.isString)(dest) || Array.isArray(dest)) {\n        resultObj.dest = dest;\n      }\n    }\n  };\n  return Catalog;\n}();\nvar XRef = function XRefClosure() {\n  function XRef(stream, pdfManager) {\n    this.stream = stream;\n    this.pdfManager = pdfManager;\n    this.entries = [];\n    this.xrefstms = Object.create(null);\n    this.cache = [];\n    this.stats = {\n      streamTypes: [],\n      fontTypes: []\n    };\n  }\n  XRef.prototype = {\n    setStartXRef: function XRef_setStartXRef(startXRef) {\n      this.startXRefQueue = [startXRef];\n    },\n    parse: function XRef_parse(recoveryMode) {\n      var trailerDict;\n      if (!recoveryMode) {\n        trailerDict = this.readXRef();\n      } else {\n        (0, _util.warn)('Indexing all PDF objects');\n        trailerDict = this.indexObjects();\n      }\n      trailerDict.assignXref(this);\n      this.trailer = trailerDict;\n      var encrypt = trailerDict.get('Encrypt');\n      if ((0, _primitives.isDict)(encrypt)) {\n        var ids = trailerDict.get('ID');\n        var fileId = ids && ids.length ? ids[0] : '';\n        encrypt.suppressEncryption = true;\n        this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n      }\n      if (!(this.root = trailerDict.get('Root'))) {\n        throw new _util.FormatError('Invalid root reference');\n      }\n    },\n    processXRefTable: function XRef_processXRefTable(parser) {\n      if (!('tableState' in this)) {\n        this.tableState = {\n          entryNum: 0,\n          streamPos: parser.lexer.stream.pos,\n          parserBuf1: parser.buf1,\n          parserBuf2: parser.buf2\n        };\n      }\n      var obj = this.readXRefTable(parser);\n      if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n        throw new _util.FormatError('Invalid XRef table: could not find trailer dictionary');\n      }\n      var dict = parser.getObj();\n      if (!(0, _primitives.isDict)(dict) && dict.dict) {\n        dict = dict.dict;\n      }\n      if (!(0, _primitives.isDict)(dict)) {\n        throw new _util.FormatError('Invalid XRef table: could not parse trailer dictionary');\n      }\n      delete this.tableState;\n      return dict;\n    },\n    readXRefTable: function XRef_readXRefTable(parser) {\n      var stream = parser.lexer.stream;\n      var tableState = this.tableState;\n      stream.pos = tableState.streamPos;\n      parser.buf1 = tableState.parserBuf1;\n      parser.buf2 = tableState.parserBuf2;\n      var obj;\n      while (true) {\n        if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n          if ((0, _primitives.isCmd)(obj = parser.getObj(), 'trailer')) {\n            break;\n          }\n          tableState.firstEntryNum = obj;\n          tableState.entryCount = parser.getObj();\n        }\n        var first = tableState.firstEntryNum;\n        var count = tableState.entryCount;\n        if (!Number.isInteger(first) || !Number.isInteger(count)) {\n          throw new _util.FormatError('Invalid XRef table: wrong types in subsection header');\n        }\n        for (var i = tableState.entryNum; i < count; i++) {\n          tableState.streamPos = stream.pos;\n          tableState.entryNum = i;\n          tableState.parserBuf1 = parser.buf1;\n          tableState.parserBuf2 = parser.buf2;\n          var entry = {};\n          entry.offset = parser.getObj();\n          entry.gen = parser.getObj();\n          var type = parser.getObj();\n          if ((0, _primitives.isCmd)(type, 'f')) {\n            entry.free = true;\n          } else if ((0, _primitives.isCmd)(type, 'n')) {\n            entry.uncompressed = true;\n          }\n          if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n            throw new _util.FormatError('Invalid entry in XRef subsection: ' + first + ', ' + count);\n          }\n          if (i === 0 && entry.free && first === 1) {\n            first = 0;\n          }\n          if (!this.entries[i + first]) {\n            this.entries[i + first] = entry;\n          }\n        }\n        tableState.entryNum = 0;\n        tableState.streamPos = stream.pos;\n        tableState.parserBuf1 = parser.buf1;\n        tableState.parserBuf2 = parser.buf2;\n        delete tableState.firstEntryNum;\n        delete tableState.entryCount;\n      }\n      if (this.entries[0] && !this.entries[0].free) {\n        throw new _util.FormatError('Invalid XRef table: unexpected first object');\n      }\n      return obj;\n    },\n    processXRefStream: function XRef_processXRefStream(stream) {\n      if (!('streamState' in this)) {\n        var streamParameters = stream.dict;\n        var byteWidths = streamParameters.get('W');\n        var range = streamParameters.get('Index');\n        if (!range) {\n          range = [0, streamParameters.get('Size')];\n        }\n        this.streamState = {\n          entryRanges: range,\n          byteWidths: byteWidths,\n          entryNum: 0,\n          streamPos: stream.pos\n        };\n      }\n      this.readXRefStream(stream);\n      delete this.streamState;\n      return stream.dict;\n    },\n    readXRefStream: function XRef_readXRefStream(stream) {\n      var i, j;\n      var streamState = this.streamState;\n      stream.pos = streamState.streamPos;\n      var byteWidths = streamState.byteWidths;\n      var typeFieldWidth = byteWidths[0];\n      var offsetFieldWidth = byteWidths[1];\n      var generationFieldWidth = byteWidths[2];\n      var entryRanges = streamState.entryRanges;\n      while (entryRanges.length > 0) {\n        var first = entryRanges[0];\n        var n = entryRanges[1];\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n          throw new _util.FormatError('Invalid XRef range fields: ' + first + ', ' + n);\n        }\n        if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n          throw new _util.FormatError('Invalid XRef entry fields length: ' + first + ', ' + n);\n        }\n        for (i = streamState.entryNum; i < n; ++i) {\n          streamState.entryNum = i;\n          streamState.streamPos = stream.pos;\n          var type = 0,\n              offset = 0,\n              generation = 0;\n          for (j = 0; j < typeFieldWidth; ++j) {\n            type = type << 8 | stream.getByte();\n          }\n          if (typeFieldWidth === 0) {\n            type = 1;\n          }\n          for (j = 0; j < offsetFieldWidth; ++j) {\n            offset = offset << 8 | stream.getByte();\n          }\n          for (j = 0; j < generationFieldWidth; ++j) {\n            generation = generation << 8 | stream.getByte();\n          }\n          var entry = {};\n          entry.offset = offset;\n          entry.gen = generation;\n          switch (type) {\n            case 0:\n              entry.free = true;\n              break;\n            case 1:\n              entry.uncompressed = true;\n              break;\n            case 2:\n              break;\n            default:\n              throw new _util.FormatError('Invalid XRef entry type: ' + type);\n          }\n          if (!this.entries[first + i]) {\n            this.entries[first + i] = entry;\n          }\n        }\n        streamState.entryNum = 0;\n        streamState.streamPos = stream.pos;\n        entryRanges.splice(0, 2);\n      }\n    },\n    indexObjects: function XRef_indexObjects() {\n      var TAB = 0x9,\n          LF = 0xA,\n          CR = 0xD,\n          SPACE = 0x20;\n      var PERCENT = 0x25,\n          LT = 0x3C;\n      function readToken(data, offset) {\n        var token = '',\n            ch = data[offset];\n        while (ch !== LF && ch !== CR && ch !== LT) {\n          if (++offset >= data.length) {\n            break;\n          }\n          token += String.fromCharCode(ch);\n          ch = data[offset];\n        }\n        return token;\n      }\n      function skipUntil(data, offset, what) {\n        var length = what.length,\n            dataLength = data.length;\n        var skipped = 0;\n        while (offset < dataLength) {\n          var i = 0;\n          while (i < length && data[offset + i] === what[i]) {\n            ++i;\n          }\n          if (i >= length) {\n            break;\n          }\n          offset++;\n          skipped++;\n        }\n        return skipped;\n      }\n      var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n      var endobjRegExp = /\\bendobj[\\b\\s]$/;\n      var nestedObjRegExp = /\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s])$/;\n      var CHECK_CONTENT_LENGTH = 25;\n      var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n      var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n      var objBytes = new Uint8Array([111, 98, 106]);\n      var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n      this.entries.length = 0;\n      var stream = this.stream;\n      stream.pos = 0;\n      var buffer = stream.getBytes();\n      var position = stream.start,\n          length = buffer.length;\n      var trailers = [],\n          xrefStms = [];\n      while (position < length) {\n        var ch = buffer[position];\n        if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n          ++position;\n          continue;\n        }\n        if (ch === PERCENT) {\n          do {\n            ++position;\n            if (position >= length) {\n              break;\n            }\n            ch = buffer[position];\n          } while (ch !== LF && ch !== CR);\n          continue;\n        }\n        var token = readToken(buffer, position);\n        var m;\n        if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n          position += skipUntil(buffer, position, trailerBytes);\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else if (m = objRegExp.exec(token)) {\n          if (typeof this.entries[m[1]] === 'undefined') {\n            this.entries[m[1]] = {\n              offset: position - stream.start,\n              gen: m[2] | 0,\n              uncompressed: true\n            };\n          }\n          var contentLength = void 0,\n              startPos = position + token.length;\n          while (startPos < buffer.length) {\n            var endPos = startPos + skipUntil(buffer, startPos, objBytes) + 4;\n            contentLength = endPos - position;\n            var checkPos = Math.max(endPos - CHECK_CONTENT_LENGTH, startPos);\n            var tokenStr = (0, _util.bytesToString)(buffer.subarray(checkPos, endPos));\n            if (endobjRegExp.test(tokenStr)) {\n              break;\n            } else {\n              var objToken = nestedObjRegExp.exec(tokenStr);\n              if (objToken && objToken[1]) {\n                (0, _util.warn)('indexObjects: Found new \"obj\" inside of another \"obj\", ' + 'caused by missing \"endobj\" -- trying to recover.');\n                contentLength -= objToken[1].length;\n                break;\n              }\n            }\n            startPos += contentLength;\n          }\n          var content = buffer.subarray(position, position + contentLength);\n          var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n          if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n            xrefStms.push(position - stream.start);\n            this.xrefstms[position - stream.start] = 1;\n          }\n          position += contentLength;\n        } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else {\n          position += token.length + 1;\n        }\n      }\n      var i, ii;\n      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n        this.startXRefQueue.push(xrefStms[i]);\n        this.readXRef(true);\n      }\n      var dict;\n      for (i = 0, ii = trailers.length; i < ii; ++i) {\n        stream.pos = trailers[i];\n        var parser = new _parser.Parser(new _parser.Lexer(stream), true, this, true);\n        var obj = parser.getObj();\n        if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n          continue;\n        }\n        dict = parser.getObj();\n        if (!(0, _primitives.isDict)(dict)) {\n          continue;\n        }\n        if (dict.has('ID')) {\n          return dict;\n        }\n      }\n      if (dict) {\n        return dict;\n      }\n      throw new _util.InvalidPDFException('Invalid PDF structure');\n    },\n    readXRef: function XRef_readXRef(recoveryMode) {\n      var stream = this.stream;\n      var startXRefParsedCache = Object.create(null);\n      try {\n        while (this.startXRefQueue.length) {\n          var startXRef = this.startXRefQueue[0];\n          if (startXRefParsedCache[startXRef]) {\n            (0, _util.warn)('readXRef - skipping XRef table since it was already parsed.');\n            this.startXRefQueue.shift();\n            continue;\n          }\n          startXRefParsedCache[startXRef] = true;\n          stream.pos = startXRef + stream.start;\n          var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n          var obj = parser.getObj();\n          var dict;\n          if ((0, _primitives.isCmd)(obj, 'xref')) {\n            dict = this.processXRefTable(parser);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            obj = dict.get('XRefStm');\n            if (Number.isInteger(obj)) {\n              var pos = obj;\n              if (!(pos in this.xrefstms)) {\n                this.xrefstms[pos] = 1;\n                this.startXRefQueue.push(pos);\n              }\n            }\n          } else if (Number.isInteger(obj)) {\n            if (!Number.isInteger(parser.getObj()) || !(0, _primitives.isCmd)(parser.getObj(), 'obj') || !(0, _primitives.isStream)(obj = parser.getObj())) {\n              throw new _util.FormatError('Invalid XRef stream');\n            }\n            dict = this.processXRefStream(obj);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            if (!dict) {\n              throw new _util.FormatError('Failed to read XRef stream');\n            }\n          } else {\n            throw new _util.FormatError('Invalid XRef stream header');\n          }\n          obj = dict.get('Prev');\n          if (Number.isInteger(obj)) {\n            this.startXRefQueue.push(obj);\n          } else if ((0, _primitives.isRef)(obj)) {\n            this.startXRefQueue.push(obj.num);\n          }\n          this.startXRefQueue.shift();\n        }\n        return this.topDict;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        (0, _util.info)('(while reading XRef): ' + e);\n      }\n      if (recoveryMode) {\n        return;\n      }\n      throw new _util.XRefParseException();\n    },\n    getEntry: function XRef_getEntry(i) {\n      var xrefEntry = this.entries[i];\n      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n        return xrefEntry;\n      }\n      return null;\n    },\n    fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return obj;\n      }\n      return this.fetch(obj, suppressEncryption);\n    },\n    fetch: function XRef_fetch(ref, suppressEncryption) {\n      if (!(0, _primitives.isRef)(ref)) {\n        throw new Error('ref object is not a reference');\n      }\n      var num = ref.num;\n      if (num in this.cache) {\n        var cacheEntry = this.cache[num];\n        if (cacheEntry instanceof _primitives.Dict && !cacheEntry.objId) {\n          cacheEntry.objId = ref.toString();\n        }\n        return cacheEntry;\n      }\n      var xrefEntry = this.getEntry(num);\n      if (xrefEntry === null) {\n        return this.cache[num] = null;\n      }\n      if (xrefEntry.uncompressed) {\n        xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n      } else {\n        xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n      }\n      if ((0, _primitives.isDict)(xrefEntry)) {\n        xrefEntry.objId = ref.toString();\n      } else if ((0, _primitives.isStream)(xrefEntry)) {\n        xrefEntry.dict.objId = ref.toString();\n      }\n      return xrefEntry;\n    },\n    fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n      var gen = ref.gen;\n      var num = ref.num;\n      if (xrefEntry.gen !== gen) {\n        throw new _util.FormatError('inconsistent generation in XRef');\n      }\n      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n      var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n      var obj1 = parser.getObj();\n      var obj2 = parser.getObj();\n      var obj3 = parser.getObj();\n      if (!Number.isInteger(obj1)) {\n        obj1 = parseInt(obj1, 10);\n      }\n      if (!Number.isInteger(obj2)) {\n        obj2 = parseInt(obj2, 10);\n      }\n      if (obj1 !== num || obj2 !== gen || !(0, _primitives.isCmd)(obj3)) {\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (obj3.cmd !== 'obj') {\n        if (obj3.cmd.indexOf('obj') === 0) {\n          num = parseInt(obj3.cmd.substring(3), 10);\n          if (!Number.isNaN(num)) {\n            return num;\n          }\n        }\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (this.encrypt && !suppressEncryption) {\n        xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n      } else {\n        xrefEntry = parser.getObj();\n      }\n      if (!(0, _primitives.isStream)(xrefEntry)) {\n        this.cache[num] = xrefEntry;\n      }\n      return xrefEntry;\n    },\n    fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n      var tableOffset = xrefEntry.offset;\n      var stream = this.fetch(new _primitives.Ref(tableOffset, 0));\n      if (!(0, _primitives.isStream)(stream)) {\n        throw new _util.FormatError('bad ObjStm stream');\n      }\n      var first = stream.dict.get('First');\n      var n = stream.dict.get('N');\n      if (!Number.isInteger(first) || !Number.isInteger(n)) {\n        throw new _util.FormatError('invalid first and n parameters for ObjStm stream');\n      }\n      var parser = new _parser.Parser(new _parser.Lexer(stream), false, this);\n      parser.allowStreams = true;\n      var i,\n          entries = [],\n          num,\n          nums = [];\n      for (i = 0; i < n; ++i) {\n        num = parser.getObj();\n        if (!Number.isInteger(num)) {\n          throw new _util.FormatError('invalid object number in the ObjStm stream: ' + num);\n        }\n        nums.push(num);\n        var offset = parser.getObj();\n        if (!Number.isInteger(offset)) {\n          throw new _util.FormatError('invalid object offset in the ObjStm stream: ' + offset);\n        }\n      }\n      for (i = 0; i < n; ++i) {\n        entries.push(parser.getObj());\n        if ((0, _primitives.isCmd)(parser.buf1, 'endobj')) {\n          parser.shift();\n        }\n        num = nums[i];\n        var entry = this.entries[num];\n        if (entry && entry.offset === tableOffset && entry.gen === i) {\n          this.cache[num] = entries[i];\n        }\n      }\n      xrefEntry = entries[xrefEntry.gen];\n      if (xrefEntry === undefined) {\n        throw new _util.FormatError('bad XRef entry for compressed object');\n      }\n      return xrefEntry;\n    },\n    fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return Promise.resolve(obj);\n      }\n      return this.fetchAsync(obj, suppressEncryption);\n    },\n    fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n      var streamManager = this.stream.manager;\n      var xref = this;\n      return new Promise(function tryFetch(resolve, reject) {\n        try {\n          resolve(xref.fetch(ref, suppressEncryption));\n        } catch (e) {\n          if (e instanceof _util.MissingDataException) {\n            streamManager.requestRange(e.begin, e.end).then(function () {\n              tryFetch(resolve, reject);\n            }, reject);\n            return;\n          }\n          reject(e);\n        }\n      });\n    },\n    getCatalogObj: function XRef_getCatalogObj() {\n      return this.root;\n    }\n  };\n  return XRef;\n}();\nvar NameOrNumberTree = function NameOrNumberTreeClosure() {\n  function NameOrNumberTree(root, xref) {\n    (0, _util.unreachable)('Cannot initialize NameOrNumberTree.');\n  }\n  NameOrNumberTree.prototype = {\n    getAll: function NameOrNumberTree_getAll() {\n      var dict = Object.create(null);\n      if (!this.root) {\n        return dict;\n      }\n      var xref = this.xref;\n      var processed = new _primitives.RefSet();\n      processed.put(this.root);\n      var queue = [this.root];\n      while (queue.length > 0) {\n        var i, n;\n        var obj = xref.fetchIfRef(queue.shift());\n        if (!(0, _primitives.isDict)(obj)) {\n          continue;\n        }\n        if (obj.has('Kids')) {\n          var kids = obj.get('Kids');\n          for (i = 0, n = kids.length; i < n; i++) {\n            var kid = kids[i];\n            if (processed.has(kid)) {\n              throw new _util.FormatError('Duplicate entry in \"' + this._type + '\" tree.');\n            }\n            queue.push(kid);\n            processed.put(kid);\n          }\n          continue;\n        }\n        var entries = obj.get(this._type);\n        if (Array.isArray(entries)) {\n          for (i = 0, n = entries.length; i < n; i += 2) {\n            dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n          }\n        }\n      }\n      return dict;\n    },\n    get: function NameOrNumberTree_get(key) {\n      if (!this.root) {\n        return null;\n      }\n      var xref = this.xref;\n      var kidsOrEntries = xref.fetchIfRef(this.root);\n      var loopCount = 0;\n      var MAX_LEVELS = 10;\n      var l, r, m;\n      while (kidsOrEntries.has('Kids')) {\n        if (++loopCount > MAX_LEVELS) {\n          (0, _util.warn)('Search depth limit reached for \"' + this._type + '\" tree.');\n          return null;\n        }\n        var kids = kidsOrEntries.get('Kids');\n        if (!Array.isArray(kids)) {\n          return null;\n        }\n        l = 0;\n        r = kids.length - 1;\n        while (l <= r) {\n          m = l + r >> 1;\n          var kid = xref.fetchIfRef(kids[m]);\n          var limits = kid.get('Limits');\n          if (key < xref.fetchIfRef(limits[0])) {\n            r = m - 1;\n          } else if (key > xref.fetchIfRef(limits[1])) {\n            l = m + 1;\n          } else {\n            kidsOrEntries = xref.fetchIfRef(kids[m]);\n            break;\n          }\n        }\n        if (l > r) {\n          return null;\n        }\n      }\n      var entries = kidsOrEntries.get(this._type);\n      if (Array.isArray(entries)) {\n        l = 0;\n        r = entries.length - 2;\n        while (l <= r) {\n          m = l + r & ~1;\n          var currentKey = xref.fetchIfRef(entries[m]);\n          if (key < currentKey) {\n            r = m - 2;\n          } else if (key > currentKey) {\n            l = m + 2;\n          } else {\n            return xref.fetchIfRef(entries[m + 1]);\n          }\n        }\n      }\n      return null;\n    }\n  };\n  return NameOrNumberTree;\n}();\nvar NameTree = function NameTreeClosure() {\n  function NameTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Names';\n  }\n  _util.Util.inherit(NameTree, NameOrNumberTree, {});\n  return NameTree;\n}();\nvar NumberTree = function NumberTreeClosure() {\n  function NumberTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Nums';\n  }\n  _util.Util.inherit(NumberTree, NameOrNumberTree, {});\n  return NumberTree;\n}();\nvar FileSpec = function FileSpecClosure() {\n  function FileSpec(root, xref) {\n    if (!root || !(0, _primitives.isDict)(root)) {\n      return;\n    }\n    this.xref = xref;\n    this.root = root;\n    if (root.has('FS')) {\n      this.fs = root.get('FS');\n    }\n    this.description = root.has('Desc') ? (0, _util.stringToPDFString)(root.get('Desc')) : '';\n    if (root.has('RF')) {\n      (0, _util.warn)('Related file specifications are not supported');\n    }\n    this.contentAvailable = true;\n    if (!root.has('EF')) {\n      this.contentAvailable = false;\n      (0, _util.warn)('Non-embedded file specifications are not supported');\n    }\n  }\n  function pickPlatformItem(dict) {\n    if (dict.has('UF')) {\n      return dict.get('UF');\n    } else if (dict.has('F')) {\n      return dict.get('F');\n    } else if (dict.has('Unix')) {\n      return dict.get('Unix');\n    } else if (dict.has('Mac')) {\n      return dict.get('Mac');\n    } else if (dict.has('DOS')) {\n      return dict.get('DOS');\n    }\n    return null;\n  }\n  FileSpec.prototype = {\n    get filename() {\n      if (!this._filename && this.root) {\n        var filename = pickPlatformItem(this.root) || 'unnamed';\n        this._filename = (0, _util.stringToPDFString)(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n      }\n      return this._filename;\n    },\n    get content() {\n      if (!this.contentAvailable) {\n        return null;\n      }\n      if (!this.contentRef && this.root) {\n        this.contentRef = pickPlatformItem(this.root.get('EF'));\n      }\n      var content = null;\n      if (this.contentRef) {\n        var xref = this.xref;\n        var fileObj = xref.fetchIfRef(this.contentRef);\n        if (fileObj && (0, _primitives.isStream)(fileObj)) {\n          content = fileObj.getBytes();\n        } else {\n          (0, _util.warn)('Embedded file specification points to non-existing/invalid ' + 'content');\n        }\n      } else {\n        (0, _util.warn)('Embedded file specification does not have a content');\n      }\n      return content;\n    },\n    get serializable() {\n      return {\n        filename: this.filename,\n        content: this.content\n      };\n    }\n  };\n  return FileSpec;\n}();\nvar ObjectLoader = function () {\n  function mayHaveChildren(value) {\n    return (0, _primitives.isRef)(value) || (0, _primitives.isDict)(value) || Array.isArray(value) || (0, _primitives.isStream)(value);\n  }\n  function addChildren(node, nodesToVisit) {\n    if ((0, _primitives.isDict)(node) || (0, _primitives.isStream)(node)) {\n      var dict = (0, _primitives.isDict)(node) ? node : node.dict;\n      var dictKeys = dict.getKeys();\n      for (var i = 0, ii = dictKeys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(dictKeys[i]);\n        if (mayHaveChildren(rawValue)) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n    } else if (Array.isArray(node)) {\n      for (var _i = 0, _ii = node.length; _i < _ii; _i++) {\n        var value = node[_i];\n        if (mayHaveChildren(value)) {\n          nodesToVisit.push(value);\n        }\n      }\n    }\n  }\n  function ObjectLoader(dict, keys, xref) {\n    this.dict = dict;\n    this.keys = keys;\n    this.xref = xref;\n    this.refSet = null;\n    this.capability = null;\n  }\n  ObjectLoader.prototype = {\n    load: function load() {\n      this.capability = (0, _util.createPromiseCapability)();\n      if (!(this.xref.stream instanceof _chunked_stream.ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n        this.capability.resolve();\n        return this.capability.promise;\n      }\n      var keys = this.keys,\n          dict = this.dict;\n\n      this.refSet = new _primitives.RefSet();\n      var nodesToVisit = [];\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(keys[i]);\n        if (rawValue !== undefined) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n      this._walk(nodesToVisit);\n      return this.capability.promise;\n    },\n    _walk: function _walk(nodesToVisit) {\n      var _this3 = this;\n\n      var nodesToRevisit = [];\n      var pendingRequests = [];\n      while (nodesToVisit.length) {\n        var currentNode = nodesToVisit.pop();\n        if ((0, _primitives.isRef)(currentNode)) {\n          if (this.refSet.has(currentNode)) {\n            continue;\n          }\n          try {\n            this.refSet.put(currentNode);\n            currentNode = this.xref.fetch(currentNode);\n          } catch (ex) {\n            if (!(ex instanceof _util.MissingDataException)) {\n              throw ex;\n            }\n            nodesToRevisit.push(currentNode);\n            pendingRequests.push({\n              begin: ex.begin,\n              end: ex.end\n            });\n          }\n        }\n        if (currentNode && currentNode.getBaseStreams) {\n          var baseStreams = currentNode.getBaseStreams();\n          var foundMissingData = false;\n          for (var i = 0, ii = baseStreams.length; i < ii; i++) {\n            var stream = baseStreams[i];\n            if (stream.getMissingChunks && stream.getMissingChunks().length) {\n              foundMissingData = true;\n              pendingRequests.push({\n                begin: stream.start,\n                end: stream.end\n              });\n            }\n          }\n          if (foundMissingData) {\n            nodesToRevisit.push(currentNode);\n          }\n        }\n        addChildren(currentNode, nodesToVisit);\n      }\n      if (pendingRequests.length) {\n        this.xref.stream.manager.requestRanges(pendingRequests).then(function () {\n          for (var _i2 = 0, _ii2 = nodesToRevisit.length; _i2 < _ii2; _i2++) {\n            var node = nodesToRevisit[_i2];\n            if ((0, _primitives.isRef)(node)) {\n              _this3.refSet.remove(node);\n            }\n          }\n          _this3._walk(nodesToRevisit);\n        }, this.capability.reject);\n        return;\n      }\n      this.refSet = null;\n      this.capability.resolve();\n    }\n  };\n  return ObjectLoader;\n}();\nexports.Catalog = Catalog;\nexports.ObjectLoader = ObjectLoader;\nexports.XRef = XRef;\nexports.FileSpec = FileSpec;\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxDecoder = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar CCITTFaxDecoder = function CCITTFaxDecoder() {\n  var ccittEOL = -2;\n  var ccittEOF = -1;\n  var twoDimPass = 0;\n  var twoDimHoriz = 1;\n  var twoDimVert0 = 2;\n  var twoDimVertR1 = 3;\n  var twoDimVertL1 = 4;\n  var twoDimVertR2 = 5;\n  var twoDimVertL2 = 6;\n  var twoDimVertR3 = 7;\n  var twoDimVertL3 = 8;\n  var twoDimTable = [[-1, -1], [-1, -1], [7, twoDimVertL3], [7, twoDimVertR3], [6, twoDimVertL2], [6, twoDimVertL2], [6, twoDimVertR2], [6, twoDimVertR2], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0]];\n  var whiteTable1 = [[-1, -1], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]];\n  var whiteTable2 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]];\n  var blackTable1 = [[-1, -1], [-1, -1], [12, ccittEOL], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]];\n  var blackTable2 = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]];\n  var blackTable3 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];\n  function CCITTFaxDecoder(source) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!source || typeof source.next !== 'function') {\n      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n    }\n    this.source = source;\n    this.eof = false;\n    this.encoding = options['K'] || 0;\n    this.eoline = options['EndOfLine'] || false;\n    this.byteAlign = options['EncodedByteAlign'] || false;\n    this.columns = options['Columns'] || 1728;\n    this.rows = options['Rows'] || 0;\n    var eoblock = options['EndOfBlock'];\n    if (eoblock === null || eoblock === undefined) {\n      eoblock = true;\n    }\n    this.eoblock = eoblock;\n    this.black = options['BlackIs1'] || false;\n    this.codingLine = new Uint32Array(this.columns + 1);\n    this.refLine = new Uint32Array(this.columns + 2);\n    this.codingLine[0] = this.columns;\n    this.codingPos = 0;\n    this.row = 0;\n    this.nextLine2D = this.encoding < 0;\n    this.inputBits = 0;\n    this.inputBuf = 0;\n    this.outputBits = 0;\n    this.rowsDone = false;\n    var code1 = void 0;\n    while ((code1 = this._lookBits(12)) === 0) {\n      this._eatBits(1);\n    }\n    if (code1 === 1) {\n      this._eatBits(12);\n    }\n    if (this.encoding > 0) {\n      this.nextLine2D = !this._lookBits(1);\n      this._eatBits(1);\n    }\n  }\n  CCITTFaxDecoder.prototype = {\n    readNextChar: function readNextChar() {\n      if (this.eof) {\n        return -1;\n      }\n      var refLine = this.refLine;\n      var codingLine = this.codingLine;\n      var columns = this.columns;\n      var refPos = void 0,\n          blackPixels = void 0,\n          bits = void 0,\n          i = void 0;\n      if (this.outputBits === 0) {\n        if (this.rowsDone) {\n          this.eof = true;\n        }\n        if (this.eof) {\n          return -1;\n        }\n        this.err = false;\n        var code1 = void 0,\n            code2 = void 0,\n            code3 = void 0;\n        if (this.nextLine2D) {\n          for (i = 0; codingLine[i] < columns; ++i) {\n            refLine[i] = codingLine[i];\n          }\n          refLine[i++] = columns;\n          refLine[i] = columns;\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          refPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = this._getTwoDimCode();\n            switch (code1) {\n              case twoDimPass:\n                this._addPixels(refLine[refPos + 1], blackPixels);\n                if (refLine[refPos + 1] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimHoriz:\n                code1 = code2 = 0;\n                if (blackPixels) {\n                  do {\n                    code1 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                } else {\n                  do {\n                    code1 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                }\n                this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n                if (codingLine[this.codingPos] < columns) {\n                  this._addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n                }\n                while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimVertR3:\n                this._addPixels(refLine[refPos] + 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR2:\n                this._addPixels(refLine[refPos] + 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR1:\n                this._addPixels(refLine[refPos] + 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVert0:\n                this._addPixels(refLine[refPos], blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL3:\n                this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL2:\n                this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL1:\n                this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case ccittEOF:\n                this._addPixels(columns, 0);\n                this.eof = true;\n                break;\n              default:\n                (0, _util.info)('bad 2d code');\n                this._addPixels(columns, 0);\n                this.err = true;\n            }\n          }\n        } else {\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = 0;\n            if (blackPixels) {\n              do {\n                code1 += code3 = this._getBlackCode();\n              } while (code3 >= 64);\n            } else {\n              do {\n                code1 += code3 = this._getWhiteCode();\n              } while (code3 >= 64);\n            }\n            this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n            blackPixels ^= 1;\n          }\n        }\n        var gotEOL = false;\n        if (this.byteAlign) {\n          this.inputBits &= ~7;\n        }\n        if (!this.eoblock && this.row === this.rows - 1) {\n          this.rowsDone = true;\n        } else {\n          code1 = this._lookBits(12);\n          if (this.eoline) {\n            while (code1 !== ccittEOF && code1 !== 1) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          } else {\n            while (code1 === 0) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          }\n          if (code1 === 1) {\n            this._eatBits(12);\n            gotEOL = true;\n          } else if (code1 === ccittEOF) {\n            this.eof = true;\n          }\n        }\n        if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n          this.nextLine2D = !this._lookBits(1);\n          this._eatBits(1);\n        }\n        if (this.eoblock && gotEOL && this.byteAlign) {\n          code1 = this._lookBits(12);\n          if (code1 === 1) {\n            this._eatBits(12);\n            if (this.encoding > 0) {\n              this._lookBits(1);\n              this._eatBits(1);\n            }\n            if (this.encoding >= 0) {\n              for (i = 0; i < 4; ++i) {\n                code1 = this._lookBits(12);\n                if (code1 !== 1) {\n                  (0, _util.info)('bad rtc code: ' + code1);\n                }\n                this._eatBits(12);\n                if (this.encoding > 0) {\n                  this._lookBits(1);\n                  this._eatBits(1);\n                }\n              }\n            }\n            this.eof = true;\n          }\n        } else if (this.err && this.eoline) {\n          while (true) {\n            code1 = this._lookBits(13);\n            if (code1 === ccittEOF) {\n              this.eof = true;\n              return -1;\n            }\n            if (code1 >> 1 === 1) {\n              break;\n            }\n            this._eatBits(1);\n          }\n          this._eatBits(12);\n          if (this.encoding > 0) {\n            this._eatBits(1);\n            this.nextLine2D = !(code1 & 1);\n          }\n        }\n        if (codingLine[0] > 0) {\n          this.outputBits = codingLine[this.codingPos = 0];\n        } else {\n          this.outputBits = codingLine[this.codingPos = 1];\n        }\n        this.row++;\n      }\n      var c = void 0;\n      if (this.outputBits >= 8) {\n        c = this.codingPos & 1 ? 0 : 0xFF;\n        this.outputBits -= 8;\n        if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n          this.codingPos++;\n          this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n        }\n      } else {\n        bits = 8;\n        c = 0;\n        do {\n          if (this.outputBits > bits) {\n            c <<= bits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - bits;\n            }\n            this.outputBits -= bits;\n            bits = 0;\n          } else {\n            c <<= this.outputBits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - this.outputBits;\n            }\n            bits -= this.outputBits;\n            this.outputBits = 0;\n            if (codingLine[this.codingPos] < columns) {\n              this.codingPos++;\n              this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n            } else if (bits > 0) {\n              c <<= bits;\n              bits = 0;\n            }\n          }\n        } while (bits);\n      }\n      if (this.black) {\n        c ^= 0xFF;\n      }\n      return c;\n    },\n    _addPixels: function _addPixels(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _addPixelsNeg: function _addPixelsNeg(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      } else if (a1 < codingLine[codingPos]) {\n        if (a1 < 0) {\n          (0, _util.info)('invalid code');\n          this.err = true;\n          a1 = 0;\n        }\n        while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n          --codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _findTableCode: function _findTableCode(start, end, table, limit) {\n      var limitValue = limit || 0;\n      for (var i = start; i <= end; ++i) {\n        var code = this._lookBits(i);\n        if (code === ccittEOF) {\n          return [true, 1, false];\n        }\n        if (i < end) {\n          code <<= end - i;\n        }\n        if (!limitValue || code >= limitValue) {\n          var p = table[code - limitValue];\n          if (p[0] === i) {\n            this._eatBits(i);\n            return [true, p[1], true];\n          }\n        }\n      }\n      return [false, 0, false];\n    },\n    _getTwoDimCode: function _getTwoDimCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(7);\n        p = twoDimTable[code];\n        if (p && p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 7, twoDimTable);\n        if (result[0] && result[2]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('Bad two dim code');\n      return ccittEOF;\n    },\n    _getWhiteCode: function _getWhiteCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(12);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 5 === 0) {\n          p = whiteTable1[code];\n        } else {\n          p = whiteTable2[code >> 3];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 9, whiteTable2);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(11, 12, whiteTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad white code');\n      this._eatBits(1);\n      return 1;\n    },\n    _getBlackCode: function _getBlackCode() {\n      var code = void 0,\n          p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(13);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 7 === 0) {\n          p = blackTable1[code];\n        } else if (code >> 9 === 0 && code >> 7 !== 0) {\n          p = blackTable2[(code >> 1) - 64];\n        } else {\n          p = blackTable3[code >> 7];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(2, 6, blackTable3);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(7, 12, blackTable2, 64);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(10, 13, blackTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad black code');\n      this._eatBits(1);\n      return 1;\n    },\n    _lookBits: function _lookBits(n) {\n      var c = void 0;\n      while (this.inputBits < n) {\n        if ((c = this.source.next()) === -1) {\n          if (this.inputBits === 0) {\n            return ccittEOF;\n          }\n          return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n        }\n        this.inputBuf = this.inputBuf << 8 | c;\n        this.inputBits += 8;\n      }\n      return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n    },\n    _eatBits: function _eatBits(n) {\n      if ((this.inputBits -= n) < 0) {\n        this.inputBits = 0;\n      }\n    }\n  };\n  return CCITTFaxDecoder;\n}();\nexports.CCITTFaxDecoder = CCITTFaxDecoder;\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\n  var QeTable = [{\n    qe: 0x5601,\n    nmps: 1,\n    nlps: 1,\n    switchFlag: 1\n  }, {\n    qe: 0x3401,\n    nmps: 2,\n    nlps: 6,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 3,\n    nlps: 9,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 4,\n    nlps: 12,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 5,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 38,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 7,\n    nlps: 6,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 8,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 9,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 10,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 11,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 12,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 13,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 29,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 15,\n    nlps: 14,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 16,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x5101,\n    nmps: 17,\n    nlps: 15,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 18,\n    nlps: 16,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 19,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x3401,\n    nmps: 20,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 21,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2801,\n    nmps: 22,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 23,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x2201,\n    nmps: 24,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 25,\n    nlps: 22,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 26,\n    nlps: 23,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 27,\n    nlps: 24,\n    switchFlag: 0\n  }, {\n    qe: 0x1401,\n    nmps: 28,\n    nlps: 25,\n    switchFlag: 0\n  }, {\n    qe: 0x1201,\n    nmps: 29,\n    nlps: 26,\n    switchFlag: 0\n  }, {\n    qe: 0x1101,\n    nmps: 30,\n    nlps: 27,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 31,\n    nlps: 28,\n    switchFlag: 0\n  }, {\n    qe: 0x09C1,\n    nmps: 32,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x08A1,\n    nmps: 33,\n    nlps: 30,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 34,\n    nlps: 31,\n    switchFlag: 0\n  }, {\n    qe: 0x0441,\n    nmps: 35,\n    nlps: 32,\n    switchFlag: 0\n  }, {\n    qe: 0x02A1,\n    nmps: 36,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 37,\n    nlps: 34,\n    switchFlag: 0\n  }, {\n    qe: 0x0141,\n    nmps: 38,\n    nlps: 35,\n    switchFlag: 0\n  }, {\n    qe: 0x0111,\n    nmps: 39,\n    nlps: 36,\n    switchFlag: 0\n  }, {\n    qe: 0x0085,\n    nmps: 40,\n    nlps: 37,\n    switchFlag: 0\n  }, {\n    qe: 0x0049,\n    nmps: 41,\n    nlps: 38,\n    switchFlag: 0\n  }, {\n    qe: 0x0025,\n    nmps: 42,\n    nlps: 39,\n    switchFlag: 0\n  }, {\n    qe: 0x0015,\n    nmps: 43,\n    nlps: 40,\n    switchFlag: 0\n  }, {\n    qe: 0x0009,\n    nmps: 44,\n    nlps: 41,\n    switchFlag: 0\n  }, {\n    qe: 0x0005,\n    nmps: 45,\n    nlps: 42,\n    switchFlag: 0\n  }, {\n    qe: 0x0001,\n    nmps: 45,\n    nlps: 43,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 46,\n    nlps: 46,\n    switchFlag: 0\n  }];\n  function ArithmeticDecoder(data, start, end) {\n    this.data = data;\n    this.bp = start;\n    this.dataEnd = end;\n    this.chigh = data[start];\n    this.clow = 0;\n    this.byteIn();\n    this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n    this.clow = this.clow << 7 & 0xFFFF;\n    this.ct -= 7;\n    this.a = 0x8000;\n  }\n  ArithmeticDecoder.prototype = {\n    byteIn: function ArithmeticDecoder_byteIn() {\n      var data = this.data;\n      var bp = this.bp;\n      if (data[bp] === 0xFF) {\n        var b1 = data[bp + 1];\n        if (b1 > 0x8F) {\n          this.clow += 0xFF00;\n          this.ct = 8;\n        } else {\n          bp++;\n          this.clow += data[bp] << 9;\n          this.ct = 7;\n          this.bp = bp;\n        }\n      } else {\n        bp++;\n        this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n        this.ct = 8;\n        this.bp = bp;\n      }\n      if (this.clow > 0xFFFF) {\n        this.chigh += this.clow >> 16;\n        this.clow &= 0xFFFF;\n      }\n    },\n    readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n      var cx_index = contexts[pos] >> 1,\n          cx_mps = contexts[pos] & 1;\n      var qeTableIcx = QeTable[cx_index];\n      var qeIcx = qeTableIcx.qe;\n      var d;\n      var a = this.a - qeIcx;\n      if (this.chigh < qeIcx) {\n        if (a < qeIcx) {\n          a = qeIcx;\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        } else {\n          a = qeIcx;\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        }\n      } else {\n        this.chigh -= qeIcx;\n        if ((a & 0x8000) !== 0) {\n          this.a = a;\n          return cx_mps;\n        }\n        if (a < qeIcx) {\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        } else {\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        }\n      }\n      do {\n        if (this.ct === 0) {\n          this.byteIn();\n        }\n        a <<= 1;\n        this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n        this.clow = this.clow << 1 & 0xFFFF;\n        this.ct--;\n      } while ((a & 0x8000) === 0);\n      this.a = a;\n      contexts[pos] = cx_index << 1 | cx_mps;\n      return d;\n    }\n  };\n  return ArithmeticDecoder;\n}();\nexports.ArithmeticDecoder = ArithmeticDecoder;\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxImage = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _arithmetic_decoder = __w_pdfjs_require__(66);\n\nvar JpxError = function JpxErrorClosure() {\n  function JpxError(msg) {\n    this.message = 'JPX error: ' + msg;\n  }\n  JpxError.prototype = new Error();\n  JpxError.prototype.name = 'JpxError';\n  JpxError.constructor = JpxError;\n  return JpxError;\n}();\nvar JpxImage = function JpxImageClosure() {\n  var SubbandsGainLog2 = {\n    'LL': 0,\n    'LH': 1,\n    'HL': 1,\n    'HH': 2\n  };\n  function JpxImage() {\n    this.failOnCorruptedImage = false;\n  }\n  JpxImage.prototype = {\n    parse: function JpxImage_parse(data) {\n      var head = (0, _util.readUint16)(data, 0);\n      if (head === 0xFF4F) {\n        this.parseCodestream(data, 0, data.length);\n        return;\n      }\n      var position = 0,\n          length = data.length;\n      while (position < length) {\n        var headerSize = 8;\n        var lbox = (0, _util.readUint32)(data, position);\n        var tbox = (0, _util.readUint32)(data, position + 4);\n        position += headerSize;\n        if (lbox === 1) {\n          lbox = (0, _util.readUint32)(data, position) * 4294967296 + (0, _util.readUint32)(data, position + 4);\n          position += 8;\n          headerSize += 8;\n        }\n        if (lbox === 0) {\n          lbox = length - position + headerSize;\n        }\n        if (lbox < headerSize) {\n          throw new JpxError('Invalid box field size');\n        }\n        var dataLength = lbox - headerSize;\n        var jumpDataLength = true;\n        switch (tbox) {\n          case 0x6A703268:\n            jumpDataLength = false;\n            break;\n          case 0x636F6C72:\n            var method = data[position];\n            if (method === 1) {\n              var colorspace = (0, _util.readUint32)(data, position + 3);\n              switch (colorspace) {\n                case 16:\n                case 17:\n                case 18:\n                  break;\n                default:\n                  (0, _util.warn)('Unknown colorspace ' + colorspace);\n                  break;\n              }\n            } else if (method === 2) {\n              (0, _util.info)('ICC profile not supported');\n            }\n            break;\n          case 0x6A703263:\n            this.parseCodestream(data, position, position + dataLength);\n            break;\n          case 0x6A502020:\n            if ((0, _util.readUint32)(data, position) !== 0x0d0a870a) {\n              (0, _util.warn)('Invalid JP2 signature');\n            }\n            break;\n          case 0x6A501A1A:\n          case 0x66747970:\n          case 0x72726571:\n          case 0x72657320:\n          case 0x69686472:\n            break;\n          default:\n            var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n            (0, _util.warn)('Unsupported header type ' + tbox + ' (' + headerType + ')');\n            break;\n        }\n        if (jumpDataLength) {\n          position += dataLength;\n        }\n      }\n    },\n    parseImageProperties: function JpxImage_parseImageProperties(stream) {\n      var newByte = stream.getByte();\n      while (newByte >= 0) {\n        var oldByte = newByte;\n        newByte = stream.getByte();\n        var code = oldByte << 8 | newByte;\n        if (code === 0xFF51) {\n          stream.skip(4);\n          var Xsiz = stream.getInt32() >>> 0;\n          var Ysiz = stream.getInt32() >>> 0;\n          var XOsiz = stream.getInt32() >>> 0;\n          var YOsiz = stream.getInt32() >>> 0;\n          stream.skip(16);\n          var Csiz = stream.getUint16();\n          this.width = Xsiz - XOsiz;\n          this.height = Ysiz - YOsiz;\n          this.componentsCount = Csiz;\n          this.bitsPerComponent = 8;\n          return;\n        }\n      }\n      throw new JpxError('No size marker found in JPX stream');\n    },\n    parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n      var context = {};\n      var doNotRecover = false;\n      try {\n        var position = start;\n        while (position + 1 < end) {\n          var code = (0, _util.readUint16)(data, position);\n          position += 2;\n          var length = 0,\n              j,\n              sqcd,\n              spqcds,\n              spqcdSize,\n              scalarExpounded,\n              tile;\n          switch (code) {\n            case 0xFF4F:\n              context.mainHeader = true;\n              break;\n            case 0xFFD9:\n              break;\n            case 0xFF51:\n              length = (0, _util.readUint16)(data, position);\n              var siz = {};\n              siz.Xsiz = (0, _util.readUint32)(data, position + 4);\n              siz.Ysiz = (0, _util.readUint32)(data, position + 8);\n              siz.XOsiz = (0, _util.readUint32)(data, position + 12);\n              siz.YOsiz = (0, _util.readUint32)(data, position + 16);\n              siz.XTsiz = (0, _util.readUint32)(data, position + 20);\n              siz.YTsiz = (0, _util.readUint32)(data, position + 24);\n              siz.XTOsiz = (0, _util.readUint32)(data, position + 28);\n              siz.YTOsiz = (0, _util.readUint32)(data, position + 32);\n              var componentsCount = (0, _util.readUint16)(data, position + 36);\n              siz.Csiz = componentsCount;\n              var components = [];\n              j = position + 38;\n              for (var i = 0; i < componentsCount; i++) {\n                var component = {\n                  precision: (data[j] & 0x7F) + 1,\n                  isSigned: !!(data[j] & 0x80),\n                  XRsiz: data[j + 1],\n                  YRsiz: data[j + 2]\n                };\n                j += 3;\n                calculateComponentDimensions(component, siz);\n                components.push(component);\n              }\n              context.SIZ = siz;\n              context.components = components;\n              calculateTileGrids(context, components);\n              context.QCC = [];\n              context.COC = [];\n              break;\n            case 0xFF5C:\n              length = (0, _util.readUint16)(data, position);\n              var qcd = {};\n              j = position + 2;\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcd.noQuantization = spqcdSize === 8;\n              qcd.scalarExpounded = scalarExpounded;\n              qcd.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                var spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcd.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCD = qcd;\n              } else {\n                context.currentTile.QCD = qcd;\n                context.currentTile.QCC = [];\n              }\n              break;\n            case 0xFF5D:\n              length = (0, _util.readUint16)(data, position);\n              var qcc = {};\n              j = position + 2;\n              var cqcc;\n              if (context.SIZ.Csiz < 257) {\n                cqcc = data[j++];\n              } else {\n                cqcc = (0, _util.readUint16)(data, j);\n                j += 2;\n              }\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcc.noQuantization = spqcdSize === 8;\n              qcc.scalarExpounded = scalarExpounded;\n              qcc.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcc.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCC[cqcc] = qcc;\n              } else {\n                context.currentTile.QCC[cqcc] = qcc;\n              }\n              break;\n            case 0xFF52:\n              length = (0, _util.readUint16)(data, position);\n              var cod = {};\n              j = position + 2;\n              var scod = data[j++];\n              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n              cod.sopMarkerUsed = !!(scod & 2);\n              cod.ephMarkerUsed = !!(scod & 4);\n              cod.progressionOrder = data[j++];\n              cod.layersCount = (0, _util.readUint16)(data, j);\n              j += 2;\n              cod.multipleComponentTransform = data[j++];\n              cod.decompositionLevelsCount = data[j++];\n              cod.xcb = (data[j++] & 0xF) + 2;\n              cod.ycb = (data[j++] & 0xF) + 2;\n              var blockStyle = data[j++];\n              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n              cod.resetContextProbabilities = !!(blockStyle & 2);\n              cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n              cod.verticallyStripe = !!(blockStyle & 8);\n              cod.predictableTermination = !!(blockStyle & 16);\n              cod.segmentationSymbolUsed = !!(blockStyle & 32);\n              cod.reversibleTransformation = data[j++];\n              if (cod.entropyCoderWithCustomPrecincts) {\n                var precinctsSizes = [];\n                while (j < length + position) {\n                  var precinctsSize = data[j++];\n                  precinctsSizes.push({\n                    PPx: precinctsSize & 0xF,\n                    PPy: precinctsSize >> 4\n                  });\n                }\n                cod.precinctsSizes = precinctsSizes;\n              }\n              var unsupported = [];\n              if (cod.selectiveArithmeticCodingBypass) {\n                unsupported.push('selectiveArithmeticCodingBypass');\n              }\n              if (cod.resetContextProbabilities) {\n                unsupported.push('resetContextProbabilities');\n              }\n              if (cod.terminationOnEachCodingPass) {\n                unsupported.push('terminationOnEachCodingPass');\n              }\n              if (cod.verticallyStripe) {\n                unsupported.push('verticallyStripe');\n              }\n              if (cod.predictableTermination) {\n                unsupported.push('predictableTermination');\n              }\n              if (unsupported.length > 0) {\n                doNotRecover = true;\n                throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n              }\n              if (context.mainHeader) {\n                context.COD = cod;\n              } else {\n                context.currentTile.COD = cod;\n                context.currentTile.COC = [];\n              }\n              break;\n            case 0xFF90:\n              length = (0, _util.readUint16)(data, position);\n              tile = {};\n              tile.index = (0, _util.readUint16)(data, position + 2);\n              tile.length = (0, _util.readUint32)(data, position + 4);\n              tile.dataEnd = tile.length + position - 2;\n              tile.partIndex = data[position + 8];\n              tile.partsCount = data[position + 9];\n              context.mainHeader = false;\n              if (tile.partIndex === 0) {\n                tile.COD = context.COD;\n                tile.COC = context.COC.slice(0);\n                tile.QCD = context.QCD;\n                tile.QCC = context.QCC.slice(0);\n              }\n              context.currentTile = tile;\n              break;\n            case 0xFF93:\n              tile = context.currentTile;\n              if (tile.partIndex === 0) {\n                initializeTile(context, tile.index);\n                buildPackets(context);\n              }\n              length = tile.dataEnd - position;\n              parseTilePackets(context, data, position, length);\n              break;\n            case 0xFF55:\n            case 0xFF57:\n            case 0xFF58:\n            case 0xFF64:\n              length = (0, _util.readUint16)(data, position);\n              break;\n            case 0xFF53:\n              throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n            default:\n              throw new Error('Unknown codestream code: ' + code.toString(16));\n          }\n          position += length;\n        }\n      } catch (e) {\n        if (doNotRecover || this.failOnCorruptedImage) {\n          throw new JpxError(e.message);\n        } else {\n          (0, _util.warn)('JPX: Trying to recover from: ' + e.message);\n        }\n      }\n      this.tiles = transformComponents(context);\n      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n      this.componentsCount = context.SIZ.Csiz;\n    }\n  };\n  function calculateComponentDimensions(component, siz) {\n    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n    component.width = component.x1 - component.x0;\n    component.height = component.y1 - component.y0;\n  }\n  function calculateTileGrids(context, components) {\n    var siz = context.SIZ;\n    var tile,\n        tiles = [];\n    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n    for (var q = 0; q < numYtiles; q++) {\n      for (var p = 0; p < numXtiles; p++) {\n        tile = {};\n        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n        tile.width = tile.tx1 - tile.tx0;\n        tile.height = tile.ty1 - tile.ty0;\n        tile.components = [];\n        tiles.push(tile);\n      }\n    }\n    context.tiles = tiles;\n    var componentsCount = siz.Csiz;\n    for (var i = 0, ii = componentsCount; i < ii; i++) {\n      var component = components[i];\n      for (var j = 0, jj = tiles.length; j < jj; j++) {\n        var tileComponent = {};\n        tile = tiles[j];\n        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n        tile.components[i] = tileComponent;\n      }\n    }\n  }\n  function getBlocksDimensions(context, component, r) {\n    var codOrCoc = component.codingStyleParameters;\n    var result = {};\n    if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n      result.PPx = 15;\n      result.PPy = 15;\n    } else {\n      result.PPx = codOrCoc.precinctsSizes[r].PPx;\n      result.PPy = codOrCoc.precinctsSizes[r].PPy;\n    }\n    result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n    result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n    return result;\n  }\n  function buildPrecincts(context, resolution, dimensions) {\n    var precinctWidth = 1 << dimensions.PPx;\n    var precinctHeight = 1 << dimensions.PPy;\n    var isZeroRes = resolution.resLevel === 0;\n    var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n    var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n    var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n    var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n    var numprecincts = numprecinctswide * numprecinctshigh;\n    resolution.precinctParameters = {\n      precinctWidth: precinctWidth,\n      precinctHeight: precinctHeight,\n      numprecinctswide: numprecinctswide,\n      numprecinctshigh: numprecinctshigh,\n      numprecincts: numprecincts,\n      precinctWidthInSubband: precinctWidthInSubband,\n      precinctHeightInSubband: precinctHeightInSubband\n    };\n  }\n  function buildCodeblocks(context, subband, dimensions) {\n    var xcb_ = dimensions.xcb_;\n    var ycb_ = dimensions.ycb_;\n    var codeblockWidth = 1 << xcb_;\n    var codeblockHeight = 1 << ycb_;\n    var cbx0 = subband.tbx0 >> xcb_;\n    var cby0 = subband.tby0 >> ycb_;\n    var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n    var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n    var precinctParameters = subband.resolution.precinctParameters;\n    var codeblocks = [];\n    var precincts = [];\n    var i, j, codeblock, precinctNumber;\n    for (j = cby0; j < cby1; j++) {\n      for (i = cbx0; i < cbx1; i++) {\n        codeblock = {\n          cbx: i,\n          cby: j,\n          tbx0: codeblockWidth * i,\n          tby0: codeblockHeight * j,\n          tbx1: codeblockWidth * (i + 1),\n          tby1: codeblockHeight * (j + 1)\n        };\n        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n        var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n        var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n        precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n        codeblock.precinctNumber = precinctNumber;\n        codeblock.subbandType = subband.type;\n        codeblock.Lblock = 3;\n        if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n          continue;\n        }\n        codeblocks.push(codeblock);\n        var precinct = precincts[precinctNumber];\n        if (precinct !== undefined) {\n          if (i < precinct.cbxMin) {\n            precinct.cbxMin = i;\n          } else if (i > precinct.cbxMax) {\n            precinct.cbxMax = i;\n          }\n          if (j < precinct.cbyMin) {\n            precinct.cbxMin = j;\n          } else if (j > precinct.cbyMax) {\n            precinct.cbyMax = j;\n          }\n        } else {\n          precincts[precinctNumber] = precinct = {\n            cbxMin: i,\n            cbyMin: j,\n            cbxMax: i,\n            cbyMax: j\n          };\n        }\n        codeblock.precinct = precinct;\n      }\n    }\n    subband.codeblockParameters = {\n      codeblockWidth: xcb_,\n      codeblockHeight: ycb_,\n      numcodeblockwide: cbx1 - cbx0 + 1,\n      numcodeblockhigh: cby1 - cby0 + 1\n    };\n    subband.codeblocks = codeblocks;\n    subband.precincts = precincts;\n  }\n  function createPacket(resolution, precinctNumber, layerNumber) {\n    var precinctCodeblocks = [];\n    var subbands = resolution.subbands;\n    for (var i = 0, ii = subbands.length; i < ii; i++) {\n      var subband = subbands[i];\n      var codeblocks = subband.codeblocks;\n      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n        var codeblock = codeblocks[j];\n        if (codeblock.precinctNumber !== precinctNumber) {\n          continue;\n        }\n        precinctCodeblocks.push(codeblock);\n      }\n    }\n    return {\n      layerNumber: layerNumber,\n      codeblocks: precinctCodeblocks\n    };\n  }\n  function LayerResolutionComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var l = 0,\n        r = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; l < layersCount; l++) {\n        for (; r <= maxDecompositionLevelsCount; r++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        r = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionLayerComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var r = 0,\n        l = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; l < layersCount; l++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        l = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionPositionComponentLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var l, r, c, p;\n    var maxDecompositionLevelsCount = 0;\n    for (c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n    }\n    var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n      var maxNumPrecincts = 0;\n      for (c = 0; c < componentsCount; ++c) {\n        var resolutions = tile.components[c].resolutions;\n        if (r < resolutions.length) {\n          maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n        }\n      }\n      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n    }\n    l = 0;\n    r = 0;\n    c = 0;\n    p = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; p < maxNumPrecinctsInLevel[r]; p++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            if (p >= numprecincts) {\n              continue;\n            }\n            for (; l < layersCount;) {\n              var packet = createPacket(resolution, p, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          c = 0;\n        }\n        p = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function PositionComponentResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var precinctsIterationSizes = precinctsSizes;\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          c = 0;\n        }\n        px = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ComponentPositionResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; c < componentsCount; ++c) {\n        var component = tile.components[c];\n        var precinctsIterationSizes = precinctsSizes.components[c];\n        var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n          for (; px < precinctsIterationSizes.maxNumWide; px++) {\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          px = 0;\n        }\n        py = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n    var posX = pxIndex * precinctIterationSizes.minWidth;\n    var posY = pyIndex * precinctIterationSizes.minHeight;\n    if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n      return null;\n    }\n    var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n    return posX / sizeInImageScale.height + startPrecinctRowIndex;\n  }\n  function getPrecinctSizesInImageScale(tile) {\n    var componentsCount = tile.components.length;\n    var minWidth = Number.MAX_VALUE;\n    var minHeight = Number.MAX_VALUE;\n    var maxNumWide = 0;\n    var maxNumHigh = 0;\n    var sizePerComponent = new Array(componentsCount);\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var sizePerResolution = new Array(decompositionLevelsCount + 1);\n      var minWidthCurrentComponent = Number.MAX_VALUE;\n      var minHeightCurrentComponent = Number.MAX_VALUE;\n      var maxNumWideCurrentComponent = 0;\n      var maxNumHighCurrentComponent = 0;\n      var scale = 1;\n      for (var r = decompositionLevelsCount; r >= 0; --r) {\n        var resolution = component.resolutions[r];\n        var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n        var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n        minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n        minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n        maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n        maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n        sizePerResolution[r] = {\n          width: widthCurrentResolution,\n          height: heightCurrentResolution\n        };\n        scale <<= 1;\n      }\n      minWidth = Math.min(minWidth, minWidthCurrentComponent);\n      minHeight = Math.min(minHeight, minHeightCurrentComponent);\n      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n      sizePerComponent[c] = {\n        resolutions: sizePerResolution,\n        minWidth: minWidthCurrentComponent,\n        minHeight: minHeightCurrentComponent,\n        maxNumWide: maxNumWideCurrentComponent,\n        maxNumHigh: maxNumHighCurrentComponent\n      };\n    }\n    return {\n      components: sizePerComponent,\n      minWidth: minWidth,\n      minHeight: minHeight,\n      maxNumWide: maxNumWide,\n      maxNumHigh: maxNumHigh\n    };\n  }\n  function buildPackets(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var componentsCount = siz.Csiz;\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var resolutions = [];\n      var subbands = [];\n      for (var r = 0; r <= decompositionLevelsCount; r++) {\n        var blocksDimensions = getBlocksDimensions(context, component, r);\n        var resolution = {};\n        var scale = 1 << decompositionLevelsCount - r;\n        resolution.trx0 = Math.ceil(component.tcx0 / scale);\n        resolution.try0 = Math.ceil(component.tcy0 / scale);\n        resolution.trx1 = Math.ceil(component.tcx1 / scale);\n        resolution.try1 = Math.ceil(component.tcy1 / scale);\n        resolution.resLevel = r;\n        buildPrecincts(context, resolution, blocksDimensions);\n        resolutions.push(resolution);\n        var subband;\n        if (r === 0) {\n          subband = {};\n          subband.type = 'LL';\n          subband.tbx0 = Math.ceil(component.tcx0 / scale);\n          subband.tby0 = Math.ceil(component.tcy0 / scale);\n          subband.tbx1 = Math.ceil(component.tcx1 / scale);\n          subband.tby1 = Math.ceil(component.tcy1 / scale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolution.subbands = [subband];\n        } else {\n          var bscale = 1 << decompositionLevelsCount - r + 1;\n          var resolutionSubbands = [];\n          subband = {};\n          subband.type = 'HL';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'LH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'HH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          resolution.subbands = resolutionSubbands;\n        }\n      }\n      component.resolutions = resolutions;\n      component.subbands = subbands;\n    }\n    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n    switch (progressionOrder) {\n      case 0:\n        tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n        break;\n      case 1:\n        tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n        break;\n      case 2:\n        tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n        break;\n      case 3:\n        tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n        break;\n      case 4:\n        tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n        break;\n      default:\n        throw new JpxError('Unsupported progression order ' + progressionOrder);\n    }\n  }\n  function parseTilePackets(context, data, offset, dataLength) {\n    var position = 0;\n    var buffer,\n        bufferSize = 0,\n        skipNextBit = false;\n    function readBits(count) {\n      while (bufferSize < count) {\n        var b = data[offset + position];\n        position++;\n        if (skipNextBit) {\n          buffer = buffer << 7 | b;\n          bufferSize += 7;\n          skipNextBit = false;\n        } else {\n          buffer = buffer << 8 | b;\n          bufferSize += 8;\n        }\n        if (b === 0xFF) {\n          skipNextBit = true;\n        }\n      }\n      bufferSize -= count;\n      return buffer >>> bufferSize & (1 << count) - 1;\n    }\n    function skipMarkerIfEqual(value) {\n      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n        skipBytes(1);\n        return true;\n      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n        skipBytes(2);\n        return true;\n      }\n      return false;\n    }\n    function skipBytes(count) {\n      position += count;\n    }\n    function alignToByte() {\n      bufferSize = 0;\n      if (skipNextBit) {\n        position++;\n        skipNextBit = false;\n      }\n    }\n    function readCodingpasses() {\n      if (readBits(1) === 0) {\n        return 1;\n      }\n      if (readBits(1) === 0) {\n        return 2;\n      }\n      var value = readBits(2);\n      if (value < 3) {\n        return value + 3;\n      }\n      value = readBits(5);\n      if (value < 31) {\n        return value + 6;\n      }\n      value = readBits(7);\n      return value + 37;\n    }\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var sopMarkerUsed = context.COD.sopMarkerUsed;\n    var ephMarkerUsed = context.COD.ephMarkerUsed;\n    var packetsIterator = tile.packetsIterator;\n    while (position < dataLength) {\n      alignToByte();\n      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n        skipBytes(4);\n      }\n      var packet = packetsIterator.nextPacket();\n      if (!readBits(1)) {\n        continue;\n      }\n      var layerNumber = packet.layerNumber;\n      var queue = [],\n          codeblock;\n      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n        codeblock = packet.codeblocks[i];\n        var precinct = codeblock.precinct;\n        var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n        var codeblockRow = codeblock.cby - precinct.cbyMin;\n        var codeblockIncluded = false;\n        var firstTimeInclusion = false;\n        var valueReady;\n        if (codeblock['included'] !== undefined) {\n          codeblockIncluded = !!readBits(1);\n        } else {\n          precinct = codeblock.precinct;\n          var inclusionTree, zeroBitPlanesTree;\n          if (precinct['inclusionTree'] !== undefined) {\n            inclusionTree = precinct.inclusionTree;\n          } else {\n            var width = precinct.cbxMax - precinct.cbxMin + 1;\n            var height = precinct.cbyMax - precinct.cbyMin + 1;\n            inclusionTree = new InclusionTree(width, height, layerNumber);\n            zeroBitPlanesTree = new TagTree(width, height);\n            precinct.inclusionTree = inclusionTree;\n            precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n          }\n          if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n            while (true) {\n              if (readBits(1)) {\n                valueReady = !inclusionTree.nextLevel();\n                if (valueReady) {\n                  codeblock.included = true;\n                  codeblockIncluded = firstTimeInclusion = true;\n                  break;\n                }\n              } else {\n                inclusionTree.incrementValue(layerNumber);\n                break;\n              }\n            }\n          }\n        }\n        if (!codeblockIncluded) {\n          continue;\n        }\n        if (firstTimeInclusion) {\n          zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n          zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n          while (true) {\n            if (readBits(1)) {\n              valueReady = !zeroBitPlanesTree.nextLevel();\n              if (valueReady) {\n                break;\n              }\n            } else {\n              zeroBitPlanesTree.incrementValue();\n            }\n          }\n          codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n        }\n        var codingpasses = readCodingpasses();\n        while (readBits(1)) {\n          codeblock.Lblock++;\n        }\n        var codingpassesLog2 = (0, _util.log2)(codingpasses);\n        var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n        var codedDataLength = readBits(bits);\n        queue.push({\n          codeblock: codeblock,\n          codingpasses: codingpasses,\n          dataLength: codedDataLength\n        });\n      }\n      alignToByte();\n      if (ephMarkerUsed) {\n        skipMarkerIfEqual(0x92);\n      }\n      while (queue.length > 0) {\n        var packetItem = queue.shift();\n        codeblock = packetItem.codeblock;\n        if (codeblock['data'] === undefined) {\n          codeblock.data = [];\n        }\n        codeblock.data.push({\n          data: data,\n          start: offset + position,\n          end: offset + position + packetItem.dataLength,\n          codingpasses: packetItem.codingpasses\n        });\n        position += packetItem.dataLength;\n      }\n    }\n    return position;\n  }\n  function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n    var x0 = subband.tbx0;\n    var y0 = subband.tby0;\n    var width = subband.tbx1 - subband.tbx0;\n    var codeblocks = subband.codeblocks;\n    var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n    var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n      var codeblock = codeblocks[i];\n      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n      if (blockWidth === 0 || blockHeight === 0) {\n        continue;\n      }\n      if (codeblock['data'] === undefined) {\n        continue;\n      }\n      var bitModel, currentCodingpassType;\n      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n      currentCodingpassType = 2;\n      var data = codeblock.data,\n          totalLength = 0,\n          codingpasses = 0;\n      var j, jj, dataItem;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        totalLength += dataItem.end - dataItem.start;\n        codingpasses += dataItem.codingpasses;\n      }\n      var encodedData = new Uint8Array(totalLength);\n      var position = 0;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n        encodedData.set(chunk, position);\n        position += chunk.length;\n      }\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(encodedData, 0, totalLength);\n      bitModel.setDecoder(decoder);\n      for (j = 0; j < codingpasses; j++) {\n        switch (currentCodingpassType) {\n          case 0:\n            bitModel.runSignificancePropagationPass();\n            break;\n          case 1:\n            bitModel.runMagnitudeRefinementPass();\n            break;\n          case 2:\n            bitModel.runCleanupPass();\n            if (segmentationSymbolUsed) {\n              bitModel.checkSegmentationSymbol();\n            }\n            break;\n        }\n        currentCodingpassType = (currentCodingpassType + 1) % 3;\n      }\n      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n      var sign = bitModel.coefficentsSign;\n      var magnitude = bitModel.coefficentsMagnitude;\n      var bitsDecoded = bitModel.bitsDecoded;\n      var magnitudeCorrection = reversible ? 0 : 0.5;\n      var k, n, nb;\n      position = 0;\n      var interleave = subband.type !== 'LL';\n      for (j = 0; j < blockHeight; j++) {\n        var row = offset / width | 0;\n        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n        for (k = 0; k < blockWidth; k++) {\n          n = magnitude[position];\n          if (n !== 0) {\n            n = (n + magnitudeCorrection) * delta;\n            if (sign[position] !== 0) {\n              n = -n;\n            }\n            nb = bitsDecoded[position];\n            var pos = interleave ? levelOffset + (offset << 1) : offset;\n            if (reversible && nb >= mb) {\n              coefficients[pos] = n;\n            } else {\n              coefficients[pos] = n * (1 << mb - nb);\n            }\n          }\n          offset++;\n          position++;\n        }\n        offset += width - blockWidth;\n      }\n    }\n  }\n  function transformTile(context, tile, c) {\n    var component = tile.components[c];\n    var codingStyleParameters = component.codingStyleParameters;\n    var quantizationParameters = component.quantizationParameters;\n    var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n    var spqcds = quantizationParameters.SPqcds;\n    var scalarExpounded = quantizationParameters.scalarExpounded;\n    var guardBits = quantizationParameters.guardBits;\n    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n    var precision = context.components[c].precision;\n    var reversible = codingStyleParameters.reversibleTransformation;\n    var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n    var subbandCoefficients = [];\n    var b = 0;\n    for (var i = 0; i <= decompositionLevelsCount; i++) {\n      var resolution = component.resolutions[i];\n      var width = resolution.trx1 - resolution.trx0;\n      var height = resolution.try1 - resolution.try0;\n      var coefficients = new Float32Array(width * height);\n      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n        var mu, epsilon;\n        if (!scalarExpounded) {\n          mu = spqcds[0].mu;\n          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n        } else {\n          mu = spqcds[b].mu;\n          epsilon = spqcds[b].epsilon;\n          b++;\n        }\n        var subband = resolution.subbands[j];\n        var gainLog2 = SubbandsGainLog2[subband.type];\n        var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n        var mb = guardBits + epsilon - 1;\n        copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n      }\n      subbandCoefficients.push({\n        width: width,\n        height: height,\n        items: coefficients\n      });\n    }\n    var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n    return {\n      left: component.tcx0,\n      top: component.tcy0,\n      width: result.width,\n      height: result.height,\n      items: result.items\n    };\n  }\n  function transformComponents(context) {\n    var siz = context.SIZ;\n    var components = context.components;\n    var componentsCount = siz.Csiz;\n    var resultImages = [];\n    for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n      var tile = context.tiles[i];\n      var transformedTiles = [];\n      var c;\n      for (c = 0; c < componentsCount; c++) {\n        transformedTiles[c] = transformTile(context, tile, c);\n      }\n      var tile0 = transformedTiles[0];\n      var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n      var result = {\n        left: tile0.left,\n        top: tile0.top,\n        width: tile0.width,\n        height: tile0.height,\n        items: out\n      };\n      var shift, offset;\n      var pos = 0,\n          j,\n          jj,\n          y0,\n          y1,\n          y2;\n      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n        var fourComponents = componentsCount === 4;\n        var y0items = transformedTiles[0].items;\n        var y1items = transformedTiles[1].items;\n        var y2items = transformedTiles[2].items;\n        var y3items = fourComponents ? transformedTiles[3].items : null;\n        shift = components[0].precision - 8;\n        offset = (128 << shift) + 0.5;\n        var component0 = tile.components[0];\n        var alpha01 = componentsCount - 3;\n        jj = y0items.length;\n        if (!component0.codingStyleParameters.reversibleTransformation) {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            out[pos++] = y0 + 1.402 * y2 >> shift;\n            out[pos++] = y0 - 0.34413 * y1 - 0.71414 * y2 >> shift;\n            out[pos++] = y0 + 1.772 * y1 >> shift;\n          }\n        } else {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            var g = y0 - (y2 + y1 >> 2);\n            out[pos++] = g + y2 >> shift;\n            out[pos++] = g >> shift;\n            out[pos++] = g + y1 >> shift;\n          }\n        }\n        if (fourComponents) {\n          for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n            out[pos] = y3items[j] + offset >> shift;\n          }\n        }\n      } else {\n        for (c = 0; c < componentsCount; c++) {\n          var items = transformedTiles[c].items;\n          shift = components[c].precision - 8;\n          offset = (128 << shift) + 0.5;\n          for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n            out[pos] = items[j] + offset >> shift;\n            pos += componentsCount;\n          }\n        }\n      }\n      resultImages.push(result);\n    }\n    return resultImages;\n  }\n  function initializeTile(context, tileIndex) {\n    var siz = context.SIZ;\n    var componentsCount = siz.Csiz;\n    var tile = context.tiles[tileIndex];\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n      component.quantizationParameters = qcdOrQcc;\n      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n      component.codingStyleParameters = codOrCoc;\n    }\n    tile.codingStyleDefaultParameters = context.currentTile.COD;\n  }\n  var TagTree = function TagTreeClosure() {\n    function TagTree(width, height) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var level = {\n          width: width,\n          height: height,\n          items: []\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    TagTree.prototype = {\n      reset: function TagTree_reset(i, j) {\n        var currentLevel = 0,\n            value = 0,\n            level;\n        while (currentLevel < this.levels.length) {\n          level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          if (level.items[index] !== undefined) {\n            value = level.items[index];\n            break;\n          }\n          level.index = index;\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        currentLevel--;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        this.currentLevel = currentLevel;\n        delete this.value;\n      },\n      incrementValue: function TagTree_incrementValue() {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index]++;\n      },\n      nextLevel: function TagTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        currentLevel--;\n        if (currentLevel < 0) {\n          this.value = value;\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return TagTree;\n  }();\n  var InclusionTree = function InclusionTreeClosure() {\n    function InclusionTree(width, height, defaultValue) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var items = new Uint8Array(width * height);\n        for (var j = 0, jj = items.length; j < jj; j++) {\n          items[j] = defaultValue;\n        }\n        var level = {\n          width: width,\n          height: height,\n          items: items\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    InclusionTree.prototype = {\n      reset: function InclusionTree_reset(i, j, stopValue) {\n        var currentLevel = 0;\n        while (currentLevel < this.levels.length) {\n          var level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          level.index = index;\n          var value = level.items[index];\n          if (value === 0xFF) {\n            break;\n          }\n          if (value > stopValue) {\n            this.currentLevel = currentLevel;\n            this.propagateValues();\n            return false;\n          }\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        this.currentLevel = currentLevel - 1;\n        return true;\n      },\n      incrementValue: function InclusionTree_incrementValue(stopValue) {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index] = stopValue + 1;\n        this.propagateValues();\n      },\n      propagateValues: function InclusionTree_propagateValues() {\n        var levelIndex = this.currentLevel;\n        var level = this.levels[levelIndex];\n        var currentValue = level.items[level.index];\n        while (--levelIndex >= 0) {\n          level = this.levels[levelIndex];\n          level.items[level.index] = currentValue;\n        }\n      },\n      nextLevel: function InclusionTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        level.items[level.index] = 0xFF;\n        currentLevel--;\n        if (currentLevel < 0) {\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return InclusionTree;\n  }();\n  var BitModel = function BitModelClosure() {\n    var UNIFORM_CONTEXT = 17;\n    var RUNLENGTH_CONTEXT = 18;\n    var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]);\n    var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);\n    var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);\n    function BitModel(width, height, subband, zeroBitPlanes, mb) {\n      this.width = width;\n      this.height = height;\n      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n      var coefficientCount = width * height;\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\n      this.coefficentsSign = new Uint8Array(coefficientCount);\n      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n      this.processingFlags = new Uint8Array(coefficientCount);\n      var bitsDecoded = new Uint8Array(coefficientCount);\n      if (zeroBitPlanes !== 0) {\n        for (var i = 0; i < coefficientCount; i++) {\n          bitsDecoded[i] = zeroBitPlanes;\n        }\n      }\n      this.bitsDecoded = bitsDecoded;\n      this.reset();\n    }\n    BitModel.prototype = {\n      setDecoder: function BitModel_setDecoder(decoder) {\n        this.decoder = decoder;\n      },\n      reset: function BitModel_reset() {\n        this.contexts = new Int8Array(19);\n        this.contexts[0] = 4 << 1 | 0;\n        this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n        this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n      },\n      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n        var neighborsSignificance = this.neighborsSignificance;\n        var width = this.width,\n            height = this.height;\n        var left = column > 0;\n        var right = column + 1 < width;\n        var i;\n        if (row > 0) {\n          i = index - width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (row + 1 < height) {\n          i = index + width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (left) {\n          neighborsSignificance[index - 1] += 0x01;\n        }\n        if (right) {\n          neighborsSignificance[index + 1] += 0x01;\n        }\n        neighborsSignificance[index] |= 0x80;\n      },\n      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var neighborsSignificance = this.neighborsSignificance;\n        var processingFlags = this.processingFlags;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processedInverseMask = ~1;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        for (var i0 = 0; i0 < height; i0 += 4) {\n          for (var j = 0; j < width; j++) {\n            var index = i0 * width + j;\n            for (var i1 = 0; i1 < 4; i1++, index += width) {\n              var i = i0 + i1;\n              if (i >= height) {\n                break;\n              }\n              processingFlags[index] &= processedInverseMask;\n              if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision) {\n                var sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contribution, sign0, sign1, significance1;\n        var contextLabel, decoded;\n        significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n          sign1 = coefficentsSign[index + 1];\n          if (significance1) {\n            sign0 = coefficentsSign[index - 1];\n            contribution = 1 - sign1 - sign0;\n          } else {\n            contribution = 1 - sign1 - sign1;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - 1];\n          contribution = 1 - sign0 - sign0;\n        } else {\n          contribution = 0;\n        }\n        var horizontalContribution = 3 * contribution;\n        significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n          sign1 = coefficentsSign[index + width];\n          if (significance1) {\n            sign0 = coefficentsSign[index - width];\n            contribution = 1 - sign1 - sign0 + horizontalContribution;\n          } else {\n            contribution = 1 - sign1 - sign1 + horizontalContribution;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - width];\n          contribution = 1 - sign0 - sign0 + horizontalContribution;\n        } else {\n          contribution = horizontalContribution;\n        }\n        if (contribution >= 0) {\n          contextLabel = 9 + contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel);\n        } else {\n          contextLabel = 9 - contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n        }\n        return decoded;\n      },\n      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var neighborsSignificance = this.neighborsSignificance;\n        var contexts = this.contexts;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var length = width * height;\n        var width4 = width * 4;\n        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n          indexNext = Math.min(length, index0 + width4);\n          for (var j = 0; j < width; j++) {\n            for (var index = index0 + j; index < indexNext; index += width) {\n              if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = 16;\n              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n                processingFlags[index] ^= firstMagnitudeBitMask;\n                var significance = neighborsSignificance[index] & 127;\n                contextLabel = significance === 0 ? 15 : 14;\n              }\n              var bit = decoder.readBit(contexts, contextLabel);\n              coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      runCleanupPass: function BitModel_runCleanupPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var neighborsSignificance = this.neighborsSignificance;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var oneRowDown = width;\n        var twoRowsDown = width * 2;\n        var threeRowsDown = width * 3;\n        var iNext;\n        for (var i0 = 0; i0 < height; i0 = iNext) {\n          iNext = Math.min(i0 + 4, height);\n          var indexBase = i0 * width;\n          var checkAllEmpty = i0 + 3 < height;\n          for (var j = 0; j < width; j++) {\n            var index0 = indexBase + j;\n            var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n            var i1 = 0,\n                index = index0;\n            var i = i0,\n                sign;\n            if (allEmpty) {\n              var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n              if (!hasSignificantCoefficent) {\n                bitsDecoded[index0]++;\n                bitsDecoded[index0 + oneRowDown]++;\n                bitsDecoded[index0 + twoRowsDown]++;\n                bitsDecoded[index0 + threeRowsDown]++;\n                continue;\n              }\n              i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n              if (i1 !== 0) {\n                i = i0 + i1;\n                index += i1 * width;\n              }\n              sign = this.decodeSignBit(i, j, index);\n              coefficentsSign[index] = sign;\n              coefficentsMagnitude[index] = 1;\n              this.setNeighborsSignificance(i, j, index);\n              processingFlags[index] |= firstMagnitudeBitMask;\n              index = index0;\n              for (var i2 = i0; i2 <= i; i2++, index += width) {\n                bitsDecoded[index]++;\n              }\n              i1++;\n            }\n            for (i = i0 + i1; i < iNext; i++, index += width) {\n              if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision === 1) {\n                sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n            }\n          }\n        }\n      },\n      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n        var decoder = this.decoder;\n        var contexts = this.contexts;\n        var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n        if (symbol !== 0xA) {\n          throw new JpxError('Invalid segmentation symbol');\n        }\n      }\n    };\n    return BitModel;\n  }();\n  var Transform = function TransformClosure() {\n    function Transform() {}\n    Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n      var ll = subbands[0];\n      for (var i = 1, ii = subbands.length; i < ii; i++) {\n        ll = this.iterate(ll, subbands[i], u0, v0);\n      }\n      return ll;\n    };\n    Transform.prototype.extend = function extend(buffer, offset, size) {\n      var i1 = offset - 1,\n          j1 = offset + 1;\n      var i2 = offset + size - 2,\n          j2 = offset + size;\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1] = buffer[j1];\n      buffer[j2] = buffer[i2];\n    };\n    Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n      var llWidth = ll.width,\n          llHeight = ll.height,\n          llItems = ll.items;\n      var width = hl_lh_hh.width;\n      var height = hl_lh_hh.height;\n      var items = hl_lh_hh.items;\n      var i, j, k, l, u, v;\n      for (k = 0, i = 0; i < llHeight; i++) {\n        l = i * 2 * width;\n        for (j = 0; j < llWidth; j++, k++, l += 2) {\n          items[l] = llItems[k];\n        }\n      }\n      llItems = ll.items = null;\n      var bufferPadding = 4;\n      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n      if (width === 1) {\n        if ((u0 & 1) !== 0) {\n          for (v = 0, k = 0; v < height; v++, k += width) {\n            items[k] *= 0.5;\n          }\n        }\n      } else {\n        for (v = 0, k = 0; v < height; v++, k += width) {\n          rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n          this.extend(rowBuffer, bufferPadding, width);\n          this.filter(rowBuffer, bufferPadding, width);\n          items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n        }\n      }\n      var numBuffers = 16;\n      var colBuffers = [];\n      for (i = 0; i < numBuffers; i++) {\n        colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n      }\n      var b,\n          currentBuffer = 0;\n      ll = bufferPadding + height;\n      if (height === 1) {\n        if ((v0 & 1) !== 0) {\n          for (u = 0; u < width; u++) {\n            items[u] *= 0.5;\n          }\n        }\n      } else {\n        for (u = 0; u < width; u++) {\n          if (currentBuffer === 0) {\n            numBuffers = Math.min(width - u, numBuffers);\n            for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                colBuffers[b][l] = items[k + b];\n              }\n            }\n            currentBuffer = numBuffers;\n          }\n          currentBuffer--;\n          var buffer = colBuffers[currentBuffer];\n          this.extend(buffer, bufferPadding, height);\n          this.filter(buffer, bufferPadding, height);\n          if (currentBuffer === 0) {\n            k = u - numBuffers + 1;\n            for (l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                items[k + b] = colBuffers[b][l];\n              }\n            }\n          }\n        }\n      }\n      return {\n        width: width,\n        height: height,\n        items: items\n      };\n    };\n    return Transform;\n  }();\n  var IrreversibleTransform = function IrreversibleTransformClosure() {\n    function IrreversibleTransform() {\n      Transform.call(this);\n    }\n    IrreversibleTransform.prototype = Object.create(Transform.prototype);\n    IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n, current, next;\n      var alpha = -1.586134342059924;\n      var beta = -0.052980118572961;\n      var gamma = 0.882911075530934;\n      var delta = 0.443506852043971;\n      var K = 1.230174104914001;\n      var K_ = 1 / K;\n      j = offset - 3;\n      for (n = len + 4; n--; j += 2) {\n        x[j] *= K_;\n      }\n      j = offset - 2;\n      current = delta * x[j - 1];\n      for (n = len + 3; n--; j += 2) {\n        next = delta * x[j + 1];\n        x[j] = K * x[j] - current - next;\n        if (n--) {\n          j += 2;\n          current = delta * x[j + 1];\n          x[j] = K * x[j] - current - next;\n        } else {\n          break;\n        }\n      }\n      j = offset - 1;\n      current = gamma * x[j - 1];\n      for (n = len + 2; n--; j += 2) {\n        next = gamma * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = gamma * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      j = offset;\n      current = beta * x[j - 1];\n      for (n = len + 1; n--; j += 2) {\n        next = beta * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = beta * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      if (len !== 0) {\n        j = offset + 1;\n        current = alpha * x[j - 1];\n        for (n = len; n--; j += 2) {\n          next = alpha * x[j + 1];\n          x[j] -= current + next;\n          if (n--) {\n            j += 2;\n            current = alpha * x[j + 1];\n            x[j] -= current + next;\n          } else {\n            break;\n          }\n        }\n      }\n    };\n    return IrreversibleTransform;\n  }();\n  var ReversibleTransform = function ReversibleTransformClosure() {\n    function ReversibleTransform() {\n      Transform.call(this);\n    }\n    ReversibleTransform.prototype = Object.create(Transform.prototype);\n    ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n;\n      for (j = offset, n = len + 1; n--; j += 2) {\n        x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n      }\n      for (j = offset + 1, n = len; n--; j += 2) {\n        x[j] += x[j - 1] + x[j + 1] >> 1;\n      }\n    };\n    return ReversibleTransform;\n  }();\n  return JpxImage;\n}();\nexports.JpxImage = JpxImage;\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateSHA512 = exports.calculateSHA384 = exports.calculateSHA256 = exports.calculateMD5 = exports.PDF20 = exports.PDF17 = exports.CipherTransformFactory = exports.ARCFourCipher = exports.AES256Cipher = exports.AES128Cipher = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _stream = __w_pdfjs_require__(4);\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ARCFourCipher = function ARCFourCipherClosure() {\n  function ARCFourCipher(key) {\n    this.a = 0;\n    this.b = 0;\n    var s = new Uint8Array(256);\n    var i,\n        j = 0,\n        tmp,\n        keyLength = key.length;\n    for (i = 0; i < 256; ++i) {\n      s[i] = i;\n    }\n    for (i = 0; i < 256; ++i) {\n      tmp = s[i];\n      j = j + tmp + key[i % keyLength] & 0xFF;\n      s[i] = s[j];\n      s[j] = tmp;\n    }\n    this.s = s;\n  }\n  ARCFourCipher.prototype = {\n    encryptBlock: function ARCFourCipher_encryptBlock(data) {\n      var i,\n          n = data.length,\n          tmp,\n          tmp2;\n      var a = this.a,\n          b = this.b,\n          s = this.s;\n      var output = new Uint8Array(n);\n      for (i = 0; i < n; ++i) {\n        a = a + 1 & 0xFF;\n        tmp = s[a];\n        b = b + tmp & 0xFF;\n        tmp2 = s[b];\n        s[a] = tmp2;\n        s[b] = tmp;\n        output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n      }\n      this.a = a;\n      this.b = b;\n      return output;\n    }\n  };\n  ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n  return ARCFourCipher;\n}();\nvar calculateMD5 = function calculateMD5Closure() {\n  var r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n  var k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n  function hash(data, offset, length) {\n    var h0 = 1732584193,\n        h1 = -271733879,\n        h2 = -1732584194,\n        h3 = 271733878;\n    var paddedLength = length + 72 & ~63;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = length << 3 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    var w = new Int32Array(16);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j, i += 4) {\n        w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          f,\n          g;\n      for (j = 0; j < 64; ++j) {\n        if (j < 16) {\n          f = b & c | ~b & d;\n          g = j;\n        } else if (j < 32) {\n          f = d & b | ~d & c;\n          g = 5 * j + 1 & 15;\n        } else if (j < 48) {\n          f = b ^ c ^ d;\n          g = 3 * j + 5 & 15;\n        } else {\n          f = c ^ (b | ~d);\n          g = 7 * j & 15;\n        }\n        var tmp = d,\n            rotateArg = a + f + k[j] + w[g] | 0,\n            rotate = r[j];\n        d = c;\n        c = b;\n        b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n        a = tmp;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n    }\n    return new Uint8Array([h0 & 0xFF, h0 >> 8 & 0xFF, h0 >> 16 & 0xFF, h0 >>> 24 & 0xFF, h1 & 0xFF, h1 >> 8 & 0xFF, h1 >> 16 & 0xFF, h1 >>> 24 & 0xFF, h2 & 0xFF, h2 >> 8 & 0xFF, h2 >> 16 & 0xFF, h2 >>> 24 & 0xFF, h3 & 0xFF, h3 >> 8 & 0xFF, h3 >> 16 & 0xFF, h3 >>> 24 & 0xFF]);\n  }\n  return hash;\n}();\nvar Word64 = function Word64Closure() {\n  function Word64(highInteger, lowInteger) {\n    this.high = highInteger | 0;\n    this.low = lowInteger | 0;\n  }\n  Word64.prototype = {\n    and: function Word64_and(word) {\n      this.high &= word.high;\n      this.low &= word.low;\n    },\n    xor: function Word64_xor(word) {\n      this.high ^= word.high;\n      this.low ^= word.low;\n    },\n    or: function Word64_or(word) {\n      this.high |= word.high;\n      this.low |= word.low;\n    },\n    shiftRight: function Word64_shiftRight(places) {\n      if (places >= 32) {\n        this.low = this.high >>> places - 32 | 0;\n        this.high = 0;\n      } else {\n        this.low = this.low >>> places | this.high << 32 - places;\n        this.high = this.high >>> places | 0;\n      }\n    },\n    shiftLeft: function Word64_shiftLeft(places) {\n      if (places >= 32) {\n        this.high = this.low << places - 32;\n        this.low = 0;\n      } else {\n        this.high = this.high << places | this.low >>> 32 - places;\n        this.low = this.low << places;\n      }\n    },\n    rotateRight: function Word64_rotateRight(places) {\n      var low, high;\n      if (places & 32) {\n        high = this.low;\n        low = this.high;\n      } else {\n        low = this.low;\n        high = this.high;\n      }\n      places &= 31;\n      this.low = low >>> places | high << 32 - places;\n      this.high = high >>> places | low << 32 - places;\n    },\n    not: function Word64_not() {\n      this.high = ~this.high;\n      this.low = ~this.low;\n    },\n    add: function Word64_add(word) {\n      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n      var highAdd = (this.high >>> 0) + (word.high >>> 0);\n      if (lowAdd > 0xFFFFFFFF) {\n        highAdd += 1;\n      }\n      this.low = lowAdd | 0;\n      this.high = highAdd | 0;\n    },\n    copyTo: function Word64_copyTo(bytes, offset) {\n      bytes[offset] = this.high >>> 24 & 0xFF;\n      bytes[offset + 1] = this.high >> 16 & 0xFF;\n      bytes[offset + 2] = this.high >> 8 & 0xFF;\n      bytes[offset + 3] = this.high & 0xFF;\n      bytes[offset + 4] = this.low >>> 24 & 0xFF;\n      bytes[offset + 5] = this.low >> 16 & 0xFF;\n      bytes[offset + 6] = this.low >> 8 & 0xFF;\n      bytes[offset + 7] = this.low & 0xFF;\n    },\n    assign: function Word64_assign(word) {\n      this.high = word.high;\n      this.low = word.low;\n    }\n  };\n  return Word64;\n}();\nvar calculateSHA256 = function calculateSHA256Closure() {\n  function rotr(x, n) {\n    return x >>> n | x << 32 - n;\n  }\n  function ch(x, y, z) {\n    return x & y ^ ~x & z;\n  }\n  function maj(x, y, z) {\n    return x & y ^ x & z ^ y & z;\n  }\n  function sigma(x) {\n    return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n  }\n  function sigmaPrime(x) {\n    return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n  }\n  function littleSigma(x) {\n    return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n  }\n  function littleSigmaPrime(x) {\n    return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n  }\n  var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n  function hash(data, offset, length) {\n    var h0 = 0x6a09e667,\n        h1 = 0xbb67ae85,\n        h2 = 0x3c6ef372,\n        h3 = 0xa54ff53a,\n        h4 = 0x510e527f,\n        h5 = 0x9b05688c,\n        h6 = 0x1f83d9ab,\n        h7 = 0x5be0cd19;\n    var paddedLength = Math.ceil((length + 9) / 64) * 64;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Uint32Array(64);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        i += 4;\n      }\n      for (j = 16; j < 64; ++j) {\n        w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          e = h4,\n          f = h5,\n          g = h6,\n          h = h7,\n          t1,\n          t2;\n      for (j = 0; j < 64; ++j) {\n        t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n        t2 = sigma(a) + maj(a, b, c);\n        h = g;\n        g = f;\n        f = e;\n        e = d + t1 | 0;\n        d = c;\n        c = b;\n        b = a;\n        a = t1 + t2 | 0;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n      h4 = h4 + e | 0;\n      h5 = h5 + f | 0;\n      h6 = h6 + g | 0;\n      h7 = h7 + h | 0;\n    }\n    return new Uint8Array([h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF, h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF]);\n  }\n  return hash;\n}();\nvar calculateSHA512 = function calculateSHA512Closure() {\n  function ch(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.not();\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function maj(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.and(z);\n    result.xor(tmp);\n    tmp.assign(y);\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function sigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(28);\n    tmp.assign(x);\n    tmp.rotateRight(34);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(39);\n    result.xor(tmp);\n  }\n  function sigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(14);\n    tmp.assign(x);\n    tmp.rotateRight(18);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(41);\n    result.xor(tmp);\n  }\n  function littleSigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(1);\n    tmp.assign(x);\n    tmp.rotateRight(8);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(7);\n    result.xor(tmp);\n  }\n  function littleSigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(19);\n    tmp.assign(x);\n    tmp.rotateRight(61);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(6);\n    result.xor(tmp);\n  }\n  var k = [new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd), new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc), new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019), new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118), new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe), new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2), new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1), new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694), new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3), new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65), new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483), new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5), new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210), new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4), new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725), new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70), new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926), new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df), new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8), new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b), new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001), new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30), new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910), new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8), new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53), new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8), new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb), new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3), new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60), new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec), new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9), new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b), new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207), new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178), new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6), new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b), new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493), new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c), new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a), new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\n  function hash(data, offset, length, mode384) {\n    mode384 = !!mode384;\n    var h0, h1, h2, h3, h4, h5, h6, h7;\n    if (!mode384) {\n      h0 = new Word64(0x6a09e667, 0xf3bcc908);\n      h1 = new Word64(0xbb67ae85, 0x84caa73b);\n      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n      h4 = new Word64(0x510e527f, 0xade682d1);\n      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n      h7 = new Word64(0x5be0cd19, 0x137e2179);\n    } else {\n      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n      h1 = new Word64(0x629a292a, 0x367cd507);\n      h2 = new Word64(0x9159015a, 0x3070dd17);\n      h3 = new Word64(0x152fecd8, 0xf70e5939);\n      h4 = new Word64(0x67332667, 0xffc00b31);\n      h5 = new Word64(0x8eb44a87, 0x68581511);\n      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n    }\n    var paddedLength = Math.ceil((length + 17) / 128) * 128;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 16;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Array(80);\n    for (i = 0; i < 80; i++) {\n      w[i] = new Word64(0, 0);\n    }\n    var a = new Word64(0, 0),\n        b = new Word64(0, 0),\n        c = new Word64(0, 0);\n    var d = new Word64(0, 0),\n        e = new Word64(0, 0),\n        f = new Word64(0, 0);\n    var g = new Word64(0, 0),\n        h = new Word64(0, 0);\n    var t1 = new Word64(0, 0),\n        t2 = new Word64(0, 0);\n    var tmp1 = new Word64(0, 0),\n        tmp2 = new Word64(0, 0),\n        tmp3;\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n        i += 8;\n      }\n      for (j = 16; j < 80; ++j) {\n        tmp3 = w[j];\n        littleSigmaPrime(tmp3, w[j - 2], tmp2);\n        tmp3.add(w[j - 7]);\n        littleSigma(tmp1, w[j - 15], tmp2);\n        tmp3.add(tmp1);\n        tmp3.add(w[j - 16]);\n      }\n      a.assign(h0);\n      b.assign(h1);\n      c.assign(h2);\n      d.assign(h3);\n      e.assign(h4);\n      f.assign(h5);\n      g.assign(h6);\n      h.assign(h7);\n      for (j = 0; j < 80; ++j) {\n        t1.assign(h);\n        sigmaPrime(tmp1, e, tmp2);\n        t1.add(tmp1);\n        ch(tmp1, e, f, g, tmp2);\n        t1.add(tmp1);\n        t1.add(k[j]);\n        t1.add(w[j]);\n        sigma(t2, a, tmp2);\n        maj(tmp1, a, b, c, tmp2);\n        t2.add(tmp1);\n        tmp3 = h;\n        h = g;\n        g = f;\n        f = e;\n        d.add(t1);\n        e = d;\n        d = c;\n        c = b;\n        b = a;\n        tmp3.assign(t1);\n        tmp3.add(t2);\n        a = tmp3;\n      }\n      h0.add(a);\n      h1.add(b);\n      h2.add(c);\n      h3.add(d);\n      h4.add(e);\n      h5.add(f);\n      h6.add(g);\n      h7.add(h);\n    }\n    var result;\n    if (!mode384) {\n      result = new Uint8Array(64);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n      h6.copyTo(result, 48);\n      h7.copyTo(result, 56);\n    } else {\n      result = new Uint8Array(48);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n    }\n    return result;\n  }\n  return hash;\n}();\nvar calculateSHA384 = function calculateSHA384Closure() {\n  function hash(data, offset, length) {\n    return calculateSHA512(data, offset, length, true);\n  }\n  return hash;\n}();\nvar NullCipher = function NullCipherClosure() {\n  function NullCipher() {}\n  NullCipher.prototype = {\n    decryptBlock: function NullCipher_decryptBlock(data) {\n      return data;\n    }\n  };\n  return NullCipher;\n}();\n\nvar AESBaseCipher = function () {\n  function AESBaseCipher() {\n    _classCallCheck(this, AESBaseCipher);\n\n    if (this.constructor === AESBaseCipher) {\n      (0, _util.unreachable)('Cannot initialize AESBaseCipher.');\n    }\n    this._s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n    this._inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n    this._mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n    this._mixCol = new Uint8Array(256);\n    for (var i = 0; i < 256; i++) {\n      if (i < 128) {\n        this._mixCol[i] = i << 1;\n      } else {\n        this._mixCol[i] = i << 1 ^ 0x1b;\n      }\n    }\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n\n  _createClass(AESBaseCipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      (0, _util.unreachable)('Cannot call `_expandKey` on the base class');\n    }\n  }, {\n    key: '_decrypt',\n    value: function _decrypt(input, key) {\n      var t = void 0,\n          u = void 0,\n          v = void 0;\n      var state = new Uint8Array(16);\n      state.set(input);\n      for (var j = 0, k = this._keySize; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (var i = this._cyclesOfRepetition - 1; i >= 1; --i) {\n        t = state[13];\n        state[13] = state[9];\n        state[9] = state[5];\n        state[5] = state[1];\n        state[1] = t;\n        t = state[14];\n        u = state[10];\n        state[14] = state[6];\n        state[10] = state[2];\n        state[6] = t;\n        state[2] = u;\n        t = state[15];\n        u = state[11];\n        v = state[7];\n        state[15] = state[3];\n        state[11] = t;\n        state[7] = u;\n        state[3] = v;\n        for (var _j = 0; _j < 16; ++_j) {\n          state[_j] = this._inv_s[state[_j]];\n        }\n        for (var _j2 = 0, _k = i * 16; _j2 < 16; ++_j2, ++_k) {\n          state[_j2] ^= key[_k];\n        }\n        for (var _j3 = 0; _j3 < 16; _j3 += 4) {\n          var s0 = this._mix[state[_j3]];\n          var s1 = this._mix[state[_j3 + 1]];\n          var s2 = this._mix[state[_j3 + 2]];\n          var s3 = this._mix[state[_j3 + 3]];\n          t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n          state[_j3] = t >>> 24 & 0xFF;\n          state[_j3 + 1] = t >> 16 & 0xFF;\n          state[_j3 + 2] = t >> 8 & 0xFF;\n          state[_j3 + 3] = t & 0xFF;\n        }\n      }\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (var _j4 = 0; _j4 < 16; ++_j4) {\n        state[_j4] = this._inv_s[state[_j4]];\n        state[_j4] ^= key[_j4];\n      }\n      return state;\n    }\n  }, {\n    key: '_encrypt',\n    value: function _encrypt(input, key) {\n      var s = this._s;\n      var t = void 0,\n          u = void 0,\n          v = void 0;\n      var state = new Uint8Array(16);\n      state.set(input);\n      for (var j = 0; j < 16; ++j) {\n        state[j] ^= key[j];\n      }\n      for (var i = 1; i < this._cyclesOfRepetition; i++) {\n        for (var _j5 = 0; _j5 < 16; ++_j5) {\n          state[_j5] = s[state[_j5]];\n        }\n        v = state[1];\n        state[1] = state[5];\n        state[5] = state[9];\n        state[9] = state[13];\n        state[13] = v;\n        v = state[2];\n        u = state[6];\n        state[2] = state[10];\n        state[6] = state[14];\n        state[10] = v;\n        state[14] = u;\n        v = state[3];\n        u = state[7];\n        t = state[11];\n        state[3] = state[15];\n        state[7] = v;\n        state[11] = u;\n        state[15] = t;\n        for (var _j6 = 0; _j6 < 16; _j6 += 4) {\n          var s0 = state[_j6 + 0];\n          var s1 = state[_j6 + 1];\n          var s2 = state[_j6 + 2];\n          var s3 = state[_j6 + 3];\n          t = s0 ^ s1 ^ s2 ^ s3;\n          state[_j6 + 0] ^= t ^ this._mixCol[s0 ^ s1];\n          state[_j6 + 1] ^= t ^ this._mixCol[s1 ^ s2];\n          state[_j6 + 2] ^= t ^ this._mixCol[s2 ^ s3];\n          state[_j6 + 3] ^= t ^ this._mixCol[s3 ^ s0];\n        }\n        for (var _j7 = 0, k = i * 16; _j7 < 16; ++_j7, ++k) {\n          state[_j7] ^= key[k];\n        }\n      }\n      for (var _j8 = 0; _j8 < 16; ++_j8) {\n        state[_j8] = s[state[_j8]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (var _j9 = 0, _k2 = this._keySize; _j9 < 16; ++_j9, ++_k2) {\n        state[_j9] ^= key[_k2];\n      }\n      return state;\n    }\n  }, {\n    key: '_decryptBlock2',\n    value: function _decryptBlock2(data, finalize) {\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      var result = [],\n          iv = this.iv;\n      for (var i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        var plain = this._decrypt(buffer, this._key);\n        for (var j = 0; j < 16; ++j) {\n          plain[j] ^= iv[j];\n        }\n        iv = buffer;\n        result.push(plain);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array(0);\n      }\n      var outputLength = 16 * result.length;\n      if (finalize) {\n        var lastBlock = result[result.length - 1];\n        var psLen = lastBlock[15];\n        if (psLen <= 16) {\n          for (var _i = 15, ii = 16 - psLen; _i >= ii; --_i) {\n            if (lastBlock[_i] !== psLen) {\n              psLen = 0;\n              break;\n            }\n          }\n          outputLength -= psLen;\n          result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n        }\n      }\n      var output = new Uint8Array(outputLength);\n      for (var _i2 = 0, _j10 = 0, _ii = result.length; _i2 < _ii; ++_i2, _j10 += 16) {\n        output.set(result[_i2], _j10);\n      }\n      return output;\n    }\n  }, {\n    key: 'decryptBlock',\n    value: function decryptBlock(data, finalize) {\n      var iv = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      if (iv) {\n        this.iv = iv;\n      } else {\n        for (var i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n          buffer[bufferLength] = data[i];\n        }\n        if (bufferLength < 16) {\n          this.bufferLength = bufferLength;\n          return new Uint8Array(0);\n        }\n        this.iv = buffer;\n        data = data.subarray(16);\n      }\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = this._decryptBlock2;\n      return this.decryptBlock(data, finalize);\n    }\n  }, {\n    key: 'encrypt',\n    value: function encrypt(data, iv) {\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      var result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (var i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (var j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = this._encrypt(buffer, this._key);\n        iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array(0);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (var _i3 = 0, _j11 = 0, ii = result.length; _i3 < ii; ++_i3, _j11 += 16) {\n        output.set(result[_i3], _j11);\n      }\n      return output;\n    }\n  }]);\n\n  return AESBaseCipher;\n}();\n\nvar AES128Cipher = function (_AESBaseCipher) {\n  _inherits(AES128Cipher, _AESBaseCipher);\n\n  function AES128Cipher(key) {\n    _classCallCheck(this, AES128Cipher);\n\n    var _this = _possibleConstructorReturn(this, (AES128Cipher.__proto__ || Object.getPrototypeOf(AES128Cipher)).call(this));\n\n    _this._cyclesOfRepetition = 10;\n    _this._keySize = 160;\n    _this._rcon = new Uint8Array([0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d]);\n    _this._key = _this._expandKey(key);\n    return _this;\n  }\n\n  _createClass(AES128Cipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      var b = 176;\n      var s = this._s;\n      var rcon = this._rcon;\n      var result = new Uint8Array(b);\n      result.set(cipherKey);\n      for (var j = 16, i = 1; j < b; ++i) {\n        var t1 = result[j - 3];\n        var t2 = result[j - 2];\n        var t3 = result[j - 1];\n        var t4 = result[j - 4];\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n        t1 = t1 ^ rcon[i];\n        for (var n = 0; n < 4; ++n) {\n          result[j] = t1 ^= result[j - 16];\n          j++;\n          result[j] = t2 ^= result[j - 16];\n          j++;\n          result[j] = t3 ^= result[j - 16];\n          j++;\n          result[j] = t4 ^= result[j - 16];\n          j++;\n        }\n      }\n      return result;\n    }\n  }]);\n\n  return AES128Cipher;\n}(AESBaseCipher);\n\nvar AES256Cipher = function (_AESBaseCipher2) {\n  _inherits(AES256Cipher, _AESBaseCipher2);\n\n  function AES256Cipher(key) {\n    _classCallCheck(this, AES256Cipher);\n\n    var _this2 = _possibleConstructorReturn(this, (AES256Cipher.__proto__ || Object.getPrototypeOf(AES256Cipher)).call(this));\n\n    _this2._cyclesOfRepetition = 14;\n    _this2._keySize = 224;\n    _this2._key = _this2._expandKey(key);\n    return _this2;\n  }\n\n  _createClass(AES256Cipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      var b = 240;\n      var s = this._s;\n      var result = new Uint8Array(b);\n      result.set(cipherKey);\n      var r = 1;\n      var t1 = void 0,\n          t2 = void 0,\n          t3 = void 0,\n          t4 = void 0;\n      for (var j = 32, i = 1; j < b; ++i) {\n        if (j % 32 === 16) {\n          t1 = s[t1];\n          t2 = s[t2];\n          t3 = s[t3];\n          t4 = s[t4];\n        } else if (j % 32 === 0) {\n          t1 = result[j - 3];\n          t2 = result[j - 2];\n          t3 = result[j - 1];\n          t4 = result[j - 4];\n          t1 = s[t1];\n          t2 = s[t2];\n          t3 = s[t3];\n          t4 = s[t4];\n          t1 = t1 ^ r;\n          if ((r <<= 1) >= 256) {\n            r = (r ^ 0x1b) & 0xFF;\n          }\n        }\n        for (var n = 0; n < 4; ++n) {\n          result[j] = t1 ^= result[j - 32];\n          j++;\n          result[j] = t2 ^= result[j - 32];\n          j++;\n          result[j] = t3 ^= result[j - 32];\n          j++;\n          result[j] = t4 ^= result[j - 32];\n          j++;\n        }\n      }\n      return result;\n    }\n  }]);\n\n  return AES256Cipher;\n}(AESBaseCipher);\n\nvar PDF17 = function PDF17Closure() {\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function PDF17() {}\n  PDF17.prototype = {\n    checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF17;\n}();\nvar PDF20 = function PDF20Closure() {\n  function concatArrays(array1, array2) {\n    var t = new Uint8Array(array1.length + array2.length);\n    t.set(array1, 0);\n    t.set(array2, array1.length);\n    return t;\n  }\n  function calculatePDF20Hash(password, input, userBytes) {\n    var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n    var e = [0];\n    var i = 0;\n    while (i < 64 || e[e.length - 1] > i - 32) {\n      var arrayLength = password.length + k.length + userBytes.length;\n      var k1 = new Uint8Array(arrayLength * 64);\n      var array = concatArrays(password, k);\n      array = concatArrays(array, userBytes);\n      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n        k1.set(array, pos);\n      }\n      var cipher = new AES128Cipher(k.subarray(0, 16));\n      e = cipher.encrypt(k1, k.subarray(16, 32));\n      var remainder = 0;\n      for (var z = 0; z < 16; z++) {\n        remainder *= 256 % 3;\n        remainder %= 3;\n        remainder += (e[z] >>> 0) % 3;\n        remainder %= 3;\n      }\n      if (remainder === 0) {\n        k = calculateSHA256(e, 0, e.length);\n      } else if (remainder === 1) {\n        k = calculateSHA384(e, 0, e.length);\n      } else if (remainder === 2) {\n        k = calculateSHA512(e, 0, e.length);\n      }\n      i++;\n    }\n    return k.subarray(0, 32);\n  }\n  function PDF20() {}\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  PDF20.prototype = {\n    hash: function PDF20_hash(password, concatBytes, userBytes) {\n      return calculatePDF20Hash(password, concatBytes, userBytes);\n    },\n    checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculatePDF20Hash(password, hashData, userBytes);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculatePDF20Hash(password, hashData, []);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculatePDF20Hash(password, hashData, userBytes);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculatePDF20Hash(password, hashData, []);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF20;\n}();\nvar CipherTransform = function CipherTransformClosure() {\n  function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n    this.StringCipherConstructor = stringCipherConstructor;\n    this.StreamCipherConstructor = streamCipherConstructor;\n  }\n  CipherTransform.prototype = {\n    createStream: function CipherTransform_createStream(stream, length) {\n      var cipher = new this.StreamCipherConstructor();\n      return new _stream.DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n        return cipher.decryptBlock(data, finalize);\n      });\n    },\n    decryptString: function CipherTransform_decryptString(s) {\n      var cipher = new this.StringCipherConstructor();\n      var data = (0, _util.stringToBytes)(s);\n      data = cipher.decryptBlock(data, true);\n      return (0, _util.bytesToString)(data);\n    }\n  };\n  return CipherTransform;\n}();\nvar CipherTransformFactory = function CipherTransformFactoryClosure() {\n  var defaultPasswordBytes = new Uint8Array([0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41, 0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08, 0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80, 0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\n  function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n    if (password) {\n      var passwordLength = Math.min(127, password.length);\n      password = password.subarray(0, passwordLength);\n    } else {\n      password = [];\n    }\n    var pdfAlgorithm;\n    if (revision === 6) {\n      pdfAlgorithm = new PDF20();\n    } else {\n      pdfAlgorithm = new PDF17();\n    }\n    if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n    } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n    }\n    return null;\n  }\n  function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n    var hashDataSize = 40 + ownerPassword.length + fileId.length;\n    var hashData = new Uint8Array(hashDataSize),\n        i = 0,\n        j,\n        n;\n    if (password) {\n      n = Math.min(32, password.length);\n      for (; i < n; ++i) {\n        hashData[i] = password[i];\n      }\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    for (j = 0, n = ownerPassword.length; j < n; ++j) {\n      hashData[i++] = ownerPassword[j];\n    }\n    hashData[i++] = flags & 0xFF;\n    hashData[i++] = flags >> 8 & 0xFF;\n    hashData[i++] = flags >> 16 & 0xFF;\n    hashData[i++] = flags >>> 24 & 0xFF;\n    for (j = 0, n = fileId.length; j < n; ++j) {\n      hashData[i++] = fileId[j];\n    }\n    if (revision >= 4 && !encryptMetadata) {\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, keyLengthInBytes);\n      }\n    }\n    var encryptionKey = hash.subarray(0, keyLengthInBytes);\n    var cipher, checkData;\n    if (revision >= 3) {\n      for (i = 0; i < 32; ++i) {\n        hashData[i] = defaultPasswordBytes[i];\n      }\n      for (j = 0, n = fileId.length; j < n; ++j) {\n        hashData[i++] = fileId[j];\n      }\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n      n = encryptionKey.length;\n      var derivedKey = new Uint8Array(n),\n          k;\n      for (j = 1; j <= 19; ++j) {\n        for (k = 0; k < n; ++k) {\n          derivedKey[k] = encryptionKey[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        checkData = cipher.encryptBlock(checkData);\n      }\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    } else {\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(defaultPasswordBytes);\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    }\n    return encryptionKey;\n  }\n  function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n    var hashData = new Uint8Array(32),\n        i = 0,\n        j,\n        n;\n    n = Math.min(32, password.length);\n    for (; i < n; ++i) {\n      hashData[i] = password[i];\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, hash.length);\n      }\n    }\n    var cipher, userPassword;\n    if (revision >= 3) {\n      userPassword = ownerPassword;\n      var derivedKey = new Uint8Array(keyLengthInBytes),\n          k;\n      for (j = 19; j >= 0; j--) {\n        for (k = 0; k < keyLengthInBytes; ++k) {\n          derivedKey[k] = hash[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        userPassword = cipher.encryptBlock(userPassword);\n      }\n    } else {\n      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n      userPassword = cipher.encryptBlock(ownerPassword);\n    }\n    return userPassword;\n  }\n  var identityName = _primitives.Name.get('Identity');\n  function CipherTransformFactory(dict, fileId, password) {\n    var filter = dict.get('Filter');\n    if (!(0, _primitives.isName)(filter, 'Standard')) {\n      throw new _util.FormatError('unknown encryption method');\n    }\n    this.dict = dict;\n    var algorithm = dict.get('V');\n    if (!Number.isInteger(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n      throw new _util.FormatError('unsupported encryption algorithm');\n    }\n    this.algorithm = algorithm;\n    var keyLength = dict.get('Length');\n    if (!keyLength) {\n      if (algorithm <= 3) {\n        keyLength = 40;\n      } else {\n        var cfDict = dict.get('CF');\n        var streamCryptoName = dict.get('StmF');\n        if ((0, _primitives.isDict)(cfDict) && (0, _primitives.isName)(streamCryptoName)) {\n          cfDict.suppressEncryption = true;\n          var handlerDict = cfDict.get(streamCryptoName.name);\n          keyLength = handlerDict && handlerDict.get('Length') || 128;\n          if (keyLength < 40) {\n            keyLength <<= 3;\n          }\n        }\n      }\n    }\n    if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n      throw new _util.FormatError('invalid key length');\n    }\n    var ownerPassword = (0, _util.stringToBytes)(dict.get('O')).subarray(0, 32);\n    var userPassword = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 32);\n    var flags = dict.get('P');\n    var revision = dict.get('R');\n    var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n    this.encryptMetadata = encryptMetadata;\n    var fileIdBytes = (0, _util.stringToBytes)(fileId);\n    var passwordBytes;\n    if (password) {\n      if (revision === 6) {\n        try {\n          password = (0, _util.utf8StringToString)(password);\n        } catch (ex) {\n          (0, _util.warn)('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n        }\n      }\n      passwordBytes = (0, _util.stringToBytes)(password);\n    }\n    var encryptionKey;\n    if (algorithm !== 5) {\n      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    } else {\n      var ownerValidationSalt = (0, _util.stringToBytes)(dict.get('O')).subarray(32, 40);\n      var ownerKeySalt = (0, _util.stringToBytes)(dict.get('O')).subarray(40, 48);\n      var uBytes = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 48);\n      var userValidationSalt = (0, _util.stringToBytes)(dict.get('U')).subarray(32, 40);\n      var userKeySalt = (0, _util.stringToBytes)(dict.get('U')).subarray(40, 48);\n      var ownerEncryption = (0, _util.stringToBytes)(dict.get('OE'));\n      var userEncryption = (0, _util.stringToBytes)(dict.get('UE'));\n      var perms = (0, _util.stringToBytes)(dict.get('Perms'));\n      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n    }\n    if (!encryptionKey && !password) {\n      throw new _util.PasswordException('No password given', _util.PasswordResponses.NEED_PASSWORD);\n    } else if (!encryptionKey && password) {\n      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    }\n    if (!encryptionKey) {\n      throw new _util.PasswordException('Incorrect Password', _util.PasswordResponses.INCORRECT_PASSWORD);\n    }\n    this.encryptionKey = encryptionKey;\n    if (algorithm >= 4) {\n      var cf = dict.get('CF');\n      if ((0, _primitives.isDict)(cf)) {\n        cf.suppressEncryption = true;\n      }\n      this.cf = cf;\n      this.stmf = dict.get('StmF') || identityName;\n      this.strf = dict.get('StrF') || identityName;\n      this.eff = dict.get('EFF') || this.stmf;\n    }\n  }\n  function buildObjectKey(num, gen, encryptionKey, isAes) {\n    var key = new Uint8Array(encryptionKey.length + 9),\n        i,\n        n;\n    for (i = 0, n = encryptionKey.length; i < n; ++i) {\n      key[i] = encryptionKey[i];\n    }\n    key[i++] = num & 0xFF;\n    key[i++] = num >> 8 & 0xFF;\n    key[i++] = num >> 16 & 0xFF;\n    key[i++] = gen & 0xFF;\n    key[i++] = gen >> 8 & 0xFF;\n    if (isAes) {\n      key[i++] = 0x73;\n      key[i++] = 0x41;\n      key[i++] = 0x6C;\n      key[i++] = 0x54;\n    }\n    var hash = calculateMD5(key, 0, i);\n    return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n  }\n  function buildCipherConstructor(cf, name, num, gen, key) {\n    if (!(0, _primitives.isName)(name)) {\n      throw new _util.FormatError('Invalid crypt filter name.');\n    }\n    var cryptFilter = cf.get(name.name);\n    var cfm;\n    if (cryptFilter !== null && cryptFilter !== undefined) {\n      cfm = cryptFilter.get('CFM');\n    }\n    if (!cfm || cfm.name === 'None') {\n      return function cipherTransformFactoryBuildCipherConstructorNone() {\n        return new NullCipher();\n      };\n    }\n    if (cfm.name === 'V2') {\n      return function cipherTransformFactoryBuildCipherConstructorV2() {\n        return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n      };\n    }\n    if (cfm.name === 'AESV2') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n        return new AES128Cipher(buildObjectKey(num, gen, key, true));\n      };\n    }\n    if (cfm.name === 'AESV3') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n        return new AES256Cipher(key);\n      };\n    }\n    throw new _util.FormatError('Unknown crypto method');\n  }\n  CipherTransformFactory.prototype = {\n    createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n      if (this.algorithm === 4 || this.algorithm === 5) {\n        return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n      }\n      var key = buildObjectKey(num, gen, this.encryptionKey, false);\n      var cipherConstructor = function buildCipherCipherConstructor() {\n        return new ARCFourCipher(key);\n      };\n      return new CipherTransform(cipherConstructor, cipherConstructor);\n    }\n  };\n  return CipherTransformFactory;\n}();\nexports.AES128Cipher = AES128Cipher;\nexports.AES256Cipher = AES256Cipher;\nexports.ARCFourCipher = ARCFourCipher;\nexports.CipherTransformFactory = CipherTransformFactory;\nexports.PDF17 = PDF17;\nexports.PDF20 = PDF20;\nexports.calculateMD5 = calculateMD5;\nexports.calculateSHA256 = calculateSHA256;\nexports.calculateSHA384 = calculateSHA384;\nexports.calculateSHA512 = calculateSHA512;\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CFFCompiler = exports.CFFPrivateDict = exports.CFFTopDict = exports.CFFCharset = exports.CFFIndex = exports.CFFStrings = exports.CFFHeader = exports.CFF = exports.CFFParser = exports.CFFStandardStrings = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _charsets = __w_pdfjs_require__(143);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar MAX_SUBR_NESTING = 10;\nvar CFFStandardStrings = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000', '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\nvar CFFParser = function CFFParserClosure() {\n  var CharstringValidationData = [null, {\n    id: 'hstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, null, {\n    id: 'vstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'vmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'rlineto',\n    min: 2,\n    resetStack: true\n  }, {\n    id: 'hlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'vlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'rrcurveto',\n    min: 6,\n    resetStack: true\n  }, null, {\n    id: 'callsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'return',\n    min: 0,\n    undefStack: true\n  }, null, null, {\n    id: 'endchar',\n    min: 0,\n    stackClearing: true\n  }, null, null, null, {\n    id: 'hstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'hintmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'cntrmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'rmoveto',\n    min: 2,\n    stackClearing: true\n  }, {\n    id: 'hmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'vstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'rcurveline',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'rlinecurve',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'vvcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hhcurveto',\n    min: 4,\n    resetStack: true\n  }, null, {\n    id: 'callgsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'vhcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hvcurveto',\n    min: 4,\n    resetStack: true\n  }];\n  var CharstringValidationData12 = [null, null, null, {\n    id: 'and',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'or',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'not',\n    min: 1,\n    stackDelta: 0\n  }, null, null, null, {\n    id: 'abs',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'add',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] + stack[index - 1];\n    }\n  }, {\n    id: 'sub',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] - stack[index - 1];\n    }\n  }, {\n    id: 'div',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] / stack[index - 1];\n    }\n  }, null, {\n    id: 'neg',\n    min: 1,\n    stackDelta: 0,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 1] = -stack[index - 1];\n    }\n  }, {\n    id: 'eq',\n    min: 2,\n    stackDelta: -1\n  }, null, null, {\n    id: 'drop',\n    min: 1,\n    stackDelta: -1\n  }, null, {\n    id: 'put',\n    min: 2,\n    stackDelta: -2\n  }, {\n    id: 'get',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'ifelse',\n    min: 4,\n    stackDelta: -3\n  }, {\n    id: 'random',\n    min: 0,\n    stackDelta: 1\n  }, {\n    id: 'mul',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] * stack[index - 1];\n    }\n  }, null, {\n    id: 'sqrt',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'dup',\n    min: 1,\n    stackDelta: 1\n  }, {\n    id: 'exch',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'index',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'roll',\n    min: 3,\n    stackDelta: -2\n  }, null, null, null, {\n    id: 'hflex',\n    min: 7,\n    resetStack: true\n  }, {\n    id: 'flex',\n    min: 13,\n    resetStack: true\n  }, {\n    id: 'hflex1',\n    min: 9,\n    resetStack: true\n  }, {\n    id: 'flex1',\n    min: 11,\n    resetStack: true\n  }];\n  function CFFParser(file, properties, seacAnalysisEnabled) {\n    this.bytes = file.getBytes();\n    this.properties = properties;\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n  }\n  CFFParser.prototype = {\n    parse: function CFFParser_parse() {\n      var properties = this.properties;\n      var cff = new CFF();\n      this.cff = cff;\n      var header = this.parseHeader();\n      var nameIndex = this.parseIndex(header.endPos);\n      var topDictIndex = this.parseIndex(nameIndex.endPos);\n      var stringIndex = this.parseIndex(topDictIndex.endPos);\n      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n      cff.header = header.obj;\n      cff.names = this.parseNameIndex(nameIndex.obj);\n      cff.strings = this.parseStringIndex(stringIndex.obj);\n      cff.topDict = topDict;\n      cff.globalSubrIndex = globalSubrIndex.obj;\n      this.parsePrivateDict(cff.topDict);\n      cff.isCIDFont = topDict.hasName('ROS');\n      var charStringOffset = topDict.getByName('CharStrings');\n      var charStringIndex = this.parseIndex(charStringOffset).obj;\n      var fontMatrix = topDict.getByName('FontMatrix');\n      if (fontMatrix) {\n        properties.fontMatrix = fontMatrix;\n      }\n      var fontBBox = topDict.getByName('FontBBox');\n      if (fontBBox) {\n        properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n        properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n        properties.ascentScaled = true;\n      }\n      var charset, encoding;\n      if (cff.isCIDFont) {\n        var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n        for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n          var dictRaw = fdArrayIndex.get(i);\n          var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n          this.parsePrivateDict(fontDict);\n          cff.fdArray.push(fontDict);\n        }\n        encoding = null;\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n        cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n      } else {\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n        encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n      }\n      cff.charset = charset;\n      cff.encoding = encoding;\n      var charStringsAndSeacs = this.parseCharStrings({\n        charStrings: charStringIndex,\n        localSubrIndex: topDict.privateDict.subrsIndex,\n        globalSubrIndex: globalSubrIndex.obj,\n        fdSelect: cff.fdSelect,\n        fdArray: cff.fdArray,\n        privateDict: topDict.privateDict\n      });\n      cff.charStrings = charStringsAndSeacs.charStrings;\n      cff.seacs = charStringsAndSeacs.seacs;\n      cff.widths = charStringsAndSeacs.widths;\n      return cff;\n    },\n    parseHeader: function CFFParser_parseHeader() {\n      var bytes = this.bytes;\n      var bytesLength = bytes.length;\n      var offset = 0;\n      while (offset < bytesLength && bytes[offset] !== 1) {\n        ++offset;\n      }\n      if (offset >= bytesLength) {\n        throw new _util.FormatError('Invalid CFF header');\n      }\n      if (offset !== 0) {\n        (0, _util.info)('cff data is shifted');\n        bytes = bytes.subarray(offset);\n        this.bytes = bytes;\n      }\n      var major = bytes[0];\n      var minor = bytes[1];\n      var hdrSize = bytes[2];\n      var offSize = bytes[3];\n      var header = new CFFHeader(major, minor, hdrSize, offSize);\n      return {\n        obj: header,\n        endPos: hdrSize\n      };\n    },\n    parseDict: function CFFParser_parseDict(dict) {\n      var pos = 0;\n      function parseOperand() {\n        var value = dict[pos++];\n        if (value === 30) {\n          return parseFloatOperand();\n        } else if (value === 28) {\n          value = dict[pos++];\n          value = (value << 24 | dict[pos++] << 16) >> 16;\n          return value;\n        } else if (value === 29) {\n          value = dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          return value;\n        } else if (value >= 32 && value <= 246) {\n          return value - 139;\n        } else if (value >= 247 && value <= 250) {\n          return (value - 247) * 256 + dict[pos++] + 108;\n        } else if (value >= 251 && value <= 254) {\n          return -((value - 251) * 256) - dict[pos++] - 108;\n        }\n        (0, _util.warn)('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n        return NaN;\n      }\n      function parseFloatOperand() {\n        var str = '';\n        var eof = 15;\n        var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n        var length = dict.length;\n        while (pos < length) {\n          var b = dict[pos++];\n          var b1 = b >> 4;\n          var b2 = b & 15;\n          if (b1 === eof) {\n            break;\n          }\n          str += lookup[b1];\n          if (b2 === eof) {\n            break;\n          }\n          str += lookup[b2];\n        }\n        return parseFloat(str);\n      }\n      var operands = [];\n      var entries = [];\n      pos = 0;\n      var end = dict.length;\n      while (pos < end) {\n        var b = dict[pos];\n        if (b <= 21) {\n          if (b === 12) {\n            b = b << 8 | dict[++pos];\n          }\n          entries.push([b, operands]);\n          operands = [];\n          ++pos;\n        } else {\n          operands.push(parseOperand());\n        }\n      }\n      return entries;\n    },\n    parseIndex: function CFFParser_parseIndex(pos) {\n      var cffIndex = new CFFIndex();\n      var bytes = this.bytes;\n      var count = bytes[pos++] << 8 | bytes[pos++];\n      var offsets = [];\n      var end = pos;\n      var i, ii;\n      if (count !== 0) {\n        var offsetSize = bytes[pos++];\n        var startPos = pos + (count + 1) * offsetSize - 1;\n        for (i = 0, ii = count + 1; i < ii; ++i) {\n          var offset = 0;\n          for (var j = 0; j < offsetSize; ++j) {\n            offset <<= 8;\n            offset += bytes[pos++];\n          }\n          offsets.push(startPos + offset);\n        }\n        end = offsets[count];\n      }\n      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n        var offsetStart = offsets[i];\n        var offsetEnd = offsets[i + 1];\n        cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n      }\n      return {\n        obj: cffIndex,\n        endPos: end\n      };\n    },\n    parseNameIndex: function CFFParser_parseNameIndex(index) {\n      var names = [];\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var name = index.get(i);\n        names.push((0, _util.bytesToString)(name));\n      }\n      return names;\n    },\n    parseStringIndex: function CFFParser_parseStringIndex(index) {\n      var strings = new CFFStrings();\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var data = index.get(i);\n        strings.add((0, _util.bytesToString)(data));\n      }\n      return strings;\n    },\n    createDict: function CFFParser_createDict(Type, dict, strings) {\n      var cffDict = new Type(strings);\n      for (var i = 0, ii = dict.length; i < ii; ++i) {\n        var pair = dict[i];\n        var key = pair[0];\n        var value = pair[1];\n        cffDict.setByKey(key, value);\n      }\n      return cffDict;\n    },\n    parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n      if (!data || state.callDepth > MAX_SUBR_NESTING) {\n        return false;\n      }\n      var stackSize = state.stackSize;\n      var stack = state.stack;\n      var length = data.length;\n      for (var j = 0; j < length;) {\n        var value = data[j++];\n        var validationCommand = null;\n        if (value === 12) {\n          var q = data[j++];\n          if (q === 0) {\n            data[j - 2] = 139;\n            data[j - 1] = 22;\n            stackSize = 0;\n          } else {\n            validationCommand = CharstringValidationData12[q];\n          }\n        } else if (value === 28) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n          j += 2;\n          stackSize++;\n        } else if (value === 14) {\n          if (stackSize >= 4) {\n            stackSize -= 4;\n            if (this.seacAnalysisEnabled) {\n              state.seac = stack.slice(stackSize, stackSize + 4);\n              return false;\n            }\n          }\n          validationCommand = CharstringValidationData[value];\n        } else if (value >= 32 && value <= 246) {\n          stack[stackSize] = value - 139;\n          stackSize++;\n        } else if (value >= 247 && value <= 254) {\n          stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n          j++;\n          stackSize++;\n        } else if (value === 255) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n          j += 4;\n          stackSize++;\n        } else if (value === 19 || value === 20) {\n          state.hints += stackSize >> 1;\n          j += state.hints + 7 >> 3;\n          stackSize %= 2;\n          validationCommand = CharstringValidationData[value];\n        } else if (value === 10 || value === 29) {\n          var subrsIndex;\n          if (value === 10) {\n            subrsIndex = localSubrIndex;\n          } else {\n            subrsIndex = globalSubrIndex;\n          }\n          if (!subrsIndex) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Missing subrsIndex for ' + validationCommand.id);\n            return false;\n          }\n          var bias = 32768;\n          if (subrsIndex.count < 1240) {\n            bias = 107;\n          } else if (subrsIndex.count < 33900) {\n            bias = 1131;\n          }\n          var subrNumber = stack[--stackSize] + bias;\n          if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Out of bounds subrIndex for ' + validationCommand.id);\n            return false;\n          }\n          state.stackSize = stackSize;\n          state.callDepth++;\n          var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n          if (!valid) {\n            return false;\n          }\n          state.callDepth--;\n          stackSize = state.stackSize;\n          continue;\n        } else if (value === 11) {\n          state.stackSize = stackSize;\n          return true;\n        } else {\n          validationCommand = CharstringValidationData[value];\n        }\n        if (validationCommand) {\n          if (validationCommand.stem) {\n            state.hints += stackSize >> 1;\n          }\n          if ('min' in validationCommand) {\n            if (!state.undefStack && stackSize < validationCommand.min) {\n              (0, _util.warn)('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n              return false;\n            }\n          }\n          if (state.firstStackClearing && validationCommand.stackClearing) {\n            state.firstStackClearing = false;\n            stackSize -= validationCommand.min;\n            if (stackSize >= 2 && validationCommand.stem) {\n              stackSize %= 2;\n            } else if (stackSize > 1) {\n              (0, _util.warn)('Found too many parameters for stack-clearing command');\n            }\n            if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n              state.width = stack[stackSize - 1];\n            }\n          }\n          if ('stackDelta' in validationCommand) {\n            if ('stackFn' in validationCommand) {\n              validationCommand.stackFn(stack, stackSize);\n            }\n            stackSize += validationCommand.stackDelta;\n          } else if (validationCommand.stackClearing) {\n            stackSize = 0;\n          } else if (validationCommand.resetStack) {\n            stackSize = 0;\n            state.undefStack = false;\n          } else if (validationCommand.undefStack) {\n            stackSize = 0;\n            state.undefStack = true;\n            state.firstStackClearing = false;\n          }\n        }\n      }\n      state.stackSize = stackSize;\n      return true;\n    },\n    parseCharStrings: function parseCharStrings(_ref) {\n      var charStrings = _ref.charStrings,\n          localSubrIndex = _ref.localSubrIndex,\n          globalSubrIndex = _ref.globalSubrIndex,\n          fdSelect = _ref.fdSelect,\n          fdArray = _ref.fdArray,\n          privateDict = _ref.privateDict;\n\n      var seacs = [];\n      var widths = [];\n      var count = charStrings.count;\n      for (var i = 0; i < count; i++) {\n        var charstring = charStrings.get(i);\n        var state = {\n          callDepth: 0,\n          stackSize: 0,\n          stack: [],\n          undefStack: true,\n          hints: 0,\n          firstStackClearing: true,\n          seac: null,\n          width: null\n        };\n        var valid = true;\n        var localSubrToUse = null;\n        var privateDictToUse = privateDict;\n        if (fdSelect && fdArray.length) {\n          var fdIndex = fdSelect.getFDIndex(i);\n          if (fdIndex === -1) {\n            (0, _util.warn)('Glyph index is not in fd select.');\n            valid = false;\n          }\n          if (fdIndex >= fdArray.length) {\n            (0, _util.warn)('Invalid fd index for glyph index.');\n            valid = false;\n          }\n          if (valid) {\n            privateDictToUse = fdArray[fdIndex].privateDict;\n            localSubrToUse = privateDictToUse.subrsIndex;\n          }\n        } else if (localSubrIndex) {\n          localSubrToUse = localSubrIndex;\n        }\n        if (valid) {\n          valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n        }\n        if (state.width !== null) {\n          var nominalWidth = privateDictToUse.getByName('nominalWidthX');\n          widths[i] = nominalWidth + state.width;\n        } else {\n          var defaultWidth = privateDictToUse.getByName('defaultWidthX');\n          widths[i] = defaultWidth;\n        }\n        if (state.seac !== null) {\n          seacs[i] = state.seac;\n        }\n        if (!valid) {\n          charStrings.set(i, new Uint8Array([14]));\n        }\n      }\n      return {\n        charStrings: charStrings,\n        seacs: seacs,\n        widths: widths\n      };\n    },\n\n    emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n      parentDict.setByKey(18, [0, 0]);\n      parentDict.privateDict = privateDict;\n    },\n    parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n      if (!parentDict.hasName('Private')) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateOffset = parentDict.getByName('Private');\n      if (!Array.isArray(privateOffset) || privateOffset.length !== 2) {\n        parentDict.removeByName('Private');\n        return;\n      }\n      var size = privateOffset[0];\n      var offset = privateOffset[1];\n      if (size === 0 || offset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateDictEnd = offset + size;\n      var dictData = this.bytes.subarray(offset, privateDictEnd);\n      var dict = this.parseDict(dictData);\n      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n      parentDict.privateDict = privateDict;\n      if (!privateDict.getByName('Subrs')) {\n        return;\n      }\n      var subrsOffset = privateDict.getByName('Subrs');\n      var relativeOffset = offset + subrsOffset;\n      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var subrsIndex = this.parseIndex(relativeOffset);\n      privateDict.subrsIndex = subrsIndex.obj;\n    },\n    parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n      if (pos === 0) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, _charsets.ISOAdobeCharset);\n      } else if (pos === 1) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, _charsets.ExpertCharset);\n      } else if (pos === 2) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, _charsets.ExpertSubsetCharset);\n      }\n      var bytes = this.bytes;\n      var start = pos;\n      var format = bytes[pos++];\n      var charset = ['.notdef'];\n      var id, count, i;\n      length -= 1;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; i++) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            charset.push(cid ? id : strings.get(id));\n          }\n          break;\n        case 1:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        case 2:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++] << 8 | bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        default:\n          throw new _util.FormatError('Unknown charset format');\n      }\n      var end = pos;\n      var raw = bytes.subarray(start, end);\n      return new CFFCharset(false, format, charset, raw);\n    },\n    parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n      var encoding = Object.create(null);\n      var bytes = this.bytes;\n      var predefined = false;\n      var format, i, ii;\n      var raw = null;\n      function readSupplement() {\n        var supplementsCount = bytes[pos++];\n        for (i = 0; i < supplementsCount; i++) {\n          var code = bytes[pos++];\n          var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n          encoding[code] = charset.indexOf(strings.get(sid));\n        }\n      }\n      if (pos === 0 || pos === 1) {\n        predefined = true;\n        format = pos;\n        var baseEncoding = pos ? _encodings.ExpertEncoding : _encodings.StandardEncoding;\n        for (i = 0, ii = charset.length; i < ii; i++) {\n          var index = baseEncoding.indexOf(charset[i]);\n          if (index !== -1) {\n            encoding[index] = i;\n          }\n        }\n      } else {\n        var dataStart = pos;\n        format = bytes[pos++];\n        switch (format & 0x7f) {\n          case 0:\n            var glyphsCount = bytes[pos++];\n            for (i = 1; i <= glyphsCount; i++) {\n              encoding[bytes[pos++]] = i;\n            }\n            break;\n          case 1:\n            var rangesCount = bytes[pos++];\n            var gid = 1;\n            for (i = 0; i < rangesCount; i++) {\n              var start = bytes[pos++];\n              var left = bytes[pos++];\n              for (var j = start; j <= start + left; j++) {\n                encoding[j] = gid++;\n              }\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown encoding format: ' + format + ' in CFF');\n        }\n        var dataEnd = pos;\n        if (format & 0x80) {\n          bytes[dataStart] &= 0x7f;\n          readSupplement();\n        }\n        raw = bytes.subarray(dataStart, dataEnd);\n      }\n      format = format & 0x7f;\n      return new CFFEncoding(predefined, format, encoding, raw);\n    },\n    parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n      var start = pos;\n      var bytes = this.bytes;\n      var format = bytes[pos++];\n      var fdSelect = [],\n          rawBytes;\n      var i,\n          invalidFirstGID = false;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; ++i) {\n            var id = bytes[pos++];\n            fdSelect.push(id);\n          }\n          rawBytes = bytes.subarray(start, pos);\n          break;\n        case 3:\n          var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n          for (i = 0; i < rangesCount; ++i) {\n            var first = bytes[pos++] << 8 | bytes[pos++];\n            if (i === 0 && first !== 0) {\n              (0, _util.warn)('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n              invalidFirstGID = true;\n              first = 0;\n            }\n            var fdIndex = bytes[pos++];\n            var next = bytes[pos] << 8 | bytes[pos + 1];\n            for (var j = first; j < next; ++j) {\n              fdSelect.push(fdIndex);\n            }\n          }\n          pos += 2;\n          rawBytes = bytes.subarray(start, pos);\n          if (invalidFirstGID) {\n            rawBytes[3] = rawBytes[4] = 0;\n          }\n          break;\n        default:\n          throw new _util.FormatError('parseFDSelect: Unknown format \"' + format + '\".');\n      }\n      if (fdSelect.length !== length) {\n        throw new _util.FormatError('parseFDSelect: Invalid font data.');\n      }\n      return new CFFFDSelect(fdSelect, rawBytes);\n    }\n  };\n  return CFFParser;\n}();\nvar CFF = function CFFClosure() {\n  function CFF() {\n    this.header = null;\n    this.names = [];\n    this.topDict = null;\n    this.strings = new CFFStrings();\n    this.globalSubrIndex = null;\n    this.encoding = null;\n    this.charset = null;\n    this.charStrings = null;\n    this.fdArray = [];\n    this.fdSelect = null;\n    this.isCIDFont = false;\n  }\n  return CFF;\n}();\nvar CFFHeader = function CFFHeaderClosure() {\n  function CFFHeader(major, minor, hdrSize, offSize) {\n    this.major = major;\n    this.minor = minor;\n    this.hdrSize = hdrSize;\n    this.offSize = offSize;\n  }\n  return CFFHeader;\n}();\nvar CFFStrings = function CFFStringsClosure() {\n  function CFFStrings() {\n    this.strings = [];\n  }\n  CFFStrings.prototype = {\n    get: function CFFStrings_get(index) {\n      if (index >= 0 && index <= 390) {\n        return CFFStandardStrings[index];\n      }\n      if (index - 391 <= this.strings.length) {\n        return this.strings[index - 391];\n      }\n      return CFFStandardStrings[0];\n    },\n    add: function CFFStrings_add(value) {\n      this.strings.push(value);\n    },\n    get count() {\n      return this.strings.length;\n    }\n  };\n  return CFFStrings;\n}();\nvar CFFIndex = function CFFIndexClosure() {\n  function CFFIndex() {\n    this.objects = [];\n    this.length = 0;\n  }\n  CFFIndex.prototype = {\n    add: function CFFIndex_add(data) {\n      this.length += data.length;\n      this.objects.push(data);\n    },\n    set: function CFFIndex_set(index, data) {\n      this.length += data.length - this.objects[index].length;\n      this.objects[index] = data;\n    },\n    get: function CFFIndex_get(index) {\n      return this.objects[index];\n    },\n    get count() {\n      return this.objects.length;\n    }\n  };\n  return CFFIndex;\n}();\nvar CFFDict = function CFFDictClosure() {\n  function CFFDict(tables, strings) {\n    this.keyToNameMap = tables.keyToNameMap;\n    this.nameToKeyMap = tables.nameToKeyMap;\n    this.defaults = tables.defaults;\n    this.types = tables.types;\n    this.opcodes = tables.opcodes;\n    this.order = tables.order;\n    this.strings = strings;\n    this.values = Object.create(null);\n  }\n  CFFDict.prototype = {\n    setByKey: function CFFDict_setByKey(key, value) {\n      if (!(key in this.keyToNameMap)) {\n        return false;\n      }\n      var valueLength = value.length;\n      if (valueLength === 0) {\n        return true;\n      }\n      for (var i = 0; i < valueLength; i++) {\n        if (isNaN(value[i])) {\n          (0, _util.warn)('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n          return true;\n        }\n      }\n      var type = this.types[key];\n      if (type === 'num' || type === 'sid' || type === 'offset') {\n        value = value[0];\n      }\n      this.values[key] = value;\n      return true;\n    },\n    setByName: function CFFDict_setByName(name, value) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name \"' + name + '\"');\n      }\n      this.values[this.nameToKeyMap[name]] = value;\n    },\n    hasName: function CFFDict_hasName(name) {\n      return this.nameToKeyMap[name] in this.values;\n    },\n    getByName: function CFFDict_getByName(name) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name ' + name + '\"');\n      }\n      var key = this.nameToKeyMap[name];\n      if (!(key in this.values)) {\n        return this.defaults[key];\n      }\n      return this.values[key];\n    },\n    removeByName: function CFFDict_removeByName(name) {\n      delete this.values[this.nameToKeyMap[name]];\n    }\n  };\n  CFFDict.createTables = function CFFDict_createTables(layout) {\n    var tables = {\n      keyToNameMap: {},\n      nameToKeyMap: {},\n      defaults: {},\n      types: {},\n      opcodes: {},\n      order: []\n    };\n    for (var i = 0, ii = layout.length; i < ii; ++i) {\n      var entry = layout[i];\n      var key = Array.isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n      tables.keyToNameMap[key] = entry[1];\n      tables.nameToKeyMap[entry[1]] = key;\n      tables.types[key] = entry[2];\n      tables.defaults[key] = entry[3];\n      tables.opcodes[key] = Array.isArray(entry[0]) ? entry[0] : [entry[0]];\n      tables.order.push(key);\n    }\n    return tables;\n  };\n  return CFFDict;\n}();\nvar CFFTopDict = function CFFTopDictClosure() {\n  var layout = [[[12, 30], 'ROS', ['sid', 'sid', 'num'], null], [[12, 20], 'SyntheticBase', 'num', null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'num', 0], [[12, 2], 'ItalicAngle', 'num', 0], [[12, 3], 'UnderlinePosition', 'num', -100], [[12, 4], 'UnderlineThickness', 'num', 50], [[12, 5], 'PaintType', 'num', 0], [[12, 6], 'CharstringType', 'num', 2], [[12, 7], 'FontMatrix', ['num', 'num', 'num', 'num', 'num', 'num'], [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'num', null], [5, 'FontBBox', ['num', 'num', 'num', 'num'], [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'num', 0], [14, 'XUID', 'array', null], [15, 'charset', 'offset', 0], [16, 'Encoding', 'offset', 0], [17, 'CharStrings', 'offset', 0], [18, 'Private', ['offset', 'offset'], null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'num', 0], [[12, 32], 'CIDFontRevision', 'num', 0], [[12, 33], 'CIDFontType', 'num', 0], [[12, 34], 'CIDCount', 'num', 8720], [[12, 35], 'UIDBase', 'num', null], [[12, 37], 'FDSelect', 'offset', null], [[12, 36], 'FDArray', 'offset', null], [[12, 38], 'FontName', 'sid', null]];\n  var tables = null;\n  function CFFTopDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.privateDict = null;\n  }\n  CFFTopDict.prototype = Object.create(CFFDict.prototype);\n  return CFFTopDict;\n}();\nvar CFFPrivateDict = function CFFPrivateDictClosure() {\n  var layout = [[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'num', 0.039625], [[12, 10], 'BlueShift', 'num', 7], [[12, 11], 'BlueFuzz', 'num', 1], [10, 'StdHW', 'num', null], [11, 'StdVW', 'num', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'num', 0], [[12, 17], 'LanguageGroup', 'num', 0], [[12, 18], 'ExpansionFactor', 'num', 0.06], [[12, 19], 'initialRandomSeed', 'num', 0], [20, 'defaultWidthX', 'num', 0], [21, 'nominalWidthX', 'num', 0], [19, 'Subrs', 'offset', null]];\n  var tables = null;\n  function CFFPrivateDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.subrsIndex = null;\n  }\n  CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n  return CFFPrivateDict;\n}();\nvar CFFCharsetPredefinedTypes = {\n  ISO_ADOBE: 0,\n  EXPERT: 1,\n  EXPERT_SUBSET: 2\n};\nvar CFFCharset = function CFFCharsetClosure() {\n  function CFFCharset(predefined, format, charset, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.charset = charset;\n    this.raw = raw;\n  }\n  return CFFCharset;\n}();\nvar CFFEncoding = function CFFEncodingClosure() {\n  function CFFEncoding(predefined, format, encoding, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.encoding = encoding;\n    this.raw = raw;\n  }\n  return CFFEncoding;\n}();\nvar CFFFDSelect = function CFFFDSelectClosure() {\n  function CFFFDSelect(fdSelect, raw) {\n    this.fdSelect = fdSelect;\n    this.raw = raw;\n  }\n  CFFFDSelect.prototype = {\n    getFDIndex: function CFFFDSelect_get(glyphIndex) {\n      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n        return -1;\n      }\n      return this.fdSelect[glyphIndex];\n    }\n  };\n  return CFFFDSelect;\n}();\nvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n  function CFFOffsetTracker() {\n    this.offsets = Object.create(null);\n  }\n  CFFOffsetTracker.prototype = {\n    isTracking: function CFFOffsetTracker_isTracking(key) {\n      return key in this.offsets;\n    },\n    track: function CFFOffsetTracker_track(key, location) {\n      if (key in this.offsets) {\n        throw new _util.FormatError('Already tracking location of ' + key);\n      }\n      this.offsets[key] = location;\n    },\n    offset: function CFFOffsetTracker_offset(value) {\n      for (var key in this.offsets) {\n        this.offsets[key] += value;\n      }\n    },\n    setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n      if (!(key in this.offsets)) {\n        throw new _util.FormatError('Not tracking location of ' + key);\n      }\n      var data = output.data;\n      var dataOffset = this.offsets[key];\n      var size = 5;\n      for (var i = 0, ii = values.length; i < ii; ++i) {\n        var offset0 = i * size + dataOffset;\n        var offset1 = offset0 + 1;\n        var offset2 = offset0 + 2;\n        var offset3 = offset0 + 3;\n        var offset4 = offset0 + 4;\n        if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n          throw new _util.FormatError('writing to an offset that is not empty');\n        }\n        var value = values[i];\n        data[offset0] = 0x1d;\n        data[offset1] = value >> 24 & 0xFF;\n        data[offset2] = value >> 16 & 0xFF;\n        data[offset3] = value >> 8 & 0xFF;\n        data[offset4] = value & 0xFF;\n      }\n    }\n  };\n  return CFFOffsetTracker;\n}();\nvar CFFCompiler = function CFFCompilerClosure() {\n  function CFFCompiler(cff) {\n    this.cff = cff;\n  }\n  CFFCompiler.prototype = {\n    compile: function CFFCompiler_compile() {\n      var cff = this.cff;\n      var output = {\n        data: [],\n        length: 0,\n        add: function CFFCompiler_add(data) {\n          this.data = this.data.concat(data);\n          this.length = this.data.length;\n        }\n      };\n      var header = this.compileHeader(cff.header);\n      output.add(header);\n      var nameIndex = this.compileNameIndex(cff.names);\n      output.add(nameIndex);\n      if (cff.isCIDFont) {\n        if (cff.topDict.hasName('FontMatrix')) {\n          var base = cff.topDict.getByName('FontMatrix');\n          cff.topDict.removeByName('FontMatrix');\n          for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n            var subDict = cff.fdArray[i];\n            var matrix = base.slice(0);\n            if (subDict.hasName('FontMatrix')) {\n              matrix = _util.Util.transform(matrix, subDict.getByName('FontMatrix'));\n            }\n            subDict.setByName('FontMatrix', matrix);\n          }\n        }\n      }\n      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n      output.add(compiled.output);\n      var topDictTracker = compiled.trackers[0];\n      var stringIndex = this.compileStringIndex(cff.strings.strings);\n      output.add(stringIndex);\n      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n      output.add(globalSubrIndex);\n      if (cff.encoding && cff.topDict.hasName('Encoding')) {\n        if (cff.encoding.predefined) {\n          topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n        } else {\n          var encoding = this.compileEncoding(cff.encoding);\n          topDictTracker.setEntryLocation('Encoding', [output.length], output);\n          output.add(encoding);\n        }\n      }\n      if (cff.charset && cff.topDict.hasName('charset')) {\n        if (cff.charset.predefined) {\n          topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n        } else {\n          var charset = this.compileCharset(cff.charset);\n          topDictTracker.setEntryLocation('charset', [output.length], output);\n          output.add(charset);\n        }\n      }\n      var charStrings = this.compileCharStrings(cff.charStrings);\n      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n      output.add(charStrings);\n      if (cff.isCIDFont) {\n        topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n        var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n        output.add(fdSelect);\n        compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n        topDictTracker.setEntryLocation('FDArray', [output.length], output);\n        output.add(compiled.output);\n        var fontDictTrackers = compiled.trackers;\n        this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n      }\n      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n      output.add([0]);\n      return output.data;\n    },\n    encodeNumber: function CFFCompiler_encodeNumber(value) {\n      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n        return this.encodeInteger(value);\n      }\n      return this.encodeFloat(value);\n    },\n    encodeFloat: function CFFCompiler_encodeFloat(num) {\n      var value = num.toString();\n      var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n      if (m) {\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(num * epsilon) / epsilon).toString();\n      }\n      var nibbles = '';\n      var i, ii;\n      for (i = 0, ii = value.length; i < ii; ++i) {\n        var a = value[i];\n        if (a === 'e') {\n          nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (a === '.') {\n          nibbles += 'a';\n        } else if (a === '-') {\n          nibbles += 'e';\n        } else {\n          nibbles += a;\n        }\n      }\n      nibbles += nibbles.length & 1 ? 'f' : 'ff';\n      var out = [30];\n      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n      }\n      return out;\n    },\n    encodeInteger: function CFFCompiler_encodeInteger(value) {\n      var code;\n      if (value >= -107 && value <= 107) {\n        code = [value + 139];\n      } else if (value >= 108 && value <= 1131) {\n        value = value - 108;\n        code = [(value >> 8) + 247, value & 0xFF];\n      } else if (value >= -1131 && value <= -108) {\n        value = -value - 108;\n        code = [(value >> 8) + 251, value & 0xFF];\n      } else if (value >= -32768 && value <= 32767) {\n        code = [0x1c, value >> 8 & 0xFF, value & 0xFF];\n      } else {\n        code = [0x1d, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF];\n      }\n      return code;\n    },\n    compileHeader: function CFFCompiler_compileHeader(header) {\n      return [header.major, header.minor, header.hdrSize, header.offSize];\n    },\n    compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n      var nameIndex = new CFFIndex();\n      for (var i = 0, ii = names.length; i < ii; ++i) {\n        var name = names[i];\n        var length = Math.min(name.length, 127);\n        var sanitizedName = new Array(length);\n        for (var j = 0; j < length; j++) {\n          var char = name[j];\n          if (char < '!' || char > '~' || char === '[' || char === ']' || char === '(' || char === ')' || char === '{' || char === '}' || char === '<' || char === '>' || char === '/' || char === '%') {\n            char = '_';\n          }\n          sanitizedName[j] = char;\n        }\n        sanitizedName = sanitizedName.join('');\n        if (sanitizedName === '') {\n          sanitizedName = 'Bad_Font_Name';\n        }\n        nameIndex.add((0, _util.stringToBytes)(sanitizedName));\n      }\n      return this.compileIndex(nameIndex);\n    },\n    compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n      var fontDictTrackers = [];\n      var fdArrayIndex = new CFFIndex();\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        if (removeCidKeys) {\n          fontDict.removeByName('CIDFontVersion');\n          fontDict.removeByName('CIDFontRevision');\n          fontDict.removeByName('CIDFontType');\n          fontDict.removeByName('CIDCount');\n          fontDict.removeByName('UIDBase');\n        }\n        var fontDictTracker = new CFFOffsetTracker();\n        var fontDictData = this.compileDict(fontDict, fontDictTracker);\n        fontDictTrackers.push(fontDictTracker);\n        fdArrayIndex.add(fontDictData);\n        fontDictTracker.offset(length);\n      }\n      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n      return {\n        trackers: fontDictTrackers,\n        output: fdArrayIndex\n      };\n    },\n    compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        var privateDict = fontDict.privateDict;\n        if (!privateDict || !fontDict.hasName('Private')) {\n          throw new _util.FormatError('There must be a private dictionary.');\n        }\n        var privateDictTracker = new CFFOffsetTracker();\n        var privateDictData = this.compileDict(privateDict, privateDictTracker);\n        var outputLength = output.length;\n        privateDictTracker.offset(outputLength);\n        if (!privateDictData.length) {\n          outputLength = 0;\n        }\n        trackers[i].setEntryLocation('Private', [privateDictData.length, outputLength], output);\n        output.add(privateDictData);\n        if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n          var subrs = this.compileIndex(privateDict.subrsIndex);\n          privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n          output.add(subrs);\n        }\n      }\n    },\n    compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n      var out = [];\n      var order = dict.order;\n      for (var i = 0; i < order.length; ++i) {\n        var key = order[i];\n        if (!(key in dict.values)) {\n          continue;\n        }\n        var values = dict.values[key];\n        var types = dict.types[key];\n        if (!Array.isArray(types)) {\n          types = [types];\n        }\n        if (!Array.isArray(values)) {\n          values = [values];\n        }\n        if (values.length === 0) {\n          continue;\n        }\n        for (var j = 0, jj = types.length; j < jj; ++j) {\n          var type = types[j];\n          var value = values[j];\n          switch (type) {\n            case 'num':\n            case 'sid':\n              out = out.concat(this.encodeNumber(value));\n              break;\n            case 'offset':\n              var name = dict.keyToNameMap[key];\n              if (!offsetTracker.isTracking(name)) {\n                offsetTracker.track(name, out.length);\n              }\n              out = out.concat([0x1d, 0, 0, 0, 0]);\n              break;\n            case 'array':\n            case 'delta':\n              out = out.concat(this.encodeNumber(value));\n              for (var k = 1, kk = values.length; k < kk; ++k) {\n                out = out.concat(this.encodeNumber(values[k]));\n              }\n              break;\n            default:\n              throw new _util.FormatError('Unknown data type of ' + type);\n          }\n        }\n        out = out.concat(dict.opcodes[key]);\n      }\n      return out;\n    },\n    compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n      var stringIndex = new CFFIndex();\n      for (var i = 0, ii = strings.length; i < ii; ++i) {\n        stringIndex.add((0, _util.stringToBytes)(strings[i]));\n      }\n      return this.compileIndex(stringIndex);\n    },\n    compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n      var globalSubrIndex = this.cff.globalSubrIndex;\n      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n    },\n    compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n      return this.compileIndex(charStrings);\n    },\n    compileCharset: function CFFCompiler_compileCharset(charset) {\n      return this.compileTypedArray(charset.raw);\n    },\n    compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n      return this.compileTypedArray(encoding.raw);\n    },\n    compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n      return this.compileTypedArray(fdSelect);\n    },\n    compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n      var out = [];\n      for (var i = 0, ii = data.length; i < ii; ++i) {\n        out[i] = data[i];\n      }\n      return out;\n    },\n    compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n      trackers = trackers || [];\n      var objects = index.objects;\n      var count = objects.length;\n      if (count === 0) {\n        return [0, 0, 0];\n      }\n      var data = [count >> 8 & 0xFF, count & 0xff];\n      var lastOffset = 1,\n          i;\n      for (i = 0; i < count; ++i) {\n        lastOffset += objects[i].length;\n      }\n      var offsetSize;\n      if (lastOffset < 0x100) {\n        offsetSize = 1;\n      } else if (lastOffset < 0x10000) {\n        offsetSize = 2;\n      } else if (lastOffset < 0x1000000) {\n        offsetSize = 3;\n      } else {\n        offsetSize = 4;\n      }\n      data.push(offsetSize);\n      var relativeOffset = 1;\n      for (i = 0; i < count + 1; i++) {\n        if (offsetSize === 1) {\n          data.push(relativeOffset & 0xFF);\n        } else if (offsetSize === 2) {\n          data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else if (offsetSize === 3) {\n          data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else {\n          data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        }\n        if (objects[i]) {\n          relativeOffset += objects[i].length;\n        }\n      }\n      for (i = 0; i < count; i++) {\n        if (trackers[i]) {\n          trackers[i].offset(data.length);\n        }\n        for (var j = 0, jj = objects[i].length; j < jj; j++) {\n          data.push(objects[i][j]);\n        }\n      }\n      return data;\n    }\n  };\n  return CFFCompiler;\n}();\nexports.CFFStandardStrings = CFFStandardStrings;\nexports.CFFParser = CFFParser;\nexports.CFF = CFF;\nexports.CFFHeader = CFFHeader;\nexports.CFFStrings = CFFStrings;\nexports.CFFIndex = CFFIndex;\nexports.CFFCharset = CFFCharset;\nexports.CFFTopDict = CFFTopDict;\nexports.CFFPrivateDict = CFFPrivateDict;\nexports.CFFCompiler = CFFCompiler;\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSupplementalGlyphMapForCalibri = exports.getSupplementalGlyphMapForArialBlack = exports.getGlyphMapForStandardFonts = exports.getSymbolsFonts = exports.getSerifFonts = exports.getNonStdFontMap = exports.getStdFontMap = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar getStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['ArialNarrow'] = 'Helvetica';\n  t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n  t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n  t['ArialBlack'] = 'Helvetica';\n  t['ArialBlack-Bold'] = 'Helvetica-Bold';\n  t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n  t['Arial-Black'] = 'Helvetica';\n  t['Arial-Black-Bold'] = 'Helvetica-Bold';\n  t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n  t['Arial'] = 'Helvetica';\n  t['Arial-Bold'] = 'Helvetica-Bold';\n  t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Italic'] = 'Helvetica-Oblique';\n  t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n  t['Arial-BoldMT'] = 'Helvetica-Bold';\n  t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n  t['ArialMT'] = 'Helvetica';\n  t['Courier-Bold'] = 'Courier-Bold';\n  t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n  t['Courier-Italic'] = 'Courier-Oblique';\n  t['CourierNew'] = 'Courier';\n  t['CourierNew-Bold'] = 'Courier-Bold';\n  t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n  t['CourierNew-Italic'] = 'Courier-Oblique';\n  t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n  t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n  t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n  t['CourierNewPSMT'] = 'Courier';\n  t['Helvetica'] = 'Helvetica';\n  t['Helvetica-Bold'] = 'Helvetica-Bold';\n  t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n  t['Helvetica-Italic'] = 'Helvetica-Oblique';\n  t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n  t['SegoeUISymbol'] = 'Helvetica';\n  t['Symbol-Bold'] = 'Symbol';\n  t['Symbol-BoldItalic'] = 'Symbol';\n  t['Symbol-Italic'] = 'Symbol';\n  t['TimesNewRoman'] = 'Times-Roman';\n  t['TimesNewRoman-Bold'] = 'Times-Bold';\n  t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRoman-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS'] = 'Times-Roman';\n  t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n  t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n  t['TimesNewRomanPSMT'] = 'Times-Roman';\n  t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n});\nvar getNonStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['Calibri'] = 'Helvetica';\n  t['Calibri-Bold'] = 'Helvetica-Bold';\n  t['Calibri-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Calibri-Italic'] = 'Helvetica-Oblique';\n  t['CenturyGothic'] = 'Helvetica';\n  t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n  t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n  t['ComicSansMS'] = 'Comic Sans MS';\n  t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n  t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n  t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n  t['LucidaConsole'] = 'Courier';\n  t['LucidaConsole-Bold'] = 'Courier-Bold';\n  t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n  t['LucidaConsole-Italic'] = 'Courier-Oblique';\n  t['LucidaSans-Demi'] = 'Helvetica-Bold';\n  t['MS-Gothic'] = 'MS Gothic';\n  t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n  t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n  t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n  t['MS-Mincho'] = 'MS Mincho';\n  t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n  t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n  t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n  t['MS-PGothic'] = 'MS PGothic';\n  t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n  t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n  t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n  t['MS-PMincho'] = 'MS PMincho';\n  t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n  t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n  t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n  t['NuptialScript'] = 'Times-Italic';\n  t['Wingdings'] = 'ZapfDingbats';\n});\nvar getSerifFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Adobe Jenson'] = true;\n  t['Adobe Text'] = true;\n  t['Albertus'] = true;\n  t['Aldus'] = true;\n  t['Alexandria'] = true;\n  t['Algerian'] = true;\n  t['American Typewriter'] = true;\n  t['Antiqua'] = true;\n  t['Apex'] = true;\n  t['Arno'] = true;\n  t['Aster'] = true;\n  t['Aurora'] = true;\n  t['Baskerville'] = true;\n  t['Bell'] = true;\n  t['Bembo'] = true;\n  t['Bembo Schoolbook'] = true;\n  t['Benguiat'] = true;\n  t['Berkeley Old Style'] = true;\n  t['Bernhard Modern'] = true;\n  t['Berthold City'] = true;\n  t['Bodoni'] = true;\n  t['Bauer Bodoni'] = true;\n  t['Book Antiqua'] = true;\n  t['Bookman'] = true;\n  t['Bordeaux Roman'] = true;\n  t['Californian FB'] = true;\n  t['Calisto'] = true;\n  t['Calvert'] = true;\n  t['Capitals'] = true;\n  t['Cambria'] = true;\n  t['Cartier'] = true;\n  t['Caslon'] = true;\n  t['Catull'] = true;\n  t['Centaur'] = true;\n  t['Century Old Style'] = true;\n  t['Century Schoolbook'] = true;\n  t['Chaparral'] = true;\n  t['Charis SIL'] = true;\n  t['Cheltenham'] = true;\n  t['Cholla Slab'] = true;\n  t['Clarendon'] = true;\n  t['Clearface'] = true;\n  t['Cochin'] = true;\n  t['Colonna'] = true;\n  t['Computer Modern'] = true;\n  t['Concrete Roman'] = true;\n  t['Constantia'] = true;\n  t['Cooper Black'] = true;\n  t['Corona'] = true;\n  t['Ecotype'] = true;\n  t['Egyptienne'] = true;\n  t['Elephant'] = true;\n  t['Excelsior'] = true;\n  t['Fairfield'] = true;\n  t['FF Scala'] = true;\n  t['Folkard'] = true;\n  t['Footlight'] = true;\n  t['FreeSerif'] = true;\n  t['Friz Quadrata'] = true;\n  t['Garamond'] = true;\n  t['Gentium'] = true;\n  t['Georgia'] = true;\n  t['Gloucester'] = true;\n  t['Goudy Old Style'] = true;\n  t['Goudy Schoolbook'] = true;\n  t['Goudy Pro Font'] = true;\n  t['Granjon'] = true;\n  t['Guardian Egyptian'] = true;\n  t['Heather'] = true;\n  t['Hercules'] = true;\n  t['High Tower Text'] = true;\n  t['Hiroshige'] = true;\n  t['Hoefler Text'] = true;\n  t['Humana Serif'] = true;\n  t['Imprint'] = true;\n  t['Ionic No. 5'] = true;\n  t['Janson'] = true;\n  t['Joanna'] = true;\n  t['Korinna'] = true;\n  t['Lexicon'] = true;\n  t['Liberation Serif'] = true;\n  t['Linux Libertine'] = true;\n  t['Literaturnaya'] = true;\n  t['Lucida'] = true;\n  t['Lucida Bright'] = true;\n  t['Melior'] = true;\n  t['Memphis'] = true;\n  t['Miller'] = true;\n  t['Minion'] = true;\n  t['Modern'] = true;\n  t['Mona Lisa'] = true;\n  t['Mrs Eaves'] = true;\n  t['MS Serif'] = true;\n  t['Museo Slab'] = true;\n  t['New York'] = true;\n  t['Nimbus Roman'] = true;\n  t['NPS Rawlinson Roadway'] = true;\n  t['NuptialScript'] = true;\n  t['Palatino'] = true;\n  t['Perpetua'] = true;\n  t['Plantin'] = true;\n  t['Plantin Schoolbook'] = true;\n  t['Playbill'] = true;\n  t['Poor Richard'] = true;\n  t['Rawlinson Roadway'] = true;\n  t['Renault'] = true;\n  t['Requiem'] = true;\n  t['Rockwell'] = true;\n  t['Roman'] = true;\n  t['Rotis Serif'] = true;\n  t['Sabon'] = true;\n  t['Scala'] = true;\n  t['Seagull'] = true;\n  t['Sistina'] = true;\n  t['Souvenir'] = true;\n  t['STIX'] = true;\n  t['Stone Informal'] = true;\n  t['Stone Serif'] = true;\n  t['Sylfaen'] = true;\n  t['Times'] = true;\n  t['Trajan'] = true;\n  t['Trinité'] = true;\n  t['Trump Mediaeval'] = true;\n  t['Utopia'] = true;\n  t['Vale Type'] = true;\n  t['Bitstream Vera'] = true;\n  t['Vera Serif'] = true;\n  t['Versailles'] = true;\n  t['Wanted'] = true;\n  t['Weiss'] = true;\n  t['Wide Latin'] = true;\n  t['Windsor'] = true;\n  t['XITS'] = true;\n});\nvar getSymbolsFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Dingbats'] = true;\n  t['Symbol'] = true;\n  t['ZapfDingbats'] = true;\n});\nvar getGlyphMapForStandardFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t[2] = 10;\n  t[3] = 32;\n  t[4] = 33;\n  t[5] = 34;\n  t[6] = 35;\n  t[7] = 36;\n  t[8] = 37;\n  t[9] = 38;\n  t[10] = 39;\n  t[11] = 40;\n  t[12] = 41;\n  t[13] = 42;\n  t[14] = 43;\n  t[15] = 44;\n  t[16] = 45;\n  t[17] = 46;\n  t[18] = 47;\n  t[19] = 48;\n  t[20] = 49;\n  t[21] = 50;\n  t[22] = 51;\n  t[23] = 52;\n  t[24] = 53;\n  t[25] = 54;\n  t[26] = 55;\n  t[27] = 56;\n  t[28] = 57;\n  t[29] = 58;\n  t[30] = 894;\n  t[31] = 60;\n  t[32] = 61;\n  t[33] = 62;\n  t[34] = 63;\n  t[35] = 64;\n  t[36] = 65;\n  t[37] = 66;\n  t[38] = 67;\n  t[39] = 68;\n  t[40] = 69;\n  t[41] = 70;\n  t[42] = 71;\n  t[43] = 72;\n  t[44] = 73;\n  t[45] = 74;\n  t[46] = 75;\n  t[47] = 76;\n  t[48] = 77;\n  t[49] = 78;\n  t[50] = 79;\n  t[51] = 80;\n  t[52] = 81;\n  t[53] = 82;\n  t[54] = 83;\n  t[55] = 84;\n  t[56] = 85;\n  t[57] = 86;\n  t[58] = 87;\n  t[59] = 88;\n  t[60] = 89;\n  t[61] = 90;\n  t[62] = 91;\n  t[63] = 92;\n  t[64] = 93;\n  t[65] = 94;\n  t[66] = 95;\n  t[67] = 96;\n  t[68] = 97;\n  t[69] = 98;\n  t[70] = 99;\n  t[71] = 100;\n  t[72] = 101;\n  t[73] = 102;\n  t[74] = 103;\n  t[75] = 104;\n  t[76] = 105;\n  t[77] = 106;\n  t[78] = 107;\n  t[79] = 108;\n  t[80] = 109;\n  t[81] = 110;\n  t[82] = 111;\n  t[83] = 112;\n  t[84] = 113;\n  t[85] = 114;\n  t[86] = 115;\n  t[87] = 116;\n  t[88] = 117;\n  t[89] = 118;\n  t[90] = 119;\n  t[91] = 120;\n  t[92] = 121;\n  t[93] = 122;\n  t[94] = 123;\n  t[95] = 124;\n  t[96] = 125;\n  t[97] = 126;\n  t[98] = 196;\n  t[99] = 197;\n  t[100] = 199;\n  t[101] = 201;\n  t[102] = 209;\n  t[103] = 214;\n  t[104] = 220;\n  t[105] = 225;\n  t[106] = 224;\n  t[107] = 226;\n  t[108] = 228;\n  t[109] = 227;\n  t[110] = 229;\n  t[111] = 231;\n  t[112] = 233;\n  t[113] = 232;\n  t[114] = 234;\n  t[115] = 235;\n  t[116] = 237;\n  t[117] = 236;\n  t[118] = 238;\n  t[119] = 239;\n  t[120] = 241;\n  t[121] = 243;\n  t[122] = 242;\n  t[123] = 244;\n  t[124] = 246;\n  t[125] = 245;\n  t[126] = 250;\n  t[127] = 249;\n  t[128] = 251;\n  t[129] = 252;\n  t[130] = 8224;\n  t[131] = 176;\n  t[132] = 162;\n  t[133] = 163;\n  t[134] = 167;\n  t[135] = 8226;\n  t[136] = 182;\n  t[137] = 223;\n  t[138] = 174;\n  t[139] = 169;\n  t[140] = 8482;\n  t[141] = 180;\n  t[142] = 168;\n  t[143] = 8800;\n  t[144] = 198;\n  t[145] = 216;\n  t[146] = 8734;\n  t[147] = 177;\n  t[148] = 8804;\n  t[149] = 8805;\n  t[150] = 165;\n  t[151] = 181;\n  t[152] = 8706;\n  t[153] = 8721;\n  t[154] = 8719;\n  t[156] = 8747;\n  t[157] = 170;\n  t[158] = 186;\n  t[159] = 8486;\n  t[160] = 230;\n  t[161] = 248;\n  t[162] = 191;\n  t[163] = 161;\n  t[164] = 172;\n  t[165] = 8730;\n  t[166] = 402;\n  t[167] = 8776;\n  t[168] = 8710;\n  t[169] = 171;\n  t[170] = 187;\n  t[171] = 8230;\n  t[210] = 218;\n  t[223] = 711;\n  t[224] = 321;\n  t[225] = 322;\n  t[227] = 353;\n  t[229] = 382;\n  t[234] = 253;\n  t[252] = 263;\n  t[253] = 268;\n  t[254] = 269;\n  t[258] = 258;\n  t[260] = 260;\n  t[261] = 261;\n  t[265] = 280;\n  t[266] = 281;\n  t[268] = 283;\n  t[269] = 313;\n  t[275] = 323;\n  t[276] = 324;\n  t[278] = 328;\n  t[284] = 345;\n  t[285] = 346;\n  t[286] = 347;\n  t[292] = 367;\n  t[295] = 377;\n  t[296] = 378;\n  t[298] = 380;\n  t[305] = 963;\n  t[306] = 964;\n  t[307] = 966;\n  t[308] = 8215;\n  t[309] = 8252;\n  t[310] = 8319;\n  t[311] = 8359;\n  t[312] = 8592;\n  t[313] = 8593;\n  t[337] = 9552;\n  t[493] = 1039;\n  t[494] = 1040;\n  t[705] = 1524;\n  t[706] = 8362;\n  t[710] = 64288;\n  t[711] = 64298;\n  t[759] = 1617;\n  t[761] = 1776;\n  t[763] = 1778;\n  t[775] = 1652;\n  t[777] = 1764;\n  t[778] = 1780;\n  t[779] = 1781;\n  t[780] = 1782;\n  t[782] = 771;\n  t[783] = 64726;\n  t[786] = 8363;\n  t[788] = 8532;\n  t[790] = 768;\n  t[791] = 769;\n  t[792] = 768;\n  t[795] = 803;\n  t[797] = 64336;\n  t[798] = 64337;\n  t[799] = 64342;\n  t[800] = 64343;\n  t[801] = 64344;\n  t[802] = 64345;\n  t[803] = 64362;\n  t[804] = 64363;\n  t[805] = 64364;\n  t[2424] = 7821;\n  t[2425] = 7822;\n  t[2426] = 7823;\n  t[2427] = 7824;\n  t[2428] = 7825;\n  t[2429] = 7826;\n  t[2430] = 7827;\n  t[2433] = 7682;\n  t[2678] = 8045;\n  t[2679] = 8046;\n  t[2830] = 1552;\n  t[2838] = 686;\n  t[2840] = 751;\n  t[2842] = 753;\n  t[2843] = 754;\n  t[2844] = 755;\n  t[2846] = 757;\n  t[2856] = 767;\n  t[2857] = 848;\n  t[2858] = 849;\n  t[2862] = 853;\n  t[2863] = 854;\n  t[2864] = 855;\n  t[2865] = 861;\n  t[2866] = 862;\n  t[2906] = 7460;\n  t[2908] = 7462;\n  t[2909] = 7463;\n  t[2910] = 7464;\n  t[2912] = 7466;\n  t[2913] = 7467;\n  t[2914] = 7468;\n  t[2916] = 7470;\n  t[2917] = 7471;\n  t[2918] = 7472;\n  t[2920] = 7474;\n  t[2921] = 7475;\n  t[2922] = 7476;\n  t[2924] = 7478;\n  t[2925] = 7479;\n  t[2926] = 7480;\n  t[2928] = 7482;\n  t[2929] = 7483;\n  t[2930] = 7484;\n  t[2932] = 7486;\n  t[2933] = 7487;\n  t[2934] = 7488;\n  t[2936] = 7490;\n  t[2937] = 7491;\n  t[2938] = 7492;\n  t[2940] = 7494;\n  t[2941] = 7495;\n  t[2942] = 7496;\n  t[2944] = 7498;\n  t[2946] = 7500;\n  t[2948] = 7502;\n  t[2950] = 7504;\n  t[2951] = 7505;\n  t[2952] = 7506;\n  t[2954] = 7508;\n  t[2955] = 7509;\n  t[2956] = 7510;\n  t[2958] = 7512;\n  t[2959] = 7513;\n  t[2960] = 7514;\n  t[2962] = 7516;\n  t[2963] = 7517;\n  t[2964] = 7518;\n  t[2966] = 7520;\n  t[2967] = 7521;\n  t[2968] = 7522;\n  t[2970] = 7524;\n  t[2971] = 7525;\n  t[2972] = 7526;\n  t[2974] = 7528;\n  t[2975] = 7529;\n  t[2976] = 7530;\n  t[2978] = 1537;\n  t[2979] = 1538;\n  t[2980] = 1539;\n  t[2982] = 1549;\n  t[2983] = 1551;\n  t[2984] = 1552;\n  t[2986] = 1554;\n  t[2987] = 1555;\n  t[2988] = 1556;\n  t[2990] = 1623;\n  t[2991] = 1624;\n  t[2995] = 1775;\n  t[2999] = 1791;\n  t[3002] = 64290;\n  t[3003] = 64291;\n  t[3004] = 64292;\n  t[3006] = 64294;\n  t[3007] = 64295;\n  t[3008] = 64296;\n  t[3011] = 1900;\n  t[3014] = 8223;\n  t[3015] = 8244;\n  t[3017] = 7532;\n  t[3018] = 7533;\n  t[3019] = 7534;\n  t[3075] = 7590;\n  t[3076] = 7591;\n  t[3079] = 7594;\n  t[3080] = 7595;\n  t[3083] = 7598;\n  t[3084] = 7599;\n  t[3087] = 7602;\n  t[3088] = 7603;\n  t[3091] = 7606;\n  t[3092] = 7607;\n  t[3095] = 7610;\n  t[3096] = 7611;\n  t[3099] = 7614;\n  t[3100] = 7615;\n  t[3103] = 7618;\n  t[3104] = 7619;\n  t[3107] = 8337;\n  t[3108] = 8338;\n  t[3116] = 1884;\n  t[3119] = 1885;\n  t[3120] = 1885;\n  t[3123] = 1886;\n  t[3124] = 1886;\n  t[3127] = 1887;\n  t[3128] = 1887;\n  t[3131] = 1888;\n  t[3132] = 1888;\n  t[3135] = 1889;\n  t[3136] = 1889;\n  t[3139] = 1890;\n  t[3140] = 1890;\n  t[3143] = 1891;\n  t[3144] = 1891;\n  t[3147] = 1892;\n  t[3148] = 1892;\n  t[3153] = 580;\n  t[3154] = 581;\n  t[3157] = 584;\n  t[3158] = 585;\n  t[3161] = 588;\n  t[3162] = 589;\n  t[3165] = 891;\n  t[3166] = 892;\n  t[3169] = 1274;\n  t[3170] = 1275;\n  t[3173] = 1278;\n  t[3174] = 1279;\n  t[3181] = 7622;\n  t[3182] = 7623;\n  t[3282] = 11799;\n  t[3316] = 578;\n  t[3379] = 42785;\n  t[3393] = 1159;\n  t[3416] = 8377;\n});\nvar getSupplementalGlyphMapForArialBlack = (0, _util.getLookupTableFactory)(function (t) {\n  t[227] = 322;\n  t[264] = 261;\n  t[291] = 346;\n});\nvar getSupplementalGlyphMapForCalibri = (0, _util.getLookupTableFactory)(function (t) {\n  t[1] = 32;\n  t[4] = 65;\n  t[17] = 66;\n  t[18] = 67;\n  t[24] = 68;\n  t[28] = 69;\n  t[38] = 70;\n  t[39] = 71;\n  t[44] = 72;\n  t[47] = 73;\n  t[58] = 74;\n  t[60] = 75;\n  t[62] = 76;\n  t[68] = 77;\n  t[69] = 78;\n  t[75] = 79;\n  t[87] = 80;\n  t[89] = 81;\n  t[90] = 82;\n  t[94] = 83;\n  t[100] = 84;\n  t[104] = 85;\n  t[115] = 86;\n  t[116] = 87;\n  t[121] = 88;\n  t[122] = 89;\n  t[127] = 90;\n  t[258] = 97;\n  t[268] = 261;\n  t[271] = 98;\n  t[272] = 99;\n  t[273] = 263;\n  t[282] = 100;\n  t[286] = 101;\n  t[295] = 281;\n  t[296] = 102;\n  t[336] = 103;\n  t[346] = 104;\n  t[349] = 105;\n  t[361] = 106;\n  t[364] = 107;\n  t[367] = 108;\n  t[371] = 322;\n  t[373] = 109;\n  t[374] = 110;\n  t[381] = 111;\n  t[383] = 243;\n  t[393] = 112;\n  t[395] = 113;\n  t[396] = 114;\n  t[400] = 115;\n  t[401] = 347;\n  t[410] = 116;\n  t[437] = 117;\n  t[448] = 118;\n  t[449] = 119;\n  t[454] = 120;\n  t[455] = 121;\n  t[460] = 122;\n  t[463] = 380;\n  t[853] = 44;\n  t[855] = 58;\n  t[856] = 46;\n  t[876] = 47;\n  t[878] = 45;\n  t[882] = 45;\n  t[894] = 40;\n  t[895] = 41;\n  t[896] = 91;\n  t[897] = 93;\n  t[923] = 64;\n  t[1004] = 48;\n  t[1005] = 49;\n  t[1006] = 50;\n  t[1007] = 51;\n  t[1008] = 52;\n  t[1009] = 53;\n  t[1010] = 54;\n  t[1011] = 55;\n  t[1012] = 56;\n  t[1013] = 57;\n  t[1081] = 37;\n  t[1085] = 43;\n  t[1086] = 45;\n});\nexports.getStdFontMap = getStdFontMap;\nexports.getNonStdFontMap = getNonStdFontMap;\nexports.getSerifFonts = getSerifFonts;\nexports.getSymbolsFonts = getSymbolsFonts;\nexports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\nexports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\nexports.getSupplementalGlyphMapForCalibri = getSupplementalGlyphMapForCalibri;\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getLookupTableFactory = __w_pdfjs_require__(0).getLookupTableFactory;\nvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\n  t[63721] = 0x00A9;\n  t[63193] = 0x00A9;\n  t[63720] = 0x00AE;\n  t[63194] = 0x00AE;\n  t[63722] = 0x2122;\n  t[63195] = 0x2122;\n  t[63729] = 0x23A7;\n  t[63730] = 0x23A8;\n  t[63731] = 0x23A9;\n  t[63740] = 0x23AB;\n  t[63741] = 0x23AC;\n  t[63742] = 0x23AD;\n  t[63726] = 0x23A1;\n  t[63727] = 0x23A2;\n  t[63728] = 0x23A3;\n  t[63737] = 0x23A4;\n  t[63738] = 0x23A5;\n  t[63739] = 0x23A6;\n  t[63723] = 0x239B;\n  t[63724] = 0x239C;\n  t[63725] = 0x239D;\n  t[63734] = 0x239E;\n  t[63735] = 0x239F;\n  t[63736] = 0x23A0;\n});\nfunction mapSpecialUnicodeValues(code) {\n  if (code >= 0xFFF0 && code <= 0xFFFF) {\n    return 0;\n  } else if (code >= 0xF600 && code <= 0xF8FF) {\n    return getSpecialPUASymbols()[code] || code;\n  } else if (code === 0x00AD) {\n    return 0x002D;\n  }\n  return code;\n}\nfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\n  var unicode = glyphsUnicodeMap[name];\n  if (unicode !== undefined) {\n    return unicode;\n  }\n  if (!name) {\n    return -1;\n  }\n  if (name[0] === 'u') {\n    var nameLen = name.length,\n        hexStr;\n    if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n      hexStr = name.substr(3);\n    } else if (nameLen >= 5 && nameLen <= 7) {\n      hexStr = name.substr(1);\n    } else {\n      return -1;\n    }\n    if (hexStr === hexStr.toUpperCase()) {\n      unicode = parseInt(hexStr, 16);\n      if (unicode >= 0) {\n        return unicode;\n      }\n    }\n  }\n  return -1;\n}\nvar UnicodeRanges = [{\n  'begin': 0x0000,\n  'end': 0x007F\n}, {\n  'begin': 0x0080,\n  'end': 0x00FF\n}, {\n  'begin': 0x0100,\n  'end': 0x017F\n}, {\n  'begin': 0x0180,\n  'end': 0x024F\n}, {\n  'begin': 0x0250,\n  'end': 0x02AF\n}, {\n  'begin': 0x02B0,\n  'end': 0x02FF\n}, {\n  'begin': 0x0300,\n  'end': 0x036F\n}, {\n  'begin': 0x0370,\n  'end': 0x03FF\n}, {\n  'begin': 0x2C80,\n  'end': 0x2CFF\n}, {\n  'begin': 0x0400,\n  'end': 0x04FF\n}, {\n  'begin': 0x0530,\n  'end': 0x058F\n}, {\n  'begin': 0x0590,\n  'end': 0x05FF\n}, {\n  'begin': 0xA500,\n  'end': 0xA63F\n}, {\n  'begin': 0x0600,\n  'end': 0x06FF\n}, {\n  'begin': 0x07C0,\n  'end': 0x07FF\n}, {\n  'begin': 0x0900,\n  'end': 0x097F\n}, {\n  'begin': 0x0980,\n  'end': 0x09FF\n}, {\n  'begin': 0x0A00,\n  'end': 0x0A7F\n}, {\n  'begin': 0x0A80,\n  'end': 0x0AFF\n}, {\n  'begin': 0x0B00,\n  'end': 0x0B7F\n}, {\n  'begin': 0x0B80,\n  'end': 0x0BFF\n}, {\n  'begin': 0x0C00,\n  'end': 0x0C7F\n}, {\n  'begin': 0x0C80,\n  'end': 0x0CFF\n}, {\n  'begin': 0x0D00,\n  'end': 0x0D7F\n}, {\n  'begin': 0x0E00,\n  'end': 0x0E7F\n}, {\n  'begin': 0x0E80,\n  'end': 0x0EFF\n}, {\n  'begin': 0x10A0,\n  'end': 0x10FF\n}, {\n  'begin': 0x1B00,\n  'end': 0x1B7F\n}, {\n  'begin': 0x1100,\n  'end': 0x11FF\n}, {\n  'begin': 0x1E00,\n  'end': 0x1EFF\n}, {\n  'begin': 0x1F00,\n  'end': 0x1FFF\n}, {\n  'begin': 0x2000,\n  'end': 0x206F\n}, {\n  'begin': 0x2070,\n  'end': 0x209F\n}, {\n  'begin': 0x20A0,\n  'end': 0x20CF\n}, {\n  'begin': 0x20D0,\n  'end': 0x20FF\n}, {\n  'begin': 0x2100,\n  'end': 0x214F\n}, {\n  'begin': 0x2150,\n  'end': 0x218F\n}, {\n  'begin': 0x2190,\n  'end': 0x21FF\n}, {\n  'begin': 0x2200,\n  'end': 0x22FF\n}, {\n  'begin': 0x2300,\n  'end': 0x23FF\n}, {\n  'begin': 0x2400,\n  'end': 0x243F\n}, {\n  'begin': 0x2440,\n  'end': 0x245F\n}, {\n  'begin': 0x2460,\n  'end': 0x24FF\n}, {\n  'begin': 0x2500,\n  'end': 0x257F\n}, {\n  'begin': 0x2580,\n  'end': 0x259F\n}, {\n  'begin': 0x25A0,\n  'end': 0x25FF\n}, {\n  'begin': 0x2600,\n  'end': 0x26FF\n}, {\n  'begin': 0x2700,\n  'end': 0x27BF\n}, {\n  'begin': 0x3000,\n  'end': 0x303F\n}, {\n  'begin': 0x3040,\n  'end': 0x309F\n}, {\n  'begin': 0x30A0,\n  'end': 0x30FF\n}, {\n  'begin': 0x3100,\n  'end': 0x312F\n}, {\n  'begin': 0x3130,\n  'end': 0x318F\n}, {\n  'begin': 0xA840,\n  'end': 0xA87F\n}, {\n  'begin': 0x3200,\n  'end': 0x32FF\n}, {\n  'begin': 0x3300,\n  'end': 0x33FF\n}, {\n  'begin': 0xAC00,\n  'end': 0xD7AF\n}, {\n  'begin': 0xD800,\n  'end': 0xDFFF\n}, {\n  'begin': 0x10900,\n  'end': 0x1091F\n}, {\n  'begin': 0x4E00,\n  'end': 0x9FFF\n}, {\n  'begin': 0xE000,\n  'end': 0xF8FF\n}, {\n  'begin': 0x31C0,\n  'end': 0x31EF\n}, {\n  'begin': 0xFB00,\n  'end': 0xFB4F\n}, {\n  'begin': 0xFB50,\n  'end': 0xFDFF\n}, {\n  'begin': 0xFE20,\n  'end': 0xFE2F\n}, {\n  'begin': 0xFE10,\n  'end': 0xFE1F\n}, {\n  'begin': 0xFE50,\n  'end': 0xFE6F\n}, {\n  'begin': 0xFE70,\n  'end': 0xFEFF\n}, {\n  'begin': 0xFF00,\n  'end': 0xFFEF\n}, {\n  'begin': 0xFFF0,\n  'end': 0xFFFF\n}, {\n  'begin': 0x0F00,\n  'end': 0x0FFF\n}, {\n  'begin': 0x0700,\n  'end': 0x074F\n}, {\n  'begin': 0x0780,\n  'end': 0x07BF\n}, {\n  'begin': 0x0D80,\n  'end': 0x0DFF\n}, {\n  'begin': 0x1000,\n  'end': 0x109F\n}, {\n  'begin': 0x1200,\n  'end': 0x137F\n}, {\n  'begin': 0x13A0,\n  'end': 0x13FF\n}, {\n  'begin': 0x1400,\n  'end': 0x167F\n}, {\n  'begin': 0x1680,\n  'end': 0x169F\n}, {\n  'begin': 0x16A0,\n  'end': 0x16FF\n}, {\n  'begin': 0x1780,\n  'end': 0x17FF\n}, {\n  'begin': 0x1800,\n  'end': 0x18AF\n}, {\n  'begin': 0x2800,\n  'end': 0x28FF\n}, {\n  'begin': 0xA000,\n  'end': 0xA48F\n}, {\n  'begin': 0x1700,\n  'end': 0x171F\n}, {\n  'begin': 0x10300,\n  'end': 0x1032F\n}, {\n  'begin': 0x10330,\n  'end': 0x1034F\n}, {\n  'begin': 0x10400,\n  'end': 0x1044F\n}, {\n  'begin': 0x1D000,\n  'end': 0x1D0FF\n}, {\n  'begin': 0x1D400,\n  'end': 0x1D7FF\n}, {\n  'begin': 0xFF000,\n  'end': 0xFFFFD\n}, {\n  'begin': 0xFE00,\n  'end': 0xFE0F\n}, {\n  'begin': 0xE0000,\n  'end': 0xE007F\n}, {\n  'begin': 0x1900,\n  'end': 0x194F\n}, {\n  'begin': 0x1950,\n  'end': 0x197F\n}, {\n  'begin': 0x1980,\n  'end': 0x19DF\n}, {\n  'begin': 0x1A00,\n  'end': 0x1A1F\n}, {\n  'begin': 0x2C00,\n  'end': 0x2C5F\n}, {\n  'begin': 0x2D30,\n  'end': 0x2D7F\n}, {\n  'begin': 0x4DC0,\n  'end': 0x4DFF\n}, {\n  'begin': 0xA800,\n  'end': 0xA82F\n}, {\n  'begin': 0x10000,\n  'end': 0x1007F\n}, {\n  'begin': 0x10140,\n  'end': 0x1018F\n}, {\n  'begin': 0x10380,\n  'end': 0x1039F\n}, {\n  'begin': 0x103A0,\n  'end': 0x103DF\n}, {\n  'begin': 0x10450,\n  'end': 0x1047F\n}, {\n  'begin': 0x10480,\n  'end': 0x104AF\n}, {\n  'begin': 0x10800,\n  'end': 0x1083F\n}, {\n  'begin': 0x10A00,\n  'end': 0x10A5F\n}, {\n  'begin': 0x1D300,\n  'end': 0x1D35F\n}, {\n  'begin': 0x12000,\n  'end': 0x123FF\n}, {\n  'begin': 0x1D360,\n  'end': 0x1D37F\n}, {\n  'begin': 0x1B80,\n  'end': 0x1BBF\n}, {\n  'begin': 0x1C00,\n  'end': 0x1C4F\n}, {\n  'begin': 0x1C50,\n  'end': 0x1C7F\n}, {\n  'begin': 0xA880,\n  'end': 0xA8DF\n}, {\n  'begin': 0xA900,\n  'end': 0xA92F\n}, {\n  'begin': 0xA930,\n  'end': 0xA95F\n}, {\n  'begin': 0xAA00,\n  'end': 0xAA5F\n}, {\n  'begin': 0x10190,\n  'end': 0x101CF\n}, {\n  'begin': 0x101D0,\n  'end': 0x101FF\n}, {\n  'begin': 0x102A0,\n  'end': 0x102DF\n}, {\n  'begin': 0x1F030,\n  'end': 0x1F09F\n}];\nfunction getUnicodeRangeFor(value) {\n  for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n    var range = UnicodeRanges[i];\n    if (value >= range.begin && value < range.end) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction isRTLRangeFor(value) {\n  var range = UnicodeRanges[13];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  range = UnicodeRanges[11];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  return false;\n}\nvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\n  t['\\xA8'] = ' \\u0308';\n  t['\\xAF'] = ' \\u0304';\n  t['\\xB4'] = ' \\u0301';\n  t['\\xB5'] = '\\u03BC';\n  t['\\xB8'] = ' \\u0327';\n  t['\\u0132'] = 'IJ';\n  t['\\u0133'] = 'ij';\n  t['\\u013F'] = 'L\\xB7';\n  t['\\u0140'] = 'l\\xB7';\n  t['\\u0149'] = '\\u02BCn';\n  t['\\u017F'] = 's';\n  t['\\u01C4'] = 'D\\u017D';\n  t['\\u01C5'] = 'D\\u017E';\n  t['\\u01C6'] = 'd\\u017E';\n  t['\\u01C7'] = 'LJ';\n  t['\\u01C8'] = 'Lj';\n  t['\\u01C9'] = 'lj';\n  t['\\u01CA'] = 'NJ';\n  t['\\u01CB'] = 'Nj';\n  t['\\u01CC'] = 'nj';\n  t['\\u01F1'] = 'DZ';\n  t['\\u01F2'] = 'Dz';\n  t['\\u01F3'] = 'dz';\n  t['\\u02D8'] = ' \\u0306';\n  t['\\u02D9'] = ' \\u0307';\n  t['\\u02DA'] = ' \\u030A';\n  t['\\u02DB'] = ' \\u0328';\n  t['\\u02DC'] = ' \\u0303';\n  t['\\u02DD'] = ' \\u030B';\n  t['\\u037A'] = ' \\u0345';\n  t['\\u0384'] = ' \\u0301';\n  t['\\u03D0'] = '\\u03B2';\n  t['\\u03D1'] = '\\u03B8';\n  t['\\u03D2'] = '\\u03A5';\n  t['\\u03D5'] = '\\u03C6';\n  t['\\u03D6'] = '\\u03C0';\n  t['\\u03F0'] = '\\u03BA';\n  t['\\u03F1'] = '\\u03C1';\n  t['\\u03F2'] = '\\u03C2';\n  t['\\u03F4'] = '\\u0398';\n  t['\\u03F5'] = '\\u03B5';\n  t['\\u03F9'] = '\\u03A3';\n  t['\\u0587'] = '\\u0565\\u0582';\n  t['\\u0675'] = '\\u0627\\u0674';\n  t['\\u0676'] = '\\u0648\\u0674';\n  t['\\u0677'] = '\\u06C7\\u0674';\n  t['\\u0678'] = '\\u064A\\u0674';\n  t['\\u0E33'] = '\\u0E4D\\u0E32';\n  t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n  t['\\u0EDC'] = '\\u0EAB\\u0E99';\n  t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n  t['\\u0F77'] = '\\u0FB2\\u0F81';\n  t['\\u0F79'] = '\\u0FB3\\u0F81';\n  t['\\u1E9A'] = 'a\\u02BE';\n  t['\\u1FBD'] = ' \\u0313';\n  t['\\u1FBF'] = ' \\u0313';\n  t['\\u1FC0'] = ' \\u0342';\n  t['\\u1FFE'] = ' \\u0314';\n  t['\\u2002'] = ' ';\n  t['\\u2003'] = ' ';\n  t['\\u2004'] = ' ';\n  t['\\u2005'] = ' ';\n  t['\\u2006'] = ' ';\n  t['\\u2008'] = ' ';\n  t['\\u2009'] = ' ';\n  t['\\u200A'] = ' ';\n  t['\\u2017'] = ' \\u0333';\n  t['\\u2024'] = '.';\n  t['\\u2025'] = '..';\n  t['\\u2026'] = '...';\n  t['\\u2033'] = '\\u2032\\u2032';\n  t['\\u2034'] = '\\u2032\\u2032\\u2032';\n  t['\\u2036'] = '\\u2035\\u2035';\n  t['\\u2037'] = '\\u2035\\u2035\\u2035';\n  t['\\u203C'] = '!!';\n  t['\\u203E'] = ' \\u0305';\n  t['\\u2047'] = '??';\n  t['\\u2048'] = '?!';\n  t['\\u2049'] = '!?';\n  t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n  t['\\u205F'] = ' ';\n  t['\\u20A8'] = 'Rs';\n  t['\\u2100'] = 'a/c';\n  t['\\u2101'] = 'a/s';\n  t['\\u2103'] = '\\xB0C';\n  t['\\u2105'] = 'c/o';\n  t['\\u2106'] = 'c/u';\n  t['\\u2107'] = '\\u0190';\n  t['\\u2109'] = '\\xB0F';\n  t['\\u2116'] = 'No';\n  t['\\u2121'] = 'TEL';\n  t['\\u2135'] = '\\u05D0';\n  t['\\u2136'] = '\\u05D1';\n  t['\\u2137'] = '\\u05D2';\n  t['\\u2138'] = '\\u05D3';\n  t['\\u213B'] = 'FAX';\n  t['\\u2160'] = 'I';\n  t['\\u2161'] = 'II';\n  t['\\u2162'] = 'III';\n  t['\\u2163'] = 'IV';\n  t['\\u2164'] = 'V';\n  t['\\u2165'] = 'VI';\n  t['\\u2166'] = 'VII';\n  t['\\u2167'] = 'VIII';\n  t['\\u2168'] = 'IX';\n  t['\\u2169'] = 'X';\n  t['\\u216A'] = 'XI';\n  t['\\u216B'] = 'XII';\n  t['\\u216C'] = 'L';\n  t['\\u216D'] = 'C';\n  t['\\u216E'] = 'D';\n  t['\\u216F'] = 'M';\n  t['\\u2170'] = 'i';\n  t['\\u2171'] = 'ii';\n  t['\\u2172'] = 'iii';\n  t['\\u2173'] = 'iv';\n  t['\\u2174'] = 'v';\n  t['\\u2175'] = 'vi';\n  t['\\u2176'] = 'vii';\n  t['\\u2177'] = 'viii';\n  t['\\u2178'] = 'ix';\n  t['\\u2179'] = 'x';\n  t['\\u217A'] = 'xi';\n  t['\\u217B'] = 'xii';\n  t['\\u217C'] = 'l';\n  t['\\u217D'] = 'c';\n  t['\\u217E'] = 'd';\n  t['\\u217F'] = 'm';\n  t['\\u222C'] = '\\u222B\\u222B';\n  t['\\u222D'] = '\\u222B\\u222B\\u222B';\n  t['\\u222F'] = '\\u222E\\u222E';\n  t['\\u2230'] = '\\u222E\\u222E\\u222E';\n  t['\\u2474'] = '(1)';\n  t['\\u2475'] = '(2)';\n  t['\\u2476'] = '(3)';\n  t['\\u2477'] = '(4)';\n  t['\\u2478'] = '(5)';\n  t['\\u2479'] = '(6)';\n  t['\\u247A'] = '(7)';\n  t['\\u247B'] = '(8)';\n  t['\\u247C'] = '(9)';\n  t['\\u247D'] = '(10)';\n  t['\\u247E'] = '(11)';\n  t['\\u247F'] = '(12)';\n  t['\\u2480'] = '(13)';\n  t['\\u2481'] = '(14)';\n  t['\\u2482'] = '(15)';\n  t['\\u2483'] = '(16)';\n  t['\\u2484'] = '(17)';\n  t['\\u2485'] = '(18)';\n  t['\\u2486'] = '(19)';\n  t['\\u2487'] = '(20)';\n  t['\\u2488'] = '1.';\n  t['\\u2489'] = '2.';\n  t['\\u248A'] = '3.';\n  t['\\u248B'] = '4.';\n  t['\\u248C'] = '5.';\n  t['\\u248D'] = '6.';\n  t['\\u248E'] = '7.';\n  t['\\u248F'] = '8.';\n  t['\\u2490'] = '9.';\n  t['\\u2491'] = '10.';\n  t['\\u2492'] = '11.';\n  t['\\u2493'] = '12.';\n  t['\\u2494'] = '13.';\n  t['\\u2495'] = '14.';\n  t['\\u2496'] = '15.';\n  t['\\u2497'] = '16.';\n  t['\\u2498'] = '17.';\n  t['\\u2499'] = '18.';\n  t['\\u249A'] = '19.';\n  t['\\u249B'] = '20.';\n  t['\\u249C'] = '(a)';\n  t['\\u249D'] = '(b)';\n  t['\\u249E'] = '(c)';\n  t['\\u249F'] = '(d)';\n  t['\\u24A0'] = '(e)';\n  t['\\u24A1'] = '(f)';\n  t['\\u24A2'] = '(g)';\n  t['\\u24A3'] = '(h)';\n  t['\\u24A4'] = '(i)';\n  t['\\u24A5'] = '(j)';\n  t['\\u24A6'] = '(k)';\n  t['\\u24A7'] = '(l)';\n  t['\\u24A8'] = '(m)';\n  t['\\u24A9'] = '(n)';\n  t['\\u24AA'] = '(o)';\n  t['\\u24AB'] = '(p)';\n  t['\\u24AC'] = '(q)';\n  t['\\u24AD'] = '(r)';\n  t['\\u24AE'] = '(s)';\n  t['\\u24AF'] = '(t)';\n  t['\\u24B0'] = '(u)';\n  t['\\u24B1'] = '(v)';\n  t['\\u24B2'] = '(w)';\n  t['\\u24B3'] = '(x)';\n  t['\\u24B4'] = '(y)';\n  t['\\u24B5'] = '(z)';\n  t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n  t['\\u2A74'] = '::=';\n  t['\\u2A75'] = '==';\n  t['\\u2A76'] = '===';\n  t['\\u2E9F'] = '\\u6BCD';\n  t['\\u2EF3'] = '\\u9F9F';\n  t['\\u2F00'] = '\\u4E00';\n  t['\\u2F01'] = '\\u4E28';\n  t['\\u2F02'] = '\\u4E36';\n  t['\\u2F03'] = '\\u4E3F';\n  t['\\u2F04'] = '\\u4E59';\n  t['\\u2F05'] = '\\u4E85';\n  t['\\u2F06'] = '\\u4E8C';\n  t['\\u2F07'] = '\\u4EA0';\n  t['\\u2F08'] = '\\u4EBA';\n  t['\\u2F09'] = '\\u513F';\n  t['\\u2F0A'] = '\\u5165';\n  t['\\u2F0B'] = '\\u516B';\n  t['\\u2F0C'] = '\\u5182';\n  t['\\u2F0D'] = '\\u5196';\n  t['\\u2F0E'] = '\\u51AB';\n  t['\\u2F0F'] = '\\u51E0';\n  t['\\u2F10'] = '\\u51F5';\n  t['\\u2F11'] = '\\u5200';\n  t['\\u2F12'] = '\\u529B';\n  t['\\u2F13'] = '\\u52F9';\n  t['\\u2F14'] = '\\u5315';\n  t['\\u2F15'] = '\\u531A';\n  t['\\u2F16'] = '\\u5338';\n  t['\\u2F17'] = '\\u5341';\n  t['\\u2F18'] = '\\u535C';\n  t['\\u2F19'] = '\\u5369';\n  t['\\u2F1A'] = '\\u5382';\n  t['\\u2F1B'] = '\\u53B6';\n  t['\\u2F1C'] = '\\u53C8';\n  t['\\u2F1D'] = '\\u53E3';\n  t['\\u2F1E'] = '\\u56D7';\n  t['\\u2F1F'] = '\\u571F';\n  t['\\u2F20'] = '\\u58EB';\n  t['\\u2F21'] = '\\u5902';\n  t['\\u2F22'] = '\\u590A';\n  t['\\u2F23'] = '\\u5915';\n  t['\\u2F24'] = '\\u5927';\n  t['\\u2F25'] = '\\u5973';\n  t['\\u2F26'] = '\\u5B50';\n  t['\\u2F27'] = '\\u5B80';\n  t['\\u2F28'] = '\\u5BF8';\n  t['\\u2F29'] = '\\u5C0F';\n  t['\\u2F2A'] = '\\u5C22';\n  t['\\u2F2B'] = '\\u5C38';\n  t['\\u2F2C'] = '\\u5C6E';\n  t['\\u2F2D'] = '\\u5C71';\n  t['\\u2F2E'] = '\\u5DDB';\n  t['\\u2F2F'] = '\\u5DE5';\n  t['\\u2F30'] = '\\u5DF1';\n  t['\\u2F31'] = '\\u5DFE';\n  t['\\u2F32'] = '\\u5E72';\n  t['\\u2F33'] = '\\u5E7A';\n  t['\\u2F34'] = '\\u5E7F';\n  t['\\u2F35'] = '\\u5EF4';\n  t['\\u2F36'] = '\\u5EFE';\n  t['\\u2F37'] = '\\u5F0B';\n  t['\\u2F38'] = '\\u5F13';\n  t['\\u2F39'] = '\\u5F50';\n  t['\\u2F3A'] = '\\u5F61';\n  t['\\u2F3B'] = '\\u5F73';\n  t['\\u2F3C'] = '\\u5FC3';\n  t['\\u2F3D'] = '\\u6208';\n  t['\\u2F3E'] = '\\u6236';\n  t['\\u2F3F'] = '\\u624B';\n  t['\\u2F40'] = '\\u652F';\n  t['\\u2F41'] = '\\u6534';\n  t['\\u2F42'] = '\\u6587';\n  t['\\u2F43'] = '\\u6597';\n  t['\\u2F44'] = '\\u65A4';\n  t['\\u2F45'] = '\\u65B9';\n  t['\\u2F46'] = '\\u65E0';\n  t['\\u2F47'] = '\\u65E5';\n  t['\\u2F48'] = '\\u66F0';\n  t['\\u2F49'] = '\\u6708';\n  t['\\u2F4A'] = '\\u6728';\n  t['\\u2F4B'] = '\\u6B20';\n  t['\\u2F4C'] = '\\u6B62';\n  t['\\u2F4D'] = '\\u6B79';\n  t['\\u2F4E'] = '\\u6BB3';\n  t['\\u2F4F'] = '\\u6BCB';\n  t['\\u2F50'] = '\\u6BD4';\n  t['\\u2F51'] = '\\u6BDB';\n  t['\\u2F52'] = '\\u6C0F';\n  t['\\u2F53'] = '\\u6C14';\n  t['\\u2F54'] = '\\u6C34';\n  t['\\u2F55'] = '\\u706B';\n  t['\\u2F56'] = '\\u722A';\n  t['\\u2F57'] = '\\u7236';\n  t['\\u2F58'] = '\\u723B';\n  t['\\u2F59'] = '\\u723F';\n  t['\\u2F5A'] = '\\u7247';\n  t['\\u2F5B'] = '\\u7259';\n  t['\\u2F5C'] = '\\u725B';\n  t['\\u2F5D'] = '\\u72AC';\n  t['\\u2F5E'] = '\\u7384';\n  t['\\u2F5F'] = '\\u7389';\n  t['\\u2F60'] = '\\u74DC';\n  t['\\u2F61'] = '\\u74E6';\n  t['\\u2F62'] = '\\u7518';\n  t['\\u2F63'] = '\\u751F';\n  t['\\u2F64'] = '\\u7528';\n  t['\\u2F65'] = '\\u7530';\n  t['\\u2F66'] = '\\u758B';\n  t['\\u2F67'] = '\\u7592';\n  t['\\u2F68'] = '\\u7676';\n  t['\\u2F69'] = '\\u767D';\n  t['\\u2F6A'] = '\\u76AE';\n  t['\\u2F6B'] = '\\u76BF';\n  t['\\u2F6C'] = '\\u76EE';\n  t['\\u2F6D'] = '\\u77DB';\n  t['\\u2F6E'] = '\\u77E2';\n  t['\\u2F6F'] = '\\u77F3';\n  t['\\u2F70'] = '\\u793A';\n  t['\\u2F71'] = '\\u79B8';\n  t['\\u2F72'] = '\\u79BE';\n  t['\\u2F73'] = '\\u7A74';\n  t['\\u2F74'] = '\\u7ACB';\n  t['\\u2F75'] = '\\u7AF9';\n  t['\\u2F76'] = '\\u7C73';\n  t['\\u2F77'] = '\\u7CF8';\n  t['\\u2F78'] = '\\u7F36';\n  t['\\u2F79'] = '\\u7F51';\n  t['\\u2F7A'] = '\\u7F8A';\n  t['\\u2F7B'] = '\\u7FBD';\n  t['\\u2F7C'] = '\\u8001';\n  t['\\u2F7D'] = '\\u800C';\n  t['\\u2F7E'] = '\\u8012';\n  t['\\u2F7F'] = '\\u8033';\n  t['\\u2F80'] = '\\u807F';\n  t['\\u2F81'] = '\\u8089';\n  t['\\u2F82'] = '\\u81E3';\n  t['\\u2F83'] = '\\u81EA';\n  t['\\u2F84'] = '\\u81F3';\n  t['\\u2F85'] = '\\u81FC';\n  t['\\u2F86'] = '\\u820C';\n  t['\\u2F87'] = '\\u821B';\n  t['\\u2F88'] = '\\u821F';\n  t['\\u2F89'] = '\\u826E';\n  t['\\u2F8A'] = '\\u8272';\n  t['\\u2F8B'] = '\\u8278';\n  t['\\u2F8C'] = '\\u864D';\n  t['\\u2F8D'] = '\\u866B';\n  t['\\u2F8E'] = '\\u8840';\n  t['\\u2F8F'] = '\\u884C';\n  t['\\u2F90'] = '\\u8863';\n  t['\\u2F91'] = '\\u897E';\n  t['\\u2F92'] = '\\u898B';\n  t['\\u2F93'] = '\\u89D2';\n  t['\\u2F94'] = '\\u8A00';\n  t['\\u2F95'] = '\\u8C37';\n  t['\\u2F96'] = '\\u8C46';\n  t['\\u2F97'] = '\\u8C55';\n  t['\\u2F98'] = '\\u8C78';\n  t['\\u2F99'] = '\\u8C9D';\n  t['\\u2F9A'] = '\\u8D64';\n  t['\\u2F9B'] = '\\u8D70';\n  t['\\u2F9C'] = '\\u8DB3';\n  t['\\u2F9D'] = '\\u8EAB';\n  t['\\u2F9E'] = '\\u8ECA';\n  t['\\u2F9F'] = '\\u8F9B';\n  t['\\u2FA0'] = '\\u8FB0';\n  t['\\u2FA1'] = '\\u8FB5';\n  t['\\u2FA2'] = '\\u9091';\n  t['\\u2FA3'] = '\\u9149';\n  t['\\u2FA4'] = '\\u91C6';\n  t['\\u2FA5'] = '\\u91CC';\n  t['\\u2FA6'] = '\\u91D1';\n  t['\\u2FA7'] = '\\u9577';\n  t['\\u2FA8'] = '\\u9580';\n  t['\\u2FA9'] = '\\u961C';\n  t['\\u2FAA'] = '\\u96B6';\n  t['\\u2FAB'] = '\\u96B9';\n  t['\\u2FAC'] = '\\u96E8';\n  t['\\u2FAD'] = '\\u9751';\n  t['\\u2FAE'] = '\\u975E';\n  t['\\u2FAF'] = '\\u9762';\n  t['\\u2FB0'] = '\\u9769';\n  t['\\u2FB1'] = '\\u97CB';\n  t['\\u2FB2'] = '\\u97ED';\n  t['\\u2FB3'] = '\\u97F3';\n  t['\\u2FB4'] = '\\u9801';\n  t['\\u2FB5'] = '\\u98A8';\n  t['\\u2FB6'] = '\\u98DB';\n  t['\\u2FB7'] = '\\u98DF';\n  t['\\u2FB8'] = '\\u9996';\n  t['\\u2FB9'] = '\\u9999';\n  t['\\u2FBA'] = '\\u99AC';\n  t['\\u2FBB'] = '\\u9AA8';\n  t['\\u2FBC'] = '\\u9AD8';\n  t['\\u2FBD'] = '\\u9ADF';\n  t['\\u2FBE'] = '\\u9B25';\n  t['\\u2FBF'] = '\\u9B2F';\n  t['\\u2FC0'] = '\\u9B32';\n  t['\\u2FC1'] = '\\u9B3C';\n  t['\\u2FC2'] = '\\u9B5A';\n  t['\\u2FC3'] = '\\u9CE5';\n  t['\\u2FC4'] = '\\u9E75';\n  t['\\u2FC5'] = '\\u9E7F';\n  t['\\u2FC6'] = '\\u9EA5';\n  t['\\u2FC7'] = '\\u9EBB';\n  t['\\u2FC8'] = '\\u9EC3';\n  t['\\u2FC9'] = '\\u9ECD';\n  t['\\u2FCA'] = '\\u9ED1';\n  t['\\u2FCB'] = '\\u9EF9';\n  t['\\u2FCC'] = '\\u9EFD';\n  t['\\u2FCD'] = '\\u9F0E';\n  t['\\u2FCE'] = '\\u9F13';\n  t['\\u2FCF'] = '\\u9F20';\n  t['\\u2FD0'] = '\\u9F3B';\n  t['\\u2FD1'] = '\\u9F4A';\n  t['\\u2FD2'] = '\\u9F52';\n  t['\\u2FD3'] = '\\u9F8D';\n  t['\\u2FD4'] = '\\u9F9C';\n  t['\\u2FD5'] = '\\u9FA0';\n  t['\\u3036'] = '\\u3012';\n  t['\\u3038'] = '\\u5341';\n  t['\\u3039'] = '\\u5344';\n  t['\\u303A'] = '\\u5345';\n  t['\\u309B'] = ' \\u3099';\n  t['\\u309C'] = ' \\u309A';\n  t['\\u3131'] = '\\u1100';\n  t['\\u3132'] = '\\u1101';\n  t['\\u3133'] = '\\u11AA';\n  t['\\u3134'] = '\\u1102';\n  t['\\u3135'] = '\\u11AC';\n  t['\\u3136'] = '\\u11AD';\n  t['\\u3137'] = '\\u1103';\n  t['\\u3138'] = '\\u1104';\n  t['\\u3139'] = '\\u1105';\n  t['\\u313A'] = '\\u11B0';\n  t['\\u313B'] = '\\u11B1';\n  t['\\u313C'] = '\\u11B2';\n  t['\\u313D'] = '\\u11B3';\n  t['\\u313E'] = '\\u11B4';\n  t['\\u313F'] = '\\u11B5';\n  t['\\u3140'] = '\\u111A';\n  t['\\u3141'] = '\\u1106';\n  t['\\u3142'] = '\\u1107';\n  t['\\u3143'] = '\\u1108';\n  t['\\u3144'] = '\\u1121';\n  t['\\u3145'] = '\\u1109';\n  t['\\u3146'] = '\\u110A';\n  t['\\u3147'] = '\\u110B';\n  t['\\u3148'] = '\\u110C';\n  t['\\u3149'] = '\\u110D';\n  t['\\u314A'] = '\\u110E';\n  t['\\u314B'] = '\\u110F';\n  t['\\u314C'] = '\\u1110';\n  t['\\u314D'] = '\\u1111';\n  t['\\u314E'] = '\\u1112';\n  t['\\u314F'] = '\\u1161';\n  t['\\u3150'] = '\\u1162';\n  t['\\u3151'] = '\\u1163';\n  t['\\u3152'] = '\\u1164';\n  t['\\u3153'] = '\\u1165';\n  t['\\u3154'] = '\\u1166';\n  t['\\u3155'] = '\\u1167';\n  t['\\u3156'] = '\\u1168';\n  t['\\u3157'] = '\\u1169';\n  t['\\u3158'] = '\\u116A';\n  t['\\u3159'] = '\\u116B';\n  t['\\u315A'] = '\\u116C';\n  t['\\u315B'] = '\\u116D';\n  t['\\u315C'] = '\\u116E';\n  t['\\u315D'] = '\\u116F';\n  t['\\u315E'] = '\\u1170';\n  t['\\u315F'] = '\\u1171';\n  t['\\u3160'] = '\\u1172';\n  t['\\u3161'] = '\\u1173';\n  t['\\u3162'] = '\\u1174';\n  t['\\u3163'] = '\\u1175';\n  t['\\u3164'] = '\\u1160';\n  t['\\u3165'] = '\\u1114';\n  t['\\u3166'] = '\\u1115';\n  t['\\u3167'] = '\\u11C7';\n  t['\\u3168'] = '\\u11C8';\n  t['\\u3169'] = '\\u11CC';\n  t['\\u316A'] = '\\u11CE';\n  t['\\u316B'] = '\\u11D3';\n  t['\\u316C'] = '\\u11D7';\n  t['\\u316D'] = '\\u11D9';\n  t['\\u316E'] = '\\u111C';\n  t['\\u316F'] = '\\u11DD';\n  t['\\u3170'] = '\\u11DF';\n  t['\\u3171'] = '\\u111D';\n  t['\\u3172'] = '\\u111E';\n  t['\\u3173'] = '\\u1120';\n  t['\\u3174'] = '\\u1122';\n  t['\\u3175'] = '\\u1123';\n  t['\\u3176'] = '\\u1127';\n  t['\\u3177'] = '\\u1129';\n  t['\\u3178'] = '\\u112B';\n  t['\\u3179'] = '\\u112C';\n  t['\\u317A'] = '\\u112D';\n  t['\\u317B'] = '\\u112E';\n  t['\\u317C'] = '\\u112F';\n  t['\\u317D'] = '\\u1132';\n  t['\\u317E'] = '\\u1136';\n  t['\\u317F'] = '\\u1140';\n  t['\\u3180'] = '\\u1147';\n  t['\\u3181'] = '\\u114C';\n  t['\\u3182'] = '\\u11F1';\n  t['\\u3183'] = '\\u11F2';\n  t['\\u3184'] = '\\u1157';\n  t['\\u3185'] = '\\u1158';\n  t['\\u3186'] = '\\u1159';\n  t['\\u3187'] = '\\u1184';\n  t['\\u3188'] = '\\u1185';\n  t['\\u3189'] = '\\u1188';\n  t['\\u318A'] = '\\u1191';\n  t['\\u318B'] = '\\u1192';\n  t['\\u318C'] = '\\u1194';\n  t['\\u318D'] = '\\u119E';\n  t['\\u318E'] = '\\u11A1';\n  t['\\u3200'] = '(\\u1100)';\n  t['\\u3201'] = '(\\u1102)';\n  t['\\u3202'] = '(\\u1103)';\n  t['\\u3203'] = '(\\u1105)';\n  t['\\u3204'] = '(\\u1106)';\n  t['\\u3205'] = '(\\u1107)';\n  t['\\u3206'] = '(\\u1109)';\n  t['\\u3207'] = '(\\u110B)';\n  t['\\u3208'] = '(\\u110C)';\n  t['\\u3209'] = '(\\u110E)';\n  t['\\u320A'] = '(\\u110F)';\n  t['\\u320B'] = '(\\u1110)';\n  t['\\u320C'] = '(\\u1111)';\n  t['\\u320D'] = '(\\u1112)';\n  t['\\u320E'] = '(\\u1100\\u1161)';\n  t['\\u320F'] = '(\\u1102\\u1161)';\n  t['\\u3210'] = '(\\u1103\\u1161)';\n  t['\\u3211'] = '(\\u1105\\u1161)';\n  t['\\u3212'] = '(\\u1106\\u1161)';\n  t['\\u3213'] = '(\\u1107\\u1161)';\n  t['\\u3214'] = '(\\u1109\\u1161)';\n  t['\\u3215'] = '(\\u110B\\u1161)';\n  t['\\u3216'] = '(\\u110C\\u1161)';\n  t['\\u3217'] = '(\\u110E\\u1161)';\n  t['\\u3218'] = '(\\u110F\\u1161)';\n  t['\\u3219'] = '(\\u1110\\u1161)';\n  t['\\u321A'] = '(\\u1111\\u1161)';\n  t['\\u321B'] = '(\\u1112\\u1161)';\n  t['\\u321C'] = '(\\u110C\\u116E)';\n  t['\\u321D'] = '(\\u110B\\u1169\\u110C\\u1165\\u11AB)';\n  t['\\u321E'] = '(\\u110B\\u1169\\u1112\\u116E)';\n  t['\\u3220'] = '(\\u4E00)';\n  t['\\u3221'] = '(\\u4E8C)';\n  t['\\u3222'] = '(\\u4E09)';\n  t['\\u3223'] = '(\\u56DB)';\n  t['\\u3224'] = '(\\u4E94)';\n  t['\\u3225'] = '(\\u516D)';\n  t['\\u3226'] = '(\\u4E03)';\n  t['\\u3227'] = '(\\u516B)';\n  t['\\u3228'] = '(\\u4E5D)';\n  t['\\u3229'] = '(\\u5341)';\n  t['\\u322A'] = '(\\u6708)';\n  t['\\u322B'] = '(\\u706B)';\n  t['\\u322C'] = '(\\u6C34)';\n  t['\\u322D'] = '(\\u6728)';\n  t['\\u322E'] = '(\\u91D1)';\n  t['\\u322F'] = '(\\u571F)';\n  t['\\u3230'] = '(\\u65E5)';\n  t['\\u3231'] = '(\\u682A)';\n  t['\\u3232'] = '(\\u6709)';\n  t['\\u3233'] = '(\\u793E)';\n  t['\\u3234'] = '(\\u540D)';\n  t['\\u3235'] = '(\\u7279)';\n  t['\\u3236'] = '(\\u8CA1)';\n  t['\\u3237'] = '(\\u795D)';\n  t['\\u3238'] = '(\\u52B4)';\n  t['\\u3239'] = '(\\u4EE3)';\n  t['\\u323A'] = '(\\u547C)';\n  t['\\u323B'] = '(\\u5B66)';\n  t['\\u323C'] = '(\\u76E3)';\n  t['\\u323D'] = '(\\u4F01)';\n  t['\\u323E'] = '(\\u8CC7)';\n  t['\\u323F'] = '(\\u5354)';\n  t['\\u3240'] = '(\\u796D)';\n  t['\\u3241'] = '(\\u4F11)';\n  t['\\u3242'] = '(\\u81EA)';\n  t['\\u3243'] = '(\\u81F3)';\n  t['\\u32C0'] = '1\\u6708';\n  t['\\u32C1'] = '2\\u6708';\n  t['\\u32C2'] = '3\\u6708';\n  t['\\u32C3'] = '4\\u6708';\n  t['\\u32C4'] = '5\\u6708';\n  t['\\u32C5'] = '6\\u6708';\n  t['\\u32C6'] = '7\\u6708';\n  t['\\u32C7'] = '8\\u6708';\n  t['\\u32C8'] = '9\\u6708';\n  t['\\u32C9'] = '10\\u6708';\n  t['\\u32CA'] = '11\\u6708';\n  t['\\u32CB'] = '12\\u6708';\n  t['\\u3358'] = '0\\u70B9';\n  t['\\u3359'] = '1\\u70B9';\n  t['\\u335A'] = '2\\u70B9';\n  t['\\u335B'] = '3\\u70B9';\n  t['\\u335C'] = '4\\u70B9';\n  t['\\u335D'] = '5\\u70B9';\n  t['\\u335E'] = '6\\u70B9';\n  t['\\u335F'] = '7\\u70B9';\n  t['\\u3360'] = '8\\u70B9';\n  t['\\u3361'] = '9\\u70B9';\n  t['\\u3362'] = '10\\u70B9';\n  t['\\u3363'] = '11\\u70B9';\n  t['\\u3364'] = '12\\u70B9';\n  t['\\u3365'] = '13\\u70B9';\n  t['\\u3366'] = '14\\u70B9';\n  t['\\u3367'] = '15\\u70B9';\n  t['\\u3368'] = '16\\u70B9';\n  t['\\u3369'] = '17\\u70B9';\n  t['\\u336A'] = '18\\u70B9';\n  t['\\u336B'] = '19\\u70B9';\n  t['\\u336C'] = '20\\u70B9';\n  t['\\u336D'] = '21\\u70B9';\n  t['\\u336E'] = '22\\u70B9';\n  t['\\u336F'] = '23\\u70B9';\n  t['\\u3370'] = '24\\u70B9';\n  t['\\u33E0'] = '1\\u65E5';\n  t['\\u33E1'] = '2\\u65E5';\n  t['\\u33E2'] = '3\\u65E5';\n  t['\\u33E3'] = '4\\u65E5';\n  t['\\u33E4'] = '5\\u65E5';\n  t['\\u33E5'] = '6\\u65E5';\n  t['\\u33E6'] = '7\\u65E5';\n  t['\\u33E7'] = '8\\u65E5';\n  t['\\u33E8'] = '9\\u65E5';\n  t['\\u33E9'] = '10\\u65E5';\n  t['\\u33EA'] = '11\\u65E5';\n  t['\\u33EB'] = '12\\u65E5';\n  t['\\u33EC'] = '13\\u65E5';\n  t['\\u33ED'] = '14\\u65E5';\n  t['\\u33EE'] = '15\\u65E5';\n  t['\\u33EF'] = '16\\u65E5';\n  t['\\u33F0'] = '17\\u65E5';\n  t['\\u33F1'] = '18\\u65E5';\n  t['\\u33F2'] = '19\\u65E5';\n  t['\\u33F3'] = '20\\u65E5';\n  t['\\u33F4'] = '21\\u65E5';\n  t['\\u33F5'] = '22\\u65E5';\n  t['\\u33F6'] = '23\\u65E5';\n  t['\\u33F7'] = '24\\u65E5';\n  t['\\u33F8'] = '25\\u65E5';\n  t['\\u33F9'] = '26\\u65E5';\n  t['\\u33FA'] = '27\\u65E5';\n  t['\\u33FB'] = '28\\u65E5';\n  t['\\u33FC'] = '29\\u65E5';\n  t['\\u33FD'] = '30\\u65E5';\n  t['\\u33FE'] = '31\\u65E5';\n  t['\\uFB00'] = 'ff';\n  t['\\uFB01'] = 'fi';\n  t['\\uFB02'] = 'fl';\n  t['\\uFB03'] = 'ffi';\n  t['\\uFB04'] = 'ffl';\n  t['\\uFB05'] = '\\u017Ft';\n  t['\\uFB06'] = 'st';\n  t['\\uFB13'] = '\\u0574\\u0576';\n  t['\\uFB14'] = '\\u0574\\u0565';\n  t['\\uFB15'] = '\\u0574\\u056B';\n  t['\\uFB16'] = '\\u057E\\u0576';\n  t['\\uFB17'] = '\\u0574\\u056D';\n  t['\\uFB4F'] = '\\u05D0\\u05DC';\n  t['\\uFB50'] = '\\u0671';\n  t['\\uFB51'] = '\\u0671';\n  t['\\uFB52'] = '\\u067B';\n  t['\\uFB53'] = '\\u067B';\n  t['\\uFB54'] = '\\u067B';\n  t['\\uFB55'] = '\\u067B';\n  t['\\uFB56'] = '\\u067E';\n  t['\\uFB57'] = '\\u067E';\n  t['\\uFB58'] = '\\u067E';\n  t['\\uFB59'] = '\\u067E';\n  t['\\uFB5A'] = '\\u0680';\n  t['\\uFB5B'] = '\\u0680';\n  t['\\uFB5C'] = '\\u0680';\n  t['\\uFB5D'] = '\\u0680';\n  t['\\uFB5E'] = '\\u067A';\n  t['\\uFB5F'] = '\\u067A';\n  t['\\uFB60'] = '\\u067A';\n  t['\\uFB61'] = '\\u067A';\n  t['\\uFB62'] = '\\u067F';\n  t['\\uFB63'] = '\\u067F';\n  t['\\uFB64'] = '\\u067F';\n  t['\\uFB65'] = '\\u067F';\n  t['\\uFB66'] = '\\u0679';\n  t['\\uFB67'] = '\\u0679';\n  t['\\uFB68'] = '\\u0679';\n  t['\\uFB69'] = '\\u0679';\n  t['\\uFB6A'] = '\\u06A4';\n  t['\\uFB6B'] = '\\u06A4';\n  t['\\uFB6C'] = '\\u06A4';\n  t['\\uFB6D'] = '\\u06A4';\n  t['\\uFB6E'] = '\\u06A6';\n  t['\\uFB6F'] = '\\u06A6';\n  t['\\uFB70'] = '\\u06A6';\n  t['\\uFB71'] = '\\u06A6';\n  t['\\uFB72'] = '\\u0684';\n  t['\\uFB73'] = '\\u0684';\n  t['\\uFB74'] = '\\u0684';\n  t['\\uFB75'] = '\\u0684';\n  t['\\uFB76'] = '\\u0683';\n  t['\\uFB77'] = '\\u0683';\n  t['\\uFB78'] = '\\u0683';\n  t['\\uFB79'] = '\\u0683';\n  t['\\uFB7A'] = '\\u0686';\n  t['\\uFB7B'] = '\\u0686';\n  t['\\uFB7C'] = '\\u0686';\n  t['\\uFB7D'] = '\\u0686';\n  t['\\uFB7E'] = '\\u0687';\n  t['\\uFB7F'] = '\\u0687';\n  t['\\uFB80'] = '\\u0687';\n  t['\\uFB81'] = '\\u0687';\n  t['\\uFB82'] = '\\u068D';\n  t['\\uFB83'] = '\\u068D';\n  t['\\uFB84'] = '\\u068C';\n  t['\\uFB85'] = '\\u068C';\n  t['\\uFB86'] = '\\u068E';\n  t['\\uFB87'] = '\\u068E';\n  t['\\uFB88'] = '\\u0688';\n  t['\\uFB89'] = '\\u0688';\n  t['\\uFB8A'] = '\\u0698';\n  t['\\uFB8B'] = '\\u0698';\n  t['\\uFB8C'] = '\\u0691';\n  t['\\uFB8D'] = '\\u0691';\n  t['\\uFB8E'] = '\\u06A9';\n  t['\\uFB8F'] = '\\u06A9';\n  t['\\uFB90'] = '\\u06A9';\n  t['\\uFB91'] = '\\u06A9';\n  t['\\uFB92'] = '\\u06AF';\n  t['\\uFB93'] = '\\u06AF';\n  t['\\uFB94'] = '\\u06AF';\n  t['\\uFB95'] = '\\u06AF';\n  t['\\uFB96'] = '\\u06B3';\n  t['\\uFB97'] = '\\u06B3';\n  t['\\uFB98'] = '\\u06B3';\n  t['\\uFB99'] = '\\u06B3';\n  t['\\uFB9A'] = '\\u06B1';\n  t['\\uFB9B'] = '\\u06B1';\n  t['\\uFB9C'] = '\\u06B1';\n  t['\\uFB9D'] = '\\u06B1';\n  t['\\uFB9E'] = '\\u06BA';\n  t['\\uFB9F'] = '\\u06BA';\n  t['\\uFBA0'] = '\\u06BB';\n  t['\\uFBA1'] = '\\u06BB';\n  t['\\uFBA2'] = '\\u06BB';\n  t['\\uFBA3'] = '\\u06BB';\n  t['\\uFBA4'] = '\\u06C0';\n  t['\\uFBA5'] = '\\u06C0';\n  t['\\uFBA6'] = '\\u06C1';\n  t['\\uFBA7'] = '\\u06C1';\n  t['\\uFBA8'] = '\\u06C1';\n  t['\\uFBA9'] = '\\u06C1';\n  t['\\uFBAA'] = '\\u06BE';\n  t['\\uFBAB'] = '\\u06BE';\n  t['\\uFBAC'] = '\\u06BE';\n  t['\\uFBAD'] = '\\u06BE';\n  t['\\uFBAE'] = '\\u06D2';\n  t['\\uFBAF'] = '\\u06D2';\n  t['\\uFBB0'] = '\\u06D3';\n  t['\\uFBB1'] = '\\u06D3';\n  t['\\uFBD3'] = '\\u06AD';\n  t['\\uFBD4'] = '\\u06AD';\n  t['\\uFBD5'] = '\\u06AD';\n  t['\\uFBD6'] = '\\u06AD';\n  t['\\uFBD7'] = '\\u06C7';\n  t['\\uFBD8'] = '\\u06C7';\n  t['\\uFBD9'] = '\\u06C6';\n  t['\\uFBDA'] = '\\u06C6';\n  t['\\uFBDB'] = '\\u06C8';\n  t['\\uFBDC'] = '\\u06C8';\n  t['\\uFBDD'] = '\\u0677';\n  t['\\uFBDE'] = '\\u06CB';\n  t['\\uFBDF'] = '\\u06CB';\n  t['\\uFBE0'] = '\\u06C5';\n  t['\\uFBE1'] = '\\u06C5';\n  t['\\uFBE2'] = '\\u06C9';\n  t['\\uFBE3'] = '\\u06C9';\n  t['\\uFBE4'] = '\\u06D0';\n  t['\\uFBE5'] = '\\u06D0';\n  t['\\uFBE6'] = '\\u06D0';\n  t['\\uFBE7'] = '\\u06D0';\n  t['\\uFBE8'] = '\\u0649';\n  t['\\uFBE9'] = '\\u0649';\n  t['\\uFBEA'] = '\\u0626\\u0627';\n  t['\\uFBEB'] = '\\u0626\\u0627';\n  t['\\uFBEC'] = '\\u0626\\u06D5';\n  t['\\uFBED'] = '\\u0626\\u06D5';\n  t['\\uFBEE'] = '\\u0626\\u0648';\n  t['\\uFBEF'] = '\\u0626\\u0648';\n  t['\\uFBF0'] = '\\u0626\\u06C7';\n  t['\\uFBF1'] = '\\u0626\\u06C7';\n  t['\\uFBF2'] = '\\u0626\\u06C6';\n  t['\\uFBF3'] = '\\u0626\\u06C6';\n  t['\\uFBF4'] = '\\u0626\\u06C8';\n  t['\\uFBF5'] = '\\u0626\\u06C8';\n  t['\\uFBF6'] = '\\u0626\\u06D0';\n  t['\\uFBF7'] = '\\u0626\\u06D0';\n  t['\\uFBF8'] = '\\u0626\\u06D0';\n  t['\\uFBF9'] = '\\u0626\\u0649';\n  t['\\uFBFA'] = '\\u0626\\u0649';\n  t['\\uFBFB'] = '\\u0626\\u0649';\n  t['\\uFBFC'] = '\\u06CC';\n  t['\\uFBFD'] = '\\u06CC';\n  t['\\uFBFE'] = '\\u06CC';\n  t['\\uFBFF'] = '\\u06CC';\n  t['\\uFC00'] = '\\u0626\\u062C';\n  t['\\uFC01'] = '\\u0626\\u062D';\n  t['\\uFC02'] = '\\u0626\\u0645';\n  t['\\uFC03'] = '\\u0626\\u0649';\n  t['\\uFC04'] = '\\u0626\\u064A';\n  t['\\uFC05'] = '\\u0628\\u062C';\n  t['\\uFC06'] = '\\u0628\\u062D';\n  t['\\uFC07'] = '\\u0628\\u062E';\n  t['\\uFC08'] = '\\u0628\\u0645';\n  t['\\uFC09'] = '\\u0628\\u0649';\n  t['\\uFC0A'] = '\\u0628\\u064A';\n  t['\\uFC0B'] = '\\u062A\\u062C';\n  t['\\uFC0C'] = '\\u062A\\u062D';\n  t['\\uFC0D'] = '\\u062A\\u062E';\n  t['\\uFC0E'] = '\\u062A\\u0645';\n  t['\\uFC0F'] = '\\u062A\\u0649';\n  t['\\uFC10'] = '\\u062A\\u064A';\n  t['\\uFC11'] = '\\u062B\\u062C';\n  t['\\uFC12'] = '\\u062B\\u0645';\n  t['\\uFC13'] = '\\u062B\\u0649';\n  t['\\uFC14'] = '\\u062B\\u064A';\n  t['\\uFC15'] = '\\u062C\\u062D';\n  t['\\uFC16'] = '\\u062C\\u0645';\n  t['\\uFC17'] = '\\u062D\\u062C';\n  t['\\uFC18'] = '\\u062D\\u0645';\n  t['\\uFC19'] = '\\u062E\\u062C';\n  t['\\uFC1A'] = '\\u062E\\u062D';\n  t['\\uFC1B'] = '\\u062E\\u0645';\n  t['\\uFC1C'] = '\\u0633\\u062C';\n  t['\\uFC1D'] = '\\u0633\\u062D';\n  t['\\uFC1E'] = '\\u0633\\u062E';\n  t['\\uFC1F'] = '\\u0633\\u0645';\n  t['\\uFC20'] = '\\u0635\\u062D';\n  t['\\uFC21'] = '\\u0635\\u0645';\n  t['\\uFC22'] = '\\u0636\\u062C';\n  t['\\uFC23'] = '\\u0636\\u062D';\n  t['\\uFC24'] = '\\u0636\\u062E';\n  t['\\uFC25'] = '\\u0636\\u0645';\n  t['\\uFC26'] = '\\u0637\\u062D';\n  t['\\uFC27'] = '\\u0637\\u0645';\n  t['\\uFC28'] = '\\u0638\\u0645';\n  t['\\uFC29'] = '\\u0639\\u062C';\n  t['\\uFC2A'] = '\\u0639\\u0645';\n  t['\\uFC2B'] = '\\u063A\\u062C';\n  t['\\uFC2C'] = '\\u063A\\u0645';\n  t['\\uFC2D'] = '\\u0641\\u062C';\n  t['\\uFC2E'] = '\\u0641\\u062D';\n  t['\\uFC2F'] = '\\u0641\\u062E';\n  t['\\uFC30'] = '\\u0641\\u0645';\n  t['\\uFC31'] = '\\u0641\\u0649';\n  t['\\uFC32'] = '\\u0641\\u064A';\n  t['\\uFC33'] = '\\u0642\\u062D';\n  t['\\uFC34'] = '\\u0642\\u0645';\n  t['\\uFC35'] = '\\u0642\\u0649';\n  t['\\uFC36'] = '\\u0642\\u064A';\n  t['\\uFC37'] = '\\u0643\\u0627';\n  t['\\uFC38'] = '\\u0643\\u062C';\n  t['\\uFC39'] = '\\u0643\\u062D';\n  t['\\uFC3A'] = '\\u0643\\u062E';\n  t['\\uFC3B'] = '\\u0643\\u0644';\n  t['\\uFC3C'] = '\\u0643\\u0645';\n  t['\\uFC3D'] = '\\u0643\\u0649';\n  t['\\uFC3E'] = '\\u0643\\u064A';\n  t['\\uFC3F'] = '\\u0644\\u062C';\n  t['\\uFC40'] = '\\u0644\\u062D';\n  t['\\uFC41'] = '\\u0644\\u062E';\n  t['\\uFC42'] = '\\u0644\\u0645';\n  t['\\uFC43'] = '\\u0644\\u0649';\n  t['\\uFC44'] = '\\u0644\\u064A';\n  t['\\uFC45'] = '\\u0645\\u062C';\n  t['\\uFC46'] = '\\u0645\\u062D';\n  t['\\uFC47'] = '\\u0645\\u062E';\n  t['\\uFC48'] = '\\u0645\\u0645';\n  t['\\uFC49'] = '\\u0645\\u0649';\n  t['\\uFC4A'] = '\\u0645\\u064A';\n  t['\\uFC4B'] = '\\u0646\\u062C';\n  t['\\uFC4C'] = '\\u0646\\u062D';\n  t['\\uFC4D'] = '\\u0646\\u062E';\n  t['\\uFC4E'] = '\\u0646\\u0645';\n  t['\\uFC4F'] = '\\u0646\\u0649';\n  t['\\uFC50'] = '\\u0646\\u064A';\n  t['\\uFC51'] = '\\u0647\\u062C';\n  t['\\uFC52'] = '\\u0647\\u0645';\n  t['\\uFC53'] = '\\u0647\\u0649';\n  t['\\uFC54'] = '\\u0647\\u064A';\n  t['\\uFC55'] = '\\u064A\\u062C';\n  t['\\uFC56'] = '\\u064A\\u062D';\n  t['\\uFC57'] = '\\u064A\\u062E';\n  t['\\uFC58'] = '\\u064A\\u0645';\n  t['\\uFC59'] = '\\u064A\\u0649';\n  t['\\uFC5A'] = '\\u064A\\u064A';\n  t['\\uFC5B'] = '\\u0630\\u0670';\n  t['\\uFC5C'] = '\\u0631\\u0670';\n  t['\\uFC5D'] = '\\u0649\\u0670';\n  t['\\uFC5E'] = ' \\u064C\\u0651';\n  t['\\uFC5F'] = ' \\u064D\\u0651';\n  t['\\uFC60'] = ' \\u064E\\u0651';\n  t['\\uFC61'] = ' \\u064F\\u0651';\n  t['\\uFC62'] = ' \\u0650\\u0651';\n  t['\\uFC63'] = ' \\u0651\\u0670';\n  t['\\uFC64'] = '\\u0626\\u0631';\n  t['\\uFC65'] = '\\u0626\\u0632';\n  t['\\uFC66'] = '\\u0626\\u0645';\n  t['\\uFC67'] = '\\u0626\\u0646';\n  t['\\uFC68'] = '\\u0626\\u0649';\n  t['\\uFC69'] = '\\u0626\\u064A';\n  t['\\uFC6A'] = '\\u0628\\u0631';\n  t['\\uFC6B'] = '\\u0628\\u0632';\n  t['\\uFC6C'] = '\\u0628\\u0645';\n  t['\\uFC6D'] = '\\u0628\\u0646';\n  t['\\uFC6E'] = '\\u0628\\u0649';\n  t['\\uFC6F'] = '\\u0628\\u064A';\n  t['\\uFC70'] = '\\u062A\\u0631';\n  t['\\uFC71'] = '\\u062A\\u0632';\n  t['\\uFC72'] = '\\u062A\\u0645';\n  t['\\uFC73'] = '\\u062A\\u0646';\n  t['\\uFC74'] = '\\u062A\\u0649';\n  t['\\uFC75'] = '\\u062A\\u064A';\n  t['\\uFC76'] = '\\u062B\\u0631';\n  t['\\uFC77'] = '\\u062B\\u0632';\n  t['\\uFC78'] = '\\u062B\\u0645';\n  t['\\uFC79'] = '\\u062B\\u0646';\n  t['\\uFC7A'] = '\\u062B\\u0649';\n  t['\\uFC7B'] = '\\u062B\\u064A';\n  t['\\uFC7C'] = '\\u0641\\u0649';\n  t['\\uFC7D'] = '\\u0641\\u064A';\n  t['\\uFC7E'] = '\\u0642\\u0649';\n  t['\\uFC7F'] = '\\u0642\\u064A';\n  t['\\uFC80'] = '\\u0643\\u0627';\n  t['\\uFC81'] = '\\u0643\\u0644';\n  t['\\uFC82'] = '\\u0643\\u0645';\n  t['\\uFC83'] = '\\u0643\\u0649';\n  t['\\uFC84'] = '\\u0643\\u064A';\n  t['\\uFC85'] = '\\u0644\\u0645';\n  t['\\uFC86'] = '\\u0644\\u0649';\n  t['\\uFC87'] = '\\u0644\\u064A';\n  t['\\uFC88'] = '\\u0645\\u0627';\n  t['\\uFC89'] = '\\u0645\\u0645';\n  t['\\uFC8A'] = '\\u0646\\u0631';\n  t['\\uFC8B'] = '\\u0646\\u0632';\n  t['\\uFC8C'] = '\\u0646\\u0645';\n  t['\\uFC8D'] = '\\u0646\\u0646';\n  t['\\uFC8E'] = '\\u0646\\u0649';\n  t['\\uFC8F'] = '\\u0646\\u064A';\n  t['\\uFC90'] = '\\u0649\\u0670';\n  t['\\uFC91'] = '\\u064A\\u0631';\n  t['\\uFC92'] = '\\u064A\\u0632';\n  t['\\uFC93'] = '\\u064A\\u0645';\n  t['\\uFC94'] = '\\u064A\\u0646';\n  t['\\uFC95'] = '\\u064A\\u0649';\n  t['\\uFC96'] = '\\u064A\\u064A';\n  t['\\uFC97'] = '\\u0626\\u062C';\n  t['\\uFC98'] = '\\u0626\\u062D';\n  t['\\uFC99'] = '\\u0626\\u062E';\n  t['\\uFC9A'] = '\\u0626\\u0645';\n  t['\\uFC9B'] = '\\u0626\\u0647';\n  t['\\uFC9C'] = '\\u0628\\u062C';\n  t['\\uFC9D'] = '\\u0628\\u062D';\n  t['\\uFC9E'] = '\\u0628\\u062E';\n  t['\\uFC9F'] = '\\u0628\\u0645';\n  t['\\uFCA0'] = '\\u0628\\u0647';\n  t['\\uFCA1'] = '\\u062A\\u062C';\n  t['\\uFCA2'] = '\\u062A\\u062D';\n  t['\\uFCA3'] = '\\u062A\\u062E';\n  t['\\uFCA4'] = '\\u062A\\u0645';\n  t['\\uFCA5'] = '\\u062A\\u0647';\n  t['\\uFCA6'] = '\\u062B\\u0645';\n  t['\\uFCA7'] = '\\u062C\\u062D';\n  t['\\uFCA8'] = '\\u062C\\u0645';\n  t['\\uFCA9'] = '\\u062D\\u062C';\n  t['\\uFCAA'] = '\\u062D\\u0645';\n  t['\\uFCAB'] = '\\u062E\\u062C';\n  t['\\uFCAC'] = '\\u062E\\u0645';\n  t['\\uFCAD'] = '\\u0633\\u062C';\n  t['\\uFCAE'] = '\\u0633\\u062D';\n  t['\\uFCAF'] = '\\u0633\\u062E';\n  t['\\uFCB0'] = '\\u0633\\u0645';\n  t['\\uFCB1'] = '\\u0635\\u062D';\n  t['\\uFCB2'] = '\\u0635\\u062E';\n  t['\\uFCB3'] = '\\u0635\\u0645';\n  t['\\uFCB4'] = '\\u0636\\u062C';\n  t['\\uFCB5'] = '\\u0636\\u062D';\n  t['\\uFCB6'] = '\\u0636\\u062E';\n  t['\\uFCB7'] = '\\u0636\\u0645';\n  t['\\uFCB8'] = '\\u0637\\u062D';\n  t['\\uFCB9'] = '\\u0638\\u0645';\n  t['\\uFCBA'] = '\\u0639\\u062C';\n  t['\\uFCBB'] = '\\u0639\\u0645';\n  t['\\uFCBC'] = '\\u063A\\u062C';\n  t['\\uFCBD'] = '\\u063A\\u0645';\n  t['\\uFCBE'] = '\\u0641\\u062C';\n  t['\\uFCBF'] = '\\u0641\\u062D';\n  t['\\uFCC0'] = '\\u0641\\u062E';\n  t['\\uFCC1'] = '\\u0641\\u0645';\n  t['\\uFCC2'] = '\\u0642\\u062D';\n  t['\\uFCC3'] = '\\u0642\\u0645';\n  t['\\uFCC4'] = '\\u0643\\u062C';\n  t['\\uFCC5'] = '\\u0643\\u062D';\n  t['\\uFCC6'] = '\\u0643\\u062E';\n  t['\\uFCC7'] = '\\u0643\\u0644';\n  t['\\uFCC8'] = '\\u0643\\u0645';\n  t['\\uFCC9'] = '\\u0644\\u062C';\n  t['\\uFCCA'] = '\\u0644\\u062D';\n  t['\\uFCCB'] = '\\u0644\\u062E';\n  t['\\uFCCC'] = '\\u0644\\u0645';\n  t['\\uFCCD'] = '\\u0644\\u0647';\n  t['\\uFCCE'] = '\\u0645\\u062C';\n  t['\\uFCCF'] = '\\u0645\\u062D';\n  t['\\uFCD0'] = '\\u0645\\u062E';\n  t['\\uFCD1'] = '\\u0645\\u0645';\n  t['\\uFCD2'] = '\\u0646\\u062C';\n  t['\\uFCD3'] = '\\u0646\\u062D';\n  t['\\uFCD4'] = '\\u0646\\u062E';\n  t['\\uFCD5'] = '\\u0646\\u0645';\n  t['\\uFCD6'] = '\\u0646\\u0647';\n  t['\\uFCD7'] = '\\u0647\\u062C';\n  t['\\uFCD8'] = '\\u0647\\u0645';\n  t['\\uFCD9'] = '\\u0647\\u0670';\n  t['\\uFCDA'] = '\\u064A\\u062C';\n  t['\\uFCDB'] = '\\u064A\\u062D';\n  t['\\uFCDC'] = '\\u064A\\u062E';\n  t['\\uFCDD'] = '\\u064A\\u0645';\n  t['\\uFCDE'] = '\\u064A\\u0647';\n  t['\\uFCDF'] = '\\u0626\\u0645';\n  t['\\uFCE0'] = '\\u0626\\u0647';\n  t['\\uFCE1'] = '\\u0628\\u0645';\n  t['\\uFCE2'] = '\\u0628\\u0647';\n  t['\\uFCE3'] = '\\u062A\\u0645';\n  t['\\uFCE4'] = '\\u062A\\u0647';\n  t['\\uFCE5'] = '\\u062B\\u0645';\n  t['\\uFCE6'] = '\\u062B\\u0647';\n  t['\\uFCE7'] = '\\u0633\\u0645';\n  t['\\uFCE8'] = '\\u0633\\u0647';\n  t['\\uFCE9'] = '\\u0634\\u0645';\n  t['\\uFCEA'] = '\\u0634\\u0647';\n  t['\\uFCEB'] = '\\u0643\\u0644';\n  t['\\uFCEC'] = '\\u0643\\u0645';\n  t['\\uFCED'] = '\\u0644\\u0645';\n  t['\\uFCEE'] = '\\u0646\\u0645';\n  t['\\uFCEF'] = '\\u0646\\u0647';\n  t['\\uFCF0'] = '\\u064A\\u0645';\n  t['\\uFCF1'] = '\\u064A\\u0647';\n  t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n  t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n  t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n  t['\\uFCF5'] = '\\u0637\\u0649';\n  t['\\uFCF6'] = '\\u0637\\u064A';\n  t['\\uFCF7'] = '\\u0639\\u0649';\n  t['\\uFCF8'] = '\\u0639\\u064A';\n  t['\\uFCF9'] = '\\u063A\\u0649';\n  t['\\uFCFA'] = '\\u063A\\u064A';\n  t['\\uFCFB'] = '\\u0633\\u0649';\n  t['\\uFCFC'] = '\\u0633\\u064A';\n  t['\\uFCFD'] = '\\u0634\\u0649';\n  t['\\uFCFE'] = '\\u0634\\u064A';\n  t['\\uFCFF'] = '\\u062D\\u0649';\n  t['\\uFD00'] = '\\u062D\\u064A';\n  t['\\uFD01'] = '\\u062C\\u0649';\n  t['\\uFD02'] = '\\u062C\\u064A';\n  t['\\uFD03'] = '\\u062E\\u0649';\n  t['\\uFD04'] = '\\u062E\\u064A';\n  t['\\uFD05'] = '\\u0635\\u0649';\n  t['\\uFD06'] = '\\u0635\\u064A';\n  t['\\uFD07'] = '\\u0636\\u0649';\n  t['\\uFD08'] = '\\u0636\\u064A';\n  t['\\uFD09'] = '\\u0634\\u062C';\n  t['\\uFD0A'] = '\\u0634\\u062D';\n  t['\\uFD0B'] = '\\u0634\\u062E';\n  t['\\uFD0C'] = '\\u0634\\u0645';\n  t['\\uFD0D'] = '\\u0634\\u0631';\n  t['\\uFD0E'] = '\\u0633\\u0631';\n  t['\\uFD0F'] = '\\u0635\\u0631';\n  t['\\uFD10'] = '\\u0636\\u0631';\n  t['\\uFD11'] = '\\u0637\\u0649';\n  t['\\uFD12'] = '\\u0637\\u064A';\n  t['\\uFD13'] = '\\u0639\\u0649';\n  t['\\uFD14'] = '\\u0639\\u064A';\n  t['\\uFD15'] = '\\u063A\\u0649';\n  t['\\uFD16'] = '\\u063A\\u064A';\n  t['\\uFD17'] = '\\u0633\\u0649';\n  t['\\uFD18'] = '\\u0633\\u064A';\n  t['\\uFD19'] = '\\u0634\\u0649';\n  t['\\uFD1A'] = '\\u0634\\u064A';\n  t['\\uFD1B'] = '\\u062D\\u0649';\n  t['\\uFD1C'] = '\\u062D\\u064A';\n  t['\\uFD1D'] = '\\u062C\\u0649';\n  t['\\uFD1E'] = '\\u062C\\u064A';\n  t['\\uFD1F'] = '\\u062E\\u0649';\n  t['\\uFD20'] = '\\u062E\\u064A';\n  t['\\uFD21'] = '\\u0635\\u0649';\n  t['\\uFD22'] = '\\u0635\\u064A';\n  t['\\uFD23'] = '\\u0636\\u0649';\n  t['\\uFD24'] = '\\u0636\\u064A';\n  t['\\uFD25'] = '\\u0634\\u062C';\n  t['\\uFD26'] = '\\u0634\\u062D';\n  t['\\uFD27'] = '\\u0634\\u062E';\n  t['\\uFD28'] = '\\u0634\\u0645';\n  t['\\uFD29'] = '\\u0634\\u0631';\n  t['\\uFD2A'] = '\\u0633\\u0631';\n  t['\\uFD2B'] = '\\u0635\\u0631';\n  t['\\uFD2C'] = '\\u0636\\u0631';\n  t['\\uFD2D'] = '\\u0634\\u062C';\n  t['\\uFD2E'] = '\\u0634\\u062D';\n  t['\\uFD2F'] = '\\u0634\\u062E';\n  t['\\uFD30'] = '\\u0634\\u0645';\n  t['\\uFD31'] = '\\u0633\\u0647';\n  t['\\uFD32'] = '\\u0634\\u0647';\n  t['\\uFD33'] = '\\u0637\\u0645';\n  t['\\uFD34'] = '\\u0633\\u062C';\n  t['\\uFD35'] = '\\u0633\\u062D';\n  t['\\uFD36'] = '\\u0633\\u062E';\n  t['\\uFD37'] = '\\u0634\\u062C';\n  t['\\uFD38'] = '\\u0634\\u062D';\n  t['\\uFD39'] = '\\u0634\\u062E';\n  t['\\uFD3A'] = '\\u0637\\u0645';\n  t['\\uFD3B'] = '\\u0638\\u0645';\n  t['\\uFD3C'] = '\\u0627\\u064B';\n  t['\\uFD3D'] = '\\u0627\\u064B';\n  t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n  t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n  t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n  t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n  t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n  t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n  t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n  t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n  t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n  t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n  t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n  t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n  t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n  t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n  t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n  t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n  t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n  t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n  t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n  t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n  t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n  t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n  t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n  t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n  t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n  t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n  t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n  t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n  t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n  t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n  t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n  t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n  t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n  t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n  t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n  t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n  t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n  t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n  t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n  t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n  t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n  t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n  t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n  t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n  t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n  t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n  t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n  t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n  t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n  t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n  t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n  t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n  t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n  t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n  t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n  t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n  t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n  t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n  t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n  t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n  t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n  t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n  t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n  t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n  t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n  t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n  t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n  t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n  t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n  t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n  t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n  t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n  t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n  t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n  t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n  t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n  t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n  t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n  t['\\uFE49'] = '\\u203E';\n  t['\\uFE4A'] = '\\u203E';\n  t['\\uFE4B'] = '\\u203E';\n  t['\\uFE4C'] = '\\u203E';\n  t['\\uFE4D'] = '_';\n  t['\\uFE4E'] = '_';\n  t['\\uFE4F'] = '_';\n  t['\\uFE80'] = '\\u0621';\n  t['\\uFE81'] = '\\u0622';\n  t['\\uFE82'] = '\\u0622';\n  t['\\uFE83'] = '\\u0623';\n  t['\\uFE84'] = '\\u0623';\n  t['\\uFE85'] = '\\u0624';\n  t['\\uFE86'] = '\\u0624';\n  t['\\uFE87'] = '\\u0625';\n  t['\\uFE88'] = '\\u0625';\n  t['\\uFE89'] = '\\u0626';\n  t['\\uFE8A'] = '\\u0626';\n  t['\\uFE8B'] = '\\u0626';\n  t['\\uFE8C'] = '\\u0626';\n  t['\\uFE8D'] = '\\u0627';\n  t['\\uFE8E'] = '\\u0627';\n  t['\\uFE8F'] = '\\u0628';\n  t['\\uFE90'] = '\\u0628';\n  t['\\uFE91'] = '\\u0628';\n  t['\\uFE92'] = '\\u0628';\n  t['\\uFE93'] = '\\u0629';\n  t['\\uFE94'] = '\\u0629';\n  t['\\uFE95'] = '\\u062A';\n  t['\\uFE96'] = '\\u062A';\n  t['\\uFE97'] = '\\u062A';\n  t['\\uFE98'] = '\\u062A';\n  t['\\uFE99'] = '\\u062B';\n  t['\\uFE9A'] = '\\u062B';\n  t['\\uFE9B'] = '\\u062B';\n  t['\\uFE9C'] = '\\u062B';\n  t['\\uFE9D'] = '\\u062C';\n  t['\\uFE9E'] = '\\u062C';\n  t['\\uFE9F'] = '\\u062C';\n  t['\\uFEA0'] = '\\u062C';\n  t['\\uFEA1'] = '\\u062D';\n  t['\\uFEA2'] = '\\u062D';\n  t['\\uFEA3'] = '\\u062D';\n  t['\\uFEA4'] = '\\u062D';\n  t['\\uFEA5'] = '\\u062E';\n  t['\\uFEA6'] = '\\u062E';\n  t['\\uFEA7'] = '\\u062E';\n  t['\\uFEA8'] = '\\u062E';\n  t['\\uFEA9'] = '\\u062F';\n  t['\\uFEAA'] = '\\u062F';\n  t['\\uFEAB'] = '\\u0630';\n  t['\\uFEAC'] = '\\u0630';\n  t['\\uFEAD'] = '\\u0631';\n  t['\\uFEAE'] = '\\u0631';\n  t['\\uFEAF'] = '\\u0632';\n  t['\\uFEB0'] = '\\u0632';\n  t['\\uFEB1'] = '\\u0633';\n  t['\\uFEB2'] = '\\u0633';\n  t['\\uFEB3'] = '\\u0633';\n  t['\\uFEB4'] = '\\u0633';\n  t['\\uFEB5'] = '\\u0634';\n  t['\\uFEB6'] = '\\u0634';\n  t['\\uFEB7'] = '\\u0634';\n  t['\\uFEB8'] = '\\u0634';\n  t['\\uFEB9'] = '\\u0635';\n  t['\\uFEBA'] = '\\u0635';\n  t['\\uFEBB'] = '\\u0635';\n  t['\\uFEBC'] = '\\u0635';\n  t['\\uFEBD'] = '\\u0636';\n  t['\\uFEBE'] = '\\u0636';\n  t['\\uFEBF'] = '\\u0636';\n  t['\\uFEC0'] = '\\u0636';\n  t['\\uFEC1'] = '\\u0637';\n  t['\\uFEC2'] = '\\u0637';\n  t['\\uFEC3'] = '\\u0637';\n  t['\\uFEC4'] = '\\u0637';\n  t['\\uFEC5'] = '\\u0638';\n  t['\\uFEC6'] = '\\u0638';\n  t['\\uFEC7'] = '\\u0638';\n  t['\\uFEC8'] = '\\u0638';\n  t['\\uFEC9'] = '\\u0639';\n  t['\\uFECA'] = '\\u0639';\n  t['\\uFECB'] = '\\u0639';\n  t['\\uFECC'] = '\\u0639';\n  t['\\uFECD'] = '\\u063A';\n  t['\\uFECE'] = '\\u063A';\n  t['\\uFECF'] = '\\u063A';\n  t['\\uFED0'] = '\\u063A';\n  t['\\uFED1'] = '\\u0641';\n  t['\\uFED2'] = '\\u0641';\n  t['\\uFED3'] = '\\u0641';\n  t['\\uFED4'] = '\\u0641';\n  t['\\uFED5'] = '\\u0642';\n  t['\\uFED6'] = '\\u0642';\n  t['\\uFED7'] = '\\u0642';\n  t['\\uFED8'] = '\\u0642';\n  t['\\uFED9'] = '\\u0643';\n  t['\\uFEDA'] = '\\u0643';\n  t['\\uFEDB'] = '\\u0643';\n  t['\\uFEDC'] = '\\u0643';\n  t['\\uFEDD'] = '\\u0644';\n  t['\\uFEDE'] = '\\u0644';\n  t['\\uFEDF'] = '\\u0644';\n  t['\\uFEE0'] = '\\u0644';\n  t['\\uFEE1'] = '\\u0645';\n  t['\\uFEE2'] = '\\u0645';\n  t['\\uFEE3'] = '\\u0645';\n  t['\\uFEE4'] = '\\u0645';\n  t['\\uFEE5'] = '\\u0646';\n  t['\\uFEE6'] = '\\u0646';\n  t['\\uFEE7'] = '\\u0646';\n  t['\\uFEE8'] = '\\u0646';\n  t['\\uFEE9'] = '\\u0647';\n  t['\\uFEEA'] = '\\u0647';\n  t['\\uFEEB'] = '\\u0647';\n  t['\\uFEEC'] = '\\u0647';\n  t['\\uFEED'] = '\\u0648';\n  t['\\uFEEE'] = '\\u0648';\n  t['\\uFEEF'] = '\\u0649';\n  t['\\uFEF0'] = '\\u0649';\n  t['\\uFEF1'] = '\\u064A';\n  t['\\uFEF2'] = '\\u064A';\n  t['\\uFEF3'] = '\\u064A';\n  t['\\uFEF4'] = '\\u064A';\n  t['\\uFEF5'] = '\\u0644\\u0622';\n  t['\\uFEF6'] = '\\u0644\\u0622';\n  t['\\uFEF7'] = '\\u0644\\u0623';\n  t['\\uFEF8'] = '\\u0644\\u0623';\n  t['\\uFEF9'] = '\\u0644\\u0625';\n  t['\\uFEFA'] = '\\u0644\\u0625';\n  t['\\uFEFB'] = '\\u0644\\u0627';\n  t['\\uFEFC'] = '\\u0644\\u0627';\n});\nfunction reverseIfRtl(chars) {\n  var charsLength = chars.length;\n  if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n    return chars;\n  }\n  var s = '';\n  for (var ii = charsLength - 1; ii >= 0; ii--) {\n    s += chars[ii];\n  }\n  return s;\n}\nexports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\nexports.reverseIfRtl = reverseIfRtl;\nexports.getUnicodeRangeFor = getUnicodeRangeFor;\nexports.getNormalizedUnicodes = getNormalizedUnicodes;\nexports.getUnicodeForGlyph = getUnicodeForGlyph;\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptCompiler = exports.PostScriptEvaluator = exports.PDFFunctionFactory = exports.isPDFFunction = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _ps_parser = __w_pdfjs_require__(149);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar IsEvalSupportedCached = {\n  get value() {\n    return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());\n  }\n};\n\nvar PDFFunctionFactory = function () {\n  function PDFFunctionFactory(_ref) {\n    var xref = _ref.xref,\n        _ref$isEvalSupported = _ref.isEvalSupported,\n        isEvalSupported = _ref$isEvalSupported === undefined ? true : _ref$isEvalSupported;\n\n    _classCallCheck(this, PDFFunctionFactory);\n\n    this.xref = xref;\n    this.isEvalSupported = isEvalSupported !== false;\n  }\n\n  _createClass(PDFFunctionFactory, [{\n    key: 'create',\n    value: function create(fn) {\n      return PDFFunction.parse({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }, {\n    key: 'createFromArray',\n    value: function createFromArray(fnObj) {\n      return PDFFunction.parseArray({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fnObj: fnObj\n      });\n    }\n  }, {\n    key: 'createFromIR',\n    value: function createFromIR(IR) {\n      return PDFFunction.fromIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        IR: IR\n      });\n    }\n  }, {\n    key: 'createIR',\n    value: function createIR(fn) {\n      return PDFFunction.getIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }]);\n\n  return PDFFunctionFactory;\n}();\n\nvar PDFFunction = function PDFFunctionClosure() {\n  var CONSTRUCT_SAMPLED = 0;\n  var CONSTRUCT_INTERPOLATED = 2;\n  var CONSTRUCT_STICHED = 3;\n  var CONSTRUCT_POSTSCRIPT = 4;\n  return {\n    getSampleArray: function getSampleArray(size, outputSize, bps, stream) {\n      var i, ii;\n      var length = 1;\n      for (i = 0, ii = size.length; i < ii; i++) {\n        length *= size[i];\n      }\n      length *= outputSize;\n      var array = new Array(length);\n      var codeSize = 0;\n      var codeBuf = 0;\n      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n      var strBytes = stream.getBytes((length * bps + 7) / 8);\n      var strIdx = 0;\n      for (i = 0; i < length; i++) {\n        while (codeSize < bps) {\n          codeBuf <<= 8;\n          codeBuf |= strBytes[strIdx++];\n          codeSize += 8;\n        }\n        codeSize -= bps;\n        array[i] = (codeBuf >> codeSize) * sampleMul;\n        codeBuf &= (1 << codeSize) - 1;\n      }\n      return array;\n    },\n    getIR: function getIR(_ref2) {\n      var xref = _ref2.xref,\n          isEvalSupported = _ref2.isEvalSupported,\n          fn = _ref2.fn;\n\n      var dict = fn.dict;\n      if (!dict) {\n        dict = fn;\n      }\n      var types = [this.constructSampled, null, this.constructInterpolated, this.constructStiched, this.constructPostScript];\n      var typeNum = dict.get('FunctionType');\n      var typeFn = types[typeNum];\n      if (!typeFn) {\n        throw new _util.FormatError('Unknown type of function');\n      }\n      return typeFn.call(this, {\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn,\n        dict: dict\n      });\n    },\n    fromIR: function fromIR(_ref3) {\n      var xref = _ref3.xref,\n          isEvalSupported = _ref3.isEvalSupported,\n          IR = _ref3.IR;\n\n      var type = IR[0];\n      switch (type) {\n        case CONSTRUCT_SAMPLED:\n          return this.constructSampledFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_INTERPOLATED:\n          return this.constructInterpolatedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_STICHED:\n          return this.constructStichedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        default:\n          return this.constructPostScriptFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n      }\n    },\n    parse: function parse(_ref4) {\n      var xref = _ref4.xref,\n          isEvalSupported = _ref4.isEvalSupported,\n          fn = _ref4.fn;\n\n      var IR = this.getIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn\n      });\n      return this.fromIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        IR: IR\n      });\n    },\n    parseArray: function parseArray(_ref5) {\n      var xref = _ref5.xref,\n          isEvalSupported = _ref5.isEvalSupported,\n          fnObj = _ref5.fnObj;\n\n      if (!Array.isArray(fnObj)) {\n        return this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: fnObj\n        });\n      }\n      var fnArray = [];\n      for (var j = 0, jj = fnObj.length; j < jj; j++) {\n        fnArray.push(this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnObj[j])\n        }));\n      }\n      return function (src, srcOffset, dest, destOffset) {\n        for (var i = 0, ii = fnArray.length; i < ii; i++) {\n          fnArray[i](src, srcOffset, dest, destOffset + i);\n        }\n      };\n    },\n    constructSampled: function constructSampled(_ref6) {\n      var xref = _ref6.xref,\n          isEvalSupported = _ref6.isEvalSupported,\n          fn = _ref6.fn,\n          dict = _ref6.dict;\n\n      function toMultiArray(arr) {\n        var inputLength = arr.length;\n        var out = [];\n        var index = 0;\n        for (var i = 0; i < inputLength; i += 2) {\n          out[index] = [arr[i], arr[i + 1]];\n          ++index;\n        }\n        return out;\n      }\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain || !range) {\n        throw new _util.FormatError('No domain or range');\n      }\n      var inputSize = domain.length / 2;\n      var outputSize = range.length / 2;\n      domain = toMultiArray(domain);\n      range = toMultiArray(range);\n      var size = dict.get('Size');\n      var bps = dict.get('BitsPerSample');\n      var order = dict.get('Order') || 1;\n      if (order !== 1) {\n        (0, _util.info)('No support for cubic spline interpolation: ' + order);\n      }\n      var encode = dict.getArray('Encode');\n      if (!encode) {\n        encode = [];\n        for (var i = 0; i < inputSize; ++i) {\n          encode.push(0);\n          encode.push(size[i] - 1);\n        }\n      }\n      encode = toMultiArray(encode);\n      var decode = dict.getArray('Decode');\n      if (!decode) {\n        decode = range;\n      } else {\n        decode = toMultiArray(decode);\n      }\n      var samples = this.getSampleArray(size, outputSize, bps, fn);\n      return [CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size, outputSize, Math.pow(2, bps) - 1, range];\n    },\n    constructSampledFromIR: function constructSampledFromIR(_ref7) {\n      var xref = _ref7.xref,\n          isEvalSupported = _ref7.isEvalSupported,\n          IR = _ref7.IR;\n\n      function interpolate(x, xmin, xmax, ymin, ymax) {\n        return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n      }\n      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n        var m = IR[1];\n        var domain = IR[2];\n        var encode = IR[3];\n        var decode = IR[4];\n        var samples = IR[5];\n        var size = IR[6];\n        var n = IR[7];\n        var range = IR[9];\n        var cubeVertices = 1 << m;\n        var cubeN = new Float64Array(cubeVertices);\n        var cubeVertex = new Uint32Array(cubeVertices);\n        var i, j;\n        for (j = 0; j < cubeVertices; j++) {\n          cubeN[j] = 1;\n        }\n        var k = n,\n            pos = 1;\n        for (i = 0; i < m; ++i) {\n          var domain_2i = domain[i][0];\n          var domain_2i_1 = domain[i][1];\n          var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n          var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n          var size_i = size[i];\n          e = Math.min(Math.max(e, 0), size_i - 1);\n          var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n          var n0 = e0 + 1 - e;\n          var n1 = e - e0;\n          var offset0 = e0 * k;\n          var offset1 = offset0 + k;\n          for (j = 0; j < cubeVertices; j++) {\n            if (j & pos) {\n              cubeN[j] *= n1;\n              cubeVertex[j] += offset1;\n            } else {\n              cubeN[j] *= n0;\n              cubeVertex[j] += offset0;\n            }\n          }\n          k *= size_i;\n          pos <<= 1;\n        }\n        for (j = 0; j < n; ++j) {\n          var rj = 0;\n          for (i = 0; i < cubeVertices; i++) {\n            rj += samples[cubeVertex[i] + j] * cubeN[i];\n          }\n          rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n          dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n        }\n      };\n    },\n    constructInterpolated: function constructInterpolated(_ref8) {\n      var xref = _ref8.xref,\n          isEvalSupported = _ref8.isEvalSupported,\n          fn = _ref8.fn,\n          dict = _ref8.dict;\n\n      var c0 = dict.getArray('C0') || [0];\n      var c1 = dict.getArray('C1') || [1];\n      var n = dict.get('N');\n      if (!Array.isArray(c0) || !Array.isArray(c1)) {\n        throw new _util.FormatError('Illegal dictionary for interpolated function');\n      }\n      var length = c0.length;\n      var diff = [];\n      for (var i = 0; i < length; ++i) {\n        diff.push(c1[i] - c0[i]);\n      }\n      return [CONSTRUCT_INTERPOLATED, c0, diff, n];\n    },\n    constructInterpolatedFromIR: function constructInterpolatedFromIR(_ref9) {\n      var xref = _ref9.xref,\n          isEvalSupported = _ref9.isEvalSupported,\n          IR = _ref9.IR;\n\n      var c0 = IR[1];\n      var diff = IR[2];\n      var n = IR[3];\n      var length = diff.length;\n      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n        var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n        for (var j = 0; j < length; ++j) {\n          dest[destOffset + j] = c0[j] + x * diff[j];\n        }\n      };\n    },\n    constructStiched: function constructStiched(_ref10) {\n      var xref = _ref10.xref,\n          isEvalSupported = _ref10.isEvalSupported,\n          fn = _ref10.fn,\n          dict = _ref10.dict;\n\n      var domain = dict.getArray('Domain');\n      if (!domain) {\n        throw new _util.FormatError('No domain');\n      }\n      var inputSize = domain.length / 2;\n      if (inputSize !== 1) {\n        throw new _util.FormatError('Bad domain for stiched function');\n      }\n      var fnRefs = dict.get('Functions');\n      var fns = [];\n      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n        fns.push(this.getIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnRefs[i])\n        }));\n      }\n      var bounds = dict.getArray('Bounds');\n      var encode = dict.getArray('Encode');\n      return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\n    },\n    constructStichedFromIR: function constructStichedFromIR(_ref11) {\n      var xref = _ref11.xref,\n          isEvalSupported = _ref11.isEvalSupported,\n          IR = _ref11.IR;\n\n      var domain = IR[1];\n      var bounds = IR[2];\n      var encode = IR[3];\n      var fnsIR = IR[4];\n      var fns = [];\n      var tmpBuf = new Float32Array(1);\n      for (var i = 0, ii = fnsIR.length; i < ii; i++) {\n        fns.push(this.fromIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          IR: fnsIR[i]\n        }));\n      }\n      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n        var clip = function constructStichedFromIRClip(v, min, max) {\n          if (v > max) {\n            v = max;\n          } else if (v < min) {\n            v = min;\n          }\n          return v;\n        };\n        var v = clip(src[srcOffset], domain[0], domain[1]);\n        for (var i = 0, ii = bounds.length; i < ii; ++i) {\n          if (v < bounds[i]) {\n            break;\n          }\n        }\n        var dmin = domain[0];\n        if (i > 0) {\n          dmin = bounds[i - 1];\n        }\n        var dmax = domain[1];\n        if (i < bounds.length) {\n          dmax = bounds[i];\n        }\n        var rmin = encode[2 * i];\n        var rmax = encode[2 * i + 1];\n        tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n        fns[i](tmpBuf, 0, dest, destOffset);\n      };\n    },\n    constructPostScript: function constructPostScript(_ref12) {\n      var xref = _ref12.xref,\n          isEvalSupported = _ref12.isEvalSupported,\n          fn = _ref12.fn,\n          dict = _ref12.dict;\n\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain) {\n        throw new _util.FormatError('No domain.');\n      }\n      if (!range) {\n        throw new _util.FormatError('No range.');\n      }\n      var lexer = new _ps_parser.PostScriptLexer(fn);\n      var parser = new _ps_parser.PostScriptParser(lexer);\n      var code = parser.parse();\n      return [CONSTRUCT_POSTSCRIPT, domain, range, code];\n    },\n    constructPostScriptFromIR: function constructPostScriptFromIR(_ref13) {\n      var xref = _ref13.xref,\n          isEvalSupported = _ref13.isEvalSupported,\n          IR = _ref13.IR;\n\n      var domain = IR[1];\n      var range = IR[2];\n      var code = IR[3];\n      if (isEvalSupported && IsEvalSupportedCached.value) {\n        var compiled = new PostScriptCompiler().compile(code, domain, range);\n        if (compiled) {\n          return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n        }\n      }\n      (0, _util.info)('Unable to compile PS function');\n      var numOutputs = range.length >> 1;\n      var numInputs = domain.length >> 1;\n      var evaluator = new PostScriptEvaluator(code);\n      var cache = Object.create(null);\n      var MAX_CACHE_SIZE = 2048 * 4;\n      var cache_available = MAX_CACHE_SIZE;\n      var tmpBuf = new Float32Array(numInputs);\n      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n        var i, value;\n        var key = '';\n        var input = tmpBuf;\n        for (i = 0; i < numInputs; i++) {\n          value = src[srcOffset + i];\n          input[i] = value;\n          key += value + '_';\n        }\n        var cachedValue = cache[key];\n        if (cachedValue !== undefined) {\n          dest.set(cachedValue, destOffset);\n          return;\n        }\n        var output = new Float32Array(numOutputs);\n        var stack = evaluator.execute(input);\n        var stackIndex = stack.length - numOutputs;\n        for (i = 0; i < numOutputs; i++) {\n          value = stack[stackIndex + i];\n          var bound = range[i * 2];\n          if (value < bound) {\n            value = bound;\n          } else {\n            bound = range[i * 2 + 1];\n            if (value > bound) {\n              value = bound;\n            }\n          }\n          output[i] = value;\n        }\n        if (cache_available > 0) {\n          cache_available--;\n          cache[key] = output;\n        }\n        dest.set(output, destOffset);\n      };\n    }\n  };\n}();\nfunction isPDFFunction(v) {\n  var fnDict;\n  if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) !== 'object') {\n    return false;\n  } else if ((0, _primitives.isDict)(v)) {\n    fnDict = v;\n  } else if ((0, _primitives.isStream)(v)) {\n    fnDict = v.dict;\n  } else {\n    return false;\n  }\n  return fnDict.has('FunctionType');\n}\nvar PostScriptStack = function PostScriptStackClosure() {\n  var MAX_STACK_SIZE = 100;\n  function PostScriptStack(initialStack) {\n    this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n  }\n  PostScriptStack.prototype = {\n    push: function PostScriptStack_push(value) {\n      if (this.stack.length >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      this.stack.push(value);\n    },\n    pop: function PostScriptStack_pop() {\n      if (this.stack.length <= 0) {\n        throw new Error('PostScript function stack underflow.');\n      }\n      return this.stack.pop();\n    },\n    copy: function PostScriptStack_copy(n) {\n      if (this.stack.length + n >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      var stack = this.stack;\n      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n        stack.push(stack[i]);\n      }\n    },\n    index: function PostScriptStack_index(n) {\n      this.push(this.stack[this.stack.length - n - 1]);\n    },\n    roll: function PostScriptStack_roll(n, p) {\n      var stack = this.stack;\n      var l = stack.length - n;\n      var r = stack.length - 1,\n          c = l + (p - Math.floor(p / n) * n),\n          i,\n          j,\n          t;\n      for (i = l, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = l, j = c - 1; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = c, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n    }\n  };\n  return PostScriptStack;\n}();\nvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n  function PostScriptEvaluator(operators) {\n    this.operators = operators;\n  }\n  PostScriptEvaluator.prototype = {\n    execute: function PostScriptEvaluator_execute(initialStack) {\n      var stack = new PostScriptStack(initialStack);\n      var counter = 0;\n      var operators = this.operators;\n      var length = operators.length;\n      var operator, a, b;\n      while (counter < length) {\n        operator = operators[counter++];\n        if (typeof operator === 'number') {\n          stack.push(operator);\n          continue;\n        }\n        switch (operator) {\n          case 'jz':\n            b = stack.pop();\n            a = stack.pop();\n            if (!a) {\n              counter = b;\n            }\n            break;\n          case 'j':\n            a = stack.pop();\n            counter = a;\n            break;\n          case 'abs':\n            a = stack.pop();\n            stack.push(Math.abs(a));\n            break;\n          case 'add':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a + b);\n            break;\n          case 'and':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a && b);\n            } else {\n              stack.push(a & b);\n            }\n            break;\n          case 'atan':\n            a = stack.pop();\n            stack.push(Math.atan(a));\n            break;\n          case 'bitshift':\n            b = stack.pop();\n            a = stack.pop();\n            if (a > 0) {\n              stack.push(a << b);\n            } else {\n              stack.push(a >> b);\n            }\n            break;\n          case 'ceiling':\n            a = stack.pop();\n            stack.push(Math.ceil(a));\n            break;\n          case 'copy':\n            a = stack.pop();\n            stack.copy(a);\n            break;\n          case 'cos':\n            a = stack.pop();\n            stack.push(Math.cos(a));\n            break;\n          case 'cvi':\n            a = stack.pop() | 0;\n            stack.push(a);\n            break;\n          case 'cvr':\n            break;\n          case 'div':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b);\n            break;\n          case 'dup':\n            stack.copy(1);\n            break;\n          case 'eq':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a === b);\n            break;\n          case 'exch':\n            stack.roll(2, 1);\n            break;\n          case 'exp':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(Math.pow(a, b));\n            break;\n          case 'false':\n            stack.push(false);\n            break;\n          case 'floor':\n            a = stack.pop();\n            stack.push(Math.floor(a));\n            break;\n          case 'ge':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a >= b);\n            break;\n          case 'gt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a > b);\n            break;\n          case 'idiv':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b | 0);\n            break;\n          case 'index':\n            a = stack.pop();\n            stack.index(a);\n            break;\n          case 'le':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a <= b);\n            break;\n          case 'ln':\n            a = stack.pop();\n            stack.push(Math.log(a));\n            break;\n          case 'log':\n            a = stack.pop();\n            stack.push(Math.log(a) / Math.LN10);\n            break;\n          case 'lt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a < b);\n            break;\n          case 'mod':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a % b);\n            break;\n          case 'mul':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a * b);\n            break;\n          case 'ne':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a !== b);\n            break;\n          case 'neg':\n            a = stack.pop();\n            stack.push(-a);\n            break;\n          case 'not':\n            a = stack.pop();\n            if ((0, _util.isBool)(a)) {\n              stack.push(!a);\n            } else {\n              stack.push(~a);\n            }\n            break;\n          case 'or':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a || b);\n            } else {\n              stack.push(a | b);\n            }\n            break;\n          case 'pop':\n            stack.pop();\n            break;\n          case 'roll':\n            b = stack.pop();\n            a = stack.pop();\n            stack.roll(a, b);\n            break;\n          case 'round':\n            a = stack.pop();\n            stack.push(Math.round(a));\n            break;\n          case 'sin':\n            a = stack.pop();\n            stack.push(Math.sin(a));\n            break;\n          case 'sqrt':\n            a = stack.pop();\n            stack.push(Math.sqrt(a));\n            break;\n          case 'sub':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a - b);\n            break;\n          case 'true':\n            stack.push(true);\n            break;\n          case 'truncate':\n            a = stack.pop();\n            a = a < 0 ? Math.ceil(a) : Math.floor(a);\n            stack.push(a);\n            break;\n          case 'xor':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a !== b);\n            } else {\n              stack.push(a ^ b);\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown operator ' + operator);\n        }\n      }\n      return stack.stack;\n    }\n  };\n  return PostScriptEvaluator;\n}();\nvar PostScriptCompiler = function PostScriptCompilerClosure() {\n  function AstNode(type) {\n    this.type = type;\n  }\n  AstNode.prototype.visit = function (visitor) {\n    (0, _util.unreachable)('abstract method');\n  };\n  function AstArgument(index, min, max) {\n    AstNode.call(this, 'args');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstArgument.prototype = Object.create(AstNode.prototype);\n  AstArgument.prototype.visit = function (visitor) {\n    visitor.visitArgument(this);\n  };\n  function AstLiteral(number) {\n    AstNode.call(this, 'literal');\n    this.number = number;\n    this.min = number;\n    this.max = number;\n  }\n  AstLiteral.prototype = Object.create(AstNode.prototype);\n  AstLiteral.prototype.visit = function (visitor) {\n    visitor.visitLiteral(this);\n  };\n  function AstBinaryOperation(op, arg1, arg2, min, max) {\n    AstNode.call(this, 'binary');\n    this.op = op;\n    this.arg1 = arg1;\n    this.arg2 = arg2;\n    this.min = min;\n    this.max = max;\n  }\n  AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n  AstBinaryOperation.prototype.visit = function (visitor) {\n    visitor.visitBinaryOperation(this);\n  };\n  function AstMin(arg, max) {\n    AstNode.call(this, 'max');\n    this.arg = arg;\n    this.min = arg.min;\n    this.max = max;\n  }\n  AstMin.prototype = Object.create(AstNode.prototype);\n  AstMin.prototype.visit = function (visitor) {\n    visitor.visitMin(this);\n  };\n  function AstVariable(index, min, max) {\n    AstNode.call(this, 'var');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstVariable.prototype = Object.create(AstNode.prototype);\n  AstVariable.prototype.visit = function (visitor) {\n    visitor.visitVariable(this);\n  };\n  function AstVariableDefinition(variable, arg) {\n    AstNode.call(this, 'definition');\n    this.variable = variable;\n    this.arg = arg;\n  }\n  AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n  AstVariableDefinition.prototype.visit = function (visitor) {\n    visitor.visitVariableDefinition(this);\n  };\n  function ExpressionBuilderVisitor() {\n    this.parts = [];\n  }\n  ExpressionBuilderVisitor.prototype = {\n    visitArgument: function visitArgument(arg) {\n      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n    },\n    visitVariable: function visitVariable(variable) {\n      this.parts.push('v', variable.index);\n    },\n    visitLiteral: function visitLiteral(literal) {\n      this.parts.push(literal.number);\n    },\n    visitBinaryOperation: function visitBinaryOperation(operation) {\n      this.parts.push('(');\n      operation.arg1.visit(this);\n      this.parts.push(' ', operation.op, ' ');\n      operation.arg2.visit(this);\n      this.parts.push(')');\n    },\n    visitVariableDefinition: function visitVariableDefinition(definition) {\n      this.parts.push('var ');\n      definition.variable.visit(this);\n      this.parts.push(' = ');\n      definition.arg.visit(this);\n      this.parts.push(';');\n    },\n    visitMin: function visitMin(max) {\n      this.parts.push('Math.min(');\n      max.arg.visit(this);\n      this.parts.push(', ', max.max, ')');\n    },\n    toString: function toString() {\n      return this.parts.join('');\n    }\n  };\n  function buildAddOperation(num1, num2) {\n    if (num2.type === 'literal' && num2.number === 0) {\n      return num1;\n    }\n    if (num1.type === 'literal' && num1.number === 0) {\n      return num2;\n    }\n    if (num2.type === 'literal' && num1.type === 'literal') {\n      return new AstLiteral(num1.number + num2.number);\n    }\n    return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n  }\n  function buildMulOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return new AstLiteral(0);\n      } else if (num2.number === 1) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number * num2.number);\n      }\n    }\n    if (num1.type === 'literal') {\n      if (num1.number === 0) {\n        return new AstLiteral(0);\n      } else if (num1.number === 1) {\n        return num2;\n      }\n    }\n    var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    return new AstBinaryOperation('*', num1, num2, min, max);\n  }\n  function buildSubOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number - num2.number);\n      }\n    }\n    if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n      return num2.arg2;\n    }\n    return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n  }\n  function buildMinOperation(num1, max) {\n    if (num1.min >= max) {\n      return new AstLiteral(max);\n    } else if (num1.max <= max) {\n      return num1;\n    }\n    return new AstMin(num1, max);\n  }\n  function PostScriptCompiler() {}\n  PostScriptCompiler.prototype = {\n    compile: function PostScriptCompiler_compile(code, domain, range) {\n      var stack = [];\n      var i, ii;\n      var instructions = [];\n      var inputSize = domain.length >> 1,\n          outputSize = range.length >> 1;\n      var lastRegister = 0;\n      var n, j;\n      var num1, num2, ast1, ast2, tmpVar, item;\n      for (i = 0; i < inputSize; i++) {\n        stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n      }\n      for (i = 0, ii = code.length; i < ii; i++) {\n        item = code[i];\n        if (typeof item === 'number') {\n          stack.push(new AstLiteral(item));\n          continue;\n        }\n        switch (item) {\n          case 'add':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildAddOperation(num1, num2));\n            break;\n          case 'cvr':\n            if (stack.length < 1) {\n              return null;\n            }\n            break;\n          case 'mul':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildMulOperation(num1, num2));\n            break;\n          case 'sub':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildSubOperation(num1, num2));\n            break;\n          case 'exch':\n            if (stack.length < 2) {\n              return null;\n            }\n            ast1 = stack.pop();\n            ast2 = stack.pop();\n            stack.push(ast1, ast2);\n            break;\n          case 'pop':\n            if (stack.length < 1) {\n              return null;\n            }\n            stack.pop();\n            break;\n          case 'index':\n            if (stack.length < 1) {\n              return null;\n            }\n            num1 = stack.pop();\n            if (num1.type !== 'literal') {\n              return null;\n            }\n            n = num1.number;\n            if (n < 0 || !Number.isInteger(n) || stack.length < n) {\n              return null;\n            }\n            ast1 = stack[stack.length - n - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - n - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'dup':\n            if (stack.length < 1) {\n              return null;\n            }\n            if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n              num1 = stack.pop();\n              stack.push(buildMinOperation(num1, code[i + 1]));\n              i += 6;\n              break;\n            }\n            ast1 = stack[stack.length - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'roll':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            if (num2.type !== 'literal' || num1.type !== 'literal') {\n              return null;\n            }\n            j = num2.number;\n            n = num1.number;\n            if (n <= 0 || !Number.isInteger(n) || !Number.isInteger(j) || stack.length < n) {\n              return null;\n            }\n            j = (j % n + n) % n;\n            if (j === 0) {\n              break;\n            }\n            Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n            break;\n          default:\n            return null;\n        }\n      }\n      if (stack.length !== outputSize) {\n        return null;\n      }\n      var result = [];\n      instructions.forEach(function (instruction) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        instruction.visit(statementBuilder);\n        result.push(statementBuilder.toString());\n      });\n      stack.forEach(function (expr, i) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        expr.visit(statementBuilder);\n        var min = range[i * 2],\n            max = range[i * 2 + 1];\n        var out = [statementBuilder.toString()];\n        if (min > expr.min) {\n          out.unshift('Math.max(', min, ', ');\n          out.push(')');\n        }\n        if (max < expr.max) {\n          out.unshift('Math.min(', max, ', ');\n          out.push(')');\n        }\n        out.unshift('dest[destOffset + ', i, '] = ');\n        out.push(';');\n        result.push(out.join(''));\n      });\n      return result.join('\\n');\n    }\n  };\n  return PostScriptCompiler;\n}();\nexports.isPDFFunction = isPDFFunction;\nexports.PDFFunctionFactory = PDFFunctionFactory;\nexports.PostScriptEvaluator = PostScriptEvaluator;\nexports.PostScriptCompiler = PostScriptCompiler;\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar pdfjsVersion = '2.0.489';\nvar pdfjsBuild = '7d7bc80e';\nvar pdfjsCoreWorker = __w_pdfjs_require__(74);\nexports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkerMessageHandler = exports.WorkerTask = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _pdf_manager = __w_pdfjs_require__(132);\n\nvar _is_node = __w_pdfjs_require__(44);\n\nvar _is_node2 = _interopRequireDefault(_is_node);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar WorkerTask = function WorkerTaskClosure() {\n  function WorkerTask(name) {\n    this.name = name;\n    this.terminated = false;\n    this._capability = (0, _util.createPromiseCapability)();\n  }\n  WorkerTask.prototype = {\n    get finished() {\n      return this._capability.promise;\n    },\n    finish: function finish() {\n      this._capability.resolve();\n    },\n    terminate: function terminate() {\n      this.terminated = true;\n    },\n    ensureNotTerminated: function ensureNotTerminated() {\n      if (this.terminated) {\n        throw new Error('Worker task was terminated');\n      }\n    }\n  };\n  return WorkerTask;\n}();\n;\nvar PDFWorkerStream = function PDFWorkerStreamClosure() {\n  function PDFWorkerStream(msgHandler) {\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  PDFWorkerStream.prototype = {\n    getFullReader: function getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader);\n      this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);\n      return this._fullRequestReader;\n    },\n    getRangeReader: function getRangeReader(begin, end) {\n      var reader = new PDFWorkerStreamRangeReader(begin, end, this._msgHandler);\n      this._rangeRequestReaders.push(reader);\n      return reader;\n    },\n    cancelAllRequests: function cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n      var readers = this._rangeRequestReaders.slice(0);\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n  };\n  function PDFWorkerStreamReader(msgHandler) {\n    var _this = this;\n\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._isRangeSupported = false;\n    this._isStreamingSupported = false;\n    var readableStream = this._msgHandler.sendWithStream('GetReader');\n    this._reader = readableStream.getReader();\n    this._headersReady = this._msgHandler.sendWithPromise('ReaderHeadersReady').then(function (data) {\n      _this._isStreamingSupported = data.isStreamingSupported;\n      _this._isRangeSupported = data.isRangeSupported;\n      _this._contentLength = data.contentLength;\n    });\n  }\n  PDFWorkerStreamReader.prototype = {\n    get headersReady() {\n      return this._headersReady;\n    },\n    get contentLength() {\n      return this._contentLength;\n    },\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    },\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref) {\n        var value = _ref.value,\n            done = _ref.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  function PDFWorkerStreamRangeReader(begin, end, msgHandler) {\n    this._msgHandler = msgHandler;\n    this.onProgress = null;\n    var readableStream = this._msgHandler.sendWithStream('GetRangeReader', {\n      begin: begin,\n      end: end\n    });\n    this._reader = readableStream.getReader();\n  }\n  PDFWorkerStreamRangeReader.prototype = {\n    get isStreamingSupported() {\n      return false;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref2) {\n        var value = _ref2.value,\n            done = _ref2.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  return PDFWorkerStream;\n}();\nvar WorkerMessageHandler = {\n  setup: function setup(handler, port) {\n    var testMessageProcessed = false;\n    handler.on('test', function wphSetupTest(data) {\n      if (testMessageProcessed) {\n        return;\n      }\n      testMessageProcessed = true;\n      if (!(data instanceof Uint8Array)) {\n        handler.send('test', 'main', false);\n        return;\n      }\n      var supportTransfers = data[0] === 255;\n      handler.postMessageTransfers = supportTransfers;\n      var xhr = new XMLHttpRequest();\n      var responseExists = 'response' in xhr;\n      try {\n        xhr.responseType;\n      } catch (e) {\n        responseExists = false;\n      }\n      if (!responseExists) {\n        handler.send('test', false);\n        return;\n      }\n      handler.send('test', {\n        supportTypedArray: true,\n        supportTransfers: supportTransfers\n      });\n    });\n    handler.on('configure', function wphConfigure(data) {\n      (0, _util.setVerbosityLevel)(data.verbosity);\n    });\n    handler.on('GetDocRequest', function wphSetupDoc(data) {\n      return WorkerMessageHandler.createDocumentHandler(data, port);\n    });\n  },\n  createDocumentHandler: function createDocumentHandler(docParams, port) {\n    var pdfManager;\n    var terminated = false;\n    var cancelXHRs = null;\n    var WorkerTasks = [];\n    var apiVersion = docParams.apiVersion;\n    var workerVersion = '2.0.489';\n    if (apiVersion !== null && apiVersion !== workerVersion) {\n      throw new Error('The API version \"' + apiVersion + '\" does not match ' + ('the Worker version \"' + workerVersion + '\".'));\n    }\n    var docId = docParams.docId;\n    var docBaseUrl = docParams.docBaseUrl;\n    var workerHandlerName = docParams.docId + '_worker';\n    var handler = new _util.MessageHandler(workerHandlerName, docId, port);\n    handler.postMessageTransfers = docParams.postMessageTransfers;\n    function ensureNotTerminated() {\n      if (terminated) {\n        throw new Error('Worker was terminated');\n      }\n    }\n    function startWorkerTask(task) {\n      WorkerTasks.push(task);\n    }\n    function finishWorkerTask(task) {\n      task.finish();\n      var i = WorkerTasks.indexOf(task);\n      WorkerTasks.splice(i, 1);\n    }\n    function loadDocument(recoveryMode) {\n      var loadDocumentCapability = (0, _util.createPromiseCapability)();\n      var parseSuccess = function parseSuccess() {\n        Promise.all([pdfManager.ensureDoc('numPages'), pdfManager.ensureDoc('fingerprint')]).then(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 2),\n              numPages = _ref4[0],\n              fingerprint = _ref4[1];\n\n          loadDocumentCapability.resolve({\n            numPages: numPages,\n            fingerprint: fingerprint\n          });\n        }, parseFailure);\n      };\n      var parseFailure = function parseFailure(e) {\n        loadDocumentCapability.reject(e);\n      };\n      pdfManager.ensureDoc('checkHeader', []).then(function () {\n        pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n          pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n        }, parseFailure);\n      }, parseFailure);\n      return loadDocumentCapability.promise;\n    }\n    function getPdfManager(data, evaluatorOptions) {\n      var pdfManagerCapability = (0, _util.createPromiseCapability)();\n      var pdfManager;\n      var source = data.source;\n      if (source.data) {\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        return pdfManagerCapability.promise;\n      }\n      var pdfStream,\n          cachedChunks = [];\n      try {\n        pdfStream = new PDFWorkerStream(handler);\n      } catch (ex) {\n        pdfManagerCapability.reject(ex);\n        return pdfManagerCapability.promise;\n      }\n      var fullRequest = pdfStream.getFullReader();\n      fullRequest.headersReady.then(function () {\n        if (!fullRequest.isRangeSupported) {\n          return;\n        }\n        var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n        pdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, {\n          msgHandler: handler,\n          url: source.url,\n          password: source.password,\n          length: fullRequest.contentLength,\n          disableAutoFetch: disableAutoFetch,\n          rangeChunkSize: source.rangeChunkSize\n        }, evaluatorOptions, docBaseUrl);\n        for (var i = 0; i < cachedChunks.length; i++) {\n          pdfManager.sendProgressiveData(cachedChunks[i]);\n        }\n        cachedChunks = [];\n        pdfManagerCapability.resolve(pdfManager);\n        cancelXHRs = null;\n      }).catch(function (reason) {\n        pdfManagerCapability.reject(reason);\n        cancelXHRs = null;\n      });\n      var loaded = 0;\n      var flushChunks = function flushChunks() {\n        var pdfFile = (0, _util.arraysToBytes)(cachedChunks);\n        if (source.length && pdfFile.length !== source.length) {\n          (0, _util.warn)('reported HTTP length is different from actual');\n        }\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        cachedChunks = [];\n      };\n      var readPromise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            ensureNotTerminated();\n            if (chunk.done) {\n              if (!pdfManager) {\n                flushChunks();\n              }\n              cancelXHRs = null;\n              return;\n            }\n            var data = chunk.value;\n            loaded += (0, _util.arrayByteLength)(data);\n            if (!fullRequest.isStreamingSupported) {\n              handler.send('DocProgress', {\n                loaded: loaded,\n                total: Math.max(loaded, fullRequest.contentLength || 0)\n              });\n            }\n            if (pdfManager) {\n              pdfManager.sendProgressiveData(data);\n            } else {\n              cachedChunks.push(data);\n            }\n            fullRequest.read().then(readChunk, reject);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        fullRequest.read().then(readChunk, reject);\n      });\n      readPromise.catch(function (e) {\n        pdfManagerCapability.reject(e);\n        cancelXHRs = null;\n      });\n      cancelXHRs = function cancelXHRs() {\n        pdfStream.cancelAllRequests('abort');\n      };\n      return pdfManagerCapability.promise;\n    }\n    function setupDoc(data) {\n      function onSuccess(doc) {\n        ensureNotTerminated();\n        handler.send('GetDoc', { pdfInfo: doc });\n      }\n      function onFailure(e) {\n        ensureNotTerminated();\n        if (e instanceof _util.PasswordException) {\n          var task = new WorkerTask('PasswordException: response ' + e.code);\n          startWorkerTask(task);\n          handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n            finishWorkerTask(task);\n            pdfManager.updatePassword(data.password);\n            pdfManagerReady();\n          }).catch(function (ex) {\n            finishWorkerTask(task);\n            handler.send('PasswordException', ex);\n          }.bind(null, e));\n        } else if (e instanceof _util.InvalidPDFException) {\n          handler.send('InvalidPDF', e);\n        } else if (e instanceof _util.MissingPDFException) {\n          handler.send('MissingPDF', e);\n        } else if (e instanceof _util.UnexpectedResponseException) {\n          handler.send('UnexpectedResponse', e);\n        } else {\n          handler.send('UnknownError', new _util.UnknownErrorException(e.message, e.toString()));\n        }\n      }\n      function pdfManagerReady() {\n        ensureNotTerminated();\n        loadDocument(false).then(onSuccess, function loadFailure(ex) {\n          ensureNotTerminated();\n          if (!(ex instanceof _util.XRefParseException)) {\n            onFailure(ex);\n            return;\n          }\n          pdfManager.requestLoadedStream();\n          pdfManager.onLoadedStream().then(function () {\n            ensureNotTerminated();\n            loadDocument(true).then(onSuccess, onFailure);\n          });\n        }, onFailure);\n      }\n      ensureNotTerminated();\n      var evaluatorOptions = {\n        forceDataSchema: data.disableCreateObjectURL,\n        maxImageSize: data.maxImageSize,\n        disableFontFace: data.disableFontFace,\n        nativeImageDecoderSupport: data.nativeImageDecoderSupport,\n        ignoreErrors: data.ignoreErrors,\n        isEvalSupported: data.isEvalSupported\n      };\n      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n        if (terminated) {\n          newPdfManager.terminate();\n          throw new Error('Worker was terminated');\n        }\n        pdfManager = newPdfManager;\n        handler.send('PDFManagerReady', null);\n        pdfManager.onLoadedStream().then(function (stream) {\n          handler.send('DataLoaded', { length: stream.bytes.byteLength });\n        });\n      }).then(pdfManagerReady, onFailure);\n    }\n    handler.on('GetPage', function wphSetupGetPage(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        var rotatePromise = pdfManager.ensure(page, 'rotate');\n        var refPromise = pdfManager.ensure(page, 'ref');\n        var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n        var viewPromise = pdfManager.ensure(page, 'view');\n        return Promise.all([rotatePromise, refPromise, userUnitPromise, viewPromise]).then(function (results) {\n          return {\n            rotate: results[0],\n            ref: results[1],\n            userUnit: results[2],\n            view: results[3]\n          };\n        });\n      });\n    });\n    handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n      var ref = new _primitives.Ref(data.ref.num, data.ref.gen);\n      var catalog = pdfManager.pdfDocument.catalog;\n      return catalog.getPageIndex(ref);\n    });\n    handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n      return pdfManager.ensureCatalog('destinations');\n    });\n    handler.on('GetDestination', function wphSetupGetDestination(data) {\n      return pdfManager.ensureCatalog('getDestination', [data.id]);\n    });\n    handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n      return pdfManager.ensureCatalog('pageLabels');\n    });\n    handler.on('GetPageMode', function wphSetupGetPageMode(data) {\n      return pdfManager.ensureCatalog('pageMode');\n    });\n    handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n      return pdfManager.ensureCatalog('attachments');\n    });\n    handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n      return pdfManager.ensureCatalog('javaScript');\n    });\n    handler.on('GetOutline', function wphSetupGetOutline(data) {\n      return pdfManager.ensureCatalog('documentOutline');\n    });\n    handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n      return Promise.all([pdfManager.ensureDoc('documentInfo'), pdfManager.ensureCatalog('metadata')]);\n    });\n    handler.on('GetData', function wphSetupGetData(data) {\n      pdfManager.requestLoadedStream();\n      return pdfManager.onLoadedStream().then(function (stream) {\n        return stream.bytes;\n      });\n    });\n    handler.on('GetStats', function wphSetupGetStats(data) {\n      return pdfManager.pdfDocument.xref.stats;\n    });\n    handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n      });\n    });\n    handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n      var pageIndex = data.pageIndex;\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.getOperatorList({\n          handler: handler,\n          task: task,\n          intent: data.intent,\n          renderInteractiveForms: data.renderInteractiveForms\n        }).then(function (operatorList) {\n          finishWorkerTask(task);\n          (0, _util.info)('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n        }, function (e) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n          var wrappedException;\n          if (typeof e === 'string') {\n            wrappedException = {\n              message: e,\n              stack: minimumStackMessage\n            };\n          } else if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') {\n            wrappedException = {\n              message: e.message || e.toString(),\n              stack: e.stack || minimumStackMessage\n            };\n          } else {\n            wrappedException = {\n              message: 'Unknown exception type: ' + (typeof e === 'undefined' ? 'undefined' : _typeof(e)),\n              stack: minimumStackMessage\n            };\n          }\n          handler.send('PageError', {\n            pageNum: pageNum,\n            error: wrappedException,\n            intent: data.intent\n          });\n        });\n      });\n    }, this);\n    handler.on('GetTextContent', function wphExtractText(data, sink) {\n      var pageIndex = data.pageIndex;\n      sink.onPull = function (desiredSize) {};\n      sink.onCancel = function (reason) {};\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.extractTextContent({\n          handler: handler,\n          task: task,\n          sink: sink,\n          normalizeWhitespace: data.normalizeWhitespace,\n          combineTextItems: data.combineTextItems\n        }).then(function () {\n          finishWorkerTask(task);\n          (0, _util.info)('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n          sink.close();\n        }, function (reason) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          sink.error(reason);\n          throw reason;\n        });\n      });\n    });\n    handler.on('Cleanup', function wphCleanup(data) {\n      return pdfManager.cleanup();\n    });\n    handler.on('Terminate', function wphTerminate(data) {\n      terminated = true;\n      if (pdfManager) {\n        pdfManager.terminate();\n        pdfManager = null;\n      }\n      if (cancelXHRs) {\n        cancelXHRs();\n      }\n      var waitOn = [];\n      WorkerTasks.forEach(function (task) {\n        waitOn.push(task.finished);\n        task.terminate();\n      });\n      return Promise.all(waitOn).then(function () {\n        handler.destroy();\n        handler = null;\n      });\n    });\n    handler.on('Ready', function wphReady(data) {\n      setupDoc(docParams);\n      docParams = null;\n    });\n    return workerHandlerName;\n  },\n  initializeFromPort: function initializeFromPort(port) {\n    var handler = new _util.MessageHandler('worker', 'main', port);\n    WorkerMessageHandler.setup(handler, port);\n    handler.send('ready', null);\n  }\n};\nfunction isMessagePort(maybePort) {\n  return typeof maybePort.postMessage === 'function' && 'onmessage' in maybePort;\n}\nif (typeof window === 'undefined' && !(0, _is_node2.default)() && typeof self !== 'undefined' && isMessagePort(self)) {\n  WorkerMessageHandler.initializeFromPort(self);\n}\nexports.WorkerTask = WorkerTask;\nexports.WorkerMessageHandler = WorkerMessageHandler;\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar globalScope = __w_pdfjs_require__(76);\nif (!globalScope._pdfjsCompatibilityChecked) {\n  globalScope._pdfjsCompatibilityChecked = true;\n  var isNodeJS = __w_pdfjs_require__(44);\n  var hasDOM = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && (typeof document === 'undefined' ? 'undefined' : _typeof(document)) === 'object';\n  (function checkNodeBtoa() {\n    if (globalScope.btoa || !isNodeJS()) {\n      return;\n    }\n    globalScope.btoa = function (chars) {\n      return Buffer.from(chars, 'binary').toString('base64');\n    };\n  })();\n  (function checkNodeAtob() {\n    if (globalScope.atob || !isNodeJS()) {\n      return;\n    }\n    globalScope.atob = function (input) {\n      return Buffer.from(input, 'base64').toString('binary');\n    };\n  })();\n  (function checkCurrentScript() {\n    if (!hasDOM) {\n      return;\n    }\n    if ('currentScript' in document) {\n      return;\n    }\n    Object.defineProperty(document, 'currentScript', {\n      get: function get() {\n        var scripts = document.getElementsByTagName('script');\n        return scripts[scripts.length - 1];\n      },\n\n      enumerable: true,\n      configurable: true\n    });\n  })();\n  (function checkChildNodeRemove() {\n    if (!hasDOM) {\n      return;\n    }\n    if (typeof Element.prototype.remove !== 'undefined') {\n      return;\n    }\n    Element.prototype.remove = function () {\n      if (this.parentNode) {\n        this.parentNode.removeChild(this);\n      }\n    };\n  })();\n  (function checkStringIncludes() {\n    if (String.prototype.includes) {\n      return;\n    }\n    __w_pdfjs_require__(77);\n  })();\n  (function checkArrayIncludes() {\n    if (Array.prototype.includes) {\n      return;\n    }\n    __w_pdfjs_require__(82);\n  })();\n  (function checkMathLog2() {\n    if (Math.log2) {\n      return;\n    }\n    Math.log2 = __w_pdfjs_require__(85);\n  })();\n  (function checkNumberIsNaN() {\n    if (Number.isNaN) {\n      return;\n    }\n    Number.isNaN = __w_pdfjs_require__(87);\n  })();\n  (function checkNumberIsInteger() {\n    if (Number.isInteger) {\n      return;\n    }\n    Number.isInteger = __w_pdfjs_require__(89);\n  })();\n  (function checkPromise() {\n    if (globalScope.Promise) {\n      return;\n    }\n    globalScope.Promise = __w_pdfjs_require__(92);\n  })();\n  (function checkWeakMap() {\n    if (globalScope.WeakMap) {\n      return;\n    }\n    globalScope.WeakMap = __w_pdfjs_require__(111);\n  })();\n  (function checkURLConstructor() {\n    var hasWorkingUrl = false;\n    try {\n      if (typeof URL === 'function' && _typeof(URL.prototype) === 'object' && 'origin' in URL.prototype) {\n        var u = new URL('b', 'http://a');\n        u.pathname = 'c%20d';\n        hasWorkingUrl = u.href === 'http://a/c%20d';\n      }\n    } catch (e) {}\n    if (hasWorkingUrl) {\n      return;\n    }\n    var relative = Object.create(null);\n    relative['ftp'] = 21;\n    relative['file'] = 0;\n    relative['gopher'] = 70;\n    relative['http'] = 80;\n    relative['https'] = 443;\n    relative['ws'] = 80;\n    relative['wss'] = 443;\n    var relativePathDotMapping = Object.create(null);\n    relativePathDotMapping['%2e'] = '.';\n    relativePathDotMapping['.%2e'] = '..';\n    relativePathDotMapping['%2e.'] = '..';\n    relativePathDotMapping['%2e%2e'] = '..';\n    function isRelativeScheme(scheme) {\n      return relative[scheme] !== undefined;\n    }\n    function invalid() {\n      clear.call(this);\n      this._isInvalid = true;\n    }\n    function IDNAToASCII(h) {\n      if (h === '') {\n        invalid.call(this);\n      }\n      return h.toLowerCase();\n    }\n    function percentEscape(c) {\n      var unicode = c.charCodeAt(0);\n      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x3F, 0x60].indexOf(unicode) === -1) {\n        return c;\n      }\n      return encodeURIComponent(c);\n    }\n    function percentEscapeQuery(c) {\n      var unicode = c.charCodeAt(0);\n      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x60].indexOf(unicode) === -1) {\n        return c;\n      }\n      return encodeURIComponent(c);\n    }\n    var EOF,\n        ALPHA = /[a-zA-Z]/,\n        ALPHANUMERIC = /[a-zA-Z0-9\\+\\-\\.]/;\n    function parse(input, stateOverride, base) {\n      function err(message) {\n        errors.push(message);\n      }\n      var state = stateOverride || 'scheme start',\n          cursor = 0,\n          buffer = '',\n          seenAt = false,\n          seenBracket = false,\n          errors = [];\n      loop: while ((input[cursor - 1] !== EOF || cursor === 0) && !this._isInvalid) {\n        var c = input[cursor];\n        switch (state) {\n          case 'scheme start':\n            if (c && ALPHA.test(c)) {\n              buffer += c.toLowerCase();\n              state = 'scheme';\n            } else if (!stateOverride) {\n              buffer = '';\n              state = 'no scheme';\n              continue;\n            } else {\n              err('Invalid scheme.');\n              break loop;\n            }\n            break;\n          case 'scheme':\n            if (c && ALPHANUMERIC.test(c)) {\n              buffer += c.toLowerCase();\n            } else if (c === ':') {\n              this._scheme = buffer;\n              buffer = '';\n              if (stateOverride) {\n                break loop;\n              }\n              if (isRelativeScheme(this._scheme)) {\n                this._isRelative = true;\n              }\n              if (this._scheme === 'file') {\n                state = 'relative';\n              } else if (this._isRelative && base && base._scheme === this._scheme) {\n                state = 'relative or authority';\n              } else if (this._isRelative) {\n                state = 'authority first slash';\n              } else {\n                state = 'scheme data';\n              }\n            } else if (!stateOverride) {\n              buffer = '';\n              cursor = 0;\n              state = 'no scheme';\n              continue;\n            } else if (c === EOF) {\n              break loop;\n            } else {\n              err('Code point not allowed in scheme: ' + c);\n              break loop;\n            }\n            break;\n          case 'scheme data':\n            if (c === '?') {\n              this._query = '?';\n              state = 'query';\n            } else if (c === '#') {\n              this._fragment = '#';\n              state = 'fragment';\n            } else {\n              if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n                this._schemeData += percentEscape(c);\n              }\n            }\n            break;\n          case 'no scheme':\n            if (!base || !isRelativeScheme(base._scheme)) {\n              err('Missing scheme.');\n              invalid.call(this);\n            } else {\n              state = 'relative';\n              continue;\n            }\n            break;\n          case 'relative or authority':\n            if (c === '/' && input[cursor + 1] === '/') {\n              state = 'authority ignore slashes';\n            } else {\n              err('Expected /, got: ' + c);\n              state = 'relative';\n              continue;\n            }\n            break;\n          case 'relative':\n            this._isRelative = true;\n            if (this._scheme !== 'file') {\n              this._scheme = base._scheme;\n            }\n            if (c === EOF) {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = base._query;\n              this._username = base._username;\n              this._password = base._password;\n              break loop;\n            } else if (c === '/' || c === '\\\\') {\n              if (c === '\\\\') {\n                err('\\\\ is an invalid code point.');\n              }\n              state = 'relative slash';\n            } else if (c === '?') {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = '?';\n              this._username = base._username;\n              this._password = base._password;\n              state = 'query';\n            } else if (c === '#') {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = base._query;\n              this._fragment = '#';\n              this._username = base._username;\n              this._password = base._password;\n              state = 'fragment';\n            } else {\n              var nextC = input[cursor + 1];\n              var nextNextC = input[cursor + 2];\n              if (this._scheme !== 'file' || !ALPHA.test(c) || nextC !== ':' && nextC !== '|' || nextNextC !== EOF && nextNextC !== '/' && nextNextC !== '\\\\' && nextNextC !== '?' && nextNextC !== '#') {\n                this._host = base._host;\n                this._port = base._port;\n                this._username = base._username;\n                this._password = base._password;\n                this._path = base._path.slice();\n                this._path.pop();\n              }\n              state = 'relative path';\n              continue;\n            }\n            break;\n          case 'relative slash':\n            if (c === '/' || c === '\\\\') {\n              if (c === '\\\\') {\n                err('\\\\ is an invalid code point.');\n              }\n              if (this._scheme === 'file') {\n                state = 'file host';\n              } else {\n                state = 'authority ignore slashes';\n              }\n            } else {\n              if (this._scheme !== 'file') {\n                this._host = base._host;\n                this._port = base._port;\n                this._username = base._username;\n                this._password = base._password;\n              }\n              state = 'relative path';\n              continue;\n            }\n            break;\n          case 'authority first slash':\n            if (c === '/') {\n              state = 'authority second slash';\n            } else {\n              err('Expected \\'/\\', got: ' + c);\n              state = 'authority ignore slashes';\n              continue;\n            }\n            break;\n          case 'authority second slash':\n            state = 'authority ignore slashes';\n            if (c !== '/') {\n              err('Expected \\'/\\', got: ' + c);\n              continue;\n            }\n            break;\n          case 'authority ignore slashes':\n            if (c !== '/' && c !== '\\\\') {\n              state = 'authority';\n              continue;\n            } else {\n              err('Expected authority, got: ' + c);\n            }\n            break;\n          case 'authority':\n            if (c === '@') {\n              if (seenAt) {\n                err('@ already seen.');\n                buffer += '%40';\n              }\n              seenAt = true;\n              for (var i = 0; i < buffer.length; i++) {\n                var cp = buffer[i];\n                if (cp === '\\t' || cp === '\\n' || cp === '\\r') {\n                  err('Invalid whitespace in authority.');\n                  continue;\n                }\n                if (cp === ':' && this._password === null) {\n                  this._password = '';\n                  continue;\n                }\n                var tempC = percentEscape(cp);\n                if (this._password !== null) {\n                  this._password += tempC;\n                } else {\n                  this._username += tempC;\n                }\n              }\n              buffer = '';\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              cursor -= buffer.length;\n              buffer = '';\n              state = 'host';\n              continue;\n            } else {\n              buffer += c;\n            }\n            break;\n          case 'file host':\n            if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              if (buffer.length === 2 && ALPHA.test(buffer[0]) && (buffer[1] === ':' || buffer[1] === '|')) {\n                state = 'relative path';\n              } else if (buffer.length === 0) {\n                state = 'relative path start';\n              } else {\n                this._host = IDNAToASCII.call(this, buffer);\n                buffer = '';\n                state = 'relative path start';\n              }\n              continue;\n            } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n              err('Invalid whitespace in file host.');\n            } else {\n              buffer += c;\n            }\n            break;\n          case 'host':\n          case 'hostname':\n            if (c === ':' && !seenBracket) {\n              this._host = IDNAToASCII.call(this, buffer);\n              buffer = '';\n              state = 'port';\n              if (stateOverride === 'hostname') {\n                break loop;\n              }\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              this._host = IDNAToASCII.call(this, buffer);\n              buffer = '';\n              state = 'relative path start';\n              if (stateOverride) {\n                break loop;\n              }\n              continue;\n            } else if (c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              if (c === '[') {\n                seenBracket = true;\n              } else if (c === ']') {\n                seenBracket = false;\n              }\n              buffer += c;\n            } else {\n              err('Invalid code point in host/hostname: ' + c);\n            }\n            break;\n          case 'port':\n            if (/[0-9]/.test(c)) {\n              buffer += c;\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#' || stateOverride) {\n              if (buffer !== '') {\n                var temp = parseInt(buffer, 10);\n                if (temp !== relative[this._scheme]) {\n                  this._port = temp + '';\n                }\n                buffer = '';\n              }\n              if (stateOverride) {\n                break loop;\n              }\n              state = 'relative path start';\n              continue;\n            } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n              err('Invalid code point in port: ' + c);\n            } else {\n              invalid.call(this);\n            }\n            break;\n          case 'relative path start':\n            if (c === '\\\\') {\n              err('\\'\\\\\\' not allowed in path.');\n            }\n            state = 'relative path';\n            if (c !== '/' && c !== '\\\\') {\n              continue;\n            }\n            break;\n          case 'relative path':\n            if (c === EOF || c === '/' || c === '\\\\' || !stateOverride && (c === '?' || c === '#')) {\n              if (c === '\\\\') {\n                err('\\\\ not allowed in relative path.');\n              }\n              var tmp;\n              if (tmp = relativePathDotMapping[buffer.toLowerCase()]) {\n                buffer = tmp;\n              }\n              if (buffer === '..') {\n                this._path.pop();\n                if (c !== '/' && c !== '\\\\') {\n                  this._path.push('');\n                }\n              } else if (buffer === '.' && c !== '/' && c !== '\\\\') {\n                this._path.push('');\n              } else if (buffer !== '.') {\n                if (this._scheme === 'file' && this._path.length === 0 && buffer.length === 2 && ALPHA.test(buffer[0]) && buffer[1] === '|') {\n                  buffer = buffer[0] + ':';\n                }\n                this._path.push(buffer);\n              }\n              buffer = '';\n              if (c === '?') {\n                this._query = '?';\n                state = 'query';\n              } else if (c === '#') {\n                this._fragment = '#';\n                state = 'fragment';\n              }\n            } else if (c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              buffer += percentEscape(c);\n            }\n            break;\n          case 'query':\n            if (!stateOverride && c === '#') {\n              this._fragment = '#';\n              state = 'fragment';\n            } else if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              this._query += percentEscapeQuery(c);\n            }\n            break;\n          case 'fragment':\n            if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              this._fragment += c;\n            }\n            break;\n        }\n        cursor++;\n      }\n    }\n    function clear() {\n      this._scheme = '';\n      this._schemeData = '';\n      this._username = '';\n      this._password = null;\n      this._host = '';\n      this._port = '';\n      this._path = [];\n      this._query = '';\n      this._fragment = '';\n      this._isInvalid = false;\n      this._isRelative = false;\n    }\n    function JURL(url, base) {\n      if (base !== undefined && !(base instanceof JURL)) {\n        base = new JURL(String(base));\n      }\n      this._url = url;\n      clear.call(this);\n      var input = url.replace(/^[ \\t\\r\\n\\f]+|[ \\t\\r\\n\\f]+$/g, '');\n      parse.call(this, input, null, base);\n    }\n    JURL.prototype = {\n      toString: function toString() {\n        return this.href;\n      },\n\n      get href() {\n        if (this._isInvalid) {\n          return this._url;\n        }\n        var authority = '';\n        if (this._username !== '' || this._password !== null) {\n          authority = this._username + (this._password !== null ? ':' + this._password : '') + '@';\n        }\n        return this.protocol + (this._isRelative ? '//' + authority + this.host : '') + this.pathname + this._query + this._fragment;\n      },\n      set href(value) {\n        clear.call(this);\n        parse.call(this, value);\n      },\n      get protocol() {\n        return this._scheme + ':';\n      },\n      set protocol(value) {\n        if (this._isInvalid) {\n          return;\n        }\n        parse.call(this, value + ':', 'scheme start');\n      },\n      get host() {\n        return this._isInvalid ? '' : this._port ? this._host + ':' + this._port : this._host;\n      },\n      set host(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'host');\n      },\n      get hostname() {\n        return this._host;\n      },\n      set hostname(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'hostname');\n      },\n      get port() {\n        return this._port;\n      },\n      set port(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'port');\n      },\n      get pathname() {\n        return this._isInvalid ? '' : this._isRelative ? '/' + this._path.join('/') : this._schemeData;\n      },\n      set pathname(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        this._path = [];\n        parse.call(this, value, 'relative path start');\n      },\n      get search() {\n        return this._isInvalid || !this._query || this._query === '?' ? '' : this._query;\n      },\n      set search(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        this._query = '?';\n        if (value[0] === '?') {\n          value = value.slice(1);\n        }\n        parse.call(this, value, 'query');\n      },\n      get hash() {\n        return this._isInvalid || !this._fragment || this._fragment === '#' ? '' : this._fragment;\n      },\n      set hash(value) {\n        if (this._isInvalid) {\n          return;\n        }\n        this._fragment = '#';\n        if (value[0] === '#') {\n          value = value.slice(1);\n        }\n        parse.call(this, value, 'fragment');\n      },\n      get origin() {\n        var host;\n        if (this._isInvalid || !this._scheme) {\n          return '';\n        }\n        switch (this._scheme) {\n          case 'data':\n          case 'file':\n          case 'javascript':\n          case 'mailto':\n            return 'null';\n          case 'blob':\n            try {\n              return new JURL(this._schemeData).origin || 'null';\n            } catch (_) {}\n            return 'null';\n        }\n        host = this.host;\n        if (!host) {\n          return '';\n        }\n        return this._scheme + '://' + host;\n      }\n    };\n    var OriginalURL = globalScope.URL;\n    if (OriginalURL) {\n      JURL.createObjectURL = function (blob) {\n        return OriginalURL.createObjectURL.apply(OriginalURL, arguments);\n      };\n      JURL.revokeObjectURL = function (url) {\n        OriginalURL.revokeObjectURL(url);\n      };\n    }\n    globalScope.URL = JURL;\n  })();\n  (function checkObjectValues() {\n    if (Object.values) {\n      return;\n    }\n    Object.values = __w_pdfjs_require__(127);\n  })();\n}\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = typeof window !== 'undefined' && window.Math === Math ? window : typeof global !== 'undefined' && global.Math === Math ? global : typeof self !== 'undefined' && self.Math === Math ? self : {};\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(78);\nmodule.exports = __w_pdfjs_require__(7).String.includes;\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nvar context = __w_pdfjs_require__(79);\nvar INCLUDES = 'includes';\n$export($export.P + $export.F * __w_pdfjs_require__(81)(INCLUDES), 'String', {\n  includes: function includes(searchString) {\n    return !!~context(this, searchString, INCLUDES).indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isRegExp = __w_pdfjs_require__(80);\nvar defined = __w_pdfjs_require__(23);\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar cof = __w_pdfjs_require__(15);\nvar MATCH = __w_pdfjs_require__(2)('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar MATCH = __w_pdfjs_require__(2)('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) {}\n  }\n  return true;\n};\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(83);\nmodule.exports = __w_pdfjs_require__(7).Array.includes;\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nvar $includes = __w_pdfjs_require__(48)(true);\n$export($export.P, 'Array', {\n  includes: function includes(el) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n__w_pdfjs_require__(49)('includes');\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(32);\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(86);\nmodule.exports = __w_pdfjs_require__(7).Math.log2;\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\n$export($export.S, 'Math', {\n  log2: function log2(x) {\n    return Math.log(x) / Math.LN2;\n  }\n});\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(88);\nmodule.exports = __w_pdfjs_require__(7).Number.isNaN;\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\n$export($export.S, 'Number', {\n  isNaN: function isNaN(number) {\n    return number != number;\n  }\n});\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(90);\nmodule.exports = __w_pdfjs_require__(7).Number.isInteger;\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\n$export($export.S, 'Number', { isInteger: __w_pdfjs_require__(91) });\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(50);\n__w_pdfjs_require__(93);\n__w_pdfjs_require__(55);\n__w_pdfjs_require__(102);\n__w_pdfjs_require__(109);\n__w_pdfjs_require__(110);\nmodule.exports = __w_pdfjs_require__(7).Promise;\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $at = __w_pdfjs_require__(94)(true);\n__w_pdfjs_require__(51)(String, 'String', function (iterated) {\n  this._t = String(iterated);\n  this._i = 0;\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return {\n    value: undefined,\n    done: true\n  };\n  point = $at(O, index);\n  this._i += point.length;\n  return {\n    value: point,\n    done: false\n  };\n});\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(32);\nvar defined = __w_pdfjs_require__(23);\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar create = __w_pdfjs_require__(96);\nvar descriptor = __w_pdfjs_require__(29);\nvar setToStringTag = __w_pdfjs_require__(25);\nvar IteratorPrototype = {};\n__w_pdfjs_require__(12)(IteratorPrototype, __w_pdfjs_require__(2)('iterator'), function () {\n  return this;\n});\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar dPs = __w_pdfjs_require__(97);\nvar enumBugKeys = __w_pdfjs_require__(53);\nvar IE_PROTO = __w_pdfjs_require__(34)('IE_PROTO');\nvar Empty = function Empty() {};\nvar PROTOTYPE = 'prototype';\nvar _createDict = function createDict() {\n  var iframe = __w_pdfjs_require__(28)('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  __w_pdfjs_require__(54).appendChild(iframe);\n  iframe.src = 'javascript:';\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  _createDict = iframeDocument.F;\n  while (i--) {\n    delete _createDict[PROTOTYPE][enumBugKeys[i]];\n  }return _createDict();\n};\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    result[IE_PROTO] = O;\n  } else result = _createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar dP = __w_pdfjs_require__(16);\nvar anObject = __w_pdfjs_require__(8);\nvar getKeys = __w_pdfjs_require__(24);\nmodule.exports = __w_pdfjs_require__(13) ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) {\n    dP.f(O, P = keys[i++], Properties[P]);\n  }return O;\n};\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar has = __w_pdfjs_require__(10);\nvar toIObject = __w_pdfjs_require__(18);\nvar arrayIndexOf = __w_pdfjs_require__(48)(false);\nvar IE_PROTO = __w_pdfjs_require__(34)('IE_PROTO');\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) {\n    if (key != IE_PROTO) has(O, key) && result.push(key);\n  }while (names.length > i) {\n    if (has(O, key = names[i++])) {\n      ~arrayIndexOf(result, key) || result.push(key);\n    }\n  }return result;\n};\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar has = __w_pdfjs_require__(10);\nvar toObject = __w_pdfjs_require__(35);\nvar IE_PROTO = __w_pdfjs_require__(34)('IE_PROTO');\nvar ObjectProto = Object.prototype;\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  }\n  return O instanceof Object ? ObjectProto : null;\n};\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar addToUnscopables = __w_pdfjs_require__(49);\nvar step = __w_pdfjs_require__(101);\nvar Iterators = __w_pdfjs_require__(19);\nvar toIObject = __w_pdfjs_require__(18);\nmodule.exports = __w_pdfjs_require__(51)(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated);\n  this._i = 0;\n  this._k = kind;\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\nIterators.Arguments = Iterators.Array;\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (done, value) {\n  return {\n    value: value,\n    done: !!done\n  };\n};\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar LIBRARY = __w_pdfjs_require__(52);\nvar global = __w_pdfjs_require__(6);\nvar ctx = __w_pdfjs_require__(11);\nvar classof = __w_pdfjs_require__(33);\nvar $export = __w_pdfjs_require__(5);\nvar isObject = __w_pdfjs_require__(3);\nvar aFunction = __w_pdfjs_require__(17);\nvar anInstance = __w_pdfjs_require__(36);\nvar forOf = __w_pdfjs_require__(26);\nvar speciesConstructor = __w_pdfjs_require__(56);\nvar task = __w_pdfjs_require__(57).set;\nvar microtask = __w_pdfjs_require__(107)();\nvar newPromiseCapabilityModule = __w_pdfjs_require__(37);\nvar perform = __w_pdfjs_require__(58);\nvar promiseResolve = __w_pdfjs_require__(59);\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function empty() {};\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\nvar USE_NATIVE = !!function () {\n  try {\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[__w_pdfjs_require__(2)('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;\n  } catch (e) {}\n}();\nvar isThenable = function isThenable(it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function notify(promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function run(reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;else {\n            if (domain) domain.enter();\n            result = handler(value);\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) {\n      run(chain[i++]);\n    }promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function onUnhandled(promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({\n            promise: promise,\n            reason: value\n          });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    }\n    promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function isUnhandled(promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function onHandleUnhandled(promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({\n        promise: promise,\n        reason: promise._v\n      });\n    }\n  });\n};\nvar $reject = function $reject(value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise;\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function $resolve(value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise;\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = {\n          _w: promise,\n          _d: false\n        };\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({\n      _w: promise,\n      _d: false\n    }, e);\n  }\n};\nif (!USE_NATIVE) {\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  Internal = function Promise(executor) {\n    this._c = [];\n    this._a = undefined;\n    this._s = 0;\n    this._d = false;\n    this._v = undefined;\n    this._h = 0;\n    this._n = false;\n  };\n  Internal.prototype = __w_pdfjs_require__(38)($Promise.prototype, {\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    'catch': function _catch(onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function OwnPromiseCapability() {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function newPromiseCapability(C) {\n    return C === $Promise || C === Wrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);\n  };\n}\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\n__w_pdfjs_require__(25)($Promise, PROMISE);\n__w_pdfjs_require__(108)(PROMISE);\nWrapper = __w_pdfjs_require__(7)[PROMISE];\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && __w_pdfjs_require__(60)(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar Iterators = __w_pdfjs_require__(19);\nvar ITERATOR = __w_pdfjs_require__(2)('iterator');\nvar ArrayProto = Array.prototype;\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar classof = __w_pdfjs_require__(33);\nvar ITERATOR = __w_pdfjs_require__(2)('iterator');\nvar Iterators = __w_pdfjs_require__(19);\nmodule.exports = __w_pdfjs_require__(7).getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];\n};\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0:\n      return un ? fn() : fn.call(that);\n    case 1:\n      return un ? fn(args[0]) : fn.call(that, args[0]);\n    case 2:\n      return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);\n    case 3:\n      return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);\n    case 4:\n      return un ? fn(args[0], args[1], args[2], args[3]) : fn.call(that, args[0], args[1], args[2], args[3]);\n  }\n  return fn.apply(that, args);\n};\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(6);\nvar macrotask = __w_pdfjs_require__(57).set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = __w_pdfjs_require__(15)(process) == 'process';\nmodule.exports = function () {\n  var head, last, notify;\n  var flush = function flush() {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();else last = undefined;\n        throw e;\n      }\n    }\n    last = undefined;\n    if (parent) parent.enter();\n  };\n  if (isNode) {\n    notify = function notify() {\n      process.nextTick(flush);\n    };\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true });\n    notify = function notify() {\n      node.data = toggle = !toggle;\n    };\n  } else if (Promise && Promise.resolve) {\n    var promise = Promise.resolve();\n    notify = function notify() {\n      promise.then(flush);\n    };\n  } else {\n    notify = function notify() {\n      macrotask.call(global, flush);\n    };\n  }\n  return function (fn) {\n    var task = {\n      fn: fn,\n      next: undefined\n    };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    }\n    last = task;\n  };\n};\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(6);\nvar dP = __w_pdfjs_require__(16);\nvar DESCRIPTORS = __w_pdfjs_require__(13);\nvar SPECIES = __w_pdfjs_require__(2)('species');\nmodule.exports = function (KEY) {\n  var C = global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function get() {\n      return this;\n    }\n  });\n};\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nvar core = __w_pdfjs_require__(7);\nvar global = __w_pdfjs_require__(6);\nvar speciesConstructor = __w_pdfjs_require__(56);\nvar promiseResolve = __w_pdfjs_require__(59);\n$export($export.P + $export.R, 'Promise', {\n  'finally': function _finally(onFinally) {\n    var C = speciesConstructor(this, core.Promise || global.Promise);\n    var isFunction = typeof onFinally == 'function';\n    return this.then(isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () {\n        return x;\n      });\n    } : onFinally, isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () {\n        throw e;\n      });\n    } : onFinally);\n  }\n});\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nvar newPromiseCapability = __w_pdfjs_require__(37);\nvar perform = __w_pdfjs_require__(58);\n$export($export.S, 'Promise', {\n  'try': function _try(callbackfn) {\n    var promiseCapability = newPromiseCapability.f(this);\n    var result = perform(callbackfn);\n    (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n    return promiseCapability.promise;\n  }\n});\n\n/***/ }),\n/* 111 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(50);\n__w_pdfjs_require__(55);\n__w_pdfjs_require__(112);\n__w_pdfjs_require__(123);\n__w_pdfjs_require__(125);\nmodule.exports = __w_pdfjs_require__(7).WeakMap;\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar each = __w_pdfjs_require__(61)(0);\nvar redefine = __w_pdfjs_require__(9);\nvar meta = __w_pdfjs_require__(39);\nvar assign = __w_pdfjs_require__(116);\nvar weak = __w_pdfjs_require__(118);\nvar isObject = __w_pdfjs_require__(3);\nvar fails = __w_pdfjs_require__(14);\nvar validate = __w_pdfjs_require__(62);\nvar WEAK_MAP = 'WeakMap';\nvar getWeak = meta.getWeak;\nvar isExtensible = Object.isExtensible;\nvar uncaughtFrozenStore = weak.ufstore;\nvar tmp = {};\nvar InternalMap;\nvar wrapper = function wrapper(get) {\n  return function WeakMap() {\n    return get(this, arguments.length > 0 ? arguments[0] : undefined);\n  };\n};\nvar methods = {\n  get: function get(key) {\n    if (isObject(key)) {\n      var data = getWeak(key);\n      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);\n      return data ? data[this._i] : undefined;\n    }\n  },\n  set: function set(key, value) {\n    return weak.def(validate(this, WEAK_MAP), key, value);\n  }\n};\nvar $WeakMap = module.exports = __w_pdfjs_require__(119)(WEAK_MAP, wrapper, methods, weak, true, true);\nif (fails(function () {\n  return new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7;\n})) {\n  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);\n  assign(InternalMap.prototype, methods);\n  meta.NEED = true;\n  each(['delete', 'has', 'get', 'set'], function (key) {\n    var proto = $WeakMap.prototype;\n    var method = proto[key];\n    redefine(proto, key, function (a, b) {\n      if (isObject(a) && !isExtensible(a)) {\n        if (!this._f) this._f = new InternalMap();\n        var result = this._f[key](a, b);\n        return key == 'set' ? this : result;\n      }\n      return method.call(this, a, b);\n    });\n  });\n}\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar speciesConstructor = __w_pdfjs_require__(114);\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar isArray = __w_pdfjs_require__(115);\nvar SPECIES = __w_pdfjs_require__(2)('species');\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  }\n  return C === undefined ? Array : C;\n};\n\n/***/ }),\n/* 115 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(15);\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n\n/***/ }),\n/* 116 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getKeys = __w_pdfjs_require__(24);\nvar gOPS = __w_pdfjs_require__(117);\nvar pIE = __w_pdfjs_require__(40);\nvar toObject = __w_pdfjs_require__(35);\nvar IObject = __w_pdfjs_require__(30);\nvar $assign = Object.assign;\nmodule.exports = !$assign || __w_pdfjs_require__(14)(function () {\n  var A = {};\n  var B = {};\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) {\n    B[k] = k;\n  });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) {\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n    }\n  }\n  return T;\n} : $assign;\n\n/***/ }),\n/* 117 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nexports.f = Object.getOwnPropertySymbols;\n\n/***/ }),\n/* 118 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar redefineAll = __w_pdfjs_require__(38);\nvar getWeak = __w_pdfjs_require__(39).getWeak;\nvar anObject = __w_pdfjs_require__(8);\nvar isObject = __w_pdfjs_require__(3);\nvar anInstance = __w_pdfjs_require__(36);\nvar forOf = __w_pdfjs_require__(26);\nvar createArrayMethod = __w_pdfjs_require__(61);\nvar $has = __w_pdfjs_require__(10);\nvar validate = __w_pdfjs_require__(62);\nvar arrayFind = createArrayMethod(5);\nvar arrayFindIndex = createArrayMethod(6);\nvar id = 0;\nvar uncaughtFrozenStore = function uncaughtFrozenStore(that) {\n  return that._l || (that._l = new UncaughtFrozenStore());\n};\nvar UncaughtFrozenStore = function UncaughtFrozenStore() {\n  this.a = [];\n};\nvar findUncaughtFrozen = function findUncaughtFrozen(store, key) {\n  return arrayFind(store.a, function (it) {\n    return it[0] === key;\n  });\n};\nUncaughtFrozenStore.prototype = {\n  get: function get(key) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) return entry[1];\n  },\n  has: function has(key) {\n    return !!findUncaughtFrozen(this, key);\n  },\n  set: function set(key, value) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) entry[1] = value;else this.a.push([key, value]);\n  },\n  'delete': function _delete(key) {\n    var index = arrayFindIndex(this.a, function (it) {\n      return it[0] === key;\n    });\n    if (~index) this.a.splice(index, 1);\n    return !!~index;\n  }\n};\nmodule.exports = {\n  getConstructor: function getConstructor(wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;\n      that._i = id++;\n      that._l = undefined;\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      'delete': function _delete(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);\n        return data && $has(data, this._i) && delete data[this._i];\n      },\n      has: function has(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);\n        return data && $has(data, this._i);\n      }\n    });\n    return C;\n  },\n  def: function def(that, key, value) {\n    var data = getWeak(anObject(key), true);\n    if (data === true) uncaughtFrozenStore(that).set(key, value);else data[that._i] = value;\n    return that;\n  },\n  ufstore: uncaughtFrozenStore\n};\n\n/***/ }),\n/* 119 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(6);\nvar $export = __w_pdfjs_require__(5);\nvar redefine = __w_pdfjs_require__(9);\nvar redefineAll = __w_pdfjs_require__(38);\nvar meta = __w_pdfjs_require__(39);\nvar forOf = __w_pdfjs_require__(26);\nvar anInstance = __w_pdfjs_require__(36);\nvar isObject = __w_pdfjs_require__(3);\nvar fails = __w_pdfjs_require__(14);\nvar $iterDetect = __w_pdfjs_require__(60);\nvar setToStringTag = __w_pdfjs_require__(25);\nvar inheritIfRequired = __w_pdfjs_require__(120);\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n  var Base = global[NAME];\n  var C = Base;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var proto = C && C.prototype;\n  var O = {};\n  var fixMethod = function fixMethod(KEY) {\n    var fn = proto[KEY];\n    redefine(proto, KEY, KEY == 'delete' ? function (a) {\n      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'has' ? function has(a) {\n      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'get' ? function get(a) {\n      return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'add' ? function add(a) {\n      fn.call(this, a === 0 ? 0 : a);\n      return this;\n    } : function set(a, b) {\n      fn.call(this, a === 0 ? 0 : a, b);\n      return this;\n    });\n  };\n  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n    new C().entries().next();\n  }))) {\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    var instance = new C();\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    var THROWS_ON_PRIMITIVES = fails(function () {\n      instance.has(1);\n    });\n    var ACCEPT_ITERABLES = $iterDetect(function (iter) {\n      new C(iter);\n    });\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n      var $instance = new C();\n      var index = 5;\n      while (index--) {\n        $instance[ADDER](index, index);\n      }return !$instance.has(-0);\n    });\n    if (!ACCEPT_ITERABLES) {\n      C = wrapper(function (target, iterable) {\n        anInstance(target, C, NAME);\n        var that = inheritIfRequired(new Base(), target, C);\n        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n        return that;\n      });\n      C.prototype = proto;\n      proto.constructor = C;\n    }\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n    if (IS_WEAK && proto.clear) delete proto.clear;\n  }\n  setToStringTag(C, NAME);\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F * (C != Base), O);\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n  return C;\n};\n\n/***/ }),\n/* 120 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar setPrototypeOf = __w_pdfjs_require__(121).set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  }\n  return that;\n};\n\n/***/ }),\n/* 121 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar anObject = __w_pdfjs_require__(8);\nvar check = function check(O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? function (test, buggy, set) {\n    try {\n      set = __w_pdfjs_require__(11)(Function.call, __w_pdfjs_require__(122).f(Object.prototype, '__proto__').set, 2);\n      set(test, []);\n      buggy = !(test instanceof Array);\n    } catch (e) {\n      buggy = true;\n    }\n    return function setPrototypeOf(O, proto) {\n      check(O, proto);\n      if (buggy) O.__proto__ = proto;else set(O, proto);\n      return O;\n    };\n  }({}, false) : undefined),\n  check: check\n};\n\n/***/ }),\n/* 122 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar pIE = __w_pdfjs_require__(40);\nvar createDesc = __w_pdfjs_require__(29);\nvar toIObject = __w_pdfjs_require__(18);\nvar toPrimitive = __w_pdfjs_require__(46);\nvar has = __w_pdfjs_require__(10);\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(45);\nvar gOPD = Object.getOwnPropertyDescriptor;\nexports.f = __w_pdfjs_require__(13) ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) {}\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n/***/ }),\n/* 123 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(124)('WeakMap');\n\n/***/ }),\n/* 124 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, {\n    of: function of() {\n      var length = arguments.length;\n      var A = new Array(length);\n      while (length--) {\n        A[length] = arguments[length];\n      }return new this(A);\n    }\n  });\n};\n\n/***/ }),\n/* 125 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(126)('WeakMap');\n\n/***/ }),\n/* 126 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nvar aFunction = __w_pdfjs_require__(17);\nvar ctx = __w_pdfjs_require__(11);\nvar forOf = __w_pdfjs_require__(26);\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, {\n    from: function from(source) {\n      var mapFn = arguments[1];\n      var mapping, A, n, cb;\n      aFunction(this);\n      mapping = mapFn !== undefined;\n      if (mapping) aFunction(mapFn);\n      if (source == undefined) return new this();\n      A = [];\n      if (mapping) {\n        n = 0;\n        cb = ctx(mapFn, arguments[2], 2);\n        forOf(source, false, function (nextItem) {\n          A.push(cb(nextItem, n++));\n        });\n      } else {\n        forOf(source, false, A.push, A);\n      }\n      return new this(A);\n    }\n  });\n};\n\n/***/ }),\n/* 127 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(128);\nmodule.exports = __w_pdfjs_require__(7).Object.values;\n\n/***/ }),\n/* 128 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nvar $values = __w_pdfjs_require__(129)(false);\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n\n/***/ }),\n/* 129 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getKeys = __w_pdfjs_require__(24);\nvar toIObject = __w_pdfjs_require__(18);\nvar isEnum = __w_pdfjs_require__(40).f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      if (isEnum.call(O, key = keys[i++])) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }return result;\n  };\n};\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isReadableStreamSupported = false;\nif (typeof ReadableStream !== 'undefined') {\n  try {\n    new ReadableStream({\n      start: function start(controller) {\n        controller.close();\n      }\n    });\n    isReadableStreamSupported = true;\n  } catch (e) {}\n}\nif (isReadableStreamSupported) {\n  exports.ReadableStream = ReadableStream;\n} else {\n  exports.ReadableStream = __w_pdfjs_require__(131).ReadableStream;\n}\n\n/***/ }),\n/* 131 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function (e, a) {\n  for (var i in a) {\n    e[i] = a[i];\n  }\n})(exports, function (modules) {\n  var installedModules = {};\n  function __w_pdfjs_require__(moduleId) {\n    if (installedModules[moduleId]) return installedModules[moduleId].exports;\n    var module = installedModules[moduleId] = {\n      i: moduleId,\n      l: false,\n      exports: {}\n    };\n    modules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n    module.l = true;\n    return module.exports;\n  }\n  __w_pdfjs_require__.m = modules;\n  __w_pdfjs_require__.c = installedModules;\n  __w_pdfjs_require__.i = function (value) {\n    return value;\n  };\n  __w_pdfjs_require__.d = function (exports, name, getter) {\n    if (!__w_pdfjs_require__.o(exports, name)) {\n      Object.defineProperty(exports, name, {\n        configurable: false,\n        enumerable: true,\n        get: getter\n      });\n    }\n  };\n  __w_pdfjs_require__.n = function (module) {\n    var getter = module && module.__esModule ? function getDefault() {\n      return module['default'];\n    } : function getModuleExports() {\n      return module;\n    };\n    __w_pdfjs_require__.d(getter, 'a', getter);\n    return getter;\n  };\n  __w_pdfjs_require__.o = function (object, property) {\n    return Object.prototype.hasOwnProperty.call(object, property);\n  };\n  __w_pdfjs_require__.p = \"\";\n  return __w_pdfjs_require__(__w_pdfjs_require__.s = 7);\n}([function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n    return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n  };\n  var _require = __w_pdfjs_require__(1),\n      assert = _require.assert;\n  function IsPropertyKey(argument) {\n    return typeof argument === 'string' || (typeof argument === 'undefined' ? 'undefined' : _typeof(argument)) === 'symbol';\n  }\n  exports.typeIsObject = function (x) {\n    return (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && x !== null || typeof x === 'function';\n  };\n  exports.createDataProperty = function (o, p, v) {\n    assert(exports.typeIsObject(o));\n    Object.defineProperty(o, p, {\n      value: v,\n      writable: true,\n      enumerable: true,\n      configurable: true\n    });\n  };\n  exports.createArrayFromList = function (elements) {\n    return elements.slice();\n  };\n  exports.ArrayBufferCopy = function (dest, destOffset, src, srcOffset, n) {\n    new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n  };\n  exports.CreateIterResultObject = function (value, done) {\n    assert(typeof done === 'boolean');\n    var obj = {};\n    Object.defineProperty(obj, 'value', {\n      value: value,\n      enumerable: true,\n      writable: true,\n      configurable: true\n    });\n    Object.defineProperty(obj, 'done', {\n      value: done,\n      enumerable: true,\n      writable: true,\n      configurable: true\n    });\n    return obj;\n  };\n  exports.IsFiniteNonNegativeNumber = function (v) {\n    if (Number.isNaN(v)) {\n      return false;\n    }\n    if (v === Infinity) {\n      return false;\n    }\n    if (v < 0) {\n      return false;\n    }\n    return true;\n  };\n  function Call(F, V, args) {\n    if (typeof F !== 'function') {\n      throw new TypeError('Argument is not a function');\n    }\n    return Function.prototype.apply.call(F, V, args);\n  }\n  exports.InvokeOrNoop = function (O, P, args) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    var method = O[P];\n    if (method === undefined) {\n      return undefined;\n    }\n    return Call(method, O, args);\n  };\n  exports.PromiseInvokeOrNoop = function (O, P, args) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    try {\n      return Promise.resolve(exports.InvokeOrNoop(O, P, args));\n    } catch (returnValueE) {\n      return Promise.reject(returnValueE);\n    }\n  };\n  exports.PromiseInvokeOrPerformFallback = function (O, P, args, F, argsF) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    assert(Array.isArray(argsF));\n    var method = void 0;\n    try {\n      method = O[P];\n    } catch (methodE) {\n      return Promise.reject(methodE);\n    }\n    if (method === undefined) {\n      return F.apply(null, argsF);\n    }\n    try {\n      return Promise.resolve(Call(method, O, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  exports.TransferArrayBuffer = function (O) {\n    return O.slice();\n  };\n  exports.ValidateAndNormalizeHighWaterMark = function (highWaterMark) {\n    highWaterMark = Number(highWaterMark);\n    if (Number.isNaN(highWaterMark) || highWaterMark < 0) {\n      throw new RangeError('highWaterMark property of a queuing strategy must be non-negative and non-NaN');\n    }\n    return highWaterMark;\n  };\n  exports.ValidateAndNormalizeQueuingStrategy = function (size, highWaterMark) {\n    if (size !== undefined && typeof size !== 'function') {\n      throw new TypeError('size property of a queuing strategy must be a function');\n    }\n    highWaterMark = exports.ValidateAndNormalizeHighWaterMark(highWaterMark);\n    return {\n      size: size,\n      highWaterMark: highWaterMark\n    };\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  function rethrowAssertionErrorRejection(e) {\n    if (e && e.constructor === AssertionError) {\n      setTimeout(function () {\n        throw e;\n      }, 0);\n    }\n  }\n  function AssertionError(message) {\n    this.name = 'AssertionError';\n    this.message = message || '';\n    this.stack = new Error().stack;\n  }\n  AssertionError.prototype = Object.create(Error.prototype);\n  AssertionError.prototype.constructor = AssertionError;\n  function assert(value, message) {\n    if (!value) {\n      throw new AssertionError(message);\n    }\n  }\n  module.exports = {\n    rethrowAssertionErrorRejection: rethrowAssertionErrorRejection,\n    AssertionError: AssertionError,\n    assert: assert\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(0),\n      InvokeOrNoop = _require.InvokeOrNoop,\n      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\n      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\n      typeIsObject = _require.typeIsObject;\n  var _require2 = __w_pdfjs_require__(1),\n      assert = _require2.assert,\n      rethrowAssertionErrorRejection = _require2.rethrowAssertionErrorRejection;\n  var _require3 = __w_pdfjs_require__(3),\n      DequeueValue = _require3.DequeueValue,\n      EnqueueValueWithSize = _require3.EnqueueValueWithSize,\n      PeekQueueValue = _require3.PeekQueueValue,\n      ResetQueue = _require3.ResetQueue;\n  var WritableStream = function () {\n    function WritableStream() {\n      var underlyingSink = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          size = _ref.size,\n          _ref$highWaterMark = _ref.highWaterMark,\n          highWaterMark = _ref$highWaterMark === undefined ? 1 : _ref$highWaterMark;\n      _classCallCheck(this, WritableStream);\n      this._state = 'writable';\n      this._storedError = undefined;\n      this._writer = undefined;\n      this._writableStreamController = undefined;\n      this._writeRequests = [];\n      this._inFlightWriteRequest = undefined;\n      this._closeRequest = undefined;\n      this._inFlightCloseRequest = undefined;\n      this._pendingAbortRequest = undefined;\n      this._backpressure = false;\n      var type = underlyingSink.type;\n      if (type !== undefined) {\n        throw new RangeError('Invalid type is specified');\n      }\n      this._writableStreamController = new WritableStreamDefaultController(this, underlyingSink, size, highWaterMark);\n      this._writableStreamController.__startSteps();\n    }\n    _createClass(WritableStream, [{\n      key: 'abort',\n      value: function abort(reason) {\n        if (IsWritableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('abort'));\n        }\n        if (IsWritableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('Cannot abort a stream that already has a writer'));\n        }\n        return WritableStreamAbort(this, reason);\n      }\n    }, {\n      key: 'getWriter',\n      value: function getWriter() {\n        if (IsWritableStream(this) === false) {\n          throw streamBrandCheckException('getWriter');\n        }\n        return AcquireWritableStreamDefaultWriter(this);\n      }\n    }, {\n      key: 'locked',\n      get: function get() {\n        if (IsWritableStream(this) === false) {\n          throw streamBrandCheckException('locked');\n        }\n        return IsWritableStreamLocked(this);\n      }\n    }]);\n    return WritableStream;\n  }();\n  module.exports = {\n    AcquireWritableStreamDefaultWriter: AcquireWritableStreamDefaultWriter,\n    IsWritableStream: IsWritableStream,\n    IsWritableStreamLocked: IsWritableStreamLocked,\n    WritableStream: WritableStream,\n    WritableStreamAbort: WritableStreamAbort,\n    WritableStreamDefaultControllerError: WritableStreamDefaultControllerError,\n    WritableStreamDefaultWriterCloseWithErrorPropagation: WritableStreamDefaultWriterCloseWithErrorPropagation,\n    WritableStreamDefaultWriterRelease: WritableStreamDefaultWriterRelease,\n    WritableStreamDefaultWriterWrite: WritableStreamDefaultWriterWrite,\n    WritableStreamCloseQueuedOrInFlight: WritableStreamCloseQueuedOrInFlight\n  };\n  function AcquireWritableStreamDefaultWriter(stream) {\n    return new WritableStreamDefaultWriter(stream);\n  }\n  function IsWritableStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function IsWritableStreamLocked(stream) {\n    assert(IsWritableStream(stream) === true, 'IsWritableStreamLocked should only be used on known writable streams');\n    if (stream._writer === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamAbort(stream, reason) {\n    var state = stream._state;\n    if (state === 'closed') {\n      return Promise.resolve(undefined);\n    }\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    var error = new TypeError('Requested to abort');\n    if (stream._pendingAbortRequest !== undefined) {\n      return Promise.reject(error);\n    }\n    assert(state === 'writable' || state === 'erroring', 'state must be writable or erroring');\n    var wasAlreadyErroring = false;\n    if (state === 'erroring') {\n      wasAlreadyErroring = true;\n      reason = undefined;\n    }\n    var promise = new Promise(function (resolve, reject) {\n      stream._pendingAbortRequest = {\n        _resolve: resolve,\n        _reject: reject,\n        _reason: reason,\n        _wasAlreadyErroring: wasAlreadyErroring\n      };\n    });\n    if (wasAlreadyErroring === false) {\n      WritableStreamStartErroring(stream, error);\n    }\n    return promise;\n  }\n  function WritableStreamAddWriteRequest(stream) {\n    assert(IsWritableStreamLocked(stream) === true);\n    assert(stream._state === 'writable');\n    var promise = new Promise(function (resolve, reject) {\n      var writeRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._writeRequests.push(writeRequest);\n    });\n    return promise;\n  }\n  function WritableStreamDealWithRejection(stream, error) {\n    var state = stream._state;\n    if (state === 'writable') {\n      WritableStreamStartErroring(stream, error);\n      return;\n    }\n    assert(state === 'erroring');\n    WritableStreamFinishErroring(stream);\n  }\n  function WritableStreamStartErroring(stream, reason) {\n    assert(stream._storedError === undefined, 'stream._storedError === undefined');\n    assert(stream._state === 'writable', 'state must be writable');\n    var controller = stream._writableStreamController;\n    assert(controller !== undefined, 'controller must not be undefined');\n    stream._state = 'erroring';\n    stream._storedError = reason;\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n    }\n    if (WritableStreamHasOperationMarkedInFlight(stream) === false && controller._started === true) {\n      WritableStreamFinishErroring(stream);\n    }\n  }\n  function WritableStreamFinishErroring(stream) {\n    assert(stream._state === 'erroring', 'stream._state === erroring');\n    assert(WritableStreamHasOperationMarkedInFlight(stream) === false, 'WritableStreamHasOperationMarkedInFlight(stream) === false');\n    stream._state = 'errored';\n    stream._writableStreamController.__errorSteps();\n    var storedError = stream._storedError;\n    for (var i = 0; i < stream._writeRequests.length; i++) {\n      var writeRequest = stream._writeRequests[i];\n      writeRequest._reject(storedError);\n    }\n    stream._writeRequests = [];\n    if (stream._pendingAbortRequest === undefined) {\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      return;\n    }\n    var abortRequest = stream._pendingAbortRequest;\n    stream._pendingAbortRequest = undefined;\n    if (abortRequest._wasAlreadyErroring === true) {\n      abortRequest._reject(storedError);\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      return;\n    }\n    var promise = stream._writableStreamController.__abortSteps(abortRequest._reason);\n    promise.then(function () {\n      abortRequest._resolve();\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    }, function (reason) {\n      abortRequest._reject(reason);\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    });\n  }\n  function WritableStreamFinishInFlightWrite(stream) {\n    assert(stream._inFlightWriteRequest !== undefined);\n    stream._inFlightWriteRequest._resolve(undefined);\n    stream._inFlightWriteRequest = undefined;\n  }\n  function WritableStreamFinishInFlightWriteWithError(stream, error) {\n    assert(stream._inFlightWriteRequest !== undefined);\n    stream._inFlightWriteRequest._reject(error);\n    stream._inFlightWriteRequest = undefined;\n    assert(stream._state === 'writable' || stream._state === 'erroring');\n    WritableStreamDealWithRejection(stream, error);\n  }\n  function WritableStreamFinishInFlightClose(stream) {\n    assert(stream._inFlightCloseRequest !== undefined);\n    stream._inFlightCloseRequest._resolve(undefined);\n    stream._inFlightCloseRequest = undefined;\n    var state = stream._state;\n    assert(state === 'writable' || state === 'erroring');\n    if (state === 'erroring') {\n      stream._storedError = undefined;\n      if (stream._pendingAbortRequest !== undefined) {\n        stream._pendingAbortRequest._resolve();\n        stream._pendingAbortRequest = undefined;\n      }\n    }\n    stream._state = 'closed';\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      defaultWriterClosedPromiseResolve(writer);\n    }\n    assert(stream._pendingAbortRequest === undefined, 'stream._pendingAbortRequest === undefined');\n    assert(stream._storedError === undefined, 'stream._storedError === undefined');\n  }\n  function WritableStreamFinishInFlightCloseWithError(stream, error) {\n    assert(stream._inFlightCloseRequest !== undefined);\n    stream._inFlightCloseRequest._reject(error);\n    stream._inFlightCloseRequest = undefined;\n    assert(stream._state === 'writable' || stream._state === 'erroring');\n    if (stream._pendingAbortRequest !== undefined) {\n      stream._pendingAbortRequest._reject(error);\n      stream._pendingAbortRequest = undefined;\n    }\n    WritableStreamDealWithRejection(stream, error);\n  }\n  function WritableStreamCloseQueuedOrInFlight(stream) {\n    if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamHasOperationMarkedInFlight(stream) {\n    if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamMarkCloseRequestInFlight(stream) {\n    assert(stream._inFlightCloseRequest === undefined);\n    assert(stream._closeRequest !== undefined);\n    stream._inFlightCloseRequest = stream._closeRequest;\n    stream._closeRequest = undefined;\n  }\n  function WritableStreamMarkFirstWriteRequestInFlight(stream) {\n    assert(stream._inFlightWriteRequest === undefined, 'there must be no pending write request');\n    assert(stream._writeRequests.length !== 0, 'writeRequests must not be empty');\n    stream._inFlightWriteRequest = stream._writeRequests.shift();\n  }\n  function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n    assert(stream._state === 'errored', '_stream_.[[state]] is `\"errored\"`');\n    if (stream._closeRequest !== undefined) {\n      assert(stream._inFlightCloseRequest === undefined);\n      stream._closeRequest._reject(stream._storedError);\n      stream._closeRequest = undefined;\n    }\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      defaultWriterClosedPromiseReject(writer, stream._storedError);\n      writer._closedPromise.catch(function () {});\n    }\n  }\n  function WritableStreamUpdateBackpressure(stream, backpressure) {\n    assert(stream._state === 'writable');\n    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n    var writer = stream._writer;\n    if (writer !== undefined && backpressure !== stream._backpressure) {\n      if (backpressure === true) {\n        defaultWriterReadyPromiseReset(writer);\n      } else {\n        assert(backpressure === false);\n        defaultWriterReadyPromiseResolve(writer);\n      }\n    }\n    stream._backpressure = backpressure;\n  }\n  var WritableStreamDefaultWriter = function () {\n    function WritableStreamDefaultWriter(stream) {\n      _classCallCheck(this, WritableStreamDefaultWriter);\n      if (IsWritableStream(stream) === false) {\n        throw new TypeError('WritableStreamDefaultWriter can only be constructed with a WritableStream instance');\n      }\n      if (IsWritableStreamLocked(stream) === true) {\n        throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n      }\n      this._ownerWritableStream = stream;\n      stream._writer = this;\n      var state = stream._state;\n      if (state === 'writable') {\n        if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._backpressure === true) {\n          defaultWriterReadyPromiseInitialize(this);\n        } else {\n          defaultWriterReadyPromiseInitializeAsResolved(this);\n        }\n        defaultWriterClosedPromiseInitialize(this);\n      } else if (state === 'erroring') {\n        defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n        this._readyPromise.catch(function () {});\n        defaultWriterClosedPromiseInitialize(this);\n      } else if (state === 'closed') {\n        defaultWriterReadyPromiseInitializeAsResolved(this);\n        defaultWriterClosedPromiseInitializeAsResolved(this);\n      } else {\n        assert(state === 'errored', 'state must be errored');\n        var storedError = stream._storedError;\n        defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n        this._readyPromise.catch(function () {});\n        defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n        this._closedPromise.catch(function () {});\n      }\n    }\n    _createClass(WritableStreamDefaultWriter, [{\n      key: 'abort',\n      value: function abort(reason) {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('abort'));\n        }\n        if (this._ownerWritableStream === undefined) {\n          return Promise.reject(defaultWriterLockException('abort'));\n        }\n        return WritableStreamDefaultWriterAbort(this, reason);\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('close'));\n        }\n        var stream = this._ownerWritableStream;\n        if (stream === undefined) {\n          return Promise.reject(defaultWriterLockException('close'));\n        }\n        if (WritableStreamCloseQueuedOrInFlight(stream) === true) {\n          return Promise.reject(new TypeError('cannot close an already-closing stream'));\n        }\n        return WritableStreamDefaultWriterClose(this);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          throw defaultWriterBrandCheckException('releaseLock');\n        }\n        var stream = this._ownerWritableStream;\n        if (stream === undefined) {\n          return;\n        }\n        assert(stream._writer !== undefined);\n        WritableStreamDefaultWriterRelease(this);\n      }\n    }, {\n      key: 'write',\n      value: function write(chunk) {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('write'));\n        }\n        if (this._ownerWritableStream === undefined) {\n          return Promise.reject(defaultWriterLockException('write to'));\n        }\n        return WritableStreamDefaultWriterWrite(this, chunk);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          throw defaultWriterBrandCheckException('desiredSize');\n        }\n        if (this._ownerWritableStream === undefined) {\n          throw defaultWriterLockException('desiredSize');\n        }\n        return WritableStreamDefaultWriterGetDesiredSize(this);\n      }\n    }, {\n      key: 'ready',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('ready'));\n        }\n        return this._readyPromise;\n      }\n    }]);\n    return WritableStreamDefaultWriter;\n  }();\n  function IsWritableStreamDefaultWriter(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamDefaultWriterAbort(writer, reason) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    return WritableStreamAbort(stream, reason);\n  }\n  function WritableStreamDefaultWriterClose(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var state = stream._state;\n    if (state === 'closed' || state === 'errored') {\n      return Promise.reject(new TypeError('The stream (in ' + state + ' state) is not in the writable state and cannot be closed'));\n    }\n    assert(state === 'writable' || state === 'erroring');\n    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n    var promise = new Promise(function (resolve, reject) {\n      var closeRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._closeRequest = closeRequest;\n    });\n    if (stream._backpressure === true && state === 'writable') {\n      defaultWriterReadyPromiseResolve(writer);\n    }\n    WritableStreamDefaultControllerClose(stream._writableStreamController);\n    return promise;\n  }\n  function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var state = stream._state;\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n      return Promise.resolve();\n    }\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(state === 'writable' || state === 'erroring');\n    return WritableStreamDefaultWriterClose(writer);\n  }\n  function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n    if (writer._closedPromiseState === 'pending') {\n      defaultWriterClosedPromiseReject(writer, error);\n    } else {\n      defaultWriterClosedPromiseResetToRejected(writer, error);\n    }\n    writer._closedPromise.catch(function () {});\n  }\n  function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n    if (writer._readyPromiseState === 'pending') {\n      defaultWriterReadyPromiseReject(writer, error);\n    } else {\n      defaultWriterReadyPromiseResetToRejected(writer, error);\n    }\n    writer._readyPromise.catch(function () {});\n  }\n  function WritableStreamDefaultWriterGetDesiredSize(writer) {\n    var stream = writer._ownerWritableStream;\n    var state = stream._state;\n    if (state === 'errored' || state === 'erroring') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n  }\n  function WritableStreamDefaultWriterRelease(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    assert(stream._writer === writer);\n    var releasedError = new TypeError('Writer was released and can no longer be used to monitor the stream\\'s closedness');\n    WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n    WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n    stream._writer = undefined;\n    writer._ownerWritableStream = undefined;\n  }\n  function WritableStreamDefaultWriterWrite(writer, chunk) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var controller = stream._writableStreamController;\n    var chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n    if (stream !== writer._ownerWritableStream) {\n      return Promise.reject(defaultWriterLockException('write to'));\n    }\n    var state = stream._state;\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n      return Promise.reject(new TypeError('The stream is closing or closed and cannot be written to'));\n    }\n    if (state === 'erroring') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(state === 'writable');\n    var promise = WritableStreamAddWriteRequest(stream);\n    WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n    return promise;\n  }\n  var WritableStreamDefaultController = function () {\n    function WritableStreamDefaultController(stream, underlyingSink, size, highWaterMark) {\n      _classCallCheck(this, WritableStreamDefaultController);\n      if (IsWritableStream(stream) === false) {\n        throw new TypeError('WritableStreamDefaultController can only be constructed with a WritableStream instance');\n      }\n      if (stream._writableStreamController !== undefined) {\n        throw new TypeError('WritableStreamDefaultController instances can only be created by the WritableStream constructor');\n      }\n      this._controlledWritableStream = stream;\n      this._underlyingSink = underlyingSink;\n      this._queue = undefined;\n      this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._started = false;\n      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\n      this._strategySize = normalizedStrategy.size;\n      this._strategyHWM = normalizedStrategy.highWaterMark;\n      var backpressure = WritableStreamDefaultControllerGetBackpressure(this);\n      WritableStreamUpdateBackpressure(stream, backpressure);\n    }\n    _createClass(WritableStreamDefaultController, [{\n      key: 'error',\n      value: function error(e) {\n        if (IsWritableStreamDefaultController(this) === false) {\n          throw new TypeError('WritableStreamDefaultController.prototype.error can only be used on a WritableStreamDefaultController');\n        }\n        var state = this._controlledWritableStream._state;\n        if (state !== 'writable') {\n          return;\n        }\n        WritableStreamDefaultControllerError(this, e);\n      }\n    }, {\n      key: '__abortSteps',\n      value: function __abortSteps(reason) {\n        return PromiseInvokeOrNoop(this._underlyingSink, 'abort', [reason]);\n      }\n    }, {\n      key: '__errorSteps',\n      value: function __errorSteps() {\n        ResetQueue(this);\n      }\n    }, {\n      key: '__startSteps',\n      value: function __startSteps() {\n        var _this = this;\n        var startResult = InvokeOrNoop(this._underlyingSink, 'start', [this]);\n        var stream = this._controlledWritableStream;\n        Promise.resolve(startResult).then(function () {\n          assert(stream._state === 'writable' || stream._state === 'erroring');\n          _this._started = true;\n          WritableStreamDefaultControllerAdvanceQueueIfNeeded(_this);\n        }, function (r) {\n          assert(stream._state === 'writable' || stream._state === 'erroring');\n          _this._started = true;\n          WritableStreamDealWithRejection(stream, r);\n        }).catch(rethrowAssertionErrorRejection);\n      }\n    }]);\n    return WritableStreamDefaultController;\n  }();\n  function WritableStreamDefaultControllerClose(controller) {\n    EnqueueValueWithSize(controller, 'close', 0);\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n  }\n  function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n    var strategySize = controller._strategySize;\n    if (strategySize === undefined) {\n      return 1;\n    }\n    try {\n      return strategySize(chunk);\n    } catch (chunkSizeE) {\n      WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n      return 1;\n    }\n  }\n  function WritableStreamDefaultControllerGetDesiredSize(controller) {\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n    var writeRecord = { chunk: chunk };\n    try {\n      EnqueueValueWithSize(controller, writeRecord, chunkSize);\n    } catch (enqueueE) {\n      WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n      return;\n    }\n    var stream = controller._controlledWritableStream;\n    if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._state === 'writable') {\n      var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n      WritableStreamUpdateBackpressure(stream, backpressure);\n    }\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n  }\n  function IsWritableStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSink')) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n    var stream = controller._controlledWritableStream;\n    if (controller._started === false) {\n      return;\n    }\n    if (stream._inFlightWriteRequest !== undefined) {\n      return;\n    }\n    var state = stream._state;\n    if (state === 'closed' || state === 'errored') {\n      return;\n    }\n    if (state === 'erroring') {\n      WritableStreamFinishErroring(stream);\n      return;\n    }\n    if (controller._queue.length === 0) {\n      return;\n    }\n    var writeRecord = PeekQueueValue(controller);\n    if (writeRecord === 'close') {\n      WritableStreamDefaultControllerProcessClose(controller);\n    } else {\n      WritableStreamDefaultControllerProcessWrite(controller, writeRecord.chunk);\n    }\n  }\n  function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n    if (controller._controlledWritableStream._state === 'writable') {\n      WritableStreamDefaultControllerError(controller, error);\n    }\n  }\n  function WritableStreamDefaultControllerProcessClose(controller) {\n    var stream = controller._controlledWritableStream;\n    WritableStreamMarkCloseRequestInFlight(stream);\n    DequeueValue(controller);\n    assert(controller._queue.length === 0, 'queue must be empty once the final write record is dequeued');\n    var sinkClosePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'close', []);\n    sinkClosePromise.then(function () {\n      WritableStreamFinishInFlightClose(stream);\n    }, function (reason) {\n      WritableStreamFinishInFlightCloseWithError(stream, reason);\n    }).catch(rethrowAssertionErrorRejection);\n  }\n  function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n    var stream = controller._controlledWritableStream;\n    WritableStreamMarkFirstWriteRequestInFlight(stream);\n    var sinkWritePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'write', [chunk, controller]);\n    sinkWritePromise.then(function () {\n      WritableStreamFinishInFlightWrite(stream);\n      var state = stream._state;\n      assert(state === 'writable' || state === 'erroring');\n      DequeueValue(controller);\n      if (WritableStreamCloseQueuedOrInFlight(stream) === false && state === 'writable') {\n        var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n      }\n      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }, function (reason) {\n      WritableStreamFinishInFlightWriteWithError(stream, reason);\n    }).catch(rethrowAssertionErrorRejection);\n  }\n  function WritableStreamDefaultControllerGetBackpressure(controller) {\n    var desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n    return desiredSize <= 0;\n  }\n  function WritableStreamDefaultControllerError(controller, error) {\n    var stream = controller._controlledWritableStream;\n    assert(stream._state === 'writable');\n    WritableStreamStartErroring(stream, error);\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('WritableStream.prototype.' + name + ' can only be used on a WritableStream');\n  }\n  function defaultWriterBrandCheckException(name) {\n    return new TypeError('WritableStreamDefaultWriter.prototype.' + name + ' can only be used on a WritableStreamDefaultWriter');\n  }\n  function defaultWriterLockException(name) {\n    return new TypeError('Cannot ' + name + ' a stream using a released writer');\n  }\n  function defaultWriterClosedPromiseInitialize(writer) {\n    writer._closedPromise = new Promise(function (resolve, reject) {\n      writer._closedPromise_resolve = resolve;\n      writer._closedPromise_reject = reject;\n      writer._closedPromiseState = 'pending';\n    });\n  }\n  function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n    writer._closedPromise = Promise.reject(reason);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseInitializeAsResolved(writer) {\n    writer._closedPromise = Promise.resolve(undefined);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'resolved';\n  }\n  function defaultWriterClosedPromiseReject(writer, reason) {\n    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\n    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\n    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\n    writer._closedPromise_reject(reason);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseResetToRejected(writer, reason) {\n    assert(writer._closedPromise_resolve === undefined, 'writer._closedPromise_resolve === undefined');\n    assert(writer._closedPromise_reject === undefined, 'writer._closedPromise_reject === undefined');\n    assert(writer._closedPromiseState !== 'pending', 'writer._closedPromiseState is not pending');\n    writer._closedPromise = Promise.reject(reason);\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseResolve(writer) {\n    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\n    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\n    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\n    writer._closedPromise_resolve(undefined);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'resolved';\n  }\n  function defaultWriterReadyPromiseInitialize(writer) {\n    writer._readyPromise = new Promise(function (resolve, reject) {\n      writer._readyPromise_resolve = resolve;\n      writer._readyPromise_reject = reject;\n    });\n    writer._readyPromiseState = 'pending';\n  }\n  function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n    writer._readyPromise = Promise.reject(reason);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseInitializeAsResolved(writer) {\n    writer._readyPromise = Promise.resolve(undefined);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'fulfilled';\n  }\n  function defaultWriterReadyPromiseReject(writer, reason) {\n    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\n    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\n    writer._readyPromise_reject(reason);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseReset(writer) {\n    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\n    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\n    writer._readyPromise = new Promise(function (resolve, reject) {\n      writer._readyPromise_resolve = resolve;\n      writer._readyPromise_reject = reject;\n    });\n    writer._readyPromiseState = 'pending';\n  }\n  function defaultWriterReadyPromiseResetToRejected(writer, reason) {\n    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\n    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\n    writer._readyPromise = Promise.reject(reason);\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseResolve(writer) {\n    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\n    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\n    writer._readyPromise_resolve(undefined);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'fulfilled';\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _require = __w_pdfjs_require__(0),\n      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber;\n  var _require2 = __w_pdfjs_require__(1),\n      assert = _require2.assert;\n  exports.DequeueValue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: DequeueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    assert(container._queue.length > 0, 'Spec-level failure: should never dequeue from an empty queue.');\n    var pair = container._queue.shift();\n    container._queueTotalSize -= pair.size;\n    if (container._queueTotalSize < 0) {\n      container._queueTotalSize = 0;\n    }\n    return pair.value;\n  };\n  exports.EnqueueValueWithSize = function (container, value, size) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: EnqueueValueWithSize should only be used on containers with [[queue]] and ' + '[[queueTotalSize]].');\n    size = Number(size);\n    if (!IsFiniteNonNegativeNumber(size)) {\n      throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n    }\n    container._queue.push({\n      value: value,\n      size: size\n    });\n    container._queueTotalSize += size;\n  };\n  exports.PeekQueueValue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: PeekQueueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    assert(container._queue.length > 0, 'Spec-level failure: should never peek at an empty queue.');\n    var pair = container._queue[0];\n    return pair.value;\n  };\n  exports.ResetQueue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: ResetQueue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    container._queue = [];\n    container._queueTotalSize = 0;\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(0),\n      ArrayBufferCopy = _require.ArrayBufferCopy,\n      CreateIterResultObject = _require.CreateIterResultObject,\n      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber,\n      InvokeOrNoop = _require.InvokeOrNoop,\n      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\n      TransferArrayBuffer = _require.TransferArrayBuffer,\n      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\n      ValidateAndNormalizeHighWaterMark = _require.ValidateAndNormalizeHighWaterMark;\n  var _require2 = __w_pdfjs_require__(0),\n      createArrayFromList = _require2.createArrayFromList,\n      createDataProperty = _require2.createDataProperty,\n      typeIsObject = _require2.typeIsObject;\n  var _require3 = __w_pdfjs_require__(1),\n      assert = _require3.assert,\n      rethrowAssertionErrorRejection = _require3.rethrowAssertionErrorRejection;\n  var _require4 = __w_pdfjs_require__(3),\n      DequeueValue = _require4.DequeueValue,\n      EnqueueValueWithSize = _require4.EnqueueValueWithSize,\n      ResetQueue = _require4.ResetQueue;\n  var _require5 = __w_pdfjs_require__(2),\n      AcquireWritableStreamDefaultWriter = _require5.AcquireWritableStreamDefaultWriter,\n      IsWritableStream = _require5.IsWritableStream,\n      IsWritableStreamLocked = _require5.IsWritableStreamLocked,\n      WritableStreamAbort = _require5.WritableStreamAbort,\n      WritableStreamDefaultWriterCloseWithErrorPropagation = _require5.WritableStreamDefaultWriterCloseWithErrorPropagation,\n      WritableStreamDefaultWriterRelease = _require5.WritableStreamDefaultWriterRelease,\n      WritableStreamDefaultWriterWrite = _require5.WritableStreamDefaultWriterWrite,\n      WritableStreamCloseQueuedOrInFlight = _require5.WritableStreamCloseQueuedOrInFlight;\n  var ReadableStream = function () {\n    function ReadableStream() {\n      var underlyingSource = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          size = _ref.size,\n          highWaterMark = _ref.highWaterMark;\n      _classCallCheck(this, ReadableStream);\n      this._state = 'readable';\n      this._reader = undefined;\n      this._storedError = undefined;\n      this._disturbed = false;\n      this._readableStreamController = undefined;\n      var type = underlyingSource.type;\n      var typeString = String(type);\n      if (typeString === 'bytes') {\n        if (highWaterMark === undefined) {\n          highWaterMark = 0;\n        }\n        this._readableStreamController = new ReadableByteStreamController(this, underlyingSource, highWaterMark);\n      } else if (type === undefined) {\n        if (highWaterMark === undefined) {\n          highWaterMark = 1;\n        }\n        this._readableStreamController = new ReadableStreamDefaultController(this, underlyingSource, size, highWaterMark);\n      } else {\n        throw new RangeError('Invalid type is specified');\n      }\n    }\n    _createClass(ReadableStream, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (IsReadableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('cancel'));\n        }\n        if (IsReadableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('Cannot cancel a stream that already has a reader'));\n        }\n        return ReadableStreamCancel(this, reason);\n      }\n    }, {\n      key: 'getReader',\n      value: function getReader() {\n        var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            mode = _ref2.mode;\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('getReader');\n        }\n        if (mode === undefined) {\n          return AcquireReadableStreamDefaultReader(this);\n        }\n        mode = String(mode);\n        if (mode === 'byob') {\n          return AcquireReadableStreamBYOBReader(this);\n        }\n        throw new RangeError('Invalid mode is specified');\n      }\n    }, {\n      key: 'pipeThrough',\n      value: function pipeThrough(_ref3, options) {\n        var writable = _ref3.writable,\n            readable = _ref3.readable;\n        var promise = this.pipeTo(writable, options);\n        ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise);\n        return readable;\n      }\n    }, {\n      key: 'pipeTo',\n      value: function pipeTo(dest) {\n        var _this = this;\n        var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n            preventClose = _ref4.preventClose,\n            preventAbort = _ref4.preventAbort,\n            preventCancel = _ref4.preventCancel;\n        if (IsReadableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('pipeTo'));\n        }\n        if (IsWritableStream(dest) === false) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo\\'s first argument must be a WritableStream'));\n        }\n        preventClose = Boolean(preventClose);\n        preventAbort = Boolean(preventAbort);\n        preventCancel = Boolean(preventCancel);\n        if (IsReadableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n        }\n        if (IsWritableStreamLocked(dest) === true) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n        }\n        var reader = AcquireReadableStreamDefaultReader(this);\n        var writer = AcquireWritableStreamDefaultWriter(dest);\n        var shuttingDown = false;\n        var currentWrite = Promise.resolve();\n        return new Promise(function (resolve, reject) {\n          function pipeLoop() {\n            currentWrite = Promise.resolve();\n            if (shuttingDown === true) {\n              return Promise.resolve();\n            }\n            return writer._readyPromise.then(function () {\n              return ReadableStreamDefaultReaderRead(reader).then(function (_ref5) {\n                var value = _ref5.value,\n                    done = _ref5.done;\n                if (done === true) {\n                  return;\n                }\n                currentWrite = WritableStreamDefaultWriterWrite(writer, value).catch(function () {});\n              });\n            }).then(pipeLoop);\n          }\n          isOrBecomesErrored(_this, reader._closedPromise, function (storedError) {\n            if (preventAbort === false) {\n              shutdownWithAction(function () {\n                return WritableStreamAbort(dest, storedError);\n              }, true, storedError);\n            } else {\n              shutdown(true, storedError);\n            }\n          });\n          isOrBecomesErrored(dest, writer._closedPromise, function (storedError) {\n            if (preventCancel === false) {\n              shutdownWithAction(function () {\n                return ReadableStreamCancel(_this, storedError);\n              }, true, storedError);\n            } else {\n              shutdown(true, storedError);\n            }\n          });\n          isOrBecomesClosed(_this, reader._closedPromise, function () {\n            if (preventClose === false) {\n              shutdownWithAction(function () {\n                return WritableStreamDefaultWriterCloseWithErrorPropagation(writer);\n              });\n            } else {\n              shutdown();\n            }\n          });\n          if (WritableStreamCloseQueuedOrInFlight(dest) === true || dest._state === 'closed') {\n            var destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n            if (preventCancel === false) {\n              shutdownWithAction(function () {\n                return ReadableStreamCancel(_this, destClosed);\n              }, true, destClosed);\n            } else {\n              shutdown(true, destClosed);\n            }\n          }\n          pipeLoop().catch(function (err) {\n            currentWrite = Promise.resolve();\n            rethrowAssertionErrorRejection(err);\n          });\n          function waitForWritesToFinish() {\n            var oldCurrentWrite = currentWrite;\n            return currentWrite.then(function () {\n              return oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined;\n            });\n          }\n          function isOrBecomesErrored(stream, promise, action) {\n            if (stream._state === 'errored') {\n              action(stream._storedError);\n            } else {\n              promise.catch(action).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function isOrBecomesClosed(stream, promise, action) {\n            if (stream._state === 'closed') {\n              action();\n            } else {\n              promise.then(action).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function shutdownWithAction(action, originalIsError, originalError) {\n            if (shuttingDown === true) {\n              return;\n            }\n            shuttingDown = true;\n            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n              waitForWritesToFinish().then(doTheRest);\n            } else {\n              doTheRest();\n            }\n            function doTheRest() {\n              action().then(function () {\n                return finalize(originalIsError, originalError);\n              }, function (newError) {\n                return finalize(true, newError);\n              }).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function shutdown(isError, error) {\n            if (shuttingDown === true) {\n              return;\n            }\n            shuttingDown = true;\n            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n              waitForWritesToFinish().then(function () {\n                return finalize(isError, error);\n              }).catch(rethrowAssertionErrorRejection);\n            } else {\n              finalize(isError, error);\n            }\n          }\n          function finalize(isError, error) {\n            WritableStreamDefaultWriterRelease(writer);\n            ReadableStreamReaderGenericRelease(reader);\n            if (isError) {\n              reject(error);\n            } else {\n              resolve(undefined);\n            }\n          }\n        });\n      }\n    }, {\n      key: 'tee',\n      value: function tee() {\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('tee');\n        }\n        var branches = ReadableStreamTee(this, false);\n        return createArrayFromList(branches);\n      }\n    }, {\n      key: 'locked',\n      get: function get() {\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('locked');\n        }\n        return IsReadableStreamLocked(this);\n      }\n    }]);\n    return ReadableStream;\n  }();\n  module.exports = {\n    ReadableStream: ReadableStream,\n    IsReadableStreamDisturbed: IsReadableStreamDisturbed,\n    ReadableStreamDefaultControllerClose: ReadableStreamDefaultControllerClose,\n    ReadableStreamDefaultControllerEnqueue: ReadableStreamDefaultControllerEnqueue,\n    ReadableStreamDefaultControllerError: ReadableStreamDefaultControllerError,\n    ReadableStreamDefaultControllerGetDesiredSize: ReadableStreamDefaultControllerGetDesiredSize\n  };\n  function AcquireReadableStreamBYOBReader(stream) {\n    return new ReadableStreamBYOBReader(stream);\n  }\n  function AcquireReadableStreamDefaultReader(stream) {\n    return new ReadableStreamDefaultReader(stream);\n  }\n  function IsReadableStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamDisturbed(stream) {\n    assert(IsReadableStream(stream) === true, 'IsReadableStreamDisturbed should only be used on known readable streams');\n    return stream._disturbed;\n  }\n  function IsReadableStreamLocked(stream) {\n    assert(IsReadableStream(stream) === true, 'IsReadableStreamLocked should only be used on known readable streams');\n    if (stream._reader === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamTee(stream, cloneForBranch2) {\n    assert(IsReadableStream(stream) === true);\n    assert(typeof cloneForBranch2 === 'boolean');\n    var reader = AcquireReadableStreamDefaultReader(stream);\n    var teeState = {\n      closedOrErrored: false,\n      canceled1: false,\n      canceled2: false,\n      reason1: undefined,\n      reason2: undefined\n    };\n    teeState.promise = new Promise(function (resolve) {\n      teeState._resolve = resolve;\n    });\n    var pull = create_ReadableStreamTeePullFunction();\n    pull._reader = reader;\n    pull._teeState = teeState;\n    pull._cloneForBranch2 = cloneForBranch2;\n    var cancel1 = create_ReadableStreamTeeBranch1CancelFunction();\n    cancel1._stream = stream;\n    cancel1._teeState = teeState;\n    var cancel2 = create_ReadableStreamTeeBranch2CancelFunction();\n    cancel2._stream = stream;\n    cancel2._teeState = teeState;\n    var underlyingSource1 = Object.create(Object.prototype);\n    createDataProperty(underlyingSource1, 'pull', pull);\n    createDataProperty(underlyingSource1, 'cancel', cancel1);\n    var branch1Stream = new ReadableStream(underlyingSource1);\n    var underlyingSource2 = Object.create(Object.prototype);\n    createDataProperty(underlyingSource2, 'pull', pull);\n    createDataProperty(underlyingSource2, 'cancel', cancel2);\n    var branch2Stream = new ReadableStream(underlyingSource2);\n    pull._branch1 = branch1Stream._readableStreamController;\n    pull._branch2 = branch2Stream._readableStreamController;\n    reader._closedPromise.catch(function (r) {\n      if (teeState.closedOrErrored === true) {\n        return;\n      }\n      ReadableStreamDefaultControllerError(pull._branch1, r);\n      ReadableStreamDefaultControllerError(pull._branch2, r);\n      teeState.closedOrErrored = true;\n    });\n    return [branch1Stream, branch2Stream];\n  }\n  function create_ReadableStreamTeePullFunction() {\n    function f() {\n      var reader = f._reader,\n          branch1 = f._branch1,\n          branch2 = f._branch2,\n          teeState = f._teeState;\n      return ReadableStreamDefaultReaderRead(reader).then(function (result) {\n        assert(typeIsObject(result));\n        var value = result.value;\n        var done = result.done;\n        assert(typeof done === 'boolean');\n        if (done === true && teeState.closedOrErrored === false) {\n          if (teeState.canceled1 === false) {\n            ReadableStreamDefaultControllerClose(branch1);\n          }\n          if (teeState.canceled2 === false) {\n            ReadableStreamDefaultControllerClose(branch2);\n          }\n          teeState.closedOrErrored = true;\n        }\n        if (teeState.closedOrErrored === true) {\n          return;\n        }\n        var value1 = value;\n        var value2 = value;\n        if (teeState.canceled1 === false) {\n          ReadableStreamDefaultControllerEnqueue(branch1, value1);\n        }\n        if (teeState.canceled2 === false) {\n          ReadableStreamDefaultControllerEnqueue(branch2, value2);\n        }\n      });\n    }\n    return f;\n  }\n  function create_ReadableStreamTeeBranch1CancelFunction() {\n    function f(reason) {\n      var stream = f._stream,\n          teeState = f._teeState;\n      teeState.canceled1 = true;\n      teeState.reason1 = reason;\n      if (teeState.canceled2 === true) {\n        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\n        var cancelResult = ReadableStreamCancel(stream, compositeReason);\n        teeState._resolve(cancelResult);\n      }\n      return teeState.promise;\n    }\n    return f;\n  }\n  function create_ReadableStreamTeeBranch2CancelFunction() {\n    function f(reason) {\n      var stream = f._stream,\n          teeState = f._teeState;\n      teeState.canceled2 = true;\n      teeState.reason2 = reason;\n      if (teeState.canceled1 === true) {\n        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\n        var cancelResult = ReadableStreamCancel(stream, compositeReason);\n        teeState._resolve(cancelResult);\n      }\n      return teeState.promise;\n    }\n    return f;\n  }\n  function ReadableStreamAddReadIntoRequest(stream) {\n    assert(IsReadableStreamBYOBReader(stream._reader) === true);\n    assert(stream._state === 'readable' || stream._state === 'closed');\n    var promise = new Promise(function (resolve, reject) {\n      var readIntoRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._reader._readIntoRequests.push(readIntoRequest);\n    });\n    return promise;\n  }\n  function ReadableStreamAddReadRequest(stream) {\n    assert(IsReadableStreamDefaultReader(stream._reader) === true);\n    assert(stream._state === 'readable');\n    var promise = new Promise(function (resolve, reject) {\n      var readRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._reader._readRequests.push(readRequest);\n    });\n    return promise;\n  }\n  function ReadableStreamCancel(stream, reason) {\n    stream._disturbed = true;\n    if (stream._state === 'closed') {\n      return Promise.resolve(undefined);\n    }\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    ReadableStreamClose(stream);\n    var sourceCancelPromise = stream._readableStreamController.__cancelSteps(reason);\n    return sourceCancelPromise.then(function () {\n      return undefined;\n    });\n  }\n  function ReadableStreamClose(stream) {\n    assert(stream._state === 'readable');\n    stream._state = 'closed';\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return undefined;\n    }\n    if (IsReadableStreamDefaultReader(reader) === true) {\n      for (var i = 0; i < reader._readRequests.length; i++) {\n        var _resolve = reader._readRequests[i]._resolve;\n        _resolve(CreateIterResultObject(undefined, true));\n      }\n      reader._readRequests = [];\n    }\n    defaultReaderClosedPromiseResolve(reader);\n    return undefined;\n  }\n  function ReadableStreamError(stream, e) {\n    assert(IsReadableStream(stream) === true, 'stream must be ReadableStream');\n    assert(stream._state === 'readable', 'state must be readable');\n    stream._state = 'errored';\n    stream._storedError = e;\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return undefined;\n    }\n    if (IsReadableStreamDefaultReader(reader) === true) {\n      for (var i = 0; i < reader._readRequests.length; i++) {\n        var readRequest = reader._readRequests[i];\n        readRequest._reject(e);\n      }\n      reader._readRequests = [];\n    } else {\n      assert(IsReadableStreamBYOBReader(reader), 'reader must be ReadableStreamBYOBReader');\n      for (var _i = 0; _i < reader._readIntoRequests.length; _i++) {\n        var readIntoRequest = reader._readIntoRequests[_i];\n        readIntoRequest._reject(e);\n      }\n      reader._readIntoRequests = [];\n    }\n    defaultReaderClosedPromiseReject(reader, e);\n    reader._closedPromise.catch(function () {});\n  }\n  function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n    var reader = stream._reader;\n    assert(reader._readIntoRequests.length > 0);\n    var readIntoRequest = reader._readIntoRequests.shift();\n    readIntoRequest._resolve(CreateIterResultObject(chunk, done));\n  }\n  function ReadableStreamFulfillReadRequest(stream, chunk, done) {\n    var reader = stream._reader;\n    assert(reader._readRequests.length > 0);\n    var readRequest = reader._readRequests.shift();\n    readRequest._resolve(CreateIterResultObject(chunk, done));\n  }\n  function ReadableStreamGetNumReadIntoRequests(stream) {\n    return stream._reader._readIntoRequests.length;\n  }\n  function ReadableStreamGetNumReadRequests(stream) {\n    return stream._reader._readRequests.length;\n  }\n  function ReadableStreamHasBYOBReader(stream) {\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return false;\n    }\n    if (IsReadableStreamBYOBReader(reader) === false) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamHasDefaultReader(stream) {\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return false;\n    }\n    if (IsReadableStreamDefaultReader(reader) === false) {\n      return false;\n    }\n    return true;\n  }\n  var ReadableStreamDefaultReader = function () {\n    function ReadableStreamDefaultReader(stream) {\n      _classCallCheck(this, ReadableStreamDefaultReader);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableStreamDefaultReader can only be constructed with a ReadableStream instance');\n      }\n      if (IsReadableStreamLocked(stream) === true) {\n        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n      }\n      ReadableStreamReaderGenericInitialize(this, stream);\n      this._readRequests = [];\n    }\n    _createClass(ReadableStreamDefaultReader, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('cancel'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('cancel'));\n        }\n        return ReadableStreamReaderGenericCancel(this, reason);\n      }\n    }, {\n      key: 'read',\n      value: function read() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('read'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('read from'));\n        }\n        return ReadableStreamDefaultReaderRead(this);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          throw defaultReaderBrandCheckException('releaseLock');\n        }\n        if (this._ownerReadableStream === undefined) {\n          return;\n        }\n        if (this._readRequests.length > 0) {\n          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n        }\n        ReadableStreamReaderGenericRelease(this);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }]);\n    return ReadableStreamDefaultReader;\n  }();\n  var ReadableStreamBYOBReader = function () {\n    function ReadableStreamBYOBReader(stream) {\n      _classCallCheck(this, ReadableStreamBYOBReader);\n      if (!IsReadableStream(stream)) {\n        throw new TypeError('ReadableStreamBYOBReader can only be constructed with a ReadableStream instance given a ' + 'byte source');\n      }\n      if (IsReadableByteStreamController(stream._readableStreamController) === false) {\n        throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' + 'source');\n      }\n      if (IsReadableStreamLocked(stream)) {\n        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n      }\n      ReadableStreamReaderGenericInitialize(this, stream);\n      this._readIntoRequests = [];\n    }\n    _createClass(ReadableStreamBYOBReader, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('cancel'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('cancel'));\n        }\n        return ReadableStreamReaderGenericCancel(this, reason);\n      }\n    }, {\n      key: 'read',\n      value: function read(view) {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('read'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('read from'));\n        }\n        if (!ArrayBuffer.isView(view)) {\n          return Promise.reject(new TypeError('view must be an array buffer view'));\n        }\n        if (view.byteLength === 0) {\n          return Promise.reject(new TypeError('view must have non-zero byteLength'));\n        }\n        return ReadableStreamBYOBReaderRead(this, view);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (!IsReadableStreamBYOBReader(this)) {\n          throw byobReaderBrandCheckException('releaseLock');\n        }\n        if (this._ownerReadableStream === undefined) {\n          return;\n        }\n        if (this._readIntoRequests.length > 0) {\n          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n        }\n        ReadableStreamReaderGenericRelease(this);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }]);\n    return ReadableStreamBYOBReader;\n  }();\n  function IsReadableStreamBYOBReader(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamDefaultReader(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamReaderGenericInitialize(reader, stream) {\n    reader._ownerReadableStream = stream;\n    stream._reader = reader;\n    if (stream._state === 'readable') {\n      defaultReaderClosedPromiseInitialize(reader);\n    } else if (stream._state === 'closed') {\n      defaultReaderClosedPromiseInitializeAsResolved(reader);\n    } else {\n      assert(stream._state === 'errored', 'state must be errored');\n      defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n      reader._closedPromise.catch(function () {});\n    }\n  }\n  function ReadableStreamReaderGenericCancel(reader, reason) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    return ReadableStreamCancel(stream, reason);\n  }\n  function ReadableStreamReaderGenericRelease(reader) {\n    assert(reader._ownerReadableStream !== undefined);\n    assert(reader._ownerReadableStream._reader === reader);\n    if (reader._ownerReadableStream._state === 'readable') {\n      defaultReaderClosedPromiseReject(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n    } else {\n      defaultReaderClosedPromiseResetToRejected(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n    }\n    reader._closedPromise.catch(function () {});\n    reader._ownerReadableStream._reader = undefined;\n    reader._ownerReadableStream = undefined;\n  }\n  function ReadableStreamBYOBReaderRead(reader, view) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    stream._disturbed = true;\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    return ReadableByteStreamControllerPullInto(stream._readableStreamController, view);\n  }\n  function ReadableStreamDefaultReaderRead(reader) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    stream._disturbed = true;\n    if (stream._state === 'closed') {\n      return Promise.resolve(CreateIterResultObject(undefined, true));\n    }\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(stream._state === 'readable');\n    return stream._readableStreamController.__pullSteps();\n  }\n  var ReadableStreamDefaultController = function () {\n    function ReadableStreamDefaultController(stream, underlyingSource, size, highWaterMark) {\n      _classCallCheck(this, ReadableStreamDefaultController);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableStreamDefaultController can only be constructed with a ReadableStream instance');\n      }\n      if (stream._readableStreamController !== undefined) {\n        throw new TypeError('ReadableStreamDefaultController instances can only be created by the ReadableStream constructor');\n      }\n      this._controlledReadableStream = stream;\n      this._underlyingSource = underlyingSource;\n      this._queue = undefined;\n      this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._started = false;\n      this._closeRequested = false;\n      this._pullAgain = false;\n      this._pulling = false;\n      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\n      this._strategySize = normalizedStrategy.size;\n      this._strategyHWM = normalizedStrategy.highWaterMark;\n      var controller = this;\n      var startResult = InvokeOrNoop(underlyingSource, 'start', [this]);\n      Promise.resolve(startResult).then(function () {\n        controller._started = true;\n        assert(controller._pulling === false);\n        assert(controller._pullAgain === false);\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }, function (r) {\n        ReadableStreamDefaultControllerErrorIfNeeded(controller, r);\n      }).catch(rethrowAssertionErrorRejection);\n    }\n    _createClass(ReadableStreamDefaultController, [{\n      key: 'close',\n      value: function close() {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('close');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('The stream has already been closed; do not close it again!');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\n        }\n        ReadableStreamDefaultControllerClose(this);\n      }\n    }, {\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('enqueue');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('stream is closed or draining');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\n        }\n        return ReadableStreamDefaultControllerEnqueue(this, chunk);\n      }\n    }, {\n      key: 'error',\n      value: function error(e) {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('error');\n        }\n        var stream = this._controlledReadableStream;\n        if (stream._state !== 'readable') {\n          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\n        }\n        ReadableStreamDefaultControllerError(this, e);\n      }\n    }, {\n      key: '__cancelSteps',\n      value: function __cancelSteps(reason) {\n        ResetQueue(this);\n        return PromiseInvokeOrNoop(this._underlyingSource, 'cancel', [reason]);\n      }\n    }, {\n      key: '__pullSteps',\n      value: function __pullSteps() {\n        var stream = this._controlledReadableStream;\n        if (this._queue.length > 0) {\n          var chunk = DequeueValue(this);\n          if (this._closeRequested === true && this._queue.length === 0) {\n            ReadableStreamClose(stream);\n          } else {\n            ReadableStreamDefaultControllerCallPullIfNeeded(this);\n          }\n          return Promise.resolve(CreateIterResultObject(chunk, false));\n        }\n        var pendingPromise = ReadableStreamAddReadRequest(stream);\n        ReadableStreamDefaultControllerCallPullIfNeeded(this);\n        return pendingPromise;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('desiredSize');\n        }\n        return ReadableStreamDefaultControllerGetDesiredSize(this);\n      }\n    }]);\n    return ReadableStreamDefaultController;\n  }();\n  function IsReadableStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSource')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n    var shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n    if (shouldPull === false) {\n      return undefined;\n    }\n    if (controller._pulling === true) {\n      controller._pullAgain = true;\n      return undefined;\n    }\n    assert(controller._pullAgain === false);\n    controller._pulling = true;\n    var pullPromise = PromiseInvokeOrNoop(controller._underlyingSource, 'pull', [controller]);\n    pullPromise.then(function () {\n      controller._pulling = false;\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        return ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }\n      return undefined;\n    }, function (e) {\n      ReadableStreamDefaultControllerErrorIfNeeded(controller, e);\n    }).catch(rethrowAssertionErrorRejection);\n    return undefined;\n  }\n  function ReadableStreamDefaultControllerShouldCallPull(controller) {\n    var stream = controller._controlledReadableStream;\n    if (stream._state === 'closed' || stream._state === 'errored') {\n      return false;\n    }\n    if (controller._closeRequested === true) {\n      return false;\n    }\n    if (controller._started === false) {\n      return false;\n    }\n    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      return true;\n    }\n    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n    if (desiredSize > 0) {\n      return true;\n    }\n    return false;\n  }\n  function ReadableStreamDefaultControllerClose(controller) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    controller._closeRequested = true;\n    if (controller._queue.length === 0) {\n      ReadableStreamClose(stream);\n    }\n  }\n  function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      ReadableStreamFulfillReadRequest(stream, chunk, false);\n    } else {\n      var chunkSize = 1;\n      if (controller._strategySize !== undefined) {\n        var strategySize = controller._strategySize;\n        try {\n          chunkSize = strategySize(chunk);\n        } catch (chunkSizeE) {\n          ReadableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n          throw chunkSizeE;\n        }\n      }\n      try {\n        EnqueueValueWithSize(controller, chunk, chunkSize);\n      } catch (enqueueE) {\n        ReadableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n        throw enqueueE;\n      }\n    }\n    ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    return undefined;\n  }\n  function ReadableStreamDefaultControllerError(controller, e) {\n    var stream = controller._controlledReadableStream;\n    assert(stream._state === 'readable');\n    ResetQueue(controller);\n    ReadableStreamError(stream, e);\n  }\n  function ReadableStreamDefaultControllerErrorIfNeeded(controller, e) {\n    if (controller._controlledReadableStream._state === 'readable') {\n      ReadableStreamDefaultControllerError(controller, e);\n    }\n  }\n  function ReadableStreamDefaultControllerGetDesiredSize(controller) {\n    var stream = controller._controlledReadableStream;\n    var state = stream._state;\n    if (state === 'errored') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  var ReadableStreamBYOBRequest = function () {\n    function ReadableStreamBYOBRequest(controller, view) {\n      _classCallCheck(this, ReadableStreamBYOBRequest);\n      this._associatedReadableByteStreamController = controller;\n      this._view = view;\n    }\n    _createClass(ReadableStreamBYOBRequest, [{\n      key: 'respond',\n      value: function respond(bytesWritten) {\n        if (IsReadableStreamBYOBRequest(this) === false) {\n          throw byobRequestBrandCheckException('respond');\n        }\n        if (this._associatedReadableByteStreamController === undefined) {\n          throw new TypeError('This BYOB request has been invalidated');\n        }\n        ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n      }\n    }, {\n      key: 'respondWithNewView',\n      value: function respondWithNewView(view) {\n        if (IsReadableStreamBYOBRequest(this) === false) {\n          throw byobRequestBrandCheckException('respond');\n        }\n        if (this._associatedReadableByteStreamController === undefined) {\n          throw new TypeError('This BYOB request has been invalidated');\n        }\n        if (!ArrayBuffer.isView(view)) {\n          throw new TypeError('You can only respond with array buffer views');\n        }\n        ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n      }\n    }, {\n      key: 'view',\n      get: function get() {\n        return this._view;\n      }\n    }]);\n    return ReadableStreamBYOBRequest;\n  }();\n  var ReadableByteStreamController = function () {\n    function ReadableByteStreamController(stream, underlyingByteSource, highWaterMark) {\n      _classCallCheck(this, ReadableByteStreamController);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableByteStreamController can only be constructed with a ReadableStream instance given ' + 'a byte source');\n      }\n      if (stream._readableStreamController !== undefined) {\n        throw new TypeError('ReadableByteStreamController instances can only be created by the ReadableStream constructor given a byte ' + 'source');\n      }\n      this._controlledReadableStream = stream;\n      this._underlyingByteSource = underlyingByteSource;\n      this._pullAgain = false;\n      this._pulling = false;\n      ReadableByteStreamControllerClearPendingPullIntos(this);\n      this._queue = this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._closeRequested = false;\n      this._started = false;\n      this._strategyHWM = ValidateAndNormalizeHighWaterMark(highWaterMark);\n      var autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n      if (autoAllocateChunkSize !== undefined) {\n        if (Number.isInteger(autoAllocateChunkSize) === false || autoAllocateChunkSize <= 0) {\n          throw new RangeError('autoAllocateChunkSize must be a positive integer');\n        }\n      }\n      this._autoAllocateChunkSize = autoAllocateChunkSize;\n      this._pendingPullIntos = [];\n      var controller = this;\n      var startResult = InvokeOrNoop(underlyingByteSource, 'start', [this]);\n      Promise.resolve(startResult).then(function () {\n        controller._started = true;\n        assert(controller._pulling === false);\n        assert(controller._pullAgain === false);\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }, function (r) {\n        if (stream._state === 'readable') {\n          ReadableByteStreamControllerError(controller, r);\n        }\n      }).catch(rethrowAssertionErrorRejection);\n    }\n    _createClass(ReadableByteStreamController, [{\n      key: 'close',\n      value: function close() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('close');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('The stream has already been closed; do not close it again!');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\n        }\n        ReadableByteStreamControllerClose(this);\n      }\n    }, {\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('enqueue');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('stream is closed or draining');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\n        }\n        if (!ArrayBuffer.isView(chunk)) {\n          throw new TypeError('You can only enqueue array buffer views when using a ReadableByteStreamController');\n        }\n        ReadableByteStreamControllerEnqueue(this, chunk);\n      }\n    }, {\n      key: 'error',\n      value: function error(e) {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('error');\n        }\n        var stream = this._controlledReadableStream;\n        if (stream._state !== 'readable') {\n          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\n        }\n        ReadableByteStreamControllerError(this, e);\n      }\n    }, {\n      key: '__cancelSteps',\n      value: function __cancelSteps(reason) {\n        if (this._pendingPullIntos.length > 0) {\n          var firstDescriptor = this._pendingPullIntos[0];\n          firstDescriptor.bytesFilled = 0;\n        }\n        ResetQueue(this);\n        return PromiseInvokeOrNoop(this._underlyingByteSource, 'cancel', [reason]);\n      }\n    }, {\n      key: '__pullSteps',\n      value: function __pullSteps() {\n        var stream = this._controlledReadableStream;\n        assert(ReadableStreamHasDefaultReader(stream) === true);\n        if (this._queueTotalSize > 0) {\n          assert(ReadableStreamGetNumReadRequests(stream) === 0);\n          var entry = this._queue.shift();\n          this._queueTotalSize -= entry.byteLength;\n          ReadableByteStreamControllerHandleQueueDrain(this);\n          var view = void 0;\n          try {\n            view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n          } catch (viewE) {\n            return Promise.reject(viewE);\n          }\n          return Promise.resolve(CreateIterResultObject(view, false));\n        }\n        var autoAllocateChunkSize = this._autoAllocateChunkSize;\n        if (autoAllocateChunkSize !== undefined) {\n          var buffer = void 0;\n          try {\n            buffer = new ArrayBuffer(autoAllocateChunkSize);\n          } catch (bufferE) {\n            return Promise.reject(bufferE);\n          }\n          var pullIntoDescriptor = {\n            buffer: buffer,\n            byteOffset: 0,\n            byteLength: autoAllocateChunkSize,\n            bytesFilled: 0,\n            elementSize: 1,\n            ctor: Uint8Array,\n            readerType: 'default'\n          };\n          this._pendingPullIntos.push(pullIntoDescriptor);\n        }\n        var promise = ReadableStreamAddReadRequest(stream);\n        ReadableByteStreamControllerCallPullIfNeeded(this);\n        return promise;\n      }\n    }, {\n      key: 'byobRequest',\n      get: function get() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('byobRequest');\n        }\n        if (this._byobRequest === undefined && this._pendingPullIntos.length > 0) {\n          var firstDescriptor = this._pendingPullIntos[0];\n          var view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n          this._byobRequest = new ReadableStreamBYOBRequest(this, view);\n        }\n        return this._byobRequest;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('desiredSize');\n        }\n        return ReadableByteStreamControllerGetDesiredSize(this);\n      }\n    }]);\n    return ReadableByteStreamController;\n  }();\n  function IsReadableByteStreamController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingByteSource')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamBYOBRequest(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableByteStreamControllerCallPullIfNeeded(controller) {\n    var shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n    if (shouldPull === false) {\n      return undefined;\n    }\n    if (controller._pulling === true) {\n      controller._pullAgain = true;\n      return undefined;\n    }\n    assert(controller._pullAgain === false);\n    controller._pulling = true;\n    var pullPromise = PromiseInvokeOrNoop(controller._underlyingByteSource, 'pull', [controller]);\n    pullPromise.then(function () {\n      controller._pulling = false;\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }\n    }, function (e) {\n      if (controller._controlledReadableStream._state === 'readable') {\n        ReadableByteStreamControllerError(controller, e);\n      }\n    }).catch(rethrowAssertionErrorRejection);\n    return undefined;\n  }\n  function ReadableByteStreamControllerClearPendingPullIntos(controller) {\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    controller._pendingPullIntos = [];\n  }\n  function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n    assert(stream._state !== 'errored', 'state must not be errored');\n    var done = false;\n    if (stream._state === 'closed') {\n      assert(pullIntoDescriptor.bytesFilled === 0);\n      done = true;\n    }\n    var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n    if (pullIntoDescriptor.readerType === 'default') {\n      ReadableStreamFulfillReadRequest(stream, filledView, done);\n    } else {\n      assert(pullIntoDescriptor.readerType === 'byob');\n      ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n    }\n  }\n  function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n    var bytesFilled = pullIntoDescriptor.bytesFilled;\n    var elementSize = pullIntoDescriptor.elementSize;\n    assert(bytesFilled <= pullIntoDescriptor.byteLength);\n    assert(bytesFilled % elementSize === 0);\n    return new pullIntoDescriptor.ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n  }\n  function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n    controller._queue.push({\n      buffer: buffer,\n      byteOffset: byteOffset,\n      byteLength: byteLength\n    });\n    controller._queueTotalSize += byteLength;\n  }\n  function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n    var elementSize = pullIntoDescriptor.elementSize;\n    var currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n    var maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n    var maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n    var maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n    var totalBytesToCopyRemaining = maxBytesToCopy;\n    var ready = false;\n    if (maxAlignedBytes > currentAlignedBytes) {\n      totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n      ready = true;\n    }\n    var queue = controller._queue;\n    while (totalBytesToCopyRemaining > 0) {\n      var headOfQueue = queue[0];\n      var bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n      var destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n      ArrayBufferCopy(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n      if (headOfQueue.byteLength === bytesToCopy) {\n        queue.shift();\n      } else {\n        headOfQueue.byteOffset += bytesToCopy;\n        headOfQueue.byteLength -= bytesToCopy;\n      }\n      controller._queueTotalSize -= bytesToCopy;\n      ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n      totalBytesToCopyRemaining -= bytesToCopy;\n    }\n    if (ready === false) {\n      assert(controller._queueTotalSize === 0, 'queue must be empty');\n      assert(pullIntoDescriptor.bytesFilled > 0);\n      assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize);\n    }\n    return ready;\n  }\n  function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n    assert(controller._pendingPullIntos.length === 0 || controller._pendingPullIntos[0] === pullIntoDescriptor);\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    pullIntoDescriptor.bytesFilled += size;\n  }\n  function ReadableByteStreamControllerHandleQueueDrain(controller) {\n    assert(controller._controlledReadableStream._state === 'readable');\n    if (controller._queueTotalSize === 0 && controller._closeRequested === true) {\n      ReadableStreamClose(controller._controlledReadableStream);\n    } else {\n      ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n  }\n  function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n    if (controller._byobRequest === undefined) {\n      return;\n    }\n    controller._byobRequest._associatedReadableByteStreamController = undefined;\n    controller._byobRequest._view = undefined;\n    controller._byobRequest = undefined;\n  }\n  function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n    assert(controller._closeRequested === false);\n    while (controller._pendingPullIntos.length > 0) {\n      if (controller._queueTotalSize === 0) {\n        return;\n      }\n      var pullIntoDescriptor = controller._pendingPullIntos[0];\n      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\n      }\n    }\n  }\n  function ReadableByteStreamControllerPullInto(controller, view) {\n    var stream = controller._controlledReadableStream;\n    var elementSize = 1;\n    if (view.constructor !== DataView) {\n      elementSize = view.constructor.BYTES_PER_ELEMENT;\n    }\n    var ctor = view.constructor;\n    var pullIntoDescriptor = {\n      buffer: view.buffer,\n      byteOffset: view.byteOffset,\n      byteLength: view.byteLength,\n      bytesFilled: 0,\n      elementSize: elementSize,\n      ctor: ctor,\n      readerType: 'byob'\n    };\n    if (controller._pendingPullIntos.length > 0) {\n      pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n      controller._pendingPullIntos.push(pullIntoDescriptor);\n      return ReadableStreamAddReadIntoRequest(stream);\n    }\n    if (stream._state === 'closed') {\n      var emptyView = new view.constructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n      return Promise.resolve(CreateIterResultObject(emptyView, true));\n    }\n    if (controller._queueTotalSize > 0) {\n      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n        var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n        ReadableByteStreamControllerHandleQueueDrain(controller);\n        return Promise.resolve(CreateIterResultObject(filledView, false));\n      }\n      if (controller._closeRequested === true) {\n        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n        ReadableByteStreamControllerError(controller, e);\n        return Promise.reject(e);\n      }\n    }\n    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n    controller._pendingPullIntos.push(pullIntoDescriptor);\n    var promise = ReadableStreamAddReadIntoRequest(stream);\n    ReadableByteStreamControllerCallPullIfNeeded(controller);\n    return promise;\n  }\n  function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n    firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n    assert(firstDescriptor.bytesFilled === 0, 'bytesFilled must be 0');\n    var stream = controller._controlledReadableStream;\n    if (ReadableStreamHasBYOBReader(stream) === true) {\n      while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n        var pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n        ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n      }\n    }\n  }\n  function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n    if (pullIntoDescriptor.bytesFilled + bytesWritten > pullIntoDescriptor.byteLength) {\n      throw new RangeError('bytesWritten out of range');\n    }\n    ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n    if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n      return;\n    }\n    ReadableByteStreamControllerShiftPendingPullInto(controller);\n    var remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n    if (remainderSize > 0) {\n      var end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n      var remainder = pullIntoDescriptor.buffer.slice(end - remainderSize, end);\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n    }\n    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n    pullIntoDescriptor.bytesFilled -= remainderSize;\n    ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\n    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n  }\n  function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n    var firstDescriptor = controller._pendingPullIntos[0];\n    var stream = controller._controlledReadableStream;\n    if (stream._state === 'closed') {\n      if (bytesWritten !== 0) {\n        throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n      }\n      ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\n    } else {\n      assert(stream._state === 'readable');\n      ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n    }\n  }\n  function ReadableByteStreamControllerShiftPendingPullInto(controller) {\n    var descriptor = controller._pendingPullIntos.shift();\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    return descriptor;\n  }\n  function ReadableByteStreamControllerShouldCallPull(controller) {\n    var stream = controller._controlledReadableStream;\n    if (stream._state !== 'readable') {\n      return false;\n    }\n    if (controller._closeRequested === true) {\n      return false;\n    }\n    if (controller._started === false) {\n      return false;\n    }\n    if (ReadableStreamHasDefaultReader(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      return true;\n    }\n    if (ReadableStreamHasBYOBReader(stream) === true && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n      return true;\n    }\n    if (ReadableByteStreamControllerGetDesiredSize(controller) > 0) {\n      return true;\n    }\n    return false;\n  }\n  function ReadableByteStreamControllerClose(controller) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    if (controller._queueTotalSize > 0) {\n      controller._closeRequested = true;\n      return;\n    }\n    if (controller._pendingPullIntos.length > 0) {\n      var firstPendingPullInto = controller._pendingPullIntos[0];\n      if (firstPendingPullInto.bytesFilled > 0) {\n        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n        ReadableByteStreamControllerError(controller, e);\n        throw e;\n      }\n    }\n    ReadableStreamClose(stream);\n  }\n  function ReadableByteStreamControllerEnqueue(controller, chunk) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    var buffer = chunk.buffer;\n    var byteOffset = chunk.byteOffset;\n    var byteLength = chunk.byteLength;\n    var transferredBuffer = TransferArrayBuffer(buffer);\n    if (ReadableStreamHasDefaultReader(stream) === true) {\n      if (ReadableStreamGetNumReadRequests(stream) === 0) {\n        ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n      } else {\n        assert(controller._queue.length === 0);\n        var transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n        ReadableStreamFulfillReadRequest(stream, transferredView, false);\n      }\n    } else if (ReadableStreamHasBYOBReader(stream) === true) {\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n      ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n    } else {\n      assert(IsReadableStreamLocked(stream) === false, 'stream must not be locked');\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    }\n  }\n  function ReadableByteStreamControllerError(controller, e) {\n    var stream = controller._controlledReadableStream;\n    assert(stream._state === 'readable');\n    ReadableByteStreamControllerClearPendingPullIntos(controller);\n    ResetQueue(controller);\n    ReadableStreamError(stream, e);\n  }\n  function ReadableByteStreamControllerGetDesiredSize(controller) {\n    var stream = controller._controlledReadableStream;\n    var state = stream._state;\n    if (state === 'errored') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  function ReadableByteStreamControllerRespond(controller, bytesWritten) {\n    bytesWritten = Number(bytesWritten);\n    if (IsFiniteNonNegativeNumber(bytesWritten) === false) {\n      throw new RangeError('bytesWritten must be a finite');\n    }\n    assert(controller._pendingPullIntos.length > 0);\n    ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n  }\n  function ReadableByteStreamControllerRespondWithNewView(controller, view) {\n    assert(controller._pendingPullIntos.length > 0);\n    var firstDescriptor = controller._pendingPullIntos[0];\n    if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n      throw new RangeError('The region specified by view does not match byobRequest');\n    }\n    if (firstDescriptor.byteLength !== view.byteLength) {\n      throw new RangeError('The buffer of view has different capacity than byobRequest');\n    }\n    firstDescriptor.buffer = view.buffer;\n    ReadableByteStreamControllerRespondInternal(controller, view.byteLength);\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('ReadableStream.prototype.' + name + ' can only be used on a ReadableStream');\n  }\n  function readerLockException(name) {\n    return new TypeError('Cannot ' + name + ' a stream using a released reader');\n  }\n  function defaultReaderBrandCheckException(name) {\n    return new TypeError('ReadableStreamDefaultReader.prototype.' + name + ' can only be used on a ReadableStreamDefaultReader');\n  }\n  function defaultReaderClosedPromiseInitialize(reader) {\n    reader._closedPromise = new Promise(function (resolve, reject) {\n      reader._closedPromise_resolve = resolve;\n      reader._closedPromise_reject = reject;\n    });\n  }\n  function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n    reader._closedPromise = Promise.reject(reason);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseInitializeAsResolved(reader) {\n    reader._closedPromise = Promise.resolve(undefined);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseReject(reader, reason) {\n    assert(reader._closedPromise_resolve !== undefined);\n    assert(reader._closedPromise_reject !== undefined);\n    reader._closedPromise_reject(reason);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseResetToRejected(reader, reason) {\n    assert(reader._closedPromise_resolve === undefined);\n    assert(reader._closedPromise_reject === undefined);\n    reader._closedPromise = Promise.reject(reason);\n  }\n  function defaultReaderClosedPromiseResolve(reader) {\n    assert(reader._closedPromise_resolve !== undefined);\n    assert(reader._closedPromise_reject !== undefined);\n    reader._closedPromise_resolve(undefined);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function byobReaderBrandCheckException(name) {\n    return new TypeError('ReadableStreamBYOBReader.prototype.' + name + ' can only be used on a ReadableStreamBYOBReader');\n  }\n  function defaultControllerBrandCheckException(name) {\n    return new TypeError('ReadableStreamDefaultController.prototype.' + name + ' can only be used on a ReadableStreamDefaultController');\n  }\n  function byobRequestBrandCheckException(name) {\n    return new TypeError('ReadableStreamBYOBRequest.prototype.' + name + ' can only be used on a ReadableStreamBYOBRequest');\n  }\n  function byteStreamControllerBrandCheckException(name) {\n    return new TypeError('ReadableByteStreamController.prototype.' + name + ' can only be used on a ReadableByteStreamController');\n  }\n  function ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise) {\n    try {\n      Promise.prototype.then.call(promise, undefined, function () {});\n    } catch (e) {}\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var transformStream = __w_pdfjs_require__(6);\n  var readableStream = __w_pdfjs_require__(4);\n  var writableStream = __w_pdfjs_require__(2);\n  exports.TransformStream = transformStream.TransformStream;\n  exports.ReadableStream = readableStream.ReadableStream;\n  exports.IsReadableStreamDisturbed = readableStream.IsReadableStreamDisturbed;\n  exports.ReadableStreamDefaultControllerClose = readableStream.ReadableStreamDefaultControllerClose;\n  exports.ReadableStreamDefaultControllerEnqueue = readableStream.ReadableStreamDefaultControllerEnqueue;\n  exports.ReadableStreamDefaultControllerError = readableStream.ReadableStreamDefaultControllerError;\n  exports.ReadableStreamDefaultControllerGetDesiredSize = readableStream.ReadableStreamDefaultControllerGetDesiredSize;\n  exports.AcquireWritableStreamDefaultWriter = writableStream.AcquireWritableStreamDefaultWriter;\n  exports.IsWritableStream = writableStream.IsWritableStream;\n  exports.IsWritableStreamLocked = writableStream.IsWritableStreamLocked;\n  exports.WritableStream = writableStream.WritableStream;\n  exports.WritableStreamAbort = writableStream.WritableStreamAbort;\n  exports.WritableStreamDefaultControllerError = writableStream.WritableStreamDefaultControllerError;\n  exports.WritableStreamDefaultWriterCloseWithErrorPropagation = writableStream.WritableStreamDefaultWriterCloseWithErrorPropagation;\n  exports.WritableStreamDefaultWriterRelease = writableStream.WritableStreamDefaultWriterRelease;\n  exports.WritableStreamDefaultWriterWrite = writableStream.WritableStreamDefaultWriterWrite;\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(1),\n      assert = _require.assert;\n  var _require2 = __w_pdfjs_require__(0),\n      InvokeOrNoop = _require2.InvokeOrNoop,\n      PromiseInvokeOrPerformFallback = _require2.PromiseInvokeOrPerformFallback,\n      PromiseInvokeOrNoop = _require2.PromiseInvokeOrNoop,\n      typeIsObject = _require2.typeIsObject;\n  var _require3 = __w_pdfjs_require__(4),\n      ReadableStream = _require3.ReadableStream,\n      ReadableStreamDefaultControllerClose = _require3.ReadableStreamDefaultControllerClose,\n      ReadableStreamDefaultControllerEnqueue = _require3.ReadableStreamDefaultControllerEnqueue,\n      ReadableStreamDefaultControllerError = _require3.ReadableStreamDefaultControllerError,\n      ReadableStreamDefaultControllerGetDesiredSize = _require3.ReadableStreamDefaultControllerGetDesiredSize;\n  var _require4 = __w_pdfjs_require__(2),\n      WritableStream = _require4.WritableStream,\n      WritableStreamDefaultControllerError = _require4.WritableStreamDefaultControllerError;\n  function TransformStreamCloseReadable(transformStream) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    if (transformStream._readableClosed === true) {\n      throw new TypeError('Readable side is already closed');\n    }\n    TransformStreamCloseReadableInternal(transformStream);\n  }\n  function TransformStreamEnqueueToReadable(transformStream, chunk) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    if (transformStream._readableClosed === true) {\n      throw new TypeError('Readable side is already closed');\n    }\n    var controller = transformStream._readableController;\n    try {\n      ReadableStreamDefaultControllerEnqueue(controller, chunk);\n    } catch (e) {\n      transformStream._readableClosed = true;\n      TransformStreamErrorIfNeeded(transformStream, e);\n      throw transformStream._storedError;\n    }\n    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n    var maybeBackpressure = desiredSize <= 0;\n    if (maybeBackpressure === true && transformStream._backpressure === false) {\n      TransformStreamSetBackpressure(transformStream, true);\n    }\n  }\n  function TransformStreamError(transformStream, e) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    TransformStreamErrorInternal(transformStream, e);\n  }\n  function TransformStreamCloseReadableInternal(transformStream) {\n    assert(transformStream._errored === false);\n    assert(transformStream._readableClosed === false);\n    try {\n      ReadableStreamDefaultControllerClose(transformStream._readableController);\n    } catch (e) {\n      assert(false);\n    }\n    transformStream._readableClosed = true;\n  }\n  function TransformStreamErrorIfNeeded(transformStream, e) {\n    if (transformStream._errored === false) {\n      TransformStreamErrorInternal(transformStream, e);\n    }\n  }\n  function TransformStreamErrorInternal(transformStream, e) {\n    assert(transformStream._errored === false);\n    transformStream._errored = true;\n    transformStream._storedError = e;\n    if (transformStream._writableDone === false) {\n      WritableStreamDefaultControllerError(transformStream._writableController, e);\n    }\n    if (transformStream._readableClosed === false) {\n      ReadableStreamDefaultControllerError(transformStream._readableController, e);\n    }\n  }\n  function TransformStreamReadableReadyPromise(transformStream) {\n    assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n    if (transformStream._backpressure === false) {\n      return Promise.resolve();\n    }\n    assert(transformStream._backpressure === true, '_backpressure should have been initialized');\n    return transformStream._backpressureChangePromise;\n  }\n  function TransformStreamSetBackpressure(transformStream, backpressure) {\n    assert(transformStream._backpressure !== backpressure, 'TransformStreamSetBackpressure() should be called only when backpressure is changed');\n    if (transformStream._backpressureChangePromise !== undefined) {\n      transformStream._backpressureChangePromise_resolve(backpressure);\n    }\n    transformStream._backpressureChangePromise = new Promise(function (resolve) {\n      transformStream._backpressureChangePromise_resolve = resolve;\n    });\n    transformStream._backpressureChangePromise.then(function (resolution) {\n      assert(resolution !== backpressure, '_backpressureChangePromise should be fulfilled only when backpressure is changed');\n    });\n    transformStream._backpressure = backpressure;\n  }\n  function TransformStreamDefaultTransform(chunk, transformStreamController) {\n    var transformStream = transformStreamController._controlledTransformStream;\n    TransformStreamEnqueueToReadable(transformStream, chunk);\n    return Promise.resolve();\n  }\n  function TransformStreamTransform(transformStream, chunk) {\n    assert(transformStream._errored === false);\n    assert(transformStream._transforming === false);\n    assert(transformStream._backpressure === false);\n    transformStream._transforming = true;\n    var transformer = transformStream._transformer;\n    var controller = transformStream._transformStreamController;\n    var transformPromise = PromiseInvokeOrPerformFallback(transformer, 'transform', [chunk, controller], TransformStreamDefaultTransform, [chunk, controller]);\n    return transformPromise.then(function () {\n      transformStream._transforming = false;\n      return TransformStreamReadableReadyPromise(transformStream);\n    }, function (e) {\n      TransformStreamErrorIfNeeded(transformStream, e);\n      return Promise.reject(e);\n    });\n  }\n  function IsTransformStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n      return false;\n    }\n    return true;\n  }\n  function IsTransformStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  var TransformStreamSink = function () {\n    function TransformStreamSink(transformStream, startPromise) {\n      _classCallCheck(this, TransformStreamSink);\n      this._transformStream = transformStream;\n      this._startPromise = startPromise;\n    }\n    _createClass(TransformStreamSink, [{\n      key: 'start',\n      value: function start(c) {\n        var transformStream = this._transformStream;\n        transformStream._writableController = c;\n        return this._startPromise.then(function () {\n          return TransformStreamReadableReadyPromise(transformStream);\n        });\n      }\n    }, {\n      key: 'write',\n      value: function write(chunk) {\n        var transformStream = this._transformStream;\n        return TransformStreamTransform(transformStream, chunk);\n      }\n    }, {\n      key: 'abort',\n      value: function abort() {\n        var transformStream = this._transformStream;\n        transformStream._writableDone = true;\n        TransformStreamErrorInternal(transformStream, new TypeError('Writable side aborted'));\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        var transformStream = this._transformStream;\n        assert(transformStream._transforming === false);\n        transformStream._writableDone = true;\n        var flushPromise = PromiseInvokeOrNoop(transformStream._transformer, 'flush', [transformStream._transformStreamController]);\n        return flushPromise.then(function () {\n          if (transformStream._errored === true) {\n            return Promise.reject(transformStream._storedError);\n          }\n          if (transformStream._readableClosed === false) {\n            TransformStreamCloseReadableInternal(transformStream);\n          }\n          return Promise.resolve();\n        }).catch(function (r) {\n          TransformStreamErrorIfNeeded(transformStream, r);\n          return Promise.reject(transformStream._storedError);\n        });\n      }\n    }]);\n    return TransformStreamSink;\n  }();\n  var TransformStreamSource = function () {\n    function TransformStreamSource(transformStream, startPromise) {\n      _classCallCheck(this, TransformStreamSource);\n      this._transformStream = transformStream;\n      this._startPromise = startPromise;\n    }\n    _createClass(TransformStreamSource, [{\n      key: 'start',\n      value: function start(c) {\n        var transformStream = this._transformStream;\n        transformStream._readableController = c;\n        return this._startPromise.then(function () {\n          assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n          if (transformStream._backpressure === true) {\n            return Promise.resolve();\n          }\n          assert(transformStream._backpressure === false, '_backpressure should have been initialized');\n          return transformStream._backpressureChangePromise;\n        });\n      }\n    }, {\n      key: 'pull',\n      value: function pull() {\n        var transformStream = this._transformStream;\n        assert(transformStream._backpressure === true, 'pull() should be never called while _backpressure is false');\n        assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n        TransformStreamSetBackpressure(transformStream, false);\n        return transformStream._backpressureChangePromise;\n      }\n    }, {\n      key: 'cancel',\n      value: function cancel() {\n        var transformStream = this._transformStream;\n        transformStream._readableClosed = true;\n        TransformStreamErrorInternal(transformStream, new TypeError('Readable side canceled'));\n      }\n    }]);\n    return TransformStreamSource;\n  }();\n  var TransformStreamDefaultController = function () {\n    function TransformStreamDefaultController(transformStream) {\n      _classCallCheck(this, TransformStreamDefaultController);\n      if (IsTransformStream(transformStream) === false) {\n        throw new TypeError('TransformStreamDefaultController can only be ' + 'constructed with a TransformStream instance');\n      }\n      if (transformStream._transformStreamController !== undefined) {\n        throw new TypeError('TransformStreamDefaultController instances can ' + 'only be created by the TransformStream constructor');\n      }\n      this._controlledTransformStream = transformStream;\n    }\n    _createClass(TransformStreamDefaultController, [{\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('enqueue');\n        }\n        TransformStreamEnqueueToReadable(this._controlledTransformStream, chunk);\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('close');\n        }\n        TransformStreamCloseReadable(this._controlledTransformStream);\n      }\n    }, {\n      key: 'error',\n      value: function error(reason) {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('error');\n        }\n        TransformStreamError(this._controlledTransformStream, reason);\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('desiredSize');\n        }\n        var transformStream = this._controlledTransformStream;\n        var readableController = transformStream._readableController;\n        return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n      }\n    }]);\n    return TransformStreamDefaultController;\n  }();\n  var TransformStream = function () {\n    function TransformStream() {\n      var transformer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      _classCallCheck(this, TransformStream);\n      this._transformer = transformer;\n      var readableStrategy = transformer.readableStrategy,\n          writableStrategy = transformer.writableStrategy;\n      this._transforming = false;\n      this._errored = false;\n      this._storedError = undefined;\n      this._writableController = undefined;\n      this._readableController = undefined;\n      this._transformStreamController = undefined;\n      this._writableDone = false;\n      this._readableClosed = false;\n      this._backpressure = undefined;\n      this._backpressureChangePromise = undefined;\n      this._backpressureChangePromise_resolve = undefined;\n      this._transformStreamController = new TransformStreamDefaultController(this);\n      var startPromise_resolve = void 0;\n      var startPromise = new Promise(function (resolve) {\n        startPromise_resolve = resolve;\n      });\n      var source = new TransformStreamSource(this, startPromise);\n      this._readable = new ReadableStream(source, readableStrategy);\n      var sink = new TransformStreamSink(this, startPromise);\n      this._writable = new WritableStream(sink, writableStrategy);\n      assert(this._writableController !== undefined);\n      assert(this._readableController !== undefined);\n      var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(this._readableController);\n      TransformStreamSetBackpressure(this, desiredSize <= 0);\n      var transformStream = this;\n      var startResult = InvokeOrNoop(transformer, 'start', [transformStream._transformStreamController]);\n      startPromise_resolve(startResult);\n      startPromise.catch(function (e) {\n        if (transformStream._errored === false) {\n          transformStream._errored = true;\n          transformStream._storedError = e;\n        }\n      });\n    }\n    _createClass(TransformStream, [{\n      key: 'readable',\n      get: function get() {\n        if (IsTransformStream(this) === false) {\n          throw streamBrandCheckException('readable');\n        }\n        return this._readable;\n      }\n    }, {\n      key: 'writable',\n      get: function get() {\n        if (IsTransformStream(this) === false) {\n          throw streamBrandCheckException('writable');\n        }\n        return this._writable;\n      }\n    }]);\n    return TransformStream;\n  }();\n  module.exports = { TransformStream: TransformStream };\n  function defaultControllerBrandCheckException(name) {\n    return new TypeError('TransformStreamDefaultController.prototype.' + name + ' can only be used on a TransformStreamDefaultController');\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('TransformStream.prototype.' + name + ' can only be used on a TransformStream');\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  module.exports = __w_pdfjs_require__(5);\n}]));\n\n/***/ }),\n/* 132 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkPdfManager = exports.LocalPdfManager = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _chunked_stream = __w_pdfjs_require__(63);\n\nvar _document = __w_pdfjs_require__(133);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar BasePdfManager = function BasePdfManagerClosure() {\n  function BasePdfManager() {\n    (0, _util.unreachable)('Cannot initialize BaseManagerManager');\n  }\n  BasePdfManager.prototype = {\n    get docId() {\n      return this._docId;\n    },\n    get password() {\n      return this._password;\n    },\n    get docBaseUrl() {\n      var docBaseUrl = null;\n      if (this._docBaseUrl) {\n        var absoluteUrl = (0, _util.createValidAbsoluteUrl)(this._docBaseUrl);\n        if (absoluteUrl) {\n          docBaseUrl = absoluteUrl.href;\n        } else {\n          (0, _util.warn)('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n        }\n      }\n      return (0, _util.shadow)(this, 'docBaseUrl', docBaseUrl);\n    },\n    onLoadedStream: function BasePdfManager_onLoadedStream() {\n      throw new _util.NotImplementedException();\n    },\n    ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n      return this.ensure(this.pdfDocument, prop, args);\n    },\n    ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n      return this.ensure(this.pdfDocument.xref, prop, args);\n    },\n    ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n      return this.ensure(this.pdfDocument.catalog, prop, args);\n    },\n    getPage: function BasePdfManager_getPage(pageIndex) {\n      return this.pdfDocument.getPage(pageIndex);\n    },\n    cleanup: function BasePdfManager_cleanup() {\n      return this.pdfDocument.cleanup();\n    },\n    ensure: function BasePdfManager_ensure(obj, prop, args) {\n      return new _util.NotImplementedException();\n    },\n    requestRange: function BasePdfManager_requestRange(begin, end) {\n      return new _util.NotImplementedException();\n    },\n    requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n      return new _util.NotImplementedException();\n    },\n    sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n      return new _util.NotImplementedException();\n    },\n    updatePassword: function BasePdfManager_updatePassword(password) {\n      this._password = password;\n    },\n    terminate: function BasePdfManager_terminate() {\n      return new _util.NotImplementedException();\n    }\n  };\n  return BasePdfManager;\n}();\nvar LocalPdfManager = function LocalPdfManagerClosure() {\n  function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = password;\n    this._docBaseUrl = docBaseUrl;\n    this.evaluatorOptions = evaluatorOptions;\n    var stream = new _stream.Stream(data);\n    this.pdfDocument = new _document.PDFDocument(this, stream);\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n    this._loadedStreamCapability.resolve(stream);\n  }\n  _util.Util.inherit(LocalPdfManager, BasePdfManager, {\n    ensure: function LocalPdfManager_ensure(obj, prop, args) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var value = obj[prop];\n          var result;\n          if (typeof value === 'function') {\n            result = value.apply(obj, args);\n          } else {\n            result = value;\n          }\n          resolve(result);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    },\n    requestRange: function LocalPdfManager_requestRange(begin, end) {\n      return Promise.resolve();\n    },\n    requestLoadedStream: function LocalPdfManager_requestLoadedStream() {},\n    onLoadedStream: function LocalPdfManager_onLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    terminate: function LocalPdfManager_terminate() {}\n  });\n  return LocalPdfManager;\n}();\nvar NetworkPdfManager = function NetworkPdfManagerClosure() {\n  function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = args.password;\n    this._docBaseUrl = docBaseUrl;\n    this.msgHandler = args.msgHandler;\n    this.evaluatorOptions = evaluatorOptions;\n    var params = {\n      msgHandler: args.msgHandler,\n      url: args.url,\n      length: args.length,\n      disableAutoFetch: args.disableAutoFetch,\n      rangeChunkSize: args.rangeChunkSize\n    };\n    this.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, params);\n    this.pdfDocument = new _document.PDFDocument(this, this.streamManager.getStream());\n  }\n  _util.Util.inherit(NetworkPdfManager, BasePdfManager, {\n    ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n      var pdfManager = this;\n      return new Promise(function (resolve, reject) {\n        function ensureHelper() {\n          try {\n            var result;\n            var value = obj[prop];\n            if (typeof value === 'function') {\n              result = value.apply(obj, args);\n            } else {\n              result = value;\n            }\n            resolve(result);\n          } catch (e) {\n            if (!(e instanceof _util.MissingDataException)) {\n              reject(e);\n              return;\n            }\n            pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n          }\n        }\n        ensureHelper();\n      });\n    },\n    requestRange: function NetworkPdfManager_requestRange(begin, end) {\n      return this.streamManager.requestRange(begin, end);\n    },\n    requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n      this.streamManager.requestAllChunks();\n    },\n    sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n      this.streamManager.onReceiveData({ chunk: chunk });\n    },\n    onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n      return this.streamManager.onLoadedStream();\n    },\n    terminate: function NetworkPdfManager_terminate() {\n      this.streamManager.abort();\n    }\n  });\n  return NetworkPdfManager;\n}();\nexports.LocalPdfManager = LocalPdfManager;\nexports.NetworkPdfManager = NetworkPdfManager;\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFDocument = exports.Page = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _obj = __w_pdfjs_require__(64);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _annotation = __w_pdfjs_require__(139);\n\nvar _crypto = __w_pdfjs_require__(68);\n\nvar _parser = __w_pdfjs_require__(27);\n\nvar _operator_list = __w_pdfjs_require__(42);\n\nvar _evaluator = __w_pdfjs_require__(140);\n\nvar _function = __w_pdfjs_require__(72);\n\nvar Page = function PageClosure() {\n  var DEFAULT_USER_UNIT = 1.0;\n  var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\n  function isAnnotationRenderable(annotation, intent) {\n    return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\n  }\n  function Page(_ref) {\n    var pdfManager = _ref.pdfManager,\n        xref = _ref.xref,\n        pageIndex = _ref.pageIndex,\n        pageDict = _ref.pageDict,\n        ref = _ref.ref,\n        fontCache = _ref.fontCache,\n        builtInCMapCache = _ref.builtInCMapCache,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.pageIndex = pageIndex;\n    this.pageDict = pageDict;\n    this.xref = xref;\n    this.ref = ref;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.evaluatorOptions = pdfManager.evaluatorOptions;\n    this.resourcesPromise = null;\n    var uniquePrefix = 'p' + this.pageIndex + '_';\n    var idCounters = { obj: 0 };\n    this.idFactory = {\n      createObjId: function createObjId() {\n        return uniquePrefix + ++idCounters.obj;\n      }\n    };\n  }\n  Page.prototype = {\n    _getInheritableProperty: function _getInheritableProperty(key) {\n      var getArray = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var value = (0, _util.getInheritableProperty)({\n        dict: this.pageDict,\n        key: key,\n        getArray: getArray,\n        stopWhenFound: false\n      });\n      if (!Array.isArray(value)) {\n        return value;\n      }\n      if (value.length === 1 || !(0, _primitives.isDict)(value[0])) {\n        return value[0];\n      }\n      return _primitives.Dict.merge(this.xref, value);\n    },\n\n    get content() {\n      return this.pageDict.get('Contents');\n    },\n    get resources() {\n      return (0, _util.shadow)(this, 'resources', this._getInheritableProperty('Resources') || _primitives.Dict.empty);\n    },\n    get mediaBox() {\n      var mediaBox = this._getInheritableProperty('MediaBox', true);\n      if (!Array.isArray(mediaBox) || mediaBox.length !== 4) {\n        return (0, _util.shadow)(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n      }\n      return (0, _util.shadow)(this, 'mediaBox', mediaBox);\n    },\n    get cropBox() {\n      var cropBox = this._getInheritableProperty('CropBox', true);\n      if (!Array.isArray(cropBox) || cropBox.length !== 4) {\n        return (0, _util.shadow)(this, 'cropBox', this.mediaBox);\n      }\n      return (0, _util.shadow)(this, 'cropBox', cropBox);\n    },\n    get userUnit() {\n      var obj = this.pageDict.get('UserUnit');\n      if (!(0, _util.isNum)(obj) || obj <= 0) {\n        obj = DEFAULT_USER_UNIT;\n      }\n      return (0, _util.shadow)(this, 'userUnit', obj);\n    },\n    get view() {\n      var mediaBox = this.mediaBox,\n          cropBox = this.cropBox;\n      if (mediaBox === cropBox) {\n        return (0, _util.shadow)(this, 'view', mediaBox);\n      }\n      var intersection = _util.Util.intersect(cropBox, mediaBox);\n      return (0, _util.shadow)(this, 'view', intersection || mediaBox);\n    },\n    get rotate() {\n      var rotate = this._getInheritableProperty('Rotate') || 0;\n      if (rotate % 90 !== 0) {\n        rotate = 0;\n      } else if (rotate >= 360) {\n        rotate = rotate % 360;\n      } else if (rotate < 0) {\n        rotate = (rotate % 360 + 360) % 360;\n      }\n      return (0, _util.shadow)(this, 'rotate', rotate);\n    },\n    getContentStream: function Page_getContentStream() {\n      var content = this.content;\n      var stream;\n      if (Array.isArray(content)) {\n        var xref = this.xref;\n        var i,\n            n = content.length;\n        var streams = [];\n        for (i = 0; i < n; ++i) {\n          streams.push(xref.fetchIfRef(content[i]));\n        }\n        stream = new _stream.StreamsSequenceStream(streams);\n      } else if ((0, _primitives.isStream)(content)) {\n        stream = content;\n      } else {\n        stream = new _stream.NullStream();\n      }\n      return stream;\n    },\n    loadResources: function Page_loadResources(keys) {\n      var _this = this;\n\n      if (!this.resourcesPromise) {\n        this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n      }\n      return this.resourcesPromise.then(function () {\n        var objectLoader = new _obj.ObjectLoader(_this.resources, keys, _this.xref);\n        return objectLoader.load();\n      });\n    },\n    getOperatorList: function getOperatorList(_ref2) {\n      var _this2 = this;\n\n      var handler = _ref2.handler,\n          task = _ref2.task,\n          intent = _ref2.intent,\n          renderInteractiveForms = _ref2.renderInteractiveForms;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var partialEvaluator = new _evaluator.PartialEvaluator({\n        pdfManager: this.pdfManager,\n        xref: this.xref,\n        handler: handler,\n        pageIndex: this.pageIndex,\n        idFactory: this.idFactory,\n        fontCache: this.fontCache,\n        builtInCMapCache: this.builtInCMapCache,\n        options: this.evaluatorOptions,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      });\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      var pageListPromise = dataPromises.then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n            contentStream = _ref4[0];\n\n        var opList = new _operator_list.OperatorList(intent, handler, _this2.pageIndex);\n        handler.send('StartRenderPage', {\n          transparency: partialEvaluator.hasBlendModes(_this2.resources),\n          pageIndex: _this2.pageIndex,\n          intent: intent\n        });\n        return partialEvaluator.getOperatorList({\n          stream: contentStream,\n          task: task,\n          resources: _this2.resources,\n          operatorList: opList\n        }).then(function () {\n          return opList;\n        });\n      });\n      var annotationsPromise = this.pdfManager.ensure(this, 'annotations');\n      return Promise.all([pageListPromise, annotationsPromise]).then(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            pageOpList = _ref6[0],\n            annotations = _ref6[1];\n\n        if (annotations.length === 0) {\n          pageOpList.flush(true);\n          return pageOpList;\n        }\n        var i,\n            ii,\n            opListPromises = [];\n        for (i = 0, ii = annotations.length; i < ii; i++) {\n          if (isAnnotationRenderable(annotations[i], intent)) {\n            opListPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderInteractiveForms));\n          }\n        }\n        return Promise.all(opListPromises).then(function (opLists) {\n          pageOpList.addOp(_util.OPS.beginAnnotations, []);\n          for (i = 0, ii = opLists.length; i < ii; i++) {\n            pageOpList.addOpList(opLists[i]);\n          }\n          pageOpList.addOp(_util.OPS.endAnnotations, []);\n          pageOpList.flush(true);\n          return pageOpList;\n        });\n      });\n    },\n    extractTextContent: function extractTextContent(_ref7) {\n      var _this3 = this;\n\n      var handler = _ref7.handler,\n          task = _ref7.task,\n          normalizeWhitespace = _ref7.normalizeWhitespace,\n          sink = _ref7.sink,\n          combineTextItems = _ref7.combineTextItems;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'XObject', 'Font']);\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      return dataPromises.then(function (_ref8) {\n        var _ref9 = _slicedToArray(_ref8, 1),\n            contentStream = _ref9[0];\n\n        var partialEvaluator = new _evaluator.PartialEvaluator({\n          pdfManager: _this3.pdfManager,\n          xref: _this3.xref,\n          handler: handler,\n          pageIndex: _this3.pageIndex,\n          idFactory: _this3.idFactory,\n          fontCache: _this3.fontCache,\n          builtInCMapCache: _this3.builtInCMapCache,\n          options: _this3.evaluatorOptions,\n          pdfFunctionFactory: _this3.pdfFunctionFactory\n        });\n        return partialEvaluator.getTextContent({\n          stream: contentStream,\n          task: task,\n          resources: _this3.resources,\n          normalizeWhitespace: normalizeWhitespace,\n          combineTextItems: combineTextItems,\n          sink: sink\n        });\n      });\n    },\n\n    getAnnotationsData: function Page_getAnnotationsData(intent) {\n      var annotations = this.annotations;\n      var annotationsData = [];\n      for (var i = 0, n = annotations.length; i < n; ++i) {\n        if (!intent || isAnnotationRenderable(annotations[i], intent)) {\n          annotationsData.push(annotations[i].data);\n        }\n      }\n      return annotationsData;\n    },\n    get annotations() {\n      var annotations = [];\n      var annotationRefs = this._getInheritableProperty('Annots') || [];\n      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n        var annotationRef = annotationRefs[i];\n        var annotation = _annotation.AnnotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n        if (annotation) {\n          annotations.push(annotation);\n        }\n      }\n      return (0, _util.shadow)(this, 'annotations', annotations);\n    }\n  };\n  return Page;\n}();\nvar PDFDocument = function PDFDocumentClosure() {\n  var FINGERPRINT_FIRST_BYTES = 1024;\n  var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n  function PDFDocument(pdfManager, arg) {\n    var stream;\n    if ((0, _primitives.isStream)(arg)) {\n      stream = arg;\n    } else if ((0, _util.isArrayBuffer)(arg)) {\n      stream = new _stream.Stream(arg);\n    } else {\n      throw new Error('PDFDocument: Unknown argument type');\n    }\n    if (stream.length <= 0) {\n      throw new Error('PDFDocument: stream must have data');\n    }\n    this.pdfManager = pdfManager;\n    this.stream = stream;\n    this.xref = new _obj.XRef(stream, pdfManager);\n    var evaluatorOptions = pdfManager.evaluatorOptions;\n    this.pdfFunctionFactory = new _function.PDFFunctionFactory({\n      xref: this.xref,\n      isEvalSupported: evaluatorOptions.isEvalSupported\n    });\n  }\n  function find(stream, needle, limit, backwards) {\n    var pos = stream.pos;\n    var end = stream.end;\n    var strBuf = [];\n    if (pos + limit > end) {\n      limit = end - pos;\n    }\n    for (var n = 0; n < limit; ++n) {\n      strBuf.push(String.fromCharCode(stream.getByte()));\n    }\n    var str = strBuf.join('');\n    stream.pos = pos;\n    var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n    if (index === -1) {\n      return false;\n    }\n    stream.pos += index;\n    return true;\n  }\n  var DocumentInfoValidators = {\n    get entries() {\n      return (0, _util.shadow)(this, 'entries', {\n        Title: _util.isString,\n        Author: _util.isString,\n        Subject: _util.isString,\n        Keywords: _util.isString,\n        Creator: _util.isString,\n        Producer: _util.isString,\n        CreationDate: _util.isString,\n        ModDate: _util.isString,\n        Trapped: _primitives.isName\n      });\n    }\n  };\n  PDFDocument.prototype = {\n    parse: function PDFDocument_parse(recoveryMode) {\n      this.setup(recoveryMode);\n      var version = this.catalog.catDict.get('Version');\n      if ((0, _primitives.isName)(version)) {\n        this.pdfFormatVersion = version.name;\n      }\n      try {\n        this.acroForm = this.catalog.catDict.get('AcroForm');\n        if (this.acroForm) {\n          this.xfa = this.acroForm.get('XFA');\n          var fields = this.acroForm.get('Fields');\n          if ((!fields || !Array.isArray(fields) || fields.length === 0) && !this.xfa) {\n            this.acroForm = null;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.info)('Something wrong with AcroForm entry');\n        this.acroForm = null;\n      }\n    },\n    get linearization() {\n      var linearization = null;\n      if (this.stream.length) {\n        try {\n          linearization = _parser.Linearization.create(this.stream);\n        } catch (err) {\n          if (err instanceof _util.MissingDataException) {\n            throw err;\n          }\n          (0, _util.info)(err);\n        }\n      }\n      return (0, _util.shadow)(this, 'linearization', linearization);\n    },\n    get startXRef() {\n      var stream = this.stream;\n      var startXRef = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        stream.reset();\n        if (find(stream, 'endobj', 1024)) {\n          startXRef = stream.pos + 6;\n        }\n      } else {\n        var step = 1024;\n        var found = false,\n            pos = stream.end;\n        while (!found && pos > 0) {\n          pos -= step - 'startxref'.length;\n          if (pos < 0) {\n            pos = 0;\n          }\n          stream.pos = pos;\n          found = find(stream, 'startxref', step, true);\n        }\n        if (found) {\n          stream.skip(9);\n          var ch;\n          do {\n            ch = stream.getByte();\n          } while ((0, _util.isSpace)(ch));\n          var str = '';\n          while (ch >= 0x20 && ch <= 0x39) {\n            str += String.fromCharCode(ch);\n            ch = stream.getByte();\n          }\n          startXRef = parseInt(str, 10);\n          if (isNaN(startXRef)) {\n            startXRef = 0;\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'startXRef', startXRef);\n    },\n    get mainXRefEntriesOffset() {\n      var mainXRefEntriesOffset = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n      }\n      return (0, _util.shadow)(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n    },\n    checkHeader: function PDFDocument_checkHeader() {\n      var stream = this.stream;\n      stream.reset();\n      if (find(stream, '%PDF-', 1024)) {\n        stream.moveStart();\n        var MAX_VERSION_LENGTH = 12;\n        var version = '',\n            ch;\n        while ((ch = stream.getByte()) > 0x20) {\n          if (version.length >= MAX_VERSION_LENGTH) {\n            break;\n          }\n          version += String.fromCharCode(ch);\n        }\n        if (!this.pdfFormatVersion) {\n          this.pdfFormatVersion = version.substring(5);\n        }\n        return;\n      }\n    },\n    parseStartXRef: function PDFDocument_parseStartXRef() {\n      var startXRef = this.startXRef;\n      this.xref.setStartXRef(startXRef);\n    },\n    setup: function PDFDocument_setup(recoveryMode) {\n      var _this4 = this;\n\n      this.xref.parse(recoveryMode);\n      var pageFactory = {\n        createPage: function createPage(pageIndex, dict, ref, fontCache, builtInCMapCache) {\n          return new Page({\n            pdfManager: _this4.pdfManager,\n            xref: _this4.xref,\n            pageIndex: pageIndex,\n            pageDict: dict,\n            ref: ref,\n            fontCache: fontCache,\n            builtInCMapCache: builtInCMapCache,\n            pdfFunctionFactory: _this4.pdfFunctionFactory\n          });\n        }\n      };\n      this.catalog = new _obj.Catalog(this.pdfManager, this.xref, pageFactory);\n    },\n    get numPages() {\n      var linearization = this.linearization;\n      var num = linearization ? linearization.numPages : this.catalog.numPages;\n      return (0, _util.shadow)(this, 'numPages', num);\n    },\n    get documentInfo() {\n      var docInfo = {\n        PDFFormatVersion: this.pdfFormatVersion,\n        IsAcroFormPresent: !!this.acroForm,\n        IsXFAPresent: !!this.xfa\n      };\n      var infoDict;\n      try {\n        infoDict = this.xref.trailer.get('Info');\n      } catch (err) {\n        if (err instanceof _util.MissingDataException) {\n          throw err;\n        }\n        (0, _util.info)('The document information dictionary is invalid.');\n      }\n      if (infoDict) {\n        var validEntries = DocumentInfoValidators.entries;\n        for (var key in validEntries) {\n          if (infoDict.has(key)) {\n            var value = infoDict.get(key);\n            if (validEntries[key](value)) {\n              docInfo[key] = typeof value !== 'string' ? value : (0, _util.stringToPDFString)(value);\n            } else {\n              (0, _util.info)('Bad value in document info for \"' + key + '\"');\n            }\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'documentInfo', docInfo);\n    },\n    get fingerprint() {\n      var xref = this.xref,\n          hash,\n          fileID = '';\n      var idArray = xref.trailer.get('ID');\n      if (Array.isArray(idArray) && idArray[0] && (0, _util.isString)(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n        hash = (0, _util.stringToBytes)(idArray[0]);\n      } else {\n        if (this.stream.ensureRange) {\n          this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n        }\n        hash = (0, _crypto.calculateMD5)(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n      }\n      for (var i = 0, n = hash.length; i < n; i++) {\n        var hex = hash[i].toString(16);\n        fileID += hex.length === 1 ? '0' + hex : hex;\n      }\n      return (0, _util.shadow)(this, 'fingerprint', fileID);\n    },\n    getPage: function PDFDocument_getPage(pageIndex) {\n      return this.catalog.getPage(pageIndex);\n    },\n    cleanup: function PDFDocument_cleanup() {\n      return this.catalog.cleanup();\n    }\n  };\n  return PDFDocument;\n}();\nexports.Page = Page;\nexports.PDFDocument = PDFDocument;\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxStream = undefined;\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _ccitt = __w_pdfjs_require__(65);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar CCITTFaxStream = function CCITTFaxStreamClosure() {\n  function CCITTFaxStream(str, maybeLength, params) {\n    this.str = str;\n    this.dict = str.dict;\n    if (!(0, _primitives.isDict)(params)) {\n      params = _primitives.Dict.empty;\n    }\n    var source = {\n      next: function next() {\n        return str.getByte();\n      }\n    };\n    this.ccittFaxDecoder = new _ccitt.CCITTFaxDecoder(source, {\n      K: params.get('K'),\n      EndOfLine: params.get('EndOfLine'),\n      EncodedByteAlign: params.get('EncodedByteAlign'),\n      Columns: params.get('Columns'),\n      Rows: params.get('Rows'),\n      EndOfBlock: params.get('EndOfBlock'),\n      BlackIs1: params.get('BlackIs1')\n    });\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  CCITTFaxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  CCITTFaxStream.prototype.readBlock = function () {\n    while (!this.eof) {\n      var c = this.ccittFaxDecoder.readNextChar();\n      if (c === -1) {\n        this.eof = true;\n        return;\n      }\n      this.ensureBuffer(this.bufferLength + 1);\n      this.buffer[this.bufferLength++] = c;\n    }\n  };\n  return CCITTFaxStream;\n}();\nexports.CCITTFaxStream = CCITTFaxStream;\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Stream = undefined;\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _jbig = __w_pdfjs_require__(136);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar Jbig2Stream = function Jbig2StreamClosure() {\n  function Jbig2Stream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  Jbig2Stream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n    get: function get() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n\n    configurable: true\n  });\n  Jbig2Stream.prototype.ensureBuffer = function (requested) {};\n  Jbig2Stream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jbig2Image = new _jbig.Jbig2Image();\n    var chunks = [];\n    if ((0, _primitives.isDict)(this.params)) {\n      var globalsStream = this.params.get('JBIG2Globals');\n      if ((0, _primitives.isStream)(globalsStream)) {\n        var globals = globalsStream.getBytes();\n        chunks.push({\n          data: globals,\n          start: 0,\n          end: globals.length\n        });\n      }\n    }\n    chunks.push({\n      data: this.bytes,\n      start: 0,\n      end: this.bytes.length\n    });\n    var data = jbig2Image.parseChunks(chunks);\n    var dataLength = data.length;\n    for (var i = 0; i < dataLength; i++) {\n      data[i] ^= 0xFF;\n    }\n    this.buffer = data;\n    this.bufferLength = dataLength;\n    this.eof = true;\n  };\n  return Jbig2Stream;\n}();\nexports.Jbig2Stream = Jbig2Stream;\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Image = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _arithmetic_decoder = __w_pdfjs_require__(66);\n\nvar _ccitt = __w_pdfjs_require__(65);\n\nvar Jbig2Error = function Jbig2ErrorClosure() {\n  function Jbig2Error(msg) {\n    this.message = 'JBIG2 error: ' + msg;\n  }\n  Jbig2Error.prototype = new Error();\n  Jbig2Error.prototype.name = 'Jbig2Error';\n  Jbig2Error.constructor = Jbig2Error;\n  return Jbig2Error;\n}();\nvar Jbig2Image = function Jbig2ImageClosure() {\n  function ContextCache() {}\n  ContextCache.prototype = {\n    getContexts: function getContexts(id) {\n      if (id in this) {\n        return this[id];\n      }\n      return this[id] = new Int8Array(1 << 16);\n    }\n  };\n  function DecodingContext(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n  }\n  DecodingContext.prototype = {\n    get decoder() {\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(this.data, this.start, this.end);\n      return (0, _util.shadow)(this, 'decoder', decoder);\n    },\n    get contextCache() {\n      var cache = new ContextCache();\n      return (0, _util.shadow)(this, 'contextCache', cache);\n    }\n  };\n  function decodeInteger(contextCache, procedure, decoder) {\n    var contexts = contextCache.getContexts(procedure);\n    var prev = 1;\n    function readBits(length) {\n      var v = 0;\n      for (var i = 0; i < length; i++) {\n        var bit = decoder.readBit(contexts, prev);\n        prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n        v = v << 1 | bit;\n      }\n      return v >>> 0;\n    }\n    var sign = readBits(1);\n    var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n    return sign === 0 ? value : value > 0 ? -value : null;\n  }\n  function decodeIAID(contextCache, decoder, codeLength) {\n    var contexts = contextCache.getContexts('IAID');\n    var prev = 1;\n    for (var i = 0; i < codeLength; i++) {\n      var bit = decoder.readBit(contexts, prev);\n      prev = prev << 1 | bit;\n    }\n    if (codeLength < 31) {\n      return prev & (1 << codeLength) - 1;\n    }\n    return prev & 0x7FFFFFFF;\n  }\n  var SegmentTypes = ['SymbolDictionary', null, null, null, 'IntermediateTextRegion', null, 'ImmediateTextRegion', 'ImmediateLosslessTextRegion', null, null, null, null, null, null, null, null, 'PatternDictionary', null, null, null, 'IntermediateHalftoneRegion', null, 'ImmediateHalftoneRegion', 'ImmediateLosslessHalftoneRegion', null, null, null, null, null, null, null, null, null, null, null, null, 'IntermediateGenericRegion', null, 'ImmediateGenericRegion', 'ImmediateLosslessGenericRegion', 'IntermediateGenericRefinementRegion', null, 'ImmediateGenericRefinementRegion', 'ImmediateLosslessGenericRefinementRegion', null, null, null, null, 'PageInformation', 'EndOfPage', 'EndOfStripe', 'EndOfFile', 'Profiles', 'Tables', null, null, null, null, null, null, null, null, 'Extension'];\n  var CodingTemplates = [[{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: 2,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -3,\n    y: -1\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }]];\n  var RefinementTemplates = [{\n    coding: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: -1,\n      y: 1\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }, {\n    coding: [{\n      x: -1,\n      y: -1\n    }, {\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }];\n  var ReusedContexts = [0x9B25, 0x0795, 0x00E5, 0x0195];\n  var RefinementReusedContexts = [0x0020, 0x0008];\n  function decodeBitmapTemplate0(width, height, decodingContext) {\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var contextLabel,\n        i,\n        j,\n        pixel,\n        row,\n        row1,\n        row2,\n        bitmap = [];\n    var OLD_PIXEL_MASK = 0x7BF7;\n    for (i = 0; i < height; i++) {\n      row = bitmap[i] = new Uint8Array(width);\n      row1 = i < 1 ? row : bitmap[i - 1];\n      row2 = i < 2 ? row : bitmap[i - 2];\n      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n      for (j = 0; j < width; j++) {\n        row[j] = pixel = decoder.readBit(contexts, contextLabel);\n        contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n    if (mmr) {\n      var input = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n      return decodeMMRBitmap(input, width, height, false);\n    }\n    if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n      return decodeBitmapTemplate0(width, height, decodingContext);\n    }\n    var useskip = !!skip;\n    var template = CodingTemplates[templateIndex].concat(at);\n    template.sort(function (a, b) {\n      return a.y - b.y || a.x - b.x;\n    });\n    var templateLength = template.length;\n    var templateX = new Int8Array(templateLength);\n    var templateY = new Int8Array(templateLength);\n    var changingTemplateEntries = [];\n    var reuseMask = 0,\n        minX = 0,\n        maxX = 0,\n        minY = 0;\n    var c, k;\n    for (k = 0; k < templateLength; k++) {\n      templateX[k] = template[k].x;\n      templateY[k] = template[k].y;\n      minX = Math.min(minX, template[k].x);\n      maxX = Math.max(maxX, template[k].x);\n      minY = Math.min(minY, template[k].y);\n      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n        reuseMask |= 1 << templateLength - 1 - k;\n      } else {\n        changingTemplateEntries.push(k);\n      }\n    }\n    var changingEntriesLength = changingTemplateEntries.length;\n    var changingTemplateX = new Int8Array(changingEntriesLength);\n    var changingTemplateY = new Int8Array(changingEntriesLength);\n    var changingTemplateBit = new Uint16Array(changingEntriesLength);\n    for (c = 0; c < changingEntriesLength; c++) {\n      k = changingTemplateEntries[c];\n      changingTemplateX[c] = template[k].x;\n      changingTemplateY[c] = template[k].y;\n      changingTemplateBit[c] = 1 << templateLength - 1 - k;\n    }\n    var sbb_left = -minX;\n    var sbb_top = -minY;\n    var sbb_right = width - maxX;\n    var pseudoPixelContext = ReusedContexts[templateIndex];\n    var row = new Uint8Array(width);\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var ltp = 0,\n        j,\n        i0,\n        j0,\n        contextLabel = 0,\n        bit,\n        shift;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          bitmap.push(row);\n          continue;\n        }\n      }\n      row = new Uint8Array(row);\n      bitmap.push(row);\n      for (j = 0; j < width; j++) {\n        if (useskip && skip[i][j]) {\n          row[j] = 0;\n          continue;\n        }\n        if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n          contextLabel = contextLabel << 1 & reuseMask;\n          for (k = 0; k < changingEntriesLength; k++) {\n            i0 = i + changingTemplateY[k];\n            j0 = j + changingTemplateX[k];\n            bit = bitmap[i0][j0];\n            if (bit) {\n              bit = changingTemplateBit[k];\n              contextLabel |= bit;\n            }\n          }\n        } else {\n          contextLabel = 0;\n          shift = templateLength - 1;\n          for (k = 0; k < templateLength; k++, shift--) {\n            j0 = j + templateX[k];\n            if (j0 >= 0 && j0 < width) {\n              i0 = i + templateY[k];\n              if (i0 >= 0) {\n                bit = bitmap[i0][j0];\n                if (bit) {\n                  contextLabel |= bit << shift;\n                }\n              }\n            }\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n    var codingTemplate = RefinementTemplates[templateIndex].coding;\n    if (templateIndex === 0) {\n      codingTemplate = codingTemplate.concat([at[0]]);\n    }\n    var codingTemplateLength = codingTemplate.length;\n    var codingTemplateX = new Int32Array(codingTemplateLength);\n    var codingTemplateY = new Int32Array(codingTemplateLength);\n    var k;\n    for (k = 0; k < codingTemplateLength; k++) {\n      codingTemplateX[k] = codingTemplate[k].x;\n      codingTemplateY[k] = codingTemplate[k].y;\n    }\n    var referenceTemplate = RefinementTemplates[templateIndex].reference;\n    if (templateIndex === 0) {\n      referenceTemplate = referenceTemplate.concat([at[1]]);\n    }\n    var referenceTemplateLength = referenceTemplate.length;\n    var referenceTemplateX = new Int32Array(referenceTemplateLength);\n    var referenceTemplateY = new Int32Array(referenceTemplateLength);\n    for (k = 0; k < referenceTemplateLength; k++) {\n      referenceTemplateX[k] = referenceTemplate[k].x;\n      referenceTemplateY[k] = referenceTemplate[k].y;\n    }\n    var referenceWidth = referenceBitmap[0].length;\n    var referenceHeight = referenceBitmap.length;\n    var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GR');\n    var ltp = 0;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          throw new Jbig2Error('prediction is not supported');\n        }\n      }\n      var row = new Uint8Array(width);\n      bitmap.push(row);\n      for (var j = 0; j < width; j++) {\n        var i0, j0;\n        var contextLabel = 0;\n        for (k = 0; k < codingTemplateLength; k++) {\n          i0 = i + codingTemplateY[k];\n          j0 = j + codingTemplateX[k];\n          if (i0 < 0 || j0 < 0 || j0 >= width) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | bitmap[i0][j0];\n          }\n        }\n        for (k = 0; k < referenceTemplateLength; k++) {\n          i0 = i + referenceTemplateY[k] - offsetY;\n          j0 = j + referenceTemplateX[k] - offsetX;\n          if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('symbol refinement with Huffman is not supported');\n    }\n    var newSymbols = [];\n    var currentHeight = 0;\n    var symbolCodeLength = (0, _util.log2)(symbols.length + numberOfNewSymbols);\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var tableB1 = void 0,\n        symbolWidths = void 0;\n    if (huffman) {\n      tableB1 = getStandardTable(1);\n      symbolWidths = [];\n      symbolCodeLength = Math.max(symbolCodeLength, 1);\n    }\n    while (newSymbols.length < numberOfNewSymbols) {\n      var deltaHeight = huffman ? huffmanTables.tableDeltaHeight.decode(huffmanInput) : decodeInteger(contextCache, 'IADH', decoder);\n      currentHeight += deltaHeight;\n      var currentWidth = 0,\n          totalWidth = 0;\n      var firstSymbol = huffman ? symbolWidths.length : 0;\n      while (true) {\n        var deltaWidth = huffman ? huffmanTables.tableDeltaWidth.decode(huffmanInput) : decodeInteger(contextCache, 'IADW', decoder);\n        if (deltaWidth === null) {\n          break;\n        }\n        currentWidth += deltaWidth;\n        totalWidth += currentWidth;\n        var bitmap;\n        if (refinement) {\n          var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n          if (numberOfInstances > 1) {\n            bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, 0, huffmanInput);\n          } else {\n            var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n            var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n            var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n            var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n            bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n          }\n          newSymbols.push(bitmap);\n        } else if (huffman) {\n          symbolWidths.push(currentWidth);\n        } else {\n          bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n          newSymbols.push(bitmap);\n        }\n      }\n      if (huffman && !refinement) {\n        var bitmapSize = huffmanTables.tableBitmapSize.decode(huffmanInput);\n        huffmanInput.byteAlign();\n        var collectiveBitmap = void 0;\n        if (bitmapSize === 0) {\n          collectiveBitmap = readUncompressedBitmap(huffmanInput, totalWidth, currentHeight);\n        } else {\n          var originalEnd = huffmanInput.end;\n          var bitmapEnd = huffmanInput.position + bitmapSize;\n          huffmanInput.end = bitmapEnd;\n          collectiveBitmap = decodeMMRBitmap(huffmanInput, totalWidth, currentHeight, false);\n          huffmanInput.end = originalEnd;\n          huffmanInput.position = bitmapEnd;\n        }\n        var numberOfSymbolsDecoded = symbolWidths.length;\n        if (firstSymbol === numberOfSymbolsDecoded - 1) {\n          newSymbols.push(collectiveBitmap);\n        } else {\n          var _i = void 0,\n              y = void 0,\n              xMin = 0,\n              xMax = void 0,\n              bitmapWidth = void 0,\n              symbolBitmap = void 0;\n          for (_i = firstSymbol; _i < numberOfSymbolsDecoded; _i++) {\n            bitmapWidth = symbolWidths[_i];\n            xMax = xMin + bitmapWidth;\n            symbolBitmap = [];\n            for (y = 0; y < currentHeight; y++) {\n              symbolBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n            }\n            newSymbols.push(symbolBitmap);\n            xMin = xMax;\n          }\n        }\n      }\n    }\n    var exportedSymbols = [];\n    var flags = [],\n        currentFlag = false;\n    var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n    while (flags.length < totalSymbolsLength) {\n      var runLength = huffman ? tableB1.decode(huffmanInput) : decodeInteger(contextCache, 'IAEX', decoder);\n      while (runLength--) {\n        flags.push(currentFlag);\n      }\n      currentFlag = !currentFlag;\n    }\n    for (var i = 0, ii = symbols.length; i < ii; i++) {\n      if (flags[i]) {\n        exportedSymbols.push(symbols[i]);\n      }\n    }\n    for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n      if (flags[i]) {\n        exportedSymbols.push(newSymbols[j]);\n      }\n    }\n    return exportedSymbols;\n  }\n  function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, logStripSize, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    var bitmap = [];\n    var i, row;\n    for (i = 0; i < height; i++) {\n      row = new Uint8Array(width);\n      if (defaultPixelValue) {\n        for (var j = 0; j < width; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      bitmap.push(row);\n    }\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var stripT = huffman ? -huffmanTables.tableDeltaT.decode(huffmanInput) : -decodeInteger(contextCache, 'IADT', decoder);\n    var firstS = 0;\n    i = 0;\n    while (i < numberOfSymbolInstances) {\n      var deltaT = huffman ? huffmanTables.tableDeltaT.decode(huffmanInput) : decodeInteger(contextCache, 'IADT', decoder);\n      stripT += deltaT;\n      var deltaFirstS = huffman ? huffmanTables.tableFirstS.decode(huffmanInput) : decodeInteger(contextCache, 'IAFS', decoder);\n      firstS += deltaFirstS;\n      var currentS = firstS;\n      do {\n        var currentT = 0;\n        if (stripSize > 1) {\n          currentT = huffman ? huffmanInput.readBits(logStripSize) : decodeInteger(contextCache, 'IAIT', decoder);\n        }\n        var t = stripSize * stripT + currentT;\n        var symbolId = huffman ? huffmanTables.symbolIDTable.decode(huffmanInput) : decodeIAID(contextCache, decoder, symbolCodeLength);\n        var applyRefinement = refinement && (huffman ? huffmanInput.readBit() : decodeInteger(contextCache, 'IARI', decoder));\n        var symbolBitmap = inputSymbols[symbolId];\n        var symbolWidth = symbolBitmap[0].length;\n        var symbolHeight = symbolBitmap.length;\n        if (applyRefinement) {\n          var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n          var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n          var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n          var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n          symbolWidth += rdw;\n          symbolHeight += rdh;\n          symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n        }\n        var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n        var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n        var s2, t2, symbolRow;\n        if (transposed) {\n          for (s2 = 0; s2 < symbolHeight; s2++) {\n            row = bitmap[offsetS + s2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[s2];\n            var maxWidth = Math.min(width - offsetT, symbolWidth);\n            switch (combinationOperator) {\n              case 0:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] |= symbolRow[t2];\n                }\n                break;\n              case 2:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] ^= symbolRow[t2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolHeight - 1;\n        } else {\n          for (t2 = 0; t2 < symbolHeight; t2++) {\n            row = bitmap[offsetT + t2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[t2];\n            switch (combinationOperator) {\n              case 0:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] |= symbolRow[s2];\n                }\n                break;\n              case 2:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] ^= symbolRow[s2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolWidth - 1;\n        }\n        i++;\n        var deltaS = huffman ? huffmanTables.tableDeltaS.decode(huffmanInput) : decodeInteger(contextCache, 'IADS', decoder);\n        if (deltaS === null) {\n          break;\n        }\n        currentS += deltaS + dsOffset;\n      } while (true);\n    }\n    return bitmap;\n  }\n  function decodePatternDictionary(mmr, patternWidth, patternHeight, maxPatternIndex, template, decodingContext) {\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: -patternWidth,\n        y: 0\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n    var collectiveBitmap = decodeBitmap(mmr, collectiveWidth, patternHeight, template, false, null, at, decodingContext);\n    var patterns = [],\n        i = 0,\n        patternBitmap = void 0,\n        xMin = void 0,\n        xMax = void 0,\n        y = void 0;\n    while (i <= maxPatternIndex) {\n      patternBitmap = [];\n      xMin = patternWidth * i;\n      xMax = xMin + patternWidth;\n      for (y = 0; y < patternHeight; y++) {\n        patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n      }\n      patterns.push(patternBitmap);\n      i++;\n    }\n    return patterns;\n  }\n  function decodeHalftoneRegion(mmr, patterns, template, regionWidth, regionHeight, defaultPixelValue, enableSkip, combinationOperator, gridWidth, gridHeight, gridOffsetX, gridOffsetY, gridVectorX, gridVectorY, decodingContext) {\n    var skip = null;\n    if (enableSkip) {\n      throw new Jbig2Error('skip is not supported');\n    }\n    if (combinationOperator !== 0) {\n      throw new Jbig2Error('operator ' + combinationOperator + ' is not supported in halftone region');\n    }\n    var regionBitmap = [];\n    var i = void 0,\n        j = void 0,\n        row = void 0;\n    for (i = 0; i < regionHeight; i++) {\n      row = new Uint8Array(regionWidth);\n      if (defaultPixelValue) {\n        for (j = 0; j < regionWidth; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      regionBitmap.push(row);\n    }\n    var numberOfPatterns = patterns.length;\n    var pattern0 = patterns[0];\n    var patternWidth = pattern0[0].length,\n        patternHeight = pattern0.length;\n    var bitsPerValue = (0, _util.log2)(numberOfPatterns);\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: template <= 1 ? 3 : 2,\n        y: -1\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var grayScaleBitPlanes = [],\n        mmrInput = void 0,\n        bitmap = void 0;\n    if (mmr) {\n      mmrInput = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n    }\n    for (i = bitsPerValue - 1; i >= 0; i--) {\n      if (mmr) {\n        bitmap = decodeMMRBitmap(mmrInput, gridWidth, gridHeight, true);\n      } else {\n        bitmap = decodeBitmap(false, gridWidth, gridHeight, template, false, skip, at, decodingContext);\n      }\n      grayScaleBitPlanes[i] = bitmap;\n    }\n    var mg = void 0,\n        ng = void 0,\n        bit = void 0,\n        patternIndex = void 0,\n        patternBitmap = void 0,\n        x = void 0,\n        y = void 0,\n        patternRow = void 0,\n        regionRow = void 0;\n    for (mg = 0; mg < gridHeight; mg++) {\n      for (ng = 0; ng < gridWidth; ng++) {\n        bit = 0;\n        patternIndex = 0;\n        for (j = bitsPerValue - 1; j >= 0; j--) {\n          bit = grayScaleBitPlanes[j][mg][ng] ^ bit;\n          patternIndex |= bit << j;\n        }\n        patternBitmap = patterns[patternIndex];\n        x = gridOffsetX + mg * gridVectorY + ng * gridVectorX >> 8;\n        y = gridOffsetY + mg * gridVectorX - ng * gridVectorY >> 8;\n        if (x >= 0 && x + patternWidth <= regionWidth && y >= 0 && y + patternHeight <= regionHeight) {\n          for (i = 0; i < patternHeight; i++) {\n            regionRow = regionBitmap[y + i];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionRow[x + j] |= patternRow[j];\n            }\n          }\n        } else {\n          var regionX = void 0,\n              regionY = void 0;\n          for (i = 0; i < patternHeight; i++) {\n            regionY = y + i;\n            if (regionY < 0 || regionY >= regionHeight) {\n              continue;\n            }\n            regionRow = regionBitmap[regionY];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionX = x + j;\n              if (regionX >= 0 && regionX < regionWidth) {\n                regionRow[regionX] |= patternRow[j];\n              }\n            }\n          }\n        }\n      }\n    }\n    return regionBitmap;\n  }\n  function readSegmentHeader(data, start) {\n    var segmentHeader = {};\n    segmentHeader.number = (0, _util.readUint32)(data, start);\n    var flags = data[start + 4];\n    var segmentType = flags & 0x3F;\n    if (!SegmentTypes[segmentType]) {\n      throw new Jbig2Error('invalid segment type: ' + segmentType);\n    }\n    segmentHeader.type = segmentType;\n    segmentHeader.typeName = SegmentTypes[segmentType];\n    segmentHeader.deferredNonRetain = !!(flags & 0x80);\n    var pageAssociationFieldSize = !!(flags & 0x40);\n    var referredFlags = data[start + 5];\n    var referredToCount = referredFlags >> 5 & 7;\n    var retainBits = [referredFlags & 31];\n    var position = start + 6;\n    if (referredFlags === 7) {\n      referredToCount = (0, _util.readUint32)(data, position - 1) & 0x1FFFFFFF;\n      position += 3;\n      var bytes = referredToCount + 7 >> 3;\n      retainBits[0] = data[position++];\n      while (--bytes > 0) {\n        retainBits.push(data[position++]);\n      }\n    } else if (referredFlags === 5 || referredFlags === 6) {\n      throw new Jbig2Error('invalid referred-to flags');\n    }\n    segmentHeader.retainBits = retainBits;\n    var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n    var referredTo = [];\n    var i, ii;\n    for (i = 0; i < referredToCount; i++) {\n      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? (0, _util.readUint16)(data, position) : (0, _util.readUint32)(data, position);\n      referredTo.push(number);\n      position += referredToSegmentNumberSize;\n    }\n    segmentHeader.referredTo = referredTo;\n    if (!pageAssociationFieldSize) {\n      segmentHeader.pageAssociation = data[position++];\n    } else {\n      segmentHeader.pageAssociation = (0, _util.readUint32)(data, position);\n      position += 4;\n    }\n    segmentHeader.length = (0, _util.readUint32)(data, position);\n    position += 4;\n    if (segmentHeader.length === 0xFFFFFFFF) {\n      if (segmentType === 38) {\n        var genericRegionInfo = readRegionSegmentInformation(data, position);\n        var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n        var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n        var searchPatternLength = 6;\n        var searchPattern = new Uint8Array(searchPatternLength);\n        if (!genericRegionMmr) {\n          searchPattern[0] = 0xFF;\n          searchPattern[1] = 0xAC;\n        }\n        searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n        searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n        searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n        searchPattern[5] = genericRegionInfo.height & 0xFF;\n        for (i = position, ii = data.length; i < ii; i++) {\n          var j = 0;\n          while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n            j++;\n          }\n          if (j === searchPatternLength) {\n            segmentHeader.length = i + searchPatternLength;\n            break;\n          }\n        }\n        if (segmentHeader.length === 0xFFFFFFFF) {\n          throw new Jbig2Error('segment end was not found');\n        }\n      } else {\n        throw new Jbig2Error('invalid unknown segment length');\n      }\n    }\n    segmentHeader.headerEnd = position;\n    return segmentHeader;\n  }\n  function readSegments(header, data, start, end) {\n    var segments = [];\n    var position = start;\n    while (position < end) {\n      var segmentHeader = readSegmentHeader(data, position);\n      position = segmentHeader.headerEnd;\n      var segment = {\n        header: segmentHeader,\n        data: data\n      };\n      if (!header.randomAccess) {\n        segment.start = position;\n        position += segmentHeader.length;\n        segment.end = position;\n      }\n      segments.push(segment);\n      if (segmentHeader.type === 51) {\n        break;\n      }\n    }\n    if (header.randomAccess) {\n      for (var i = 0, ii = segments.length; i < ii; i++) {\n        segments[i].start = position;\n        position += segments[i].header.length;\n        segments[i].end = position;\n      }\n    }\n    return segments;\n  }\n  function readRegionSegmentInformation(data, start) {\n    return {\n      width: (0, _util.readUint32)(data, start),\n      height: (0, _util.readUint32)(data, start + 4),\n      x: (0, _util.readUint32)(data, start + 8),\n      y: (0, _util.readUint32)(data, start + 12),\n      combinationOperator: data[start + 16] & 7\n    };\n  }\n  var RegionSegmentInformationFieldLength = 17;\n  function processSegment(segment, visitor) {\n    var header = segment.header;\n    var data = segment.data,\n        position = segment.start,\n        end = segment.end;\n    var args, at, i, atLength;\n    switch (header.type) {\n      case 0:\n        var dictionary = {};\n        var dictionaryFlags = (0, _util.readUint16)(data, position);\n        dictionary.huffman = !!(dictionaryFlags & 1);\n        dictionary.refinement = !!(dictionaryFlags & 2);\n        dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n        dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n        dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n        dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n        dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n        dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n        dictionary.template = dictionaryFlags >> 10 & 3;\n        dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n        position += 2;\n        if (!dictionary.huffman) {\n          atLength = dictionary.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.at = at;\n        }\n        if (dictionary.refinement && !dictionary.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.refinementAt = at;\n        }\n        dictionary.numberOfExportedSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        dictionary.numberOfNewSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [dictionary, header.number, header.referredTo, data, position, end];\n        break;\n      case 6:\n      case 7:\n        var textRegion = {};\n        textRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var textRegionSegmentFlags = (0, _util.readUint16)(data, position);\n        position += 2;\n        textRegion.huffman = !!(textRegionSegmentFlags & 1);\n        textRegion.refinement = !!(textRegionSegmentFlags & 2);\n        textRegion.logStripSize = textRegionSegmentFlags >> 2 & 3;\n        textRegion.stripSize = 1 << textRegion.logStripSize;\n        textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n        textRegion.transposed = !!(textRegionSegmentFlags & 64);\n        textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n        textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n        textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n        textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n        if (textRegion.huffman) {\n          var textRegionHuffmanFlags = (0, _util.readUint16)(data, position);\n          position += 2;\n          textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n          textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n          textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n          textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n          textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n          textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n          textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n          textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 0x4000);\n        }\n        if (textRegion.refinement && !textRegion.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          textRegion.refinementAt = at;\n        }\n        textRegion.numberOfSymbolInstances = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [textRegion, header.referredTo, data, position, end];\n        break;\n      case 16:\n        var patternDictionary = {};\n        var patternDictionaryFlags = data[position++];\n        patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n        patternDictionary.template = patternDictionaryFlags >> 1 & 3;\n        patternDictionary.patternWidth = data[position++];\n        patternDictionary.patternHeight = data[position++];\n        patternDictionary.maxPatternIndex = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [patternDictionary, header.number, data, position, end];\n        break;\n      case 22:\n      case 23:\n        var halftoneRegion = {};\n        halftoneRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var halftoneRegionFlags = data[position++];\n        halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n        halftoneRegion.template = halftoneRegionFlags >> 1 & 3;\n        halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n        halftoneRegion.combinationOperator = halftoneRegionFlags >> 4 & 7;\n        halftoneRegion.defaultPixelValue = halftoneRegionFlags >> 7 & 1;\n        halftoneRegion.gridWidth = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridHeight = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridOffsetX = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridOffsetY = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridVectorX = (0, _util.readUint16)(data, position);\n        position += 2;\n        halftoneRegion.gridVectorY = (0, _util.readUint16)(data, position);\n        position += 2;\n        args = [halftoneRegion, header.referredTo, data, position, end];\n        break;\n      case 38:\n      case 39:\n        var genericRegion = {};\n        genericRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var genericRegionSegmentFlags = data[position++];\n        genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n        genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n        genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n        if (!genericRegion.mmr) {\n          atLength = genericRegion.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          genericRegion.at = at;\n        }\n        args = [genericRegion, data, position, end];\n        break;\n      case 48:\n        var pageInfo = {\n          width: (0, _util.readUint32)(data, position),\n          height: (0, _util.readUint32)(data, position + 4),\n          resolutionX: (0, _util.readUint32)(data, position + 8),\n          resolutionY: (0, _util.readUint32)(data, position + 12)\n        };\n        if (pageInfo.height === 0xFFFFFFFF) {\n          delete pageInfo.height;\n        }\n        var pageSegmentFlags = data[position + 16];\n        (0, _util.readUint16)(data, position + 17);\n        pageInfo.lossless = !!(pageSegmentFlags & 1);\n        pageInfo.refinement = !!(pageSegmentFlags & 2);\n        pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n        pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n        pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n        pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n        args = [pageInfo];\n        break;\n      case 49:\n        break;\n      case 50:\n        break;\n      case 51:\n        break;\n      case 53:\n        args = [header.number, data, position, end];\n        break;\n      case 62:\n        break;\n      default:\n        throw new Jbig2Error('segment type ' + header.typeName + '(' + header.type + ')' + ' is not implemented');\n    }\n    var callbackName = 'on' + header.typeName;\n    if (callbackName in visitor) {\n      visitor[callbackName].apply(visitor, args);\n    }\n  }\n  function processSegments(segments, visitor) {\n    for (var i = 0, ii = segments.length; i < ii; i++) {\n      processSegment(segments[i], visitor);\n    }\n  }\n  function parseJbig2Chunks(chunks) {\n    var visitor = new SimpleSegmentVisitor();\n    for (var i = 0, ii = chunks.length; i < ii; i++) {\n      var chunk = chunks[i];\n      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n      processSegments(segments, visitor);\n    }\n    return visitor.buffer;\n  }\n  function SimpleSegmentVisitor() {}\n  SimpleSegmentVisitor.prototype = {\n    onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n      this.currentPageInfo = info;\n      var rowSize = info.width + 7 >> 3;\n      var buffer = new Uint8ClampedArray(rowSize * info.height);\n      if (info.defaultPixelValue) {\n        for (var i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = 0xFF;\n        }\n      }\n      this.buffer = buffer;\n    },\n    drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n      var pageInfo = this.currentPageInfo;\n      var width = regionInfo.width,\n          height = regionInfo.height;\n      var rowSize = pageInfo.width + 7 >> 3;\n      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n      var buffer = this.buffer;\n      var mask0 = 128 >> (regionInfo.x & 7);\n      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n      var i, j, mask, offset;\n      switch (combinationOperator) {\n        case 0:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] |= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        case 2:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] ^= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        default:\n          throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n      }\n    },\n    onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n      this.onImmediateGenericRegion.apply(this, arguments);\n    },\n    onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      if (dictionary.huffman) {\n        huffmanTables = getSymbolDictionaryHuffmanTables(dictionary, referredSegments, this.customTables);\n        huffmanInput = new Reader(data, start, end);\n      }\n      var symbols = this.symbols;\n      if (!symbols) {\n        this.symbols = symbols = {};\n      }\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext, huffmanInput);\n    },\n    onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n      var regionInfo = region.info;\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      var symbols = this.symbols;\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var symbolCodeLength = (0, _util.log2)(inputSymbols.length);\n      if (region.huffman) {\n        huffmanInput = new Reader(data, start, end);\n        huffmanTables = getTextRegionHuffmanTables(region, referredSegments, this.customTables, inputSymbols.length, huffmanInput);\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext, region.logStripSize, huffmanInput);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n      this.onImmediateTextRegion.apply(this, arguments);\n    },\n    onPatternDictionary: function onPatternDictionary(dictionary, currentSegment, data, start, end) {\n      var patterns = this.patterns;\n      if (!patterns) {\n        this.patterns = patterns = {};\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      patterns[currentSegment] = decodePatternDictionary(dictionary.mmr, dictionary.patternWidth, dictionary.patternHeight, dictionary.maxPatternIndex, dictionary.template, decodingContext);\n    },\n    onImmediateHalftoneRegion: function onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n      var patterns = this.patterns[referredSegments[0]];\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeHalftoneRegion(region.mmr, patterns, region.template, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.enableSkip, region.combinationOperator, region.gridWidth, region.gridHeight, region.gridOffsetX, region.gridOffsetY, region.gridVectorX, region.gridVectorY, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessHalftoneRegion: function onImmediateLosslessHalftoneRegion() {\n      this.onImmediateHalftoneRegion.apply(this, arguments);\n    },\n    onTables: function onTables(currentSegment, data, start, end) {\n      var customTables = this.customTables;\n      if (!customTables) {\n        this.customTables = customTables = {};\n      }\n      customTables[currentSegment] = decodeTablesSegment(data, start, end);\n    }\n  };\n  function HuffmanLine(lineData) {\n    if (lineData.length === 2) {\n      this.isOOB = true;\n      this.rangeLow = 0;\n      this.prefixLength = lineData[0];\n      this.rangeLength = 0;\n      this.prefixCode = lineData[1];\n      this.isLowerRange = false;\n    } else {\n      this.isOOB = false;\n      this.rangeLow = lineData[0];\n      this.prefixLength = lineData[1];\n      this.rangeLength = lineData[2];\n      this.prefixCode = lineData[3];\n      this.isLowerRange = lineData[4] === 'lower';\n    }\n  }\n  function HuffmanTreeNode(line) {\n    this.children = [];\n    if (line) {\n      this.isLeaf = true;\n      this.rangeLength = line.rangeLength;\n      this.rangeLow = line.rangeLow;\n      this.isLowerRange = line.isLowerRange;\n      this.isOOB = line.isOOB;\n    } else {\n      this.isLeaf = false;\n    }\n  }\n  HuffmanTreeNode.prototype = {\n    buildTree: function buildTree(line, shift) {\n      var bit = line.prefixCode >> shift & 1;\n      if (shift <= 0) {\n        this.children[bit] = new HuffmanTreeNode(line);\n      } else {\n        var node = this.children[bit];\n        if (!node) {\n          this.children[bit] = node = new HuffmanTreeNode(null);\n        }\n        node.buildTree(line, shift - 1);\n      }\n    },\n    decodeNode: function decodeNode(reader) {\n      if (this.isLeaf) {\n        if (this.isOOB) {\n          return null;\n        }\n        var htOffset = reader.readBits(this.rangeLength);\n        return this.rangeLow + (this.isLowerRange ? -htOffset : htOffset);\n      }\n      var node = this.children[reader.readBit()];\n      if (!node) {\n        throw new Jbig2Error('invalid Huffman data');\n      }\n      return node.decodeNode(reader);\n    }\n  };\n  function HuffmanTable(lines, prefixCodesDone) {\n    if (!prefixCodesDone) {\n      this.assignPrefixCodes(lines);\n    }\n    this.rootNode = new HuffmanTreeNode(null);\n    var i = void 0,\n        ii = lines.length,\n        line = void 0;\n    for (i = 0; i < ii; i++) {\n      line = lines[i];\n      if (line.prefixLength > 0) {\n        this.rootNode.buildTree(line, line.prefixLength - 1);\n      }\n    }\n  }\n  HuffmanTable.prototype = {\n    decode: function decode(reader) {\n      return this.rootNode.decodeNode(reader);\n    },\n    assignPrefixCodes: function assignPrefixCodes(lines) {\n      var linesLength = lines.length,\n          prefixLengthMax = 0,\n          i = void 0;\n      for (i = 0; i < linesLength; i++) {\n        prefixLengthMax = Math.max(prefixLengthMax, lines[i].prefixLength);\n      }\n      var histogram = new Uint32Array(prefixLengthMax + 1);\n      for (i = 0; i < linesLength; i++) {\n        histogram[lines[i].prefixLength]++;\n      }\n      var currentLength = 1,\n          firstCode = 0,\n          currentCode = void 0,\n          currentTemp = void 0,\n          line = void 0;\n      histogram[0] = 0;\n      while (currentLength <= prefixLengthMax) {\n        firstCode = firstCode + histogram[currentLength - 1] << 1;\n        currentCode = firstCode;\n        currentTemp = 0;\n        while (currentTemp < linesLength) {\n          line = lines[currentTemp];\n          if (line.prefixLength === currentLength) {\n            line.prefixCode = currentCode;\n            currentCode++;\n          }\n          currentTemp++;\n        }\n        currentLength++;\n      }\n    }\n  };\n  function decodeTablesSegment(data, start, end) {\n    var flags = data[start];\n    var lowestValue = (0, _util.readUint32)(data, start + 1) & 0xFFFFFFFF;\n    var highestValue = (0, _util.readUint32)(data, start + 5) & 0xFFFFFFFF;\n    var reader = new Reader(data, start + 9, end);\n    var prefixSizeBits = (flags >> 1 & 7) + 1;\n    var rangeSizeBits = (flags >> 4 & 7) + 1;\n    var lines = [];\n    var prefixLength = void 0,\n        rangeLength = void 0,\n        currentRangeLow = lowestValue;\n    do {\n      prefixLength = reader.readBits(prefixSizeBits);\n      rangeLength = reader.readBits(rangeSizeBits);\n      lines.push(new HuffmanLine([currentRangeLow, prefixLength, rangeLength, 0]));\n      currentRangeLow += 1 << rangeLength;\n    } while (currentRangeLow < highestValue);\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([lowestValue - 1, prefixLength, 32, 0, 'lower']));\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([highestValue, prefixLength, 32, 0]));\n    if (flags & 1) {\n      prefixLength = reader.readBits(prefixSizeBits);\n      lines.push(new HuffmanLine([prefixLength, 0]));\n    }\n    return new HuffmanTable(lines, false);\n  }\n  var standardTablesCache = {};\n  function getStandardTable(number) {\n    var table = standardTablesCache[number];\n    if (table) {\n      return table;\n    }\n    var lines = void 0;\n    switch (number) {\n      case 1:\n        lines = [[0, 1, 4, 0x0], [16, 2, 8, 0x2], [272, 3, 16, 0x6], [65808, 3, 32, 0x7]];\n        break;\n      case 2:\n        lines = [[0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [75, 6, 32, 0x3E], [6, 0x3F]];\n        break;\n      case 3:\n        lines = [[-256, 8, 8, 0xFE], [0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [-257, 8, 32, 0xFF, 'lower'], [75, 7, 32, 0x7E], [6, 0x3E]];\n        break;\n      case 4:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [76, 5, 32, 0x1F]];\n        break;\n      case 5:\n        lines = [[-255, 7, 8, 0x7E], [1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [-256, 7, 32, 0x7F, 'lower'], [76, 6, 32, 0x3E]];\n        break;\n      case 6:\n        lines = [[-2048, 5, 10, 0x1C], [-1024, 4, 9, 0x8], [-512, 4, 8, 0x9], [-256, 4, 7, 0xA], [-128, 5, 6, 0x1D], [-64, 5, 5, 0x1E], [-32, 4, 5, 0xB], [0, 2, 7, 0x0], [128, 3, 7, 0x2], [256, 3, 8, 0x3], [512, 4, 9, 0xC], [1024, 4, 10, 0xD], [-2049, 6, 32, 0x3E, 'lower'], [2048, 6, 32, 0x3F]];\n        break;\n      case 7:\n        lines = [[-1024, 4, 9, 0x8], [-512, 3, 8, 0x0], [-256, 4, 7, 0x9], [-128, 5, 6, 0x1A], [-64, 5, 5, 0x1B], [-32, 4, 5, 0xA], [0, 4, 5, 0xB], [32, 5, 5, 0x1C], [64, 5, 6, 0x1D], [128, 4, 7, 0xC], [256, 3, 8, 0x1], [512, 3, 9, 0x2], [1024, 3, 10, 0x3], [-1025, 5, 32, 0x1E, 'lower'], [2048, 5, 32, 0x1F]];\n        break;\n      case 8:\n        lines = [[-15, 8, 3, 0xFC], [-7, 9, 1, 0x1FC], [-5, 8, 1, 0xFD], [-3, 9, 0, 0x1FD], [-2, 7, 0, 0x7C], [-1, 4, 0, 0xA], [0, 2, 1, 0x0], [2, 5, 0, 0x1A], [3, 6, 0, 0x3A], [4, 3, 4, 0x4], [20, 6, 1, 0x3B], [22, 4, 4, 0xB], [38, 4, 5, 0xC], [70, 5, 6, 0x1B], [134, 5, 7, 0x1C], [262, 6, 7, 0x3C], [390, 7, 8, 0x7D], [646, 6, 10, 0x3D], [-16, 9, 32, 0x1FE, 'lower'], [1670, 9, 32, 0x1FF], [2, 0x1]];\n        break;\n      case 9:\n        lines = [[-31, 8, 4, 0xFC], [-15, 9, 2, 0x1FC], [-11, 8, 2, 0xFD], [-7, 9, 1, 0x1FD], [-5, 7, 1, 0x7C], [-3, 4, 1, 0xA], [-1, 3, 1, 0x2], [1, 3, 1, 0x3], [3, 5, 1, 0x1A], [5, 6, 1, 0x3A], [7, 3, 5, 0x4], [39, 6, 2, 0x3B], [43, 4, 5, 0xB], [75, 4, 6, 0xC], [139, 5, 7, 0x1B], [267, 5, 8, 0x1C], [523, 6, 8, 0x3C], [779, 7, 9, 0x7D], [1291, 6, 11, 0x3D], [-32, 9, 32, 0x1FE, 'lower'], [3339, 9, 32, 0x1FF], [2, 0x0]];\n        break;\n      case 10:\n        lines = [[-21, 7, 4, 0x7A], [-5, 8, 0, 0xFC], [-4, 7, 0, 0x7B], [-3, 5, 0, 0x18], [-2, 2, 2, 0x0], [2, 5, 0, 0x19], [3, 6, 0, 0x36], [4, 7, 0, 0x7C], [5, 8, 0, 0xFD], [6, 2, 6, 0x1], [70, 5, 5, 0x1A], [102, 6, 5, 0x37], [134, 6, 6, 0x38], [198, 6, 7, 0x39], [326, 6, 8, 0x3A], [582, 6, 9, 0x3B], [1094, 6, 10, 0x3C], [2118, 7, 11, 0x7D], [-22, 8, 32, 0xFE, 'lower'], [4166, 8, 32, 0xFF], [2, 0x2]];\n        break;\n      case 11:\n        lines = [[1, 1, 0, 0x0], [2, 2, 1, 0x2], [4, 4, 0, 0xC], [5, 4, 1, 0xD], [7, 5, 1, 0x1C], [9, 5, 2, 0x1D], [13, 6, 2, 0x3C], [17, 7, 2, 0x7A], [21, 7, 3, 0x7B], [29, 7, 4, 0x7C], [45, 7, 5, 0x7D], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 12:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 1, 0x6], [5, 5, 0, 0x1C], [6, 5, 1, 0x1D], [8, 6, 1, 0x3C], [10, 7, 0, 0x7A], [11, 7, 1, 0x7B], [13, 7, 2, 0x7C], [17, 7, 3, 0x7D], [25, 7, 4, 0x7E], [41, 8, 5, 0xFE], [73, 8, 32, 0xFF]];\n        break;\n      case 13:\n        lines = [[1, 1, 0, 0x0], [2, 3, 0, 0x4], [3, 4, 0, 0xC], [4, 5, 0, 0x1C], [5, 4, 1, 0xD], [7, 3, 3, 0x5], [15, 6, 1, 0x3A], [17, 6, 2, 0x3B], [21, 6, 3, 0x3C], [29, 6, 4, 0x3D], [45, 6, 5, 0x3E], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 14:\n        lines = [[-2, 3, 0, 0x4], [-1, 3, 0, 0x5], [0, 1, 0, 0x0], [1, 3, 0, 0x6], [2, 3, 0, 0x7]];\n        break;\n      case 15:\n        lines = [[-24, 7, 4, 0x7C], [-8, 6, 2, 0x3C], [-4, 5, 1, 0x1C], [-2, 4, 0, 0xC], [-1, 3, 0, 0x4], [0, 1, 0, 0x0], [1, 3, 0, 0x5], [2, 4, 0, 0xD], [3, 5, 1, 0x1D], [5, 6, 2, 0x3D], [9, 7, 4, 0x7D], [-25, 7, 32, 0x7E, 'lower'], [25, 7, 32, 0x7F]];\n        break;\n      default:\n        throw new Jbig2Error('standard table B.' + number + ' does not exist');\n    }\n    var length = lines.length,\n        i = void 0;\n    for (i = 0; i < length; i++) {\n      lines[i] = new HuffmanLine(lines[i]);\n    }\n    table = new HuffmanTable(lines, true);\n    standardTablesCache[number] = table;\n    return table;\n  }\n  function Reader(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n    this.position = start;\n    this.shift = -1;\n    this.currentByte = 0;\n  }\n  Reader.prototype = {\n    readBit: function readBit() {\n      if (this.shift < 0) {\n        if (this.position >= this.end) {\n          throw new Jbig2Error('end of data while reading bit');\n        }\n        this.currentByte = this.data[this.position++];\n        this.shift = 7;\n      }\n      var bit = this.currentByte >> this.shift & 1;\n      this.shift--;\n      return bit;\n    },\n    readBits: function readBits(numBits) {\n      var result = 0,\n          i = void 0;\n      for (i = numBits - 1; i >= 0; i--) {\n        result |= this.readBit() << i;\n      }\n      return result;\n    },\n    byteAlign: function byteAlign() {\n      this.shift = -1;\n    },\n    next: function next() {\n      if (this.position >= this.end) {\n        return -1;\n      }\n      return this.data[this.position++];\n    }\n  };\n  function getCustomHuffmanTable(index, referredTo, customTables) {\n    var currentIndex = 0,\n        i = void 0,\n        ii = referredTo.length,\n        table = void 0;\n    for (i = 0; i < ii; i++) {\n      table = customTables[referredTo[i]];\n      if (table) {\n        if (index === currentIndex) {\n          return table;\n        }\n        currentIndex++;\n      }\n    }\n    throw new Jbig2Error('can\\'t find custom Huffman table');\n  }\n  function getTextRegionHuffmanTables(textRegion, referredTo, customTables, numberOfSymbols, reader) {\n    var codes = [],\n        i = void 0,\n        codeLength = void 0;\n    for (i = 0; i <= 34; i++) {\n      codeLength = reader.readBits(4);\n      codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n    }\n    var runCodesTable = new HuffmanTable(codes, false);\n    codes.length = 0;\n    for (i = 0; i < numberOfSymbols;) {\n      codeLength = runCodesTable.decode(reader);\n      if (codeLength >= 32) {\n        var repeatedLength = void 0,\n            numberOfRepeats = void 0,\n            j = void 0;\n        switch (codeLength) {\n          case 32:\n            if (i === 0) {\n              throw new Jbig2Error('no previous value in symbol ID table');\n            }\n            numberOfRepeats = reader.readBits(2) + 3;\n            repeatedLength = codes[i - 1].prefixLength;\n            break;\n          case 33:\n            numberOfRepeats = reader.readBits(3) + 3;\n            repeatedLength = 0;\n            break;\n          case 34:\n            numberOfRepeats = reader.readBits(7) + 11;\n            repeatedLength = 0;\n            break;\n          default:\n            throw new Jbig2Error('invalid code length in symbol ID table');\n        }\n        for (j = 0; j < numberOfRepeats; j++) {\n          codes.push(new HuffmanLine([i, repeatedLength, 0, 0]));\n          i++;\n        }\n      } else {\n        codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n        i++;\n      }\n    }\n    reader.byteAlign();\n    var symbolIDTable = new HuffmanTable(codes, false);\n    var customIndex = 0,\n        tableFirstS = void 0,\n        tableDeltaS = void 0,\n        tableDeltaT = void 0;\n    switch (textRegion.huffmanFS) {\n      case 0:\n      case 1:\n        tableFirstS = getStandardTable(textRegion.huffmanFS + 6);\n        break;\n      case 3:\n        tableFirstS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman FS selector');\n    }\n    switch (textRegion.huffmanDS) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaS = getStandardTable(textRegion.huffmanDS + 8);\n        break;\n      case 3:\n        tableDeltaS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DS selector');\n    }\n    switch (textRegion.huffmanDT) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaT = getStandardTable(textRegion.huffmanDT + 11);\n        break;\n      case 3:\n        tableDeltaT = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DT selector');\n    }\n    if (textRegion.refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    return {\n      symbolIDTable: symbolIDTable,\n      tableFirstS: tableFirstS,\n      tableDeltaS: tableDeltaS,\n      tableDeltaT: tableDeltaT\n    };\n  }\n  function getSymbolDictionaryHuffmanTables(dictionary, referredTo, customTables) {\n    var customIndex = 0,\n        tableDeltaHeight = void 0,\n        tableDeltaWidth = void 0;\n    switch (dictionary.huffmanDHSelector) {\n      case 0:\n      case 1:\n        tableDeltaHeight = getStandardTable(dictionary.huffmanDHSelector + 4);\n        break;\n      case 3:\n        tableDeltaHeight = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DH selector');\n    }\n    switch (dictionary.huffmanDWSelector) {\n      case 0:\n      case 1:\n        tableDeltaWidth = getStandardTable(dictionary.huffmanDWSelector + 2);\n        break;\n      case 3:\n        tableDeltaWidth = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DW selector');\n    }\n    var tableBitmapSize = void 0,\n        tableAggregateInstances = void 0;\n    if (dictionary.bitmapSizeSelector) {\n      tableBitmapSize = getCustomHuffmanTable(customIndex, referredTo, customTables);\n      customIndex++;\n    } else {\n      tableBitmapSize = getStandardTable(1);\n    }\n    if (dictionary.aggregationInstancesSelector) {\n      tableAggregateInstances = getCustomHuffmanTable(customIndex, referredTo, customTables);\n    } else {\n      tableAggregateInstances = getStandardTable(1);\n    }\n    return {\n      tableDeltaHeight: tableDeltaHeight,\n      tableDeltaWidth: tableDeltaWidth,\n      tableBitmapSize: tableBitmapSize,\n      tableAggregateInstances: tableAggregateInstances\n    };\n  }\n  function readUncompressedBitmap(reader, width, height) {\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      for (x = 0; x < width; x++) {\n        row[x] = reader.readBit();\n      }\n      reader.byteAlign();\n    }\n    return bitmap;\n  }\n  function decodeMMRBitmap(input, width, height, endOfBlock) {\n    var params = {\n      K: -1,\n      Columns: width,\n      Rows: height,\n      BlackIs1: true,\n      EndOfBlock: endOfBlock\n    };\n    var decoder = new _ccitt.CCITTFaxDecoder(input, params);\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0,\n        currentByte = void 0,\n        shift = void 0,\n        eof = false;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      shift = -1;\n      for (x = 0; x < width; x++) {\n        if (shift < 0) {\n          currentByte = decoder.readNextChar();\n          if (currentByte === -1) {\n            currentByte = 0;\n            eof = true;\n          }\n          shift = 7;\n        }\n        row[x] = currentByte >> shift & 1;\n        shift--;\n      }\n    }\n    if (endOfBlock && !eof) {\n      var lookForEOFLimit = 5;\n      for (var i = 0; i < lookForEOFLimit; i++) {\n        if (decoder.readNextChar() === -1) {\n          break;\n        }\n      }\n    }\n    return bitmap;\n  }\n  function Jbig2Image() {}\n  Jbig2Image.prototype = {\n    parseChunks: function Jbig2Image_parseChunks(chunks) {\n      return parseJbig2Chunks(chunks);\n    }\n  };\n  return Jbig2Image;\n}();\nexports.Jbig2Image = Jbig2Image;\n\n/***/ }),\n/* 137 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegImage = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = __w_pdfjs_require__(0);\n\nvar JpegError = function JpegErrorClosure() {\n  function JpegError(msg) {\n    this.message = 'JPEG error: ' + msg;\n  }\n  JpegError.prototype = new Error();\n  JpegError.prototype.name = 'JpegError';\n  JpegError.constructor = JpegError;\n  return JpegError;\n}();\nvar DNLMarkerError = function DNLMarkerErrorClosure() {\n  function DNLMarkerError(message, scanLines) {\n    this.message = message;\n    this.scanLines = scanLines;\n  }\n  DNLMarkerError.prototype = new Error();\n  DNLMarkerError.prototype.name = 'DNLMarkerError';\n  DNLMarkerError.constructor = DNLMarkerError;\n  return DNLMarkerError;\n}();\nvar JpegImage = function JpegImageClosure() {\n  var dctZigZag = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\n  var dctCos1 = 4017;\n  var dctSin1 = 799;\n  var dctCos3 = 3406;\n  var dctSin3 = 2276;\n  var dctCos6 = 1567;\n  var dctSin6 = 3784;\n  var dctSqrt2 = 5793;\n  var dctSqrt1d2 = 2896;\n  function JpegImage() {\n    this.decodeTransform = null;\n    this.colorTransform = -1;\n  }\n  function buildHuffmanTable(codeLengths, values) {\n    var k = 0,\n        code = [],\n        i,\n        j,\n        length = 16;\n    while (length > 0 && !codeLengths[length - 1]) {\n      length--;\n    }\n    code.push({\n      children: [],\n      index: 0\n    });\n    var p = code[0],\n        q;\n    for (i = 0; i < length; i++) {\n      for (j = 0; j < codeLengths[i]; j++) {\n        p = code.pop();\n        p.children[p.index] = values[k];\n        while (p.index > 0) {\n          p = code.pop();\n        }\n        p.index++;\n        code.push(p);\n        while (code.length <= i) {\n          code.push(q = {\n            children: [],\n            index: 0\n          });\n          p.children[p.index] = q.children;\n          p = q;\n        }\n        k++;\n      }\n      if (i + 1 < length) {\n        code.push(q = {\n          children: [],\n          index: 0\n        });\n        p.children[p.index] = q.children;\n        p = q;\n      }\n    }\n    return code[0].children;\n  }\n  function getBlockBufferOffset(component, row, col) {\n    return 64 * ((component.blocksPerLine + 1) * row + col);\n  }\n  function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n    var parseDNLMarker = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : false;\n\n    var mcusPerLine = frame.mcusPerLine;\n    var progressive = frame.progressive;\n    var startOffset = offset,\n        bitsData = 0,\n        bitsCount = 0;\n    function readBit() {\n      if (bitsCount > 0) {\n        bitsCount--;\n        return bitsData >> bitsCount & 1;\n      }\n      bitsData = data[offset++];\n      if (bitsData === 0xFF) {\n        var nextByte = data[offset++];\n        if (nextByte) {\n          if (nextByte === 0xDC && parseDNLMarker) {\n            offset += 2;\n            var scanLines = data[offset++] << 8 | data[offset++];\n            if (scanLines > 0 && scanLines !== frame.scanLines) {\n              throw new DNLMarkerError('Found DNL marker (0xFFDC) while parsing scan data', scanLines);\n            }\n          }\n          throw new JpegError('unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n        }\n      }\n      bitsCount = 7;\n      return bitsData >>> 7;\n    }\n    function decodeHuffman(tree) {\n      var node = tree;\n      while (true) {\n        node = node[readBit()];\n        if (typeof node === 'number') {\n          return node;\n        }\n        if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {\n          throw new JpegError('invalid huffman sequence');\n        }\n      }\n    }\n    function receive(length) {\n      var n = 0;\n      while (length > 0) {\n        n = n << 1 | readBit();\n        length--;\n      }\n      return n;\n    }\n    function receiveAndExtend(length) {\n      if (length === 1) {\n        return readBit() === 1 ? 1 : -1;\n      }\n      var n = receive(length);\n      if (n >= 1 << length - 1) {\n        return n;\n      }\n      return n + (-1 << length) + 1;\n    }\n    function decodeBaseline(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\n      component.blockData[offset] = component.pred += diff;\n      var k = 1;\n      while (k < 64) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n    function decodeDCFirst(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n      component.blockData[offset] = component.pred += diff;\n    }\n    function decodeDCSuccessive(component, offset) {\n      component.blockData[offset] |= readBit() << successive;\n    }\n    var eobrun = 0;\n    function decodeACFirst(component, offset) {\n      if (eobrun > 0) {\n        eobrun--;\n        return;\n      }\n      var k = spectralStart,\n          e = spectralEnd;\n      while (k <= e) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            eobrun = receive(r) + (1 << r) - 1;\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n    var successiveACState = 0,\n        successiveACNextValue;\n    function decodeACSuccessive(component, offset) {\n      var k = spectralStart;\n      var e = spectralEnd;\n      var r = 0;\n      var s;\n      var rs;\n      while (k <= e) {\n        var offsetZ = offset + dctZigZag[k];\n        var sign = component.blockData[offsetZ] < 0 ? -1 : 1;\n        switch (successiveACState) {\n          case 0:\n            rs = decodeHuffman(component.huffmanTableAC);\n            s = rs & 15;\n            r = rs >> 4;\n            if (s === 0) {\n              if (r < 15) {\n                eobrun = receive(r) + (1 << r);\n                successiveACState = 4;\n              } else {\n                r = 16;\n                successiveACState = 1;\n              }\n            } else {\n              if (s !== 1) {\n                throw new JpegError('invalid ACn encoding');\n              }\n              successiveACNextValue = receiveAndExtend(s);\n              successiveACState = r ? 2 : 3;\n            }\n            continue;\n          case 1:\n          case 2:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              r--;\n              if (r === 0) {\n                successiveACState = successiveACState === 2 ? 3 : 0;\n              }\n            }\n            break;\n          case 3:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              component.blockData[offsetZ] = successiveACNextValue << successive;\n              successiveACState = 0;\n            }\n            break;\n          case 4:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            }\n            break;\n        }\n        k++;\n      }\n      if (successiveACState === 4) {\n        eobrun--;\n        if (eobrun === 0) {\n          successiveACState = 0;\n        }\n      }\n    }\n    function decodeMcu(component, decode, mcu, row, col) {\n      var mcuRow = mcu / mcusPerLine | 0;\n      var mcuCol = mcu % mcusPerLine;\n      var blockRow = mcuRow * component.v + row;\n      var blockCol = mcuCol * component.h + col;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    function decodeBlock(component, decode, mcu) {\n      var blockRow = mcu / component.blocksPerLine | 0;\n      var blockCol = mcu % component.blocksPerLine;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    var componentsLength = components.length;\n    var component, i, j, k, n;\n    var decodeFn;\n    if (progressive) {\n      if (spectralStart === 0) {\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n      } else {\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n      }\n    } else {\n      decodeFn = decodeBaseline;\n    }\n    var mcu = 0,\n        fileMarker;\n    var mcuExpected;\n    if (componentsLength === 1) {\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n    } else {\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n    }\n    var h, v;\n    while (mcu < mcuExpected) {\n      var mcuToRead = resetInterval ? Math.min(mcuExpected - mcu, resetInterval) : mcuExpected;\n      for (i = 0; i < componentsLength; i++) {\n        components[i].pred = 0;\n      }\n      eobrun = 0;\n      if (componentsLength === 1) {\n        component = components[0];\n        for (n = 0; n < mcuToRead; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < mcuToRead; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n        }\n      }\n      bitsCount = 0;\n      fileMarker = findNextFileMarker(data, offset);\n      if (fileMarker && fileMarker.invalid) {\n        (0, _util.warn)('decodeScan - unexpected MCU data, current marker is: ' + fileMarker.invalid);\n        offset = fileMarker.offset;\n      }\n      var marker = fileMarker && fileMarker.marker;\n      if (!marker || marker <= 0xFF00) {\n        throw new JpegError('marker was not found');\n      }\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n        offset += 2;\n      } else {\n        break;\n      }\n    }\n    fileMarker = findNextFileMarker(data, offset);\n    if (fileMarker && fileMarker.invalid) {\n      (0, _util.warn)('decodeScan - unexpected Scan data, current marker is: ' + fileMarker.invalid);\n      offset = fileMarker.offset;\n    }\n    return offset - startOffset;\n  }\n  function quantizeAndInverse(component, blockBufferOffset, p) {\n    var qt = component.quantizationTable,\n        blockData = component.blockData;\n    var v0, v1, v2, v3, v4, v5, v6, v7;\n    var p0, p1, p2, p3, p4, p5, p6, p7;\n    var t;\n    if (!qt) {\n      throw new JpegError('missing required Quantization Table.');\n    }\n    for (var row = 0; row < 64; row += 8) {\n      p0 = blockData[blockBufferOffset + row];\n      p1 = blockData[blockBufferOffset + row + 1];\n      p2 = blockData[blockBufferOffset + row + 2];\n      p3 = blockData[blockBufferOffset + row + 3];\n      p4 = blockData[blockBufferOffset + row + 4];\n      p5 = blockData[blockBufferOffset + row + 5];\n      p6 = blockData[blockBufferOffset + row + 6];\n      p7 = blockData[blockBufferOffset + row + 7];\n      p0 *= qt[row];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 512 >> 10;\n        p[row] = t;\n        p[row + 1] = t;\n        p[row + 2] = t;\n        p[row + 3] = t;\n        p[row + 4] = t;\n        p[row + 5] = t;\n        p[row + 6] = t;\n        p[row + 7] = t;\n        continue;\n      }\n      p1 *= qt[row + 1];\n      p2 *= qt[row + 2];\n      p3 *= qt[row + 3];\n      p4 *= qt[row + 4];\n      p5 *= qt[row + 5];\n      p6 *= qt[row + 6];\n      p7 *= qt[row + 7];\n      v0 = dctSqrt2 * p0 + 128 >> 8;\n      v1 = dctSqrt2 * p4 + 128 >> 8;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n      v5 = p3 << 4;\n      v6 = p5 << 4;\n      v0 = v0 + v1 + 1 >> 1;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p[row] = v0 + v7;\n      p[row + 7] = v0 - v7;\n      p[row + 1] = v1 + v6;\n      p[row + 6] = v1 - v6;\n      p[row + 2] = v2 + v5;\n      p[row + 5] = v2 - v5;\n      p[row + 3] = v3 + v4;\n      p[row + 4] = v3 - v4;\n    }\n    for (var col = 0; col < 8; ++col) {\n      p0 = p[col];\n      p1 = p[col + 8];\n      p2 = p[col + 16];\n      p3 = p[col + 24];\n      p4 = p[col + 32];\n      p5 = p[col + 40];\n      p6 = p[col + 48];\n      p7 = p[col + 56];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 8192 >> 14;\n        t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n        blockData[blockBufferOffset + col] = t;\n        blockData[blockBufferOffset + col + 8] = t;\n        blockData[blockBufferOffset + col + 16] = t;\n        blockData[blockBufferOffset + col + 24] = t;\n        blockData[blockBufferOffset + col + 32] = t;\n        blockData[blockBufferOffset + col + 40] = t;\n        blockData[blockBufferOffset + col + 48] = t;\n        blockData[blockBufferOffset + col + 56] = t;\n        continue;\n      }\n      v0 = dctSqrt2 * p0 + 2048 >> 12;\n      v1 = dctSqrt2 * p4 + 2048 >> 12;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n      v5 = p3;\n      v6 = p5;\n      v0 = (v0 + v1 + 1 >> 1) + 4112;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p0 = v0 + v7;\n      p7 = v0 - v7;\n      p1 = v1 + v6;\n      p6 = v1 - v6;\n      p2 = v2 + v5;\n      p5 = v2 - v5;\n      p3 = v3 + v4;\n      p4 = v3 - v4;\n      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n      blockData[blockBufferOffset + col] = p0;\n      blockData[blockBufferOffset + col + 8] = p1;\n      blockData[blockBufferOffset + col + 16] = p2;\n      blockData[blockBufferOffset + col + 24] = p3;\n      blockData[blockBufferOffset + col + 32] = p4;\n      blockData[blockBufferOffset + col + 40] = p5;\n      blockData[blockBufferOffset + col + 48] = p6;\n      blockData[blockBufferOffset + col + 56] = p7;\n    }\n  }\n  function buildComponentData(frame, component) {\n    var blocksPerLine = component.blocksPerLine;\n    var blocksPerColumn = component.blocksPerColumn;\n    var computationBuffer = new Int16Array(64);\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n        quantizeAndInverse(component, offset, computationBuffer);\n      }\n    }\n    return component.blockData;\n  }\n  function findNextFileMarker(data, currentPos) {\n    var startPos = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : currentPos;\n\n    function peekUint16(pos) {\n      return data[pos] << 8 | data[pos + 1];\n    }\n    var maxPos = data.length - 1;\n    var newPos = startPos < currentPos ? startPos : currentPos;\n    if (currentPos >= maxPos) {\n      return null;\n    }\n    var currentMarker = peekUint16(currentPos);\n    if (currentMarker >= 0xFFC0 && currentMarker <= 0xFFFE) {\n      return {\n        invalid: null,\n        marker: currentMarker,\n        offset: currentPos\n      };\n    }\n    var newMarker = peekUint16(newPos);\n    while (!(newMarker >= 0xFFC0 && newMarker <= 0xFFFE)) {\n      if (++newPos >= maxPos) {\n        return null;\n      }\n      newMarker = peekUint16(newPos);\n    }\n    return {\n      invalid: currentMarker.toString(16),\n      marker: newMarker,\n      offset: newPos\n    };\n  }\n  JpegImage.prototype = {\n    parse: function parse(data) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref$dnlScanLines = _ref.dnlScanLines,\n          dnlScanLines = _ref$dnlScanLines === undefined ? null : _ref$dnlScanLines;\n\n      function readUint16() {\n        var value = data[offset] << 8 | data[offset + 1];\n        offset += 2;\n        return value;\n      }\n      function readDataBlock() {\n        var length = readUint16();\n        var endOffset = offset + length - 2;\n        var fileMarker = findNextFileMarker(data, endOffset, offset);\n        if (fileMarker && fileMarker.invalid) {\n          (0, _util.warn)('readDataBlock - incorrect length, current marker is: ' + fileMarker.invalid);\n          endOffset = fileMarker.offset;\n        }\n        var array = data.subarray(offset, endOffset);\n        offset += array.length;\n        return array;\n      }\n      function prepareComponents(frame) {\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n        for (var i = 0; i < frame.components.length; i++) {\n          component = frame.components[i];\n          var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n          var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n          var blocksPerLineForMcu = mcusPerLine * component.h;\n          var blocksPerColumnForMcu = mcusPerColumn * component.v;\n          var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n          component.blockData = new Int16Array(blocksBufferSize);\n          component.blocksPerLine = blocksPerLine;\n          component.blocksPerColumn = blocksPerColumn;\n        }\n        frame.mcusPerLine = mcusPerLine;\n        frame.mcusPerColumn = mcusPerColumn;\n      }\n      var offset = 0;\n      var jfif = null;\n      var adobe = null;\n      var frame, resetInterval;\n      var numSOSMarkers = 0;\n      var quantizationTables = [];\n      var huffmanTablesAC = [],\n          huffmanTablesDC = [];\n      var fileMarker = readUint16();\n      if (fileMarker !== 0xFFD8) {\n        throw new JpegError('SOI not found');\n      }\n      fileMarker = readUint16();\n      while (fileMarker !== 0xFFD9) {\n        var i, j, l;\n        switch (fileMarker) {\n          case 0xFFE0:\n          case 0xFFE1:\n          case 0xFFE2:\n          case 0xFFE3:\n          case 0xFFE4:\n          case 0xFFE5:\n          case 0xFFE6:\n          case 0xFFE7:\n          case 0xFFE8:\n          case 0xFFE9:\n          case 0xFFEA:\n          case 0xFFEB:\n          case 0xFFEC:\n          case 0xFFED:\n          case 0xFFEE:\n          case 0xFFEF:\n          case 0xFFFE:\n            var appData = readDataBlock();\n            if (fileMarker === 0xFFE0) {\n              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n                jfif = {\n                  version: {\n                    major: appData[5],\n                    minor: appData[6]\n                  },\n                  densityUnits: appData[7],\n                  xDensity: appData[8] << 8 | appData[9],\n                  yDensity: appData[10] << 8 | appData[11],\n                  thumbWidth: appData[12],\n                  thumbHeight: appData[13],\n                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n                };\n              }\n            }\n            if (fileMarker === 0xFFEE) {\n              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n                adobe = {\n                  version: appData[5] << 8 | appData[6],\n                  flags0: appData[7] << 8 | appData[8],\n                  flags1: appData[9] << 8 | appData[10],\n                  transformCode: appData[11]\n                };\n              }\n            }\n            break;\n          case 0xFFDB:\n            var quantizationTablesLength = readUint16();\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n            var z;\n            while (offset < quantizationTablesEnd) {\n              var quantizationTableSpec = data[offset++];\n              var tableData = new Uint16Array(64);\n              if (quantizationTableSpec >> 4 === 0) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = data[offset++];\n                }\n              } else if (quantizationTableSpec >> 4 === 1) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = readUint16();\n                }\n              } else {\n                throw new JpegError('DQT - invalid table spec');\n              }\n              quantizationTables[quantizationTableSpec & 15] = tableData;\n            }\n            break;\n          case 0xFFC0:\n          case 0xFFC1:\n          case 0xFFC2:\n            if (frame) {\n              throw new JpegError('Only single frame JPEGs supported');\n            }\n            readUint16();\n            frame = {};\n            frame.extended = fileMarker === 0xFFC1;\n            frame.progressive = fileMarker === 0xFFC2;\n            frame.precision = data[offset++];\n            var sofScanLines = readUint16();\n            frame.scanLines = dnlScanLines || sofScanLines;\n            frame.samplesPerLine = readUint16();\n            frame.components = [];\n            frame.componentIds = {};\n            var componentsCount = data[offset++],\n                componentId;\n            var maxH = 0,\n                maxV = 0;\n            for (i = 0; i < componentsCount; i++) {\n              componentId = data[offset];\n              var h = data[offset + 1] >> 4;\n              var v = data[offset + 1] & 15;\n              if (maxH < h) {\n                maxH = h;\n              }\n              if (maxV < v) {\n                maxV = v;\n              }\n              var qId = data[offset + 2];\n              l = frame.components.push({\n                h: h,\n                v: v,\n                quantizationId: qId,\n                quantizationTable: null\n              });\n              frame.componentIds[componentId] = l - 1;\n              offset += 3;\n            }\n            frame.maxH = maxH;\n            frame.maxV = maxV;\n            prepareComponents(frame);\n            break;\n          case 0xFFC4:\n            var huffmanLength = readUint16();\n            for (i = 2; i < huffmanLength;) {\n              var huffmanTableSpec = data[offset++];\n              var codeLengths = new Uint8Array(16);\n              var codeLengthSum = 0;\n              for (j = 0; j < 16; j++, offset++) {\n                codeLengthSum += codeLengths[j] = data[offset];\n              }\n              var huffmanValues = new Uint8Array(codeLengthSum);\n              for (j = 0; j < codeLengthSum; j++, offset++) {\n                huffmanValues[j] = data[offset];\n              }\n              i += 17 + codeLengthSum;\n              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n            }\n            break;\n          case 0xFFDD:\n            readUint16();\n            resetInterval = readUint16();\n            break;\n          case 0xFFDA:\n            var parseDNLMarker = ++numSOSMarkers === 1 && !dnlScanLines;\n            readUint16();\n            var selectorsCount = data[offset++];\n            var components = [],\n                component;\n            for (i = 0; i < selectorsCount; i++) {\n              var componentIndex = frame.componentIds[data[offset++]];\n              component = frame.components[componentIndex];\n              var tableSpec = data[offset++];\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n              components.push(component);\n            }\n            var spectralStart = data[offset++];\n            var spectralEnd = data[offset++];\n            var successiveApproximation = data[offset++];\n            try {\n              var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15, parseDNLMarker);\n              offset += processed;\n            } catch (ex) {\n              if (ex instanceof DNLMarkerError) {\n                (0, _util.warn)('Attempting to re-parse JPEG image using \"scanLines\" ' + 'parameter found in DNL marker (0xFFDC) segment.');\n                return this.parse(data, { dnlScanLines: ex.scanLines });\n              }\n              throw ex;\n            }\n            break;\n          case 0xFFDC:\n            offset += 4;\n            break;\n          case 0xFFFF:\n            if (data[offset] !== 0xFF) {\n              offset--;\n            }\n            break;\n          default:\n            if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n              offset -= 3;\n              break;\n            }\n            var nextFileMarker = findNextFileMarker(data, offset - 2);\n            if (nextFileMarker && nextFileMarker.invalid) {\n              (0, _util.warn)('JpegImage.parse - unexpected data, current marker is: ' + nextFileMarker.invalid);\n              offset = nextFileMarker.offset;\n              break;\n            }\n            throw new JpegError('unknown marker ' + fileMarker.toString(16));\n        }\n        fileMarker = readUint16();\n      }\n      this.width = frame.samplesPerLine;\n      this.height = frame.scanLines;\n      this.jfif = jfif;\n      this.adobe = adobe;\n      this.components = [];\n      for (i = 0; i < frame.components.length; i++) {\n        component = frame.components[i];\n        var quantizationTable = quantizationTables[component.quantizationId];\n        if (quantizationTable) {\n          component.quantizationTable = quantizationTable;\n        }\n        this.components.push({\n          output: buildComponentData(frame, component),\n          scaleX: component.h / frame.maxH,\n          scaleY: component.v / frame.maxV,\n          blocksPerLine: component.blocksPerLine,\n          blocksPerColumn: component.blocksPerColumn\n        });\n      }\n      this.numComponents = this.components.length;\n    },\n\n    _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n      var scaleX = this.width / width,\n          scaleY = this.height / height;\n      var component, componentScaleX, componentScaleY, blocksPerScanline;\n      var x, y, i, j, k;\n      var index;\n      var offset = 0;\n      var output;\n      var numComponents = this.components.length;\n      var dataLength = width * height * numComponents;\n      var data = new Uint8ClampedArray(dataLength);\n      var xScaleBlockOffset = new Uint32Array(width);\n      var mask3LSB = 0xfffffff8;\n      for (i = 0; i < numComponents; i++) {\n        component = this.components[i];\n        componentScaleX = component.scaleX * scaleX;\n        componentScaleY = component.scaleY * scaleY;\n        offset = i;\n        output = component.output;\n        blocksPerScanline = component.blocksPerLine + 1 << 3;\n        for (x = 0; x < width; x++) {\n          j = 0 | x * componentScaleX;\n          xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n        }\n        for (y = 0; y < height; y++) {\n          j = 0 | y * componentScaleY;\n          index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n          for (x = 0; x < width; x++) {\n            data[offset] = output[index + xScaleBlockOffset[x]];\n            offset += numComponents;\n          }\n        }\n      }\n      var transform = this.decodeTransform;\n      if (transform) {\n        for (i = 0; i < dataLength;) {\n          for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n            data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n          }\n        }\n      }\n      return data;\n    },\n    _isColorConversionNeeded: function _isColorConversionNeeded() {\n      if (this.adobe) {\n        return !!this.adobe.transformCode;\n      }\n      if (this.numComponents === 3) {\n        if (this.colorTransform === 0) {\n          return false;\n        }\n        return true;\n      }\n      if (this.colorTransform === 1) {\n        return true;\n      }\n      return false;\n    },\n\n    _convertYccToRgb: function convertYccToRgb(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 3) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = Y - 179.456 + 1.402 * Cr;\n        data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n        data[i + 2] = Y - 226.816 + 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertYcckToRgb: function convertYcckToRgb(data) {\n      var Y, Cb, Cr, k;\n      var offset = 0;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        k = data[i + 3];\n        data[offset++] = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n        data[offset++] = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n        data[offset++] = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n      }\n      return data.subarray(0, offset);\n    },\n    _convertYcckToCmyk: function convertYcckToCmyk(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = 434.456 - Y - 1.402 * Cr;\n        data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n        data[i + 2] = 481.816 - Y - 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertCmykToRgb: function convertCmykToRgb(data) {\n      var c, m, y, k;\n      var offset = 0;\n      var scale = 1 / 255;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        c = data[i] * scale;\n        m = data[i + 1] * scale;\n        y = data[i + 2] * scale;\n        k = data[i + 3] * scale;\n        data[offset++] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) - k * (21.86122147463605 * k + 189.48180835922747);\n        data[offset++] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) - k * (20.737325471181034 * k + 187.80453709719578);\n        data[offset++] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 193.58209356861505) - k * (22.33816807309886 * k + 180.12613974708367);\n      }\n      return data.subarray(0, offset);\n    },\n    getData: function getData(width, height, forceRGBoutput) {\n      if (this.numComponents > 4) {\n        throw new JpegError('Unsupported color mode');\n      }\n      var data = this._getLinearizedBlockData(width, height);\n      if (this.numComponents === 1 && forceRGBoutput) {\n        var dataLength = data.length;\n        var rgbData = new Uint8ClampedArray(dataLength * 3);\n        var offset = 0;\n        for (var i = 0; i < dataLength; i++) {\n          var grayColor = data[i];\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n        }\n        return rgbData;\n      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n        return this._convertYccToRgb(data);\n      } else if (this.numComponents === 4) {\n        if (this._isColorConversionNeeded()) {\n          if (forceRGBoutput) {\n            return this._convertYcckToRgb(data);\n          }\n          return this._convertYcckToCmyk(data);\n        } else if (forceRGBoutput) {\n          return this._convertCmykToRgb(data);\n        }\n      }\n      return data;\n    }\n  };\n  return JpegImage;\n}();\nexports.JpegImage = JpegImage;\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxStream = undefined;\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _jpx = __w_pdfjs_require__(67);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar JpxStream = function JpxStreamClosure() {\n  function JpxStream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpxStream.prototype, 'bytes', {\n    get: function JpxStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpxStream.prototype.ensureBuffer = function (requested) {};\n  JpxStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpxImage = new _jpx.JpxImage();\n    jpxImage.parse(this.bytes);\n    var width = jpxImage.width;\n    var height = jpxImage.height;\n    var componentsCount = jpxImage.componentsCount;\n    var tileCount = jpxImage.tiles.length;\n    if (tileCount === 1) {\n      this.buffer = jpxImage.tiles[0].items;\n    } else {\n      var data = new Uint8ClampedArray(width * height * componentsCount);\n      for (var k = 0; k < tileCount; k++) {\n        var tileComponents = jpxImage.tiles[k];\n        var tileWidth = tileComponents.width;\n        var tileHeight = tileComponents.height;\n        var tileLeft = tileComponents.left;\n        var tileTop = tileComponents.top;\n        var src = tileComponents.items;\n        var srcPosition = 0;\n        var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n        var imgRowSize = width * componentsCount;\n        var tileRowSize = tileWidth * componentsCount;\n        for (var j = 0; j < tileHeight; j++) {\n          var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n          data.set(rowBytes, dataPosition);\n          srcPosition += tileRowSize;\n          dataPosition += imgRowSize;\n        }\n      }\n      this.buffer = data;\n    }\n    this.bufferLength = this.buffer.length;\n    this.eof = true;\n  };\n  return JpxStream;\n}();\nexports.JpxStream = JpxStream;\n\n/***/ }),\n/* 139 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = undefined;\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _obj = __w_pdfjs_require__(64);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _operator_list = __w_pdfjs_require__(42);\n\nvar _stream = __w_pdfjs_require__(4);\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AnnotationFactory = function () {\n  function AnnotationFactory() {\n    _classCallCheck(this, AnnotationFactory);\n  }\n\n  _createClass(AnnotationFactory, null, [{\n    key: 'create',\n    value: function create(xref, ref, pdfManager, idFactory) {\n      var dict = xref.fetchIfRef(ref);\n      if (!(0, _primitives.isDict)(dict)) {\n        return;\n      }\n      var id = (0, _primitives.isRef)(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n      var subtype = dict.get('Subtype');\n      subtype = (0, _primitives.isName)(subtype) ? subtype.name : null;\n      var parameters = {\n        xref: xref,\n        dict: dict,\n        ref: (0, _primitives.isRef)(ref) ? ref : null,\n        subtype: subtype,\n        id: id,\n        pdfManager: pdfManager\n      };\n      switch (subtype) {\n        case 'Link':\n          return new LinkAnnotation(parameters);\n        case 'Text':\n          return new TextAnnotation(parameters);\n        case 'Widget':\n          var fieldType = (0, _util.getInheritableProperty)({\n            dict: dict,\n            key: 'FT'\n          });\n          fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n          switch (fieldType) {\n            case 'Tx':\n              return new TextWidgetAnnotation(parameters);\n            case 'Btn':\n              return new ButtonWidgetAnnotation(parameters);\n            case 'Ch':\n              return new ChoiceWidgetAnnotation(parameters);\n          }\n          (0, _util.warn)('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n          return new WidgetAnnotation(parameters);\n        case 'Popup':\n          return new PopupAnnotation(parameters);\n        case 'Line':\n          return new LineAnnotation(parameters);\n        case 'Square':\n          return new SquareAnnotation(parameters);\n        case 'Circle':\n          return new CircleAnnotation(parameters);\n        case 'PolyLine':\n          return new PolylineAnnotation(parameters);\n        case 'Polygon':\n          return new PolygonAnnotation(parameters);\n        case 'Highlight':\n          return new HighlightAnnotation(parameters);\n        case 'Underline':\n          return new UnderlineAnnotation(parameters);\n        case 'Squiggly':\n          return new SquigglyAnnotation(parameters);\n        case 'StrikeOut':\n          return new StrikeOutAnnotation(parameters);\n        case 'Stamp':\n          return new StampAnnotation(parameters);\n        case 'FileAttachment':\n          return new FileAttachmentAnnotation(parameters);\n        default:\n          if (!subtype) {\n            (0, _util.warn)('Annotation is missing the required /Subtype.');\n          } else {\n            (0, _util.warn)('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n          }\n          return new Annotation(parameters);\n      }\n    }\n  }]);\n\n  return AnnotationFactory;\n}();\n\nfunction getTransformMatrix(rect, bbox, matrix) {\n  var bounds = _util.Util.getAxialAlignedBoundingBox(bbox, matrix);\n  var minX = bounds[0];\n  var minY = bounds[1];\n  var maxX = bounds[2];\n  var maxY = bounds[3];\n  if (minX === maxX || minY === maxY) {\n    return [1, 0, 0, 1, rect[0], rect[1]];\n  }\n  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n  return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio];\n}\n\nvar Annotation = function () {\n  function Annotation(params) {\n    _classCallCheck(this, Annotation);\n\n    var dict = params.dict;\n    this.setFlags(dict.get('F'));\n    this.setRectangle(dict.getArray('Rect'));\n    this.setColor(dict.getArray('C'));\n    this.setBorderStyle(dict);\n    this.setAppearance(dict);\n    this.data = {\n      annotationFlags: this.flags,\n      borderStyle: this.borderStyle,\n      color: this.color,\n      hasAppearance: !!this.appearance,\n      id: params.id,\n      rect: this.rectangle,\n      subtype: params.subtype\n    };\n  }\n\n  _createClass(Annotation, [{\n    key: '_hasFlag',\n    value: function _hasFlag(flags, flag) {\n      return !!(flags & flag);\n    }\n  }, {\n    key: '_isViewable',\n    value: function _isViewable(flags) {\n      return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW);\n    }\n  }, {\n    key: '_isPrintable',\n    value: function _isPrintable(flags) {\n      return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN);\n    }\n  }, {\n    key: 'setFlags',\n    value: function setFlags(flags) {\n      this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0;\n    }\n  }, {\n    key: 'hasFlag',\n    value: function hasFlag(flag) {\n      return this._hasFlag(this.flags, flag);\n    }\n  }, {\n    key: 'setRectangle',\n    value: function setRectangle(rectangle) {\n      if (Array.isArray(rectangle) && rectangle.length === 4) {\n        this.rectangle = _util.Util.normalizeRect(rectangle);\n      } else {\n        this.rectangle = [0, 0, 0, 0];\n      }\n    }\n  }, {\n    key: 'setColor',\n    value: function setColor(color) {\n      var rgbColor = new Uint8Array(3);\n      if (!Array.isArray(color)) {\n        this.color = rgbColor;\n        return;\n      }\n      switch (color.length) {\n        case 0:\n          this.color = null;\n          break;\n        case 1:\n          _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 3:\n          _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 4:\n          _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        default:\n          this.color = rgbColor;\n          break;\n      }\n    }\n  }, {\n    key: 'setBorderStyle',\n    value: function setBorderStyle(borderStyle) {\n      this.borderStyle = new AnnotationBorderStyle();\n      if (!(0, _primitives.isDict)(borderStyle)) {\n        return;\n      }\n      if (borderStyle.has('BS')) {\n        var dict = borderStyle.get('BS');\n        var dictType = dict.get('Type');\n        if (!dictType || (0, _primitives.isName)(dictType, 'Border')) {\n          this.borderStyle.setWidth(dict.get('W'));\n          this.borderStyle.setStyle(dict.get('S'));\n          this.borderStyle.setDashArray(dict.getArray('D'));\n        }\n      } else if (borderStyle.has('Border')) {\n        var array = borderStyle.getArray('Border');\n        if (Array.isArray(array) && array.length >= 3) {\n          this.borderStyle.setHorizontalCornerRadius(array[0]);\n          this.borderStyle.setVerticalCornerRadius(array[1]);\n          this.borderStyle.setWidth(array[2]);\n          if (array.length === 4) {\n            this.borderStyle.setDashArray(array[3]);\n          }\n        }\n      } else {\n        this.borderStyle.setWidth(0);\n      }\n    }\n  }, {\n    key: 'setAppearance',\n    value: function setAppearance(dict) {\n      this.appearance = null;\n      var appearanceStates = dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if ((0, _primitives.isStream)(normalAppearanceState)) {\n        this.appearance = normalAppearanceState;\n        return;\n      }\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var as = dict.get('AS');\n      if (!(0, _primitives.isName)(as) || !normalAppearanceState.has(as.name)) {\n        return;\n      }\n      this.appearance = normalAppearanceState.get(as.name);\n    }\n  }, {\n    key: '_preparePopup',\n    value: function _preparePopup(dict) {\n      if (!dict.has('C')) {\n        this.data.color = null;\n      }\n      this.data.hasPopup = dict.has('Popup');\n      this.data.title = (0, _util.stringToPDFString)(dict.get('T') || '');\n      this.data.contents = (0, _util.stringToPDFString)(dict.get('Contents') || '');\n    }\n  }, {\n    key: 'loadResources',\n    value: function loadResources(keys) {\n      return this.appearance.dict.getAsync('Resources').then(function (resources) {\n        if (!resources) {\n          return;\n        }\n        var objectLoader = new _obj.ObjectLoader(resources, keys, resources.xref);\n        return objectLoader.load().then(function () {\n          return resources;\n        });\n      });\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      var _this = this;\n\n      if (!this.appearance) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      var data = this.data;\n      var appearanceDict = this.appearance.dict;\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var bbox = appearanceDict.getArray('BBox') || [0, 0, 1, 1];\n      var matrix = appearanceDict.getArray('Matrix') || [1, 0, 0, 1, 0, 0];\n      var transform = getTransformMatrix(data.rect, bbox, matrix);\n      return resourcesPromise.then(function (resources) {\n        var opList = new _operator_list.OperatorList();\n        opList.addOp(_util.OPS.beginAnnotation, [data.rect, transform, matrix]);\n        return evaluator.getOperatorList({\n          stream: _this.appearance,\n          task: task,\n          resources: resources,\n          operatorList: opList\n        }).then(function () {\n          opList.addOp(_util.OPS.endAnnotation, []);\n          _this.appearance.reset();\n          return opList;\n        });\n      });\n    }\n  }, {\n    key: 'viewable',\n    get: function get() {\n      if (this.flags === 0) {\n        return true;\n      }\n      return this._isViewable(this.flags);\n    }\n  }, {\n    key: 'printable',\n    get: function get() {\n      if (this.flags === 0) {\n        return false;\n      }\n      return this._isPrintable(this.flags);\n    }\n  }]);\n\n  return Annotation;\n}();\n\nvar AnnotationBorderStyle = function () {\n  function AnnotationBorderStyle() {\n    _classCallCheck(this, AnnotationBorderStyle);\n\n    this.width = 1;\n    this.style = _util.AnnotationBorderStyleType.SOLID;\n    this.dashArray = [3];\n    this.horizontalCornerRadius = 0;\n    this.verticalCornerRadius = 0;\n  }\n\n  _createClass(AnnotationBorderStyle, [{\n    key: 'setWidth',\n    value: function setWidth(width) {\n      if (Number.isInteger(width)) {\n        this.width = width;\n      }\n    }\n  }, {\n    key: 'setStyle',\n    value: function setStyle(style) {\n      if (!style) {\n        return;\n      }\n      switch (style.name) {\n        case 'S':\n          this.style = _util.AnnotationBorderStyleType.SOLID;\n          break;\n        case 'D':\n          this.style = _util.AnnotationBorderStyleType.DASHED;\n          break;\n        case 'B':\n          this.style = _util.AnnotationBorderStyleType.BEVELED;\n          break;\n        case 'I':\n          this.style = _util.AnnotationBorderStyleType.INSET;\n          break;\n        case 'U':\n          this.style = _util.AnnotationBorderStyleType.UNDERLINE;\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'setDashArray',\n    value: function setDashArray(dashArray) {\n      if (Array.isArray(dashArray) && dashArray.length > 0) {\n        var isValid = true;\n        var allZeros = true;\n        for (var i = 0, len = dashArray.length; i < len; i++) {\n          var element = dashArray[i];\n          var validNumber = +element >= 0;\n          if (!validNumber) {\n            isValid = false;\n            break;\n          } else if (element > 0) {\n            allZeros = false;\n          }\n        }\n        if (isValid && !allZeros) {\n          this.dashArray = dashArray;\n        } else {\n          this.width = 0;\n        }\n      } else if (dashArray) {\n        this.width = 0;\n      }\n    }\n  }, {\n    key: 'setHorizontalCornerRadius',\n    value: function setHorizontalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.horizontalCornerRadius = radius;\n      }\n    }\n  }, {\n    key: 'setVerticalCornerRadius',\n    value: function setVerticalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.verticalCornerRadius = radius;\n      }\n    }\n  }]);\n\n  return AnnotationBorderStyle;\n}();\n\nvar WidgetAnnotation = function (_Annotation) {\n  _inherits(WidgetAnnotation, _Annotation);\n\n  function WidgetAnnotation(params) {\n    _classCallCheck(this, WidgetAnnotation);\n\n    var _this2 = _possibleConstructorReturn(this, (WidgetAnnotation.__proto__ || Object.getPrototypeOf(WidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    var data = _this2.data;\n    data.annotationType = _util.AnnotationType.WIDGET;\n    data.fieldName = _this2._constructFieldName(dict);\n    data.fieldValue = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'V',\n      getArray: true\n    });\n    data.alternativeText = (0, _util.stringToPDFString)(dict.get('TU') || '');\n    data.defaultAppearance = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'DA'\n    }) || '';\n    var fieldType = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'FT'\n    });\n    data.fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n    _this2.fieldResources = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'DR'\n    }) || _primitives.Dict.empty;\n    data.fieldFlags = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'Ff'\n    });\n    if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) {\n      data.fieldFlags = 0;\n    }\n    data.readOnly = _this2.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);\n    if (data.fieldType === 'Sig') {\n      _this2.setFlags(_util.AnnotationFlag.HIDDEN);\n    }\n    return _this2;\n  }\n\n  _createClass(WidgetAnnotation, [{\n    key: '_constructFieldName',\n    value: function _constructFieldName(dict) {\n      if (!dict.has('T') && !dict.has('Parent')) {\n        (0, _util.warn)('Unknown field name, falling back to empty field name.');\n        return '';\n      }\n      if (!dict.has('Parent')) {\n        return (0, _util.stringToPDFString)(dict.get('T'));\n      }\n      var fieldName = [];\n      if (dict.has('T')) {\n        fieldName.unshift((0, _util.stringToPDFString)(dict.get('T')));\n      }\n      var loopDict = dict;\n      while (loopDict.has('Parent')) {\n        loopDict = loopDict.get('Parent');\n        if (!(0, _primitives.isDict)(loopDict)) {\n          break;\n        }\n        if (loopDict.has('T')) {\n          fieldName.unshift((0, _util.stringToPDFString)(loopDict.get('T')));\n        }\n      }\n      return fieldName.join('.');\n    }\n  }, {\n    key: 'hasFieldFlag',\n    value: function hasFieldFlag(flag) {\n      return !!(this.data.fieldFlags & flag);\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      return _get(WidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(WidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n    }\n  }]);\n\n  return WidgetAnnotation;\n}(Annotation);\n\nvar TextWidgetAnnotation = function (_WidgetAnnotation) {\n  _inherits(TextWidgetAnnotation, _WidgetAnnotation);\n\n  function TextWidgetAnnotation(params) {\n    _classCallCheck(this, TextWidgetAnnotation);\n\n    var _this3 = _possibleConstructorReturn(this, (TextWidgetAnnotation.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    _this3.data.fieldValue = (0, _util.stringToPDFString)(_this3.data.fieldValue || '');\n    var alignment = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'Q'\n    });\n    if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) {\n      alignment = null;\n    }\n    _this3.data.textAlignment = alignment;\n    var maximumLength = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'MaxLen'\n    });\n    if (!Number.isInteger(maximumLength) || maximumLength < 0) {\n      maximumLength = null;\n    }\n    _this3.data.maxLen = maximumLength;\n    _this3.data.multiLine = _this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);\n    _this3.data.comb = _this3.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && _this3.data.maxLen !== null;\n    return _this3;\n  }\n\n  _createClass(TextWidgetAnnotation, [{\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms || this.appearance) {\n        return _get(TextWidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n      }\n      var operatorList = new _operator_list.OperatorList();\n      if (!this.data.defaultAppearance) {\n        return Promise.resolve(operatorList);\n      }\n      var stream = new _stream.Stream((0, _util.stringToBytes)(this.data.defaultAppearance));\n      return evaluator.getOperatorList({\n        stream: stream,\n        task: task,\n        resources: this.fieldResources,\n        operatorList: operatorList\n      }).then(function () {\n        return operatorList;\n      });\n    }\n  }]);\n\n  return TextWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ButtonWidgetAnnotation = function (_WidgetAnnotation2) {\n  _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);\n\n  function ButtonWidgetAnnotation(params) {\n    _classCallCheck(this, ButtonWidgetAnnotation);\n\n    var _this4 = _possibleConstructorReturn(this, (ButtonWidgetAnnotation.__proto__ || Object.getPrototypeOf(ButtonWidgetAnnotation)).call(this, params));\n\n    _this4.data.checkBox = !_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.radioButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.pushButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    if (_this4.data.checkBox) {\n      _this4._processCheckBox();\n    } else if (_this4.data.radioButton) {\n      _this4._processRadioButton(params);\n    } else if (_this4.data.pushButton) {\n      _this4._processPushButton(params);\n    } else {\n      (0, _util.warn)('Invalid field flags for button widget annotation');\n    }\n    return _this4;\n  }\n\n  _createClass(ButtonWidgetAnnotation, [{\n    key: '_processCheckBox',\n    value: function _processCheckBox() {\n      if (!(0, _primitives.isName)(this.data.fieldValue)) {\n        return;\n      }\n      this.data.fieldValue = this.data.fieldValue.name;\n    }\n  }, {\n    key: '_processRadioButton',\n    value: function _processRadioButton(params) {\n      this.data.fieldValue = this.data.buttonValue = null;\n      var fieldParent = params.dict.get('Parent');\n      if ((0, _primitives.isDict)(fieldParent) && fieldParent.has('V')) {\n        var fieldParentValue = fieldParent.get('V');\n        if ((0, _primitives.isName)(fieldParentValue)) {\n          this.data.fieldValue = fieldParentValue.name;\n        }\n      }\n      var appearanceStates = params.dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var keys = normalAppearanceState.getKeys();\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        if (keys[i] !== 'Off') {\n          this.data.buttonValue = keys[i];\n          break;\n        }\n      }\n    }\n  }, {\n    key: '_processPushButton',\n    value: function _processPushButton(params) {\n      if (!params.dict.has('A')) {\n        (0, _util.warn)('Push buttons without action dictionaries are not supported');\n        return;\n      }\n      _obj.Catalog.parseDestDictionary({\n        destDict: params.dict,\n        resultObj: this.data,\n        docBaseUrl: params.pdfManager.docBaseUrl\n      });\n    }\n  }]);\n\n  return ButtonWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ChoiceWidgetAnnotation = function (_WidgetAnnotation3) {\n  _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);\n\n  function ChoiceWidgetAnnotation(params) {\n    _classCallCheck(this, ChoiceWidgetAnnotation);\n\n    var _this5 = _possibleConstructorReturn(this, (ChoiceWidgetAnnotation.__proto__ || Object.getPrototypeOf(ChoiceWidgetAnnotation)).call(this, params));\n\n    _this5.data.options = [];\n    var options = (0, _util.getInheritableProperty)({\n      dict: params.dict,\n      key: 'Opt'\n    });\n    if (Array.isArray(options)) {\n      var xref = params.xref;\n      for (var i = 0, ii = options.length; i < ii; i++) {\n        var option = xref.fetchIfRef(options[i]);\n        var isOptionArray = Array.isArray(option);\n        _this5.data.options[i] = {\n          exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n          displayValue: (0, _util.stringToPDFString)(isOptionArray ? xref.fetchIfRef(option[1]) : option)\n        };\n      }\n    }\n    if (!Array.isArray(_this5.data.fieldValue)) {\n      _this5.data.fieldValue = [_this5.data.fieldValue];\n    }\n    _this5.data.combo = _this5.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);\n    _this5.data.multiSelect = _this5.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);\n    return _this5;\n  }\n\n  return ChoiceWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar TextAnnotation = function (_Annotation2) {\n  _inherits(TextAnnotation, _Annotation2);\n\n  function TextAnnotation(parameters) {\n    _classCallCheck(this, TextAnnotation);\n\n    var DEFAULT_ICON_SIZE = 22;\n\n    var _this6 = _possibleConstructorReturn(this, (TextAnnotation.__proto__ || Object.getPrototypeOf(TextAnnotation)).call(this, parameters));\n\n    _this6.data.annotationType = _util.AnnotationType.TEXT;\n    if (_this6.data.hasAppearance) {\n      _this6.data.name = 'NoIcon';\n    } else {\n      _this6.data.rect[1] = _this6.data.rect[3] - DEFAULT_ICON_SIZE;\n      _this6.data.rect[2] = _this6.data.rect[0] + DEFAULT_ICON_SIZE;\n      _this6.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n    }\n    _this6._preparePopup(parameters.dict);\n    return _this6;\n  }\n\n  return TextAnnotation;\n}(Annotation);\n\nvar LinkAnnotation = function (_Annotation3) {\n  _inherits(LinkAnnotation, _Annotation3);\n\n  function LinkAnnotation(params) {\n    _classCallCheck(this, LinkAnnotation);\n\n    var _this7 = _possibleConstructorReturn(this, (LinkAnnotation.__proto__ || Object.getPrototypeOf(LinkAnnotation)).call(this, params));\n\n    _this7.data.annotationType = _util.AnnotationType.LINK;\n    _obj.Catalog.parseDestDictionary({\n      destDict: params.dict,\n      resultObj: _this7.data,\n      docBaseUrl: params.pdfManager.docBaseUrl\n    });\n    return _this7;\n  }\n\n  return LinkAnnotation;\n}(Annotation);\n\nvar PopupAnnotation = function (_Annotation4) {\n  _inherits(PopupAnnotation, _Annotation4);\n\n  function PopupAnnotation(parameters) {\n    _classCallCheck(this, PopupAnnotation);\n\n    var _this8 = _possibleConstructorReturn(this, (PopupAnnotation.__proto__ || Object.getPrototypeOf(PopupAnnotation)).call(this, parameters));\n\n    _this8.data.annotationType = _util.AnnotationType.POPUP;\n    var dict = parameters.dict;\n    var parentItem = dict.get('Parent');\n    if (!parentItem) {\n      (0, _util.warn)('Popup annotation has a missing or invalid parent annotation.');\n      return _possibleConstructorReturn(_this8);\n    }\n    var parentSubtype = parentItem.get('Subtype');\n    _this8.data.parentType = (0, _primitives.isName)(parentSubtype) ? parentSubtype.name : null;\n    _this8.data.parentId = dict.getRaw('Parent').toString();\n    _this8.data.title = (0, _util.stringToPDFString)(parentItem.get('T') || '');\n    _this8.data.contents = (0, _util.stringToPDFString)(parentItem.get('Contents') || '');\n    if (!parentItem.has('C')) {\n      _this8.data.color = null;\n    } else {\n      _this8.setColor(parentItem.getArray('C'));\n      _this8.data.color = _this8.color;\n    }\n    if (!_this8.viewable) {\n      var parentFlags = parentItem.get('F');\n      if (_this8._isViewable(parentFlags)) {\n        _this8.setFlags(parentFlags);\n      }\n    }\n    return _this8;\n  }\n\n  return PopupAnnotation;\n}(Annotation);\n\nvar LineAnnotation = function (_Annotation5) {\n  _inherits(LineAnnotation, _Annotation5);\n\n  function LineAnnotation(parameters) {\n    _classCallCheck(this, LineAnnotation);\n\n    var _this9 = _possibleConstructorReturn(this, (LineAnnotation.__proto__ || Object.getPrototypeOf(LineAnnotation)).call(this, parameters));\n\n    _this9.data.annotationType = _util.AnnotationType.LINE;\n    var dict = parameters.dict;\n    _this9.data.lineCoordinates = _util.Util.normalizeRect(dict.getArray('L'));\n    _this9._preparePopup(dict);\n    return _this9;\n  }\n\n  return LineAnnotation;\n}(Annotation);\n\nvar SquareAnnotation = function (_Annotation6) {\n  _inherits(SquareAnnotation, _Annotation6);\n\n  function SquareAnnotation(parameters) {\n    _classCallCheck(this, SquareAnnotation);\n\n    var _this10 = _possibleConstructorReturn(this, (SquareAnnotation.__proto__ || Object.getPrototypeOf(SquareAnnotation)).call(this, parameters));\n\n    _this10.data.annotationType = _util.AnnotationType.SQUARE;\n    _this10._preparePopup(parameters.dict);\n    return _this10;\n  }\n\n  return SquareAnnotation;\n}(Annotation);\n\nvar CircleAnnotation = function (_Annotation7) {\n  _inherits(CircleAnnotation, _Annotation7);\n\n  function CircleAnnotation(parameters) {\n    _classCallCheck(this, CircleAnnotation);\n\n    var _this11 = _possibleConstructorReturn(this, (CircleAnnotation.__proto__ || Object.getPrototypeOf(CircleAnnotation)).call(this, parameters));\n\n    _this11.data.annotationType = _util.AnnotationType.CIRCLE;\n    _this11._preparePopup(parameters.dict);\n    return _this11;\n  }\n\n  return CircleAnnotation;\n}(Annotation);\n\nvar PolylineAnnotation = function (_Annotation8) {\n  _inherits(PolylineAnnotation, _Annotation8);\n\n  function PolylineAnnotation(parameters) {\n    _classCallCheck(this, PolylineAnnotation);\n\n    var _this12 = _possibleConstructorReturn(this, (PolylineAnnotation.__proto__ || Object.getPrototypeOf(PolylineAnnotation)).call(this, parameters));\n\n    _this12.data.annotationType = _util.AnnotationType.POLYLINE;\n    var dict = parameters.dict;\n    var rawVertices = dict.getArray('Vertices');\n    _this12.data.vertices = [];\n    for (var i = 0, ii = rawVertices.length; i < ii; i += 2) {\n      _this12.data.vertices.push({\n        x: rawVertices[i],\n        y: rawVertices[i + 1]\n      });\n    }\n    _this12._preparePopup(dict);\n    return _this12;\n  }\n\n  return PolylineAnnotation;\n}(Annotation);\n\nvar PolygonAnnotation = function (_PolylineAnnotation) {\n  _inherits(PolygonAnnotation, _PolylineAnnotation);\n\n  function PolygonAnnotation(parameters) {\n    _classCallCheck(this, PolygonAnnotation);\n\n    var _this13 = _possibleConstructorReturn(this, (PolygonAnnotation.__proto__ || Object.getPrototypeOf(PolygonAnnotation)).call(this, parameters));\n\n    _this13.data.annotationType = _util.AnnotationType.POLYGON;\n    return _this13;\n  }\n\n  return PolygonAnnotation;\n}(PolylineAnnotation);\n\nvar HighlightAnnotation = function (_Annotation9) {\n  _inherits(HighlightAnnotation, _Annotation9);\n\n  function HighlightAnnotation(parameters) {\n    _classCallCheck(this, HighlightAnnotation);\n\n    var _this14 = _possibleConstructorReturn(this, (HighlightAnnotation.__proto__ || Object.getPrototypeOf(HighlightAnnotation)).call(this, parameters));\n\n    _this14.data.annotationType = _util.AnnotationType.HIGHLIGHT;\n    _this14._preparePopup(parameters.dict);\n    return _this14;\n  }\n\n  return HighlightAnnotation;\n}(Annotation);\n\nvar UnderlineAnnotation = function (_Annotation10) {\n  _inherits(UnderlineAnnotation, _Annotation10);\n\n  function UnderlineAnnotation(parameters) {\n    _classCallCheck(this, UnderlineAnnotation);\n\n    var _this15 = _possibleConstructorReturn(this, (UnderlineAnnotation.__proto__ || Object.getPrototypeOf(UnderlineAnnotation)).call(this, parameters));\n\n    _this15.data.annotationType = _util.AnnotationType.UNDERLINE;\n    _this15._preparePopup(parameters.dict);\n    return _this15;\n  }\n\n  return UnderlineAnnotation;\n}(Annotation);\n\nvar SquigglyAnnotation = function (_Annotation11) {\n  _inherits(SquigglyAnnotation, _Annotation11);\n\n  function SquigglyAnnotation(parameters) {\n    _classCallCheck(this, SquigglyAnnotation);\n\n    var _this16 = _possibleConstructorReturn(this, (SquigglyAnnotation.__proto__ || Object.getPrototypeOf(SquigglyAnnotation)).call(this, parameters));\n\n    _this16.data.annotationType = _util.AnnotationType.SQUIGGLY;\n    _this16._preparePopup(parameters.dict);\n    return _this16;\n  }\n\n  return SquigglyAnnotation;\n}(Annotation);\n\nvar StrikeOutAnnotation = function (_Annotation12) {\n  _inherits(StrikeOutAnnotation, _Annotation12);\n\n  function StrikeOutAnnotation(parameters) {\n    _classCallCheck(this, StrikeOutAnnotation);\n\n    var _this17 = _possibleConstructorReturn(this, (StrikeOutAnnotation.__proto__ || Object.getPrototypeOf(StrikeOutAnnotation)).call(this, parameters));\n\n    _this17.data.annotationType = _util.AnnotationType.STRIKEOUT;\n    _this17._preparePopup(parameters.dict);\n    return _this17;\n  }\n\n  return StrikeOutAnnotation;\n}(Annotation);\n\nvar StampAnnotation = function (_Annotation13) {\n  _inherits(StampAnnotation, _Annotation13);\n\n  function StampAnnotation(parameters) {\n    _classCallCheck(this, StampAnnotation);\n\n    var _this18 = _possibleConstructorReturn(this, (StampAnnotation.__proto__ || Object.getPrototypeOf(StampAnnotation)).call(this, parameters));\n\n    _this18.data.annotationType = _util.AnnotationType.STAMP;\n    _this18._preparePopup(parameters.dict);\n    return _this18;\n  }\n\n  return StampAnnotation;\n}(Annotation);\n\nvar FileAttachmentAnnotation = function (_Annotation14) {\n  _inherits(FileAttachmentAnnotation, _Annotation14);\n\n  function FileAttachmentAnnotation(parameters) {\n    _classCallCheck(this, FileAttachmentAnnotation);\n\n    var _this19 = _possibleConstructorReturn(this, (FileAttachmentAnnotation.__proto__ || Object.getPrototypeOf(FileAttachmentAnnotation)).call(this, parameters));\n\n    var file = new _obj.FileSpec(parameters.dict.get('FS'), parameters.xref);\n    _this19.data.annotationType = _util.AnnotationType.FILEATTACHMENT;\n    _this19.data.file = file.serializable;\n    _this19._preparePopup(parameters.dict);\n    return _this19;\n  }\n\n  return FileAttachmentAnnotation;\n}(Annotation);\n\nexports.Annotation = Annotation;\nexports.AnnotationBorderStyle = AnnotationBorderStyle;\nexports.AnnotationFactory = AnnotationFactory;\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PartialEvaluator = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cmap = __w_pdfjs_require__(141);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _fonts = __w_pdfjs_require__(142);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _unicode = __w_pdfjs_require__(71);\n\nvar _standard_fonts = __w_pdfjs_require__(70);\n\nvar _pattern = __w_pdfjs_require__(146);\n\nvar _parser = __w_pdfjs_require__(27);\n\nvar _bidi = __w_pdfjs_require__(147);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _glyphlist = __w_pdfjs_require__(43);\n\nvar _metrics = __w_pdfjs_require__(148);\n\nvar _function = __w_pdfjs_require__(72);\n\nvar _jpeg_stream = __w_pdfjs_require__(41);\n\nvar _murmurhash = __w_pdfjs_require__(150);\n\nvar _operator_list = __w_pdfjs_require__(42);\n\nvar _image = __w_pdfjs_require__(151);\n\nvar PartialEvaluator = function PartialEvaluatorClosure() {\n  var DefaultPartialEvaluatorOptions = {\n    forceDataSchema: false,\n    maxImageSize: -1,\n    disableFontFace: false,\n    nativeImageDecoderSupport: _util.NativeImageDecoding.DECODE,\n    ignoreErrors: false,\n    isEvalSupported: true\n  };\n  function NativeImageDecoder(_ref) {\n    var xref = _ref.xref,\n        resources = _ref.resources,\n        handler = _ref.handler,\n        _ref$forceDataSchema = _ref.forceDataSchema,\n        forceDataSchema = _ref$forceDataSchema === undefined ? false : _ref$forceDataSchema,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.xref = xref;\n    this.resources = resources;\n    this.handler = handler;\n    this.forceDataSchema = forceDataSchema;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n  }\n  NativeImageDecoder.prototype = {\n    canDecode: function canDecode(image) {\n      return image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources, this.pdfFunctionFactory);\n    },\n    decode: function decode(image) {\n      var dict = image.dict;\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      colorSpace = _colorspace.ColorSpace.parse(colorSpace, this.xref, this.resources, this.pdfFunctionFactory);\n      return this.handler.sendWithPromise('JpegDecode', [image.getIR(this.forceDataSchema), colorSpace.numComps]).then(function (_ref2) {\n        var data = _ref2.data,\n            width = _ref2.width,\n            height = _ref2.height;\n\n        return new _stream.Stream(data, 0, data.length, image.dict);\n      });\n    }\n  };\n  NativeImageDecoder.isSupported = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  NativeImageDecoder.isDecodable = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  function PartialEvaluator(_ref3) {\n    var _this = this;\n\n    var pdfManager = _ref3.pdfManager,\n        xref = _ref3.xref,\n        handler = _ref3.handler,\n        pageIndex = _ref3.pageIndex,\n        idFactory = _ref3.idFactory,\n        fontCache = _ref3.fontCache,\n        builtInCMapCache = _ref3.builtInCMapCache,\n        _ref3$options = _ref3.options,\n        options = _ref3$options === undefined ? null : _ref3$options,\n        pdfFunctionFactory = _ref3.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.handler = handler;\n    this.pageIndex = pageIndex;\n    this.idFactory = idFactory;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.options = options || DefaultPartialEvaluatorOptions;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.fetchBuiltInCMap = function (name) {\n      var cachedCMap = _this.builtInCMapCache[name];\n      if (cachedCMap) {\n        return Promise.resolve(cachedCMap);\n      }\n      return _this.handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\n        if (data.compressionType !== _util.CMapCompressionType.NONE) {\n          _this.builtInCMapCache[name] = data;\n        }\n        return data;\n      });\n    };\n  }\n  var TIME_SLOT_DURATION_MS = 20;\n  var CHECK_TIME_EVERY = 100;\n  function TimeSlotManager() {\n    this.reset();\n  }\n  TimeSlotManager.prototype = {\n    check: function TimeSlotManager_check() {\n      if (++this.checked < CHECK_TIME_EVERY) {\n        return false;\n      }\n      this.checked = 0;\n      return this.endTime <= Date.now();\n    },\n    reset: function TimeSlotManager_reset() {\n      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n      this.checked = 0;\n    }\n  };\n  function normalizeBlendMode(value) {\n    if (!(0, _primitives.isName)(value)) {\n      return 'source-over';\n    }\n    switch (value.name) {\n      case 'Normal':\n      case 'Compatible':\n        return 'source-over';\n      case 'Multiply':\n        return 'multiply';\n      case 'Screen':\n        return 'screen';\n      case 'Overlay':\n        return 'overlay';\n      case 'Darken':\n        return 'darken';\n      case 'Lighten':\n        return 'lighten';\n      case 'ColorDodge':\n        return 'color-dodge';\n      case 'ColorBurn':\n        return 'color-burn';\n      case 'HardLight':\n        return 'hard-light';\n      case 'SoftLight':\n        return 'soft-light';\n      case 'Difference':\n        return 'difference';\n      case 'Exclusion':\n        return 'exclusion';\n      case 'Hue':\n        return 'hue';\n      case 'Saturation':\n        return 'saturation';\n      case 'Color':\n        return 'color';\n      case 'Luminosity':\n        return 'luminosity';\n    }\n    (0, _util.warn)('Unsupported blend mode: ' + value.name);\n    return 'source-over';\n  }\n  var deferred = Promise.resolve();\n  var TILING_PATTERN = 1,\n      SHADING_PATTERN = 2;\n  PartialEvaluator.prototype = {\n    clone: function clone() {\n      var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultPartialEvaluatorOptions;\n\n      var newEvaluator = Object.create(this);\n      newEvaluator.options = newOptions;\n      return newEvaluator;\n    },\n\n    hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n      if (!(0, _primitives.isDict)(resources)) {\n        return false;\n      }\n      var processed = Object.create(null);\n      if (resources.objId) {\n        processed[resources.objId] = true;\n      }\n      var nodes = [resources],\n          xref = this.xref;\n      while (nodes.length) {\n        var key, i, ii;\n        var node = nodes.shift();\n        var graphicStates = node.get('ExtGState');\n        if ((0, _primitives.isDict)(graphicStates)) {\n          var graphicStatesKeys = graphicStates.getKeys();\n          for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n            key = graphicStatesKeys[i];\n            var graphicState = graphicStates.get(key);\n            var bm = graphicState.get('BM');\n            if ((0, _primitives.isName)(bm) && bm.name !== 'Normal') {\n              return true;\n            }\n          }\n        }\n        var xObjects = node.get('XObject');\n        if (!(0, _primitives.isDict)(xObjects)) {\n          continue;\n        }\n        var xObjectsKeys = xObjects.getKeys();\n        for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n          key = xObjectsKeys[i];\n          var xObject = xObjects.getRaw(key);\n          if ((0, _primitives.isRef)(xObject)) {\n            if (processed[xObject.toString()]) {\n              continue;\n            }\n            xObject = xref.fetch(xObject);\n          }\n          if (!(0, _primitives.isStream)(xObject)) {\n            continue;\n          }\n          if (xObject.dict.objId) {\n            if (processed[xObject.dict.objId]) {\n              continue;\n            }\n            processed[xObject.dict.objId] = true;\n          }\n          var xResources = xObject.dict.get('Resources');\n          if ((0, _primitives.isDict)(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n            nodes.push(xResources);\n            if (xResources.objId) {\n              processed[xResources.objId] = true;\n            }\n          }\n        }\n      }\n      return false;\n    },\n    buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n      var dict = xobj.dict;\n      var matrix = dict.getArray('Matrix');\n      var bbox = dict.getArray('BBox');\n      var group = dict.get('Group');\n      if (group) {\n        var groupOptions = {\n          matrix: matrix,\n          bbox: bbox,\n          smask: smask,\n          isolated: false,\n          knockout: false\n        };\n        var groupSubtype = group.get('S');\n        var colorSpace = null;\n        if ((0, _primitives.isName)(groupSubtype, 'Transparency')) {\n          groupOptions.isolated = group.get('I') || false;\n          groupOptions.knockout = group.get('K') || false;\n          if (group.has('CS')) {\n            colorSpace = _colorspace.ColorSpace.parse(group.get('CS'), this.xref, resources, this.pdfFunctionFactory);\n          }\n        }\n        if (smask && smask.backdrop) {\n          colorSpace = colorSpace || _colorspace.ColorSpace.singletons.rgb;\n          smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n        }\n        operatorList.addOp(_util.OPS.beginGroup, [groupOptions]);\n      }\n      operatorList.addOp(_util.OPS.paintFormXObjectBegin, [matrix, bbox]);\n      return this.getOperatorList({\n        stream: xobj,\n        task: task,\n        resources: dict.get('Resources') || resources,\n        operatorList: operatorList,\n        initialState: initialState\n      }).then(function () {\n        operatorList.addOp(_util.OPS.paintFormXObjectEnd, []);\n        if (group) {\n          operatorList.addOp(_util.OPS.endGroup, [groupOptions]);\n        }\n      });\n    },\n    buildPaintImageXObject: function buildPaintImageXObject(_ref4) {\n      var _this2 = this;\n\n      var resources = _ref4.resources,\n          image = _ref4.image,\n          _ref4$isInline = _ref4.isInline,\n          isInline = _ref4$isInline === undefined ? false : _ref4$isInline,\n          operatorList = _ref4.operatorList,\n          cacheKey = _ref4.cacheKey,\n          imageCache = _ref4.imageCache,\n          _ref4$forceDisableNat = _ref4.forceDisableNativeImageDecoder,\n          forceDisableNativeImageDecoder = _ref4$forceDisableNat === undefined ? false : _ref4$forceDisableNat;\n\n      var dict = image.dict;\n      var w = dict.get('Width', 'W');\n      var h = dict.get('Height', 'H');\n      if (!(w && (0, _util.isNum)(w)) || !(h && (0, _util.isNum)(h))) {\n        (0, _util.warn)('Image dimensions are missing, or not numbers.');\n        return Promise.resolve();\n      }\n      var maxImageSize = this.options.maxImageSize;\n      if (maxImageSize !== -1 && w * h > maxImageSize) {\n        (0, _util.warn)('Image exceeded maximum allowed size and was removed.');\n        return Promise.resolve();\n      }\n      var imageMask = dict.get('ImageMask', 'IM') || false;\n      var imgData, args;\n      if (imageMask) {\n        var width = dict.get('Width', 'W');\n        var height = dict.get('Height', 'H');\n        var bitStrideLength = width + 7 >> 3;\n        var imgArray = image.getBytes(bitStrideLength * height);\n        var decode = dict.getArray('Decode', 'D');\n        imgData = _image.PDFImage.createMask({\n          imgArray: imgArray,\n          width: width,\n          height: height,\n          imageIsFromDecodeStream: image instanceof _stream.DecodeStream,\n          inverseDecode: !!decode && decode[0] > 0\n        });\n        imgData.cached = true;\n        args = [imgData];\n        operatorList.addOp(_util.OPS.paintImageMaskXObject, args);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintImageMaskXObject,\n            args: args\n          };\n        }\n        return Promise.resolve();\n      }\n      var softMask = dict.get('SMask', 'SM') || false;\n      var mask = dict.get('Mask') || false;\n      var SMALL_IMAGE_DIMENSIONS = 200;\n      if (isInline && !softMask && !mask && !(image instanceof _jpeg_stream.JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n        var imageObj = new _image.PDFImage({\n          xref: this.xref,\n          res: resources,\n          image: image,\n          isInline: isInline,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n        imgData = imageObj.createImageData(true);\n        operatorList.addOp(_util.OPS.paintInlineImageXObject, [imgData]);\n        return Promise.resolve();\n      }\n      var nativeImageDecoderSupport = forceDisableNativeImageDecoder ? _util.NativeImageDecoding.NONE : this.options.nativeImageDecoderSupport;\n      var objId = 'img_' + this.idFactory.createObjId();\n      if (nativeImageDecoderSupport !== _util.NativeImageDecoding.NONE && !softMask && !mask && image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources, this.pdfFunctionFactory)) {\n        return this.handler.sendWithPromise('obj', [objId, this.pageIndex, 'JpegStream', image.getIR(this.options.forceDataSchema)]).then(function () {\n          operatorList.addDependency(objId);\n          args = [objId, w, h];\n          operatorList.addOp(_util.OPS.paintJpegXObject, args);\n          if (cacheKey) {\n            imageCache[cacheKey] = {\n              fn: _util.OPS.paintJpegXObject,\n              args: args\n            };\n          }\n        }, function (reason) {\n          (0, _util.warn)('Native JPEG decoding failed -- trying to recover: ' + (reason && reason.message));\n          return _this2.buildPaintImageXObject({\n            resources: resources,\n            image: image,\n            isInline: isInline,\n            operatorList: operatorList,\n            cacheKey: cacheKey,\n            imageCache: imageCache,\n            forceDisableNativeImageDecoder: true\n          });\n        });\n      }\n      var nativeImageDecoder = null;\n      if (nativeImageDecoderSupport === _util.NativeImageDecoding.DECODE && (image instanceof _jpeg_stream.JpegStream || mask instanceof _jpeg_stream.JpegStream || softMask instanceof _jpeg_stream.JpegStream)) {\n        nativeImageDecoder = new NativeImageDecoder({\n          xref: this.xref,\n          resources: resources,\n          handler: this.handler,\n          forceDataSchema: this.options.forceDataSchema,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n      }\n      operatorList.addDependency(objId);\n      args = [objId, w, h];\n      _image.PDFImage.buildImage({\n        handler: this.handler,\n        xref: this.xref,\n        res: resources,\n        image: image,\n        isInline: isInline,\n        nativeDecoder: nativeImageDecoder,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      }).then(function (imageObj) {\n        var imgData = imageObj.createImageData(false);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', imgData], [imgData.data.buffer]);\n      }).catch(function (reason) {\n        (0, _util.warn)('Unable to decode image: ' + reason);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', null]);\n      });\n      operatorList.addOp(_util.OPS.paintImageXObject, args);\n      if (cacheKey) {\n        imageCache[cacheKey] = {\n          fn: _util.OPS.paintImageXObject,\n          args: args\n        };\n      }\n      return Promise.resolve();\n    },\n\n    handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n      var smaskContent = smask.get('G');\n      var smaskOptions = {\n        subtype: smask.get('S').name,\n        backdrop: smask.get('BC')\n      };\n      var transferObj = smask.get('TR');\n      if ((0, _function.isPDFFunction)(transferObj)) {\n        var transferFn = this.pdfFunctionFactory.create(transferObj);\n        var transferMap = new Uint8Array(256);\n        var tmp = new Float32Array(1);\n        for (var i = 0; i < 256; i++) {\n          tmp[0] = i / 255;\n          transferFn(tmp, 0, tmp, 0);\n          transferMap[i] = tmp[0] * 255 | 0;\n        }\n        smaskOptions.transferMap = transferMap;\n      }\n      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n    },\n    handleTilingType: function handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n      var _this3 = this;\n\n      var tilingOpList = new _operator_list.OperatorList();\n      var resourcesArray = [patternDict.get('Resources'), resources];\n      var patternResources = _primitives.Dict.merge(this.xref, resourcesArray);\n      return this.getOperatorList({\n        stream: pattern,\n        task: task,\n        resources: patternResources,\n        operatorList: tilingOpList\n      }).then(function () {\n        return (0, _pattern.getTilingPatternIR)({\n          fnArray: tilingOpList.fnArray,\n          argsArray: tilingOpList.argsArray\n        }, patternDict, args);\n      }).then(function (tilingPatternIR) {\n        operatorList.addDependencies(tilingOpList.dependencies);\n        operatorList.addOp(fn, tilingPatternIR);\n      }, function (reason) {\n        if (_this3.options.ignoreErrors) {\n          _this3.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('handleTilingType - ignoring pattern: \"' + reason + '\".');\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n      var _this4 = this;\n\n      var fontName;\n      if (fontArgs) {\n        fontArgs = fontArgs.slice();\n        fontName = fontArgs[0].name;\n      }\n      return this.loadFont(fontName, fontRef, resources).then(function (translated) {\n        if (!translated.font.isType3Font) {\n          return translated;\n        }\n        return translated.loadType3Data(_this4, resources, operatorList, task).then(function () {\n          return translated;\n        }).catch(function (reason) {\n          _this4.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n          return new TranslatedFont('g_font_error', new _fonts.ErrorFont('Type3 font load error: ' + reason), translated.font);\n        });\n      }).then(function (translated) {\n        state.font = translated.font;\n        translated.send(_this4.handler);\n        return translated.loadedName;\n      });\n    },\n    handleText: function PartialEvaluator_handleText(chars, state) {\n      var _this5 = this;\n\n      var font = state.font;\n      var glyphs = font.charsToGlyphs(chars);\n      var isAddToPathSet = !!(state.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n      if (font.data && (isAddToPathSet || this.options.disableFontFace || state.fillColorSpace.name === 'Pattern')) {\n        var buildPath = function buildPath(fontChar) {\n          if (!font.renderer.hasBuiltPath(fontChar)) {\n            var path = font.renderer.getPathJs(fontChar);\n            _this5.handler.send('commonobj', [font.loadedName + '_path_' + fontChar, 'FontPath', path]);\n          }\n        };\n        for (var i = 0, ii = glyphs.length; i < ii; i++) {\n          var glyph = glyphs[i];\n          buildPath(glyph.fontChar);\n          var accent = glyph.accent;\n          if (accent && accent.fontChar) {\n            buildPath(accent.fontChar);\n          }\n        }\n      }\n      return glyphs;\n    },\n    setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, stateManager) {\n      var _this6 = this;\n\n      var gStateObj = [];\n      var gStateKeys = gState.getKeys();\n      var promise = Promise.resolve();\n\n      var _loop = function _loop() {\n        var key = gStateKeys[i];\n        var value = gState.get(key);\n        switch (key) {\n          case 'Type':\n            break;\n          case 'LW':\n          case 'LC':\n          case 'LJ':\n          case 'ML':\n          case 'D':\n          case 'RI':\n          case 'FL':\n          case 'CA':\n          case 'ca':\n            gStateObj.push([key, value]);\n            break;\n          case 'Font':\n            promise = promise.then(function () {\n              return _this6.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                gStateObj.push([key, [loadedName, value[1]]]);\n              });\n            });\n            break;\n          case 'BM':\n            gStateObj.push([key, normalizeBlendMode(value)]);\n            break;\n          case 'SMask':\n            if ((0, _primitives.isName)(value, 'None')) {\n              gStateObj.push([key, false]);\n              break;\n            }\n            if ((0, _primitives.isDict)(value)) {\n              promise = promise.then(function () {\n                return _this6.handleSMask(value, resources, operatorList, task, stateManager);\n              });\n              gStateObj.push([key, true]);\n            } else {\n              (0, _util.warn)('Unsupported SMask type');\n            }\n            break;\n          case 'OP':\n          case 'op':\n          case 'OPM':\n          case 'BG':\n          case 'BG2':\n          case 'UCR':\n          case 'UCR2':\n          case 'TR':\n          case 'TR2':\n          case 'HT':\n          case 'SM':\n          case 'SA':\n          case 'AIS':\n          case 'TK':\n            (0, _util.info)('graphic state operator ' + key);\n            break;\n          default:\n            (0, _util.info)('Unknown graphic state operator ' + key);\n            break;\n        }\n      };\n\n      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n        _loop();\n      }\n      return promise.then(function () {\n        if (gStateObj.length > 0) {\n          operatorList.addOp(_util.OPS.setGState, [gStateObj]);\n        }\n      });\n    },\n    loadFont: function PartialEvaluator_loadFont(fontName, font, resources) {\n      var _this7 = this;\n\n      function errorFont() {\n        return Promise.resolve(new TranslatedFont('g_font_error', new _fonts.ErrorFont('Font ' + fontName + ' is not available'), font));\n      }\n      var fontRef,\n          xref = this.xref;\n      if (font) {\n        if (!(0, _primitives.isRef)(font)) {\n          throw new Error('The \"font\" object should be a reference.');\n        }\n        fontRef = font;\n      } else {\n        var fontRes = resources.get('Font');\n        if (fontRes) {\n          fontRef = fontRes.getRaw(fontName);\n        } else {\n          (0, _util.warn)('fontRes not available');\n          return errorFont();\n        }\n      }\n      if (!fontRef) {\n        (0, _util.warn)('fontRef not available');\n        return errorFont();\n      }\n      if (this.fontCache.has(fontRef)) {\n        return this.fontCache.get(fontRef);\n      }\n      font = xref.fetchIfRef(fontRef);\n      if (!(0, _primitives.isDict)(font)) {\n        return errorFont();\n      }\n      if (font.translated) {\n        return font.translated;\n      }\n      var fontCapability = (0, _util.createPromiseCapability)();\n      var preEvaluatedFont = this.preEvaluateFont(font);\n      var descriptor = preEvaluatedFont.descriptor;\n      var fontRefIsRef = (0, _primitives.isRef)(fontRef),\n          fontID;\n      if (fontRefIsRef) {\n        fontID = fontRef.toString();\n      }\n      if ((0, _primitives.isDict)(descriptor)) {\n        if (!descriptor.fontAliases) {\n          descriptor.fontAliases = Object.create(null);\n        }\n        var fontAliases = descriptor.fontAliases;\n        var hash = preEvaluatedFont.hash;\n        if (fontAliases[hash]) {\n          var aliasFontRef = fontAliases[hash].aliasRef;\n          if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n            this.fontCache.putAlias(fontRef, aliasFontRef);\n            return this.fontCache.get(fontRef);\n          }\n        } else {\n          fontAliases[hash] = { fontID: _fonts.Font.getFontID() };\n        }\n        if (fontRefIsRef) {\n          fontAliases[hash].aliasRef = fontRef;\n        }\n        fontID = fontAliases[hash].fontID;\n      }\n      if (fontRefIsRef) {\n        this.fontCache.put(fontRef, fontCapability.promise);\n      } else {\n        if (!fontID) {\n          fontID = this.idFactory.createObjId();\n        }\n        this.fontCache.put('id_' + fontID, fontCapability.promise);\n      }\n      (0, _util.assert)(fontID, 'The \"fontID\" must be defined.');\n      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n      font.translated = fontCapability.promise;\n      var translatedPromise;\n      try {\n        translatedPromise = this.translateFont(preEvaluatedFont);\n      } catch (e) {\n        translatedPromise = Promise.reject(e);\n      }\n      translatedPromise.then(function (translatedFont) {\n        if (translatedFont.fontType !== undefined) {\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[translatedFont.fontType] = true;\n        }\n        fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n      }).catch(function (reason) {\n        _this7.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n        try {\n          var descriptor = preEvaluatedFont.descriptor;\n          var fontFile3 = descriptor && descriptor.get('FontFile3');\n          var subtype = fontFile3 && fontFile3.get('Subtype');\n          var fontType = (0, _fonts.getFontType)(preEvaluatedFont.type, subtype && subtype.name);\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[fontType] = true;\n        } catch (ex) {}\n        fontCapability.resolve(new TranslatedFont(font.loadedName, new _fonts.ErrorFont(reason instanceof Error ? reason.message : reason), font));\n      });\n      return fontCapability.promise;\n    },\n    buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n      var lastIndex = operatorList.length - 1;\n      if (!args) {\n        args = [];\n      }\n      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== _util.OPS.constructPath) {\n        operatorList.addOp(_util.OPS.constructPath, [[fn], args]);\n      } else {\n        var opArgs = operatorList.argsArray[lastIndex];\n        opArgs[0].push(fn);\n        Array.prototype.push.apply(opArgs[1], args);\n      }\n    },\n    handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task) {\n      var patternName = args[args.length - 1];\n      var pattern;\n      if ((0, _primitives.isName)(patternName) && (pattern = patterns.get(patternName.name))) {\n        var dict = (0, _primitives.isStream)(pattern) ? pattern.dict : pattern;\n        var typeNum = dict.get('PatternType');\n        if (typeNum === TILING_PATTERN) {\n          var color = cs.base ? cs.base.getRgb(args, 0) : null;\n          return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n        } else if (typeNum === SHADING_PATTERN) {\n          var shading = dict.get('Shading');\n          var matrix = dict.getArray('Matrix');\n          pattern = _pattern.Pattern.parseShading(shading, matrix, this.xref, resources, this.handler, this.pdfFunctionFactory);\n          operatorList.addOp(fn, pattern.getIR());\n          return Promise.resolve();\n        }\n        return Promise.reject(new Error('Unknown PatternType: ' + typeNum));\n      }\n      operatorList.addOp(fn, args);\n      return Promise.resolve();\n    },\n    getOperatorList: function getOperatorList(_ref5) {\n      var _this8 = this;\n\n      var stream = _ref5.stream,\n          task = _ref5.task,\n          resources = _ref5.resources,\n          operatorList = _ref5.operatorList,\n          _ref5$initialState = _ref5.initialState,\n          initialState = _ref5$initialState === undefined ? null : _ref5$initialState;\n\n      resources = resources || _primitives.Dict.empty;\n      initialState = initialState || new EvalState();\n      if (!operatorList) {\n        throw new Error('getOperatorList: missing \"operatorList\" parameter');\n      }\n      var self = this;\n      var xref = this.xref;\n      var imageCache = Object.create(null);\n      var xobjs = resources.get('XObject') || _primitives.Dict.empty;\n      var patterns = resources.get('Pattern') || _primitives.Dict.empty;\n      var stateManager = new StateManager(initialState);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var timeSlotManager = new TimeSlotManager();\n      function closePendingRestoreOPS(argument) {\n        for (var i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n          operatorList.addOp(_util.OPS.restore, []);\n        }\n      }\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          promise.then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            i,\n            ii,\n            cs;\n        while (!(stop = timeSlotManager.check())) {\n          operation.args = null;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          var args = operation.args;\n          var fn = operation.fn;\n          switch (fn | 0) {\n            case _util.OPS.paintXObject:\n              var name = args[0].name;\n              if (name && imageCache[name] !== undefined) {\n                operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n                args = null;\n                continue;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  operatorList.addOp(fn, args);\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name === 'Form') {\n                  stateManager.save();\n                  self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n                    stateManager.restore();\n                    resolveXObject();\n                  }, rejectXObject);\n                  return;\n                } else if (type.name === 'Image') {\n                  self.buildPaintImageXObject({\n                    resources: resources,\n                    image: xobj,\n                    operatorList: operatorList,\n                    cacheKey: name,\n                    imageCache: imageCache\n                  }).then(resolveXObject, rejectXObject);\n                  return;\n                } else if (type.name === 'PS') {\n                  (0, _util.info)('Ignored XObject subtype PS');\n                } else {\n                  throw new _util.FormatError('Unhandled XObject subtype ' + type.name);\n                }\n                resolveXObject();\n              }).catch(function (reason) {\n                if (self.options.ignoreErrors) {\n                  self.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n                  (0, _util.warn)('getOperatorList - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setFont:\n              var fontSize = args[1];\n              next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                operatorList.addOp(_util.OPS.setFont, [loadedName, fontSize]);\n              }));\n              return;\n            case _util.OPS.endInlineImage:\n              var cacheKey = args[0].cacheKey;\n              if (cacheKey) {\n                var cacheEntry = imageCache[cacheKey];\n                if (cacheEntry !== undefined) {\n                  operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n                  args = null;\n                  continue;\n                }\n              }\n              next(self.buildPaintImageXObject({\n                resources: resources,\n                image: args[0],\n                isInline: true,\n                operatorList: operatorList,\n                cacheKey: cacheKey,\n                imageCache: imageCache\n              }));\n              return;\n            case _util.OPS.showText:\n              args[0] = self.handleText(args[0], stateManager.state);\n              break;\n            case _util.OPS.showSpacedText:\n              var arr = args[0];\n              var combinedGlyphs = [];\n              var arrLength = arr.length;\n              var state = stateManager.state;\n              for (i = 0; i < arrLength; ++i) {\n                var arrItem = arr[i];\n                if ((0, _util.isString)(arrItem)) {\n                  Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n                } else if ((0, _util.isNum)(arrItem)) {\n                  combinedGlyphs.push(arrItem);\n                }\n              }\n              args[0] = combinedGlyphs;\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              operatorList.addOp(_util.OPS.setWordSpacing, [args.shift()]);\n              operatorList.addOp(_util.OPS.setCharSpacing, [args.shift()]);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.setTextRenderingMode:\n              stateManager.state.textRenderingMode = args[0];\n              break;\n            case _util.OPS.setFillColorSpace:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setStrokeColorSpace:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setFillColor:\n              cs = stateManager.state.fillColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColor:\n              cs = stateManager.state.strokeColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillGray:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeGray:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillCMYKColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeCMYKColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillRGBColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setStrokeRGBColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setFillColorN:\n              cs = stateManager.state.fillColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setFillColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColorN:\n              cs = stateManager.state.strokeColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setStrokeColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.shadingFill:\n              var shadingRes = resources.get('Shading');\n              if (!shadingRes) {\n                throw new _util.FormatError('No shading resource found');\n              }\n              var shading = shadingRes.get(args[0].name);\n              if (!shading) {\n                throw new _util.FormatError('No shading object found');\n              }\n              var shadingFill = _pattern.Pattern.parseShading(shading, null, xref, resources, self.handler, self.pdfFunctionFactory);\n              var patternIR = shadingFill.getIR();\n              args = [patternIR];\n              fn = _util.OPS.shadingFill;\n              break;\n            case _util.OPS.setGState:\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !extGState.has(dictName.name)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              next(self.setGState(resources, gState, operatorList, task, stateManager));\n              return;\n            case _util.OPS.moveTo:\n            case _util.OPS.lineTo:\n            case _util.OPS.curveTo:\n            case _util.OPS.curveTo2:\n            case _util.OPS.curveTo3:\n            case _util.OPS.closePath:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.rectangle:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.markPoint:\n            case _util.OPS.markPointProps:\n            case _util.OPS.beginMarkedContent:\n            case _util.OPS.beginMarkedContentProps:\n            case _util.OPS.endMarkedContent:\n            case _util.OPS.beginCompat:\n            case _util.OPS.endCompat:\n              continue;\n            default:\n              if (args !== null) {\n                for (i = 0, ii = args.length; i < ii; i++) {\n                  if (args[i] instanceof _primitives.Dict) {\n                    break;\n                  }\n                }\n                if (i < ii) {\n                  (0, _util.warn)('getOperatorList - ignoring operator: ' + fn);\n                  continue;\n                }\n              }\n          }\n          operatorList.addOp(fn, args);\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        closePendingRestoreOPS();\n        resolve();\n      }).catch(function (reason) {\n        if (_this8.options.ignoreErrors) {\n          _this8.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('getOperatorList - ignoring errors during task: ' + task.name);\n          closePendingRestoreOPS();\n          return;\n        }\n        throw reason;\n      });\n    },\n    getTextContent: function getTextContent(_ref6) {\n      var _this9 = this;\n\n      var stream = _ref6.stream,\n          task = _ref6.task,\n          resources = _ref6.resources,\n          _ref6$stateManager = _ref6.stateManager,\n          stateManager = _ref6$stateManager === undefined ? null : _ref6$stateManager,\n          _ref6$normalizeWhites = _ref6.normalizeWhitespace,\n          normalizeWhitespace = _ref6$normalizeWhites === undefined ? false : _ref6$normalizeWhites,\n          _ref6$combineTextItem = _ref6.combineTextItems,\n          combineTextItems = _ref6$combineTextItem === undefined ? false : _ref6$combineTextItem,\n          sink = _ref6.sink,\n          _ref6$seenStyles = _ref6.seenStyles,\n          seenStyles = _ref6$seenStyles === undefined ? Object.create(null) : _ref6$seenStyles;\n\n      resources = resources || _primitives.Dict.empty;\n      stateManager = stateManager || new StateManager(new TextState());\n      var WhitespaceRegexp = /\\s/g;\n      var textContent = {\n        items: [],\n        styles: Object.create(null)\n      };\n      var textContentItem = {\n        initialized: false,\n        str: [],\n        width: 0,\n        height: 0,\n        vertical: false,\n        lastAdvanceWidth: 0,\n        lastAdvanceHeight: 0,\n        textAdvanceScale: 0,\n        spaceWidth: 0,\n        fakeSpaceMin: Infinity,\n        fakeMultiSpaceMin: Infinity,\n        fakeMultiSpaceMax: -0,\n        textRunBreakAllowed: false,\n        transform: null,\n        fontName: null\n      };\n      var SPACE_FACTOR = 0.3;\n      var MULTI_SPACE_FACTOR = 1.5;\n      var MULTI_SPACE_FACTOR_MAX = 4;\n      var self = this;\n      var xref = this.xref;\n      var xobjs = null;\n      var skipEmptyXObjs = Object.create(null);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var textState;\n      function ensureTextContentItem() {\n        if (textContentItem.initialized) {\n          return textContentItem;\n        }\n        var font = textState.font;\n        if (!(font.loadedName in seenStyles)) {\n          seenStyles[font.loadedName] = true;\n          textContent.styles[font.loadedName] = {\n            fontFamily: font.fallbackName,\n            ascent: font.ascent,\n            descent: font.descent,\n            vertical: font.vertical\n          };\n        }\n        textContentItem.fontName = font.loadedName;\n        var tsm = [textState.fontSize * textState.textHScale, 0, 0, textState.fontSize, 0, textState.textRise];\n        if (font.isType3Font && textState.fontMatrix !== _util.FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n          var glyphHeight = font.bbox[3] - font.bbox[1];\n          if (glyphHeight > 0) {\n            glyphHeight = glyphHeight * textState.fontMatrix[3];\n            tsm[3] *= glyphHeight;\n          }\n        }\n        var trm = _util.Util.transform(textState.ctm, _util.Util.transform(textState.textMatrix, tsm));\n        textContentItem.transform = trm;\n        if (!font.vertical) {\n          textContentItem.width = 0;\n          textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n          textContentItem.vertical = false;\n        } else {\n          textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n          textContentItem.height = 0;\n          textContentItem.vertical = true;\n        }\n        var a = textState.textLineMatrix[0];\n        var b = textState.textLineMatrix[1];\n        var scaleLineX = Math.sqrt(a * a + b * b);\n        a = textState.ctm[0];\n        b = textState.ctm[1];\n        var scaleCtmX = Math.sqrt(a * a + b * b);\n        textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n        textContentItem.lastAdvanceWidth = 0;\n        textContentItem.lastAdvanceHeight = 0;\n        var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n        if (spaceWidth) {\n          textContentItem.spaceWidth = spaceWidth;\n          textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n          textContentItem.textRunBreakAllowed = !font.isMonospace;\n        } else {\n          textContentItem.spaceWidth = 0;\n          textContentItem.fakeSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMax = 0;\n          textContentItem.textRunBreakAllowed = false;\n        }\n        textContentItem.initialized = true;\n        return textContentItem;\n      }\n      function replaceWhitespace(str) {\n        var i = 0,\n            ii = str.length,\n            code;\n        while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n          i++;\n        }\n        return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n      }\n      function runBidiTransform(textChunk) {\n        var str = textChunk.str.join('');\n        var bidiResult = (0, _bidi.bidi)(str, -1, textChunk.vertical);\n        return {\n          str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n          dir: bidiResult.dir,\n          width: textChunk.width,\n          height: textChunk.height,\n          transform: textChunk.transform,\n          fontName: textChunk.fontName\n        };\n      }\n      function handleSetFont(fontName, fontRef) {\n        return self.loadFont(fontName, fontRef, resources).then(function (translated) {\n          textState.font = translated.font;\n          textState.fontMatrix = translated.font.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        });\n      }\n      function buildTextContentItem(chars) {\n        var font = textState.font;\n        var textChunk = ensureTextContentItem();\n        var width = 0;\n        var height = 0;\n        var glyphs = font.charsToGlyphs(chars);\n        for (var i = 0; i < glyphs.length; i++) {\n          var glyph = glyphs[i];\n          var glyphWidth = null;\n          if (font.vertical && glyph.vmetric) {\n            glyphWidth = glyph.vmetric[0];\n          } else {\n            glyphWidth = glyph.width;\n          }\n          var glyphUnicode = glyph.unicode;\n          var NormalizedUnicodes = (0, _unicode.getNormalizedUnicodes)();\n          if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n            glyphUnicode = NormalizedUnicodes[glyphUnicode];\n          }\n          glyphUnicode = (0, _unicode.reverseIfRtl)(glyphUnicode);\n          var charSpacing = textState.charSpacing;\n          if (glyph.isSpace) {\n            var wordSpacing = textState.wordSpacing;\n            charSpacing += wordSpacing;\n            if (wordSpacing > 0) {\n              addFakeSpaces(wordSpacing, textChunk.str);\n            }\n          }\n          var tx = 0;\n          var ty = 0;\n          if (!font.vertical) {\n            var w0 = glyphWidth * textState.fontMatrix[0];\n            tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n            width += tx;\n          } else {\n            var w1 = glyphWidth * textState.fontMatrix[0];\n            ty = w1 * textState.fontSize + charSpacing;\n            height += ty;\n          }\n          textState.translateTextMatrix(tx, ty);\n          textChunk.str.push(glyphUnicode);\n        }\n        if (!font.vertical) {\n          textChunk.lastAdvanceWidth = width;\n          textChunk.width += width;\n        } else {\n          textChunk.lastAdvanceHeight = height;\n          textChunk.height += Math.abs(height);\n        }\n        return textChunk;\n      }\n      function addFakeSpaces(width, strBuf) {\n        if (width < textContentItem.fakeSpaceMin) {\n          return;\n        }\n        if (width < textContentItem.fakeMultiSpaceMin) {\n          strBuf.push(' ');\n          return;\n        }\n        var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n        while (fakeSpaces-- > 0) {\n          strBuf.push(' ');\n        }\n      }\n      function flushTextContentItem() {\n        if (!textContentItem.initialized) {\n          return;\n        }\n        textContentItem.width *= textContentItem.textAdvanceScale;\n        textContentItem.height *= textContentItem.textAdvanceScale;\n        textContent.items.push(runBidiTransform(textContentItem));\n        textContentItem.initialized = false;\n        textContentItem.str.length = 0;\n      }\n      function enqueueChunk() {\n        var length = textContent.items.length;\n        if (length > 0) {\n          sink.enqueue(textContent, length);\n          textContent.items = [];\n          textContent.styles = Object.create(null);\n        }\n      }\n      var timeSlotManager = new TimeSlotManager();\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          enqueueChunk();\n          Promise.all([promise, sink.ready]).then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            args = [];\n        while (!(stop = timeSlotManager.check())) {\n          args.length = 0;\n          operation.args = args;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          textState = stateManager.state;\n          var fn = operation.fn;\n          args = operation.args;\n          var advance, diff;\n          switch (fn | 0) {\n            case _util.OPS.setFont:\n              var fontNameArg = args[0].name,\n                  fontSizeArg = args[1];\n              if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n                break;\n              }\n              flushTextContentItem();\n              textState.fontName = fontNameArg;\n              textState.fontSize = fontSizeArg;\n              next(handleSetFont(fontNameArg, null));\n              return;\n            case _util.OPS.setTextRise:\n              flushTextContentItem();\n              textState.textRise = args[0];\n              break;\n            case _util.OPS.setHScale:\n              flushTextContentItem();\n              textState.textHScale = args[0] / 100;\n              break;\n            case _util.OPS.setLeading:\n              flushTextContentItem();\n              textState.leading = args[0];\n              break;\n            case _util.OPS.moveText:\n              var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n              advance = args[0] - args[1];\n              if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(args[0], args[1]);\n                textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n                textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n                diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.setLeadingMoveText:\n              flushTextContentItem();\n              textState.leading = -args[1];\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.nextLine:\n              flushTextContentItem();\n              textState.carriageReturn();\n              break;\n            case _util.OPS.setTextMatrix:\n              advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n              if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(advance.width, advance.height);\n                textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n                textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n                diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              break;\n            case _util.OPS.setCharSpacing:\n              textState.charSpacing = args[0];\n              break;\n            case _util.OPS.setWordSpacing:\n              textState.wordSpacing = args[0];\n              break;\n            case _util.OPS.beginText:\n              flushTextContentItem();\n              textState.textMatrix = _util.IDENTITY_MATRIX.slice();\n              textState.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n              break;\n            case _util.OPS.showSpacedText:\n              var items = args[0];\n              var offset;\n              for (var j = 0, jj = items.length; j < jj; j++) {\n                if (typeof items[j] === 'string') {\n                  buildTextContentItem(items[j]);\n                } else if ((0, _util.isNum)(items[j])) {\n                  ensureTextContentItem();\n                  advance = items[j] * textState.fontSize / 1000;\n                  var breakTextRun = false;\n                  if (textState.font.vertical) {\n                    offset = advance;\n                    textState.translateTextMatrix(0, offset);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.height += offset;\n                    }\n                  } else {\n                    advance = -advance;\n                    offset = advance * textState.textHScale;\n                    textState.translateTextMatrix(offset, 0);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.width += offset;\n                    }\n                  }\n                  if (breakTextRun) {\n                    flushTextContentItem();\n                  } else if (advance > 0) {\n                    addFakeSpaces(advance, textContentItem.str);\n                  }\n                }\n              }\n              break;\n            case _util.OPS.showText:\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineShowText:\n              flushTextContentItem();\n              textState.carriageReturn();\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              flushTextContentItem();\n              textState.wordSpacing = args[0];\n              textState.charSpacing = args[1];\n              textState.carriageReturn();\n              buildTextContentItem(args[2]);\n              break;\n            case _util.OPS.paintXObject:\n              flushTextContentItem();\n              if (!xobjs) {\n                xobjs = resources.get('XObject') || _primitives.Dict.empty;\n              }\n              var name = args[0].name;\n              if (name && skipEmptyXObjs[name] !== undefined) {\n                break;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name !== 'Form') {\n                  skipEmptyXObjs[name] = true;\n                  resolveXObject();\n                  return;\n                }\n                var currentState = stateManager.state.clone();\n                var xObjStateManager = new StateManager(currentState);\n                var matrix = xobj.dict.getArray('Matrix');\n                if (Array.isArray(matrix) && matrix.length === 6) {\n                  xObjStateManager.transform(matrix);\n                }\n                enqueueChunk();\n                var sinkWrapper = {\n                  enqueueInvoked: false,\n                  enqueue: function enqueue(chunk, size) {\n                    this.enqueueInvoked = true;\n                    sink.enqueue(chunk, size);\n                  },\n\n                  get desiredSize() {\n                    return sink.desiredSize;\n                  },\n                  get ready() {\n                    return sink.ready;\n                  }\n                };\n                self.getTextContent({\n                  stream: xobj,\n                  task: task,\n                  resources: xobj.dict.get('Resources') || resources,\n                  stateManager: xObjStateManager,\n                  normalizeWhitespace: normalizeWhitespace,\n                  combineTextItems: combineTextItems,\n                  sink: sinkWrapper,\n                  seenStyles: seenStyles\n                }).then(function () {\n                  if (!sinkWrapper.enqueueInvoked) {\n                    skipEmptyXObjs[name] = true;\n                  }\n                  resolveXObject();\n                }, rejectXObject);\n              }).catch(function (reason) {\n                if (reason instanceof _util.AbortException) {\n                  return;\n                }\n                if (self.options.ignoreErrors) {\n                  (0, _util.warn)('getTextContent - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setGState:\n              flushTextContentItem();\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !(0, _primitives.isName)(dictName)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              if (!(0, _primitives.isDict)(gState)) {\n                break;\n              }\n              var gStateFont = gState.get('Font');\n              if (gStateFont) {\n                textState.fontName = null;\n                textState.fontSize = gStateFont[1];\n                next(handleSetFont(null, gStateFont[0]));\n                return;\n              }\n              break;\n          }\n          if (textContent.items.length >= sink.desiredSize) {\n            stop = true;\n            break;\n          }\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        flushTextContentItem();\n        enqueueChunk();\n        resolve();\n      }).catch(function (reason) {\n        if (reason instanceof _util.AbortException) {\n          return;\n        }\n        if (_this9.options.ignoreErrors) {\n          (0, _util.warn)('getTextContent - ignoring errors during task: ' + task.name);\n          flushTextContentItem();\n          enqueueChunk();\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, properties) {\n      var _this10 = this;\n\n      var xref = this.xref;\n      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n      if (properties.composite) {\n        var cidSystemInfo = dict.get('CIDSystemInfo');\n        if ((0, _primitives.isDict)(cidSystemInfo)) {\n          properties.cidSystemInfo = {\n            registry: cidSystemInfo.get('Registry'),\n            ordering: cidSystemInfo.get('Ordering'),\n            supplement: cidSystemInfo.get('Supplement')\n          };\n        }\n        var cidToGidMap = dict.get('CIDToGIDMap');\n        if ((0, _primitives.isStream)(cidToGidMap)) {\n          properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n        }\n      }\n      var differences = [];\n      var baseEncodingName = null;\n      var encoding;\n      if (dict.has('Encoding')) {\n        encoding = dict.get('Encoding');\n        if ((0, _primitives.isDict)(encoding)) {\n          baseEncodingName = encoding.get('BaseEncoding');\n          baseEncodingName = (0, _primitives.isName)(baseEncodingName) ? baseEncodingName.name : null;\n          if (encoding.has('Differences')) {\n            var diffEncoding = encoding.get('Differences');\n            var index = 0;\n            for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n              var data = xref.fetchIfRef(diffEncoding[j]);\n              if ((0, _util.isNum)(data)) {\n                index = data;\n              } else if ((0, _primitives.isName)(data)) {\n                differences[index++] = data.name;\n              } else {\n                throw new _util.FormatError('Invalid entry in \\'Differences\\' array: ' + data);\n              }\n            }\n          }\n        } else if ((0, _primitives.isName)(encoding)) {\n          baseEncodingName = encoding.name;\n        } else {\n          throw new _util.FormatError('Encoding is not a Name nor a Dict');\n        }\n        if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n          baseEncodingName = null;\n        }\n      }\n      if (baseEncodingName) {\n        properties.defaultEncoding = (0, _encodings.getEncoding)(baseEncodingName).slice();\n      } else {\n        var isSymbolicFont = !!(properties.flags & _fonts.FontFlags.Symbolic);\n        var isNonsymbolicFont = !!(properties.flags & _fonts.FontFlags.Nonsymbolic);\n        encoding = _encodings.StandardEncoding;\n        if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n          encoding = _encodings.WinAnsiEncoding;\n        }\n        if (isSymbolicFont) {\n          encoding = _encodings.MacRomanEncoding;\n          if (!properties.file) {\n            if (/Symbol/i.test(properties.name)) {\n              encoding = _encodings.SymbolSetEncoding;\n            } else if (/Dingbats/i.test(properties.name)) {\n              encoding = _encodings.ZapfDingbatsEncoding;\n            }\n          }\n        }\n        properties.defaultEncoding = encoding;\n      }\n      properties.differences = differences;\n      properties.baseEncodingName = baseEncodingName;\n      properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n      properties.dict = dict;\n      return toUnicodePromise.then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return _this10.buildToUnicode(properties);\n      }).then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return properties;\n      });\n    },\n    _buildSimpleFontToUnicode: function _buildSimpleFontToUnicode(properties) {\n      (0, _util.assert)(!properties.composite, 'Must be a simple font.');\n      var toUnicode = [],\n          charcode = void 0,\n          glyphName = void 0;\n      var encoding = properties.defaultEncoding.slice();\n      var baseEncodingName = properties.baseEncodingName;\n      var differences = properties.differences;\n      for (charcode in differences) {\n        glyphName = differences[charcode];\n        if (glyphName === '.notdef') {\n          continue;\n        }\n        encoding[charcode] = glyphName;\n      }\n      var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n      for (charcode in encoding) {\n        glyphName = encoding[charcode];\n        if (glyphName === '') {\n          continue;\n        } else if (glyphsUnicodeMap[glyphName] === undefined) {\n          var code = 0;\n          switch (glyphName[0]) {\n            case 'G':\n              if (glyphName.length === 3) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'g':\n              if (glyphName.length === 5) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'C':\n            case 'c':\n              if (glyphName.length >= 3) {\n                code = +glyphName.substr(1);\n              }\n              break;\n            default:\n              var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n              if (unicode !== -1) {\n                code = unicode;\n              }\n          }\n          if (code) {\n            if (baseEncodingName && code === +charcode) {\n              var baseEncoding = (0, _encodings.getEncoding)(baseEncodingName);\n              if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n                toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n                continue;\n              }\n            }\n            toUnicode[charcode] = String.fromCharCode(code);\n          }\n          continue;\n        }\n        toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n      }\n      return new _fonts.ToUnicodeMap(toUnicode);\n    },\n    buildToUnicode: function buildToUnicode(properties) {\n      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n      if (properties.hasIncludedToUnicodeMap) {\n        if (!properties.composite && properties.hasEncoding) {\n          properties.fallbackToUnicode = this._buildSimpleFontToUnicode(properties);\n        }\n        return Promise.resolve(properties.toUnicode);\n      }\n      if (!properties.composite) {\n        return Promise.resolve(this._buildSimpleFontToUnicode(properties));\n      }\n      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof _cmap.IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n        var registry = properties.cidSystemInfo.registry;\n        var ordering = properties.cidSystemInfo.ordering;\n        var ucs2CMapName = _primitives.Name.get(registry + '-' + ordering + '-UCS2');\n        return _cmap.CMapFactory.create({\n          encoding: ucs2CMapName,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (ucs2CMap) {\n          var cMap = properties.cMap;\n          var toUnicode = [];\n          cMap.forEach(function (charcode, cid) {\n            if (cid > 0xffff) {\n              throw new _util.FormatError('Max size of CID is 65,535');\n            }\n            var ucs2 = ucs2CMap.lookup(cid);\n            if (ucs2) {\n              toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n            }\n          });\n          return new _fonts.ToUnicodeMap(toUnicode);\n        });\n      }\n      return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n    },\n\n    readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n      var cmapObj = toUnicode;\n      if ((0, _primitives.isName)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          return new _fonts.ToUnicodeMap(cmap.getMap());\n        });\n      } else if ((0, _primitives.isStream)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          var map = new Array(cmap.length);\n          cmap.forEach(function (charCode, token) {\n            var str = [];\n            for (var k = 0; k < token.length; k += 2) {\n              var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              if ((w1 & 0xF800) !== 0xD800) {\n                str.push(w1);\n                continue;\n              }\n              k += 2;\n              var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n            }\n            map[charCode] = String.fromCharCode.apply(String, str);\n          });\n          return new _fonts.ToUnicodeMap(map);\n        });\n      }\n      return Promise.resolve(null);\n    },\n    readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n      var glyphsData = cidToGidStream.getBytes();\n      var result = [];\n      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n        var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n        if (glyphID === 0) {\n          continue;\n        }\n        var code = j >> 1;\n        result[code] = glyphID;\n      }\n      return result;\n    },\n    extractWidths: function PartialEvaluator_extractWidths(dict, descriptor, properties) {\n      var xref = this.xref;\n      var glyphsWidths = [];\n      var defaultWidth = 0;\n      var glyphsVMetrics = [];\n      var defaultVMetrics;\n      var i, ii, j, jj, start, code, widths;\n      if (properties.composite) {\n        defaultWidth = dict.has('DW') ? dict.get('DW') : 1000;\n        widths = dict.get('W');\n        if (widths) {\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            start = xref.fetchIfRef(widths[i++]);\n            code = xref.fetchIfRef(widths[i]);\n            if (Array.isArray(code)) {\n              for (j = 0, jj = code.length; j < jj; j++) {\n                glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n              }\n            } else {\n              var width = xref.fetchIfRef(widths[++i]);\n              for (j = start; j <= code; j++) {\n                glyphsWidths[j] = width;\n              }\n            }\n          }\n        }\n        if (properties.vertical) {\n          var vmetrics = dict.getArray('DW2') || [880, -1000];\n          defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\n          vmetrics = dict.get('W2');\n          if (vmetrics) {\n            for (i = 0, ii = vmetrics.length; i < ii; i++) {\n              start = xref.fetchIfRef(vmetrics[i++]);\n              code = xref.fetchIfRef(vmetrics[i]);\n              if (Array.isArray(code)) {\n                for (j = 0, jj = code.length; j < jj; j++) {\n                  glyphsVMetrics[start++] = [xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j])];\n                }\n              } else {\n                var vmetric = [xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i])];\n                for (j = start; j <= code; j++) {\n                  glyphsVMetrics[j] = vmetric;\n                }\n              }\n            }\n          }\n        }\n      } else {\n        var firstChar = properties.firstChar;\n        widths = dict.get('Widths');\n        if (widths) {\n          j = firstChar;\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n          }\n          defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if ((0, _primitives.isName)(baseFontName)) {\n            var metrics = this.getBaseFontMetrics(baseFontName.name);\n            glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n            defaultWidth = metrics.defaultWidth;\n          }\n        }\n      }\n      var isMonospace = true;\n      var firstWidth = defaultWidth;\n      for (var glyph in glyphsWidths) {\n        var glyphWidth = glyphsWidths[glyph];\n        if (!glyphWidth) {\n          continue;\n        }\n        if (!firstWidth) {\n          firstWidth = glyphWidth;\n          continue;\n        }\n        if (firstWidth !== glyphWidth) {\n          isMonospace = false;\n          break;\n        }\n      }\n      if (isMonospace) {\n        properties.flags |= _fonts.FontFlags.FixedPitch;\n      }\n      properties.defaultWidth = defaultWidth;\n      properties.widths = glyphsWidths;\n      properties.defaultVMetrics = defaultVMetrics;\n      properties.vmetrics = glyphsVMetrics;\n    },\n    isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n      var fontNameWoStyle = baseFontName.split('-')[0];\n      return fontNameWoStyle in (0, _standard_fonts.getSerifFonts)() || fontNameWoStyle.search(/serif/gi) !== -1;\n    },\n    getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n      var defaultWidth = 0;\n      var widths = [];\n      var monospace = false;\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)();\n      var lookupName = stdFontMap[name] || name;\n      var Metrics = (0, _metrics.getMetrics)();\n      if (!(lookupName in Metrics)) {\n        if (this.isSerifFont(name)) {\n          lookupName = 'Times-Roman';\n        } else {\n          lookupName = 'Helvetica';\n        }\n      }\n      var glyphWidths = Metrics[lookupName];\n      if ((0, _util.isNum)(glyphWidths)) {\n        defaultWidth = glyphWidths;\n        monospace = true;\n      } else {\n        widths = glyphWidths();\n      }\n      return {\n        defaultWidth: defaultWidth,\n        monospace: monospace,\n        widths: widths\n      };\n    },\n    buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n      var widths = Object.create(null);\n      var differences = properties.differences;\n      var encoding = properties.defaultEncoding;\n      for (var charCode = 0; charCode < 256; charCode++) {\n        if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n          widths[charCode] = widthsByGlyphName[differences[charCode]];\n          continue;\n        }\n        if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n          widths[charCode] = widthsByGlyphName[encoding[charCode]];\n          continue;\n        }\n      }\n      return widths;\n    },\n    preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict) {\n      var baseDict = dict;\n      var type = dict.get('Subtype');\n      if (!(0, _primitives.isName)(type)) {\n        throw new _util.FormatError('invalid font Subtype');\n      }\n      var composite = false;\n      var uint8array;\n      if (type.name === 'Type0') {\n        var df = dict.get('DescendantFonts');\n        if (!df) {\n          throw new _util.FormatError('Descendant fonts are not specified');\n        }\n        dict = Array.isArray(df) ? this.xref.fetchIfRef(df[0]) : df;\n        type = dict.get('Subtype');\n        if (!(0, _primitives.isName)(type)) {\n          throw new _util.FormatError('invalid font Subtype');\n        }\n        composite = true;\n      }\n      var descriptor = dict.get('FontDescriptor');\n      if (descriptor) {\n        var hash = new _murmurhash.MurmurHash3_64();\n        var encoding = baseDict.getRaw('Encoding');\n        if ((0, _primitives.isName)(encoding)) {\n          hash.update(encoding.name);\n        } else if ((0, _primitives.isRef)(encoding)) {\n          hash.update(encoding.toString());\n        } else if ((0, _primitives.isDict)(encoding)) {\n          var keys = encoding.getKeys();\n          for (var i = 0, ii = keys.length; i < ii; i++) {\n            var entry = encoding.getRaw(keys[i]);\n            if ((0, _primitives.isName)(entry)) {\n              hash.update(entry.name);\n            } else if ((0, _primitives.isRef)(entry)) {\n              hash.update(entry.toString());\n            } else if (Array.isArray(entry)) {\n              var diffLength = entry.length,\n                  diffBuf = new Array(diffLength);\n              for (var j = 0; j < diffLength; j++) {\n                var diffEntry = entry[j];\n                if ((0, _primitives.isName)(diffEntry)) {\n                  diffBuf[j] = diffEntry.name;\n                } else if ((0, _util.isNum)(diffEntry) || (0, _primitives.isRef)(diffEntry)) {\n                  diffBuf[j] = diffEntry.toString();\n                }\n              }\n              hash.update(diffBuf.join());\n            }\n          }\n        }\n        var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n        if ((0, _primitives.isStream)(toUnicode)) {\n          var stream = toUnicode.str || toUnicode;\n          uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n          hash.update(uint8array);\n        } else if ((0, _primitives.isName)(toUnicode)) {\n          hash.update(toUnicode.name);\n        }\n        var widths = dict.get('Widths') || baseDict.get('Widths');\n        if (widths) {\n          uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n          hash.update(uint8array);\n        }\n      }\n      return {\n        descriptor: descriptor,\n        dict: dict,\n        baseDict: baseDict,\n        composite: composite,\n        type: type.name,\n        hash: hash ? hash.hexdigest() : ''\n      };\n    },\n    translateFont: function PartialEvaluator_translateFont(preEvaluatedFont) {\n      var _this11 = this;\n\n      var baseDict = preEvaluatedFont.baseDict;\n      var dict = preEvaluatedFont.dict;\n      var composite = preEvaluatedFont.composite;\n      var descriptor = preEvaluatedFont.descriptor;\n      var type = preEvaluatedFont.type;\n      var maxCharIndex = composite ? 0xFFFF : 0xFF;\n      var properties;\n      if (!descriptor) {\n        if (type === 'Type3') {\n          descriptor = new _primitives.Dict(null);\n          descriptor.set('FontName', _primitives.Name.get(type));\n          descriptor.set('FontBBox', dict.getArray('FontBBox'));\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if (!(0, _primitives.isName)(baseFontName)) {\n            throw new _util.FormatError('Base font is not specified');\n          }\n          baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n          var metrics = this.getBaseFontMetrics(baseFontName);\n          var fontNameWoStyle = baseFontName.split('-')[0];\n          var flags = (this.isSerifFont(fontNameWoStyle) ? _fonts.FontFlags.Serif : 0) | (metrics.monospace ? _fonts.FontFlags.FixedPitch : 0) | ((0, _standard_fonts.getSymbolsFonts)()[fontNameWoStyle] ? _fonts.FontFlags.Symbolic : _fonts.FontFlags.Nonsymbolic);\n          properties = {\n            type: type,\n            name: baseFontName,\n            widths: metrics.widths,\n            defaultWidth: metrics.defaultWidth,\n            flags: flags,\n            firstChar: 0,\n            lastChar: maxCharIndex\n          };\n          return this.extractDataStructures(dict, dict, properties).then(function (properties) {\n            properties.widths = _this11.buildCharCodeToWidth(metrics.widths, properties);\n            return new _fonts.Font(baseFontName, null, properties);\n          });\n        }\n      }\n      var firstChar = dict.get('FirstChar') || 0;\n      var lastChar = dict.get('LastChar') || maxCharIndex;\n      var fontName = descriptor.get('FontName');\n      var baseFont = dict.get('BaseFont');\n      if ((0, _util.isString)(fontName)) {\n        fontName = _primitives.Name.get(fontName);\n      }\n      if ((0, _util.isString)(baseFont)) {\n        baseFont = _primitives.Name.get(baseFont);\n      }\n      if (type !== 'Type3') {\n        var fontNameStr = fontName && fontName.name;\n        var baseFontStr = baseFont && baseFont.name;\n        if (fontNameStr !== baseFontStr) {\n          (0, _util.info)('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n          if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n            fontName = baseFont;\n          }\n        }\n      }\n      fontName = fontName || baseFont;\n      if (!(0, _primitives.isName)(fontName)) {\n        throw new _util.FormatError('invalid font name');\n      }\n      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n      if (fontFile) {\n        if (fontFile.dict) {\n          var subtype = fontFile.dict.get('Subtype');\n          if (subtype) {\n            subtype = subtype.name;\n          }\n          var length1 = fontFile.dict.get('Length1');\n          var length2 = fontFile.dict.get('Length2');\n          var length3 = fontFile.dict.get('Length3');\n        }\n      }\n      properties = {\n        type: type,\n        name: fontName.name,\n        subtype: subtype,\n        file: fontFile,\n        length1: length1,\n        length2: length2,\n        length3: length3,\n        loadedName: baseDict.loadedName,\n        composite: composite,\n        wideChars: composite,\n        fixedPitch: false,\n        fontMatrix: dict.getArray('FontMatrix') || _util.FONT_IDENTITY_MATRIX,\n        firstChar: firstChar || 0,\n        lastChar: lastChar || maxCharIndex,\n        bbox: descriptor.getArray('FontBBox'),\n        ascent: descriptor.get('Ascent'),\n        descent: descriptor.get('Descent'),\n        xHeight: descriptor.get('XHeight'),\n        capHeight: descriptor.get('CapHeight'),\n        flags: descriptor.get('Flags'),\n        italicAngle: descriptor.get('ItalicAngle'),\n        isType3Font: false\n      };\n      var cMapPromise;\n      if (composite) {\n        var cidEncoding = baseDict.get('Encoding');\n        if ((0, _primitives.isName)(cidEncoding)) {\n          properties.cidEncoding = cidEncoding.name;\n        }\n        cMapPromise = _cmap.CMapFactory.create({\n          encoding: cidEncoding,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cMap) {\n          properties.cMap = cMap;\n          properties.vertical = properties.cMap.vertical;\n        });\n      } else {\n        cMapPromise = Promise.resolve(undefined);\n      }\n      return cMapPromise.then(function () {\n        return _this11.extractDataStructures(dict, baseDict, properties);\n      }).then(function (properties) {\n        _this11.extractWidths(dict, descriptor, properties);\n        if (type === 'Type3') {\n          properties.isType3Font = true;\n        }\n        return new _fonts.Font(fontName.name, fontFile, properties);\n      });\n    }\n  };\n  return PartialEvaluator;\n}();\nvar TranslatedFont = function TranslatedFontClosure() {\n  function TranslatedFont(loadedName, font, dict) {\n    this.loadedName = loadedName;\n    this.font = font;\n    this.dict = dict;\n    this.type3Loaded = null;\n    this.sent = false;\n  }\n  TranslatedFont.prototype = {\n    send: function send(handler) {\n      if (this.sent) {\n        return;\n      }\n      var fontData = this.font.exportData();\n      handler.send('commonobj', [this.loadedName, 'Font', fontData]);\n      this.sent = true;\n    },\n    loadType3Data: function loadType3Data(evaluator, resources, parentOperatorList, task) {\n      if (!this.font.isType3Font) {\n        throw new Error('Must be a Type3 font.');\n      }\n      if (this.type3Loaded) {\n        return this.type3Loaded;\n      }\n      var type3Options = Object.create(evaluator.options);\n      type3Options.ignoreErrors = false;\n      var type3Evaluator = evaluator.clone(type3Options);\n      var translatedFont = this.font;\n      var loadCharProcsPromise = Promise.resolve();\n      var charProcs = this.dict.get('CharProcs');\n      var fontResources = this.dict.get('Resources') || resources;\n      var charProcKeys = charProcs.getKeys();\n      var charProcOperatorList = Object.create(null);\n\n      var _loop2 = function _loop2() {\n        var key = charProcKeys[i];\n        loadCharProcsPromise = loadCharProcsPromise.then(function () {\n          var glyphStream = charProcs.get(key);\n          var operatorList = new _operator_list.OperatorList();\n          return type3Evaluator.getOperatorList({\n            stream: glyphStream,\n            task: task,\n            resources: fontResources,\n            operatorList: operatorList\n          }).then(function () {\n            charProcOperatorList[key] = operatorList.getIR();\n            parentOperatorList.addDependencies(operatorList.dependencies);\n          }).catch(function (reason) {\n            (0, _util.warn)('Type3 font resource \"' + key + '\" is not available.');\n            var operatorList = new _operator_list.OperatorList();\n            charProcOperatorList[key] = operatorList.getIR();\n          });\n        });\n      };\n\n      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n        _loop2();\n      }\n      this.type3Loaded = loadCharProcsPromise.then(function () {\n        translatedFont.charProcOperatorList = charProcOperatorList;\n      });\n      return this.type3Loaded;\n    }\n  };\n  return TranslatedFont;\n}();\nvar StateManager = function StateManagerClosure() {\n  function StateManager(initialState) {\n    this.state = initialState;\n    this.stateStack = [];\n  }\n  StateManager.prototype = {\n    save: function save() {\n      var old = this.state;\n      this.stateStack.push(this.state);\n      this.state = old.clone();\n    },\n    restore: function restore() {\n      var prev = this.stateStack.pop();\n      if (prev) {\n        this.state = prev;\n      }\n    },\n    transform: function transform(args) {\n      this.state.ctm = _util.Util.transform(this.state.ctm, args);\n    }\n  };\n  return StateManager;\n}();\nvar TextState = function TextStateClosure() {\n  function TextState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.fontName = null;\n    this.fontSize = 0;\n    this.font = null;\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n    this.textMatrix = _util.IDENTITY_MATRIX.slice();\n    this.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.leading = 0;\n    this.textHScale = 1;\n    this.textRise = 0;\n  }\n  TextState.prototype = {\n    setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textLineMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textLineMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n      var font = this.font;\n      if (!font) {\n        return null;\n      }\n      var m = this.textLineMatrix;\n      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n        return null;\n      }\n      var txDiff = e - m[4],\n          tyDiff = f - m[5];\n      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n        return null;\n      }\n      var tx,\n          ty,\n          denominator = a * d - b * c;\n      if (font.vertical) {\n        tx = -tyDiff * c / denominator;\n        ty = tyDiff * a / denominator;\n      } else {\n        tx = txDiff * d / denominator;\n        ty = -txDiff * b / denominator;\n      }\n      return {\n        width: tx,\n        height: ty,\n        value: font.vertical ? ty : tx\n      };\n    },\n    calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n      var tsm = [this.fontSize * this.textHScale, 0, 0, this.fontSize, 0, this.textRise];\n      return _util.Util.transform(ctm, _util.Util.transform(this.textMatrix, tsm));\n    },\n    carriageReturn: function TextState_carriageReturn() {\n      this.translateTextLineMatrix(0, -this.leading);\n      this.textMatrix = this.textLineMatrix.slice();\n    },\n    clone: function TextState_clone() {\n      var clone = Object.create(this);\n      clone.textMatrix = this.textMatrix.slice();\n      clone.textLineMatrix = this.textLineMatrix.slice();\n      clone.fontMatrix = this.fontMatrix.slice();\n      return clone;\n    }\n  };\n  return TextState;\n}();\nvar EvalState = function EvalStateClosure() {\n  function EvalState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.font = null;\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\n    this.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n    this.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n  }\n  EvalState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    }\n  };\n  return EvalState;\n}();\nvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n  var getOPMap = (0, _util.getLookupTableFactory)(function (t) {\n    t['w'] = {\n      id: _util.OPS.setLineWidth,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['J'] = {\n      id: _util.OPS.setLineCap,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['j'] = {\n      id: _util.OPS.setLineJoin,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['M'] = {\n      id: _util.OPS.setMiterLimit,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['d'] = {\n      id: _util.OPS.setDash,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['ri'] = {\n      id: _util.OPS.setRenderingIntent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['i'] = {\n      id: _util.OPS.setFlatness,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['gs'] = {\n      id: _util.OPS.setGState,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['q'] = {\n      id: _util.OPS.save,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Q'] = {\n      id: _util.OPS.restore,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['cm'] = {\n      id: _util.OPS.transform,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['m'] = {\n      id: _util.OPS.moveTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['l'] = {\n      id: _util.OPS.lineTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['c'] = {\n      id: _util.OPS.curveTo,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['v'] = {\n      id: _util.OPS.curveTo2,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['y'] = {\n      id: _util.OPS.curveTo3,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['h'] = {\n      id: _util.OPS.closePath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['re'] = {\n      id: _util.OPS.rectangle,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['S'] = {\n      id: _util.OPS.stroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['s'] = {\n      id: _util.OPS.closeStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['F'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f*'] = {\n      id: _util.OPS.eoFill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B'] = {\n      id: _util.OPS.fillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B*'] = {\n      id: _util.OPS.eoFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b'] = {\n      id: _util.OPS.closeFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b*'] = {\n      id: _util.OPS.closeEOFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['n'] = {\n      id: _util.OPS.endPath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W'] = {\n      id: _util.OPS.clip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W*'] = {\n      id: _util.OPS.eoClip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BT'] = {\n      id: _util.OPS.beginText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ET'] = {\n      id: _util.OPS.endText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tc'] = {\n      id: _util.OPS.setCharSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tw'] = {\n      id: _util.OPS.setWordSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tz'] = {\n      id: _util.OPS.setHScale,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TL'] = {\n      id: _util.OPS.setLeading,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tf'] = {\n      id: _util.OPS.setFont,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tr'] = {\n      id: _util.OPS.setTextRenderingMode,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Ts'] = {\n      id: _util.OPS.setTextRise,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Td'] = {\n      id: _util.OPS.moveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['TD'] = {\n      id: _util.OPS.setLeadingMoveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tm'] = {\n      id: _util.OPS.setTextMatrix,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['T*'] = {\n      id: _util.OPS.nextLine,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tj'] = {\n      id: _util.OPS.showText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TJ'] = {\n      id: _util.OPS.showSpacedText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\\''] = {\n      id: _util.OPS.nextLineShowText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\"'] = {\n      id: _util.OPS.nextLineSetSpacingShowText,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['d0'] = {\n      id: _util.OPS.setCharWidth,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['d1'] = {\n      id: _util.OPS.setCharWidthAndBounds,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['CS'] = {\n      id: _util.OPS.setStrokeColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['cs'] = {\n      id: _util.OPS.setFillColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['SC'] = {\n      id: _util.OPS.setStrokeColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['SCN'] = {\n      id: _util.OPS.setStrokeColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['sc'] = {\n      id: _util.OPS.setFillColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['scn'] = {\n      id: _util.OPS.setFillColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['G'] = {\n      id: _util.OPS.setStrokeGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['g'] = {\n      id: _util.OPS.setFillGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['RG'] = {\n      id: _util.OPS.setStrokeRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['rg'] = {\n      id: _util.OPS.setFillRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['K'] = {\n      id: _util.OPS.setStrokeCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['k'] = {\n      id: _util.OPS.setFillCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['sh'] = {\n      id: _util.OPS.shadingFill,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BI'] = {\n      id: _util.OPS.beginInlineImage,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ID'] = {\n      id: _util.OPS.beginImageData,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EI'] = {\n      id: _util.OPS.endInlineImage,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Do'] = {\n      id: _util.OPS.paintXObject,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['MP'] = {\n      id: _util.OPS.markPoint,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['DP'] = {\n      id: _util.OPS.markPointProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['BMC'] = {\n      id: _util.OPS.beginMarkedContent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BDC'] = {\n      id: _util.OPS.beginMarkedContentProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['EMC'] = {\n      id: _util.OPS.endMarkedContent,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BX'] = {\n      id: _util.OPS.beginCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EX'] = {\n      id: _util.OPS.endCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BM'] = null;\n    t['BD'] = null;\n    t['true'] = null;\n    t['fa'] = null;\n    t['fal'] = null;\n    t['fals'] = null;\n    t['false'] = null;\n    t['nu'] = null;\n    t['nul'] = null;\n    t['null'] = null;\n  });\n  function EvaluatorPreprocessor(stream, xref, stateManager) {\n    this.opMap = getOPMap();\n    this.parser = new _parser.Parser(new _parser.Lexer(stream, this.opMap), false, xref);\n    this.stateManager = stateManager;\n    this.nonProcessedArgs = [];\n  }\n  EvaluatorPreprocessor.prototype = {\n    get savedStatesDepth() {\n      return this.stateManager.stateStack.length;\n    },\n    read: function EvaluatorPreprocessor_read(operation) {\n      var args = operation.args;\n      while (true) {\n        var obj = this.parser.getObj();\n        if ((0, _primitives.isCmd)(obj)) {\n          var cmd = obj.cmd;\n          var opSpec = this.opMap[cmd];\n          if (!opSpec) {\n            (0, _util.warn)('Unknown command \"' + cmd + '\"');\n            continue;\n          }\n          var fn = opSpec.id;\n          var numArgs = opSpec.numArgs;\n          var argsLength = args !== null ? args.length : 0;\n          if (!opSpec.variableArgs) {\n            if (argsLength !== numArgs) {\n              var nonProcessedArgs = this.nonProcessedArgs;\n              while (argsLength > numArgs) {\n                nonProcessedArgs.push(args.shift());\n                argsLength--;\n              }\n              while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n                if (args === null) {\n                  args = [];\n                }\n                args.unshift(nonProcessedArgs.pop());\n                argsLength++;\n              }\n            }\n            if (argsLength < numArgs) {\n              (0, _util.warn)('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n              if (args !== null) {\n                args.length = 0;\n              }\n              continue;\n            }\n          } else if (argsLength > numArgs) {\n            (0, _util.info)('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n          }\n          this.preprocessCommand(fn, args);\n          operation.fn = fn;\n          operation.args = args;\n          return true;\n        }\n        if ((0, _primitives.isEOF)(obj)) {\n          return false;\n        }\n        if (obj !== null) {\n          if (args === null) {\n            args = [];\n          }\n          args.push(obj);\n          if (args.length > 33) {\n            throw new _util.FormatError('Too many arguments');\n          }\n        }\n      }\n    },\n    preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n      switch (fn | 0) {\n        case _util.OPS.save:\n          this.stateManager.save();\n          break;\n        case _util.OPS.restore:\n          this.stateManager.restore();\n          break;\n        case _util.OPS.transform:\n          this.stateManager.transform(args);\n          break;\n      }\n    }\n  };\n  return EvaluatorPreprocessor;\n}();\nexports.PartialEvaluator = PartialEvaluator;\n\n/***/ }),\n/* 141 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CMapFactory = exports.IdentityCMap = exports.CMap = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _parser = __w_pdfjs_require__(27);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar BUILT_IN_CMAPS = ['Adobe-GB1-UCS2', 'Adobe-CNS1-UCS2', 'Adobe-Japan1-UCS2', 'Adobe-Korea1-UCS2', '78-EUC-H', '78-EUC-V', '78-H', '78-RKSJ-H', '78-RKSJ-V', '78-V', '78ms-RKSJ-H', '78ms-RKSJ-V', '83pv-RKSJ-H', '90ms-RKSJ-H', '90ms-RKSJ-V', '90msp-RKSJ-H', '90msp-RKSJ-V', '90pv-RKSJ-H', '90pv-RKSJ-V', 'Add-H', 'Add-RKSJ-H', 'Add-RKSJ-V', 'Add-V', 'Adobe-CNS1-0', 'Adobe-CNS1-1', 'Adobe-CNS1-2', 'Adobe-CNS1-3', 'Adobe-CNS1-4', 'Adobe-CNS1-5', 'Adobe-CNS1-6', 'Adobe-GB1-0', 'Adobe-GB1-1', 'Adobe-GB1-2', 'Adobe-GB1-3', 'Adobe-GB1-4', 'Adobe-GB1-5', 'Adobe-Japan1-0', 'Adobe-Japan1-1', 'Adobe-Japan1-2', 'Adobe-Japan1-3', 'Adobe-Japan1-4', 'Adobe-Japan1-5', 'Adobe-Japan1-6', 'Adobe-Korea1-0', 'Adobe-Korea1-1', 'Adobe-Korea1-2', 'B5-H', 'B5-V', 'B5pc-H', 'B5pc-V', 'CNS-EUC-H', 'CNS-EUC-V', 'CNS1-H', 'CNS1-V', 'CNS2-H', 'CNS2-V', 'ETHK-B5-H', 'ETHK-B5-V', 'ETen-B5-H', 'ETen-B5-V', 'ETenms-B5-H', 'ETenms-B5-V', 'EUC-H', 'EUC-V', 'Ext-H', 'Ext-RKSJ-H', 'Ext-RKSJ-V', 'Ext-V', 'GB-EUC-H', 'GB-EUC-V', 'GB-H', 'GB-V', 'GBK-EUC-H', 'GBK-EUC-V', 'GBK2K-H', 'GBK2K-V', 'GBKp-EUC-H', 'GBKp-EUC-V', 'GBT-EUC-H', 'GBT-EUC-V', 'GBT-H', 'GBT-V', 'GBTpc-EUC-H', 'GBTpc-EUC-V', 'GBpc-EUC-H', 'GBpc-EUC-V', 'H', 'HKdla-B5-H', 'HKdla-B5-V', 'HKdlb-B5-H', 'HKdlb-B5-V', 'HKgccs-B5-H', 'HKgccs-B5-V', 'HKm314-B5-H', 'HKm314-B5-V', 'HKm471-B5-H', 'HKm471-B5-V', 'HKscs-B5-H', 'HKscs-B5-V', 'Hankaku', 'Hiragana', 'KSC-EUC-H', 'KSC-EUC-V', 'KSC-H', 'KSC-Johab-H', 'KSC-Johab-V', 'KSC-V', 'KSCms-UHC-H', 'KSCms-UHC-HW-H', 'KSCms-UHC-HW-V', 'KSCms-UHC-V', 'KSCpc-EUC-H', 'KSCpc-EUC-V', 'Katakana', 'NWP-H', 'NWP-V', 'RKSJ-H', 'RKSJ-V', 'Roman', 'UniCNS-UCS2-H', 'UniCNS-UCS2-V', 'UniCNS-UTF16-H', 'UniCNS-UTF16-V', 'UniCNS-UTF32-H', 'UniCNS-UTF32-V', 'UniCNS-UTF8-H', 'UniCNS-UTF8-V', 'UniGB-UCS2-H', 'UniGB-UCS2-V', 'UniGB-UTF16-H', 'UniGB-UTF16-V', 'UniGB-UTF32-H', 'UniGB-UTF32-V', 'UniGB-UTF8-H', 'UniGB-UTF8-V', 'UniJIS-UCS2-H', 'UniJIS-UCS2-HW-H', 'UniJIS-UCS2-HW-V', 'UniJIS-UCS2-V', 'UniJIS-UTF16-H', 'UniJIS-UTF16-V', 'UniJIS-UTF32-H', 'UniJIS-UTF32-V', 'UniJIS-UTF8-H', 'UniJIS-UTF8-V', 'UniJIS2004-UTF16-H', 'UniJIS2004-UTF16-V', 'UniJIS2004-UTF32-H', 'UniJIS2004-UTF32-V', 'UniJIS2004-UTF8-H', 'UniJIS2004-UTF8-V', 'UniJISPro-UCS2-HW-V', 'UniJISPro-UCS2-V', 'UniJISPro-UTF8-V', 'UniJISX0213-UTF32-H', 'UniJISX0213-UTF32-V', 'UniJISX02132004-UTF32-H', 'UniJISX02132004-UTF32-V', 'UniKS-UCS2-H', 'UniKS-UCS2-V', 'UniKS-UTF16-H', 'UniKS-UTF16-V', 'UniKS-UTF32-H', 'UniKS-UTF32-V', 'UniKS-UTF8-H', 'UniKS-UTF8-V', 'V', 'WP-Symbol'];\nvar CMap = function CMapClosure() {\n  function CMap(builtInCMap) {\n    this.codespaceRanges = [[], [], [], []];\n    this.numCodespaceRanges = 0;\n    this._map = [];\n    this.name = '';\n    this.vertical = false;\n    this.useCMap = null;\n    this.builtInCMap = builtInCMap;\n  }\n  CMap.prototype = {\n    addCodespaceRange: function addCodespaceRange(n, low, high) {\n      this.codespaceRanges[n - 1].push(low, high);\n      this.numCodespaceRanges++;\n    },\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      while (low <= high) {\n        this._map[low++] = dstLow++;\n      }\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      var lastByte = dstLow.length - 1;\n      while (low <= high) {\n        this._map[low++] = dstLow;\n        dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n      }\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      var i = 0,\n          ii = array.length;\n      while (low <= high && i < ii) {\n        this._map[low] = array[i++];\n        ++low;\n      }\n    },\n    mapOne: function mapOne(src, dst) {\n      this._map[src] = dst;\n    },\n    lookup: function lookup(code) {\n      return this._map[code];\n    },\n    contains: function contains(code) {\n      return this._map[code] !== undefined;\n    },\n    forEach: function forEach(callback) {\n      var map = this._map;\n      var length = map.length;\n      if (length <= 0x10000) {\n        for (var i = 0; i < length; i++) {\n          if (map[i] !== undefined) {\n            callback(i, map[i]);\n          }\n        }\n      } else {\n        for (var _i in map) {\n          callback(_i, map[_i]);\n        }\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    getMap: function getMap() {\n      return this._map;\n    },\n    readCharCode: function readCharCode(str, offset, out) {\n      var c = 0;\n      var codespaceRanges = this.codespaceRanges;\n      var codespaceRangesLen = this.codespaceRanges.length;\n      for (var n = 0; n < codespaceRangesLen; n++) {\n        c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n        var codespaceRange = codespaceRanges[n];\n        for (var k = 0, kk = codespaceRange.length; k < kk;) {\n          var low = codespaceRange[k++];\n          var high = codespaceRange[k++];\n          if (c >= low && c <= high) {\n            out.charcode = c;\n            out.length = n + 1;\n            return;\n          }\n        }\n      }\n      out.charcode = 0;\n      out.length = 1;\n    },\n\n    get length() {\n      return this._map.length;\n    },\n    get isIdentityCMap() {\n      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n        return false;\n      }\n      if (this._map.length !== 0x10000) {\n        return false;\n      }\n      for (var i = 0; i < 0x10000; i++) {\n        if (this._map[i] !== i) {\n          return false;\n        }\n      }\n      return true;\n    }\n  };\n  return CMap;\n}();\nvar IdentityCMap = function IdentityCMapClosure() {\n  function IdentityCMap(vertical, n) {\n    CMap.call(this);\n    this.vertical = vertical;\n    this.addCodespaceRange(n, 0, 0xffff);\n  }\n  _util.Util.inherit(IdentityCMap, CMap, {});\n  IdentityCMap.prototype = {\n    addCodespaceRange: CMap.prototype.addCodespaceRange,\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapCidRange');\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapBfRange');\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      (0, _util.unreachable)('should not call mapBfRangeToArray');\n    },\n    mapOne: function mapOne(src, dst) {\n      (0, _util.unreachable)('should not call mapCidOne');\n    },\n    lookup: function lookup(code) {\n      return Number.isInteger(code) && code <= 0xffff ? code : undefined;\n    },\n    contains: function contains(code) {\n      return Number.isInteger(code) && code <= 0xffff;\n    },\n    forEach: function forEach(callback) {\n      for (var i = 0; i <= 0xffff; i++) {\n        callback(i, i);\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      return Number.isInteger(value) && value <= 0xffff ? value : -1;\n    },\n    getMap: function getMap() {\n      var map = new Array(0x10000);\n      for (var i = 0; i <= 0xffff; i++) {\n        map[i] = i;\n      }\n      return map;\n    },\n\n    readCharCode: CMap.prototype.readCharCode,\n    get length() {\n      return 0x10000;\n    },\n    get isIdentityCMap() {\n      (0, _util.unreachable)('should not access .isIdentityCMap');\n    }\n  };\n  return IdentityCMap;\n}();\nvar BinaryCMapReader = function BinaryCMapReaderClosure() {\n  function hexToInt(a, size) {\n    var n = 0;\n    for (var i = 0; i <= size; i++) {\n      n = n << 8 | a[i];\n    }\n    return n >>> 0;\n  }\n  function hexToStr(a, size) {\n    if (size === 1) {\n      return String.fromCharCode(a[0], a[1]);\n    }\n    if (size === 3) {\n      return String.fromCharCode(a[0], a[1], a[2], a[3]);\n    }\n    return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n  }\n  function addHex(a, b, size) {\n    var c = 0;\n    for (var i = size; i >= 0; i--) {\n      c += a[i] + b[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  function incHex(a, size) {\n    var c = 1;\n    for (var i = size; i >= 0 && c > 0; i--) {\n      c += a[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  var MAX_NUM_SIZE = 16;\n  var MAX_ENCODED_NUM_SIZE = 19;\n  function BinaryCMapStream(data) {\n    this.buffer = data;\n    this.pos = 0;\n    this.end = data.length;\n    this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n  }\n  BinaryCMapStream.prototype = {\n    readByte: function readByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.buffer[this.pos++];\n    },\n    readNumber: function readNumber() {\n      var n = 0;\n      var last;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        n = n << 7 | b & 0x7F;\n      } while (!last);\n      return n;\n    },\n    readSigned: function readSigned() {\n      var n = this.readNumber();\n      return n & 1 ? ~(n >>> 1) : n >>> 1;\n    },\n    readHex: function readHex(num, size) {\n      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n      this.pos += size + 1;\n    },\n    readHexNumber: function readHexNumber(num, size) {\n      var last;\n      var stack = this.tmpBuf,\n          sp = 0;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        stack[sp++] = b & 0x7F;\n      } while (!last);\n      var i = size,\n          buffer = 0,\n          bufferSize = 0;\n      while (i >= 0) {\n        while (bufferSize < 8 && stack.length > 0) {\n          buffer = stack[--sp] << bufferSize | buffer;\n          bufferSize += 7;\n        }\n        num[i] = buffer & 255;\n        i--;\n        buffer >>= 8;\n        bufferSize -= 8;\n      }\n    },\n    readHexSigned: function readHexSigned(num, size) {\n      this.readHexNumber(num, size);\n      var sign = num[size] & 1 ? 255 : 0;\n      var c = 0;\n      for (var i = 0; i <= size; i++) {\n        c = (c & 1) << 8 | num[i];\n        num[i] = c >> 1 ^ sign;\n      }\n    },\n    readString: function readString() {\n      var len = this.readNumber();\n      var s = '';\n      for (var i = 0; i < len; i++) {\n        s += String.fromCharCode(this.readNumber());\n      }\n      return s;\n    }\n  };\n  function processBinaryCMap(data, cMap, extend) {\n    return new Promise(function (resolve, reject) {\n      var stream = new BinaryCMapStream(data);\n      var header = stream.readByte();\n      cMap.vertical = !!(header & 1);\n      var useCMap = null;\n      var start = new Uint8Array(MAX_NUM_SIZE);\n      var end = new Uint8Array(MAX_NUM_SIZE);\n      var char = new Uint8Array(MAX_NUM_SIZE);\n      var charCode = new Uint8Array(MAX_NUM_SIZE);\n      var tmp = new Uint8Array(MAX_NUM_SIZE);\n      var code;\n      var b;\n      while ((b = stream.readByte()) >= 0) {\n        var type = b >> 5;\n        if (type === 7) {\n          switch (b & 0x1F) {\n            case 0:\n              stream.readString();\n              break;\n            case 1:\n              useCMap = stream.readString();\n              break;\n          }\n          continue;\n        }\n        var sequence = !!(b & 0x10);\n        var dataSize = b & 15;\n        if (dataSize + 1 > MAX_NUM_SIZE) {\n          throw new Error('processBinaryCMap: Invalid dataSize.');\n        }\n        var ucs2DataSize = 1;\n        var subitemsCount = stream.readNumber();\n        var i;\n        switch (type) {\n          case 0:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            }\n            break;\n          case 1:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            stream.readNumber();\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              stream.readNumber();\n            }\n            break;\n          case 2:\n            stream.readHex(char, dataSize);\n            code = stream.readNumber();\n            cMap.mapOne(hexToInt(char, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, dataSize);\n                addHex(char, tmp, dataSize);\n              }\n              code = stream.readSigned() + (code + 1);\n              cMap.mapOne(hexToInt(char, dataSize), code);\n            }\n            break;\n          case 3:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            code = stream.readNumber();\n            cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, dataSize);\n                addHex(start, end, dataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              code = stream.readNumber();\n              cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            }\n            break;\n          case 4:\n            stream.readHex(char, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, ucs2DataSize);\n                addHex(char, tmp, ucs2DataSize);\n              }\n              incHex(charCode, dataSize);\n              stream.readHexSigned(tmp, dataSize);\n              addHex(charCode, tmp, dataSize);\n              cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          case 5:\n            stream.readHex(start, ucs2DataSize);\n            stream.readHexNumber(end, ucs2DataSize);\n            addHex(end, start, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, ucs2DataSize);\n                addHex(start, end, ucs2DataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, ucs2DataSize);\n              addHex(end, start, ucs2DataSize);\n              stream.readHex(charCode, dataSize);\n              cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          default:\n            reject(new Error('processBinaryCMap: Unknown type: ' + type));\n            return;\n        }\n      }\n      if (useCMap) {\n        resolve(extend(useCMap));\n        return;\n      }\n      resolve(cMap);\n    });\n  }\n  function BinaryCMapReader() {}\n  BinaryCMapReader.prototype = { process: processBinaryCMap };\n  return BinaryCMapReader;\n}();\nvar CMapFactory = function CMapFactoryClosure() {\n  function strToInt(str) {\n    var a = 0;\n    for (var i = 0; i < str.length; i++) {\n      a = a << 8 | str.charCodeAt(i);\n    }\n    return a >>> 0;\n  }\n  function expectString(obj) {\n    if (!(0, _util.isString)(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected string.');\n    }\n  }\n  function expectInt(obj) {\n    if (!Number.isInteger(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected int.');\n    }\n  }\n  function parseBfChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseBfRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      if (Number.isInteger(obj) || (0, _util.isString)(obj)) {\n        var dstLow = Number.isInteger(obj) ? String.fromCharCode(obj) : obj;\n        cMap.mapBfRange(low, high, dstLow);\n      } else if ((0, _primitives.isCmd)(obj, '[')) {\n        obj = lexer.getObj();\n        var array = [];\n        while (!(0, _primitives.isCmd)(obj, ']') && !(0, _primitives.isEOF)(obj)) {\n          array.push(obj);\n          obj = lexer.getObj();\n        }\n        cMap.mapBfRangeToArray(low, high, array);\n      } else {\n        break;\n      }\n    }\n    throw new _util.FormatError('Invalid bf range.');\n  }\n  function parseCidChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseCidRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dstLow = obj;\n      cMap.mapCidRange(low, high, dstLow);\n    }\n  }\n  function parseCodespaceRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcodespacerange')) {\n        return;\n      }\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var high = strToInt(obj);\n      cMap.addCodespaceRange(obj.length, low, high);\n    }\n    throw new _util.FormatError('Invalid codespace range.');\n  }\n  function parseWMode(cMap, lexer) {\n    var obj = lexer.getObj();\n    if (Number.isInteger(obj)) {\n      cMap.vertical = !!obj;\n    }\n  }\n  function parseCMapName(cMap, lexer) {\n    var obj = lexer.getObj();\n    if ((0, _primitives.isName)(obj) && (0, _util.isString)(obj.name)) {\n      cMap.name = obj.name;\n    }\n  }\n  function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\n    var previous;\n    var embeddedUseCMap;\n    objLoop: while (true) {\n      try {\n        var obj = lexer.getObj();\n        if ((0, _primitives.isEOF)(obj)) {\n          break;\n        } else if ((0, _primitives.isName)(obj)) {\n          if (obj.name === 'WMode') {\n            parseWMode(cMap, lexer);\n          } else if (obj.name === 'CMapName') {\n            parseCMapName(cMap, lexer);\n          }\n          previous = obj;\n        } else if ((0, _primitives.isCmd)(obj)) {\n          switch (obj.cmd) {\n            case 'endcmap':\n              break objLoop;\n            case 'usecmap':\n              if ((0, _primitives.isName)(previous)) {\n                embeddedUseCMap = previous.name;\n              }\n              break;\n            case 'begincodespacerange':\n              parseCodespaceRange(cMap, lexer);\n              break;\n            case 'beginbfchar':\n              parseBfChar(cMap, lexer);\n              break;\n            case 'begincidchar':\n              parseCidChar(cMap, lexer);\n              break;\n            case 'beginbfrange':\n              parseBfRange(cMap, lexer);\n              break;\n            case 'begincidrange':\n              parseCidRange(cMap, lexer);\n              break;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid cMap data: ' + ex);\n        continue;\n      }\n    }\n    if (!useCMap && embeddedUseCMap) {\n      useCMap = embeddedUseCMap;\n    }\n    if (useCMap) {\n      return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n    }\n    return Promise.resolve(cMap);\n  }\n  function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\n    return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\n      cMap.useCMap = newCMap;\n      if (cMap.numCodespaceRanges === 0) {\n        var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n        for (var i = 0; i < useCodespaceRanges.length; i++) {\n          cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n        }\n        cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n      }\n      cMap.useCMap.forEach(function (key, value) {\n        if (!cMap.contains(key)) {\n          cMap.mapOne(key, cMap.useCMap.lookup(key));\n        }\n      });\n      return cMap;\n    });\n  }\n  function createBuiltInCMap(name, fetchBuiltInCMap) {\n    if (name === 'Identity-H') {\n      return Promise.resolve(new IdentityCMap(false, 2));\n    } else if (name === 'Identity-V') {\n      return Promise.resolve(new IdentityCMap(true, 2));\n    }\n    if (!BUILT_IN_CMAPS.includes(name)) {\n      return Promise.reject(new Error('Unknown CMap name: ' + name));\n    }\n    if (!fetchBuiltInCMap) {\n      return Promise.reject(new Error('Built-in CMap parameters are not provided.'));\n    }\n    return fetchBuiltInCMap(name).then(function (data) {\n      var cMapData = data.cMapData,\n          compressionType = data.compressionType;\n      var cMap = new CMap(true);\n      if (compressionType === _util.CMapCompressionType.BINARY) {\n        return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\n          return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n        });\n      }\n      if (compressionType === _util.CMapCompressionType.NONE) {\n        var lexer = new _parser.Lexer(new _stream.Stream(cMapData));\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\n      }\n      return Promise.reject(new Error('TODO: Only BINARY/NONE CMap compression is currently supported.'));\n    });\n  }\n  return {\n    create: function create(params) {\n      var encoding = params.encoding;\n      var fetchBuiltInCMap = params.fetchBuiltInCMap;\n      var useCMap = params.useCMap;\n      if ((0, _primitives.isName)(encoding)) {\n        return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\n      } else if ((0, _primitives.isStream)(encoding)) {\n        var cMap = new CMap();\n        var lexer = new _parser.Lexer(encoding);\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\n          if (parsedCMap.isIdentityCMap) {\n            return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\n          }\n          return parsedCMap;\n        });\n      }\n      return Promise.reject(new Error('Encoding required.'));\n    }\n  };\n}();\nexports.CMap = CMap;\nexports.IdentityCMap = IdentityCMap;\nexports.CMapFactory = CMapFactory;\n\n/***/ }),\n/* 142 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFontType = exports.ProblematicCharRanges = exports.IdentityToUnicodeMap = exports.ToUnicodeMap = exports.FontFlags = exports.Font = exports.ErrorFont = exports.PRIVATE_USE_OFFSET_END = exports.PRIVATE_USE_OFFSET_START = exports.SEAC_ANALYSIS_ENABLED = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cff_parser = __w_pdfjs_require__(69);\n\nvar _glyphlist = __w_pdfjs_require__(43);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _standard_fonts = __w_pdfjs_require__(70);\n\nvar _unicode = __w_pdfjs_require__(71);\n\nvar _font_renderer = __w_pdfjs_require__(144);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _type1_parser = __w_pdfjs_require__(145);\n\nvar PRIVATE_USE_OFFSET_START = 0xE000;\nvar PRIVATE_USE_OFFSET_END = 0xF8FF;\nvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\nvar PDF_GLYPH_SPACE_UNITS = 1000;\nvar SEAC_ANALYSIS_ENABLED = false;\nvar FontFlags = {\n  FixedPitch: 1,\n  Serif: 2,\n  Symbolic: 4,\n  Script: 8,\n  Nonsymbolic: 32,\n  Italic: 64,\n  AllCap: 65536,\n  SmallCap: 131072,\n  ForceBold: 262144\n};\nvar MacStandardGlyphOrdering = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\nfunction adjustWidths(properties) {\n  if (!properties.fontMatrix) {\n    return;\n  }\n  if (properties.fontMatrix[0] === _util.FONT_IDENTITY_MATRIX[0]) {\n    return;\n  }\n  var scale = 0.001 / properties.fontMatrix[0];\n  var glyphsWidths = properties.widths;\n  for (var glyph in glyphsWidths) {\n    glyphsWidths[glyph] *= scale;\n  }\n  properties.defaultWidth *= scale;\n}\nfunction adjustToUnicode(properties, builtInEncoding) {\n  if (properties.hasIncludedToUnicodeMap) {\n    return;\n  }\n  if (properties.hasEncoding) {\n    return;\n  }\n  if (builtInEncoding === properties.defaultEncoding) {\n    return;\n  }\n  if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n    return;\n  }\n  var toUnicode = [],\n      glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n  for (var charCode in builtInEncoding) {\n    var glyphName = builtInEncoding[charCode];\n    var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n    if (unicode !== -1) {\n      toUnicode[charCode] = String.fromCharCode(unicode);\n    }\n  }\n  properties.toUnicode.amend(toUnicode);\n}\nfunction getFontType(type, subtype) {\n  switch (type) {\n    case 'Type1':\n      return subtype === 'Type1C' ? _util.FontType.TYPE1C : _util.FontType.TYPE1;\n    case 'CIDFontType0':\n      return subtype === 'CIDFontType0C' ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0;\n    case 'OpenType':\n      return _util.FontType.OPENTYPE;\n    case 'TrueType':\n      return _util.FontType.TRUETYPE;\n    case 'CIDFontType2':\n      return _util.FontType.CIDFONTTYPE2;\n    case 'MMType1':\n      return _util.FontType.MMTYPE1;\n    case 'Type0':\n      return _util.FontType.TYPE0;\n    default:\n      return _util.FontType.UNKNOWN;\n  }\n}\nfunction recoverGlyphName(name, glyphsUnicodeMap) {\n  if (glyphsUnicodeMap[name] !== undefined) {\n    return name;\n  }\n  var unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap);\n  if (unicode !== -1) {\n    for (var key in glyphsUnicodeMap) {\n      if (glyphsUnicodeMap[key] === unicode) {\n        return key;\n      }\n    }\n  }\n  (0, _util.info)('Unable to recover a standard glyph name for: ' + name);\n  return name;\n}\nvar Glyph = function GlyphClosure() {\n  function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    this.fontChar = fontChar;\n    this.unicode = unicode;\n    this.accent = accent;\n    this.width = width;\n    this.vmetric = vmetric;\n    this.operatorListId = operatorListId;\n    this.isSpace = isSpace;\n    this.isInFont = isInFont;\n  }\n  Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n  };\n  return Glyph;\n}();\nvar ToUnicodeMap = function ToUnicodeMapClosure() {\n  function ToUnicodeMap() {\n    var cmap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    this._map = cmap;\n  }\n  ToUnicodeMap.prototype = {\n    get length() {\n      return this._map.length;\n    },\n    forEach: function forEach(callback) {\n      for (var charCode in this._map) {\n        callback(charCode, this._map[charCode].charCodeAt(0));\n      }\n    },\n    has: function has(i) {\n      return this._map[i] !== undefined;\n    },\n    get: function get(i) {\n      return this._map[i];\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    amend: function amend(map) {\n      for (var charCode in map) {\n        this._map[charCode] = map[charCode];\n      }\n    }\n  };\n  return ToUnicodeMap;\n}();\nvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n  function IdentityToUnicodeMap(firstChar, lastChar) {\n    this.firstChar = firstChar;\n    this.lastChar = lastChar;\n  }\n  IdentityToUnicodeMap.prototype = {\n    get length() {\n      return this.lastChar + 1 - this.firstChar;\n    },\n    forEach: function forEach(callback) {\n      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n        callback(i, i);\n      }\n    },\n    has: function has(i) {\n      return this.firstChar <= i && i <= this.lastChar;\n    },\n    get: function get(i) {\n      if (this.firstChar <= i && i <= this.lastChar) {\n        return String.fromCharCode(i);\n      }\n      return undefined;\n    },\n    charCodeOf: function charCodeOf(v) {\n      return Number.isInteger(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n    },\n    amend: function amend(map) {\n      (0, _util.unreachable)('Should not call amend()');\n    }\n  };\n  return IdentityToUnicodeMap;\n}();\nvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n  function writeInt16(dest, offset, num) {\n    dest[offset] = num >> 8 & 0xFF;\n    dest[offset + 1] = num & 0xFF;\n  }\n  function writeInt32(dest, offset, num) {\n    dest[offset] = num >> 24 & 0xFF;\n    dest[offset + 1] = num >> 16 & 0xFF;\n    dest[offset + 2] = num >> 8 & 0xFF;\n    dest[offset + 3] = num & 0xFF;\n  }\n  function writeData(dest, offset, data) {\n    var i, ii;\n    if (data instanceof Uint8Array) {\n      dest.set(data, offset);\n    } else if (typeof data === 'string') {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data.charCodeAt(i) & 0xFF;\n      }\n    } else {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data[i] & 0xFF;\n      }\n    }\n  }\n  function OpenTypeFileBuilder(sfnt) {\n    this.sfnt = sfnt;\n    this.tables = Object.create(null);\n  }\n  OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n    var maxPower2 = 1,\n        log2 = 0;\n    while ((maxPower2 ^ entriesCount) > maxPower2) {\n      maxPower2 <<= 1;\n      log2++;\n    }\n    var searchRange = maxPower2 * entrySize;\n    return {\n      range: searchRange,\n      entry: log2,\n      rangeShift: entrySize * entriesCount - searchRange\n    };\n  };\n  var OTF_HEADER_SIZE = 12;\n  var OTF_TABLE_ENTRY_SIZE = 16;\n  OpenTypeFileBuilder.prototype = {\n    toArray: function OpenTypeFileBuilder_toArray() {\n      var sfnt = this.sfnt;\n      var tables = this.tables;\n      var tablesNames = Object.keys(tables);\n      tablesNames.sort();\n      var numTables = tablesNames.length;\n      var i, j, jj, table, tableName;\n      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n      var tableOffsets = [offset];\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        var paddedLength = (table.length + 3 & ~3) >>> 0;\n        offset += paddedLength;\n        tableOffsets.push(offset);\n      }\n      var file = new Uint8Array(offset);\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        writeData(file, tableOffsets[i], table);\n      }\n      if (sfnt === 'true') {\n        sfnt = (0, _util.string32)(0x00010000);\n      }\n      file[0] = sfnt.charCodeAt(0) & 0xFF;\n      file[1] = sfnt.charCodeAt(1) & 0xFF;\n      file[2] = sfnt.charCodeAt(2) & 0xFF;\n      file[3] = sfnt.charCodeAt(3) & 0xFF;\n      writeInt16(file, 4, numTables);\n      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n      writeInt16(file, 6, searchParams.range);\n      writeInt16(file, 8, searchParams.entry);\n      writeInt16(file, 10, searchParams.rangeShift);\n      offset = OTF_HEADER_SIZE;\n      for (i = 0; i < numTables; i++) {\n        tableName = tablesNames[i];\n        file[offset] = tableName.charCodeAt(0) & 0xFF;\n        file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n        file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n        file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n        var checksum = 0;\n        for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n          var quad = (0, _util.readUint32)(file, j);\n          checksum = checksum + quad >>> 0;\n        }\n        writeInt32(file, offset + 4, checksum);\n        writeInt32(file, offset + 8, tableOffsets[i]);\n        writeInt32(file, offset + 12, tables[tableName].length);\n        offset += OTF_TABLE_ENTRY_SIZE;\n      }\n      return file;\n    },\n    addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n      if (tag in this.tables) {\n        throw new Error('Table ' + tag + ' already exists');\n      }\n      this.tables[tag] = data;\n    }\n  };\n  return OpenTypeFileBuilder;\n}();\nvar ProblematicCharRanges = new Int32Array([0x0000, 0x0020, 0x007F, 0x00A1, 0x00AD, 0x00AE, 0x0600, 0x0780, 0x08A0, 0x10A0, 0x1780, 0x1800, 0x1C00, 0x1C50, 0x2000, 0x2010, 0x2011, 0x2012, 0x2028, 0x2030, 0x205F, 0x2070, 0x25CC, 0x25CD, 0x3000, 0x3001, 0x3164, 0x3165, 0xAA60, 0xAA80, 0xD800, 0xE000, 0xFFF0, 0x10000]);\nvar Font = function FontClosure() {\n  function Font(name, file, properties) {\n    var charCode;\n    this.name = name;\n    this.loadedName = properties.loadedName;\n    this.isType3Font = properties.isType3Font;\n    this.sizes = [];\n    this.missingFile = false;\n    this.glyphCache = Object.create(null);\n    this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n    this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n    this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n    var type = properties.type;\n    var subtype = properties.subtype;\n    this.type = type;\n    this.subtype = subtype;\n    this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n    this.differences = properties.differences;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.composite = properties.composite;\n    this.wideChars = properties.wideChars;\n    this.cMap = properties.cMap;\n    this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n    this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n    this.fontMatrix = properties.fontMatrix;\n    this.bbox = properties.bbox;\n    this.defaultEncoding = properties.defaultEncoding;\n    this.toUnicode = properties.toUnicode;\n    this.fallbackToUnicode = properties.fallbackToUnicode || new ToUnicodeMap();\n    this.toFontChar = [];\n    if (properties.type === 'Type3') {\n      for (charCode = 0; charCode < 256; charCode++) {\n        this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n      }\n      this.fontType = _util.FontType.TYPE3;\n      return;\n    }\n    this.cidEncoding = properties.cidEncoding;\n    this.vertical = properties.vertical;\n    if (this.vertical) {\n      this.vmetrics = properties.vmetrics;\n      this.defaultVMetrics = properties.defaultVMetrics;\n    }\n    if (!file || file.isEmpty) {\n      if (file) {\n        (0, _util.warn)('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n      }\n      this.fallbackToSystemFont();\n      return;\n    }\n    if (subtype === 'Type1C') {\n      if (type !== 'Type1' && type !== 'MMType1') {\n        if (isTrueTypeFile(file)) {\n          subtype = 'TrueType';\n        } else {\n          type = 'Type1';\n        }\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      }\n    }\n    if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n      type = 'CIDFontType0';\n    }\n    if (type === 'CIDFontType0') {\n      if (isType1File(file)) {\n        subtype = 'CIDFontType0';\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      } else {\n        subtype = 'CIDFontType0C';\n      }\n    }\n    if (subtype === 'OpenType' && type !== 'OpenType') {\n      type = 'OpenType';\n    }\n    try {\n      var data;\n      switch (type) {\n        case 'MMType1':\n          (0, _util.info)('MMType1 font (' + name + '), falling back to Type1.');\n        case 'Type1':\n        case 'CIDFontType0':\n          this.mimetype = 'font/opentype';\n          var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n          adjustWidths(properties);\n          data = this.convert(name, cff, properties);\n          break;\n        case 'OpenType':\n        case 'TrueType':\n        case 'CIDFontType2':\n          this.mimetype = 'font/opentype';\n          data = this.checkAndRepair(name, file, properties);\n          if (this.isOpenType) {\n            adjustWidths(properties);\n            type = 'OpenType';\n          }\n          break;\n        default:\n          throw new _util.FormatError('Font ' + type + ' is not supported');\n      }\n    } catch (e) {\n      if (!(e instanceof _util.FormatError)) {\n        throw e;\n      }\n      (0, _util.warn)(e);\n      this.fallbackToSystemFont();\n      return;\n    }\n    this.data = data;\n    this.fontType = getFontType(type, subtype);\n    this.fontMatrix = properties.fontMatrix;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.toUnicode = properties.toUnicode;\n    this.encoding = properties.baseEncoding;\n    this.seacMap = properties.seacMap;\n    this.loading = true;\n  }\n  Font.getFontID = function () {\n    var ID = 1;\n    return function Font_getFontID() {\n      return String(ID++);\n    };\n  }();\n  function int16(b0, b1) {\n    return (b0 << 8) + b1;\n  }\n  function writeSignedInt16(bytes, index, value) {\n    bytes[index + 1] = value;\n    bytes[index] = value >>> 8;\n  }\n  function signedInt16(b0, b1) {\n    var value = (b0 << 8) + b1;\n    return value & 1 << 15 ? value - 0x10000 : value;\n  }\n  function int32(b0, b1, b2, b3) {\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  }\n  function string16(value) {\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function safeString16(value) {\n    value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function isTrueTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.readUint32)(header, 0) === 0x00010000;\n  }\n  function isTrueTypeCollectionFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'ttcf';\n  }\n  function isOpenTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'OTTO';\n  }\n  function isType1File(file) {\n    var header = file.peekBytes(2);\n    if (header[0] === 0x25 && header[1] === 0x21) {\n      return true;\n    }\n    if (header[0] === 0x80 && header[1] === 0x01) {\n      return true;\n    }\n    return false;\n  }\n  function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n    var toFontChar = [],\n        unicode;\n    for (var i = 0, ii = encoding.length; i < ii; i++) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(encoding[i], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[i] = unicode;\n      }\n    }\n    for (var charCode in differences) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(differences[charCode], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[+charCode] = unicode;\n      }\n    }\n    return toFontChar;\n  }\n  function isProblematicUnicodeLocation(code) {\n    var i = 0,\n        j = ProblematicCharRanges.length - 1;\n    while (i < j) {\n      var c = i + j + 1 >> 1;\n      if (code < ProblematicCharRanges[c]) {\n        j = c - 1;\n      } else {\n        i = c;\n      }\n    }\n    return !(i & 1);\n  }\n  function adjustMapping(charCodeToGlyphId, properties, missingGlyphs) {\n    var toUnicode = properties.toUnicode;\n    var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n    var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n    var newMap = Object.create(null);\n    var toFontChar = [];\n    var usedFontCharCodes = [];\n    var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n    for (var originalCharCode in charCodeToGlyphId) {\n      originalCharCode |= 0;\n      var glyphId = charCodeToGlyphId[originalCharCode];\n      if (missingGlyphs[glyphId]) {\n        continue;\n      }\n      var fontCharCode = originalCharCode;\n      var hasUnicodeValue = false;\n      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n        hasUnicodeValue = true;\n        var unicode = toUnicode.get(fontCharCode);\n        if (unicode.length === 1) {\n          fontCharCode = unicode.charCodeAt(0);\n        }\n      }\n      if (usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) {\n        do {\n          if (nextAvailableFontCharCode > PRIVATE_USE_OFFSET_END) {\n            (0, _util.warn)('Ran out of space in font private use area.');\n            break;\n          }\n          fontCharCode = nextAvailableFontCharCode++;\n          if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n            fontCharCode = 0xF020;\n            nextAvailableFontCharCode = fontCharCode + 1;\n          }\n        } while (usedFontCharCodes[fontCharCode] !== undefined);\n      }\n      newMap[fontCharCode] = glyphId;\n      toFontChar[originalCharCode] = fontCharCode;\n      usedFontCharCodes[fontCharCode] = true;\n    }\n    return {\n      toFontChar: toFontChar,\n      charCodeToGlyphId: newMap,\n      nextAvailableFontCharCode: nextAvailableFontCharCode\n    };\n  }\n  function getRanges(glyphs, numGlyphs) {\n    var codes = [];\n    for (var charCode in glyphs) {\n      if (glyphs[charCode] >= numGlyphs) {\n        continue;\n      }\n      codes.push({\n        fontCharCode: charCode | 0,\n        glyphId: glyphs[charCode]\n      });\n    }\n    if (codes.length === 0) {\n      codes.push({\n        fontCharCode: 0,\n        glyphId: 0\n      });\n    }\n    codes.sort(function fontGetRangesSort(a, b) {\n      return a.fontCharCode - b.fontCharCode;\n    });\n    var ranges = [];\n    var length = codes.length;\n    for (var n = 0; n < length;) {\n      var start = codes[n].fontCharCode;\n      var codeIndices = [codes[n].glyphId];\n      ++n;\n      var end = start;\n      while (n < length && end + 1 === codes[n].fontCharCode) {\n        codeIndices.push(codes[n].glyphId);\n        ++end;\n        ++n;\n        if (end === 0xFFFF) {\n          break;\n        }\n      }\n      ranges.push([start, end, codeIndices]);\n    }\n    return ranges;\n  }\n  function createCmapTable(glyphs, numGlyphs) {\n    var ranges = getRanges(glyphs, numGlyphs);\n    var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n    var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + (0, _util.string32)(4 + numTables * 8);\n    var i, ii, j, jj;\n    for (i = ranges.length - 1; i >= 0; --i) {\n      if (ranges[i][0] <= 0xFFFF) {\n        break;\n      }\n    }\n    var bmpLength = i + 1;\n    if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n      ranges[i][1] = 0xFFFE;\n    }\n    var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n    var segCount = bmpLength + trailingRangesCount;\n    var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n    var startCount = '';\n    var endCount = '';\n    var idDeltas = '';\n    var idRangeOffsets = '';\n    var glyphsIds = '';\n    var bias = 0;\n    var range, start, end, codes;\n    for (i = 0, ii = bmpLength; i < ii; i++) {\n      range = ranges[i];\n      start = range[0];\n      end = range[1];\n      startCount += string16(start);\n      endCount += string16(end);\n      codes = range[2];\n      var contiguous = true;\n      for (j = 1, jj = codes.length; j < jj; ++j) {\n        if (codes[j] !== codes[j - 1] + 1) {\n          contiguous = false;\n          break;\n        }\n      }\n      if (!contiguous) {\n        var offset = (segCount - i) * 2 + bias * 2;\n        bias += end - start + 1;\n        idDeltas += string16(0);\n        idRangeOffsets += string16(offset);\n        for (j = 0, jj = codes.length; j < jj; ++j) {\n          glyphsIds += string16(codes[j]);\n        }\n      } else {\n        var startCode = codes[0];\n        idDeltas += string16(startCode - start & 0xFFFF);\n        idRangeOffsets += string16(0);\n      }\n    }\n    if (trailingRangesCount > 0) {\n      endCount += '\\xFF\\xFF';\n      startCount += '\\xFF\\xFF';\n      idDeltas += '\\x00\\x01';\n      idRangeOffsets += '\\x00\\x00';\n    }\n    var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n    var format31012 = '';\n    var header31012 = '';\n    if (numTables > 1) {\n      cmap += '\\x00\\x03' + '\\x00\\x0A' + (0, _util.string32)(4 + numTables * 8 + 4 + format314.length);\n      format31012 = '';\n      for (i = 0, ii = ranges.length; i < ii; i++) {\n        range = ranges[i];\n        start = range[0];\n        codes = range[2];\n        var code = codes[0];\n        for (j = 1, jj = codes.length; j < jj; ++j) {\n          if (codes[j] !== codes[j - 1] + 1) {\n            end = range[0] + j - 1;\n            format31012 += (0, _util.string32)(start) + (0, _util.string32)(end) + (0, _util.string32)(code);\n            start = end + 1;\n            code = codes[j];\n          }\n        }\n        format31012 += (0, _util.string32)(start) + (0, _util.string32)(range[1]) + (0, _util.string32)(code);\n      }\n      header31012 = '\\x00\\x0C' + '\\x00\\x00' + (0, _util.string32)(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + (0, _util.string32)(format31012.length / 12);\n    }\n    return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n  }\n  function validateOS2Table(os2) {\n    var stream = new _stream.Stream(os2.data);\n    var version = stream.getUint16();\n    stream.getBytes(60);\n    var selection = stream.getUint16();\n    if (version < 4 && selection & 0x0300) {\n      return false;\n    }\n    var firstChar = stream.getUint16();\n    var lastChar = stream.getUint16();\n    if (firstChar > lastChar) {\n      return false;\n    }\n    stream.getBytes(6);\n    var usWinAscent = stream.getUint16();\n    if (usWinAscent === 0) {\n      return false;\n    }\n    os2.data[8] = os2.data[9] = 0;\n    return true;\n  }\n  function createOS2Table(properties, charstrings, override) {\n    override = override || {\n      unitsPerEm: 0,\n      yMax: 0,\n      yMin: 0,\n      ascent: 0,\n      descent: 0\n    };\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    if (charstrings) {\n      for (var code in charstrings) {\n        code |= 0;\n        if (firstCharIndex > code || !firstCharIndex) {\n          firstCharIndex = code;\n        }\n        if (lastCharIndex < code) {\n          lastCharIndex = code;\n        }\n        var position = (0, _unicode.getUnicodeRangeFor)(code);\n        if (position < 32) {\n          ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n          ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n          ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n          ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n          throw new _util.FormatError('Unicode ranges Bits > 123 are reserved for internal usage');\n        }\n      }\n    } else {\n      firstCharIndex = 0;\n      lastCharIndex = 255;\n    }\n    var bbox = properties.bbox || [0, 0, 0, 0];\n    var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n    var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n    var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n    var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n    if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n      typoDescent = -typoDescent;\n    }\n    var winAscent = override.yMax || typoAscent;\n    var winDescent = -override.yMin || -typoDescent;\n    return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + (0, _util.string32)(ulUnicodeRange1) + (0, _util.string32)(ulUnicodeRange2) + (0, _util.string32)(ulUnicodeRange3) + (0, _util.string32)(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n  }\n  function createPostTable(properties) {\n    var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n    return '\\x00\\x03\\x00\\x00' + (0, _util.string32)(angle) + '\\x00\\x00' + '\\x00\\x00' + (0, _util.string32)(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n  }\n  function createNameTable(name, proto) {\n    if (!proto) {\n      proto = [[], []];\n    }\n    var strings = [proto[0][0] || 'Original licence', proto[0][1] || name, proto[0][2] || 'Unknown', proto[0][3] || 'uniqueID', proto[0][4] || name, proto[0][5] || 'Version 0.11', proto[0][6] || '', proto[0][7] || 'Unknown', proto[0][8] || 'Unknown', proto[0][9] || 'Unknown'];\n    var stringsUnicode = [];\n    var i, ii, j, jj, str;\n    for (i = 0, ii = strings.length; i < ii; i++) {\n      str = proto[1][i] || strings[i];\n      var strBufUnicode = [];\n      for (j = 0, jj = str.length; j < jj; j++) {\n        strBufUnicode.push(string16(str.charCodeAt(j)));\n      }\n      stringsUnicode.push(strBufUnicode.join(''));\n    }\n    var names = [strings, stringsUnicode];\n    var platforms = ['\\x00\\x01', '\\x00\\x03'];\n    var encodings = ['\\x00\\x00', '\\x00\\x01'];\n    var languages = ['\\x00\\x00', '\\x04\\x09'];\n    var namesRecordCount = strings.length * platforms.length;\n    var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n    var strOffset = 0;\n    for (i = 0, ii = platforms.length; i < ii; i++) {\n      var strs = names[i];\n      for (j = 0, jj = strs.length; j < jj; j++) {\n        str = strs[j];\n        var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n        nameTable += nameRecord;\n        strOffset += str.length;\n      }\n    }\n    nameTable += strings.join('') + stringsUnicode.join('');\n    return nameTable;\n  }\n  Font.prototype = {\n    name: null,\n    font: null,\n    mimetype: null,\n    encoding: null,\n    get renderer() {\n      var renderer = _font_renderer.FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n      return (0, _util.shadow)(this, 'renderer', renderer);\n    },\n    exportData: function Font_exportData() {\n      var data = {};\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) {\n          data[i] = this[i];\n        }\n      }\n      return data;\n    },\n    fallbackToSystemFont: function Font_fallbackToSystemFont() {\n      var _this = this;\n\n      this.missingFile = true;\n      var charCode, unicode;\n      var name = this.name;\n      var type = this.type;\n      var subtype = this.subtype;\n      var fontName = name.replace(/[,_]/g, '-');\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)(),\n          nonStdFontMap = (0, _standard_fonts.getNonStdFontMap)();\n      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n      this.bold = fontName.search(/bold/gi) !== -1;\n      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n      this.black = name.search(/Black/g) !== -1;\n      this.remeasure = Object.keys(this.widths).length > 0;\n      if (isStandardFont && type === 'CIDFontType2' && this.cidEncoding.indexOf('Identity-') === 0) {\n        var GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\n        var map = [];\n        for (charCode in GlyphMapForStandardFonts) {\n          map[+charCode] = GlyphMapForStandardFonts[charCode];\n        }\n        if (/Arial-?Black/i.test(name)) {\n          var SupplementalGlyphMapForArialBlack = (0, _standard_fonts.getSupplementalGlyphMapForArialBlack)();\n          for (charCode in SupplementalGlyphMapForArialBlack) {\n            map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n          }\n        } else if (/Calibri/i.test(name)) {\n          var SupplementalGlyphMapForCalibri = (0, _standard_fonts.getSupplementalGlyphMapForCalibri)();\n          for (charCode in SupplementalGlyphMapForCalibri) {\n            map[+charCode] = SupplementalGlyphMapForCalibri[charCode];\n          }\n        }\n        var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n        if (!isIdentityUnicode) {\n          this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n            map[+charCode] = unicodeCharCode;\n          });\n        }\n        this.toFontChar = map;\n        this.toUnicode = new ToUnicodeMap(map);\n      } else if (/Symbol/i.test(fontName)) {\n        this.toFontChar = buildToFontChar(_encodings.SymbolSetEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else if (/Dingbats/i.test(fontName)) {\n        if (/Wingdings/i.test(name)) {\n          (0, _util.warn)('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n        }\n        this.toFontChar = buildToFontChar(_encodings.ZapfDingbatsEncoding, (0, _glyphlist.getDingbatsGlyphsUnicode)(), this.differences);\n      } else if (isStandardFont) {\n        this.toFontChar = buildToFontChar(this.defaultEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else {\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n          if (!_this.composite) {\n            var glyphName = _this.differences[charCode] || _this.defaultEncoding[charCode];\n            unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n            if (unicode !== -1) {\n              unicodeCharCode = unicode;\n            }\n          }\n          _this.toFontChar[charCode] = unicodeCharCode;\n        });\n      }\n      this.loadedName = fontName.split('-')[0];\n      this.loading = false;\n      this.fontType = getFontType(type, subtype);\n    },\n    checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n      var VALID_TABLES = ['OS/2', 'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'post', 'loca', 'glyf', 'fpgm', 'prep', 'cvt ', 'CFF '];\n      function readTables(file, numTables) {\n        var tables = Object.create(null);\n        tables['OS/2'] = null;\n        tables['cmap'] = null;\n        tables['head'] = null;\n        tables['hhea'] = null;\n        tables['hmtx'] = null;\n        tables['maxp'] = null;\n        tables['name'] = null;\n        tables['post'] = null;\n        for (var i = 0; i < numTables; i++) {\n          var table = readTableEntry(font);\n          if (!VALID_TABLES.includes(table.tag)) {\n            continue;\n          }\n          if (table.length === 0) {\n            continue;\n          }\n          tables[table.tag] = table;\n        }\n        return tables;\n      }\n      function readTableEntry(file) {\n        var tag = (0, _util.bytesToString)(file.getBytes(4));\n        var checksum = file.getInt32() >>> 0;\n        var offset = file.getInt32() >>> 0;\n        var length = file.getInt32() >>> 0;\n        var previousPosition = file.pos;\n        file.pos = file.start ? file.start : 0;\n        file.skip(offset);\n        var data = file.getBytes(length);\n        file.pos = previousPosition;\n        if (tag === 'head') {\n          data[8] = data[9] = data[10] = data[11] = 0;\n          data[17] |= 0x20;\n        }\n        return {\n          tag: tag,\n          checksum: checksum,\n          length: length,\n          offset: offset,\n          data: data\n        };\n      }\n      function readOpenTypeHeader(ttf) {\n        return {\n          version: (0, _util.bytesToString)(ttf.getBytes(4)),\n          numTables: ttf.getUint16(),\n          searchRange: ttf.getUint16(),\n          entrySelector: ttf.getUint16(),\n          rangeShift: ttf.getUint16()\n        };\n      }\n      function readTrueTypeCollectionHeader(ttc) {\n        var ttcTag = (0, _util.bytesToString)(ttc.getBytes(4));\n        (0, _util.assert)(ttcTag === 'ttcf', 'Must be a TrueType Collection font.');\n        var majorVersion = ttc.getUint16();\n        var minorVersion = ttc.getUint16();\n        var numFonts = ttc.getInt32() >>> 0;\n        var offsetTable = [];\n        for (var i = 0; i < numFonts; i++) {\n          offsetTable.push(ttc.getInt32() >>> 0);\n        }\n        var header = {\n          ttcTag: ttcTag,\n          majorVersion: majorVersion,\n          minorVersion: minorVersion,\n          numFonts: numFonts,\n          offsetTable: offsetTable\n        };\n        switch (majorVersion) {\n          case 1:\n            return header;\n          case 2:\n            header.dsigTag = ttc.getInt32() >>> 0;\n            header.dsigLength = ttc.getInt32() >>> 0;\n            header.dsigOffset = ttc.getInt32() >>> 0;\n            return header;\n        }\n        throw new _util.FormatError('Invalid TrueType Collection majorVersion: ' + majorVersion + '.');\n      }\n      function readTrueTypeCollectionData(ttc, fontName) {\n        var _readTrueTypeCollecti = readTrueTypeCollectionHeader(ttc),\n            numFonts = _readTrueTypeCollecti.numFonts,\n            offsetTable = _readTrueTypeCollecti.offsetTable;\n\n        for (var i = 0; i < numFonts; i++) {\n          ttc.pos = (ttc.start || 0) + offsetTable[i];\n          var potentialHeader = readOpenTypeHeader(ttc);\n          var potentialTables = readTables(ttc, potentialHeader.numTables);\n          if (!potentialTables['name']) {\n            throw new _util.FormatError('TrueType Collection font must contain a \"name\" table.');\n          }\n          var nameTable = readNameTable(potentialTables['name']);\n          for (var j = 0, jj = nameTable.length; j < jj; j++) {\n            for (var k = 0, kk = nameTable[j].length; k < kk; k++) {\n              var nameEntry = nameTable[j][k];\n              if (nameEntry && nameEntry.replace(/\\s/g, '') === fontName) {\n                return {\n                  header: potentialHeader,\n                  tables: potentialTables\n                };\n              }\n            }\n          }\n        }\n        throw new _util.FormatError('TrueType Collection does not contain \"' + fontName + '\" font.');\n      }\n      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n        if (!cmap) {\n          (0, _util.warn)('No cmap table available.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var segment;\n        var start = (font.start ? font.start : 0) + cmap.offset;\n        font.pos = start;\n        font.getUint16();\n        var numTables = font.getUint16();\n        var potentialTable;\n        var canBreak = false;\n        for (var i = 0; i < numTables; i++) {\n          var platformId = font.getUint16();\n          var encodingId = font.getUint16();\n          var offset = font.getInt32() >>> 0;\n          var useTable = false;\n          if (potentialTable && potentialTable.platformId === platformId && potentialTable.encodingId === encodingId) {\n            continue;\n          }\n          if (platformId === 0 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 1 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\n            useTable = true;\n            if (!isSymbolicFont) {\n              canBreak = true;\n            }\n          } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n            useTable = true;\n            canBreak = true;\n          }\n          if (useTable) {\n            potentialTable = {\n              platformId: platformId,\n              encodingId: encodingId,\n              offset: offset\n            };\n          }\n          if (canBreak) {\n            break;\n          }\n        }\n        if (potentialTable) {\n          font.pos = start + potentialTable.offset;\n        }\n        if (!potentialTable || font.peekByte() === -1) {\n          (0, _util.warn)('Could not find a preferred cmap table.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var format = font.getUint16();\n        font.getUint16();\n        font.getUint16();\n        var hasShortCmap = false;\n        var mappings = [];\n        var j, glyphId;\n        if (format === 0) {\n          for (j = 0; j < 256; j++) {\n            var index = font.getByte();\n            if (!index) {\n              continue;\n            }\n            mappings.push({\n              charCode: j,\n              glyphId: index\n            });\n          }\n          hasShortCmap = true;\n        } else if (format === 4) {\n          var segCount = font.getUint16() >> 1;\n          font.getBytes(6);\n          var segIndex,\n              segments = [];\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments.push({ end: font.getUint16() });\n          }\n          font.getUint16();\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].start = font.getUint16();\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].delta = font.getUint16();\n          }\n          var offsetsCount = 0;\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            var rangeOffset = font.getUint16();\n            if (!rangeOffset) {\n              segment.offsetIndex = -1;\n              continue;\n            }\n            var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n            segment.offsetIndex = offsetIndex;\n            offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n          }\n          var offsets = [];\n          for (j = 0; j < offsetsCount; j++) {\n            offsets.push(font.getUint16());\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            start = segment.start;\n            var end = segment.end;\n            var delta = segment.delta;\n            offsetIndex = segment.offsetIndex;\n            for (j = start; j <= end; j++) {\n              if (j === 0xFFFF) {\n                continue;\n              }\n              glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n              glyphId = glyphId + delta & 0xFFFF;\n              mappings.push({\n                charCode: j,\n                glyphId: glyphId\n              });\n            }\n          }\n        } else if (format === 6) {\n          var firstCode = font.getUint16();\n          var entryCount = font.getUint16();\n          for (j = 0; j < entryCount; j++) {\n            glyphId = font.getUint16();\n            var charCode = firstCode + j;\n            mappings.push({\n              charCode: charCode,\n              glyphId: glyphId\n            });\n          }\n        } else {\n          (0, _util.warn)('cmap table has unsupported format: ' + format);\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        mappings.sort(function (a, b) {\n          return a.charCode - b.charCode;\n        });\n        for (i = 1; i < mappings.length; i++) {\n          if (mappings[i - 1].charCode === mappings[i].charCode) {\n            mappings.splice(i, 1);\n            i--;\n          }\n        }\n        return {\n          platformId: potentialTable.platformId,\n          encodingId: potentialTable.encodingId,\n          mappings: mappings,\n          hasShortCmap: hasShortCmap\n        };\n      }\n      function sanitizeMetrics(font, header, metrics, numGlyphs) {\n        if (!header) {\n          if (metrics) {\n            metrics.data = null;\n          }\n          return;\n        }\n        font.pos = (font.start ? font.start : 0) + header.offset;\n        font.pos += header.length - 2;\n        var numOfMetrics = font.getUint16();\n        if (numOfMetrics > numGlyphs) {\n          (0, _util.info)('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n          numOfMetrics = numGlyphs;\n          header.data[34] = (numOfMetrics & 0xff00) >> 8;\n          header.data[35] = numOfMetrics & 0x00ff;\n        }\n        var numOfSidebearings = numGlyphs - numOfMetrics;\n        var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n        if (numMissing > 0) {\n          var entries = new Uint8Array(metrics.length + numMissing * 2);\n          entries.set(metrics.data);\n          metrics.data = entries;\n        }\n      }\n      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n        var glyphProfile = {\n          length: 0,\n          sizeOfInstructions: 0\n        };\n        if (sourceEnd - sourceStart <= 12) {\n          return glyphProfile;\n        }\n        var glyf = source.subarray(sourceStart, sourceEnd);\n        var contoursCount = signedInt16(glyf[0], glyf[1]);\n        if (contoursCount < 0) {\n          contoursCount = -1;\n          writeSignedInt16(glyf, 0, contoursCount);\n          dest.set(glyf, destStart);\n          glyphProfile.length = glyf.length;\n          return glyphProfile;\n        }\n        var i,\n            j = 10,\n            flagsCount = 0;\n        for (i = 0; i < contoursCount; i++) {\n          var endPoint = glyf[j] << 8 | glyf[j + 1];\n          flagsCount = endPoint + 1;\n          j += 2;\n        }\n        var instructionsStart = j;\n        var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n        glyphProfile.sizeOfInstructions = instructionsLength;\n        j += 2 + instructionsLength;\n        var instructionsEnd = j;\n        var coordinatesLength = 0;\n        for (i = 0; i < flagsCount; i++) {\n          var flag = glyf[j++];\n          if (flag & 0xC0) {\n            glyf[j - 1] = flag & 0x3F;\n          }\n          var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n          coordinatesLength += xyLength;\n          if (flag & 8) {\n            var repeat = glyf[j++];\n            i += repeat;\n            coordinatesLength += repeat * xyLength;\n          }\n        }\n        if (coordinatesLength === 0) {\n          return glyphProfile;\n        }\n        var glyphDataLength = j + coordinatesLength;\n        if (glyphDataLength > glyf.length) {\n          return glyphProfile;\n        }\n        if (!hintsValid && instructionsLength > 0) {\n          dest.set(glyf.subarray(0, instructionsStart), destStart);\n          dest.set([0, 0], destStart + instructionsStart);\n          dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n          glyphDataLength -= instructionsLength;\n          if (glyf.length - glyphDataLength > 3) {\n            glyphDataLength = glyphDataLength + 3 & ~3;\n          }\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        if (glyf.length - glyphDataLength > 3) {\n          glyphDataLength = glyphDataLength + 3 & ~3;\n          dest.set(glyf.subarray(0, glyphDataLength), destStart);\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        dest.set(glyf, destStart);\n        glyphProfile.length = glyf.length;\n        return glyphProfile;\n      }\n      function sanitizeHead(head, numGlyphs, locaLength) {\n        var data = head.data;\n        var version = int32(data[0], data[1], data[2], data[3]);\n        if (version >> 16 !== 1) {\n          (0, _util.info)('Attempting to fix invalid version in head table: ' + version);\n          data[0] = 0;\n          data[1] = 1;\n          data[2] = 0;\n          data[3] = 0;\n        }\n        var indexToLocFormat = int16(data[50], data[51]);\n        if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n          (0, _util.info)('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n          var numGlyphsPlusOne = numGlyphs + 1;\n          if (locaLength === numGlyphsPlusOne << 1) {\n            data[50] = 0;\n            data[51] = 0;\n          } else if (locaLength === numGlyphsPlusOne << 2) {\n            data[50] = 0;\n            data[51] = 1;\n          } else {\n            throw new _util.FormatError('Could not fix indexToLocFormat: ' + indexToLocFormat);\n          }\n        }\n      }\n      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions) {\n        var itemSize, itemDecode, itemEncode;\n        if (isGlyphLocationsLong) {\n          itemSize = 4;\n          itemDecode = function fontItemDecodeLong(data, offset) {\n            return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n          };\n          itemEncode = function fontItemEncodeLong(data, offset, value) {\n            data[offset] = value >>> 24 & 0xFF;\n            data[offset + 1] = value >> 16 & 0xFF;\n            data[offset + 2] = value >> 8 & 0xFF;\n            data[offset + 3] = value & 0xFF;\n          };\n        } else {\n          itemSize = 2;\n          itemDecode = function fontItemDecode(data, offset) {\n            return data[offset] << 9 | data[offset + 1] << 1;\n          };\n          itemEncode = function fontItemEncode(data, offset, value) {\n            data[offset] = value >> 9 & 0xFF;\n            data[offset + 1] = value >> 1 & 0xFF;\n          };\n        }\n        var locaData = loca.data;\n        var locaDataSize = itemSize * (1 + numGlyphs);\n        if (locaData.length !== locaDataSize) {\n          locaData = new Uint8Array(locaDataSize);\n          locaData.set(loca.data.subarray(0, locaDataSize));\n          loca.data = locaData;\n        }\n        var oldGlyfData = glyf.data;\n        var oldGlyfDataLength = oldGlyfData.length;\n        var newGlyfData = new Uint8Array(oldGlyfDataLength);\n        var startOffset = itemDecode(locaData, 0);\n        var writeOffset = 0;\n        var missingGlyphs = Object.create(null);\n        itemEncode(locaData, 0, writeOffset);\n        var i, j;\n        var locaCount = dupFirstEntry ? numGlyphs - 1 : numGlyphs;\n        for (i = 0, j = itemSize; i < locaCount; i++, j += itemSize) {\n          var endOffset = itemDecode(locaData, j);\n          if (endOffset === 0) {\n            endOffset = startOffset;\n          }\n          if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n            endOffset = oldGlyfDataLength;\n          }\n          if (endOffset > oldGlyfDataLength) {\n            startOffset = endOffset;\n          }\n          var glyphProfile = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n          var newLength = glyphProfile.length;\n          if (newLength === 0) {\n            missingGlyphs[i] = true;\n          }\n          if (glyphProfile.sizeOfInstructions > maxSizeOfInstructions) {\n            maxSizeOfInstructions = glyphProfile.sizeOfInstructions;\n          }\n          writeOffset += newLength;\n          itemEncode(locaData, j, writeOffset);\n          startOffset = endOffset;\n        }\n        if (writeOffset === 0) {\n          var simpleGlyph = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\n          for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n            itemEncode(locaData, j, simpleGlyph.length);\n          }\n          glyf.data = simpleGlyph;\n        } else if (dupFirstEntry) {\n          var firstEntryLength = itemDecode(locaData, itemSize);\n          if (newGlyfData.length > firstEntryLength + writeOffset) {\n            glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n          } else {\n            glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n            glyf.data.set(newGlyfData.subarray(0, writeOffset));\n          }\n          glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n          itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n        } else {\n          glyf.data = newGlyfData.subarray(0, writeOffset);\n        }\n        return {\n          missingGlyphs: missingGlyphs,\n          maxSizeOfInstructions: maxSizeOfInstructions\n        };\n      }\n      function readPostScriptTable(post, properties, maxpNumGlyphs) {\n        var start = (font.start ? font.start : 0) + post.offset;\n        font.pos = start;\n        var length = post.length,\n            end = start + length;\n        var version = font.getInt32();\n        font.getBytes(28);\n        var glyphNames;\n        var valid = true;\n        var i;\n        switch (version) {\n          case 0x00010000:\n            glyphNames = MacStandardGlyphOrdering;\n            break;\n          case 0x00020000:\n            var numGlyphs = font.getUint16();\n            if (numGlyphs !== maxpNumGlyphs) {\n              valid = false;\n              break;\n            }\n            var glyphNameIndexes = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var index = font.getUint16();\n              if (index >= 32768) {\n                valid = false;\n                break;\n              }\n              glyphNameIndexes.push(index);\n            }\n            if (!valid) {\n              break;\n            }\n            var customNames = [];\n            var strBuf = [];\n            while (font.pos < end) {\n              var stringLength = font.getByte();\n              strBuf.length = stringLength;\n              for (i = 0; i < stringLength; ++i) {\n                strBuf[i] = String.fromCharCode(font.getByte());\n              }\n              customNames.push(strBuf.join(''));\n            }\n            glyphNames = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var j = glyphNameIndexes[i];\n              if (j < 258) {\n                glyphNames.push(MacStandardGlyphOrdering[j]);\n                continue;\n              }\n              glyphNames.push(customNames[j - 258]);\n            }\n            break;\n          case 0x00030000:\n            break;\n          default:\n            (0, _util.warn)('Unknown/unsupported post table version ' + version);\n            valid = false;\n            if (properties.defaultEncoding) {\n              glyphNames = properties.defaultEncoding;\n            }\n            break;\n        }\n        properties.glyphNames = glyphNames;\n        return valid;\n      }\n      function readNameTable(nameTable) {\n        var start = (font.start ? font.start : 0) + nameTable.offset;\n        font.pos = start;\n        var names = [[], []];\n        var length = nameTable.length,\n            end = start + length;\n        var format = font.getUint16();\n        var FORMAT_0_HEADER_LENGTH = 6;\n        if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n          return names;\n        }\n        var numRecords = font.getUint16();\n        var stringsStart = font.getUint16();\n        var records = [];\n        var NAME_RECORD_LENGTH = 12;\n        var i, ii;\n        for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n          var r = {\n            platform: font.getUint16(),\n            encoding: font.getUint16(),\n            language: font.getUint16(),\n            name: font.getUint16(),\n            length: font.getUint16(),\n            offset: font.getUint16()\n          };\n          if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n            records.push(r);\n          }\n        }\n        for (i = 0, ii = records.length; i < ii; i++) {\n          var record = records[i];\n          if (record.length <= 0) {\n            continue;\n          }\n          var pos = start + stringsStart + record.offset;\n          if (pos + record.length > end) {\n            continue;\n          }\n          font.pos = pos;\n          var nameIndex = record.name;\n          if (record.encoding) {\n            var str = '';\n            for (var j = 0, jj = record.length; j < jj; j += 2) {\n              str += String.fromCharCode(font.getUint16());\n            }\n            names[1][nameIndex] = str;\n          } else {\n            names[0][nameIndex] = (0, _util.bytesToString)(font.getBytes(record.length));\n          }\n        }\n        return names;\n      }\n      var TTOpsStackDeltas = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\n      function sanitizeTTProgram(table, ttContext) {\n        var data = table.data;\n        var i = 0,\n            j,\n            n,\n            b,\n            funcId,\n            pc,\n            lastEndf = 0,\n            lastDeff = 0;\n        var stack = [];\n        var callstack = [];\n        var functionsCalled = [];\n        var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n        var inFDEF = false,\n            ifLevel = 0,\n            inELSE = 0;\n        for (var ii = data.length; i < ii;) {\n          var op = data[i++];\n          if (op === 0x40) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if (op === 0x41) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB0) {\n            n = op - 0xB0 + 1;\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB8) {\n            n = op - 0xB8 + 1;\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n            if (!inFDEF && !inELSE) {\n              funcId = stack[stack.length - 1];\n              ttContext.functionsUsed[funcId] = true;\n              if (funcId in ttContext.functionsStackDeltas) {\n                stack.length += ttContext.functionsStackDeltas[funcId];\n              } else if (funcId in ttContext.functionsDefined && !functionsCalled.includes(funcId)) {\n                callstack.push({\n                  data: data,\n                  i: i,\n                  stackTop: stack.length - 1\n                });\n                functionsCalled.push(funcId);\n                pc = ttContext.functionsDefined[funcId];\n                if (!pc) {\n                  (0, _util.warn)('TT: CALL non-existent function');\n                  ttContext.hintsValid = false;\n                  return;\n                }\n                data = pc.data;\n                i = pc.i;\n              }\n            }\n          } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested FDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n            funcId = stack.pop();\n            ttContext.functionsDefined[funcId] = {\n              data: data,\n              i: i\n            };\n          } else if (op === 0x2D) {\n            if (inFDEF) {\n              inFDEF = false;\n              lastEndf = i;\n            } else {\n              pc = callstack.pop();\n              if (!pc) {\n                (0, _util.warn)('TT: ENDF bad stack');\n                ttContext.hintsValid = false;\n                return;\n              }\n              funcId = functionsCalled.pop();\n              data = pc.data;\n              i = pc.i;\n              ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n            }\n          } else if (op === 0x89) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested IDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n          } else if (op === 0x58) {\n            ++ifLevel;\n          } else if (op === 0x1B) {\n            inELSE = ifLevel;\n          } else if (op === 0x59) {\n            if (inELSE === ifLevel) {\n              inELSE = 0;\n            }\n            --ifLevel;\n          } else if (op === 0x1C) {\n            if (!inFDEF && !inELSE) {\n              var offset = stack[stack.length - 1];\n              if (offset > 0) {\n                i += offset - 1;\n              }\n            }\n          }\n          if (!inFDEF && !inELSE) {\n            var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n            if (op >= 0x71 && op <= 0x75) {\n              n = stack.pop();\n              if (!isNaN(n)) {\n                stackDelta = -n * 2;\n              }\n            }\n            while (stackDelta < 0 && stack.length > 0) {\n              stack.pop();\n              stackDelta++;\n            }\n            while (stackDelta > 0) {\n              stack.push(NaN);\n              stackDelta--;\n            }\n          }\n        }\n        ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n        var content = [data];\n        if (i > data.length) {\n          content.push(new Uint8Array(i - data.length));\n        }\n        if (lastDeff > lastEndf) {\n          (0, _util.warn)('TT: complementing a missing function tail');\n          content.push(new Uint8Array([0x22, 0x2D]));\n        }\n        foldTTTable(table, content);\n      }\n      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n        if (ttContext.tooComplexToFollowFunctions) {\n          return;\n        }\n        if (ttContext.functionsDefined.length > maxFunctionDefs) {\n          (0, _util.warn)('TT: more functions defined than expected');\n          ttContext.hintsValid = false;\n          return;\n        }\n        for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n          if (j > maxFunctionDefs) {\n            (0, _util.warn)('TT: invalid function id: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n          if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n            (0, _util.warn)('TT: undefined function: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n        }\n      }\n      function foldTTTable(table, content) {\n        if (content.length > 1) {\n          var newLength = 0;\n          var j, jj;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            newLength += content[j].length;\n          }\n          newLength = newLength + 3 & ~3;\n          var result = new Uint8Array(newLength);\n          var pos = 0;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            result.set(content[j], pos);\n            pos += content[j].length;\n          }\n          table.data = result;\n          table.length = newLength;\n        }\n      }\n      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n        var ttContext = {\n          functionsDefined: [],\n          functionsUsed: [],\n          functionsStackDeltas: [],\n          tooComplexToFollowFunctions: false,\n          hintsValid: true\n        };\n        if (fpgm) {\n          sanitizeTTProgram(fpgm, ttContext);\n        }\n        if (prep) {\n          sanitizeTTProgram(prep, ttContext);\n        }\n        if (fpgm) {\n          checkInvalidFunctions(ttContext, maxFunctionDefs);\n        }\n        if (cvt && cvt.length & 1) {\n          var cvtData = new Uint8Array(cvt.length + 1);\n          cvtData.set(cvt.data);\n          cvt.data = cvtData;\n        }\n        return ttContext.hintsValid;\n      }\n      font = new _stream.Stream(new Uint8Array(font.getBytes()));\n      var header = void 0,\n          tables = void 0;\n      if (isTrueTypeCollectionFile(font)) {\n        var ttcData = readTrueTypeCollectionData(font, this.name);\n        header = ttcData.header;\n        tables = ttcData.tables;\n      } else {\n        header = readOpenTypeHeader(font);\n        tables = readTables(font, header.numTables);\n      }\n      var cff = void 0,\n          cffFile = void 0;\n      var isTrueType = !tables['CFF '];\n      if (!isTrueType) {\n        if (header.version === 'OTTO' && !(properties.composite && properties.cidToGidMap) || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          cff = new CFFFont(cffFile, properties);\n          adjustWidths(properties);\n          return this.convert(name, cff, properties);\n        }\n        delete tables['glyf'];\n        delete tables['loca'];\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n        this.isOpenType = true;\n      } else {\n        if (!tables['loca']) {\n          throw new _util.FormatError('Required \"loca\" table is not found');\n        }\n        if (!tables['glyf']) {\n          (0, _util.warn)('Required \"glyf\" table is not found -- trying to recover.');\n          tables['glyf'] = {\n            tag: 'glyf',\n            data: new Uint8Array(0)\n          };\n        }\n        this.isOpenType = false;\n      }\n      if (!tables['maxp']) {\n        throw new _util.FormatError('Required \"maxp\" table is not found');\n      }\n      font.pos = (font.start || 0) + tables['maxp'].offset;\n      var version = font.getInt32();\n      var numGlyphs = font.getUint16();\n      var maxFunctionDefs = 0;\n      var maxSizeOfInstructions = 0;\n      if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n        font.pos += 8;\n        var maxZones = font.getUint16();\n        if (maxZones > 2) {\n          tables['maxp'].data[14] = 0;\n          tables['maxp'].data[15] = 2;\n        }\n        font.pos += 4;\n        maxFunctionDefs = font.getUint16();\n        font.pos += 4;\n        maxSizeOfInstructions = font.getUint16();\n      }\n      var dupFirstEntry = false;\n      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\0') {\n        dupFirstEntry = true;\n        numGlyphs++;\n        tables['maxp'].data[4] = numGlyphs >> 8;\n        tables['maxp'].data[5] = numGlyphs & 255;\n      }\n      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n      if (!hintsValid) {\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n      }\n      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n      if (!tables['head']) {\n        throw new _util.FormatError('Required \"head\" table is not found');\n      }\n      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n      var missingGlyphs = Object.create(null);\n      if (isTrueType) {\n        var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n        var glyphsInfo = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions);\n        missingGlyphs = glyphsInfo.missingGlyphs;\n        if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n          tables['maxp'].data[26] = glyphsInfo.maxSizeOfInstructions >> 8;\n          tables['maxp'].data[27] = glyphsInfo.maxSizeOfInstructions & 255;\n        }\n      }\n      if (!tables['hhea']) {\n        throw new _util.FormatError('Required \"hhea\" table is not found');\n      }\n      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n        tables['hhea'].data[10] = 0xFF;\n        tables['hhea'].data[11] = 0xFF;\n      }\n      var metricsOverride = {\n        unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n        yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n        yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n        ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n        descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n      };\n      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n      if (tables['post']) {\n        var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n        if (!valid) {\n          tables['post'] = null;\n        }\n      }\n      var charCodeToGlyphId = [],\n          charCode;\n      function hasGlyph(glyphId) {\n        return !missingGlyphs[glyphId];\n      }\n      if (properties.composite) {\n        var cidToGidMap = properties.cidToGidMap || [];\n        var isCidToGidMapEmpty = cidToGidMap.length === 0;\n        properties.cMap.forEach(function (charCode, cid) {\n          if (cid > 0xffff) {\n            throw new _util.FormatError('Max size of CID is 65,535');\n          }\n          var glyphId = -1;\n          if (isCidToGidMapEmpty) {\n            glyphId = cid;\n          } else if (cidToGidMap[cid] !== undefined) {\n            glyphId = cidToGidMap[cid];\n          }\n          if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId)) {\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        });\n        if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n          charCodeToGlyphId[0] = numGlyphs - 1;\n        }\n      } else {\n        var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n        var cmapPlatformId = cmapTable.platformId;\n        var cmapEncodingId = cmapTable.encodingId;\n        var cmapMappings = cmapTable.mappings;\n        var cmapMappingsLength = cmapMappings.length;\n        if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!(0, _encodings.getEncoding)(properties.baseEncodingName)) {\n          var baseEncoding = [];\n          if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n            baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n          }\n          var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n          for (charCode = 0; charCode < 256; charCode++) {\n            var glyphName, standardGlyphName;\n            if (this.differences && charCode in this.differences) {\n              glyphName = this.differences[charCode];\n            } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n              glyphName = baseEncoding[charCode];\n            } else {\n              glyphName = _encodings.StandardEncoding[charCode];\n            }\n            if (!glyphName) {\n              continue;\n            }\n            standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n            var unicodeOrCharCode;\n            if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n              unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n            } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n              unicodeOrCharCode = _encodings.MacRomanEncoding.indexOf(standardGlyphName);\n            }\n            var found = false;\n            for (var i = 0; i < cmapMappingsLength; ++i) {\n              if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n                continue;\n              }\n              charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n              found = true;\n              break;\n            }\n            if (!found && properties.glyphNames) {\n              var glyphId = properties.glyphNames.indexOf(glyphName);\n              if (glyphId === -1 && standardGlyphName !== glyphName) {\n                glyphId = properties.glyphNames.indexOf(standardGlyphName);\n              }\n              if (glyphId > 0 && hasGlyph(glyphId)) {\n                charCodeToGlyphId[charCode] = glyphId;\n              }\n            }\n          }\n        } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n          for (var _i = 0; _i < cmapMappingsLength; ++_i) {\n            charCodeToGlyphId[cmapMappings[_i].charCode] = cmapMappings[_i].glyphId;\n          }\n        } else {\n          for (var _i2 = 0; _i2 < cmapMappingsLength; ++_i2) {\n            charCode = cmapMappings[_i2].charCode;\n            if (cmapPlatformId === 3 && charCode >= 0xF000 && charCode <= 0xF0FF) {\n              charCode &= 0xFF;\n            }\n            charCodeToGlyphId[charCode] = cmapMappings[_i2].glyphId;\n          }\n        }\n      }\n      if (charCodeToGlyphId.length === 0) {\n        charCodeToGlyphId[0] = 0;\n      }\n      var newMapping = adjustMapping(charCodeToGlyphId, properties, missingGlyphs);\n      this.toFontChar = newMapping.toFontChar;\n      tables['cmap'] = {\n        tag: 'cmap',\n        data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n      };\n      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n        tables['OS/2'] = {\n          tag: 'OS/2',\n          data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n        };\n      }\n      if (!tables['post']) {\n        tables['post'] = {\n          tag: 'post',\n          data: createPostTable(properties)\n        };\n      }\n      if (!isTrueType) {\n        try {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          var parser = new _cff_parser.CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n          cff = parser.parse();\n          var compiler = new _cff_parser.CFFCompiler(cff);\n          tables['CFF '].data = compiler.compile();\n        } catch (e) {\n          (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n        }\n      }\n      if (!tables['name']) {\n        tables['name'] = {\n          tag: 'name',\n          data: createNameTable(this.name)\n        };\n      } else {\n        var namePrototype = readNameTable(tables['name']);\n        tables['name'].data = createNameTable(name, namePrototype);\n      }\n      var builder = new OpenTypeFileBuilder(header.version);\n      for (var tableTag in tables) {\n        builder.addTable(tableTag, tables[tableTag].data);\n      }\n      return builder.toArray();\n    },\n    convert: function Font_convert(fontName, font, properties) {\n      properties.fixedPitch = false;\n      if (properties.builtInEncoding) {\n        adjustToUnicode(properties, properties.builtInEncoding);\n      }\n      var mapping = font.getGlyphMapping(properties);\n      var newMapping = adjustMapping(mapping, properties, Object.create(null));\n      this.toFontChar = newMapping.toFontChar;\n      var numGlyphs = font.numGlyphs;\n      function getCharCodes(charCodeToGlyphId, glyphId) {\n        var charCodes = null;\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            if (!charCodes) {\n              charCodes = [];\n            }\n            charCodes.push(charCode | 0);\n          }\n        }\n        return charCodes;\n      }\n      function createCharCode(charCodeToGlyphId, glyphId) {\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            return charCode | 0;\n          }\n        }\n        newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n        return newMapping.nextAvailableFontCharCode++;\n      }\n      var seacs = font.seacs;\n      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n        var matrix = properties.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        var charset = font.getCharset();\n        var seacMap = Object.create(null);\n        for (var glyphId in seacs) {\n          glyphId |= 0;\n          var seac = seacs[glyphId];\n          var baseGlyphName = _encodings.StandardEncoding[seac[2]];\n          var accentGlyphName = _encodings.StandardEncoding[seac[3]];\n          var baseGlyphId = charset.indexOf(baseGlyphName);\n          var accentGlyphId = charset.indexOf(accentGlyphName);\n          if (baseGlyphId < 0 || accentGlyphId < 0) {\n            continue;\n          }\n          var accentOffset = {\n            x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n            y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n          };\n          var charCodes = getCharCodes(mapping, glyphId);\n          if (!charCodes) {\n            continue;\n          }\n          for (var i = 0, ii = charCodes.length; i < ii; i++) {\n            var charCode = charCodes[i];\n            var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n            var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n            var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n            seacMap[charCode] = {\n              baseFontCharCode: baseFontCharCode,\n              accentFontCharCode: accentFontCharCode,\n              accentOffset: accentOffset\n            };\n          }\n        }\n        properties.seacMap = seacMap;\n      }\n      var unitsPerEm = 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n      var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n      builder.addTable('CFF ', font.data);\n      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n      builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n      builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n      builder.addTable('hmtx', function fontFieldsHmtx() {\n        var charstrings = font.charstrings;\n        var cffWidths = font.cff ? font.cff.widths : null;\n        var hmtx = '\\x00\\x00\\x00\\x00';\n        for (var i = 1, ii = numGlyphs; i < ii; i++) {\n          var width = 0;\n          if (charstrings) {\n            var charstring = charstrings[i - 1];\n            width = 'width' in charstring ? charstring.width : 0;\n          } else if (cffWidths) {\n            width = Math.ceil(cffWidths[i] || 0);\n          }\n          hmtx += string16(width) + string16(0);\n        }\n        return hmtx;\n      }());\n      builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n      builder.addTable('name', createNameTable(fontName));\n      builder.addTable('post', createPostTable(properties));\n      return builder.toArray();\n    },\n    get spaceWidth() {\n      if ('_shadowWidth' in this) {\n        return this._shadowWidth;\n      }\n      var possibleSpaceReplacements = ['space', 'minus', 'one', 'i', 'I'];\n      var width;\n      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n        var glyphName = possibleSpaceReplacements[i];\n        if (glyphName in this.widths) {\n          width = this.widths[glyphName];\n          break;\n        }\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        var glyphUnicode = glyphsUnicodeMap[glyphName];\n        var charcode = 0;\n        if (this.composite) {\n          if (this.cMap.contains(glyphUnicode)) {\n            charcode = this.cMap.lookup(glyphUnicode);\n          }\n        }\n        if (!charcode && this.toUnicode) {\n          charcode = this.toUnicode.charCodeOf(glyphUnicode);\n        }\n        if (charcode <= 0) {\n          charcode = glyphUnicode;\n        }\n        width = this.widths[charcode];\n        if (width) {\n          break;\n        }\n      }\n      width = width || this.defaultWidth;\n      this._shadowWidth = width;\n      return width;\n    },\n    charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n      var fontCharCode, width, operatorListId;\n      var widthCode = charcode;\n      if (this.cMap && this.cMap.contains(charcode)) {\n        widthCode = this.cMap.lookup(charcode);\n      }\n      width = this.widths[widthCode];\n      width = (0, _util.isNum)(width) ? width : this.defaultWidth;\n      var vmetric = this.vmetrics && this.vmetrics[widthCode];\n      var unicode = this.toUnicode.get(charcode) || this.fallbackToUnicode.get(charcode) || charcode;\n      if (typeof unicode === 'number') {\n        unicode = String.fromCharCode(unicode);\n      }\n      var isInFont = charcode in this.toFontChar;\n      fontCharCode = this.toFontChar[charcode] || charcode;\n      if (this.missingFile) {\n        fontCharCode = (0, _unicode.mapSpecialUnicodeValues)(fontCharCode);\n      }\n      if (this.isType3Font) {\n        operatorListId = fontCharCode;\n      }\n      var accent = null;\n      if (this.seacMap && this.seacMap[charcode]) {\n        isInFont = true;\n        var seac = this.seacMap[charcode];\n        fontCharCode = seac.baseFontCharCode;\n        accent = {\n          fontChar: String.fromCharCode(seac.accentFontCharCode),\n          offset: seac.accentOffset\n        };\n      }\n      var fontChar = String.fromCharCode(fontCharCode);\n      var glyph = this.glyphCache[charcode];\n      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n        glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n        this.glyphCache[charcode] = glyph;\n      }\n      return glyph;\n    },\n    charsToGlyphs: function Font_charsToGlyphs(chars) {\n      var charsCache = this.charsCache;\n      var glyphs, glyph, charcode;\n      if (charsCache) {\n        glyphs = charsCache[chars];\n        if (glyphs) {\n          return glyphs;\n        }\n      }\n      if (!charsCache) {\n        charsCache = this.charsCache = Object.create(null);\n      }\n      glyphs = [];\n      var charsCacheKey = chars;\n      var i = 0,\n          ii;\n      if (this.cMap) {\n        var c = Object.create(null);\n        while (i < chars.length) {\n          this.cMap.readCharCode(chars, i, c);\n          charcode = c.charcode;\n          var length = c.length;\n          i += length;\n          var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n          glyph = this.charToGlyph(charcode, isSpace);\n          glyphs.push(glyph);\n        }\n      } else {\n        for (i = 0, ii = chars.length; i < ii; ++i) {\n          charcode = chars.charCodeAt(i);\n          glyph = this.charToGlyph(charcode, charcode === 0x20);\n          glyphs.push(glyph);\n        }\n      }\n      return charsCache[charsCacheKey] = glyphs;\n    }\n  };\n  return Font;\n}();\nvar ErrorFont = function ErrorFontClosure() {\n  function ErrorFont(error) {\n    this.error = error;\n    this.loadedName = 'g_font_error';\n    this.loading = false;\n  }\n  ErrorFont.prototype = {\n    charsToGlyphs: function ErrorFont_charsToGlyphs() {\n      return [];\n    },\n    exportData: function ErrorFont_exportData() {\n      return { error: this.error };\n    }\n  };\n  return ErrorFont;\n}();\nfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n  var charCodeToGlyphId = Object.create(null);\n  var glyphId, charCode, baseEncoding;\n  var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n  if (properties.baseEncodingName) {\n    baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  } else if (isSymbolicFont) {\n    for (charCode in builtInEncoding) {\n      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n    }\n  } else {\n    baseEncoding = _encodings.StandardEncoding;\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  var differences = properties.differences,\n      glyphsUnicodeMap;\n  if (differences) {\n    for (charCode in differences) {\n      var glyphName = differences[charCode];\n      glyphId = glyphNames.indexOf(glyphName);\n      if (glyphId === -1) {\n        if (!glyphsUnicodeMap) {\n          glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        }\n        var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n        if (standardGlyphName !== glyphName) {\n          glyphId = glyphNames.indexOf(standardGlyphName);\n        }\n      }\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  return charCodeToGlyphId;\n}\nvar Type1Font = function Type1FontClosure() {\n  function findBlock(streamBytes, signature, startIndex) {\n    var streamBytesLength = streamBytes.length;\n    var signatureLength = signature.length;\n    var scanLength = streamBytesLength - signatureLength;\n    var i = startIndex,\n        j,\n        found = false;\n    while (i < scanLength) {\n      j = 0;\n      while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n        j++;\n      }\n      if (j >= signatureLength) {\n        i += j;\n        while (i < streamBytesLength && (0, _util.isSpace)(streamBytes[i])) {\n          i++;\n        }\n        found = true;\n        break;\n      }\n      i++;\n    }\n    return {\n      found: found,\n      length: i\n    };\n  }\n  function getHeaderBlock(stream, suggestedLength) {\n    var EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];\n    var streamStartPos = stream.pos;\n    var headerBytes, headerBytesLength, block;\n    try {\n      headerBytes = stream.getBytes(suggestedLength);\n      headerBytesLength = headerBytes.length;\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n    }\n    if (headerBytesLength === suggestedLength) {\n      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n      if (block.found && block.length === suggestedLength) {\n        return {\n          stream: new _stream.Stream(headerBytes),\n          length: suggestedLength\n        };\n      }\n    }\n    (0, _util.warn)('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n    stream.pos = streamStartPos;\n    var SCAN_BLOCK_LENGTH = 2048;\n    var actualLength;\n    while (true) {\n      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n      if (block.length === 0) {\n        break;\n      }\n      stream.pos += block.length;\n      if (block.found) {\n        actualLength = stream.pos - streamStartPos;\n        break;\n      }\n    }\n    stream.pos = streamStartPos;\n    if (actualLength) {\n      return {\n        stream: new _stream.Stream(stream.getBytes(actualLength)),\n        length: actualLength\n      };\n    }\n    (0, _util.warn)('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n    return {\n      stream: new _stream.Stream(stream.getBytes(suggestedLength)),\n      length: suggestedLength\n    };\n  }\n  function getEexecBlock(stream, suggestedLength) {\n    var eexecBytes = stream.getBytes();\n    return {\n      stream: new _stream.Stream(eexecBytes),\n      length: eexecBytes.length\n    };\n  }\n  function Type1Font(name, file, properties) {\n    var PFB_HEADER_SIZE = 6;\n    var headerBlockLength = properties.length1;\n    var eexecBlockLength = properties.length2;\n    var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n    var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n    if (pfbHeaderPresent) {\n      file.skip(PFB_HEADER_SIZE);\n      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var headerBlock = getHeaderBlock(file, headerBlockLength);\n    var headerBlockParser = new _type1_parser.Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n    headerBlockParser.extractFontHeader(properties);\n    if (pfbHeaderPresent) {\n      pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var eexecBlock = getEexecBlock(file, eexecBlockLength);\n    var eexecBlockParser = new _type1_parser.Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n    var data = eexecBlockParser.extractFontProgram();\n    for (var info in data.properties) {\n      properties[info] = data.properties[info];\n    }\n    var charstrings = data.charstrings;\n    var type2Charstrings = this.getType2Charstrings(charstrings);\n    var subrs = this.getType2Subrs(data.subrs);\n    this.charstrings = charstrings;\n    this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n    this.seacs = this.getSeacs(data.charstrings);\n  }\n  Type1Font.prototype = {\n    get numGlyphs() {\n      return this.charstrings.length + 1;\n    },\n    getCharset: function Type1Font_getCharset() {\n      var charset = ['.notdef'];\n      var charstrings = this.charstrings;\n      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        charset.push(charstrings[glyphId].glyphName);\n      }\n      return charset;\n    },\n    getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n      var charstrings = this.charstrings;\n      var glyphNames = ['.notdef'],\n          glyphId;\n      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        glyphNames.push(charstrings[glyphId].glyphName);\n      }\n      var encoding = properties.builtInEncoding;\n      if (encoding) {\n        var builtInEncoding = Object.create(null);\n        for (var charCode in encoding) {\n          glyphId = glyphNames.indexOf(encoding[charCode]);\n          if (glyphId >= 0) {\n            builtInEncoding[charCode] = glyphId;\n          }\n        }\n      }\n      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n    },\n    getSeacs: function Type1Font_getSeacs(charstrings) {\n      var i, ii;\n      var seacMap = [];\n      for (i = 0, ii = charstrings.length; i < ii; i++) {\n        var charstring = charstrings[i];\n        if (charstring.seac) {\n          seacMap[i + 1] = charstring.seac;\n        }\n      }\n      return seacMap;\n    },\n    getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n      var type2Charstrings = [];\n      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n        type2Charstrings.push(type1Charstrings[i].charstring);\n      }\n      return type2Charstrings;\n    },\n    getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n      var bias = 0;\n      var count = type1Subrs.length;\n      if (count < 1133) {\n        bias = 107;\n      } else if (count < 33769) {\n        bias = 1131;\n      } else {\n        bias = 32768;\n      }\n      var type2Subrs = [];\n      var i;\n      for (i = 0; i < bias; i++) {\n        type2Subrs.push([0x0B]);\n      }\n      for (i = 0; i < count; i++) {\n        type2Subrs.push(type1Subrs[i]);\n      }\n      return type2Subrs;\n    },\n    wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n      var cff = new _cff_parser.CFF();\n      cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);\n      cff.names = [name];\n      var topDict = new _cff_parser.CFFTopDict();\n      topDict.setByName('version', 391);\n      topDict.setByName('Notice', 392);\n      topDict.setByName('FullName', 393);\n      topDict.setByName('FamilyName', 394);\n      topDict.setByName('Weight', 395);\n      topDict.setByName('Encoding', null);\n      topDict.setByName('FontMatrix', properties.fontMatrix);\n      topDict.setByName('FontBBox', properties.bbox);\n      topDict.setByName('charset', null);\n      topDict.setByName('CharStrings', null);\n      topDict.setByName('Private', null);\n      cff.topDict = topDict;\n      var strings = new _cff_parser.CFFStrings();\n      strings.add('Version 0.11');\n      strings.add('See original notice');\n      strings.add(name);\n      strings.add(name);\n      strings.add('Medium');\n      cff.strings = strings;\n      cff.globalSubrIndex = new _cff_parser.CFFIndex();\n      var count = glyphs.length;\n      var charsetArray = [0];\n      var i, ii;\n      for (i = 0; i < count; i++) {\n        var index = _cff_parser.CFFStandardStrings.indexOf(charstrings[i].glyphName);\n        if (index === -1) {\n          index = 0;\n        }\n        charsetArray.push(index >> 8 & 0xff, index & 0xff);\n      }\n      cff.charset = new _cff_parser.CFFCharset(false, 0, [], charsetArray);\n      var charStringsIndex = new _cff_parser.CFFIndex();\n      charStringsIndex.add([0x8B, 0x0E]);\n      for (i = 0; i < count; i++) {\n        var glyph = glyphs[i];\n        if (glyph.length === 0) {\n          charStringsIndex.add([0x8B, 0x0E]);\n          continue;\n        }\n        charStringsIndex.add(glyph);\n      }\n      cff.charStrings = charStringsIndex;\n      var privateDict = new _cff_parser.CFFPrivateDict();\n      privateDict.setByName('Subrs', null);\n      var fields = ['BlueValues', 'OtherBlues', 'FamilyBlues', 'FamilyOtherBlues', 'StemSnapH', 'StemSnapV', 'BlueShift', 'BlueFuzz', 'BlueScale', 'LanguageGroup', 'ExpansionFactor', 'ForceBold', 'StdHW', 'StdVW'];\n      for (i = 0, ii = fields.length; i < ii; i++) {\n        var field = fields[i];\n        if (!(field in properties.privateData)) {\n          continue;\n        }\n        var value = properties.privateData[field];\n        if (Array.isArray(value)) {\n          for (var j = value.length - 1; j > 0; j--) {\n            value[j] -= value[j - 1];\n          }\n        }\n        privateDict.setByName(field, value);\n      }\n      cff.topDict.privateDict = privateDict;\n      var subrIndex = new _cff_parser.CFFIndex();\n      for (i = 0, ii = subrs.length; i < ii; i++) {\n        subrIndex.add(subrs[i]);\n      }\n      privateDict.subrsIndex = subrIndex;\n      var compiler = new _cff_parser.CFFCompiler(cff);\n      return compiler.compile();\n    }\n  };\n  return Type1Font;\n}();\nvar CFFFont = function CFFFontClosure() {\n  function CFFFont(file, properties) {\n    this.properties = properties;\n    var parser = new _cff_parser.CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n    this.cff = parser.parse();\n    var compiler = new _cff_parser.CFFCompiler(this.cff);\n    this.seacs = this.cff.seacs;\n    try {\n      this.data = compiler.compile();\n    } catch (e) {\n      (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n      this.data = file;\n    }\n  }\n  CFFFont.prototype = {\n    get numGlyphs() {\n      return this.cff.charStrings.count;\n    },\n    getCharset: function CFFFont_getCharset() {\n      return this.cff.charset.charset;\n    },\n    getGlyphMapping: function CFFFont_getGlyphMapping() {\n      var cff = this.cff;\n      var properties = this.properties;\n      var charsets = cff.charset.charset;\n      var charCodeToGlyphId;\n      var glyphId;\n      if (properties.composite) {\n        charCodeToGlyphId = Object.create(null);\n        if (cff.isCIDFont) {\n          for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n            var cid = charsets[glyphId];\n            var charCode = properties.cMap.charCodeOf(cid);\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        } else {\n          for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n            charCodeToGlyphId[glyphId] = glyphId;\n          }\n        }\n        return charCodeToGlyphId;\n      }\n      var encoding = cff.encoding ? cff.encoding.encoding : null;\n      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n      return charCodeToGlyphId;\n    }\n  };\n  return CFFFont;\n}();\n(function checkSeacSupport() {\n  if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n    exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED = true;\n  }\n})();\n(function checkChromeWindows() {\n  if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n    SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n  }\n})();\nexports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\nexports.PRIVATE_USE_OFFSET_START = PRIVATE_USE_OFFSET_START;\nexports.PRIVATE_USE_OFFSET_END = PRIVATE_USE_OFFSET_END;\nexports.ErrorFont = ErrorFont;\nexports.Font = Font;\nexports.FontFlags = FontFlags;\nexports.ToUnicodeMap = ToUnicodeMap;\nexports.IdentityToUnicodeMap = IdentityToUnicodeMap;\nexports.ProblematicCharRanges = ProblematicCharRanges;\nexports.getFontType = getFontType;\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\nexports.ISOAdobeCharset = ISOAdobeCharset;\nexports.ExpertCharset = ExpertCharset;\nexports.ExpertSubsetCharset = ExpertSubsetCharset;\n\n/***/ }),\n/* 144 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FontRendererFactory = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cff_parser = __w_pdfjs_require__(69);\n\nvar _glyphlist = __w_pdfjs_require__(43);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar FontRendererFactory = function FontRendererFactoryClosure() {\n  function getLong(data, offset) {\n    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n  }\n  function getUshort(data, offset) {\n    return data[offset] << 8 | data[offset + 1];\n  }\n  function parseCmap(data, start, end) {\n    var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n    var format = getUshort(data, start + offset);\n    var ranges, p, i;\n    if (format === 4) {\n      getUshort(data, start + offset + 2);\n      var segCount = getUshort(data, start + offset + 6) >> 1;\n      p = start + offset + 14;\n      ranges = [];\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i] = { end: getUshort(data, p) };\n      }\n      p += 2;\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].start = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].idDelta = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        var idOffset = getUshort(data, p);\n        if (idOffset === 0) {\n          continue;\n        }\n        ranges[i].ids = [];\n        for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n          ranges[i].ids[j] = getUshort(data, p + idOffset);\n          idOffset += 2;\n        }\n      }\n      return ranges;\n    } else if (format === 12) {\n      getLong(data, start + offset + 4);\n      var groups = getLong(data, start + offset + 12);\n      p = start + offset + 16;\n      ranges = [];\n      for (i = 0; i < groups; i++) {\n        ranges.push({\n          start: getLong(data, p),\n          end: getLong(data, p + 4),\n          idDelta: getLong(data, p + 8) - getLong(data, p)\n        });\n        p += 12;\n      }\n      return ranges;\n    }\n    throw new _util.FormatError('unsupported cmap: ' + format);\n  }\n  function parseCff(data, start, end, seacAnalysisEnabled) {\n    var properties = {};\n    var parser = new _cff_parser.CFFParser(new _stream.Stream(data, start, end - start), properties, seacAnalysisEnabled);\n    var cff = parser.parse();\n    return {\n      glyphs: cff.charStrings.objects,\n      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects,\n      isCFFCIDFont: cff.isCIDFont,\n      fdSelect: cff.fdSelect,\n      fdArray: cff.fdArray\n    };\n  }\n  function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n    var itemSize, itemDecode;\n    if (isGlyphLocationsLong) {\n      itemSize = 4;\n      itemDecode = function fontItemDecodeLong(data, offset) {\n        return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n      };\n    } else {\n      itemSize = 2;\n      itemDecode = function fontItemDecode(data, offset) {\n        return data[offset] << 9 | data[offset + 1] << 1;\n      };\n    }\n    var glyphs = [];\n    var startOffset = itemDecode(loca, 0);\n    for (var j = itemSize; j < loca.length; j += itemSize) {\n      var endOffset = itemDecode(loca, j);\n      glyphs.push(glyf.subarray(startOffset, endOffset));\n      startOffset = endOffset;\n    }\n    return glyphs;\n  }\n  function lookupCmap(ranges, unicode) {\n    var code = unicode.charCodeAt(0),\n        gid = 0;\n    var l = 0,\n        r = ranges.length - 1;\n    while (l < r) {\n      var c = l + r + 1 >> 1;\n      if (code < ranges[c].start) {\n        r = c - 1;\n      } else {\n        l = c;\n      }\n    }\n    if (ranges[l].start <= code && code <= ranges[l].end) {\n      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n    }\n    return {\n      charCode: code,\n      glyphId: gid\n    };\n  }\n  function compileGlyf(code, cmds, font) {\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function quadraticCurveTo(xa, ya, x, y) {\n      cmds.push({\n        cmd: 'quadraticCurveTo',\n        args: [xa, ya, x, y]\n      });\n    }\n    var i = 0;\n    var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n    var flags;\n    var x = 0,\n        y = 0;\n    i += 10;\n    if (numberOfContours < 0) {\n      do {\n        flags = code[i] << 8 | code[i + 1];\n        var glyphIndex = code[i + 2] << 8 | code[i + 3];\n        i += 4;\n        var arg1, arg2;\n        if (flags & 0x01) {\n          arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n          arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n          i += 4;\n        } else {\n          arg1 = code[i++];\n          arg2 = code[i++];\n        }\n        if (flags & 0x02) {\n          x = arg1;\n          y = arg2;\n        } else {\n          x = 0;\n          y = 0;\n        }\n        var scaleX = 1,\n            scaleY = 1,\n            scale01 = 0,\n            scale10 = 0;\n        if (flags & 0x08) {\n          scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          i += 2;\n        } else if (flags & 0x40) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          i += 4;\n        } else if (flags & 0x80) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n          scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n          i += 8;\n        }\n        var subglyph = font.glyphs[glyphIndex];\n        if (subglyph) {\n          cmds.push({ cmd: 'save' });\n          cmds.push({\n            cmd: 'transform',\n            args: [scaleX, scale01, scale10, scaleY, x, y]\n          });\n          compileGlyf(subglyph, cmds, font);\n          cmds.push({ cmd: 'restore' });\n        }\n      } while (flags & 0x20);\n    } else {\n      var endPtsOfContours = [];\n      var j, jj;\n      for (j = 0; j < numberOfContours; j++) {\n        endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n        i += 2;\n      }\n      var instructionLength = code[i] << 8 | code[i + 1];\n      i += 2 + instructionLength;\n      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n      var points = [];\n      while (points.length < numberOfPoints) {\n        flags = code[i++];\n        var repeat = 1;\n        if (flags & 0x08) {\n          repeat += code[i++];\n        }\n        while (repeat-- > 0) {\n          points.push({ flags: flags });\n        }\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x12) {\n          case 0x00:\n            x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x02:\n            x -= code[i++];\n            break;\n          case 0x12:\n            x += code[i++];\n            break;\n        }\n        points[j].x = x;\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x24) {\n          case 0x00:\n            y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x04:\n            y -= code[i++];\n            break;\n          case 0x24:\n            y += code[i++];\n            break;\n        }\n        points[j].y = y;\n      }\n      var startPoint = 0;\n      for (i = 0; i < numberOfContours; i++) {\n        var endPoint = endPtsOfContours[i];\n        var contour = points.slice(startPoint, endPoint + 1);\n        if (contour[0].flags & 1) {\n          contour.push(contour[0]);\n        } else if (contour[contour.length - 1].flags & 1) {\n          contour.unshift(contour[contour.length - 1]);\n        } else {\n          var p = {\n            flags: 1,\n            x: (contour[0].x + contour[contour.length - 1].x) / 2,\n            y: (contour[0].y + contour[contour.length - 1].y) / 2\n          };\n          contour.unshift(p);\n          contour.push(p);\n        }\n        moveTo(contour[0].x, contour[0].y);\n        for (j = 1, jj = contour.length; j < jj; j++) {\n          if (contour[j].flags & 1) {\n            lineTo(contour[j].x, contour[j].y);\n          } else if (contour[j + 1].flags & 1) {\n            quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n            j++;\n          } else {\n            quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n          }\n        }\n        startPoint = endPoint + 1;\n      }\n    }\n  }\n  function compileCharString(code, cmds, font, glyphId) {\n    var stack = [];\n    var x = 0,\n        y = 0;\n    var stems = 0;\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function bezierCurveTo(x1, y1, x2, y2, x, y) {\n      cmds.push({\n        cmd: 'bezierCurveTo',\n        args: [x1, y1, x2, y2, x, y]\n      });\n    }\n    function parse(code) {\n      var i = 0;\n      while (i < code.length) {\n        var stackClean = false;\n        var v = code[i++];\n        var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n        switch (v) {\n          case 1:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 3:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 4:\n            y += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 5:\n            while (stack.length > 0) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 6:\n            while (stack.length > 0) {\n              x += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 7:\n            while (stack.length > 0) {\n              y += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              x += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 8:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 10:\n            n = stack.pop();\n            subrCode = null;\n            if (font.isCFFCIDFont) {\n              var fdIndex = font.fdSelect.getFDIndex(glyphId);\n              if (fdIndex >= 0 && fdIndex < font.fdArray.length) {\n                var fontDict = font.fdArray[fdIndex],\n                    subrs = void 0;\n                if (fontDict.privateDict && fontDict.privateDict.subrsIndex) {\n                  subrs = fontDict.privateDict.subrsIndex.objects;\n                }\n                if (subrs) {\n                  var numSubrs = subrs.length;\n                  n += numSubrs < 1240 ? 107 : numSubrs < 33900 ? 1131 : 32768;\n                  subrCode = subrs[n];\n                }\n              } else {\n                (0, _util.warn)('Invalid fd index for glyph index.');\n              }\n            } else {\n              subrCode = font.subrs[n + font.subrsBias];\n            }\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 11:\n            return;\n          case 12:\n            v = code[i++];\n            switch (v) {\n              case 34:\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y1 = y + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y, xb, y1, x, y1);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y, x, y);\n                break;\n              case 35:\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                stack.pop();\n                break;\n              case 36:\n                xa = x + stack.shift();\n                y1 = y + stack.shift();\n                xb = xa + stack.shift();\n                y2 = y1 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y2, x, y2);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y3 = y2 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y2, xb, y3, x, y);\n                break;\n              case 37:\n                var x0 = x,\n                    y0 = y;\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb;\n                y = yb;\n                if (Math.abs(x - x0) > Math.abs(y - y0)) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                break;\n              default:\n                throw new _util.FormatError('unknown operator: 12 ' + v);\n            }\n            break;\n          case 14:\n            if (stack.length >= 4) {\n              var achar = stack.pop();\n              var bchar = stack.pop();\n              y = stack.pop();\n              x = stack.pop();\n              cmds.push({ cmd: 'save' });\n              cmds.push({\n                cmd: 'translate',\n                args: [x, y]\n              });\n              var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font, cmap.glyphId);\n              cmds.push({ cmd: 'restore' });\n              cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font, cmap.glyphId);\n            }\n            return;\n          case 18:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 19:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 20:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 21:\n            y += stack.pop();\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 22:\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 23:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 24:\n            while (stack.length > 2) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            x += stack.shift();\n            y += stack.shift();\n            lineTo(x, y);\n            break;\n          case 25:\n            while (stack.length > 6) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            xa = x + stack.shift();\n            ya = y + stack.shift();\n            xb = xa + stack.shift();\n            yb = ya + stack.shift();\n            x = xb + stack.shift();\n            y = yb + stack.shift();\n            bezierCurveTo(xa, ya, xb, yb, x, y);\n            break;\n          case 26:\n            if (stack.length % 2) {\n              x += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb;\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 27:\n            if (stack.length % 2) {\n              y += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb;\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 28:\n            stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n            i += 2;\n            break;\n          case 29:\n            n = stack.pop() + font.gsubrsBias;\n            subrCode = font.gsubrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 30:\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 31:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          default:\n            if (v < 32) {\n              throw new _util.FormatError('unknown operator: ' + v);\n            }\n            if (v < 247) {\n              stack.push(v - 139);\n            } else if (v < 251) {\n              stack.push((v - 247) * 256 + code[i++] + 108);\n            } else if (v < 255) {\n              stack.push(-(v - 251) * 256 - code[i++] - 108);\n            } else {\n              stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n              i += 4;\n            }\n            break;\n        }\n        if (stackClean) {\n          stack.length = 0;\n        }\n      }\n    }\n    parse(code);\n  }\n  var noop = '';\n  function CompiledFont(fontMatrix) {\n    this.compiledGlyphs = Object.create(null);\n    this.compiledCharCodeToGlyphId = Object.create(null);\n    this.fontMatrix = fontMatrix;\n  }\n  CompiledFont.prototype = {\n    getPathJs: function getPathJs(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      var fn = this.compiledGlyphs[cmap.glyphId];\n      if (!fn) {\n        fn = this.compileGlyph(this.glyphs[cmap.glyphId], cmap.glyphId);\n        this.compiledGlyphs[cmap.glyphId] = fn;\n      }\n      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n        this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n      }\n      return fn;\n    },\n    compileGlyph: function compileGlyph(code, glyphId) {\n      if (!code || code.length === 0 || code[0] === 14) {\n        return noop;\n      }\n      var fontMatrix = this.fontMatrix;\n      if (this.isCFFCIDFont) {\n        var fdIndex = this.fdSelect.getFDIndex(glyphId);\n        if (fdIndex >= 0 && fdIndex < this.fdArray.length) {\n          var fontDict = this.fdArray[fdIndex];\n          fontMatrix = fontDict.getByName('FontMatrix') || _util.FONT_IDENTITY_MATRIX;\n        } else {\n          (0, _util.warn)('Invalid fd index for glyph index.');\n        }\n      }\n      var cmds = [];\n      cmds.push({ cmd: 'save' });\n      cmds.push({\n        cmd: 'transform',\n        args: fontMatrix.slice()\n      });\n      cmds.push({\n        cmd: 'scale',\n        args: ['size', '-size']\n      });\n      this.compileGlyphImpl(code, cmds, glyphId);\n      cmds.push({ cmd: 'restore' });\n      return cmds;\n    },\n    compileGlyphImpl: function compileGlyphImpl() {\n      (0, _util.unreachable)('Children classes should implement this.');\n    },\n    hasBuiltPath: function hasBuiltPath(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n    }\n  };\n  function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n    fontMatrix = fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = glyphs;\n    this.cmap = cmap;\n  }\n  _util.Util.inherit(TrueTypeCompiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileGlyf(code, cmds, this);\n    }\n  });\n  function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n    fontMatrix = fontMatrix || [0.001, 0, 0, 0.001, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = cffInfo.glyphs;\n    this.gsubrs = cffInfo.gsubrs || [];\n    this.subrs = cffInfo.subrs || [];\n    this.cmap = cmap;\n    this.glyphNameMap = glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();\n    this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n    this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n    this.isCFFCIDFont = cffInfo.isCFFCIDFont;\n    this.fdSelect = cffInfo.fdSelect;\n    this.fdArray = cffInfo.fdArray;\n  }\n  _util.Util.inherit(Type2Compiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds, glyphId) {\n      compileCharString(code, cmds, this, glyphId);\n    }\n  });\n  return {\n    create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n      var data = new Uint8Array(font.data);\n      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n      var numTables = getUshort(data, 4);\n      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n        var tag = (0, _util.bytesToString)(data.subarray(p, p + 4));\n        var offset = getLong(data, p + 8);\n        var length = getLong(data, p + 12);\n        switch (tag) {\n          case 'cmap':\n            cmap = parseCmap(data, offset, offset + length);\n            break;\n          case 'glyf':\n            glyf = data.subarray(offset, offset + length);\n            break;\n          case 'loca':\n            loca = data.subarray(offset, offset + length);\n            break;\n          case 'head':\n            unitsPerEm = getUshort(data, offset + 18);\n            indexToLocFormat = getUshort(data, offset + 50);\n            break;\n          case 'CFF ':\n            cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n            break;\n        }\n      }\n      if (glyf) {\n        var fontMatrix = !unitsPerEm ? font.fontMatrix : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];\n        return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n      }\n      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n    }\n  };\n}();\nexports.FontRendererFactory = FontRendererFactory;\n\n/***/ }),\n/* 145 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Type1Parser = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar HINTING_ENABLED = false;\nvar Type1CharString = function Type1CharStringClosure() {\n  var COMMAND_MAP = {\n    'hstem': [1],\n    'vstem': [3],\n    'vmoveto': [4],\n    'rlineto': [5],\n    'hlineto': [6],\n    'vlineto': [7],\n    'rrcurveto': [8],\n    'callsubr': [10],\n    'flex': [12, 35],\n    'drop': [12, 18],\n    'endchar': [14],\n    'rmoveto': [21],\n    'hmoveto': [22],\n    'vhcurveto': [30],\n    'hvcurveto': [31]\n  };\n  function Type1CharString() {\n    this.width = 0;\n    this.lsb = 0;\n    this.flexing = false;\n    this.output = [];\n    this.stack = [];\n  }\n  Type1CharString.prototype = {\n    convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n      var count = encoded.length;\n      var error = false;\n      var wx, sbx, subrNumber;\n      for (var i = 0; i < count; i++) {\n        var value = encoded[i];\n        if (value < 32) {\n          if (value === 12) {\n            value = (value << 8) + encoded[++i];\n          }\n          switch (value) {\n            case 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case 3:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case 4:\n              if (this.flexing) {\n                if (this.stack.length < 1) {\n                  error = true;\n                  break;\n                }\n                var dy = this.stack.pop();\n                this.stack.push(0, dy);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n              break;\n            case 5:\n              error = this.executeCommand(2, COMMAND_MAP.rlineto);\n              break;\n            case 6:\n              error = this.executeCommand(1, COMMAND_MAP.hlineto);\n              break;\n            case 7:\n              error = this.executeCommand(1, COMMAND_MAP.vlineto);\n              break;\n            case 8:\n              error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n              break;\n            case 9:\n              this.stack = [];\n              break;\n            case 10:\n              if (this.stack.length < 1) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              if (!subrs[subrNumber]) {\n                error = true;\n                break;\n              }\n              error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n              break;\n            case 11:\n              return error;\n            case 13:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              wx = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx);\n              error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n              break;\n            case 14:\n              this.output.push(COMMAND_MAP.endchar[0]);\n              break;\n            case 21:\n              if (this.flexing) {\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n              break;\n            case 22:\n              if (this.flexing) {\n                this.stack.push(0);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n              break;\n            case 30:\n              error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n              break;\n            case 31:\n              error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n              break;\n            case (12 << 8) + 0:\n              this.stack = [];\n              break;\n            case (12 << 8) + 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case (12 << 8) + 2:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case (12 << 8) + 6:\n              if (seacAnalysisEnabled) {\n                this.seac = this.stack.splice(-4, 4);\n                error = this.executeCommand(0, COMMAND_MAP.endchar);\n              } else {\n                error = this.executeCommand(4, COMMAND_MAP.endchar);\n              }\n              break;\n            case (12 << 8) + 7:\n              if (this.stack.length < 4) {\n                error = true;\n                break;\n              }\n              this.stack.pop();\n              wx = this.stack.pop();\n              var sby = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx, sby);\n              error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n              break;\n            case (12 << 8) + 12:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              var num2 = this.stack.pop();\n              var num1 = this.stack.pop();\n              this.stack.push(num1 / num2);\n              break;\n            case (12 << 8) + 16:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              var numArgs = this.stack.pop();\n              if (subrNumber === 0 && numArgs === 3) {\n                var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n                this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n                error = this.executeCommand(13, COMMAND_MAP.flex, true);\n                this.flexing = false;\n                this.stack.push(flexArgs[15], flexArgs[16]);\n              } else if (subrNumber === 1 && numArgs === 0) {\n                this.flexing = true;\n              }\n              break;\n            case (12 << 8) + 17:\n              break;\n            case (12 << 8) + 33:\n              this.stack = [];\n              break;\n            default:\n              (0, _util.warn)('Unknown type 1 charstring command of \"' + value + '\"');\n              break;\n          }\n          if (error) {\n            break;\n          }\n          continue;\n        } else if (value <= 246) {\n          value = value - 139;\n        } else if (value <= 250) {\n          value = (value - 247) * 256 + encoded[++i] + 108;\n        } else if (value <= 254) {\n          value = -((value - 251) * 256) - encoded[++i] - 108;\n        } else {\n          value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n        }\n        this.stack.push(value);\n      }\n      return error;\n    },\n    executeCommand: function executeCommand(howManyArgs, command, keepStack) {\n      var stackLength = this.stack.length;\n      if (howManyArgs > stackLength) {\n        return true;\n      }\n      var start = stackLength - howManyArgs;\n      for (var i = start; i < stackLength; i++) {\n        var value = this.stack[i];\n        if (Number.isInteger(value)) {\n          this.output.push(28, value >> 8 & 0xff, value & 0xff);\n        } else {\n          value = 65536 * value | 0;\n          this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n        }\n      }\n      this.output.push.apply(this.output, command);\n      if (keepStack) {\n        this.stack.splice(start, howManyArgs);\n      } else {\n        this.stack.length = 0;\n      }\n      return false;\n    }\n  };\n  return Type1CharString;\n}();\nvar Type1Parser = function Type1ParserClosure() {\n  var EEXEC_ENCRYPT_KEY = 55665;\n  var CHAR_STRS_ENCRYPT_KEY = 4330;\n  function isHexDigit(code) {\n    return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n  }\n  function decrypt(data, key, discardNumber) {\n    if (discardNumber >= data.length) {\n      return new Uint8Array(0);\n    }\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719,\n        i,\n        j;\n    for (i = 0; i < discardNumber; i++) {\n      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    var count = data.length - discardNumber;\n    var decrypted = new Uint8Array(count);\n    for (i = discardNumber, j = 0; j < count; i++, j++) {\n      var value = data[i];\n      decrypted[j] = value ^ r >> 8;\n      r = (value + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    return decrypted;\n  }\n  function decryptAscii(data, key, discardNumber) {\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719;\n    var count = data.length,\n        maybeLength = count >>> 1;\n    var decrypted = new Uint8Array(maybeLength);\n    var i, j;\n    for (i = 0, j = 0; i < count; i++) {\n      var digit1 = data[i];\n      if (!isHexDigit(digit1)) {\n        continue;\n      }\n      i++;\n      var digit2;\n      while (i < count && !isHexDigit(digit2 = data[i])) {\n        i++;\n      }\n      if (i < count) {\n        var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n        decrypted[j++] = value ^ r >> 8;\n        r = (value + r) * c1 + c2 & (1 << 16) - 1;\n      }\n    }\n    return Array.prototype.slice.call(decrypted, discardNumber, j);\n  }\n  function isSpecial(c) {\n    return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n  }\n  function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n    if (encrypted) {\n      var data = stream.getBytes();\n      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n      stream = new _stream.Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n    }\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n    this.stream = stream;\n    this.nextChar();\n  }\n  Type1Parser.prototype = {\n    readNumberArray: function Type1Parser_readNumberArray() {\n      this.getToken();\n      var array = [];\n      while (true) {\n        var token = this.getToken();\n        if (token === null || token === ']' || token === '}') {\n          break;\n        }\n        array.push(parseFloat(token || 0));\n      }\n      return array;\n    },\n    readNumber: function Type1Parser_readNumber() {\n      var token = this.getToken();\n      return parseFloat(token || 0);\n    },\n    readInt: function Type1Parser_readInt() {\n      var token = this.getToken();\n      return parseInt(token || 0, 10) | 0;\n    },\n    readBoolean: function Type1Parser_readBoolean() {\n      var token = this.getToken();\n      return token === 'true' ? 1 : 0;\n    },\n    nextChar: function Type1_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function Type1Parser_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch === -1) {\n          return null;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      if (isSpecial(ch)) {\n        this.nextChar();\n        return String.fromCharCode(ch);\n      }\n      var token = '';\n      do {\n        token += String.fromCharCode(ch);\n        ch = this.nextChar();\n      } while (ch >= 0 && !(0, _util.isSpace)(ch) && !isSpecial(ch));\n      return token;\n    },\n    readCharStrings: function Type1Parser_readCharStrings(bytes, lenIV) {\n      if (lenIV === -1) {\n        return bytes;\n      }\n      return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);\n    },\n    extractFontProgram: function Type1Parser_extractFontProgram() {\n      var stream = this.stream;\n      var subrs = [],\n          charstrings = [];\n      var privateData = Object.create(null);\n      privateData['lenIV'] = 4;\n      var program = {\n        subrs: [],\n        charstrings: [],\n        properties: { 'privateData': privateData }\n      };\n      var token, length, data, lenIV, encoded;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'CharStrings':\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            while (true) {\n              token = this.getToken();\n              if (token === null || token === 'end') {\n                break;\n              }\n              if (token !== '/') {\n                continue;\n              }\n              var glyph = this.getToken();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              charstrings.push({\n                glyph: glyph,\n                encoded: encoded\n              });\n            }\n            break;\n          case 'Subrs':\n            this.readInt();\n            this.getToken();\n            while (this.getToken() === 'dup') {\n              var index = this.readInt();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              subrs[index] = encoded;\n            }\n            break;\n          case 'BlueValues':\n          case 'OtherBlues':\n          case 'FamilyBlues':\n          case 'FamilyOtherBlues':\n            var blueArray = this.readNumberArray();\n            if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n              program.properties.privateData[token] = blueArray;\n            }\n            break;\n          case 'StemSnapH':\n          case 'StemSnapV':\n            program.properties.privateData[token] = this.readNumberArray();\n            break;\n          case 'StdHW':\n          case 'StdVW':\n            program.properties.privateData[token] = this.readNumberArray()[0];\n            break;\n          case 'BlueShift':\n          case 'lenIV':\n          case 'BlueFuzz':\n          case 'BlueScale':\n          case 'LanguageGroup':\n          case 'ExpansionFactor':\n            program.properties.privateData[token] = this.readNumber();\n            break;\n          case 'ForceBold':\n            program.properties.privateData[token] = this.readBoolean();\n            break;\n        }\n      }\n      for (var i = 0; i < charstrings.length; i++) {\n        glyph = charstrings[i].glyph;\n        encoded = charstrings[i].encoded;\n        var charString = new Type1CharString();\n        var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n        var output = charString.output;\n        if (error) {\n          output = [14];\n        }\n        program.charstrings.push({\n          glyphName: glyph,\n          charstring: output,\n          width: charString.width,\n          lsb: charString.lsb,\n          seac: charString.seac\n        });\n      }\n      return program;\n    },\n    extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n      var token;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'FontMatrix':\n            var matrix = this.readNumberArray();\n            properties.fontMatrix = matrix;\n            break;\n          case 'Encoding':\n            var encodingArg = this.getToken();\n            var encoding;\n            if (!/^\\d+$/.test(encodingArg)) {\n              encoding = (0, _encodings.getEncoding)(encodingArg);\n            } else {\n              encoding = [];\n              var size = parseInt(encodingArg, 10) | 0;\n              this.getToken();\n              for (var j = 0; j < size; j++) {\n                token = this.getToken();\n                while (token !== 'dup' && token !== 'def') {\n                  token = this.getToken();\n                  if (token === null) {\n                    return;\n                  }\n                }\n                if (token === 'def') {\n                  break;\n                }\n                var index = this.readInt();\n                this.getToken();\n                var glyph = this.getToken();\n                encoding[index] = glyph;\n                this.getToken();\n              }\n            }\n            properties.builtInEncoding = encoding;\n            break;\n          case 'FontBBox':\n            var fontBBox = this.readNumberArray();\n            properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n            properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n            properties.ascentScaled = true;\n            break;\n        }\n      }\n    }\n  };\n  return Type1Parser;\n}();\nexports.Type1Parser = Type1Parser;\n\n/***/ }),\n/* 146 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTilingPatternIR = exports.Pattern = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar ShadingType = {\n  FUNCTION_BASED: 1,\n  AXIAL: 2,\n  RADIAL: 3,\n  FREE_FORM_MESH: 4,\n  LATTICE_FORM_MESH: 5,\n  COONS_PATCH_MESH: 6,\n  TENSOR_PATCH_MESH: 7\n};\nvar Pattern = function PatternClosure() {\n  function Pattern() {\n    (0, _util.unreachable)('should not call Pattern constructor');\n  }\n  Pattern.prototype = {\n    getPattern: function Pattern_getPattern(ctx) {\n      (0, _util.unreachable)('Should not call Pattern.getStyle: ' + ctx);\n    }\n  };\n  Pattern.parseShading = function (shading, matrix, xref, res, handler, pdfFunctionFactory) {\n    var dict = (0, _primitives.isStream)(shading) ? shading.dict : shading;\n    var type = dict.get('ShadingType');\n    try {\n      switch (type) {\n        case ShadingType.AXIAL:\n        case ShadingType.RADIAL:\n          return new Shadings.RadialAxial(dict, matrix, xref, res, pdfFunctionFactory);\n        case ShadingType.FREE_FORM_MESH:\n        case ShadingType.LATTICE_FORM_MESH:\n        case ShadingType.COONS_PATCH_MESH:\n        case ShadingType.TENSOR_PATCH_MESH:\n          return new Shadings.Mesh(shading, matrix, xref, res, pdfFunctionFactory);\n        default:\n          throw new _util.FormatError('Unsupported ShadingType: ' + type);\n      }\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n      handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.shadingPattern });\n      (0, _util.warn)(ex);\n      return new Shadings.Dummy();\n    }\n  };\n  return Pattern;\n}();\nvar Shadings = {};\nShadings.SMALL_NUMBER = 1e-6;\nShadings.RadialAxial = function RadialAxialClosure() {\n  function RadialAxial(dict, matrix, xref, res, pdfFunctionFactory) {\n    this.matrix = matrix;\n    this.coordsArr = dict.getArray('Coords');\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    var t0 = 0.0,\n        t1 = 1.0;\n    if (dict.has('Domain')) {\n      var domainArr = dict.getArray('Domain');\n      t0 = domainArr[0];\n      t1 = domainArr[1];\n    }\n    var extendStart = false,\n        extendEnd = false;\n    if (dict.has('Extend')) {\n      var extendArr = dict.getArray('Extend');\n      extendStart = extendArr[0];\n      extendEnd = extendArr[1];\n    }\n    if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n      var x1 = this.coordsArr[0];\n      var y1 = this.coordsArr[1];\n      var r1 = this.coordsArr[2];\n      var x2 = this.coordsArr[3];\n      var y2 = this.coordsArr[4];\n      var r2 = this.coordsArr[5];\n      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n      if (r1 <= r2 + distance && r2 <= r1 + distance) {\n        (0, _util.warn)('Unsupported radial gradient.');\n      }\n    }\n    this.extendStart = extendStart;\n    this.extendEnd = extendEnd;\n    var fnObj = dict.get('Function');\n    var fn = pdfFunctionFactory.createFromArray(fnObj);\n    var diff = t1 - t0;\n    var step = diff / 10;\n    var colorStops = this.colorStops = [];\n    if (t0 >= t1 || step <= 0) {\n      (0, _util.info)('Bad shading domain.');\n      return;\n    }\n    var color = new Float32Array(cs.numComps),\n        ratio = new Float32Array(1);\n    var rgbColor;\n    for (var i = t0; i <= t1; i += step) {\n      ratio[0] = i;\n      fn(ratio, 0, color, 0);\n      rgbColor = cs.getRgb(color, 0);\n      var cssColor = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n      colorStops.push([(i - t0) / diff, cssColor]);\n    }\n    var background = 'transparent';\n    if (dict.has('Background')) {\n      rgbColor = cs.getRgb(dict.get('Background'), 0);\n      background = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n    }\n    if (!extendStart) {\n      colorStops.unshift([0, background]);\n      colorStops[1][0] += Shadings.SMALL_NUMBER;\n    }\n    if (!extendEnd) {\n      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n      colorStops.push([1, background]);\n    }\n    this.colorStops = colorStops;\n  }\n  RadialAxial.prototype = {\n    getIR: function RadialAxial_getIR() {\n      var coordsArr = this.coordsArr;\n      var shadingType = this.shadingType;\n      var type, p0, p1, r0, r1;\n      if (shadingType === ShadingType.AXIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[2], coordsArr[3]];\n        r0 = null;\n        r1 = null;\n        type = 'axial';\n      } else if (shadingType === ShadingType.RADIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[3], coordsArr[4]];\n        r0 = coordsArr[2];\n        r1 = coordsArr[5];\n        type = 'radial';\n      } else {\n        (0, _util.unreachable)('getPattern type unknown: ' + shadingType);\n      }\n      var matrix = this.matrix;\n      if (matrix) {\n        p0 = _util.Util.applyTransform(p0, matrix);\n        p1 = _util.Util.applyTransform(p1, matrix);\n        if (shadingType === ShadingType.RADIAL) {\n          var scale = _util.Util.singularValueDecompose2dScale(matrix);\n          r0 *= scale[0];\n          r1 *= scale[1];\n        }\n      }\n      return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\n    }\n  };\n  return RadialAxial;\n}();\nShadings.Mesh = function MeshClosure() {\n  function MeshStreamReader(stream, context) {\n    this.stream = stream;\n    this.context = context;\n    this.buffer = 0;\n    this.bufferLength = 0;\n    var numComps = context.numComps;\n    this.tmpCompsBuf = new Float32Array(numComps);\n    var csNumComps = context.colorSpace.numComps;\n    this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n  }\n  MeshStreamReader.prototype = {\n    get hasData() {\n      if (this.stream.end) {\n        return this.stream.pos < this.stream.end;\n      }\n      if (this.bufferLength > 0) {\n        return true;\n      }\n      var nextByte = this.stream.getByte();\n      if (nextByte < 0) {\n        return false;\n      }\n      this.buffer = nextByte;\n      this.bufferLength = 8;\n      return true;\n    },\n    readBits: function MeshStreamReader_readBits(n) {\n      var buffer = this.buffer;\n      var bufferLength = this.bufferLength;\n      if (n === 32) {\n        if (bufferLength === 0) {\n          return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n        }\n        buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n        var nextByte = this.stream.getByte();\n        this.buffer = nextByte & (1 << bufferLength) - 1;\n        return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n      }\n      if (n === 8 && bufferLength === 0) {\n        return this.stream.getByte();\n      }\n      while (bufferLength < n) {\n        buffer = buffer << 8 | this.stream.getByte();\n        bufferLength += 8;\n      }\n      bufferLength -= n;\n      this.bufferLength = bufferLength;\n      this.buffer = buffer & (1 << bufferLength) - 1;\n      return buffer >> bufferLength;\n    },\n    align: function MeshStreamReader_align() {\n      this.buffer = 0;\n      this.bufferLength = 0;\n    },\n    readFlag: function MeshStreamReader_readFlag() {\n      return this.readBits(this.context.bitsPerFlag);\n    },\n    readCoordinate: function MeshStreamReader_readCoordinate() {\n      var bitsPerCoordinate = this.context.bitsPerCoordinate;\n      var xi = this.readBits(bitsPerCoordinate);\n      var yi = this.readBits(bitsPerCoordinate);\n      var decode = this.context.decode;\n      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n      return [xi * scale * (decode[1] - decode[0]) + decode[0], yi * scale * (decode[3] - decode[2]) + decode[2]];\n    },\n    readComponents: function MeshStreamReader_readComponents() {\n      var numComps = this.context.numComps;\n      var bitsPerComponent = this.context.bitsPerComponent;\n      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n      var decode = this.context.decode;\n      var components = this.tmpCompsBuf;\n      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n        var ci = this.readBits(bitsPerComponent);\n        components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n      }\n      var color = this.tmpCsCompsBuf;\n      if (this.context.colorFn) {\n        this.context.colorFn(components, 0, color, 0);\n      }\n      return this.context.colorSpace.getRgb(color, 0);\n    }\n  };\n  function decodeType4Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var operators = [];\n    var ps = [];\n    var verticesLeft = 0;\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      if (verticesLeft === 0) {\n        if (!(0 <= f && f <= 2)) {\n          throw new _util.FormatError('Unknown type4 flag');\n        }\n        switch (f) {\n          case 0:\n            verticesLeft = 3;\n            break;\n          case 1:\n            ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n          case 2:\n            ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n        }\n        operators.push(f);\n      }\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n      verticesLeft--;\n      reader.align();\n    }\n    mesh.figures.push({\n      type: 'triangles',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps)\n    });\n  }\n  function decodeType5Shading(mesh, reader, verticesPerRow) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = [];\n    while (reader.hasData) {\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n    }\n    mesh.figures.push({\n      type: 'lattice',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps),\n      verticesPerRow: verticesPerRow\n    });\n  }\n  var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n  var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n  var TRIANGLE_DENSITY = 20;\n  var getB = function getBClosure() {\n    function buildB(count) {\n      var lut = [];\n      for (var i = 0; i <= count; i++) {\n        var t = i / count,\n            t_ = 1 - t;\n        lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_, 3 * t * t * t_, t * t * t]));\n      }\n      return lut;\n    }\n    var cache = [];\n    return function getB(count) {\n      if (!cache[count]) {\n        cache[count] = buildB(count);\n      }\n      return cache[count];\n    };\n  }();\n  function buildFigureFromPatch(mesh, index) {\n    var figure = mesh.figures[index];\n    (0, _util.assert)(figure.type === 'patch', 'Unexpected patch mesh figure');\n    var coords = mesh.coords,\n        colors = mesh.colors;\n    var pi = figure.coords;\n    var ci = figure.colors;\n    var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n    splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n    var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n    splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n    var verticesPerRow = splitXBy + 1;\n    var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var k = 0;\n    var cl = new Uint8Array(3),\n        cr = new Uint8Array(3);\n    var c0 = colors[ci[0]],\n        c1 = colors[ci[1]],\n        c2 = colors[ci[2]],\n        c3 = colors[ci[3]];\n    var bRow = getB(splitYBy),\n        bCol = getB(splitXBy);\n    for (var row = 0; row <= splitYBy; row++) {\n      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n      for (var col = 0; col <= splitXBy; col++, k++) {\n        if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n          continue;\n        }\n        var x = 0,\n            y = 0;\n        var q = 0;\n        for (var i = 0; i <= 3; i++) {\n          for (var j = 0; j <= 3; j++, q++) {\n            var m = bRow[row][i] * bCol[col][j];\n            x += coords[pi[q]][0] * m;\n            y += coords[pi[q]][1] * m;\n          }\n        }\n        figureCoords[k] = coords.length;\n        coords.push([x, y]);\n        figureColors[k] = colors.length;\n        var newColor = new Uint8Array(3);\n        newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n        newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n        newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n        colors.push(newColor);\n      }\n    }\n    figureCoords[0] = pi[0];\n    figureColors[0] = ci[0];\n    figureCoords[splitXBy] = pi[3];\n    figureColors[splitXBy] = ci[1];\n    figureCoords[verticesPerRow * splitYBy] = pi[12];\n    figureColors[verticesPerRow * splitYBy] = ci[2];\n    figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n    figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n    mesh.figures[index] = {\n      type: 'lattice',\n      coords: figureCoords,\n      colors: figureColors,\n      verticesPerRow: verticesPerRow\n    };\n  }\n  function decodeType6Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type6 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      ps[5] = coords.length;\n      coords.push([(-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9, (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9]);\n      ps[6] = coords.length;\n      coords.push([(-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9, (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9]);\n      ps[9] = coords.length;\n      coords.push([(-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9, (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9]);\n      ps[10] = coords.length;\n      coords.push([(-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9, (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9]);\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function decodeType7Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type7 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[9] = pi + 13;\n          ps[10] = pi + 14;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[5] = pi + 12;\n          ps[6] = pi + 15;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function updateBounds(mesh) {\n    var minX = mesh.coords[0][0],\n        minY = mesh.coords[0][1],\n        maxX = minX,\n        maxY = minY;\n    for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n      var x = mesh.coords[i][0],\n          y = mesh.coords[i][1];\n      minX = minX > x ? x : minX;\n      minY = minY > y ? y : minY;\n      maxX = maxX < x ? x : maxX;\n      maxY = maxY < y ? y : maxY;\n    }\n    mesh.bounds = [minX, minY, maxX, maxY];\n  }\n  function packData(mesh) {\n    var i, ii, j, jj;\n    var coords = mesh.coords;\n    var coordsPacked = new Float32Array(coords.length * 2);\n    for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n      var xy = coords[i];\n      coordsPacked[j++] = xy[0];\n      coordsPacked[j++] = xy[1];\n    }\n    mesh.coords = coordsPacked;\n    var colors = mesh.colors;\n    var colorsPacked = new Uint8Array(colors.length * 3);\n    for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n      var c = colors[i];\n      colorsPacked[j++] = c[0];\n      colorsPacked[j++] = c[1];\n      colorsPacked[j++] = c[2];\n    }\n    mesh.colors = colorsPacked;\n    var figures = mesh.figures;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n          ps = figure.coords,\n          cs = figure.colors;\n      for (j = 0, jj = ps.length; j < jj; j++) {\n        ps[j] *= 2;\n        cs[j] *= 3;\n      }\n    }\n  }\n  function Mesh(stream, matrix, xref, res, pdfFunctionFactory) {\n    if (!(0, _primitives.isStream)(stream)) {\n      throw new _util.FormatError('Mesh data is not a stream');\n    }\n    var dict = stream.dict;\n    this.matrix = matrix;\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    this.bbox = dict.getArray('BBox');\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n    var fnObj = dict.get('Function');\n    var fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;\n    this.coords = [];\n    this.colors = [];\n    this.figures = [];\n    var decodeContext = {\n      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n      bitsPerComponent: dict.get('BitsPerComponent'),\n      bitsPerFlag: dict.get('BitsPerFlag'),\n      decode: dict.getArray('Decode'),\n      colorFn: fn,\n      colorSpace: cs,\n      numComps: fn ? 1 : cs.numComps\n    };\n    var reader = new MeshStreamReader(stream, decodeContext);\n    var patchMesh = false;\n    switch (this.shadingType) {\n      case ShadingType.FREE_FORM_MESH:\n        decodeType4Shading(this, reader);\n        break;\n      case ShadingType.LATTICE_FORM_MESH:\n        var verticesPerRow = dict.get('VerticesPerRow') | 0;\n        if (verticesPerRow < 2) {\n          throw new _util.FormatError('Invalid VerticesPerRow');\n        }\n        decodeType5Shading(this, reader, verticesPerRow);\n        break;\n      case ShadingType.COONS_PATCH_MESH:\n        decodeType6Shading(this, reader);\n        patchMesh = true;\n        break;\n      case ShadingType.TENSOR_PATCH_MESH:\n        decodeType7Shading(this, reader);\n        patchMesh = true;\n        break;\n      default:\n        (0, _util.unreachable)('Unsupported mesh type.');\n        break;\n    }\n    if (patchMesh) {\n      updateBounds(this);\n      for (var i = 0, ii = this.figures.length; i < ii; i++) {\n        buildFigureFromPatch(this, i);\n      }\n    }\n    updateBounds(this);\n    packData(this);\n  }\n  Mesh.prototype = {\n    getIR: function Mesh_getIR() {\n      return ['Mesh', this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.matrix, this.bbox, this.background];\n    }\n  };\n  return Mesh;\n}();\nShadings.Dummy = function DummyClosure() {\n  function Dummy() {\n    this.type = 'Pattern';\n  }\n  Dummy.prototype = {\n    getIR: function Dummy_getIR() {\n      return ['Dummy'];\n    }\n  };\n  return Dummy;\n}();\nfunction getTilingPatternIR(operatorList, dict, args) {\n  var matrix = dict.getArray('Matrix');\n  var bbox = _util.Util.normalizeRect(dict.getArray('BBox'));\n  var xstep = dict.get('XStep');\n  var ystep = dict.get('YStep');\n  var paintType = dict.get('PaintType');\n  var tilingType = dict.get('TilingType');\n  if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {\n    throw new _util.FormatError('Invalid getTilingPatternIR /BBox array: [' + bbox + '].');\n  }\n  return ['TilingPattern', args, operatorList, matrix, bbox, xstep, ystep, paintType, tilingType];\n}\nexports.Pattern = Pattern;\nexports.getTilingPatternIR = getTilingPatternIR;\n\n/***/ }),\n/* 147 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bidi = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar baseTypes = ['BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S', 'WS', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'ON', 'ES', 'CS', 'ES', 'CS', 'CS', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'CS', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'CS', 'ON', 'ET', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON', 'ON', 'BN', 'ON', 'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON', 'EN', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'];\nvar arabicTypes = ['AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ON', 'ON', 'AL', 'ET', 'ET', 'AL', 'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', '', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'NSM', 'NSM', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'];\nfunction isOdd(i) {\n  return (i & 1) !== 0;\n}\nfunction isEven(i) {\n  return (i & 1) === 0;\n}\nfunction findUnequal(arr, start, value) {\n  for (var j = start, jj = arr.length; j < jj; ++j) {\n    if (arr[j] !== value) {\n      return j;\n    }\n  }\n  return j;\n}\nfunction setValues(arr, start, end, value) {\n  for (var j = start; j < end; ++j) {\n    arr[j] = value;\n  }\n}\nfunction reverseValues(arr, start, end) {\n  for (var i = start, j = end - 1; i < j; ++i, --j) {\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n}\nfunction createBidiText(str, isLTR, vertical) {\n  return {\n    str: str,\n    dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n  };\n}\nvar chars = [];\nvar types = [];\nfunction bidi(str, startLevel, vertical) {\n  var isLTR = true;\n  var strLength = str.length;\n  if (strLength === 0 || vertical) {\n    return createBidiText(str, isLTR, vertical);\n  }\n  chars.length = strLength;\n  types.length = strLength;\n  var numBidi = 0;\n  var i, ii;\n  for (i = 0; i < strLength; ++i) {\n    chars[i] = str.charAt(i);\n    var charCode = str.charCodeAt(i);\n    var charType = 'L';\n    if (charCode <= 0x00ff) {\n      charType = baseTypes[charCode];\n    } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n      charType = 'R';\n    } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n      charType = arabicTypes[charCode & 0xff];\n      if (!charType) {\n        (0, _util.warn)('Bidi: invalid Unicode character ' + charCode.toString(16));\n      }\n    } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n      charType = 'AL';\n    }\n    if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n      numBidi++;\n    }\n    types[i] = charType;\n  }\n  if (numBidi === 0) {\n    isLTR = true;\n    return createBidiText(str, isLTR);\n  }\n  if (startLevel === -1) {\n    if (numBidi / strLength < 0.3) {\n      isLTR = true;\n      startLevel = 0;\n    } else {\n      isLTR = false;\n      startLevel = 1;\n    }\n  }\n  var levels = [];\n  for (i = 0; i < strLength; ++i) {\n    levels[i] = startLevel;\n  }\n  var e = isOdd(startLevel) ? 'R' : 'L';\n  var sor = e;\n  var eor = sor;\n  var lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'NSM') {\n      types[i] = lastType;\n    } else {\n      lastType = types[i];\n    }\n  }\n  lastType = sor;\n  var t;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'AL' ? 'AN' : 'EN';\n    } else if (t === 'R' || t === 'L' || t === 'AL') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'AL') {\n      types[i] = 'R';\n    }\n  }\n  for (i = 1; i < strLength - 1; ++i) {\n    if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n      types[i] = 'EN';\n    }\n    if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n      types[i] = types[i - 1];\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'EN') {\n      var j;\n      for (j = i - 1; j >= 0; --j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n      for (j = i + 1; j < strLength; ++j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n      types[i] = 'ON';\n    }\n  }\n  lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'L' ? 'L' : 'EN';\n    } else if (t === 'R' || t === 'L') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      var end = findUnequal(types, i + 1, 'ON');\n      var before = sor;\n      if (i > 0) {\n        before = types[i - 1];\n      }\n      var after = eor;\n      if (end + 1 < strLength) {\n        after = types[end + 1];\n      }\n      if (before !== 'L') {\n        before = 'R';\n      }\n      if (after !== 'L') {\n        after = 'R';\n      }\n      if (before === after) {\n        setValues(types, i, end, before);\n      }\n      i = end - 1;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      types[i] = e;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (isEven(levels[i])) {\n      if (t === 'R') {\n        levels[i] += 1;\n      } else if (t === 'AN' || t === 'EN') {\n        levels[i] += 2;\n      }\n    } else {\n      if (t === 'L' || t === 'AN' || t === 'EN') {\n        levels[i] += 1;\n      }\n    }\n  }\n  var highestLevel = -1;\n  var lowestOddLevel = 99;\n  var level;\n  for (i = 0, ii = levels.length; i < ii; ++i) {\n    level = levels[i];\n    if (highestLevel < level) {\n      highestLevel = level;\n    }\n    if (lowestOddLevel > level && isOdd(level)) {\n      lowestOddLevel = level;\n    }\n  }\n  for (level = highestLevel; level >= lowestOddLevel; --level) {\n    var start = -1;\n    for (i = 0, ii = levels.length; i < ii; ++i) {\n      if (levels[i] < level) {\n        if (start >= 0) {\n          reverseValues(chars, start, i);\n          start = -1;\n        }\n      } else if (start < 0) {\n        start = i;\n      }\n    }\n    if (start >= 0) {\n      reverseValues(chars, start, levels.length);\n    }\n  }\n  for (i = 0, ii = chars.length; i < ii; ++i) {\n    var ch = chars[i];\n    if (ch === '<' || ch === '>') {\n      chars[i] = '';\n    }\n  }\n  return createBidiText(chars.join(''), isLTR);\n}\nexports.bidi = bidi;\n\n/***/ }),\n/* 148 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMetrics = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar getMetrics = (0, _util.getLookupTableFactory)(function (t) {\n  t['Courier'] = 600;\n  t['Courier-Bold'] = 600;\n  t['Courier-BoldOblique'] = 600;\n  t['Courier-Oblique'] = 600;\n  t['Helvetica'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-BoldOblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Oblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Symbol'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['universal'] = 713;\n    t['numbersign'] = 500;\n    t['existential'] = 549;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['suchthat'] = 439;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asteriskmath'] = 500;\n    t['plus'] = 549;\n    t['comma'] = 250;\n    t['minus'] = 549;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 549;\n    t['equal'] = 549;\n    t['greater'] = 549;\n    t['question'] = 444;\n    t['congruent'] = 549;\n    t['Alpha'] = 722;\n    t['Beta'] = 667;\n    t['Chi'] = 722;\n    t['Delta'] = 612;\n    t['Epsilon'] = 611;\n    t['Phi'] = 763;\n    t['Gamma'] = 603;\n    t['Eta'] = 722;\n    t['Iota'] = 333;\n    t['theta1'] = 631;\n    t['Kappa'] = 722;\n    t['Lambda'] = 686;\n    t['Mu'] = 889;\n    t['Nu'] = 722;\n    t['Omicron'] = 722;\n    t['Pi'] = 768;\n    t['Theta'] = 741;\n    t['Rho'] = 556;\n    t['Sigma'] = 592;\n    t['Tau'] = 611;\n    t['Upsilon'] = 690;\n    t['sigma1'] = 439;\n    t['Omega'] = 768;\n    t['Xi'] = 645;\n    t['Psi'] = 795;\n    t['Zeta'] = 611;\n    t['bracketleft'] = 333;\n    t['therefore'] = 863;\n    t['bracketright'] = 333;\n    t['perpendicular'] = 658;\n    t['underscore'] = 500;\n    t['radicalex'] = 500;\n    t['alpha'] = 631;\n    t['beta'] = 549;\n    t['chi'] = 549;\n    t['delta'] = 494;\n    t['epsilon'] = 439;\n    t['phi'] = 521;\n    t['gamma'] = 411;\n    t['eta'] = 603;\n    t['iota'] = 329;\n    t['phi1'] = 603;\n    t['kappa'] = 549;\n    t['lambda'] = 549;\n    t['mu'] = 576;\n    t['nu'] = 521;\n    t['omicron'] = 549;\n    t['pi'] = 549;\n    t['theta'] = 521;\n    t['rho'] = 549;\n    t['sigma'] = 603;\n    t['tau'] = 439;\n    t['upsilon'] = 576;\n    t['omega1'] = 713;\n    t['omega'] = 686;\n    t['xi'] = 493;\n    t['psi'] = 686;\n    t['zeta'] = 494;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['similar'] = 549;\n    t['Euro'] = 750;\n    t['Upsilon1'] = 620;\n    t['minute'] = 247;\n    t['lessequal'] = 549;\n    t['fraction'] = 167;\n    t['infinity'] = 713;\n    t['florin'] = 500;\n    t['club'] = 753;\n    t['diamond'] = 753;\n    t['heart'] = 753;\n    t['spade'] = 753;\n    t['arrowboth'] = 1042;\n    t['arrowleft'] = 987;\n    t['arrowup'] = 603;\n    t['arrowright'] = 987;\n    t['arrowdown'] = 603;\n    t['degree'] = 400;\n    t['plusminus'] = 549;\n    t['second'] = 411;\n    t['greaterequal'] = 549;\n    t['multiply'] = 549;\n    t['proportional'] = 713;\n    t['partialdiff'] = 494;\n    t['bullet'] = 460;\n    t['divide'] = 549;\n    t['notequal'] = 549;\n    t['equivalence'] = 549;\n    t['approxequal'] = 549;\n    t['ellipsis'] = 1000;\n    t['arrowvertex'] = 603;\n    t['arrowhorizex'] = 1000;\n    t['carriagereturn'] = 658;\n    t['aleph'] = 823;\n    t['Ifraktur'] = 686;\n    t['Rfraktur'] = 795;\n    t['weierstrass'] = 987;\n    t['circlemultiply'] = 768;\n    t['circleplus'] = 768;\n    t['emptyset'] = 823;\n    t['intersection'] = 768;\n    t['union'] = 768;\n    t['propersuperset'] = 713;\n    t['reflexsuperset'] = 713;\n    t['notsubset'] = 713;\n    t['propersubset'] = 713;\n    t['reflexsubset'] = 713;\n    t['element'] = 713;\n    t['notelement'] = 713;\n    t['angle'] = 768;\n    t['gradient'] = 713;\n    t['registerserif'] = 790;\n    t['copyrightserif'] = 790;\n    t['trademarkserif'] = 890;\n    t['product'] = 823;\n    t['radical'] = 549;\n    t['dotmath'] = 250;\n    t['logicalnot'] = 713;\n    t['logicaland'] = 603;\n    t['logicalor'] = 603;\n    t['arrowdblboth'] = 1042;\n    t['arrowdblleft'] = 987;\n    t['arrowdblup'] = 603;\n    t['arrowdblright'] = 987;\n    t['arrowdbldown'] = 603;\n    t['lozenge'] = 494;\n    t['angleleft'] = 329;\n    t['registersans'] = 790;\n    t['copyrightsans'] = 790;\n    t['trademarksans'] = 786;\n    t['summation'] = 713;\n    t['parenlefttp'] = 384;\n    t['parenleftex'] = 384;\n    t['parenleftbt'] = 384;\n    t['bracketlefttp'] = 384;\n    t['bracketleftex'] = 384;\n    t['bracketleftbt'] = 384;\n    t['bracelefttp'] = 494;\n    t['braceleftmid'] = 494;\n    t['braceleftbt'] = 494;\n    t['braceex'] = 494;\n    t['angleright'] = 329;\n    t['integral'] = 274;\n    t['integraltp'] = 686;\n    t['integralex'] = 686;\n    t['integralbt'] = 686;\n    t['parenrighttp'] = 384;\n    t['parenrightex'] = 384;\n    t['parenrightbt'] = 384;\n    t['bracketrighttp'] = 384;\n    t['bracketrightex'] = 384;\n    t['bracketrightbt'] = 384;\n    t['bracerighttp'] = 494;\n    t['bracerightmid'] = 494;\n    t['bracerightbt'] = 494;\n    t['apple'] = 790;\n  });\n  t['Times-Roman'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 408;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 564;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 564;\n    t['equal'] = 564;\n    t['greater'] = 564;\n    t['question'] = 444;\n    t['at'] = 921;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 556;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 389;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 556;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 944;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 469;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 444;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 333;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 180;\n    t['quotedblleft'] = 444;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 453;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 444;\n    t['quotedblright'] = 444;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 444;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 889;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 444;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 564;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 444;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 444;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 444;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 444;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 444;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 444;\n    t['Amacron'] = 722;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 556;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 588;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 564;\n    t['uacute'] = 500;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 444;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 333;\n    t['plusminus'] = 564;\n    t['brokenbar'] = 200;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 333;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 326;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 444;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 344;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 564;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 564;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 1000;\n    t['ampersand'] = 833;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 930;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 778;\n    t['L'] = 667;\n    t['M'] = 944;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 611;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 556;\n    t['T'] = 667;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 1000;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 667;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 581;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 556;\n    t['c'] = 444;\n    t['d'] = 556;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 333;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 444;\n    t['s'] = 389;\n    t['t'] = 333;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 394;\n    t['bar'] = 220;\n    t['braceright'] = 394;\n    t['asciitilde'] = 520;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 540;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 300;\n    t['Lslash'] = 667;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 330;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 556;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 570;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 667;\n    t['Cacute'] = 722;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 722;\n    t['rcaron'] = 444;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 667;\n    t['Thorn'] = 611;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 556;\n    t['dcaron'] = 672;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 667;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 444;\n    t['omacron'] = 500;\n    t['Zacute'] = 667;\n    t['Zcaron'] = 667;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 416;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 394;\n    t['Kcommaaccent'] = 778;\n    t['Lacute'] = 667;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 667;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 444;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 667;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 570;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 570;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-BoldItalic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 389;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 832;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 667;\n    t['G'] = 722;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 889;\n    t['X'] = 667;\n    t['Y'] = 611;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 570;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 500;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 348;\n    t['bar'] = 220;\n    t['braceright'] = 348;\n    t['asciitilde'] = 570;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 500;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 944;\n    t['ordfeminine'] = 266;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 300;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 611;\n    t['divide'] = 570;\n    t['Yacute'] = 611;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 667;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 608;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 366;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 576;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 382;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 606;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 606;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Italic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 420;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 675;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 675;\n    t['equal'] = 675;\n    t['greater'] = 675;\n    t['question'] = 500;\n    t['at'] = 920;\n    t['A'] = 611;\n    t['B'] = 611;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 611;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 444;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 667;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 611;\n    t['S'] = 500;\n    t['T'] = 556;\n    t['U'] = 722;\n    t['V'] = 611;\n    t['W'] = 833;\n    t['X'] = 611;\n    t['Y'] = 556;\n    t['Z'] = 556;\n    t['bracketleft'] = 389;\n    t['backslash'] = 278;\n    t['bracketright'] = 389;\n    t['asciicircum'] = 422;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 278;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 444;\n    t['l'] = 278;\n    t['m'] = 722;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 444;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 400;\n    t['bar'] = 275;\n    t['braceright'] = 400;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 214;\n    t['quotedblleft'] = 556;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 523;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 556;\n    t['quotedblright'] = 556;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 889;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 889;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 556;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 667;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 556;\n    t['divide'] = 675;\n    t['Yacute'] = 556;\n    t['Acircumflex'] = 611;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 667;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 556;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 611;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 611;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 556;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 611;\n    t['Sacute'] = 500;\n    t['dcaron'] = 544;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 611;\n    t['Abreve'] = 611;\n    t['multiply'] = 675;\n    t['uacute'] = 500;\n    t['Tcaron'] = 556;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 667;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 667;\n    t['Iacute'] = 333;\n    t['plusminus'] = 675;\n    t['brokenbar'] = 275;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 556;\n    t['Zcaron'] = 556;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 300;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 611;\n    t['Adieresis'] = 611;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 500;\n    t['lcaron'] = 300;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 500;\n    t['Scommaaccent'] = 500;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 667;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 611;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 611;\n    t['Aogonek'] = 611;\n    t['Aring'] = 611;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 444;\n    t['minus'] = 675;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 675;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['ZapfDingbats'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['a1'] = 974;\n    t['a2'] = 961;\n    t['a202'] = 974;\n    t['a3'] = 980;\n    t['a4'] = 719;\n    t['a5'] = 789;\n    t['a119'] = 790;\n    t['a118'] = 791;\n    t['a117'] = 690;\n    t['a11'] = 960;\n    t['a12'] = 939;\n    t['a13'] = 549;\n    t['a14'] = 855;\n    t['a15'] = 911;\n    t['a16'] = 933;\n    t['a105'] = 911;\n    t['a17'] = 945;\n    t['a18'] = 974;\n    t['a19'] = 755;\n    t['a20'] = 846;\n    t['a21'] = 762;\n    t['a22'] = 761;\n    t['a23'] = 571;\n    t['a24'] = 677;\n    t['a25'] = 763;\n    t['a26'] = 760;\n    t['a27'] = 759;\n    t['a28'] = 754;\n    t['a6'] = 494;\n    t['a7'] = 552;\n    t['a8'] = 537;\n    t['a9'] = 577;\n    t['a10'] = 692;\n    t['a29'] = 786;\n    t['a30'] = 788;\n    t['a31'] = 788;\n    t['a32'] = 790;\n    t['a33'] = 793;\n    t['a34'] = 794;\n    t['a35'] = 816;\n    t['a36'] = 823;\n    t['a37'] = 789;\n    t['a38'] = 841;\n    t['a39'] = 823;\n    t['a40'] = 833;\n    t['a41'] = 816;\n    t['a42'] = 831;\n    t['a43'] = 923;\n    t['a44'] = 744;\n    t['a45'] = 723;\n    t['a46'] = 749;\n    t['a47'] = 790;\n    t['a48'] = 792;\n    t['a49'] = 695;\n    t['a50'] = 776;\n    t['a51'] = 768;\n    t['a52'] = 792;\n    t['a53'] = 759;\n    t['a54'] = 707;\n    t['a55'] = 708;\n    t['a56'] = 682;\n    t['a57'] = 701;\n    t['a58'] = 826;\n    t['a59'] = 815;\n    t['a60'] = 789;\n    t['a61'] = 789;\n    t['a62'] = 707;\n    t['a63'] = 687;\n    t['a64'] = 696;\n    t['a65'] = 689;\n    t['a66'] = 786;\n    t['a67'] = 787;\n    t['a68'] = 713;\n    t['a69'] = 791;\n    t['a70'] = 785;\n    t['a71'] = 791;\n    t['a72'] = 873;\n    t['a73'] = 761;\n    t['a74'] = 762;\n    t['a203'] = 762;\n    t['a75'] = 759;\n    t['a204'] = 759;\n    t['a76'] = 892;\n    t['a77'] = 892;\n    t['a78'] = 788;\n    t['a79'] = 784;\n    t['a81'] = 438;\n    t['a82'] = 138;\n    t['a83'] = 277;\n    t['a84'] = 415;\n    t['a97'] = 392;\n    t['a98'] = 392;\n    t['a99'] = 668;\n    t['a100'] = 668;\n    t['a89'] = 390;\n    t['a90'] = 390;\n    t['a93'] = 317;\n    t['a94'] = 317;\n    t['a91'] = 276;\n    t['a92'] = 276;\n    t['a205'] = 509;\n    t['a85'] = 509;\n    t['a206'] = 410;\n    t['a86'] = 410;\n    t['a87'] = 234;\n    t['a88'] = 234;\n    t['a95'] = 334;\n    t['a96'] = 334;\n    t['a101'] = 732;\n    t['a102'] = 544;\n    t['a103'] = 544;\n    t['a104'] = 910;\n    t['a106'] = 667;\n    t['a107'] = 760;\n    t['a108'] = 760;\n    t['a112'] = 776;\n    t['a111'] = 595;\n    t['a110'] = 694;\n    t['a109'] = 626;\n    t['a120'] = 788;\n    t['a121'] = 788;\n    t['a122'] = 788;\n    t['a123'] = 788;\n    t['a124'] = 788;\n    t['a125'] = 788;\n    t['a126'] = 788;\n    t['a127'] = 788;\n    t['a128'] = 788;\n    t['a129'] = 788;\n    t['a130'] = 788;\n    t['a131'] = 788;\n    t['a132'] = 788;\n    t['a133'] = 788;\n    t['a134'] = 788;\n    t['a135'] = 788;\n    t['a136'] = 788;\n    t['a137'] = 788;\n    t['a138'] = 788;\n    t['a139'] = 788;\n    t['a140'] = 788;\n    t['a141'] = 788;\n    t['a142'] = 788;\n    t['a143'] = 788;\n    t['a144'] = 788;\n    t['a145'] = 788;\n    t['a146'] = 788;\n    t['a147'] = 788;\n    t['a148'] = 788;\n    t['a149'] = 788;\n    t['a150'] = 788;\n    t['a151'] = 788;\n    t['a152'] = 788;\n    t['a153'] = 788;\n    t['a154'] = 788;\n    t['a155'] = 788;\n    t['a156'] = 788;\n    t['a157'] = 788;\n    t['a158'] = 788;\n    t['a159'] = 788;\n    t['a160'] = 894;\n    t['a161'] = 838;\n    t['a163'] = 1016;\n    t['a164'] = 458;\n    t['a196'] = 748;\n    t['a165'] = 924;\n    t['a192'] = 748;\n    t['a166'] = 918;\n    t['a167'] = 927;\n    t['a168'] = 928;\n    t['a169'] = 928;\n    t['a170'] = 834;\n    t['a171'] = 873;\n    t['a172'] = 828;\n    t['a173'] = 924;\n    t['a162'] = 924;\n    t['a174'] = 917;\n    t['a175'] = 930;\n    t['a176'] = 931;\n    t['a177'] = 463;\n    t['a178'] = 883;\n    t['a179'] = 836;\n    t['a193'] = 836;\n    t['a180'] = 867;\n    t['a199'] = 867;\n    t['a181'] = 696;\n    t['a200'] = 696;\n    t['a182'] = 874;\n    t['a201'] = 874;\n    t['a183'] = 760;\n    t['a184'] = 946;\n    t['a197'] = 771;\n    t['a185'] = 865;\n    t['a194'] = 771;\n    t['a198'] = 888;\n    t['a186'] = 967;\n    t['a195'] = 888;\n    t['a187'] = 831;\n    t['a188'] = 873;\n    t['a189'] = 927;\n    t['a190'] = 970;\n    t['a191'] = 918;\n  });\n});\nexports.getMetrics = getMetrics;\n\n/***/ }),\n/* 149 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptParser = exports.PostScriptLexer = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar PostScriptParser = function PostScriptParserClosure() {\n  function PostScriptParser(lexer) {\n    this.lexer = lexer;\n    this.operators = [];\n    this.token = null;\n    this.prev = null;\n  }\n  PostScriptParser.prototype = {\n    nextToken: function PostScriptParser_nextToken() {\n      this.prev = this.token;\n      this.token = this.lexer.getToken();\n    },\n    accept: function PostScriptParser_accept(type) {\n      if (this.token.type === type) {\n        this.nextToken();\n        return true;\n      }\n      return false;\n    },\n    expect: function PostScriptParser_expect(type) {\n      if (this.accept(type)) {\n        return true;\n      }\n      throw new _util.FormatError('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n    },\n    parse: function PostScriptParser_parse() {\n      this.nextToken();\n      this.expect(PostScriptTokenTypes.LBRACE);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      return this.operators;\n    },\n    parseBlock: function PostScriptParser_parseBlock() {\n      while (true) {\n        if (this.accept(PostScriptTokenTypes.NUMBER)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n          this.parseCondition();\n        } else {\n          return;\n        }\n      }\n    },\n    parseCondition: function PostScriptParser_parseCondition() {\n      var conditionLocation = this.operators.length;\n      this.operators.push(null, null);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      if (this.accept(PostScriptTokenTypes.IF)) {\n        this.operators[conditionLocation] = this.operators.length;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n        var jumpLocation = this.operators.length;\n        this.operators.push(null, null);\n        var endOfTrue = this.operators.length;\n        this.parseBlock();\n        this.expect(PostScriptTokenTypes.RBRACE);\n        this.expect(PostScriptTokenTypes.IFELSE);\n        this.operators[jumpLocation] = this.operators.length;\n        this.operators[jumpLocation + 1] = 'j';\n        this.operators[conditionLocation] = endOfTrue;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else {\n        throw new _util.FormatError('PS Function: error parsing conditional.');\n      }\n    }\n  };\n  return PostScriptParser;\n}();\nvar PostScriptTokenTypes = {\n  LBRACE: 0,\n  RBRACE: 1,\n  NUMBER: 2,\n  OPERATOR: 3,\n  IF: 4,\n  IFELSE: 5\n};\nvar PostScriptToken = function PostScriptTokenClosure() {\n  function PostScriptToken(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n  var opCache = Object.create(null);\n  PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n    var opValue = opCache[op];\n    if (opValue) {\n      return opValue;\n    }\n    return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n  };\n  PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n  PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n  PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n  PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n  return PostScriptToken;\n}();\nvar PostScriptLexer = function PostScriptLexerClosure() {\n  function PostScriptLexer(stream) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n  }\n  PostScriptLexer.prototype = {\n    nextChar: function PostScriptLexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function PostScriptLexer_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n        case 0x7B:\n          this.nextChar();\n          return PostScriptToken.LBRACE;\n        case 0x7D:\n          this.nextChar();\n          return PostScriptToken.RBRACE;\n      }\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n        strBuf.push(String.fromCharCode(ch));\n      }\n      var str = strBuf.join('');\n      switch (str.toLowerCase()) {\n        case 'if':\n          return PostScriptToken.IF;\n        case 'ifelse':\n          return PostScriptToken.IFELSE;\n        default:\n          return PostScriptToken.getOperator(str);\n      }\n    },\n    getNumber: function PostScriptLexer_getNumber() {\n      var ch = this.currentChar;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0) {\n        if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n          strBuf.push(String.fromCharCode(ch));\n        } else {\n          break;\n        }\n      }\n      var value = parseFloat(strBuf.join(''));\n      if (isNaN(value)) {\n        throw new _util.FormatError('Invalid floating point number: ' + value);\n      }\n      return value;\n    }\n  };\n  return PostScriptLexer;\n}();\nexports.PostScriptLexer = PostScriptLexer;\nexports.PostScriptParser = PostScriptParser;\n\n/***/ }),\n/* 150 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MurmurHash3_64 = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n  var MASK_HIGH = 0xffff0000;\n  var MASK_LOW = 0xffff;\n  function MurmurHash3_64(seed) {\n    var SEED = 0xc3d2e1f0;\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n  MurmurHash3_64.prototype = {\n    update: function MurmurHash3_64_update(input) {\n      var data = void 0,\n          length = void 0;\n      if ((0, _util.isString)(input)) {\n        data = new Uint8Array(input.length * 2);\n        length = 0;\n        for (var i = 0, ii = input.length; i < ii; i++) {\n          var code = input.charCodeAt(i);\n          if (code <= 0xff) {\n            data[length++] = code;\n          } else {\n            data[length++] = code >>> 8;\n            data[length++] = code & 0xff;\n          }\n        }\n      } else if ((0, _util.isArrayBuffer)(input)) {\n        data = input;\n        length = data.byteLength;\n      } else {\n        throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n      }\n      var blockCounts = length >> 2;\n      var tailLength = length - blockCounts * 4;\n      var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n      var k1 = 0;\n      var k2 = 0;\n      var h1 = this.h1;\n      var h2 = this.h2;\n      var C1 = 0xcc9e2d51;\n      var C2 = 0x1b873593;\n      var C1_LOW = C1 & MASK_LOW;\n      var C2_LOW = C2 & MASK_LOW;\n      for (var _i = 0; _i < blockCounts; _i++) {\n        if (_i & 1) {\n          k1 = dataUint32[_i];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          h1 ^= k1;\n          h1 = h1 << 13 | h1 >>> 19;\n          h1 = h1 * 5 + 0xe6546b64;\n        } else {\n          k2 = dataUint32[_i];\n          k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n          k2 = k2 << 15 | k2 >>> 17;\n          k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n          h2 ^= k2;\n          h2 = h2 << 13 | h2 >>> 19;\n          h2 = h2 * 5 + 0xe6546b64;\n        }\n      }\n      k1 = 0;\n      switch (tailLength) {\n        case 3:\n          k1 ^= data[blockCounts * 4 + 2] << 16;\n        case 2:\n          k1 ^= data[blockCounts * 4 + 1] << 8;\n        case 1:\n          k1 ^= data[blockCounts * 4];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          if (blockCounts & 1) {\n            h1 ^= k1;\n          } else {\n            h2 ^= k1;\n          }\n      }\n      this.h1 = h1;\n      this.h2 = h2;\n      return this;\n    },\n    hexdigest: function MurmurHash3_64_hexdigest() {\n      var h1 = this.h1;\n      var h2 = this.h2;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      for (var i = 0, arr = [h1, h2], str = ''; i < arr.length; i++) {\n        var hex = (arr[i] >>> 0).toString(16);\n        while (hex.length < 8) {\n          hex = '0' + hex;\n        }\n        str += hex;\n      }\n      return str;\n    }\n  };\n  return MurmurHash3_64;\n}();\nexports.MurmurHash3_64 = MurmurHash3_64;\n\n/***/ }),\n/* 151 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFImage = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _jpeg_stream = __w_pdfjs_require__(41);\n\nvar _jpx = __w_pdfjs_require__(67);\n\nvar PDFImage = function PDFImageClosure() {\n  function handleImageData(image, nativeDecoder) {\n    if (nativeDecoder && nativeDecoder.canDecode(image)) {\n      return nativeDecoder.decode(image).catch(function (reason) {\n        (0, _util.warn)('Native image decoding failed -- trying to recover: ' + (reason && reason.message));\n        return image;\n      });\n    }\n    return Promise.resolve(image);\n  }\n  function decodeAndClamp(value, addend, coefficient, max) {\n    value = addend + value * coefficient;\n    return value < 0 ? 0 : value > max ? max : value;\n  }\n  function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n    var length = w2 * h2;\n    var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio);\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex];\n      }\n    }\n    return dest;\n  }\n  function PDFImage(_ref) {\n    var xref = _ref.xref,\n        res = _ref.res,\n        image = _ref.image,\n        _ref$isInline = _ref.isInline,\n        isInline = _ref$isInline === undefined ? false : _ref$isInline,\n        _ref$smask = _ref.smask,\n        smask = _ref$smask === undefined ? null : _ref$smask,\n        _ref$mask = _ref.mask,\n        mask = _ref$mask === undefined ? null : _ref$mask,\n        _ref$isMask = _ref.isMask,\n        isMask = _ref$isMask === undefined ? false : _ref$isMask,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.image = image;\n    var dict = image.dict;\n    if (dict.has('Filter')) {\n      var filter = dict.get('Filter').name;\n      if (filter === 'JPXDecode') {\n        var jpxImage = new _jpx.JpxImage();\n        jpxImage.parseImageProperties(image.stream);\n        image.stream.reset();\n        image.bitsPerComponent = jpxImage.bitsPerComponent;\n        image.numComps = jpxImage.componentsCount;\n      } else if (filter === 'JBIG2Decode') {\n        image.bitsPerComponent = 1;\n        image.numComps = 1;\n      }\n    }\n    this.width = dict.get('Width', 'W');\n    this.height = dict.get('Height', 'H');\n    if (this.width < 1 || this.height < 1) {\n      throw new _util.FormatError('Invalid image width: ' + this.width + ' or ' + ('height: ' + this.height));\n    }\n    this.interpolate = dict.get('Interpolate', 'I') || false;\n    this.imageMask = dict.get('ImageMask', 'IM') || false;\n    this.matte = dict.get('Matte') || false;\n    var bitsPerComponent = image.bitsPerComponent;\n    if (!bitsPerComponent) {\n      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n      if (!bitsPerComponent) {\n        if (this.imageMask) {\n          bitsPerComponent = 1;\n        } else {\n          throw new _util.FormatError('Bits per component missing in image: ' + this.imageMask);\n        }\n      }\n    }\n    this.bpc = bitsPerComponent;\n    if (!this.imageMask) {\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      if (!colorSpace) {\n        (0, _util.info)('JPX images (which do not require color spaces)');\n        switch (image.numComps) {\n          case 1:\n            colorSpace = _primitives.Name.get('DeviceGray');\n            break;\n          case 3:\n            colorSpace = _primitives.Name.get('DeviceRGB');\n            break;\n          case 4:\n            colorSpace = _primitives.Name.get('DeviceCMYK');\n            break;\n          default:\n            throw new Error('JPX images with ' + this.numComps + ' ' + 'color components not supported.');\n        }\n      }\n      var resources = isInline ? res : null;\n      this.colorSpace = _colorspace.ColorSpace.parse(colorSpace, xref, resources, pdfFunctionFactory);\n      this.numComps = this.colorSpace.numComps;\n    }\n    this.decode = dict.getArray('Decode', 'D');\n    this.needsDecode = false;\n    if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1))) {\n      this.needsDecode = true;\n      var max = (1 << bitsPerComponent) - 1;\n      this.decodeCoefficients = [];\n      this.decodeAddends = [];\n      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n        var dmin = this.decode[i];\n        var dmax = this.decode[i + 1];\n        this.decodeCoefficients[j] = dmax - dmin;\n        this.decodeAddends[j] = max * dmin;\n      }\n    }\n    if (smask) {\n      this.smask = new PDFImage({\n        xref: xref,\n        res: res,\n        image: smask,\n        isInline: isInline,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    } else if (mask) {\n      if ((0, _primitives.isStream)(mask)) {\n        var maskDict = mask.dict,\n            imageMask = maskDict.get('ImageMask', 'IM');\n        if (!imageMask) {\n          (0, _util.warn)('Ignoring /Mask in image without /ImageMask.');\n        } else {\n          this.mask = new PDFImage({\n            xref: xref,\n            res: res,\n            image: mask,\n            isInline: isInline,\n            isMask: true,\n            pdfFunctionFactory: pdfFunctionFactory\n          });\n        }\n      } else {\n        this.mask = mask;\n      }\n    }\n  }\n  PDFImage.buildImage = function (_ref2) {\n    var handler = _ref2.handler,\n        xref = _ref2.xref,\n        res = _ref2.res,\n        image = _ref2.image,\n        _ref2$isInline = _ref2.isInline,\n        isInline = _ref2$isInline === undefined ? false : _ref2$isInline,\n        _ref2$nativeDecoder = _ref2.nativeDecoder,\n        nativeDecoder = _ref2$nativeDecoder === undefined ? null : _ref2$nativeDecoder,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    var imagePromise = handleImageData(image, nativeDecoder);\n    var smaskPromise;\n    var maskPromise;\n    var smask = image.dict.get('SMask');\n    var mask = image.dict.get('Mask');\n    if (smask) {\n      smaskPromise = handleImageData(smask, nativeDecoder);\n      maskPromise = Promise.resolve(null);\n    } else {\n      smaskPromise = Promise.resolve(null);\n      if (mask) {\n        if ((0, _primitives.isStream)(mask)) {\n          maskPromise = handleImageData(mask, nativeDecoder);\n        } else if (Array.isArray(mask)) {\n          maskPromise = Promise.resolve(mask);\n        } else {\n          (0, _util.warn)('Unsupported mask format.');\n          maskPromise = Promise.resolve(null);\n        }\n      } else {\n        maskPromise = Promise.resolve(null);\n      }\n    }\n    return Promise.all([imagePromise, smaskPromise, maskPromise]).then(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 3),\n          imageData = _ref4[0],\n          smaskData = _ref4[1],\n          maskData = _ref4[2];\n\n      return new PDFImage({\n        xref: xref,\n        res: res,\n        image: imageData,\n        isInline: isInline,\n        smask: smaskData,\n        mask: maskData,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    });\n  };\n  PDFImage.createMask = function (_ref5) {\n    var imgArray = _ref5.imgArray,\n        width = _ref5.width,\n        height = _ref5.height,\n        imageIsFromDecodeStream = _ref5.imageIsFromDecodeStream,\n        inverseDecode = _ref5.inverseDecode;\n\n    var computedLength = (width + 7 >> 3) * height;\n    var actualLength = imgArray.byteLength;\n    var haveFullData = computedLength === actualLength;\n    var data, i;\n    if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n      data = imgArray;\n    } else if (!inverseDecode) {\n      data = new Uint8Array(actualLength);\n      data.set(imgArray);\n    } else {\n      data = new Uint8Array(computedLength);\n      data.set(imgArray);\n      for (i = actualLength; i < computedLength; i++) {\n        data[i] = 0xff;\n      }\n    }\n    if (inverseDecode) {\n      for (i = 0; i < actualLength; i++) {\n        data[i] ^= 0xFF;\n      }\n    }\n    return {\n      data: data,\n      width: width,\n      height: height\n    };\n  };\n  PDFImage.prototype = {\n    get drawWidth() {\n      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n    },\n    get drawHeight() {\n      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n    },\n    decodeBuffer: function decodeBuffer(buffer) {\n      var bpc = this.bpc;\n      var numComps = this.numComps;\n      var decodeAddends = this.decodeAddends;\n      var decodeCoefficients = this.decodeCoefficients;\n      var max = (1 << bpc) - 1;\n      var i, ii;\n      if (bpc === 1) {\n        for (i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = +!buffer[i];\n        }\n        return;\n      }\n      var index = 0;\n      for (i = 0, ii = this.width * this.height; i < ii; i++) {\n        for (var j = 0; j < numComps; j++) {\n          buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n          index++;\n        }\n      }\n    },\n    getComponents: function getComponents(buffer) {\n      var bpc = this.bpc;\n      if (bpc === 8) {\n        return buffer;\n      }\n      var width = this.width;\n      var height = this.height;\n      var numComps = this.numComps;\n      var length = width * height * numComps;\n      var bufferPos = 0;\n      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n      var rowComps = width * numComps;\n      var max = (1 << bpc) - 1;\n      var i = 0,\n          ii,\n          buf;\n      if (bpc === 1) {\n        var mask, loop1End, loop2End;\n        for (var j = 0; j < height; j++) {\n          loop1End = i + (rowComps & ~7);\n          loop2End = i + rowComps;\n          while (i < loop1End) {\n            buf = buffer[bufferPos++];\n            output[i] = buf >> 7 & 1;\n            output[i + 1] = buf >> 6 & 1;\n            output[i + 2] = buf >> 5 & 1;\n            output[i + 3] = buf >> 4 & 1;\n            output[i + 4] = buf >> 3 & 1;\n            output[i + 5] = buf >> 2 & 1;\n            output[i + 6] = buf >> 1 & 1;\n            output[i + 7] = buf & 1;\n            i += 8;\n          }\n          if (i < loop2End) {\n            buf = buffer[bufferPos++];\n            mask = 128;\n            while (i < loop2End) {\n              output[i++] = +!!(buf & mask);\n              mask >>= 1;\n            }\n          }\n        }\n      } else {\n        var bits = 0;\n        buf = 0;\n        for (i = 0, ii = length; i < ii; ++i) {\n          if (i % rowComps === 0) {\n            buf = 0;\n            bits = 0;\n          }\n          while (bits < bpc) {\n            buf = buf << 8 | buffer[bufferPos++];\n            bits += 8;\n          }\n          var remainingBits = bits - bpc;\n          var value = buf >> remainingBits;\n          output[i] = value < 0 ? 0 : value > max ? max : value;\n          buf = buf & (1 << remainingBits) - 1;\n          bits = remainingBits;\n        }\n      }\n      return output;\n    },\n    fillOpacity: function fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n      var smask = this.smask;\n      var mask = this.mask;\n      var alphaBuf, sw, sh, i, ii, j;\n      if (smask) {\n        sw = smask.width;\n        sh = smask.height;\n        alphaBuf = new Uint8Array(sw * sh);\n        smask.fillGrayBuffer(alphaBuf);\n        if (sw !== width || sh !== height) {\n          alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n        }\n      } else if (mask) {\n        if (mask instanceof PDFImage) {\n          sw = mask.width;\n          sh = mask.height;\n          alphaBuf = new Uint8Array(sw * sh);\n          mask.numComps = 1;\n          mask.fillGrayBuffer(alphaBuf);\n          for (i = 0, ii = sw * sh; i < ii; ++i) {\n            alphaBuf[i] = 255 - alphaBuf[i];\n          }\n          if (sw !== width || sh !== height) {\n            alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n          }\n        } else if (Array.isArray(mask)) {\n          alphaBuf = new Uint8Array(width * height);\n          var numComps = this.numComps;\n          for (i = 0, ii = width * height; i < ii; ++i) {\n            var opacity = 0;\n            var imageOffset = i * numComps;\n            for (j = 0; j < numComps; ++j) {\n              var color = image[imageOffset + j];\n              var maskOffset = j * 2;\n              if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n                opacity = 255;\n                break;\n              }\n            }\n            alphaBuf[i] = opacity;\n          }\n        } else {\n          throw new _util.FormatError('Unknown mask format.');\n        }\n      }\n      if (alphaBuf) {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = alphaBuf[i];\n        }\n      } else {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = 255;\n        }\n      }\n    },\n    undoPreblend: function undoPreblend(buffer, width, height) {\n      var matte = this.smask && this.smask.matte;\n      if (!matte) {\n        return;\n      }\n      var matteRgb = this.colorSpace.getRgb(matte, 0);\n      var matteR = matteRgb[0];\n      var matteG = matteRgb[1];\n      var matteB = matteRgb[2];\n      var length = width * height * 4;\n      var r, g, b;\n      for (var i = 0; i < length; i += 4) {\n        var alpha = buffer[i + 3];\n        if (alpha === 0) {\n          buffer[i] = 255;\n          buffer[i + 1] = 255;\n          buffer[i + 2] = 255;\n          continue;\n        }\n        var k = 255 / alpha;\n        r = (buffer[i] - matteR) * k + matteR;\n        g = (buffer[i + 1] - matteG) * k + matteG;\n        b = (buffer[i + 2] - matteB) * k + matteB;\n        buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n        buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n        buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n      }\n    },\n    createImageData: function createImageData() {\n      var forceRGBA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var drawWidth = this.drawWidth;\n      var drawHeight = this.drawHeight;\n      var imgData = {\n        width: drawWidth,\n        height: drawHeight\n      };\n      var numComps = this.numComps;\n      var originalWidth = this.width;\n      var originalHeight = this.height;\n      var bpc = this.bpc;\n      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n      var imgArray;\n      if (!forceRGBA) {\n        var kind;\n        if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n          kind = _util.ImageKind.GRAYSCALE_1BPP;\n        } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n          kind = _util.ImageKind.RGB_24BPP;\n        }\n        if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n          imgData.kind = kind;\n          imgArray = this.getImageBytes(originalHeight * rowBytes);\n          if (this.image instanceof _stream.DecodeStream) {\n            imgData.data = imgArray;\n          } else {\n            var newArray = new Uint8Array(imgArray.length);\n            newArray.set(imgArray);\n            imgData.data = newArray;\n          }\n          if (this.needsDecode) {\n            (0, _util.assert)(kind === _util.ImageKind.GRAYSCALE_1BPP);\n            var buffer = imgData.data;\n            for (var i = 0, ii = buffer.length; i < ii; i++) {\n              buffer[i] ^= 0xff;\n            }\n          }\n          return imgData;\n        }\n        if (this.image instanceof _jpeg_stream.JpegStream && !this.smask && !this.mask) {\n          var imageLength = originalHeight * rowBytes;\n          switch (this.colorSpace.name) {\n            case 'DeviceGray':\n              imageLength *= 3;\n            case 'DeviceRGB':\n            case 'DeviceCMYK':\n              imgData.kind = _util.ImageKind.RGB_24BPP;\n              imgData.data = this.getImageBytes(imageLength, drawWidth, drawHeight, true);\n              return imgData;\n          }\n        }\n      }\n      imgArray = this.getImageBytes(originalHeight * rowBytes);\n      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n      var comps = this.getComponents(imgArray);\n      var alpha01, maybeUndoPreblend;\n      if (!forceRGBA && !this.smask && !this.mask) {\n        imgData.kind = _util.ImageKind.RGB_24BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n        alpha01 = 0;\n        maybeUndoPreblend = false;\n      } else {\n        imgData.kind = _util.ImageKind.RGBA_32BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n        alpha01 = 1;\n        maybeUndoPreblend = true;\n        this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n      if (maybeUndoPreblend) {\n        this.undoPreblend(imgData.data, drawWidth, actualHeight);\n      }\n      return imgData;\n    },\n    fillGrayBuffer: function fillGrayBuffer(buffer) {\n      var numComps = this.numComps;\n      if (numComps !== 1) {\n        throw new _util.FormatError('Reading gray scale from a color image: ' + numComps);\n      }\n      var width = this.width;\n      var height = this.height;\n      var bpc = this.bpc;\n      var rowBytes = width * numComps * bpc + 7 >> 3;\n      var imgArray = this.getImageBytes(height * rowBytes);\n      var comps = this.getComponents(imgArray);\n      var i, length;\n      if (bpc === 1) {\n        length = width * height;\n        if (this.needsDecode) {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = comps[i] - 1 & 255;\n          }\n        } else {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = -comps[i] & 255;\n          }\n        }\n        return;\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      length = width * height;\n      var scale = 255 / ((1 << bpc) - 1);\n      for (i = 0; i < length; ++i) {\n        buffer[i] = scale * comps[i] | 0;\n      }\n    },\n    getImageBytes: function getImageBytes(length, drawWidth, drawHeight) {\n      var forceRGB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      this.image.reset();\n      this.image.drawWidth = drawWidth || this.width;\n      this.image.drawHeight = drawHeight || this.height;\n      this.image.forceRGB = !!forceRGB;\n      return this.image.getBytes(length);\n    }\n  };\n  return PDFImage;\n}();\nexports.PDFImage = PDFImage;\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=pdf.worker.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/build/pdf.worker.js\n// module id = wk5V\n// module chunks = 0"],"sourceRoot":""}