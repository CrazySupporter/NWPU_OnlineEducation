{"version":3,"sources":["webpack:///./node_modules/pdfjs-dist/build/pdf.worker.js"],"names":["process","Buffer","global","factory","self","modules","installedModules","__w_pdfjs_require__","moduleId","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","value","unreachable","warn","utf8StringToString","stringToUTF8String","stringToPDFString","stringToBytes","string32","shadow","setVerbosityLevel","ReadableStream","removeNullCharacters","readUint32","readUint16","readInt8","log2","isEvalSupported","isLittleEndian","createValidAbsoluteUrl","isSameOrigin","isSpace","isString","isNum","isEmptyObj","isBool","isArrayBuffer","info","getVerbosityLevel","getLookupTableFactory","getInheritableProperty","deprecated","createObjectURL","createPromiseCapability","createBlob","bytesToString","assert","arraysToBytes","arrayByteLength","FormatError","XRefParseException","Util","UnknownErrorException","UnexpectedResponseException","TextRenderingMode","StreamType","PasswordResponses","PasswordException","PageViewport","NotImplementedException","NativeImageDecoding","MissingPDFException","MissingDataException","MessageHandler","InvalidPDFException","AbortException","CMapCompressionType","ImageKind","FontType","AnnotationType","AnnotationFlag","AnnotationFieldFlag","AnnotationBorderStyleType","UNSUPPORTED_FEATURES","VerbosityLevel","OPS","IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","undefined","_typeof","Symbol","iterator","obj","constructor","_streams_polyfill","ERRORS","WARNINGS","INFOS","verbosity","msg","console","log","Error","cond","code","this","message","details","status","begin","end","NullCharactersRegExp","str","length","bytes","Uint8Array","charCodeAt","arr","byteLength","rgbBuf","makeCssRgb","r","g","b","join","transform","m1","m2","applyTransform","applyInverseTransform","getAxialAlignedBoundingBox","p1","p2","slice","p3","p4","Math","min","max","inverseTransform","apply3dTransform","v","singularValueDecompose2dScale","transpose","a","first","second","sqrt","sx","sy","normalizeRect","rect","intersect","rect1","rect2","compare","orderedX","sort","orderedY","result","ROMAN_NUMBER_MAP","toRoman","number","lowerCase","Number","isInteger","pos","romanBuf","push","romanStr","toLowerCase","appendToArray","arr1","arr2","Array","apply","prependToArray","unshift","extendObj","obj1","obj2","key","inherit","sub","base","prop","create","loadScript","src","callback","script","document","createElement","loaded","setAttribute","onload","getElementsByTagName","appendChild","viewBox","scale","rotation","offsetX","offsetY","dontFlip","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","width","height","centerX","centerY","abs","fontScale","clone","args","convertToViewportPoint","x","y","convertToViewportRectangle","tl","br","convertToPdfPoint","PDFStringTranslateTable","capability","promise","Promise","resolve","reject","digits","data","contentType","Blob","type","arguments","URL","blob","buffer","ii","b1","b2","b3","resolveCall","fn","thisArg","wrapReason","reason","resolveOrReject","success","sourceName","targetName","comObj","_this","callbackId","streamId","postMessageTransfers","streamSinks","streamControllers","callbacksCapabilities","ah","actionHandler","_onComObjOnMessage","event","stream","_processStreamMessage","isReply","error","action","_sourceName","_targetName","then","postMessage","toString","makeReasonSerializable","_createStreamSink","addEventListener","on","actionName","handler","scope","send","transfers","sendWithPromise","e","sendWithStream","queueingStrategy","_this2","start","controller","startCapability","startCall","isClosed","desiredSize","pull","pullCapability","pullCall","cancel","cancelCapability","cancelCall","_this3","sendStreamRequest","_ref2","chunk","streamSink","enqueue","size","isCancelled","lastDesiredSize","sinkCapability","ready","close","onPull","onCancel","_this4","sendStreamResponse","_ref3","deleteStreamController","all","map","catch","destroy","removeEventListener","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","forms","javaScript","smask","shadingPattern","font","SOLID","DASHED","BEVELED","INSET","UNDERLINE","READONLY","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","INVISIBLE","HIDDEN","PRINT","NOZOOM","NOROTATE","NOVIEW","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","UNKNOWN","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","NONE","BINARY","STREAM","DECODE","DISPLAY","NEED_PASSWORD","INCORRECT_PASSWORD","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RL","FILL","STROKE","FILL_STROKE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","item","itemLength","resultLength","set","String","fromCharCode","strBuf","chunkEnd","subarray","_ref","dict","_ref$getArray","getArray","_ref$stopWhenFound","stopWhenFound","loopCount","values","initializer","lookup","ch","baseUrl","otherUrl","origin","other","url","absoluteUrl","protocol","isValidProtocol","ex","buffer8","Uint32Array","Function","ceil","offset","replace","level","writable","charAt","decodeURIComponent","escape","unescape","encodeURIComponent","EOF","Name","nameCache","nameValue","Cmd","cmd","cmdCache","cmdValue","Dict","nonSerializable","xref","_map","objId","suppressEncryption","__nonSerializable__","assignXref","newXref","key1","key2","key3","fetchIfRef","getAsync","fetchIfRefAsync","isArray","isRef","fetch","getRaw","getKeys","keys","has","forEach","empty","merge","dictArray","mergedDict","isDict","keyName","Ref","num","gen","RefSet","ref","put","remove","RefSetCache","putAlias","aliasRef","clear","isName","isEOF","isCmd","isRefsEqual","v1","v2","isStream","getBytes","store","uid","_Symbol","USE_SYMBOL","it","LZWStream","StringStream","StreamsSequenceStream","Stream","RunLengthStream","PredictorStream","NullStream","FlateStream","DecodeStream","DecryptStream","AsciiHexStream","Ascii85Stream","_util","_primitives","arrayBuffer","isEmpty","getByte","getUint16","b0","getInt32","strEnd","peekByte","peekedByte","peekBytes","skip","reset","moveStart","makeSubStream","emptyBuffer","maybeMinBufferLength","bufferLength","eof","minBufferLength","readBlock","ensureBuffer","requested","buffer2","bufEnd","getBaseStreams","streams","shift","newLength","baseStreams","codeLenCodeMap","Int32Array","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","maybeLength","cmf","flg","codeSize","codeBuf","getBits","bits","getCode","table","codes","maxLen","codeLen","codeVal","generateHuffmanTable","lengths","len","val","code2","t","hdr","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","bitsLength","bitsOffset","what","codeLengths","repeatLength","limit","code1","dist","k","blockLen","check","params","predictor","readBlockTiff","readBlockPng","colors","columns","pixBytes","rowBytes","rawBytes","inbuf","outbuf","inbits","outbits","bytesPerPixel","sum","compArray","bitMask","j","kk","prevRow","up","upLeft","left","pa","pb","pc","decrypt","nextChunk","initialized","hasMoreData","input","firstDigit","maxDecodeLength","digit","repeatHeader","source","earlyChange","cachedData","bitsCached","lzwState","codeLength","nextCode","dictionaryValues","dictionaryLengths","Uint16Array","dictionaryPrevCodes","currentSequence","currentSequenceLength","readBits","lastCode","q","estimatedDecodedSize","blockSize","prevCode","decodedLength","currentBufferLength","hasPrev","core","hide","redefine","ctx","$export","own","out","exp","IS_FORCED","F","IS_GLOBAL","G","IS_PROTO","P","IS_BIND","B","target","S","expProto","U","W","R","window","__g","version","__e","isObject","TypeError","SRC","$toString","TPL","split","inspectSource","O","safe","isFunction","aFunction","that","dP","createDesc","f","exec","anObject","IE8_DOM_DEFINE","toPrimitive","Attributes","IObject","defined","ColorSpace","getRgb","srcOffset","rgb","getRgbItem","dest","destOffset","getRgbBuffer","count","alpha01","getOutputLength","inputLength","isPassthrough","fillRgb","originalWidth","originalHeight","actualHeight","bpc","comps","numComponentColors","needsResizing","numComps","allColors","destPos","rgbPos","colorMap","w1","h1","w2","h2","py","oldIndex","xRatio","yRatio","newIndex","xScaled","w1Scanline","floor","resizeRgbImage","usesZeroToOneRange","parse","cs","res","pdfFunctionFactory","IR","parseToIR","fromIR","whitePoint","blackPoint","gamma","singletons","gray","cmyk","CalGrayCS","matrix","CalRGBCS","basePatternCS","PatternCS","baseIndexedCS","hiVal","IndexedCS","alt","tintFnIR","AlternateCS","createFromIR","range","LabCS","colorSpaces","resCS","mode","altIR","createIR","isDefaultDecode","decode","DeviceGrayCS","DeviceRgbCS","DeviceCmykCS","tintFn","defaultColor","Float32Array","tmpBuf","baseNumComps","baseBuf","scaled","tinted","decodeMap","baseCS","highVal","outputDelta","lookupPos","convertToRgb","srcScale","XW","YW","ZW","XB","YB","ZB","A","AG","pow","L","BRADFORD_SCALE_MATRIX","BRADFORD_SCALE_INVERSE_MATRIX","SRGB_D65_XYZ_TO_RGB_MATRIX","FLAT_WHITEPOINT_MATRIX","tempNormalizeMatrix","tempConvertMatrix1","tempConvertMatrix2","DECODE_L_CONSTANT","GR","GG","GB","MXA","MYA","MZA","MXB","MYB","MZB","MXC","MYC","MZC","matrixProduct","sRGBTransferFunction","color","adjustToRange","decodeL","C","AGR","BGG","CGB","X","Y","Z","XYZ","XYZ_Flat","sourceWhitePoint","XYZ_In","LMS","LMS_Flat","convertToFlat","normalizeWhitePointToFlat","XYZ_Black","sourceBlackPoint","zeroDecodeL","X_Scale","X_Offset","Y_Scale","Y_Offset","Z_Scale","Z_Offset","compensateBlackPoint","XYZ_D65","LMS_D65","convertToD65","normalizeWhitePointToD65","SRGB","sR","sG","sB","round","amin","amax","bmin","bmax","fn_g","high1","low2","high2","maxVal","Ls","as","bs","M","N","ExpertEncoding","MacExpertEncoding","MacRomanEncoding","StandardEncoding","WinAnsiEncoding","SymbolSetEncoding","ZapfDingbatsEncoding","getEncoding","encodingName","id","px","random","concat","$keys","enumBugKeys","def","TAG","tag","stat","isArrayIter","toLength","getIterFn","BREAK","RETURN","_exports","iterable","entries","ITERATOR","step","iterFn","index","next","done","Parser","Linearization","Lexer","_stream","_ccitt_stream","_jbig2_stream","_jpeg_stream","_jpx_stream","MAX_ADLER32_LENGTH","computeAdler32","bytesLength","lexer","allowStreams","recoveryMode","imageCache","refill","buf1","getObj","buf2","tryShift","cipherTransform","makeInlineImage","array","makeStream","decryptString","findDefaultInlineStreamEnd","startPos","state","maybeEIPos","followingBytes","findDCTDecodeInlineStreamEnd","markerLength","foundEOI","inlineStreamSkipEI","findASCII85DecodeInlineStreamEnd","findASCIIHexDecodeInlineStreamEnd","dictLength","beginInlineImagePos","filterName","filter","filterZero","imageStream","cacheKey","imageBytes","initialStreamPos","dictBytes","cacheEntry","createStream","skipToNextLine","nextChar","ENDSTREAM_SIGNATURE","skipped","found","scanBytes","scanLength","makeFilter","filterArray","paramsArray","xrefStreamStats","stats","streamTypes","JpegStream","JpxStream","CCITTFaxStream","Jbig2Stream","knownCommands","specialChars","toHexDigit","currentChar","peekChar","getNumber","eNotation","divideBy","sign","baseValue","powerValue","powerValueSign","currentDigit","getString","numParen","charBuffered","getName","previousCh","x2","getHexString","secondDigit","isFirstHex","comment","knownCommandFound","possibleCommand","getInt","allowZeroValue","linDict","parser","obj3","hints","hintsLength","getHints","objectNumberFirst","endFirst","numPages","mainXRefEntriesOffset","pageFirst","is","bitmap","cof","propertyIsEnumerable","toInteger","isNaN","ARG","T","tryGet","callee","shared","Constructor","forbiddenField","$$resolve","$$reject","META","setDesc","isExtensible","FREEZE","preventExtensions","setMeta","w","meta","KEY","NEED","fastKey","getWeak","onFreeze","_jpg","jpegImage","JpegImage","decodeArr","forceRGB","bitsPerComponent","decodeArrLength","transformNeeded","maxValue","decodeTransform","colorTransform","getData","drawWidth","drawHeight","getIR","forceDataSchema","OperatorList","QueueOptimizer","addState","parentState","pattern","checkFn","iterateFn","processFn","InitialState","queue","context","iCurr","fnArray","argsArray","match","lastProcessed","curr","iFirstSave","iFirstTransform","iFirstPIIXO","maxX","maxLineHeight","currentX","currentY","img","h","imgWidth","imgHeight","imgData","imgRowSize","rowSize","dataOffset","splice","kind","iFirstPIMXO","arg","imageMask","handlePaintSolidColorImageMask","iTransform","transformArgs","isSameImage","firstPIMXOArg0","firstTransformArg0","firstTransformArg3","iPIMXO","positions","images","maskParams","firstPIXOArg0","iFirstSetFont","firstSetFontArg0","firstSetFontArg1","iFirstBeginText","iFirstSetTextMatrix","iFirstShowText","iFirstEndText","iFirst","iEndText","_optimize","flush","NullOptimizer","intent","messageHandler","pageIndex","optimizer","dependencies","_totalLength","weight","totalLength","addOp","CHUNK_SIZE","addDependency","addDependencies","addOpList","opList","lastChunk","cached","getTransfers","operatorList","getGlyphsUnicode","getDingbatsGlyphsUnicode","valueOf","toIObject","toAbsoluteIndex","IS_INCLUDES","$this","el","fromIndex","UNSCOPABLES","ArrayProto","classof","test","LIBRARY","Iterators","$iterCreate","setToStringTag","getPrototypeOf","BUGGY","returnThis","Base","NAME","DEFAULT","IS_SET","FORCED","methods","IteratorPrototype","getMethod","proto","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","documentElement","$iterators","wks","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","SPECIES","D","defer","channel","port","invoke","html","cel","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","counter","run","listener","nextTick","now","port2","port1","onmessage","importScripts","removeChild","setTimeout","newPromiseCapability","promiseCapability","SAFE_CLOSING","riter","from","skipClosing","iter","toObject","asc","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","callbackfn","_t","ChunkedStreamManager","ChunkedStream","chunkSize","manager","loadedChunks","numChunksLoaded","numChunks","progressiveDataLength","lastSuccessfulEnsureByteChunk","getMissingChunks","chunks","allChunksLoaded","onReceiveData","curChunk","beginChunk","endChunk","onReceiveProgressiveData","position","ensureByte","ensureRange","nextEmptyChunk","hasChunk","getByteRange","ChunkedStreamSubstream","missingChunks","subStream","pdfNetworkStream","rangeChunkSize","disableAutoFetch","msgHandler","currRequestId","chunksNeededByRequest","requestsByChunk","promisesByRequest","aborted","_loadedStreamCapability","onLoadedStream","sendRequest","rangeReader","getRangeReader","isStreamingSupported","onProgress","bind","read","readChunk","chunkData","requestAllChunks","_requestChunks","requestId","chunksNeeded","chunksToRequest","groupedChunksToRequest","groupChunks","groupedChunk","getStream","requestRange","getBeginChunk","getEndChunk","requestRanges","ranges","includes","groupedChunks","prevChunk","bytesLoaded","total","isProgressive","loadedRequests","requestIds","onError","err","abort","cancelAllRequests","FileSpec","XRef","ObjectLoader","Catalog","_slicedToArray","_arr","_n","_d","_e","_s","_i","sliceIterator","_parser","_chunked_stream","_crypto","_colorspace","pdfManager","pageFactory","catDict","getCatalogObj","fontCache","builtInCMapCache","pageKidsCountCache","pagePromises","metadata","streamRef","encryptMetadata","encrypt","subtype","toplevelPagesDict","pagesObj","documentOutline","readDocumentOutline","root","items","parent","processed","blackColor","outlineDict","parseDestDictionary","destDict","resultObj","docBaseUrl","title","flags","rgbColor","outlineItem","unsafeUrl","newWindow","bold","italic","destinations","fetchDestination","nameTreeRef","nameDictionaryRef","dests","names","NameTree","getAll","getDestination","destinationId","pageLabels","readPageLabels","style","prefix","nums","NumberTree","currentLabel","currentIndex","labelDict","st","baseCharCode","letterIndex","character","charBuf","jj","pageMode","attachments","fs","serializable","appendIfJavaScriptDict","jsDict","js","openactionDict","actionType","cleanup","promises","translatedFonts","translated","getPage","getPageDict","createPage","nodesToVisit","currentPageIndex","currentNode","pop","fetchAsync","kids","last","getPageIndex","pageRef","kidRef","parentRef","node","kidPromises","kid","pagesBeforeRef","indexOf","addDefaultProtocolToUrl","urlDict","remoteDest","JSON","stringify","namedAction","jsAction","jsUrl","RegExp","tryConvertUrlEncoding","href","xrefstms","cache","fontTypes","setStartXRef","startXRef","startXRefQueue","trailerDict","indexObjects","readXRef","trailer","ids","fileId","CipherTransformFactory","password","processXRefTable","tableState","entryNum","streamPos","parserBuf1","parserBuf2","readXRefTable","firstEntryNum","entryCount","entry","free","uncompressed","processXRefStream","streamParameters","byteWidths","streamState","entryRanges","readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","LF","CR","LT","readToken","token","skipUntil","dataLength","objRegExp","endobjRegExp","nestedObjRegExp","trailerBytes","startxrefBytes","objBytes","xrefBytes","trailers","xrefStms","contentLength","endPos","checkPos","tokenStr","objToken","content","xrefTagOffset","startXRefParsedCache","topDict","getEntry","xrefEntry","fetchUncompressed","fetchCompressed","parseInt","substring","createCipherTransform","tableOffset","streamManager","tryFetch","NameOrNumberTree","_type","kidsOrEntries","limits","currentKey","description","contentAvailable","pickPlatformItem","filename","_filename","contentRef","fileObj","mayHaveChildren","addChildren","dictKeys","rawValue","_ii","refSet","load","_walk","nodesToRevisit","pendingRequests","foundMissingData","_i2","_ii2","CCITTFaxDecoder","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","options","encoding","eoline","byteAlign","rows","eoblock","black","codingLine","refLine","codingPos","row","nextLine2D","inputBits","inputBuf","outputBits","rowsDone","_lookBits","_eatBits","readNextChar","refPos","blackPixels","code3","_getTwoDimCode","_addPixels","_getBlackCode","_getWhiteCode","_addPixelsNeg","gotEOL","a1","_findTableCode","limitValue","ArithmeticDecoder","QeTable","qe","nmps","nlps","switchFlag","bp","dataEnd","chigh","clow","byteIn","ct","readBit","contexts","cx_index","cx_mps","qeTableIcx","qeIcx","JpxImage","_arithmetic_decoder","JpxError","SubbandsGainLog2","LL","LH","HL","HH","failOnCorruptedImage","calculateComponentDimensions","component","siz","x0","XOsiz","XRsiz","x1","Xsiz","y0","YOsiz","YRsiz","y1","Ysiz","calculateTileGrids","components","tile","SIZ","tiles","numXtiles","XTOsiz","XTsiz","numYtiles","YTOsiz","YTsiz","tx0","ty0","tx1","ty1","Csiz","tileComponent","tcx0","tcy0","tcx1","tcy1","getBlocksDimensions","codOrCoc","codingStyleParameters","entropyCoderWithCustomPrecincts","PPx","precinctsSizes","PPy","xcb_","xcb","ycb_","ycb","buildPrecincts","resolution","dimensions","precinctWidth","precinctHeight","isZeroRes","resLevel","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","trx1","trx0","numprecinctshigh","try1","try0","numprecincts","precinctParameters","buildCodeblocks","subband","codeblock","precinctNumber","codeblockWidth","codeblockHeight","cbx0","tbx0","cby0","tby0","cbx1","tbx1","cby1","tby1","codeblocks","precincts","cbx","cby","tbx0_","tby0_","tbx1_","tby1_","subbandType","Lblock","precinct","cbxMin","cbxMax","cbyMin","cbyMax","codeblockParameters","numcodeblockwide","numcodeblockhigh","createPacket","layerNumber","precinctCodeblocks","subbands","getPrecinctIndexIfExist","pxIndex","pyIndex","sizeInImageScale","precinctIterationSizes","posX","minWidth","posY","minHeight","startPrecinctRowIndex","getPrecinctSizesInImageScale","componentsCount","MAX_VALUE","maxNumWide","maxNumHigh","sizePerComponent","decompositionLevelsCount","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","resolutions","widthCurrentResolution","heightCurrentResolution","buildPackets","tileIndex","currentTile","blocksDimensions","bscale","resolutionSubbands","progressionOrder","codingStyleDefaultParameters","packetsIterator","layersCount","maxDecompositionLevelsCount","nextPacket","packet","maxNumPrecinctsInLevel","maxNumPrecincts","precinctsIterationSizes","parseTilePackets","bufferSize","skipNextBit","skipMarkerIfEqual","skipBytes","alignToByte","readCodingpasses","sopMarkerUsed","COD","ephMarkerUsed","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","inclusionTree","zeroBitPlanesTree","InclusionTree","TagTree","incrementValue","nextLevel","included","zeroBitPlanes","codingpasses","codingpassesLog2","codedDataLength","packetItem","copyCoefficients","coefficients","levelWidth","levelHeight","delta","mb","reversible","segmentationSymbolUsed","right","bottom","blockWidth","blockHeight","bitModel","currentCodingpassType","BitModel","dataItem","encodedData","decoder","setDecoder","runSignificancePropagationPass","runMagnitudeRefinementPass","runCleanupPass","checkSegmentationSymbol","nb","coefficentsSign","magnitude","coefficentsMagnitude","bitsDecoded","magnitudeCorrection","interleave","levelOffset","transformTile","quantizationParameters","spqcds","SPqcds","scalarExpounded","guardBits","precision","reversibleTransformation","ReversibleTransform","IrreversibleTransform","subbandCoefficients","mu","epsilon","gainLog2","calculate","top","initializeTile","qcdOrQcc","QCC","QCD","COC","headerSize","lbox","tbox","jumpDataLength","method","colorspace","parseCodestream","headerType","parseImageProperties","newByte","doNotRecover","sqcd","spqcdSize","mainHeader","isSigned","qcd","noQuantization","spqcd","cqcc","qcc","cod","scod","multipleComponentTransform","blockStyle","selectiveArithmeticCodingBypass","resetContextProbabilities","terminationOnEachCodingPass","verticallyStripe","predictableTermination","precinctsSize","unsupported","partIndex","partsCount","resultImages","transformedTiles","y2","tile0","Uint8ClampedArray","fourComponents","y0items","y1items","y2items","y3items","component0","transformComponents","levelsLength","levels","currentLevel","defaultValue","stopValue","propagateValues","levelIndex","currentValue","LLAndLHContextsLabel","HLContextLabel","HHContextLabel","contextLabelTable","coefficientCount","neighborsSignificance","processingFlags","Int8Array","setNeighborsSignificance","column","labels","i0","i1","contextLabel","decodeSignBit","contribution","sign0","sign1","significance1","decoded","horizontalContribution","indexNext","width4","index0","bit","iNext","oneRowDown","twoRowsDown","threeRowsDown","indexBase","checkAllEmpty","i2","Transform","u0","v0","ll","iterate","extend","j1","j2","hl_lh_hh","u","llWidth","llHeight","llItems","rowBuffer","numBuffers","colBuffers","currentBuffer","current","alpha","beta","K","calculateSHA512","calculateSHA384","calculateSHA256","calculateMD5","PDF20","PDF17","ARCFourCipher","AES256Cipher","AES128Cipher","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","_classCallCheck","instance","tmp","keyLength","encryptBlock","tmp2","output","decryptBlock","h0","h3","paddedLength","padded","rotateArg","rotate","Word64","highInteger","lowInteger","high","low","and","word","xor","or","shiftRight","places","shiftLeft","rotateRight","not","add","lowAdd","highAdd","copyTo","assign","rotr","z","maj","sigma","sigmaPrime","littleSigma","h4","h5","h6","h7","t1","t2","littleSigmaPrime","mode384","tmp3","tmp1","NullCipher","AESBaseCipher","_inv_s","_mix","_mixCol","bufferPosition","cipherKey","_keySize","_cyclesOfRepetition","_j","_j2","_k","_j3","s0","s1","s2","s3","_j4","_j5","_j6","_j7","_j8","_j9","_k2","finalize","sourceLength","iv","plain","_decrypt","_key","outputLength","lastBlock","psLen","_j10","_decryptBlock2","cipher","_encrypt","_i3","_j11","_AESBaseCipher","_rcon","_expandKey","rcon","t3","t4","_AESBaseCipher2","compareByteArrays","array1","array2","checkOwnerPassword","ownerValidationSalt","userBytes","ownerPassword","hashData","checkUserPassword","userValidationSalt","userPassword","getOwnerKey","ownerKeySalt","ownerEncryption","getUserKey","userKeySalt","userEncryption","concatArrays","calculatePDF20Hash","arrayLength","k1","remainder","hash","concatBytes","CipherTransform","stringCipherConstructor","streamCipherConstructor","StringCipherConstructor","StreamCipherConstructor","defaultPasswordBytes","prepareKeyData","revision","hashDataSize","keyLengthInBytes","checkData","encryptionKey","derivedKey","identityName","algorithm","cfDict","streamCryptoName","handlerDict","passwordBytes","fileIdBytes","uBytes","perms","passwordLength","pdfAlgorithm","createEncryptionKey20","decodeUserPassword","cf","stmf","strf","eff","buildObjectKey","isAes","buildCipherConstructor","cfm","cryptFilter","cipherConstructor","CFFCompiler","CFFPrivateDict","CFFTopDict","CFFCharset","CFFIndex","CFFStrings","CFFHeader","CFF","CFFParser","CFFStandardStrings","_charsets","_encodings","CharstringValidationData","stackClearing","stem","resetStack","undefStack","CharstringValidationData12","stackDelta","stackFn","stack","file","properties","seacAnalysisEnabled","cff","header","parseHeader","nameIndex","parseIndex","topDictIndex","stringIndex","globalSubrIndex","topDictParsed","parseDict","createDict","strings","parseNameIndex","parseStringIndex","parsePrivateDict","isCIDFont","hasName","charStringOffset","getByName","charStringIndex","fontMatrix","charset","fontBBox","ascent","descent","ascentScaled","fdArrayIndex","dictRaw","fontDict","fdArray","parseCharsets","fdSelect","parseFDSelect","parseEncoding","charStringsAndSeacs","parseCharStrings","charStrings","localSubrIndex","privateDict","subrsIndex","seacs","widths","major","minor","hdrSize","offSize","parseOperand","parseFloat","parseFloatOperand","NaN","operands","cffIndex","offsets","offsetSize","offsetStart","offsetEnd","Type","cffDict","pair","setByKey","parseCharString","callDepth","stackSize","validationCommand","seac","bias","subrNumber","firstStackClearing","charstring","valid","localSubrToUse","privateDictToUse","fdIndex","getFDIndex","nominalWidth","defaultWidth","emptyPrivateDictionary","parentDict","privateOffset","privateDictEnd","dictData","subrsOffset","relativeOffset","removeByName","cid","CFFCharsetPredefinedTypes","ISO_ADOBE","ISOAdobeCharset","EXPERT","ExpertCharset","EXPERT_SUBSET","ExpertSubsetCharset","format","raw","predefined","baseEncoding","dataStart","glyphsCount","rangesCount","gid","supplementsCount","sid","readSupplement","CFFEncoding","invalidFirstGID","CFFFDSelect","objects","CFFDict","tables","keyToNameMap","nameToKeyMap","defaults","types","opcodes","order","valueLength","setByName","createTables","layout","glyphIndex","CFFOffsetTracker","isTracking","track","location","setEntryLocation","offset0","offset1","offset2","offset3","offset4","compile","compileHeader","compileNameIndex","subDict","compiled","compileTopDicts","topDictTracker","trackers","compileStringIndex","compileIndex","compileEncoding","compileCharset","compileCharStrings","compileFDSelect","fontDictTrackers","compilePrivateDicts","encodeNumber","encodeFloat","encodeInteger","nibbles","substr","sanitizedName","char","dicts","removeCidKeys","fontDictTracker","fontDictData","compileDict","privateDictTracker","privateDictData","subrs","offsetTracker","compileGlobalSubrIndex","writeByteArray","compileTypedArray","lastOffset","getSupplementalGlyphMapForCalibri","getSupplementalGlyphMapForArialBlack","getGlyphMapForStandardFonts","getSymbolsFonts","getSerifFonts","getNonStdFontMap","getStdFontMap","getSpecialPUASymbols","UnicodeRanges","getNormalizedUnicodes","mapSpecialUnicodeValues","reverseIfRtl","chars","charsLength","getUnicodeRangeFor","getUnicodeForGlyph","glyphsUnicodeMap","unicode","hexStr","nameLen","toUpperCase","PostScriptCompiler","PostScriptEvaluator","PDFFunctionFactory","isPDFFunction","_ps_parser","IsEvalSupportedCached","_ref$isEvalSupported","PDFFunction","fnObj","parseArray","getSampleArray","outputSize","bps","sampleMul","strBytes","strIdx","typeFn","constructSampled","constructInterpolated","constructStiched","constructPostScript","constructSampledFromIR","constructInterpolatedFromIR","constructStichedFromIR","constructPostScriptFromIR","_ref4","_ref5","_ref6","toMultiArray","domain","inputSize","encode","_ref7","interpolate","xmin","xmax","ymin","ymax","samples","cubeVertices","cubeN","Float64Array","cubeVertex","domain_2i","domain_2i_1","size_i","e0","n0","n1","rj","_ref8","c0","c1","diff","_ref9","_ref10","fnRefs","fns","_ref11","bounds","fnsIR","dmin","dmax","rmin","rmax","_ref12","PostScriptLexer","PostScriptParser","_ref13","numOutputs","numInputs","evaluator","cache_available","cachedValue","execute","stackIndex","bound","PostScriptStack","initialStack","copy","roll","operators","operator","atan","cos","LN10","sin","AstNode","AstArgument","AstLiteral","AstBinaryOperation","op","arg1","arg2","AstMin","AstVariable","AstVariableDefinition","variable","ExpressionBuilderVisitor","parts","buildAddOperation","num1","num2","buildMulOperation","buildSubOperation","buildMinOperation","visit","visitor","visitArgument","visitLiteral","visitBinaryOperation","visitMin","visitVariable","visitVariableDefinition","literal","operation","definition","ast1","ast2","tmpVar","instructions","lastRegister","instruction","statementBuilder","expr","fnDict","pdfjsCoreWorker","WorkerMessageHandler","WorkerTask","_pdf_manager","_is_node","_is_node2","default","maybePort","terminated","_capability","finished","finish","terminate","ensureNotTerminated","PDFWorkerStream","_msgHandler","_contentLength","_fullRequestReader","_rangeRequestReaders","PDFWorkerStreamReader","_isRangeSupported","_isStreamingSupported","readableStream","_reader","getReader","_headersReady","isRangeSupported","PDFWorkerStreamRangeReader","getFullReader","reader","headersReady","setup","testMessageProcessed","supportTransfers","xhr","XMLHttpRequest","responseExists","responseType","supportTypedArray","createDocumentHandler","docParams","cancelXHRs","WorkerTasks","apiVersion","docId","workerHandlerName","startWorkerTask","task","finishWorkerTask","loadDocument","loadDocumentCapability","parseSuccess","ensureDoc","fingerprint","parseFailure","getPdfManager","evaluatorOptions","pdfManagerCapability","LocalPdfManager","pdfStream","cachedChunks","fullRequest","NetworkPdfManager","sendProgressiveData","pdfFile","flushChunks","page","rotatePromise","ensure","refPromise","userUnitPromise","viewPromise","results","userUnit","view","pdfDocument","catalog","ensureCatalog","requestLoadedStream","pageNum","Date","getOperatorList","renderInteractiveForms","featureId","wrappedException","minimumStackMessage","sink","extractTextContent","normalizeWhitespace","combineTextItems","waitOn","onSuccess","doc","pdfInfo","onFailure","updatePassword","pdfManagerReady","disableCreateObjectURL","maxImageSize","disableFontFace","nativeImageDecoderSupport","ignoreErrors","newPdfManager","setupDoc","initializeFromPort","globalScope","_pdfjsCompatibilityChecked","isNodeJS","hasDOM","btoa","atob","scripts","Element","parentNode","WeakMap","hasWorkingUrl","pathname","relative","relativePathDotMapping","ALPHA","ALPHANUMERIC","JURL","_isInvalid","_url","authority","_username","_password","_isRelative","host","_query","_fragment","_scheme","_port","_host","hostname","_path","_schemeData","search","_","OriginalURL","revokeObjectURL","isRelativeScheme","scheme","invalid","IDNAToASCII","percentEscape","percentEscapeQuery","stateOverride","errors","cursor","seenAt","seenBracket","loop","nextC","nextNextC","cp","tempC","temp","searchString","isRegExp","MATCH","re","$includes","LN2","isFinite","$at","iterated","point","TO_STRING","dPs","IE_PROTO","Empty","_createDict","iframeDocument","iframe","display","contentWindow","open","write","lt","Properties","arrayIndexOf","ObjectProto","addToUnscopables","Arguments","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","anInstance","forOf","speciesConstructor","microtask","newPromiseCapabilityModule","perform","promiseResolve","$Promise","isNode","USE_NATIVE","FakePromise","PromiseRejectionEvent","isThenable","notify","isReject","chain","_c","_v","ok","reaction","exited","fail","_h","onHandleUnhandled","enter","exit","onUnhandled","unhandled","isUnhandled","emit","onunhandledrejection","_a","onrejectionhandled","$reject","_w","$resolve","wrapper","executor","onFulfilled","onRejected","remaining","$index","alreadyCalled","race","ret","getIteratorMethod","un","macrotask","Observer","MutationObserver","WebKitMutationObserver","head","navigator","standalone","toggle","createTextNode","observe","characterData","DESCRIPTORS","finally","onFinally","try","InternalMap","each","weak","fails","validate","uncaughtFrozenStore","ufstore","$WeakMap","freeze","getConstructor","_f","original","gOPS","pIE","$assign","aLen","getSymbols","isEnum","getOwnPropertySymbols","redefineAll","createArrayMethod","$has","arrayFind","arrayFindIndex","_l","UncaughtFrozenStore","findUncaughtFrozen","delete","ADDER","$iterDetect","inheritIfRequired","common","IS_WEAK","fixMethod","HASNT_CHAINING","THROWS_ON_PRIMITIVES","ACCEPT_ITERABLES","BUGGY_ZERO","$instance","setStrong","buggy","gOPD","getOwnPropertyDescriptor","COLLECTION","of","mapping","cb","mapFn","nextItem","$values","isEntries","isReadableStreamSupported","_typeof2","IsPropertyKey","argument","Call","V","typeIsObject","createDataProperty","createArrayFromList","elements","ArrayBufferCopy","CreateIterResultObject","IsFiniteNonNegativeNumber","Infinity","InvokeOrNoop","PromiseInvokeOrNoop","returnValueE","PromiseInvokeOrPerformFallback","argsF","methodE","TransferArrayBuffer","ValidateAndNormalizeHighWaterMark","highWaterMark","RangeError","ValidateAndNormalizeQueuingStrategy","AssertionError","rethrowAssertionErrorRejection","_require","_require2","_require3","DequeueValue","EnqueueValueWithSize","PeekQueueValue","ResetQueue","WritableStream","underlyingSink","_ref$highWaterMark","_state","_storedError","_writer","_writableStreamController","_writeRequests","_inFlightWriteRequest","_closeRequest","_inFlightCloseRequest","_pendingAbortRequest","_backpressure","WritableStreamDefaultController","__startSteps","IsWritableStream","streamBrandCheckException","IsWritableStreamLocked","WritableStreamAbort","AcquireWritableStreamDefaultWriter","WritableStreamDefaultWriter","wasAlreadyErroring","_resolve","_reject","_reason","_wasAlreadyErroring","WritableStreamStartErroring","WritableStreamDealWithRejection","WritableStreamFinishErroring","writer","WritableStreamDefaultWriterEnsureReadyPromiseRejected","WritableStreamHasOperationMarkedInFlight","_started","__errorSteps","storedError","abortRequest","WritableStreamRejectCloseAndClosedPromiseIfNeeded","__abortSteps","WritableStreamFinishInFlightClose","_closedPromise_resolve","_closedPromise_reject","_closedPromiseState","defaultWriterClosedPromiseResolve","WritableStreamCloseQueuedOrInFlight","defaultWriterClosedPromiseReject","_closedPromise","WritableStreamUpdateBackpressure","backpressure","_readyPromise_resolve","_readyPromise_reject","_readyPromise","_readyPromiseState","defaultWriterReadyPromiseReset","defaultWriterReadyPromiseResolve","WritableStreamDefaultControllerError","WritableStreamDefaultWriterCloseWithErrorPropagation","_ownerWritableStream","WritableStreamDefaultWriterClose","WritableStreamDefaultWriterRelease","WritableStreamDefaultWriterWrite","defaultWriterReadyPromiseInitializeAsResolved","defaultWriterClosedPromiseInitialize","defaultWriterReadyPromiseInitializeAsRejected","defaultWriterClosedPromiseInitializeAsResolved","defaultWriterClosedPromiseInitializeAsRejected","IsWritableStreamDefaultWriter","defaultWriterBrandCheckException","defaultWriterLockException","WritableStreamDefaultWriterAbort","WritableStreamDefaultControllerGetDesiredSize","WritableStreamDefaultWriterGetDesiredSize","closeRequest","WritableStreamDefaultControllerAdvanceQueueIfNeeded","WritableStreamDefaultWriterEnsureClosedPromiseRejected","defaultWriterClosedPromiseResetToRejected","defaultWriterReadyPromiseReject","defaultWriterReadyPromiseResetToRejected","releasedError","strategySize","_strategySize","chunkSizeE","WritableStreamDefaultControllerErrorIfNeeded","WritableStreamDefaultControllerGetChunkSize","writeRequest","WritableStreamAddWriteRequest","writeRecord","enqueueE","_controlledWritableStream","WritableStreamDefaultControllerGetBackpressure","WritableStreamDefaultControllerWrite","_underlyingSink","_queue","_queueTotalSize","normalizedStrategy","_strategyHWM","IsWritableStreamDefaultController","startResult","WritableStreamMarkCloseRequestInFlight","WritableStreamFinishInFlightCloseWithError","WritableStreamDefaultControllerProcessClose","WritableStreamMarkFirstWriteRequestInFlight","WritableStreamFinishInFlightWrite","WritableStreamFinishInFlightWriteWithError","WritableStreamDefaultControllerProcessWrite","container","_require4","_require5","underlyingSource","_disturbed","_readableStreamController","ReadableByteStreamController","ReadableStreamDefaultController","IsReadableStream","IsReadableStreamLocked","ReadableStreamCancel","AcquireReadableStreamDefaultReader","ReadableStreamBYOBReader","readable","ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue","pipeTo","preventClose","preventAbort","preventCancel","Boolean","shuttingDown","currentWrite","isOrBecomesErrored","shutdownWithAction","shutdown","destClosed","waitForWritesToFinish","oldCurrentWrite","originalIsError","originalError","doTheRest","newError","isError","ReadableStreamReaderGenericRelease","pipeLoop","ReadableStreamDefaultReaderRead","branches","ReadableStreamTee","ReadableStreamDefaultReader","cloneForBranch2","teeState","closedOrErrored","canceled1","canceled2","reason1","reason2","branch1","_branch1","branch2","_branch2","_teeState","ReadableStreamDefaultControllerClose","value1","value2","ReadableStreamDefaultControllerEnqueue","create_ReadableStreamTeePullFunction","_cloneForBranch2","cancel1","compositeReason","cancelResult","create_ReadableStreamTeeBranch1CancelFunction","cancel2","create_ReadableStreamTeeBranch2CancelFunction","underlyingSource1","branch1Stream","underlyingSource2","branch2Stream","ReadableStreamDefaultControllerError","ReadableStreamAddReadIntoRequest","IsReadableStreamBYOBReader","readIntoRequest","_readIntoRequests","ReadableStreamAddReadRequest","IsReadableStreamDefaultReader","readRequest","_readRequests","ReadableStreamClose","__cancelSteps","defaultReaderClosedPromiseResolve","ReadableStreamError","defaultReaderClosedPromiseReject","ReadableStreamFulfillReadRequest","ReadableStreamGetNumReadIntoRequests","ReadableStreamGetNumReadRequests","ReadableStreamHasBYOBReader","ReadableStreamHasDefaultReader","IsReadableStreamDisturbed","ReadableStreamDefaultControllerGetDesiredSize","ReadableStreamReaderGenericInitialize","defaultReaderBrandCheckException","_ownerReadableStream","readerLockException","ReadableStreamReaderGenericCancel","IsReadableByteStreamController","byobReaderBrandCheckException","ArrayBuffer","isView","_controlledReadableStream","elementSize","DataView","BYTES_PER_ELEMENT","ctor","pullIntoDescriptor","byteOffset","bytesFilled","readerType","_pendingPullIntos","emptyView","ReadableByteStreamControllerFillPullIntoDescriptorFromQueue","filledView","ReadableByteStreamControllerConvertPullIntoDescriptor","ReadableByteStreamControllerHandleQueueDrain","_closeRequested","ReadableByteStreamControllerError","ReadableByteStreamControllerCallPullIfNeeded","ReadableByteStreamControllerPullInto","ReadableStreamBYOBReaderRead","defaultReaderClosedPromiseInitialize","defaultReaderClosedPromiseInitializeAsResolved","defaultReaderClosedPromiseInitializeAsRejected","defaultReaderClosedPromiseResetToRejected","__pullSteps","_underlyingSource","_pullAgain","_pulling","ReadableStreamDefaultControllerCallPullIfNeeded","ReadableStreamDefaultControllerErrorIfNeeded","IsReadableStreamDefaultController","defaultControllerBrandCheckException","pendingPromise","ReadableStreamDefaultControllerShouldCallPull","ReadableStreamBYOBRequest","_associatedReadableByteStreamController","_view","bytesWritten","IsReadableStreamBYOBRequest","byobRequestBrandCheckException","ReadableByteStreamControllerRespondInternal","ReadableByteStreamControllerRespond","firstDescriptor","ReadableByteStreamControllerRespondWithNewView","underlyingByteSource","_underlyingByteSource","ReadableByteStreamControllerClearPendingPullIntos","autoAllocateChunkSize","_autoAllocateChunkSize","byteStreamControllerBrandCheckException","firstPendingPullInto","ReadableByteStreamControllerClose","transferredBuffer","ReadableByteStreamControllerEnqueueChunkToQueue","transferredView","ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue","ReadableByteStreamControllerEnqueue","viewE","bufferE","_byobRequest","ReadableByteStreamControllerGetDesiredSize","ReadableByteStreamControllerShouldCallPull","ReadableByteStreamControllerInvalidateBYOBRequest","ReadableByteStreamControllerCommitPullIntoDescriptor","ReadableStreamFulfillReadIntoRequest","currentAlignedBytes","maxBytesToCopy","maxBytesFilled","maxAlignedBytes","totalBytesToCopyRemaining","headOfQueue","bytesToCopy","destStart","ReadableByteStreamControllerFillHeadPullIntoDescriptor","ReadableByteStreamControllerShiftPendingPullInto","ReadableByteStreamControllerRespondInClosedState","remainderSize","ReadableByteStreamControllerRespondInReadableState","transformStream","writableStream","TransformStream","TransformStreamEnqueueToReadable","_errored","_readableClosed","_readableController","TransformStreamErrorIfNeeded","TransformStreamSetBackpressure","TransformStreamCloseReadableInternal","TransformStreamErrorInternal","_writableDone","_writableController","TransformStreamReadableReadyPromise","_backpressureChangePromise","_backpressureChangePromise_resolve","TransformStreamDefaultTransform","transformStreamController","_controlledTransformStream","IsTransformStreamDefaultController","IsTransformStream","TransformStreamSink","startPromise","_transformStream","_startPromise","_transforming","transformer","_transformer","_transformStreamController","TransformStreamTransform","TransformStreamSource","TransformStreamDefaultController","TransformStreamCloseReadable","TransformStreamError","readableController","readableStrategy","writableStrategy","startPromise_resolve","_readable","_writable","_document","BasePdfManager","_docId","_docBaseUrl","ensureXRef","PDFDocument","ensureHelper","Page","_obj","_annotation","_operator_list","_evaluator","_function","LETTER_SIZE_MEDIABOX","isAnnotationRenderable","annotation","viewable","printable","pageDict","resourcesPromise","uniquePrefix","idCounters","idFactory","createObjId","_getInheritableProperty","resources","mediaBox","cropBox","intersection","getContentStream","loadResources","contentStreamPromise","partialEvaluator","PartialEvaluator","pageListPromise","contentStream","transparency","hasBlendModes","annotationsPromise","pageOpList","annotations","opListPromises","opLists","getTextContent","getAnnotationsData","annotationsData","annotationRefs","annotationRef","AnnotationFactory","find","needle","backwards","lastIndexOf","DocumentInfoValidators","Title","Author","Subject","Keywords","Creator","Producer","CreationDate","ModDate","Trapped","pdfFormatVersion","acroForm","xfa","fields","linearization","checkHeader","parseStartXRef","documentInfo","infoDict","docInfo","PDFFormatVersion","IsAcroFormPresent","IsXFAPresent","validEntries","fileID","idArray","hex","_ccitt","ccittFaxDecoder","EndOfLine","EncodedByteAlign","Columns","Rows","EndOfBlock","BlackIs1","_jbig","jbig2Image","Jbig2Image","globalsStream","globals","parseChunks","Jbig2Error","ContextCache","DecodingContext","decodeInteger","contextCache","procedure","getContexts","prev","decodeIAID","SegmentTypes","CodingTemplates","RefinementTemplates","coding","reference","ReusedContexts","RefinementReusedContexts","decodeBitmap","mmr","templateIndex","prediction","at","decodingContext","decodeMMRBitmap","Reader","pixel","row1","row2","decodeBitmapTemplate0","useskip","template","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","minX","minY","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","j0","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ltp","decodeRefinement","referenceBitmap","codingTemplate","codingTemplateLength","codingTemplateX","codingTemplateY","referenceTemplate","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","decodeTextRegion","huffman","refinement","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","symbolCodeLength","transposed","dsOffset","referenceCorner","combinationOperator","huffmanTables","refinementTemplateIndex","refinementAt","logStripSize","huffmanInput","stripT","tableDeltaT","firstS","currentS","tableFirstS","currentT","symbolId","symbolIDTable","applyRefinement","symbolBitmap","symbolWidth","symbolHeight","rdw","rdh","symbolRow","offsetT","offsetS","maxWidth","deltaS","tableDeltaS","readSegmentHeader","segmentHeader","segmentType","typeName","deferredNonRetain","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","referredToSegmentNumberSize","referredTo","pageAssociation","genericRegionInfo","readRegionSegmentInformation","genericRegionMmr","RegionSegmentInformationFieldLength","searchPattern","headerEnd","readSegments","segments","segment","randomAccess","processSegment","atLength","dictionary","dictionaryFlags","huffmanDHSelector","huffmanDWSelector","bitmapSizeSelector","aggregationInstancesSelector","bitmapCodingContextUsed","bitmapCodingContextRetained","refinementTemplate","numberOfExportedSymbols","numberOfNewSymbols","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","huffmanFS","huffmanDS","huffmanDT","huffmanRefinementDW","huffmanRefinementDH","huffmanRefinementDX","huffmanRefinementDY","huffmanRefinementSizeSelector","patternDictionary","patternDictionaryFlags","patternWidth","patternHeight","maxPatternIndex","halftoneRegion","halftoneRegionFlags","enableSkip","gridWidth","gridHeight","gridOffsetX","gridOffsetY","gridVectorX","gridVectorY","genericRegion","genericRegionSegmentFlags","pageInfo","resolutionX","resolutionY","pageSegmentFlags","lossless","requiresBuffer","combinationOperatorOverride","callbackName","processSegments","SimpleSegmentVisitor","HuffmanLine","lineData","isOOB","rangeLow","prefixLength","rangeLength","prefixCode","isLowerRange","HuffmanTreeNode","line","children","isLeaf","HuffmanTable","lines","prefixCodesDone","assignPrefixCodes","rootNode","buildTree","onPageInformation","currentPageInfo","drawBitmap","regionInfo","mask","mask0","onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","onSymbolDictionary","currentSegment","referredSegments","customTables","customIndex","tableDeltaHeight","tableDeltaWidth","getStandardTable","getCustomHuffmanTable","tableBitmapSize","tableAggregateInstances","getSymbolDictionaryHuffmanTables","symbols","referredSymbols","newSymbols","currentHeight","tableB1","symbolWidths","currentWidth","totalWidth","firstSymbol","deltaWidth","numberOfInstances","rdx","rdy","bitmapSize","collectiveBitmap","readUncompressedBitmap","originalEnd","bitmapEnd","numberOfSymbolsDecoded","xMin","xMax","exportedSymbols","currentFlag","totalSymbolsLength","runLength","decodeSymbolDictionary","onImmediateTextRegion","numberOfSymbols","runCodesTable","repeatedLength","numberOfRepeats","getTextRegionHuffmanTables","onImmediateLosslessTextRegion","onPatternDictionary","patterns","patternBitmap","decodePatternDictionary","onImmediateHalftoneRegion","regionWidth","regionHeight","regionBitmap","numberOfPatterns","pattern0","bitsPerValue","grayScaleBitPlanes","mmrInput","mg","ng","patternIndex","patternRow","regionRow","regionX","regionY","decodeHalftoneRegion","onImmediateLosslessHalftoneRegion","onTables","lowestValue","highestValue","prefixSizeBits","rangeSizeBits","currentRangeLow","decodeTablesSegment","decodeNode","htOffset","linesLength","prefixLengthMax","histogram","currentLength","firstCode","currentCode","currentTemp","standardTablesCache","currentByte","endOfBlock","numBits","parseJbig2Chunks","JpegError","DNLMarkerError","scanLines","dctZigZag","dctCos1","dctSin1","dctCos3","dctSin3","dctCos6","dctSin6","dctSqrt2","dctSqrt1d2","buildHuffmanTable","getBlockBufferOffset","col","blocksPerLine","decodeScan","frame","resetInterval","spectralStart","spectralEnd","successivePrev","successive","parseDNLMarker","mcusPerLine","progressive","startOffset","bitsData","bitsCount","nextByte","decodeHuffman","tree","receive","receiveAndExtend","eobrun","successiveACNextValue","successiveACState","decodeMcu","mcu","mcuCol","decodeBlock","decodeFn","componentsLength","huffmanTableDC","blockData","pred","rs","huffmanTableAC","offsetZ","fileMarker","mcuExpected","blocksPerColumn","mcusPerColumn","mcuToRead","findNextFileMarker","marker","quantizeAndInverse","blockBufferOffset","v3","v4","v5","v6","v7","p0","p5","p6","p7","qt","quantizationTable","buildComponentData","computationBuffer","Int16Array","blockRow","blockCol","currentPos","peekUint16","maxPos","newPos","currentMarker","newMarker","_ref$dnlScanLines","dnlScanLines","readDataBlock","endOffset","prepareComponents","samplesPerLine","maxH","maxV","blocksPerLineForMcu","blocksBufferSize","jfif","adobe","numSOSMarkers","quantizationTables","huffmanTablesAC","huffmanTablesDC","appData","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesEnd","quantizationTableSpec","tableData","extended","sofScanLines","componentIds","componentId","qId","quantizationId","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","componentIndex","tableSpec","successiveApproximation","nextFileMarker","scaleX","scaleY","numComponents","_getLinearizedBlockData","componentScaleX","componentScaleY","blocksPerScanline","xScaleBlockOffset","_isColorConversionNeeded","_convertYccToRgb","Cb","Cr","_convertYcckToRgb","_convertYcckToCmyk","_convertCmykToRgb","forceRGBoutput","rgbData","grayColor","_jpx","jpxImage","tileCount","tileComponents","tileWidth","tileHeight","tileLeft","tileTop","srcPosition","dataPosition","tileRowSize","AnnotationBorderStyle","Annotation","_get","receiver","desc","parameters","LinkAnnotation","TextAnnotation","fieldType","TextWidgetAnnotation","ButtonWidgetAnnotation","ChoiceWidgetAnnotation","WidgetAnnotation","PopupAnnotation","LineAnnotation","SquareAnnotation","CircleAnnotation","PolylineAnnotation","PolygonAnnotation","HighlightAnnotation","UnderlineAnnotation","SquigglyAnnotation","StrikeOutAnnotation","StampAnnotation","FileAttachmentAnnotation","setFlags","setRectangle","setColor","setBorderStyle","setAppearance","annotationFlags","borderStyle","hasAppearance","appearance","flag","_hasFlag","dictType","setWidth","setStyle","setDashArray","setHorizontalCornerRadius","setVerticalCornerRadius","appearanceStates","normalAppearanceState","hasPopup","contents","renderForms","appearanceDict","bbox","maxY","getTransformMatrix","_isViewable","_isPrintable","dashArray","horizontalCornerRadius","verticalCornerRadius","isValid","allZeros","element","radius","_Annotation","annotationType","fieldName","_constructFieldName","fieldValue","alternativeText","defaultAppearance","fieldResources","fieldFlags","readOnly","hasFieldFlag","loopDict","_WidgetAnnotation","alignment","textAlignment","maximumLength","multiLine","comb","_WidgetAnnotation2","checkBox","radioButton","pushButton","_processCheckBox","_processRadioButton","_processPushButton","buttonValue","fieldParent","fieldParentValue","_WidgetAnnotation3","_this5","option","isOptionArray","exportValue","displayValue","combo","multiSelect","_Annotation2","_this6","_preparePopup","_Annotation3","_this7","_Annotation4","_this8","parentItem","parentSubtype","parentType","parentId","parentFlags","_Annotation5","_this9","lineCoordinates","_Annotation6","_this10","_Annotation7","_this11","_Annotation8","_this12","rawVertices","vertices","_PolylineAnnotation","_this13","_Annotation9","_this14","_Annotation10","_this15","_Annotation11","_this16","_Annotation12","_this17","_Annotation13","_this18","_Annotation14","_this19","_cmap","_fonts","_unicode","_standard_fonts","_pattern","_bidi","_glyphlist","_metrics","_murmurhash","_image","DefaultPartialEvaluatorOptions","NativeImageDecoder","_ref$forceDataSchema","_ref3$options","fetchBuiltInCMap","cachedCMap","compressionType","canDecode","image","isDecodable","colorSpace","isSupported","TimeSlotManager","checked","endTime","deferred","newOptions","newEvaluator","nodes","graphicStates","graphicStatesKeys","bm","xObjects","xObjectsKeys","xObject","xResources","buildFormXObject","xobj","initialState","group","groupOptions","isolated","knockout","groupSubtype","backdrop","buildPaintImageXObject","_ref4$isInline","isInline","_ref4$forceDisableNat","forceDisableNativeImageDecoder","bitStrideLength","imgArray","PDFImage","createMask","imageIsFromDecodeStream","inverseDecode","softMask","createImageData","nativeImageDecoder","buildImage","nativeDecoder","imageObj","handleSMask","stateManager","smaskContent","smaskOptions","transferObj","transferFn","transferMap","handleTilingType","patternDict","tilingOpList","resourcesArray","patternResources","getTilingPatternIR","tilingPatternIR","handleSetFont","fontArgs","fontRef","fontName","loadFont","isType3Font","loadType3Data","TranslatedFont","ErrorFont","loadedName","handleText","glyphs","charsToGlyphs","isAddToPathSet","textRenderingMode","fillColorSpace","buildPath","fontChar","renderer","hasBuiltPath","path","getPathJs","glyph","accent","gState","gStateObj","gStateKeys","_loop","normalizeBlendMode","errorFont","fontRes","fontID","translatedPromise","fontCapability","preEvaluatedFont","preEvaluateFont","fontRefIsRef","fontAliases","aliasFontRef","Font","getFontID","translateFont","translatedFont","fontType","fontFile3","getFontType","lastIndex","opArgs","handleColorN","patternName","typeNum","shading","Pattern","parseShading","_ref5$initialState","EvalState","xobjs","StateManager","preprocessor","EvaluatorPreprocessor","timeSlotManager","closePendingRestoreOPS","savedStatesDepth","promiseBody","stop","resolveXObject","rejectXObject","fontSize","combinedGlyphs","arrLength","arrItem","strokeColorSpace","shadingRes","patternIR","dictName","extGState","_ref6$stateManager","_ref6$normalizeWhites","_ref6$combineTextItem","_ref6$seenStyles","seenStyles","TextState","textState","WhitespaceRegexp","textContent","styles","textContentItem","vertical","lastAdvanceWidth","lastAdvanceHeight","textAdvanceScale","spaceWidth","fakeSpaceMin","fakeMultiSpaceMin","fakeMultiSpaceMax","textRunBreakAllowed","SPACE_FACTOR","MULTI_SPACE_FACTOR","MULTI_SPACE_FACTOR_MAX","skipEmptyXObjs","ensureTextContentItem","fontFamily","fallbackName","tsm","textHScale","textRise","glyphHeight","trm","ctm","textMatrix","textLineMatrix","scaleLineX","scaleCtmX","isMonospace","runBidiTransform","textChunk","bidiResult","bidi","replaceWhitespace","dir","buildTextContentItem","glyphWidth","vmetric","glyphUnicode","NormalizedUnicodes","charSpacing","wordSpacing","addFakeSpaces","tx","ty","translateTextMatrix","fakeSpaces","flushTextContentItem","enqueueChunk","advance","fontNameArg","fontSizeArg","leading","isSameTextLine","translateTextLineMatrix","carriageReturn","calcTextLineMatrixAdvance","setTextLineMatrix","breakTextRun","currentState","xObjStateManager","sinkWrapper","enqueueInvoked","gStateFont","extractDataStructures","baseDict","toUnicode","toUnicodePromise","readToUnicode","composite","cidSystemInfo","registry","ordering","supplement","cidToGidMap","readCidToGidMap","differences","baseEncodingName","diffEncoding","defaultEncoding","isSymbolicFont","FontFlags","Symbolic","isNonsymbolicFont","Nonsymbolic","hasEncoding","buildToUnicode","_buildSimpleFontToUnicode","charcode","glyphName","ToUnicodeMap","hasIncludedToUnicodeMap","fallbackToUnicode","cMap","builtInCMap","IdentityCMap","ucs2CMapName","CMapFactory","useCMap","ucs2CMap","ucs2","IdentityToUnicodeMap","firstChar","lastChar","cmapObj","cmap","getMap","charCode","cidToGidStream","glyphsData","glyphID","extractWidths","defaultVMetrics","glyphsWidths","glyphsVMetrics","vmetrics","baseFontName","metrics","getBaseFontMetrics","buildCharCodeToWidth","firstWidth","FixedPitch","isSerifFont","fontNameWoStyle","monospace","lookupName","Metrics","getMetrics","glyphWidths","widthsByGlyphName","uint8array","df","MurmurHash3_64","update","diffLength","diffBuf","diffEntry","hexdigest","maxCharIndex","Serif","baseFont","fontNameStr","baseFontStr","cMapPromise","fontFile","length1","length2","length3","wideChars","fixedPitch","xHeight","capHeight","italicAngle","cidEncoding","type3Loaded","sent","fontData","exportData","parentOperatorList","type3Options","type3Evaluator","loadCharProcsPromise","charProcs","fontResources","charProcKeys","charProcOperatorList","_loop2","glyphStream","stateStack","old","txDiff","tyDiff","denominator","calcRenderMatrix","getOPMap","numArgs","variableArgs","opMap","nonProcessedArgs","opSpec","argsLength","preprocessCommand","CMap","BUILT_IN_CMAPS","codespaceRanges","numCodespaceRanges","addCodespaceRange","mapCidRange","dstLow","mapBfRange","lastByte","mapBfRangeToArray","mapOne","dst","contains","charCodeOf","readCharCode","codespaceRangesLen","codespaceRange","isIdentityCMap","BinaryCMapReader","hexToInt","hexToStr","addHex","incHex","MAX_NUM_SIZE","MAX_ENCODED_NUM_SIZE","BinaryCMapStream","readByte","readNumber","readSigned","readHex","readHexNumber","sp","readHexSigned","readString","sequence","dataSize","subitemsCount","strToInt","expectString","expectInt","parseBfChar","parseBfRange","parseCidChar","parseCidRange","parseCodespaceRange","parseWMode","parseCMapName","parseCMap","previous","embeddedUseCMap","objLoop","extendCMap","createBuiltInCMap","newCMap","useCodespaceRanges","cMapData","parsedCMap","ProblematicCharRanges","PRIVATE_USE_OFFSET_END","PRIVATE_USE_OFFSET_START","SEAC_ANALYSIS_ENABLED","_cff_parser","_font_renderer","_type1_parser","SKIP_PRIVATE_USE_RANGE_F000_TO_F01F","PDF_GLYPH_SPACE_UNITS","Script","Italic","AllCap","SmallCap","ForceBold","MacStandardGlyphOrdering","adjustWidths","recoverGlyphName","Glyph","operatorListId","isInFont","matchesForCache","amend","OpenTypeFileBuilder","writeInt16","writeInt32","writeData","sfnt","getSearchParams","entriesCount","entrySize","maxPower2","searchRange","rangeShift","toArray","tablesNames","tableName","numTables","tableOffsets","searchParams","checksum","addTable","sizes","missingFile","glyphCache","toFontChar","fallbackToSystemFont","isTrueTypeFile","isOpenTypeFile","isType1File","mimetype","CFFFont","Type1Font","convert","checkAndRepair","isOpenType","seacMap","loading","ID","int16","signedInt16","string16","safeString16","buildToFontChar","isProblematicUnicodeLocation","adjustMapping","charCodeToGlyphId","missingGlyphs","isSymbolic","isIdentityUnicode","newMap","usedFontCharCodes","nextAvailableFontCharCode","originalCharCode","glyphId","fontCharCode","hasUnicodeValue","createCmapTable","numGlyphs","codeIndices","getRanges","bmpLength","trailingRangesCount","segCount","startCount","endCount","idDeltas","idRangeOffsets","glyphsIds","contiguous","format314","format31012","header31012","createOS2Table","charstrings","override","unitsPerEm","yMax","yMin","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","firstCharIndex","lastCharIndex","typoAscent","typoDescent","winAscent","winDescent","createPostTable","angle","createNameTable","stringsUnicode","strBufUnicode","platforms","encodings","languages","namesRecordCount","nameTable","strOffset","strs","FontRendererFactory","stdFontMap","nonStdFontMap","isStandardFont","remeasure","GlyphMapForStandardFonts","SupplementalGlyphMapForArialBlack","SupplementalGlyphMapForCalibri","unicodeCharCode","VALID_TABLES","readTables","readTableEntry","previousPosition","readOpenTypeHeader","ttf","entrySelector","sanitizeGlyph","sourceStart","sourceEnd","hintsValid","glyphProfile","sizeOfInstructions","glyf","contoursCount","flagsCount","instructionsStart","instructionsLength","instructionsEnd","coordinatesLength","xyLength","repeat","glyphDataLength","readNameTable","numRecords","stringsStart","records","platform","language","record","TTOpsStackDeltas","sanitizeTTProgram","ttContext","funcId","lastEndf","lastDeff","callstack","functionsCalled","tooComplexToFollowFunctions","inFDEF","ifLevel","inELSE","functionsStackDeltas","stackTop","functionsDefined","functionsUsed","foldTTTable","isTrueTypeCollectionFile","ttcData","ttc","_readTrueTypeCollecti","ttcTag","majorVersion","minorVersion","numFonts","offsetTable","dsigTag","dsigLength","dsigOffset","readTrueTypeCollectionHeader","potentialHeader","potentialTables","nameEntry","readTrueTypeCollectionData","cffFile","isTrueType","maxFunctionDefs","maxSizeOfInstructions","dupFirstEntry","fpgm","prep","cvt","checkInvalidFunctions","cvtData","sanitizeTTPrograms","numOfMetrics","numMissing","sanitizeMetrics","locaLength","indexToLocFormat","numGlyphsPlusOne","sanitizeHead","isGlyphLocationsLong","glyphsInfo","loca","itemSize","itemDecode","itemEncode","locaData","locaDataSize","oldGlyfData","oldGlyfDataLength","newGlyfData","writeOffset","locaCount","simpleGlyph","firstEntryLength","sanitizeGlyphLocations","metricsOverride","post","maxpNumGlyphs","glyphNames","glyphNameIndexes","customNames","stringLength","readPostScriptTable","hasGlyph","isCidToGidMapEmpty","cmapTable","platformId","encodingId","mappings","hasShortCmap","potentialTable","canBreak","useTable","segIndex","offsetsCount","rangeOffset","offsetIndex","readCmapTable","cmapPlatformId","cmapEncodingId","cmapMappings","cmapMappingsLength","standardGlyphName","unicodeOrCharCode","newMapping","os2","selection","validateOS2Table","compiler","namePrototype","builder","tableTag","builtInEncoding","adjustToUnicode","getGlyphMapping","getCharCodes","charCodes","createCharCode","getCharset","baseGlyphName","accentGlyphName","baseGlyphId","accentGlyphId","accentOffset","baseFontCharCode","accentFontCharCode","tan","cffWidths","hmtx","_shadowWidth","possibleSpaceReplacements","charToGlyph","widthCode","charsCache","charsCacheKey","type1FontGlyphMapping","findBlock","streamBytes","signature","startIndex","streamBytesLength","signatureLength","headerBlockLength","pfbHeader","pfbHeaderPresent","headerBlock","suggestedLength","headerBytes","headerBytesLength","block","actualLength","EEXEC_SIGNATURE","streamStartPos","getHeaderBlock","Type1Parser","extractFontHeader","eexecBytes","eexecBlock","extractFontProgram","type2Charstrings","getType2Charstrings","getType2Subrs","wrap","getSeacs","type1Charstrings","type1Subrs","type2Subrs","charsetArray","charStringsIndex","field","privateData","subrIndex","charsets","userAgent","getLong","getUshort","parseCmap","idDelta","idOffset","groups","parseCff","gsubrs","isCFFCIDFont","lookupCmap","CompiledFont","compiledGlyphs","compiledCharCodeToGlyphId","TrueTypeCompiled","Type2Compiled","cffInfo","glyphNameMap","gsubrsBias","subrsBias","compileGlyph","cmds","compileGlyphImpl","compileGlyf","quadraticCurveTo","xa","ya","numberOfContours","scale01","scale10","subglyph","endPtsOfContours","numberOfPoints","points","startPoint","endPoint","contour","compileCharString","stems","bezierCurveTo","xb","yb","subrCode","stackClean","numSubrs","achar","bchar","parseGlyfTable","Type1CharString","COMMAND_MAP","lsb","flexing","encoded","wx","sbx","dy","executeCommand","sby","flexArgs","howManyArgs","command","keepStack","stackLength","EEXEC_ENCRYPT_KEY","isHexDigit","discardNumber","decrypted","isSpecial","encrypted","isBinary","digit1","digit2","decryptAscii","readNumberArray","getToken","readInt","readBoolean","readCharStrings","lenIV","program","blueArray","charString","encodingArg","ShadingType","FUNCTION_BASED","AXIAL","RADIAL","FREE_FORM_MESH","LATTICE_FORM_MESH","COONS_PATCH_MESH","TENSOR_PATCH_MESH","getPattern","Shadings","RadialAxial","Mesh","Dummy","SMALL_NUMBER","coordsArr","shadingType","t0","domainArr","extendStart","extendEnd","extendArr","r1","r2","distance","createFromArray","colorStops","ratio","cssColor","background","r0","MeshStreamReader","tmpCompsBuf","csNumComps","tmpCsCompsBuf","colorFn","hasData","align","readFlag","bitsPerFlag","readCoordinate","bitsPerCoordinate","xi","yi","readComponents","ci","MIN_SPLIT_PATCH_CHUNKS_AMOUNT","MAX_SPLIT_PATCH_CHUNKS_AMOUNT","TRIANGLE_DENSITY","getB","lut","t_","buildB","buildFigureFromPatch","mesh","figure","figures","coords","pi","figureMinX","figureMinY","figureMaxX","figureMaxY","splitXBy","splitYBy","verticesPerRow","figureCoords","figureColors","cl","cr","c2","c3","bRow","bCol","newColor","updateBounds","patchMesh","ps","verticesLeft","coord","decodeType4Shading","decodeType5Shading","tmp4","decodeType6Shading","decodeType7Shading","coordsPacked","xy","colorsPacked","packData","xstep","ystep","paintType","tilingType","baseTypes","arabicTypes","isOdd","isEven","findUnequal","setValues","reverseValues","createBidiText","isLTR","startLevel","strLength","numBidi","charType","sor","eor","lastType","before","after","highestLevel","lowestOddLevel","nextToken","accept","expect","PostScriptTokenTypes","LBRACE","parseBlock","RBRACE","NUMBER","OPERATOR","parseCondition","conditionLocation","IF","jumpLocation","endOfTrue","IFELSE","PostScriptToken","opCache","getOperator","opValue","seed","blockCounts","tailLength","dataUint32","k2","C1","C2","handleImageData","decodeAndClamp","addend","coefficient","resizeImageMask","_ref$isInline","_ref$smask","_ref$mask","_ref$isMask","isMask","matte","needsDecode","decodeCoefficients","decodeAddends","smaskPromise","maskPromise","_ref2$isInline","_ref2$nativeDecoder","imagePromise","imageData","smaskData","maskData","computedLength","decodeBuffer","getComponents","buf","bufferPos","rowComps","loop1End","loop2End","remainingBits","fillOpacity","rgbaBuf","alphaBuf","sw","sh","fillGrayBuffer","opacity","imageOffset","maskOffset","undoPreblend","matteRgb","matteR","matteG","matteB","forceRGBA","getImageBytes","newArray","imageLength","maybeUndoPreblend"],"mappings":"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eACAA,EAAA,aACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACA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AgjE,YAAA,GACG,WACHrtC,GAAA,UACA31B,IAAA,EACA6iE,eAAA,GACG,gBACHltC,GAAA,UACA31B,IAAA,EACA6iE,eAAA,EACAC,MAAA,IAEAntC,GAAA,WACA31B,IAAA,EACA6iE,eAAA,IAEAltC,GAAA,WACA31B,IAAA,EACA6iE,eAAA,IAEAltC,GAAA,UACA31B,IAAA,EACA6iE,eAAA,IAEAltC,GAAA,UACA31B,IAAA,EACA6iE,eAAA,IAEAltC,GAAA,UACA31B,IAAA,EACA6iE,eAAA,EACAC,MAAA,IAEAntC,GAAA,aACA31B,IAAA,EACA+iE,YAAA,IAEAptC,GAAA,aACA31B,IAAA,EACA+iE,YAAA,IAEAptC,GAAA,YACA31B,IAAA,EACA+iE,YAAA,IAEAptC,GAAA,YACA31B,IAAA,EACA+iE,YAAA,GACG,MACHptC,GAAA,YACA31B,IAAA,EACAgjE,YAAA,IAEArtC,GAAA,YACA31B,IAAA,EACA+iE,YAAA,IAEAptC,GAAA,YACA31B,IAAA,EACA+iE,YAAA,IAEAE,GAAA,gBACAttC,GAAA,MACA31B,IAAA,EACAkjE,YAAA,IAEAvtC,GAAA,KACA31B,IAAA,EACAkjE,YAAA,IAEAvtC,GAAA,MACA31B,IAAA,EACAkjE,WAAA,GACG,gBACHvtC,GAAA,MACA31B,IAAA,EACAkjE,WAAA,IAEAvtC,GAAA,MACA31B,IAAA,EACAkjE,YAAA,EACAC,QAAA,SAAAC,EAAApsC,GACAosC,EAAApsC,EAAA,GAAAosC,EAAApsC,EAAA,GAAAosC,EAAApsC,EAAA,MAGArB,GAAA,MACA31B,IAAA,EACAkjE,YAAA,EACAC,QAAA,SAAAC,EAAApsC,GACAosC,EAAApsC,EAAA,GAAAosC,EAAApsC,EAAA,GAAAosC,EAAApsC,EAAA,MAGArB,GAAA,MACA31B,IAAA,EACAkjE,YAAA,EACAC,QAAA,SAAAC,EAAApsC,GACAosC,EAAApsC,EAAA,GAAAosC,EAAApsC,EAAA,GAAAosC,EAAApsC,EAAA,KAEG,MACHrB,GAAA,MACA31B,IAAA,EACAkjE,WAAA,EACAC,QAAA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A,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA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kkE,EAAAjsB,MACA52C,EAAA6iE,EAAAjsB,MACAisB,EAAArhE,KAAAxB,EAAArB,GACA,MACA,UACAkkE,EAAA8Q,KAAA,GACA,MACA,SACAh1E,EAAAkkE,EAAAjsB,MACA52C,EAAA6iE,EAAAjsB,MACAisB,EAAArhE,KAAAxB,IAAArB,GACA,MACA,WACAkkE,EAAA+Q,KAAA,KACA,MACA,UACAj1E,EAAAkkE,EAAAjsB,MACA52C,EAAA6iE,EAAAjsB,MACAisB,EAAArhE,KAAAhC,KAAAwwB,IAAAhwB,EAAArB,IACA,MACA,YACAkkE,EAAArhE,MAAA,GACA,MACA,YACAxB,EAAA6iE,EAAAjsB,MACAisB,EAAArhE,KAAAhC,KAAAysB,MAAAjsB,IACA,MACA,SACArB,EAAAkkE,EAAAjsB,MACA52C,EAAA6iE,EAAAjsB,MACAisB,EAAArhE,KAAAxB,GAAArB,GACA,MACA,SACAA,EAAAkkE,EAAAjsB,MACA52C,EAAA6iE,EAAAjsB,MACAisB,EAAArhE,KAAAxB,EAAArB,GACA,MACA,WACAA,EAAAkkE,EAAAjsB,MACA52C,EAAA6iE,EAAAjsB,MACAisB,EAAArhE,KAAAxB,EAAArB,EAAA,GACA,MACA,YACAqB,EAAA6iE,EAAAjsB,MACAisB,EAAApsC,MAAAz2B,GACA,MACA,SACArB,EAAAkkE,EAAAjsB,MACA52C,EAAA6iE,EAAAjsB,MACAisB,EAAArhE,KAAAxB,GAAArB,GACA,MACA,SACAqB,EAAA6iE,EAAAjsB,MACAisB,EAAArhE,KAAAhC,KAAAnC,IAAA2C,IACA,MACA,UACAA,EAAA6iE,EAAAjsB,MACAisB,EAAArhE,KAAAhC,KAAAnC,IAAA2C,GAAAR,KAAAy0E,MACA,MACA,SACAt1E,EAAAkkE,EAAAjsB,MACA52C,EAAA6iE,EAAAjsB,MACAisB,EAAArhE,KAAAxB,EAAArB,GACA,MACA,UACAA,EAAAkkE,EAAAjsB,MACA52C,EAAA6iE,EAAAjsB,MACAisB,EAAArhE,KAAAxB,EAAArB,GACA,MACA,UACAA,EAAAkkE,EAAAjsB,MACA52C,EAAA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EAAA,OACAA,EAAA,OACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,aAGAlrB,EAAAmkI,cAIA,SAAAlkI,EAAAD,EAAAF,GAEA,aAGAa,OAAAC,eAAAZ,EAAA,cACAwB,OAAA,IAEAxB,EAAAk8E,iBAAAl8E,EAAAi8E,qBAAAt2E,EAEA,IAAAgiB,EAAA7nB,EAAA,GAEA8nB,EAAA9nB,EAAA,GAEAo8E,EAAA,WACA,SAAAA,EAAAx7C,GACA95B,KAAA85B,QACA95B,KAAAo2E,aACAp2E,KAAAm9C,MAAA,KACAn9C,KAAAqoG,KAAA,KAgEA,OA9DA/yB,EAAA96E,WACAuqJ,UAAA,WACA/kJ,KAAAqoG,KAAAroG,KAAAm9C,MACAn9C,KAAAm9C,MAAAn9C,KAAA85B,MAAAwjH,YAEA0H,OAAA,SAAA98I,GACA,OAAAlI,KAAAm9C,MAAAj1C,WACAlI,KAAA+kJ,aACA,IAIAE,OAAA,SAAA/8I,GACA,GAAAlI,KAAAglJ,OAAA98I,GACA,SAEA,UAAA6Y,EAAA7jB,YAAA,4BAAA8C,KAAAm9C,MAAAj1C,KAAA,aAAAA,EAAA,MAEAymB,MAAA,WAKA,OAJA3uB,KAAA+kJ,YACA/kJ,KAAAilJ,OAAAC,EAAAC,QACAnlJ,KAAAolJ,aACAplJ,KAAAilJ,OAAAC,EAAAG,QACArlJ,KAAAo2E,WAEAgvE,WAAA,WACA,OACA,GAAAplJ,KAAAglJ,OAAAE,EAAAI,QACAtlJ,KAAAo2E,UAAAryE,KAAA/D,KAAAqoG,KAAAztG,YACS,GAAAoF,KAAAglJ,OAAAE,EAAAK,UACTvlJ,KAAAo2E,UAAAryE,KAAA/D,KAAAqoG,KAAAztG,WACS,KAAAoF,KAAAglJ,OAAAE,EAAAC,QAGT,OAFAnlJ,KAAAwlJ,mBAMAA,eAAA,WACA,IAAAC,EAAAzlJ,KAAAo2E,UAAA51E,OAIA,GAHAR,KAAAo2E,UAAAryE,KAAA,WACA/D,KAAAolJ,aACAplJ,KAAAilJ,OAAAC,EAAAG,QACArlJ,KAAAglJ,OAAAE,EAAAQ,IACA1lJ,KAAAo2E,UAAAqvE,GAAAzlJ,KAAAo2E,UAAA51E,OACAR,KAAAo2E,UAAAqvE,EAAA,YACO,KAAAzlJ,KAAAglJ,OAAAE,EAAAC,QAYP,UAAApkI,EAAA7jB,YAAA,2CAXA,IAAAyoJ,EAAA3lJ,KAAAo2E,UAAA51E,OACAR,KAAAo2E,UAAAryE,KAAA,WACA,IAAA6hJ,EAAA5lJ,KAAAo2E,UAAA51E,OACAR,KAAAolJ,aACAplJ,KAAAilJ,OAAAC,EAAAG,QACArlJ,KAAAilJ,OAAAC,EAAAW,QACA7lJ,KAAAo2E,UAAAuvE,GAAA3lJ,KAAAo2E,UAAA51E,OACAR,KAAAo2E,UAAAuvE,EAAA,OACA3lJ,KAAAo2E,UAAAqvE,GAAAG,EACA5lJ,KAAAo2E,UAAAqvE,EAAA,WAMAnwE,EArEA,GAuEA4vE,GACAC,OAAA,EACAE,OAAA,EACAC,OAAA,EACAC,SAAA,EACAG,GAAA,EACAG,OAAA,GAEAC,EAAA,WACA,SAAAA,EAAA59I,EAAAtN,GACAoF,KAAAkI,OACAlI,KAAApF,QAEA,IAAAmrJ,EAAAhsJ,OAAAkL,OAAA,MAYA,OAXA6gJ,EAAAE,YAAA,SAAAlvE,GACA,IAAAmvE,EAAAF,EAAAjvE,GACA,OAAAmvE,IAGAF,EAAAjvE,GAAA,IAAAgvE,EAAAZ,EAAAK,SAAAzuE,KAEAgvE,EAAAX,OAAA,IAAAW,EAAAZ,EAAAC,OAAA,KACAW,EAAAT,OAAA,IAAAS,EAAAZ,EAAAG,OAAA,KACAS,EAAAJ,GAAA,IAAAI,EAAAZ,EAAAQ,GAAA,MACAI,EAAAD,OAAA,IAAAC,EAAAZ,EAAAW,OAAA,UACAC,EAjBA,GAmBAzwE,EAAA,WACA,SAAAA,EAAArrE,GACAhK,KAAAgK,SACAhK,KAAAo8B,WACAp8B,KAAAka,UAiFA,OA/EAm7D,EAAA76E,WACA4hC,SAAA,WACA,OAAAp8B,KAAAu9B,YAAAv9B,KAAAgK,OAAAmX,WAEAm8H,SAAA,WAGA,IAFA,IAAA5+G,GAAA,EACA3jB,EAAA/a,KAAAu9B,cACA,CACA,GAAAxiB,EAAA,EACA,OAAAiG,EAAA1E,IAEA,GAAAoiB,EACA,KAAA3jB,GAAA,KAAAA,IACA2jB,GAAA,QAES,QAAA3jB,EACT2jB,GAAA,OACS,OAAA3d,EAAA/kB,SAAA+e,GACT,MAEAA,EAAA/a,KAAAo8B,WAEA,SAAArhB,GACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,WAAA+qI,EAAAZ,EAAAI,OAAAtlJ,KAAAy9B,aACA,SAEA,OADAz9B,KAAAo8B,WACA0pH,EAAAX,OACA,SAEA,OADAnlJ,KAAAo8B,WACA0pH,EAAAT,OAEA,IAAAnrI,EAAAla,KAAAka,OAGA,IAFAA,EAAA1Z,OAAA,EACA0Z,EAAA,GAAAF,OAAAC,aAAAc,IACAA,EAAA/a,KAAAo8B,aAAA,IAAArhB,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,MACAb,EAAAnW,KAAAiW,OAAAC,aAAAc,IAEA,IAAAxa,EAAA2Z,EAAA/Y,KAAA,IACA,OAAAZ,EAAA0D,eACA,SACA,OAAA6hJ,EAAAJ,GACA,aACA,OAAAI,EAAAD,OACA,QACA,OAAAC,EAAAE,YAAAzlJ,KAGAk9B,UAAA,WACA,IAAA1iB,EAAA/a,KAAAu9B,YACArjB,EAAAla,KAAAka,OAGA,IAFAA,EAAA1Z,OAAA,EACA0Z,EAAA,GAAAF,OAAAC,aAAAc,IACAA,EAAA/a,KAAAo8B,aAAA,IACArhB,GAAA,IAAAA,GAAA,SAAAA,GAAA,KAAAA,IACAb,EAAAnW,KAAAiW,OAAAC,aAAAc,IAKA,IAAAngB,EAAA2tE,WAAAruD,EAAA/Y,KAAA,KACA,GAAA4+B,MAAAnlC,GACA,UAAAmmB,EAAA7jB,YAAA,kCAAAtC,GAEA,OAAAA,IAGAy6E,EArFA,GAuFAj8E,EAAAi8E,kBACAj8E,EAAAk8E,oBAIA,SAAAj8E,EAAAD,EAAAF,GAEA,aAGAa,OAAAC,eAAAZ,EAAA,cACAwB,OAAA,IAEAxB,EAAAwkI,oBAAA7+H,EAEA,IAAAgiB,EAAA7nB,EAAA,GAEA0kI,EAAA,SAAAsoB,GAGA,SAAAtoB,EAAAsoB,GAEAlmJ,KAAA8tB,GAAAo4H,EAAA,WAAAA,EADA,WAEAlmJ,KAAAguB,GAAAk4H,EAAA,WAAAA,EAFA,WAiGA,OA7FAtoB,EAAApjI,WACAqjI,OAAA,SAAAr2G,GACA,IAAAzf,OAAA,EACAvH,OAAA,EACA,MAAAugB,EAAA9kB,UAAAurB,GAAA,CACAzf,EAAA,IAAArH,WAAA,EAAA8mB,EAAAhnB,QACAA,EAAA,EACA,QAAAlH,EAAA,EAAAiP,EAAAif,EAAAhnB,OAA0ClH,EAAAiP,EAAQjP,IAAA,CAClD,IAAAyG,EAAAynB,EAAA7mB,WAAArH,GACAyG,GAAA,IACAgI,EAAAvH,KAAAT,GAEAgI,EAAAvH,KAAAT,IAAA,EACAgI,EAAAvH,KAAA,IAAAT,QAGO,QAAAghB,EAAA1kB,eAAAmrB,GAIP,UAAA3nB,MAAA,gFAFAW,GADAuH,EAAAyf,GACA3mB,WAeA,IAXA,IAAAslJ,EAAA3lJ,GAAA,EACA4lJ,EAAA5lJ,EAAA,EAAA2lJ,EACAE,EAAA,IAAA3qI,YAAA3T,EAAAO,OAAA,EAAA69I,GACA3kF,EAAA,EACA8kF,EAAA,EACAx4H,EAAA9tB,KAAA8tB,GACAE,EAAAhuB,KAAAguB,GACAu4H,EAAA,WACAC,EAAA,UAGA1yG,EAAA,EAAsBA,EAAAqyG,EAAkBryG,IACxC,EAAAA,EAOAhmB,EAAA,GADAA,GADAA,GADA0zC,GADAA,GADAA,GADAA,EAAA6kF,EAAAvyG,IACAyyG,EA3CA,WAsCAA,MAKA/kF,EA1CA,QA2CA,GAAAA,IAAA,IACAglF,EA7CA,WAuCAA,MAMAhlF,EA5CA,QA8CA,GAAA1zC,IAAA,IACA,WAQAE,EAAA,GADAA,GADAA,GADAs4H,GADAA,GADAA,GADAA,EAAAD,EAAAvyG,IACAyyG,EAnDA,WAsCAA,MAaAD,EAlDA,QAmDA,GAAAA,IAAA,IACAE,EArDA,WAuCAA,MAcAF,EApDA,QAsDA,GAAAt4H,IAAA,IACA,WAIA,OADAwzC,EAAA,EACA4kF,GACA,OACA5kF,GAAAz5D,EAAA,EAAAo+I,EAAA,OACA,OACA3kF,GAAAz5D,EAAA,EAAAo+I,EAAA,MACA,OAIA3kF,GADAA,GADAA,GADAA,GAAAz5D,EAAA,EAAAo+I,IACAI,EAnEA,WAsCAA,MA6BA/kF,EAlEA,QAmEA,GAAAA,IAAA,IACAglF,EArEA,WAuCAA,MA8BAhlF,EApEA,MAqEA,EAAA2kF,EACAr4H,GAAA0zC,EAEAxzC,GAAAwzC,EAKA,OAFAxhE,KAAA8tB,KACA9tB,KAAAguB,KACAhuB,MAEAi+H,UAAA,WACA,IAAAnwG,EAAA9tB,KAAA8tB,GACAE,EAAAhuB,KAAAguB,GAEAF,EAAA,YADAA,GAAAE,IAAA,GAnFA,WAoFA,MAAAF,EAnFA,MAsFAA,EAAA,WADAA,IADAE,EAAA,WAAAA,EArFA,YAqFA,YAAAA,GAAA,GAAAF,IAAA,IArFA,cAqFA,MACA,GAtFA,WAuFA,MAAAA,EAtFA,MAyFA,QAAAx0B,EAAA,EAAAsH,GADAktB,IADAE,EAAA,WAAAA,EAxFA,YAwFA,YAAAA,GAAA,GAAAF,IAAA,IAxFA,cAwFA,MACA,EACAE,GAAAztB,EAAA,GAA+CjH,EAAAsH,EAAAJ,OAAgBlH,IAAA,CAE/D,IADA,IAAAytG,GAAAnmG,EAAAtH,KAAA,GAAAmR,SAAA,IACAs8F,EAAAvmG,OAAA,GACAumG,EAAA,IAAAA,EAEAxmG,GAAAwmG,EAEA,OAAAxmG,IAGAq9H,EArGA,GAuGAxkI,EAAAwkI,kBAIA,SAAAvkI,EAAAD,EAAAF,GAEA,aAGAa,OAAAC,eAAAZ,EAAA,cACAwB,OAAA,IAEAxB,EAAAu1H,cAAA5vH,EAEA,IAAAy0C,EAAA,WAA4a,gBAAA5yC,EAAAtH,GAA2B,GAAA+K,MAAAwZ,QAAAjd,GAA0B,OAAAA,EAAc,GAAA3B,OAAAC,YAAAnF,OAAA6G,GAA2C,OAAxf,SAAAA,EAAAtH,GAAiC,IAAAm6C,KAAeC,GAAA,EAAeC,GAAA,EAAgBC,OAAA70C,EAAoB,IAAM,QAAA80C,EAAAC,EAAAlzC,EAAA3B,OAAAC,cAA0Cw0C,GAAAG,EAAAC,EAAA7a,QAAAC,QAA4Cua,EAAA1vC,KAAA8vC,EAAAj5C,QAAqBtB,GAAAm6C,EAAAjzC,SAAAlH,GAAlCo6C,GAAA,IAAyE,MAAAT,GAAcU,GAAA,EAAWC,EAAAX,EAAY,QAAU,KAAMS,GAAAI,EAAA,QAAAA,EAAA,SAA2C,QAAU,GAAAH,EAAA,MAAAC,GAAsB,OAAAH,EAA6HM,CAAAnzC,EAAAtH,GAAuC,UAAAwxB,UAAA,yDAAjkB,GAEA/J,EAAA7nB,EAAA,GAEA8nB,EAAA9nB,EAAA,GAEAi7C,EAAAj7C,EAAA,IAEAogC,EAAApgC,EAAA,GAEAugC,EAAAvgC,EAAA,IAEAqpH,EAAArpH,EAAA,IAEAy1H,EAAA,WACA,SAAA83B,EAAAh6B,EAAA0C,GACA,OAAAA,KAAA3C,UAAAC,GACA0C,EAAAv+F,OAAA67F,GAAAj/G,MAAA,SAAAzE,GAEA,OADA,EAAAgY,EAAAjmB,MAAA,uDAAAiO,KAAA9I,UACAwsH,IAGA9kH,QAAAC,QAAA6kH,GAEA,SAAAi6B,EAAA9rJ,EAAA+rJ,EAAAC,EAAA3kJ,GAEA,OADArH,EAAA+rJ,EAAA/rJ,EAAAgsJ,GACA,IAAAhsJ,EAAAqH,IAAArH,EAEA,SAAAisJ,EAAA1hJ,EAAAioB,EAAAS,EAAAC,EAAAC,EAAAC,GACA,IAIA10B,EACAqtB,EACAsH,EAEAC,EARA1tB,EAAAutB,EAAAC,EACAxB,EAAAY,GAAA,MAAA1sB,WAAAF,GAAA4sB,GAAA,OAAA9E,YAAA9nB,GAAA,IAAAkb,YAAAlb,GACA2tB,EAAAN,EAAAE,EACAK,EAAAN,EAAAE,EAIAK,EAAA,EAEAC,EAAA,IAAAhG,YAAAyF,GACAQ,EAAAV,EACA,IAAAv0B,EAAA,EAAeA,EAAAy0B,EAAQz0B,IACvBg1B,EAAAh1B,GAAAyI,KAAAysB,MAAAl1B,EAAA60B,GAEA,IAAA70B,EAAA,EAAeA,EAAA00B,EAAQ10B,IAEvB,IADA20B,EAAAlsB,KAAAysB,MAAAl1B,EAAA80B,GAAAG,EACA5H,EAAA,EAAiBA,EAAAoH,EAAQpH,IACzBuH,EAAAD,EAAAK,EAAA3H,GACA6F,EAAA6B,KAAAlpB,EAAA+oB,GAGA,OAAA1B,EAEA,SAAAmiG,EAAAt0G,GACA,IAAA2C,EAAA3C,EAAA2C,KACA6R,EAAAxU,EAAAwU,IACA49F,EAAApyG,EAAAoyG,MACAq6B,EAAAzsI,EAAAi0G,SACAA,OAAAvvH,IAAA+nJ,KACAC,EAAA1sI,EAAA7G,MACAA,OAAAzU,IAAAgoJ,EAAA,KAAAA,EACAC,EAAA3sI,EAAAu5F,KACAA,OAAA70G,IAAAioJ,EAAA,KAAAA,EACAC,EAAA5sI,EAAA6sI,OACAA,OAAAnoJ,IAAAkoJ,KACAn4H,EAAAzU,EAAAyU,mBAEA9uB,KAAAysH,QACA,IAAAnyG,EAAAmyG,EAAAnyG,KACA,GAAAA,EAAA6D,IAAA,WACA,IAAAud,EAAAphB,EAAAngB,IAAA,UAAAP,KACA,iBAAA8hC,EAAA,CACA,IAAA8mF,EAAA,IAAAD,EAAAp+D,SACAq+D,EAAA3vD,qBAAA45D,EAAAziH,QACAyiH,EAAAziH,OAAA4X,QACA6qG,EAAA9qF,iBAAA6gF,EAAA7gF,iBACA8qF,EAAAj/F,SAAAg1F,EAAA/2D,oBACO,gBAAA/vB,IACP+wF,EAAA9qF,iBAAA,EACA8qF,EAAAj/F,SAAA,GAKA,GAFAxtB,KAAAyG,MAAA6T,EAAAngB,IAAA,aACA6F,KAAA0G,OAAA4T,EAAAngB,IAAA,cACA6F,KAAAyG,MAAA,GAAAzG,KAAA0G,OAAA,EACA,UAAAqa,EAAA7jB,YAAA,wBAAA8C,KAAAyG,MAAA,eAAAzG,KAAA0G,QAEA1G,KAAAozE,YAAA94D,EAAAngB,IAAA,uBACA6F,KAAA0kC,UAAApqB,EAAAngB,IAAA,sBACA6F,KAAAmnJ,MAAA7sI,EAAAngB,IAAA,aACA,IAAAwnC,EAAA8qF,EAAA9qF,iBACA,IAAAA,KACAA,EAAArnB,EAAAngB,IAAA,2BACA,CACA,IAAA6F,KAAA0kC,UAGA,UAAA3jB,EAAA7jB,YAAA,wCAAA8C,KAAA0kC,WAFA/C,EAAA,EAOA,GADA3hC,KAAAotB,IAAAuU,GACA3hC,KAAA0kC,UAAA,CACA,IAAAioF,EAAAryG,EAAAngB,IAAA,mBACA,IAAAwyH,EAEA,QADA,EAAA5rG,EAAAzkB,MAAA,kDACAmwH,EAAAj/F,UACA,OACAm/F,EAAA3rG,EAAAzE,KAAApiB,IAAA,cACA,MACA,OACAwyH,EAAA3rG,EAAAzE,KAAApiB,IAAA,aACA,MACA,OACAwyH,EAAA3rG,EAAAzE,KAAApiB,IAAA,cACA,MACA,QACA,UAAA0F,MAAA,mBAAAG,KAAAwtB,SAAA,oCAGA,IAAAi2E,EAAA6qB,EAAAz/F,EAAA,KACA7uB,KAAA2sH,WAAAx4E,EAAAhoB,WAAAwC,MAAAg+F,EAAA3vG,EAAAymF,EAAA30E,GACA9uB,KAAAwtB,SAAAxtB,KAAA2sH,WAAAn/F,SAIA,GAFAxtB,KAAA4wB,OAAAtW,EAAAE,SAAA,cACAxa,KAAAonJ,aAAA,EACApnJ,KAAA4wB,SAAA5wB,KAAA2sH,aAAA3sH,KAAA2sH,WAAAh8F,gBAAA3wB,KAAA4wB,SAAAs2H,IAAA/yG,EAAAhoB,WAAAwE,gBAAA3wB,KAAA4wB,OAAA,KACA5wB,KAAAonJ,aAAA,EACA,IAAAnlJ,GAAA,GAAA0/B,GAAA,EACA3hC,KAAAqnJ,sBACArnJ,KAAAsnJ,iBACA,QAAAhuJ,EAAA,EAAAqtB,EAAA,EAA4BrtB,EAAA0G,KAAA4wB,OAAApwB,OAAwBlH,GAAA,IAAAqtB,EAAA,CACpD,IAAAquD,EAAAh1E,KAAA4wB,OAAAt3B,GACA27E,EAAAj1E,KAAA4wB,OAAAt3B,EAAA,GACA0G,KAAAqnJ,mBAAA1gI,GAAAsuD,EAAAD,EACAh1E,KAAAsnJ,cAAA3gI,GAAA1kB,EAAA+yE,GAGA,GAAAxhE,EACAxT,KAAAwT,MAAA,IAAAm7G,GACA3xG,OACA6R,MACA49F,MAAAj5G,EACA86G,WACAx/F,4BAEK,GAAA8kF,EAAA,CACL,MAAA5yF,EAAApB,UAAAg0F,GACAA,EAAAt5F,KACAngB,IAAA,kBAIA6F,KAAA4zG,KAAA,IAAA+a,GACA3xG,OACA6R,MACA49F,MAAA7Y,EACA0a,WACA44B,QAAA,EACAp4H,wBARA,EAAA/N,EAAAjmB,MAAA,oDAYAkF,KAAA4zG,QAkYA,OA9XA+a,EAAAO,WAAA,SAAA5iH,GACAA,EAAAvB,QAAA,IAWAw8I,EACAC,EAXAxqI,EAAA1Q,EAAA0Q,KACA6R,EAAAviB,EAAAuiB,IACA49F,EAAAngH,EAAAmgH,MACAg7B,EAAAn7I,EAAAgiH,SACAA,OAAAvvH,IAAA0oJ,KACAC,EAAAp7I,EAAA6iH,cACAA,OAAApwH,IAAA2oJ,EAAA,KAAAA,EACA54H,EAAAxiB,EAAAwiB,mBAEA64H,EAAAlB,EAAAh6B,EAAA0C,GAGA37G,EAAAi5G,EAAAnyG,KAAAngB,IAAA,SACAy5G,EAAA6Y,EAAAnyG,KAAAngB,IAAA,QAmBA,OAlBAqZ,GACA+zI,EAAAd,EAAAjzI,EAAA27G,GACAq4B,EAAA7/I,QAAAC,QAAA,QAEA2/I,EAAA5/I,QAAAC,QAAA,MACAgsG,GACA,EAAA5yF,EAAApB,UAAAg0F,GACA4zC,EAAAf,EAAA7yC,EAAAub,GACS9qH,MAAAwZ,QAAA+1F,GACT4zC,EAAA7/I,QAAAC,QAAAgsG,KAEA,EAAA7yF,EAAAjmB,MAAA,4BACA0sJ,EAAA7/I,QAAAC,QAAA,OAGA4/I,EAAA7/I,QAAAC,QAAA,OAGAD,QAAA2F,KAAAq6I,EAAAJ,EAAAC,IAAAj9I,KAAA,SAAA6C,GACA,IAAAwlE,EAAAp/B,EAAApmC,EAAA,GACAw6I,EAAAh1E,EAAA,GACAi1E,EAAAj1E,EAAA,GACAk1E,EAAAl1E,EAAA,GAEA,WAAA+7C,GACA3xG,OACA6R,MACA49F,MAAAm7B,EACAt5B,WACA96G,MAAAq0I,EACAj0C,KAAAk0C,EACAh5H,0BAIA6/F,EAAAC,WAAA,SAAA/7C,GACA,IASA9qE,EAAAzO,EATAo1H,EAAA77C,EAAA67C,SACAjoH,EAAAosE,EAAApsE,MACAC,EAAAmsE,EAAAnsE,OACAmoH,EAAAh8C,EAAAg8C,wBACAC,EAAAj8C,EAAAi8C,cAEAi5B,GAAAthJ,EAAA,MAAAC,EACA2wI,EAAA3oB,EAAA7tH,WAGA,IAAAguH,GAAAC,KAFAi5B,IAAA1Q,GAIK,GAAAvoB,EAML,KAFA/mH,EAAA,IAAArH,WAAAqnJ,IACAhuI,IAAA20G,GACAp1H,EAAA+9I,EAA4B/9I,EAAAyuJ,EAAoBzuJ,IAChDyO,EAAAzO,GAAA,SANAyO,EAAA,IAAArH,WAAA22I,IACAt9H,IAAA20G,QAHA3mH,EAAA2mH,EAWA,GAAAI,EACA,IAAAx1H,EAAA,EAAiBA,EAAA+9I,EAAkB/9I,IACnCyO,EAAAzO,IAAA,IAGA,OACAyO,OACAtB,QACAC,WAGAioH,EAAAn0H,WACA0nC,gBACA,OAAAngC,KAAAE,IAAAjC,KAAAyG,MAAAzG,KAAAwT,OAAAxT,KAAAwT,MAAA/M,OAAA,EAAAzG,KAAA4zG,MAAA5zG,KAAA4zG,KAAAntG,OAAA,IAEA07B,iBACA,OAAApgC,KAAAE,IAAAjC,KAAA0G,OAAA1G,KAAAwT,OAAAxT,KAAAwT,MAAA9M,QAAA,EAAA1G,KAAA4zG,MAAA5zG,KAAA4zG,KAAAltG,QAAA,IAEAshJ,aAAA,SAAA1/I,GACA,IAKAhP,EAAAiP,EALA6kB,EAAAptB,KAAAotB,IACAI,EAAAxtB,KAAAwtB,SACA85H,EAAAtnJ,KAAAsnJ,cACAD,EAAArnJ,KAAAqnJ,mBACAplJ,GAAA,GAAAmrB,GAAA,EAEA,OAAAA,EAAA,CAMA,IAAA4L,EAAA,EACA,IAAA1/B,EAAA,EAAAiP,EAAAvI,KAAAyG,MAAAzG,KAAA0G,OAAgDpN,EAAAiP,EAAQjP,IACxD,QAAAqtB,EAAA,EAAuBA,EAAA6G,EAAc7G,IACrCre,EAAA0wB,GAAA0tH,EAAAp+I,EAAA0wB,GAAAsuH,EAAA3gI,GAAA0gI,EAAA1gI,GAAA1kB,GACA+2B,SATA,IAAA1/B,EAAA,EAAAiP,EAAAD,EAAA9H,OAAuClH,EAAAiP,EAAQjP,IAC/CgP,EAAAhP,KAAAgP,EAAAhP,IAYA2uJ,cAAA,SAAA3/I,GACA,IAAA8kB,EAAAptB,KAAAotB,IACA,OAAAA,EACA,OAAA9kB,EAEA,IASAC,EACA2/I,EAVAzhJ,EAAAzG,KAAAyG,MACAC,EAAA1G,KAAA0G,OACA8mB,EAAAxtB,KAAAwtB,SACAhtB,EAAAiG,EAAAC,EAAA8mB,EACA26H,EAAA,EACAxtF,EAAAvtC,GAAA,MAAA1sB,WAAAF,GAAA4sB,GAAA,OAAA9E,YAAA9nB,GAAA,IAAAkb,YAAAlb,GACA4nJ,EAAA3hJ,EAAA+mB,EACAvrB,GAAA,GAAAmrB,GAAA,EACA9zB,EAAA,EAGA,OAAA8zB,EAEA,IADA,IAAAwmF,EAAAy0C,EAAAC,EACA3hI,EAAA,EAAuBA,EAAAjgB,EAAYigB,IAAA,CAGnC,IAFA0hI,EAAA/uJ,IAAA,EAAA8uJ,GACAE,EAAAhvJ,EAAA8uJ,EACA9uJ,EAAA+uJ,GACAH,EAAA5/I,EAAA6/I,KACAxtF,EAAArhE,GAAA4uJ,GAAA,IACAvtF,EAAArhE,EAAA,GAAA4uJ,GAAA,IACAvtF,EAAArhE,EAAA,GAAA4uJ,GAAA,IACAvtF,EAAArhE,EAAA,GAAA4uJ,GAAA,IACAvtF,EAAArhE,EAAA,GAAA4uJ,GAAA,IACAvtF,EAAArhE,EAAA,GAAA4uJ,GAAA,IACAvtF,EAAArhE,EAAA,GAAA4uJ,GAAA,IACAvtF,EAAArhE,EAAA,KAAA4uJ,EACA5uJ,GAAA,EAEA,GAAAA,EAAAgvJ,EAGA,IAFAJ,EAAA5/I,EAAA6/I,KACAv0C,EAAA,IACAt6G,EAAAgvJ,GACA3tF,EAAArhE,SAAA4uJ,EAAAt0C,GACAA,IAAA,MAIO,CACP,IAAAlwF,EAAA,EAEA,IADAwkI,EAAA,EACA5uJ,EAAA,EAAAiP,EAAA/H,EAAgClH,EAAAiP,IAAQjP,EAAA,CAKxC,IAJAA,EAAA8uJ,GAAA,IACAF,EAAA,EACAxkI,EAAA,GAEAA,EAAA0J,GACA86H,KAAA,EAAA5/I,EAAA6/I,KACAzkI,GAAA,EAEA,IAAA6kI,EAAA7kI,EAAA0J,EACAxyB,EAAAstJ,GAAAK,EACA5tF,EAAArhE,GAAAsB,EAAA,IAAAA,EAAAqH,IAAArH,EACAstJ,IAAA,GAAAK,GAAA,EACA7kI,EAAA6kI,GAGA,OAAA5tF,GAEA6tF,YAAA,SAAAC,EAAAhiJ,EAAAC,EAAAymB,EAAAs/F,GACA,IAEAi8B,EAAAC,EAAAC,EAAAtvJ,EAAAiP,EAAAoe,EAFAnT,EAAAxT,KAAAwT,MACAogG,EAAA5zG,KAAA4zG,KAEA,GAAApgG,EACAm1I,EAAAn1I,EAAA/M,MACAmiJ,EAAAp1I,EAAA9M,OACAgiJ,EAAA,IAAAhoJ,WAAAioJ,EAAAC,GACAp1I,EAAAq1I,eAAAH,GACAC,IAAAliJ,GAAAmiJ,IAAAliJ,IACAgiJ,EAAA7B,EAAA6B,EAAAl1I,EAAA4Z,IAAAu7H,EAAAC,EAAAniJ,EAAAC,SAEO,GAAAktG,EACP,GAAAA,aAAA+a,EAAA,CAMA,IALAg6B,EAAA/0C,EAAAntG,MACAmiJ,EAAAh1C,EAAAltG,OACAgiJ,EAAA,IAAAhoJ,WAAAioJ,EAAAC,GACAh1C,EAAApmF,SAAA,EACAomF,EAAAi1C,eAAAH,GACApvJ,EAAA,EAAAiP,EAAAogJ,EAAAC,EAAmCtvJ,EAAAiP,IAAQjP,EAC3CovJ,EAAApvJ,GAAA,IAAAovJ,EAAApvJ,GAEAqvJ,IAAAliJ,GAAAmiJ,IAAAliJ,IACAgiJ,EAAA7B,EAAA6B,EAAA90C,EAAAxmF,IAAAu7H,EAAAC,EAAAniJ,EAAAC,QAES,KAAArC,MAAAwZ,QAAA+1F,GAiBT,UAAA7yF,EAAA7jB,YAAA,wBAhBAwrJ,EAAA,IAAAhoJ,WAAA+F,EAAAC,GACA,IAAA8mB,EAAAxtB,KAAAwtB,SACA,IAAAl0B,EAAA,EAAAiP,EAAA9B,EAAAC,EAA0CpN,EAAAiP,IAAQjP,EAAA,CAClD,IAAAwvJ,EAAA,EACAC,EAAAzvJ,EAAAk0B,EACA,IAAA7G,EAAA,EAAuBA,EAAA6G,IAAc7G,EAAA,CACrC,IAAAoN,EAAA04F,EAAAs8B,EAAApiI,GACAqiI,EAAA,EAAAriI,EACA,GAAAoN,EAAA6/E,EAAAo1C,IAAAj1H,EAAA6/E,EAAAo1C,EAAA,IACAF,EAAA,IACA,OAGAJ,EAAApvJ,GAAAwvJ,GAMA,GAAAJ,EACA,IAAApvJ,EAAA,EAAAqtB,EAAA,EAAApe,EAAA9B,EAAA0mB,EAAqD7zB,EAAAiP,IAAQjP,EAAAqtB,GAAA,EAC7D8hI,EAAA9hI,GAAA+hI,EAAApvJ,QAGA,IAAAA,EAAA,EAAAqtB,EAAA,EAAApe,EAAA9B,EAAA0mB,EAAqD7zB,EAAAiP,IAAQjP,EAAAqtB,GAAA,EAC7D8hI,EAAA9hI,GAAA,KAIAsiI,aAAA,SAAA3gJ,EAAA7B,EAAAC,GACA,IAAAygJ,EAAAnnJ,KAAAwT,OAAAxT,KAAAwT,MAAA2zI,MACA,GAAAA,EASA,IANA,IAKAnmJ,EAAAC,EAAAC,EALAgoJ,EAAAlpJ,KAAA2sH,WAAAvgG,OAAA+6H,EAAA,GACAgC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACA1oJ,EAAAiG,EAAAC,EAAA,EAEApN,EAAA,EAAqBA,EAAAkH,EAAYlH,GAAA,GACjC,IAAAs/D,EAAAtwD,EAAAhP,EAAA,GACA,OAAAs/D,EAAA,CAMA,IAAArzC,EAAA,IAAAqzC,EACA53D,GAAAsH,EAAAhP,GAAA6vJ,GAAA5jI,EAAA4jI,EACAloJ,GAAAqH,EAAAhP,EAAA,GAAA8vJ,GAAA7jI,EAAA6jI,EACAloJ,GAAAoH,EAAAhP,EAAA,GAAA+vJ,GAAA9jI,EAAA8jI,EACA/gJ,EAAAhP,GAAA0H,GAAA,IAAAA,GAAA,UAAAA,EACAsH,EAAAhP,EAAA,GAAA2H,GAAA,IAAAA,GAAA,UAAAA,EACAqH,EAAAhP,EAAA,GAAA4H,GAAA,IAAAA,GAAA,UAAAA,OAXAoH,EAAAhP,GAAA,IACAgP,EAAAhP,EAAA,OACAgP,EAAAhP,EAAA,SAYA01H,gBAAA,WACA,IAaAN,EAbA46B,EAAAnhJ,UAAA3H,OAAA,QAAAzB,IAAAoJ,UAAA,IAAAA,UAAA,GAEA+5B,EAAAliC,KAAAkiC,UACAC,EAAAniC,KAAAmiC,WACA+B,GACAz9B,MAAAy7B,EACAx7B,OAAAy7B,GAEA3U,EAAAxtB,KAAAwtB,SACAP,EAAAjtB,KAAAyG,MACAymB,EAAAltB,KAAA0G,OACA0mB,EAAAptB,KAAAotB,IACAnH,EAAAgH,EAAAO,EAAAJ,EAAA,KAEA,IAAAk8H,EAAA,CACA,IAAA/kH,EAMA,GALA,eAAAvkC,KAAA2sH,WAAA/yH,MAAA,IAAAwzB,EACAmX,EAAAxjB,EAAA3iB,UAAA4Z,eACS,cAAAhY,KAAA2sH,WAAA/yH,MAAA,IAAAwzB,GAAAptB,KAAAonJ,cACT7iH,EAAAxjB,EAAA3iB,UAAA6Z,WAEAssB,IAAAvkC,KAAAwT,QAAAxT,KAAA4zG,MAAA1xE,IAAAjV,GAAAkV,IAAAjV,EAAA,CAGA,GAFAgX,EAAAK,OACAmqF,EAAA1uH,KAAAupJ,cAAAr8H,EAAAjH,GACAjmB,KAAAysH,iBAAAnzF,EAAA3Y,aACAujB,EAAAn8B,KAAA2mH,MACW,CACX,IAAA86B,EAAA,IAAA9oJ,WAAAguH,EAAAluH,QACAgpJ,EAAAzvI,IAAA20G,GACAxqF,EAAAn8B,KAAAyhJ,EAEA,GAAAxpJ,KAAAonJ,YAAA,EACA,EAAArmI,EAAAhkB,QAAAwnC,IAAAxjB,EAAA3iB,UAAA4Z,gBAEA,IADA,IAAA1P,EAAA47B,EAAAn8B,KACAzO,EAAA,EAAAiP,EAAAD,EAAA9H,OAA+ClH,EAAAiP,EAAQjP,IACvDgP,EAAAhP,IAAA,IAGA,OAAA4qC,EAEA,GAAAlkC,KAAAysH,iBAAAhzF,EAAAuD,aAAAh9B,KAAAwT,QAAAxT,KAAA4zG,KAAA,CACA,IAAA61C,EAAAv8H,EAAAjH,EACA,OAAAjmB,KAAA2sH,WAAA/yH,MACA,iBACA6vJ,GAAA,EACA,gBACA,iBAGA,OAFAvlH,EAAAK,KAAAxjB,EAAA3iB,UAAA6Z,UACAisB,EAAAn8B,KAAA/H,KAAAupJ,cAAAE,EAAAvnH,EAAAC,GAAA,GACA+B,IAKA,IAEAtX,EAAA88H,EAFAv8H,EAAA,GADAuhG,EAAA1uH,KAAAupJ,cAAAr8H,EAAAjH,IACAzlB,OAAAylB,EAAAkc,EAAAjV,EACAG,EAAArtB,KAAAioJ,cAAAv5B,GAqBA,OAnBA46B,GAAAtpJ,KAAAwT,OAAAxT,KAAA4zG,MAMA1vE,EAAAK,KAAAxjB,EAAA3iB,UAAA8Z,WACAgsB,EAAAn8B,KAAA,IAAArH,WAAAwhC,EAAAC,EAAA,GACAvV,EAAA,EACA88H,GAAA,EACA1pJ,KAAAwoJ,YAAAtkH,EAAAn8B,KAAAm6B,EAAAC,EAAAhV,EAAAE,KATA6W,EAAAK,KAAAxjB,EAAA3iB,UAAA6Z,UACAisB,EAAAn8B,KAAA,IAAArH,WAAAwhC,EAAAC,EAAA,GACAvV,EAAA,EACA88H,GAAA,GAQA1pJ,KAAAonJ,aACApnJ,KAAAgoJ,aAAA36H,GAEArtB,KAAA2sH,WAAA3/F,QAAAkX,EAAAn8B,KAAAklB,EAAAC,EAAAgV,EAAAC,EAAAhV,EAAAC,EAAAC,EAAAT,GACA88H,GACA1pJ,KAAAipJ,aAAA/kH,EAAAn8B,KAAAm6B,EAAA/U,GAEA+W,GAEA2kH,eAAA,SAAAvgJ,GACA,IAAAklB,EAAAxtB,KAAAwtB,SACA,OAAAA,EACA,UAAAzM,EAAA7jB,YAAA,0CAAAswB,GAEA,IAMAl0B,EAAAkH,EANAiG,EAAAzG,KAAAyG,MACAC,EAAA1G,KAAA0G,OACA0mB,EAAAptB,KAAAotB,IACAnH,EAAAxf,EAAA+mB,EAAAJ,EAAA,KACAshG,EAAA1uH,KAAAupJ,cAAA7iJ,EAAAuf,GACAoH,EAAArtB,KAAAioJ,cAAAv5B,GAEA,OAAAthG,EAAA,CAaAptB,KAAAonJ,aACApnJ,KAAAgoJ,aAAA36H,GAEA7sB,EAAAiG,EAAAC,EACA,IAAAZ,EAAA,SAAAsnB,GAAA,GACA,IAAA9zB,EAAA,EAAiBA,EAAAkH,IAAYlH,EAC7BgP,EAAAhP,GAAAwM,EAAAunB,EAAA/zB,GAAA,OAjBA,GADAkH,EAAAiG,EAAAC,EACA1G,KAAAonJ,YACA,IAAA9tJ,EAAA,EAAqBA,EAAAkH,IAAYlH,EACjCgP,EAAAhP,GAAA+zB,EAAA/zB,GAAA,WAGA,IAAAA,EAAA,EAAqBA,EAAAkH,IAAYlH,EACjCgP,EAAAhP,GAAA,KAAA+zB,EAAA/zB,IAcAiwJ,cAAA,SAAA/oJ,EAAA0hC,EAAAC,GACA,IAAAT,EAAAv5B,UAAA3H,OAAA,QAAAzB,IAAAoJ,UAAA,IAAAA,UAAA,GAMA,OAJAnI,KAAAysH,MAAA7qG,QACA5hB,KAAAysH,MAAAvqF,aAAAliC,KAAAyG,MACAzG,KAAAysH,MAAAtqF,cAAAniC,KAAA0G,OACA1G,KAAAysH,MAAA/qF,aACA1hC,KAAAysH,MAAA5sG,SAAArf,KAGAmuH,EAthBA,GAwhBAv1H,EAAAu1H,eAh/3CAt1H,EAAAD,QAAAN","file":"static/js/204.d072a860f33872993306.js","sourcesContent":["/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf.worker\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf.worker\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf.worker\"] = root.pdfjsWorker = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __w_pdfjs_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__w_pdfjs_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__w_pdfjs_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__w_pdfjs_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__w_pdfjs_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__w_pdfjs_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 73);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unreachable = exports.warn = exports.utf8StringToString = exports.stringToUTF8String = exports.stringToPDFString = exports.stringToBytes = exports.string32 = exports.shadow = exports.setVerbosityLevel = exports.ReadableStream = exports.removeNullCharacters = exports.readUint32 = exports.readUint16 = exports.readInt8 = exports.log2 = exports.isEvalSupported = exports.isLittleEndian = exports.createValidAbsoluteUrl = exports.isSameOrigin = exports.isSpace = exports.isString = exports.isNum = exports.isEmptyObj = exports.isBool = exports.isArrayBuffer = exports.info = exports.getVerbosityLevel = exports.getLookupTableFactory = exports.getInheritableProperty = exports.deprecated = exports.createObjectURL = exports.createPromiseCapability = exports.createBlob = exports.bytesToString = exports.assert = exports.arraysToBytes = exports.arrayByteLength = exports.FormatError = exports.XRefParseException = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.PasswordResponses = exports.PasswordException = exports.PageViewport = exports.NotImplementedException = exports.NativeImageDecoding = exports.MissingPDFException = exports.MissingDataException = exports.MessageHandler = exports.InvalidPDFException = exports.AbortException = exports.CMapCompressionType = exports.ImageKind = exports.FontType = exports.AnnotationType = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.UNSUPPORTED_FEATURES = exports.VerbosityLevel = exports.OPS = exports.IDENTITY_MATRIX = exports.FONT_IDENTITY_MATRIX = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n__w_pdfjs_require__(75);\n\nvar _streams_polyfill = __w_pdfjs_require__(130);\n\nvar FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\nvar NativeImageDecoding = {\n  NONE: 'none',\n  DECODE: 'decode',\n  DISPLAY: 'display'\n};\nvar TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4\n};\nvar ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3\n};\nvar AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26\n};\nvar AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200\n};\nvar AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000\n};\nvar AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5\n};\nvar StreamType = {\n  UNKNOWN: 0,\n  FLATE: 1,\n  LZW: 2,\n  DCT: 3,\n  JPX: 4,\n  JBIG: 5,\n  A85: 6,\n  AHX: 7,\n  CCF: 8,\n  RL: 9\n};\nvar FontType = {\n  UNKNOWN: 0,\n  TYPE1: 1,\n  TYPE1C: 2,\n  CIDFONTTYPE0: 3,\n  CIDFONTTYPE0C: 4,\n  TRUETYPE: 5,\n  CIDFONTTYPE2: 6,\n  TYPE3: 7,\n  OPENTYPE: 8,\n  TYPE0: 9,\n  MMTYPE1: 10\n};\nvar VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5\n};\nvar CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2\n};\nvar OPS = {\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91\n};\nvar verbosity = VerbosityLevel.WARNINGS;\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\nfunction getVerbosityLevel() {\n  return verbosity;\n}\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log('Info: ' + msg);\n  }\n}\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log('Warning: ' + msg);\n  }\n}\nfunction deprecated(details) {\n  console.log('Deprecated API usage: ' + details);\n}\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\nvar UNSUPPORTED_FEATURES = {\n  unknown: 'unknown',\n  forms: 'forms',\n  javaScript: 'javaScript',\n  smask: 'smask',\n  shadingPattern: 'shadingPattern',\n  font: 'font'\n};\nfunction isSameOrigin(baseUrl, otherUrl) {\n  try {\n    var base = new URL(baseUrl);\n    if (!base.origin || base.origin === 'null') {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n  var other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\nfunction isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case 'http:':\n    case 'https:':\n    case 'ftp:':\n    case 'mailto:':\n    case 'tel:':\n      return true;\n    default:\n      return false;\n  }\n}\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    var absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {}\n  return null;\n}\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value: value,\n    enumerable: true,\n    configurable: true,\n    writable: false\n  });\n  return value;\n}\nfunction getLookupTableFactory(initializer) {\n  var lookup;\n  return function () {\n    if (initializer) {\n      lookup = Object.create(null);\n      initializer(lookup);\n      initializer = null;\n    }\n    return lookup;\n  };\n}\nvar PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2\n};\nvar PasswordException = function PasswordExceptionClosure() {\n  function PasswordException(msg, code) {\n    this.name = 'PasswordException';\n    this.message = msg;\n    this.code = code;\n  }\n  PasswordException.prototype = new Error();\n  PasswordException.constructor = PasswordException;\n  return PasswordException;\n}();\nvar UnknownErrorException = function UnknownErrorExceptionClosure() {\n  function UnknownErrorException(msg, details) {\n    this.name = 'UnknownErrorException';\n    this.message = msg;\n    this.details = details;\n  }\n  UnknownErrorException.prototype = new Error();\n  UnknownErrorException.constructor = UnknownErrorException;\n  return UnknownErrorException;\n}();\nvar InvalidPDFException = function InvalidPDFExceptionClosure() {\n  function InvalidPDFException(msg) {\n    this.name = 'InvalidPDFException';\n    this.message = msg;\n  }\n  InvalidPDFException.prototype = new Error();\n  InvalidPDFException.constructor = InvalidPDFException;\n  return InvalidPDFException;\n}();\nvar MissingPDFException = function MissingPDFExceptionClosure() {\n  function MissingPDFException(msg) {\n    this.name = 'MissingPDFException';\n    this.message = msg;\n  }\n  MissingPDFException.prototype = new Error();\n  MissingPDFException.constructor = MissingPDFException;\n  return MissingPDFException;\n}();\nvar UnexpectedResponseException = function UnexpectedResponseExceptionClosure() {\n  function UnexpectedResponseException(msg, status) {\n    this.name = 'UnexpectedResponseException';\n    this.message = msg;\n    this.status = status;\n  }\n  UnexpectedResponseException.prototype = new Error();\n  UnexpectedResponseException.constructor = UnexpectedResponseException;\n  return UnexpectedResponseException;\n}();\nvar NotImplementedException = function NotImplementedExceptionClosure() {\n  function NotImplementedException(msg) {\n    this.message = msg;\n  }\n  NotImplementedException.prototype = new Error();\n  NotImplementedException.prototype.name = 'NotImplementedException';\n  NotImplementedException.constructor = NotImplementedException;\n  return NotImplementedException;\n}();\nvar MissingDataException = function MissingDataExceptionClosure() {\n  function MissingDataException(begin, end) {\n    this.begin = begin;\n    this.end = end;\n    this.message = 'Missing data [' + begin + ', ' + end + ')';\n  }\n  MissingDataException.prototype = new Error();\n  MissingDataException.prototype.name = 'MissingDataException';\n  MissingDataException.constructor = MissingDataException;\n  return MissingDataException;\n}();\nvar XRefParseException = function XRefParseExceptionClosure() {\n  function XRefParseException(msg) {\n    this.message = msg;\n  }\n  XRefParseException.prototype = new Error();\n  XRefParseException.prototype.name = 'XRefParseException';\n  XRefParseException.constructor = XRefParseException;\n  return XRefParseException;\n}();\nvar FormatError = function FormatErrorClosure() {\n  function FormatError(msg) {\n    this.message = msg;\n  }\n  FormatError.prototype = new Error();\n  FormatError.prototype.name = 'FormatError';\n  FormatError.constructor = FormatError;\n  return FormatError;\n}();\nvar AbortException = function AbortExceptionClosure() {\n  function AbortException(msg) {\n    this.name = 'AbortException';\n    this.message = msg;\n  }\n  AbortException.prototype = new Error();\n  AbortException.constructor = AbortException;\n  return AbortException;\n}();\nvar NullCharactersRegExp = /\\x00/g;\nfunction removeNullCharacters(str) {\n  if (typeof str !== 'string') {\n    warn('The argument for removeNullCharacters must be a string.');\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, '');\n}\nfunction bytesToString(bytes) {\n  assert(bytes !== null && (typeof bytes === 'undefined' ? 'undefined' : _typeof(bytes)) === 'object' && bytes.length !== undefined, 'Invalid argument for bytesToString');\n  var length = bytes.length;\n  var MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  var strBuf = [];\n  for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    var chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join('');\n}\nfunction stringToBytes(str) {\n  assert(typeof str === 'string', 'Invalid argument for stringToBytes');\n  var length = str.length;\n  var bytes = new Uint8Array(length);\n  for (var i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xFF;\n  }\n  return bytes;\n}\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined);\n  return arr.byteLength;\n}\nfunction arraysToBytes(arr) {\n  if (arr.length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  var resultLength = 0;\n  var i,\n      ii = arr.length;\n  var item, itemLength;\n  for (i = 0; i < ii; i++) {\n    item = arr[i];\n    itemLength = arrayByteLength(item);\n    resultLength += itemLength;\n  }\n  var pos = 0;\n  var data = new Uint8Array(resultLength);\n  for (i = 0; i < ii; i++) {\n    item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === 'string') {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\nfunction string32(value) {\n  return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n}\nfunction log2(x) {\n  if (x <= 0) {\n    return 0;\n  }\n  return Math.ceil(Math.log2(x));\n}\nfunction readInt8(data, start) {\n  return data[start] << 24 >> 24;\n}\nfunction readUint16(data, offset) {\n  return data[offset] << 8 | data[offset + 1];\n}\nfunction readUint32(data, offset) {\n  return (data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3]) >>> 0;\n}\nfunction isLittleEndian() {\n  var buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  var view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nfunction isEvalSupported() {\n  try {\n    new Function('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction getInheritableProperty(_ref) {\n  var dict = _ref.dict,\n      key = _ref.key,\n      _ref$getArray = _ref.getArray,\n      getArray = _ref$getArray === undefined ? false : _ref$getArray,\n      _ref$stopWhenFound = _ref.stopWhenFound,\n      stopWhenFound = _ref$stopWhenFound === undefined ? true : _ref$stopWhenFound;\n\n  var LOOP_LIMIT = 100;\n  var loopCount = 0;\n  var values = void 0;\n  while (dict) {\n    var value = getArray ? dict.getArray(key) : dict.get(key);\n    if (value !== undefined) {\n      if (stopWhenFound) {\n        return value;\n      }\n      if (!values) {\n        values = [];\n      }\n      values.push(value);\n    }\n    if (++loopCount > LOOP_LIMIT) {\n      warn('getInheritableProperty: maximum loop count exceeded for \"' + key + '\"');\n      break;\n    }\n    dict = dict.get('Parent');\n  }\n  return values;\n}\nvar IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nvar Util = function UtilClosure() {\n  function Util() {}\n  var rgbBuf = ['rgb(', 0, ',', 0, ',', 0, ')'];\n  Util.makeCssRgb = function Util_makeCssRgb(r, g, b) {\n    rgbBuf[1] = r;\n    rgbBuf[3] = g;\n    rgbBuf[5] = b;\n    return rgbBuf.join('');\n  };\n  Util.transform = function Util_transform(m1, m2) {\n    return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n  };\n  Util.applyTransform = function Util_applyTransform(p, m) {\n    var xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    var yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  };\n  Util.applyInverseTransform = function Util_applyInverseTransform(p, m) {\n    var d = m[0] * m[3] - m[1] * m[2];\n    var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  };\n  Util.getAxialAlignedBoundingBox = function Util_getAxialAlignedBoundingBox(r, m) {\n    var p1 = Util.applyTransform(r, m);\n    var p2 = Util.applyTransform(r.slice(2, 4), m);\n    var p3 = Util.applyTransform([r[0], r[3]], m);\n    var p4 = Util.applyTransform([r[2], r[1]], m);\n    return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n  };\n  Util.inverseTransform = function Util_inverseTransform(m) {\n    var d = m[0] * m[3] - m[1] * m[2];\n    return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n  };\n  Util.apply3dTransform = function Util_apply3dTransform(m, v) {\n    return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n  };\n  Util.singularValueDecompose2dScale = function Util_singularValueDecompose2dScale(m) {\n    var transpose = [m[0], m[2], m[1], m[3]];\n    var a = m[0] * transpose[0] + m[1] * transpose[2];\n    var b = m[0] * transpose[1] + m[1] * transpose[3];\n    var c = m[2] * transpose[0] + m[3] * transpose[2];\n    var d = m[2] * transpose[1] + m[3] * transpose[3];\n    var first = (a + d) / 2;\n    var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    var sx = first + second || 1;\n    var sy = first - second || 1;\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  };\n  Util.normalizeRect = function Util_normalizeRect(rect) {\n    var r = rect.slice(0);\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  };\n  Util.intersect = function Util_intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n    var orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare),\n        orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare),\n        result = [];\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n    if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return false;\n    }\n    if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return false;\n    }\n    return result;\n  };\n  var ROMAN_NUMBER_MAP = ['', 'C', 'CC', 'CCC', 'CD', 'D', 'DC', 'DCC', 'DCCC', 'CM', '', 'X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC', '', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX'];\n  Util.toRoman = function Util_toRoman(number, lowerCase) {\n    assert(Number.isInteger(number) && number > 0, 'The number should be a positive integer.');\n    var pos,\n        romanBuf = [];\n    while (number >= 1000) {\n      number -= 1000;\n      romanBuf.push('M');\n    }\n    pos = number / 100 | 0;\n    number %= 100;\n    romanBuf.push(ROMAN_NUMBER_MAP[pos]);\n    pos = number / 10 | 0;\n    number %= 10;\n    romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]);\n    romanBuf.push(ROMAN_NUMBER_MAP[20 + number]);\n    var romanStr = romanBuf.join('');\n    return lowerCase ? romanStr.toLowerCase() : romanStr;\n  };\n  Util.appendToArray = function Util_appendToArray(arr1, arr2) {\n    Array.prototype.push.apply(arr1, arr2);\n  };\n  Util.prependToArray = function Util_prependToArray(arr1, arr2) {\n    Array.prototype.unshift.apply(arr1, arr2);\n  };\n  Util.extendObj = function extendObj(obj1, obj2) {\n    for (var key in obj2) {\n      obj1[key] = obj2[key];\n    }\n  };\n  Util.inherit = function Util_inherit(sub, base, prototype) {\n    sub.prototype = Object.create(base.prototype);\n    sub.prototype.constructor = sub;\n    for (var prop in prototype) {\n      sub.prototype[prop] = prototype[prop];\n    }\n  };\n  Util.loadScript = function Util_loadScript(src, callback) {\n    var script = document.createElement('script');\n    var loaded = false;\n    script.setAttribute('src', src);\n    if (callback) {\n      script.onload = function () {\n        if (!loaded) {\n          callback();\n        }\n        loaded = true;\n      };\n    }\n    document.getElementsByTagName('head')[0].appendChild(script);\n  };\n  return Util;\n}();\nvar PageViewport = function PageViewportClosure() {\n  function PageViewport(viewBox, scale, rotation, offsetX, offsetY, dontFlip) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n    var centerX = (viewBox[2] + viewBox[0]) / 2;\n    var centerY = (viewBox[3] + viewBox[1]) / 2;\n    var rotateA, rotateB, rotateC, rotateD;\n    rotation = rotation % 360;\n    rotation = rotation < 0 ? rotation + 360 : rotation;\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      default:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n    }\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n    var offsetCanvasX, offsetCanvasY;\n    var width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n    this.width = width;\n    this.height = height;\n    this.fontScale = scale;\n  }\n  PageViewport.prototype = {\n    clone: function PageViewPort_clone(args) {\n      args = args || {};\n      var scale = 'scale' in args ? args.scale : this.scale;\n      var rotation = 'rotation' in args ? args.rotation : this.rotation;\n      return new PageViewport(this.viewBox.slice(), scale, rotation, this.offsetX, this.offsetY, args.dontFlip);\n    },\n    convertToViewportPoint: function PageViewport_convertToViewportPoint(x, y) {\n      return Util.applyTransform([x, y], this.transform);\n    },\n    convertToViewportRectangle: function PageViewport_convertToViewportRectangle(rect) {\n      var tl = Util.applyTransform([rect[0], rect[1]], this.transform);\n      var br = Util.applyTransform([rect[2], rect[3]], this.transform);\n      return [tl[0], tl[1], br[0], br[1]];\n    },\n    convertToPdfPoint: function PageViewport_convertToPdfPoint(x, y) {\n      return Util.applyInverseTransform([x, y], this.transform);\n    }\n  };\n  return PageViewport;\n}();\nvar PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];\nfunction stringToPDFString(str) {\n  var i,\n      n = str.length,\n      strBuf = [];\n  if (str[0] === '\\xFE' && str[1] === '\\xFF') {\n    for (i = 2; i < n; i += 2) {\n      strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n    }\n  } else {\n    for (i = 0; i < n; ++i) {\n      var code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join('');\n}\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\nfunction isEmptyObj(obj) {\n  for (var key in obj) {\n    return false;\n  }\n  return true;\n}\nfunction isBool(v) {\n  return typeof v === 'boolean';\n}\nfunction isNum(v) {\n  return typeof v === 'number';\n}\nfunction isString(v) {\n  return typeof v === 'string';\n}\nfunction isArrayBuffer(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.byteLength !== undefined;\n}\nfunction isSpace(ch) {\n  return ch === 0x20 || ch === 0x09 || ch === 0x0D || ch === 0x0A;\n}\nfunction createPromiseCapability() {\n  var capability = {};\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = resolve;\n    capability.reject = reject;\n  });\n  return capability;\n}\nvar createBlob = function createBlob(data, contentType) {\n  if (typeof Blob !== 'undefined') {\n    return new Blob([data], { type: contentType });\n  }\n  throw new Error('The \"Blob\" constructor is not supported.');\n};\nvar createObjectURL = function createObjectURLClosure() {\n  var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  return function createObjectURL(data, contentType) {\n    var forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (!forceDataSchema && URL.createObjectURL) {\n      var blob = createBlob(data, contentType);\n      return URL.createObjectURL(blob);\n    }\n    var buffer = 'data:' + contentType + ';base64,';\n    for (var i = 0, ii = data.length; i < ii; i += 3) {\n      var b1 = data[i] & 0xFF;\n      var b2 = data[i + 1] & 0xFF;\n      var b3 = data[i + 2] & 0xFF;\n      var d1 = b1 >> 2,\n          d2 = (b1 & 3) << 4 | b2 >> 4;\n      var d3 = i + 1 < ii ? (b2 & 0xF) << 2 | b3 >> 6 : 64;\n      var d4 = i + 2 < ii ? b3 & 0x3F : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n}();\nfunction resolveCall(fn, args) {\n  var thisArg = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  if (!fn) {\n    return Promise.resolve(undefined);\n  }\n  return new Promise(function (resolve, reject) {\n    resolve(fn.apply(thisArg, args));\n  });\n}\nfunction wrapReason(reason) {\n  if ((typeof reason === 'undefined' ? 'undefined' : _typeof(reason)) !== 'object') {\n    return reason;\n  }\n  switch (reason.name) {\n    case 'AbortException':\n      return new AbortException(reason.message);\n    case 'MissingPDFException':\n      return new MissingPDFException(reason.message);\n    case 'UnexpectedResponseException':\n      return new UnexpectedResponseException(reason.message, reason.status);\n    default:\n      return new UnknownErrorException(reason.message, reason.details);\n  }\n}\nfunction makeReasonSerializable(reason) {\n  if (!(reason instanceof Error) || reason instanceof AbortException || reason instanceof MissingPDFException || reason instanceof UnexpectedResponseException || reason instanceof UnknownErrorException) {\n    return reason;\n  }\n  return new UnknownErrorException(reason.message, reason.toString());\n}\nfunction resolveOrReject(capability, success, reason) {\n  if (success) {\n    capability.resolve();\n  } else {\n    capability.reject(reason);\n  }\n}\nfunction finalize(promise) {\n  return Promise.resolve(promise).catch(function () {});\n}\nfunction MessageHandler(sourceName, targetName, comObj) {\n  var _this = this;\n\n  this.sourceName = sourceName;\n  this.targetName = targetName;\n  this.comObj = comObj;\n  this.callbackId = 1;\n  this.streamId = 1;\n  this.postMessageTransfers = true;\n  this.streamSinks = Object.create(null);\n  this.streamControllers = Object.create(null);\n  var callbacksCapabilities = this.callbacksCapabilities = Object.create(null);\n  var ah = this.actionHandler = Object.create(null);\n  this._onComObjOnMessage = function (event) {\n    var data = event.data;\n    if (data.targetName !== _this.sourceName) {\n      return;\n    }\n    if (data.stream) {\n      _this._processStreamMessage(data);\n    } else if (data.isReply) {\n      var callbackId = data.callbackId;\n      if (data.callbackId in callbacksCapabilities) {\n        var callback = callbacksCapabilities[callbackId];\n        delete callbacksCapabilities[callbackId];\n        if ('error' in data) {\n          callback.reject(wrapReason(data.error));\n        } else {\n          callback.resolve(data.data);\n        }\n      } else {\n        throw new Error('Cannot resolve callback ' + callbackId);\n      }\n    } else if (data.action in ah) {\n      var action = ah[data.action];\n      if (data.callbackId) {\n        var _sourceName = _this.sourceName;\n        var _targetName = data.sourceName;\n        Promise.resolve().then(function () {\n          return action[0].call(action[1], data.data);\n        }).then(function (result) {\n          comObj.postMessage({\n            sourceName: _sourceName,\n            targetName: _targetName,\n            isReply: true,\n            callbackId: data.callbackId,\n            data: result\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            sourceName: _sourceName,\n            targetName: _targetName,\n            isReply: true,\n            callbackId: data.callbackId,\n            error: makeReasonSerializable(reason)\n          });\n        });\n      } else if (data.streamId) {\n        _this._createStreamSink(data);\n      } else {\n        action[0].call(action[1], data.data);\n      }\n    } else {\n      throw new Error('Unknown action from worker: ' + data.action);\n    }\n  };\n  comObj.addEventListener('message', this._onComObjOnMessage);\n}\nMessageHandler.prototype = {\n  on: function on(actionName, handler, scope) {\n    var ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error('There is already an actionName called \"' + actionName + '\"');\n    }\n    ah[actionName] = [handler, scope];\n  },\n  send: function send(actionName, data, transfers) {\n    var message = {\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data: data\n    };\n    this.postMessage(message, transfers);\n  },\n  sendWithPromise: function sendWithPromise(actionName, data, transfers) {\n    var callbackId = this.callbackId++;\n    var message = {\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data: data,\n      callbackId: callbackId\n    };\n    var capability = createPromiseCapability();\n    this.callbacksCapabilities[callbackId] = capability;\n    try {\n      this.postMessage(message, transfers);\n    } catch (e) {\n      capability.reject(e);\n    }\n    return capability.promise;\n  },\n  sendWithStream: function sendWithStream(actionName, data, queueingStrategy, transfers) {\n    var _this2 = this;\n\n    var streamId = this.streamId++;\n    var sourceName = this.sourceName;\n    var targetName = this.targetName;\n    return new _streams_polyfill.ReadableStream({\n      start: function start(controller) {\n        var startCapability = createPromiseCapability();\n        _this2.streamControllers[streamId] = {\n          controller: controller,\n          startCall: startCapability,\n          isClosed: false\n        };\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          action: actionName,\n          streamId: streamId,\n          data: data,\n          desiredSize: controller.desiredSize\n        });\n        return startCapability.promise;\n      },\n      pull: function pull(controller) {\n        var pullCapability = createPromiseCapability();\n        _this2.streamControllers[streamId].pullCall = pullCapability;\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          stream: 'pull',\n          streamId: streamId,\n          desiredSize: controller.desiredSize\n        });\n        return pullCapability.promise;\n      },\n      cancel: function cancel(reason) {\n        var cancelCapability = createPromiseCapability();\n        _this2.streamControllers[streamId].cancelCall = cancelCapability;\n        _this2.streamControllers[streamId].isClosed = true;\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          stream: 'cancel',\n          reason: reason,\n          streamId: streamId\n        });\n        return cancelCapability.promise;\n      }\n    }, queueingStrategy);\n  },\n  _createStreamSink: function _createStreamSink(data) {\n    var _this3 = this;\n\n    var self = this;\n    var action = this.actionHandler[data.action];\n    var streamId = data.streamId;\n    var desiredSize = data.desiredSize;\n    var sourceName = this.sourceName;\n    var targetName = data.sourceName;\n    var capability = createPromiseCapability();\n    var sendStreamRequest = function sendStreamRequest(_ref2) {\n      var stream = _ref2.stream,\n          chunk = _ref2.chunk,\n          transfers = _ref2.transfers,\n          success = _ref2.success,\n          reason = _ref2.reason;\n\n      _this3.postMessage({\n        sourceName: sourceName,\n        targetName: targetName,\n        stream: stream,\n        streamId: streamId,\n        chunk: chunk,\n        success: success,\n        reason: reason\n      }, transfers);\n    };\n    var streamSink = {\n      enqueue: function enqueue(chunk) {\n        var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n        var transfers = arguments[2];\n\n        if (this.isCancelled) {\n          return;\n        }\n        var lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        sendStreamRequest({\n          stream: 'enqueue',\n          chunk: chunk,\n          transfers: transfers\n        });\n      },\n      close: function close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        sendStreamRequest({ stream: 'close' });\n        delete self.streamSinks[streamId];\n      },\n      error: function error(reason) {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        sendStreamRequest({\n          stream: 'error',\n          reason: reason\n        });\n      },\n\n      sinkCapability: capability,\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: desiredSize,\n      ready: null\n    };\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    resolveCall(action[0], [data.data, streamSink], action[1]).then(function () {\n      sendStreamRequest({\n        stream: 'start_complete',\n        success: true\n      });\n    }, function (reason) {\n      sendStreamRequest({\n        stream: 'start_complete',\n        success: false,\n        reason: reason\n      });\n    });\n  },\n  _processStreamMessage: function _processStreamMessage(data) {\n    var _this4 = this;\n\n    var sourceName = this.sourceName;\n    var targetName = data.sourceName;\n    var streamId = data.streamId;\n    var sendStreamResponse = function sendStreamResponse(_ref3) {\n      var stream = _ref3.stream,\n          success = _ref3.success,\n          reason = _ref3.reason;\n\n      _this4.comObj.postMessage({\n        sourceName: sourceName,\n        targetName: targetName,\n        stream: stream,\n        success: success,\n        streamId: streamId,\n        reason: reason\n      });\n    };\n    var deleteStreamController = function deleteStreamController() {\n      Promise.all([_this4.streamControllers[data.streamId].startCall, _this4.streamControllers[data.streamId].pullCall, _this4.streamControllers[data.streamId].cancelCall].map(function (capability) {\n        return capability && finalize(capability.promise);\n      })).then(function () {\n        delete _this4.streamControllers[data.streamId];\n      });\n    };\n    switch (data.stream) {\n      case 'start_complete':\n        resolveOrReject(this.streamControllers[data.streamId].startCall, data.success, wrapReason(data.reason));\n        break;\n      case 'pull_complete':\n        resolveOrReject(this.streamControllers[data.streamId].pullCall, data.success, wrapReason(data.reason));\n        break;\n      case 'pull':\n        if (!this.streamSinks[data.streamId]) {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: true\n          });\n          break;\n        }\n        if (this.streamSinks[data.streamId].desiredSize <= 0 && data.desiredSize > 0) {\n          this.streamSinks[data.streamId].sinkCapability.resolve();\n        }\n        this.streamSinks[data.streamId].desiredSize = data.desiredSize;\n        resolveCall(this.streamSinks[data.streamId].onPull).then(function () {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: true\n          });\n        }, function (reason) {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: false,\n            reason: reason\n          });\n        });\n        break;\n      case 'enqueue':\n        assert(this.streamControllers[data.streamId], 'enqueue should have stream controller');\n        if (!this.streamControllers[data.streamId].isClosed) {\n          this.streamControllers[data.streamId].controller.enqueue(data.chunk);\n        }\n        break;\n      case 'close':\n        assert(this.streamControllers[data.streamId], 'close should have stream controller');\n        if (this.streamControllers[data.streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[data.streamId].isClosed = true;\n        this.streamControllers[data.streamId].controller.close();\n        deleteStreamController();\n        break;\n      case 'error':\n        assert(this.streamControllers[data.streamId], 'error should have stream controller');\n        this.streamControllers[data.streamId].controller.error(wrapReason(data.reason));\n        deleteStreamController();\n        break;\n      case 'cancel_complete':\n        resolveOrReject(this.streamControllers[data.streamId].cancelCall, data.success, wrapReason(data.reason));\n        deleteStreamController();\n        break;\n      case 'cancel':\n        if (!this.streamSinks[data.streamId]) {\n          break;\n        }\n        resolveCall(this.streamSinks[data.streamId].onCancel, [wrapReason(data.reason)]).then(function () {\n          sendStreamResponse({\n            stream: 'cancel_complete',\n            success: true\n          });\n        }, function (reason) {\n          sendStreamResponse({\n            stream: 'cancel_complete',\n            success: false,\n            reason: reason\n          });\n        });\n        this.streamSinks[data.streamId].sinkCapability.reject(wrapReason(data.reason));\n        this.streamSinks[data.streamId].isCancelled = true;\n        delete this.streamSinks[data.streamId];\n        break;\n      default:\n        throw new Error('Unexpected stream case');\n    }\n  },\n  postMessage: function postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  },\n  destroy: function destroy() {\n    this.comObj.removeEventListener('message', this._onComObjOnMessage);\n  }\n};\nexports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\nexports.IDENTITY_MATRIX = IDENTITY_MATRIX;\nexports.OPS = OPS;\nexports.VerbosityLevel = VerbosityLevel;\nexports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\nexports.AnnotationBorderStyleType = AnnotationBorderStyleType;\nexports.AnnotationFieldFlag = AnnotationFieldFlag;\nexports.AnnotationFlag = AnnotationFlag;\nexports.AnnotationType = AnnotationType;\nexports.FontType = FontType;\nexports.ImageKind = ImageKind;\nexports.CMapCompressionType = CMapCompressionType;\nexports.AbortException = AbortException;\nexports.InvalidPDFException = InvalidPDFException;\nexports.MessageHandler = MessageHandler;\nexports.MissingDataException = MissingDataException;\nexports.MissingPDFException = MissingPDFException;\nexports.NativeImageDecoding = NativeImageDecoding;\nexports.NotImplementedException = NotImplementedException;\nexports.PageViewport = PageViewport;\nexports.PasswordException = PasswordException;\nexports.PasswordResponses = PasswordResponses;\nexports.StreamType = StreamType;\nexports.TextRenderingMode = TextRenderingMode;\nexports.UnexpectedResponseException = UnexpectedResponseException;\nexports.UnknownErrorException = UnknownErrorException;\nexports.Util = Util;\nexports.XRefParseException = XRefParseException;\nexports.FormatError = FormatError;\nexports.arrayByteLength = arrayByteLength;\nexports.arraysToBytes = arraysToBytes;\nexports.assert = assert;\nexports.bytesToString = bytesToString;\nexports.createBlob = createBlob;\nexports.createPromiseCapability = createPromiseCapability;\nexports.createObjectURL = createObjectURL;\nexports.deprecated = deprecated;\nexports.getInheritableProperty = getInheritableProperty;\nexports.getLookupTableFactory = getLookupTableFactory;\nexports.getVerbosityLevel = getVerbosityLevel;\nexports.info = info;\nexports.isArrayBuffer = isArrayBuffer;\nexports.isBool = isBool;\nexports.isEmptyObj = isEmptyObj;\nexports.isNum = isNum;\nexports.isString = isString;\nexports.isSpace = isSpace;\nexports.isSameOrigin = isSameOrigin;\nexports.createValidAbsoluteUrl = createValidAbsoluteUrl;\nexports.isLittleEndian = isLittleEndian;\nexports.isEvalSupported = isEvalSupported;\nexports.log2 = log2;\nexports.readInt8 = readInt8;\nexports.readUint16 = readUint16;\nexports.readUint32 = readUint32;\nexports.removeNullCharacters = removeNullCharacters;\nexports.ReadableStream = _streams_polyfill.ReadableStream;\nexports.setVerbosityLevel = setVerbosityLevel;\nexports.shadow = shadow;\nexports.string32 = string32;\nexports.stringToBytes = stringToBytes;\nexports.stringToPDFString = stringToPDFString;\nexports.stringToUTF8String = stringToUTF8String;\nexports.utf8StringToString = utf8StringToString;\nexports.warn = warn;\nexports.unreachable = unreachable;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar EOF = {};\nvar Name = function NameClosure() {\n  function Name(name) {\n    this.name = name;\n  }\n  Name.prototype = {};\n  var nameCache = Object.create(null);\n  Name.get = function Name_get(name) {\n    var nameValue = nameCache[name];\n    return nameValue ? nameValue : nameCache[name] = new Name(name);\n  };\n  return Name;\n}();\nvar Cmd = function CmdClosure() {\n  function Cmd(cmd) {\n    this.cmd = cmd;\n  }\n  Cmd.prototype = {};\n  var cmdCache = Object.create(null);\n  Cmd.get = function Cmd_get(cmd) {\n    var cmdValue = cmdCache[cmd];\n    return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n  };\n  return Cmd;\n}();\nvar Dict = function DictClosure() {\n  var nonSerializable = function nonSerializableClosure() {\n    return nonSerializable;\n  };\n  function Dict(xref) {\n    this._map = Object.create(null);\n    this.xref = xref;\n    this.objId = null;\n    this.suppressEncryption = false;\n    this.__nonSerializable__ = nonSerializable;\n  }\n  Dict.prototype = {\n    assignXref: function Dict_assignXref(newXref) {\n      this.xref = newXref;\n    },\n    get: function Dict_get(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      value = this._map[key3] || null;\n      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n    },\n    getAsync: function Dict_getAsync(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      value = this._map[key3] || null;\n      if (xref) {\n        return xref.fetchIfRefAsync(value, suppressEncryption);\n      }\n      return Promise.resolve(value);\n    },\n    getArray: function Dict_getArray(key1, key2, key3) {\n      var value = this.get(key1, key2, key3);\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (!Array.isArray(value) || !xref) {\n        return value;\n      }\n      value = value.slice();\n      for (var i = 0, ii = value.length; i < ii; i++) {\n        if (!isRef(value[i])) {\n          continue;\n        }\n        value[i] = xref.fetch(value[i], suppressEncryption);\n      }\n      return value;\n    },\n    getRaw: function Dict_getRaw(key) {\n      return this._map[key];\n    },\n    getKeys: function Dict_getKeys() {\n      return Object.keys(this._map);\n    },\n    set: function Dict_set(key, value) {\n      this._map[key] = value;\n    },\n    has: function Dict_has(key) {\n      return key in this._map;\n    },\n    forEach: function Dict_forEach(callback) {\n      for (var key in this._map) {\n        callback(key, this.get(key));\n      }\n    }\n  };\n  Dict.empty = new Dict(null);\n  Dict.merge = function (xref, dictArray) {\n    var mergedDict = new Dict(xref);\n    for (var i = 0, ii = dictArray.length; i < ii; i++) {\n      var dict = dictArray[i];\n      if (!isDict(dict)) {\n        continue;\n      }\n      for (var keyName in dict._map) {\n        if (mergedDict._map[keyName] !== undefined) {\n          continue;\n        }\n        mergedDict._map[keyName] = dict._map[keyName];\n      }\n    }\n    return mergedDict;\n  };\n  return Dict;\n}();\nvar Ref = function RefClosure() {\n  function Ref(num, gen) {\n    this.num = num;\n    this.gen = gen;\n  }\n  Ref.prototype = {\n    toString: function Ref_toString() {\n      var str = this.num + 'R';\n      if (this.gen !== 0) {\n        str += this.gen;\n      }\n      return str;\n    }\n  };\n  return Ref;\n}();\nvar RefSet = function RefSetClosure() {\n  function RefSet() {\n    this.dict = Object.create(null);\n  }\n  RefSet.prototype = {\n    has: function RefSet_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSet_put(ref) {\n      this.dict[ref.toString()] = true;\n    },\n    remove: function RefSet_remove(ref) {\n      delete this.dict[ref.toString()];\n    }\n  };\n  return RefSet;\n}();\nvar RefSetCache = function RefSetCacheClosure() {\n  function RefSetCache() {\n    this.dict = Object.create(null);\n  }\n  RefSetCache.prototype = {\n    get: function RefSetCache_get(ref) {\n      return this.dict[ref.toString()];\n    },\n    has: function RefSetCache_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSetCache_put(ref, obj) {\n      this.dict[ref.toString()] = obj;\n    },\n    putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n      this.dict[ref.toString()] = this.get(aliasRef);\n    },\n    forEach: function RefSetCache_forEach(fn, thisArg) {\n      for (var i in this.dict) {\n        fn.call(thisArg, this.dict[i]);\n      }\n    },\n    clear: function RefSetCache_clear() {\n      this.dict = Object.create(null);\n    }\n  };\n  return RefSetCache;\n}();\nfunction isEOF(v) {\n  return v === EOF;\n}\nfunction isName(v, name) {\n  return v instanceof Name && (name === undefined || v.name === name);\n}\nfunction isCmd(v, cmd) {\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\nfunction isDict(v, type) {\n  return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n}\nfunction isRef(v) {\n  return v instanceof Ref;\n}\nfunction isRefsEqual(v1, v2) {\n  return v1.num === v2.num && v1.gen === v2.gen;\n}\nfunction isStream(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.getBytes !== undefined;\n}\nexports.EOF = EOF;\nexports.Cmd = Cmd;\nexports.Dict = Dict;\nexports.Name = Name;\nexports.Ref = Ref;\nexports.RefSet = RefSet;\nexports.RefSetCache = RefSetCache;\nexports.isEOF = isEOF;\nexports.isCmd = isCmd;\nexports.isDict = isDict;\nexports.isName = isName;\nexports.isRef = isRef;\nexports.isRefsEqual = isRefsEqual;\nexports.isStream = isStream;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar store = __w_pdfjs_require__(47)('wks');\nvar uid = __w_pdfjs_require__(22);\nvar _Symbol = __w_pdfjs_require__(6).Symbol;\nvar USE_SYMBOL = typeof _Symbol == 'function';\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] = USE_SYMBOL && _Symbol[name] || (USE_SYMBOL ? _Symbol : uid)('Symbol.' + name));\n};\n$exports.store = store;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nmodule.exports = function (it) {\n  return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) === 'object' ? it !== null : typeof it === 'function';\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LZWStream = exports.StringStream = exports.StreamsSequenceStream = exports.Stream = exports.RunLengthStream = exports.PredictorStream = exports.NullStream = exports.FlateStream = exports.DecodeStream = exports.DecryptStream = exports.AsciiHexStream = exports.Ascii85Stream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar Stream = function StreamClosure() {\n  function Stream(arrayBuffer, start, length, dict) {\n    this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n    this.start = start || 0;\n    this.pos = this.start;\n    this.end = start + length || this.bytes.length;\n    this.dict = dict;\n  }\n  Stream.prototype = {\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function Stream_getByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.bytes[this.pos++];\n    },\n    getUint16: function Stream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function Stream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function Stream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function Stream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function Stream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    skip: function Stream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function Stream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function Stream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function Stream_makeSubStream(start, length, dict) {\n      return new Stream(this.bytes.buffer, start, length, dict);\n    }\n  };\n  return Stream;\n}();\nvar StringStream = function StringStreamClosure() {\n  function StringStream(str) {\n    var bytes = (0, _util.stringToBytes)(str);\n    Stream.call(this, bytes);\n  }\n  StringStream.prototype = Stream.prototype;\n  return StringStream;\n}();\nvar DecodeStream = function DecodeStreamClosure() {\n  var emptyBuffer = new Uint8Array(0);\n  function DecodeStream(maybeMinBufferLength) {\n    this.pos = 0;\n    this.bufferLength = 0;\n    this.eof = false;\n    this.buffer = emptyBuffer;\n    this.minBufferLength = 512;\n    if (maybeMinBufferLength) {\n      while (this.minBufferLength < maybeMinBufferLength) {\n        this.minBufferLength *= 2;\n      }\n    }\n  }\n  DecodeStream.prototype = {\n    get isEmpty() {\n      while (!this.eof && this.bufferLength === 0) {\n        this.readBlock();\n      }\n      return this.bufferLength === 0;\n    },\n    ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n      var buffer = this.buffer;\n      if (requested <= buffer.byteLength) {\n        return buffer;\n      }\n      var size = this.minBufferLength;\n      while (size < requested) {\n        size *= 2;\n      }\n      var buffer2 = new Uint8Array(size);\n      buffer2.set(buffer);\n      return this.buffer = buffer2;\n    },\n    getByte: function DecodeStream_getByte() {\n      var pos = this.pos;\n      while (this.bufferLength <= pos) {\n        if (this.eof) {\n          return -1;\n        }\n        this.readBlock();\n      }\n      return this.buffer[this.pos++];\n    },\n    getUint16: function DecodeStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function DecodeStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function DecodeStream_getBytes(length) {\n      var end,\n          pos = this.pos;\n      if (length) {\n        this.ensureBuffer(pos + length);\n        end = pos + length;\n        while (!this.eof && this.bufferLength < end) {\n          this.readBlock();\n        }\n        var bufEnd = this.bufferLength;\n        if (end > bufEnd) {\n          end = bufEnd;\n        }\n      } else {\n        while (!this.eof) {\n          this.readBlock();\n        }\n        end = this.bufferLength;\n      }\n      this.pos = end;\n      return this.buffer.subarray(pos, end);\n    },\n    peekByte: function DecodeStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function DecodeStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n      var end = start + length;\n      while (this.bufferLength <= end && !this.eof) {\n        this.readBlock();\n      }\n      return new Stream(this.buffer, start, length, dict);\n    },\n    skip: function DecodeStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function DecodeStream_reset() {\n      this.pos = 0;\n    },\n    getBaseStreams: function DecodeStream_getBaseStreams() {\n      if (this.str && this.str.getBaseStreams) {\n        return this.str.getBaseStreams();\n      }\n      return [];\n    }\n  };\n  return DecodeStream;\n}();\nvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n  function StreamsSequenceStream(streams) {\n    this.streams = streams;\n    DecodeStream.call(this, null);\n  }\n  StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n  StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n    var streams = this.streams;\n    if (streams.length === 0) {\n      this.eof = true;\n      return;\n    }\n    var stream = streams.shift();\n    var chunk = stream.getBytes();\n    var bufferLength = this.bufferLength;\n    var newLength = bufferLength + chunk.length;\n    var buffer = this.ensureBuffer(newLength);\n    buffer.set(chunk, bufferLength);\n    this.bufferLength = newLength;\n  };\n  StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n    var baseStreams = [];\n    for (var i = 0, ii = this.streams.length; i < ii; i++) {\n      var stream = this.streams[i];\n      if (stream.getBaseStreams) {\n        _util.Util.appendToArray(baseStreams, stream.getBaseStreams());\n      }\n    }\n    return baseStreams;\n  };\n  return StreamsSequenceStream;\n}();\nvar FlateStream = function FlateStreamClosure() {\n  var codeLenCodeMap = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n  var lengthDecode = new Int32Array([0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a, 0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f, 0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073, 0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102]);\n  var distDecode = new Int32Array([0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d, 0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1, 0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01, 0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001]);\n  var fixedLitCodeTab = [new Int32Array([0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0, 0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0, 0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0, 0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8, 0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8, 0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8, 0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4, 0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4, 0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4, 0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc, 0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec, 0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc, 0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2, 0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2, 0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2, 0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca, 0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea, 0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da, 0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6, 0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6, 0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6, 0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce, 0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee, 0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de, 0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe, 0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1, 0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1, 0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1, 0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9, 0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9, 0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9, 0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5, 0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5, 0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5, 0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd, 0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed, 0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd, 0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3, 0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3, 0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3, 0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb, 0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb, 0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db, 0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7, 0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7, 0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7, 0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf, 0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef, 0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df, 0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff]), 9];\n  var fixedDistCodeTab = [new Int32Array([0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c, 0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000, 0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d, 0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000]), 5];\n  function FlateStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    var cmf = str.getByte();\n    var flg = str.getByte();\n    if (cmf === -1 || flg === -1) {\n      throw new _util.FormatError('Invalid header in flate stream: ' + cmf + ', ' + flg);\n    }\n    if ((cmf & 0x0f) !== 0x08) {\n      throw new _util.FormatError('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (((cmf << 8) + flg) % 31 !== 0) {\n      throw new _util.FormatError('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (flg & 0x20) {\n      throw new _util.FormatError('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n    }\n    this.codeSize = 0;\n    this.codeBuf = 0;\n    DecodeStream.call(this, maybeLength);\n  }\n  FlateStream.prototype = Object.create(DecodeStream.prototype);\n  FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n    var str = this.str;\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < bits) {\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad encoding in flate stream');\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    b = codeBuf & (1 << bits) - 1;\n    this.codeBuf = codeBuf >> bits;\n    this.codeSize = codeSize -= bits;\n    return b;\n  };\n  FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n    var str = this.str;\n    var codes = table[0];\n    var maxLen = table[1];\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < maxLen) {\n      if ((b = str.getByte()) === -1) {\n        break;\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    var code = codes[codeBuf & (1 << maxLen) - 1];\n    var codeLen = code >> 16;\n    var codeVal = code & 0xffff;\n    if (codeLen < 1 || codeSize < codeLen) {\n      throw new _util.FormatError('Bad encoding in flate stream');\n    }\n    this.codeBuf = codeBuf >> codeLen;\n    this.codeSize = codeSize - codeLen;\n    return codeVal;\n  };\n  FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n    var n = lengths.length;\n    var maxLen = 0;\n    var i;\n    for (i = 0; i < n; ++i) {\n      if (lengths[i] > maxLen) {\n        maxLen = lengths[i];\n      }\n    }\n    var size = 1 << maxLen;\n    var codes = new Int32Array(size);\n    for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n      for (var val = 0; val < n; ++val) {\n        if (lengths[val] === len) {\n          var code2 = 0;\n          var t = code;\n          for (i = 0; i < len; ++i) {\n            code2 = code2 << 1 | t & 1;\n            t >>= 1;\n          }\n          for (i = code2; i < size; i += skip) {\n            codes[i] = len << 16 | val;\n          }\n          ++code;\n        }\n      }\n    }\n    return [codes, maxLen];\n  };\n  FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n    var buffer, len;\n    var str = this.str;\n    var hdr = this.getBits(3);\n    if (hdr & 1) {\n      this.eof = true;\n    }\n    hdr >>= 1;\n    if (hdr === 0) {\n      var b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var blockLen = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      blockLen |= b << 8;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var check = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      check |= b << 8;\n      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n        throw new _util.FormatError('Bad uncompressed block length in flate stream');\n      }\n      this.codeBuf = 0;\n      this.codeSize = 0;\n      var bufferLength = this.bufferLength;\n      buffer = this.ensureBuffer(bufferLength + blockLen);\n      var end = bufferLength + blockLen;\n      this.bufferLength = end;\n      if (blockLen === 0) {\n        if (str.peekByte() === -1) {\n          this.eof = true;\n        }\n      } else {\n        for (var n = bufferLength; n < end; ++n) {\n          if ((b = str.getByte()) === -1) {\n            this.eof = true;\n            break;\n          }\n          buffer[n] = b;\n        }\n      }\n      return;\n    }\n    var litCodeTable;\n    var distCodeTable;\n    if (hdr === 1) {\n      litCodeTable = fixedLitCodeTab;\n      distCodeTable = fixedDistCodeTab;\n    } else if (hdr === 2) {\n      var numLitCodes = this.getBits(5) + 257;\n      var numDistCodes = this.getBits(5) + 1;\n      var numCodeLenCodes = this.getBits(4) + 4;\n      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n      var i;\n      for (i = 0; i < numCodeLenCodes; ++i) {\n        codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n      }\n      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n      len = 0;\n      i = 0;\n      var codes = numLitCodes + numDistCodes;\n      var codeLengths = new Uint8Array(codes);\n      var bitsLength, bitsOffset, what;\n      while (i < codes) {\n        var code = this.getCode(codeLenCodeTab);\n        if (code === 16) {\n          bitsLength = 2;\n          bitsOffset = 3;\n          what = len;\n        } else if (code === 17) {\n          bitsLength = 3;\n          bitsOffset = 3;\n          what = len = 0;\n        } else if (code === 18) {\n          bitsLength = 7;\n          bitsOffset = 11;\n          what = len = 0;\n        } else {\n          codeLengths[i++] = len = code;\n          continue;\n        }\n        var repeatLength = this.getBits(bitsLength) + bitsOffset;\n        while (repeatLength-- > 0) {\n          codeLengths[i++] = what;\n        }\n      }\n      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n    } else {\n      throw new _util.FormatError('Unknown block type in flate stream');\n    }\n    buffer = this.buffer;\n    var limit = buffer ? buffer.length : 0;\n    var pos = this.bufferLength;\n    while (true) {\n      var code1 = this.getCode(litCodeTable);\n      if (code1 < 256) {\n        if (pos + 1 >= limit) {\n          buffer = this.ensureBuffer(pos + 1);\n          limit = buffer.length;\n        }\n        buffer[pos++] = code1;\n        continue;\n      }\n      if (code1 === 256) {\n        this.bufferLength = pos;\n        return;\n      }\n      code1 -= 257;\n      code1 = lengthDecode[code1];\n      var code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      len = (code1 & 0xffff) + code2;\n      code1 = this.getCode(distCodeTable);\n      code1 = distDecode[code1];\n      code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      var dist = (code1 & 0xffff) + code2;\n      if (pos + len >= limit) {\n        buffer = this.ensureBuffer(pos + len);\n        limit = buffer.length;\n      }\n      for (var k = 0; k < len; ++k, ++pos) {\n        buffer[pos] = buffer[pos - dist];\n      }\n    }\n  };\n  return FlateStream;\n}();\nvar PredictorStream = function PredictorStreamClosure() {\n  function PredictorStream(str, maybeLength, params) {\n    if (!(0, _primitives.isDict)(params)) {\n      return str;\n    }\n    var predictor = this.predictor = params.get('Predictor') || 1;\n    if (predictor <= 1) {\n      return str;\n    }\n    if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n      throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    if (predictor === 2) {\n      this.readBlock = this.readBlockTiff;\n    } else {\n      this.readBlock = this.readBlockPng;\n    }\n    this.str = str;\n    this.dict = str.dict;\n    var colors = this.colors = params.get('Colors') || 1;\n    var bits = this.bits = params.get('BitsPerComponent') || 8;\n    var columns = this.columns = params.get('Columns') || 1;\n    this.pixBytes = colors * bits + 7 >> 3;\n    this.rowBytes = columns * colors * bits + 7 >> 3;\n    DecodeStream.call(this, maybeLength);\n    return this;\n  }\n  PredictorStream.prototype = Object.create(DecodeStream.prototype);\n  PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n    var rowBytes = this.rowBytes;\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var bits = this.bits;\n    var colors = this.colors;\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var inbuf = 0,\n        outbuf = 0;\n    var inbits = 0,\n        outbits = 0;\n    var pos = bufferLength;\n    var i;\n    if (bits === 1 && colors === 1) {\n      for (i = 0; i < rowBytes; ++i) {\n        var c = rawBytes[i] ^ inbuf;\n        c ^= c >> 1;\n        c ^= c >> 2;\n        c ^= c >> 4;\n        inbuf = (c & 1) << 7;\n        buffer[pos++] = c;\n      }\n    } else if (bits === 8) {\n      for (i = 0; i < colors; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; ++i) {\n        buffer[pos] = buffer[pos - colors] + rawBytes[i];\n        pos++;\n      }\n    } else if (bits === 16) {\n      var bytesPerPixel = colors * 2;\n      for (i = 0; i < bytesPerPixel; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; i += 2) {\n        var sum = ((rawBytes[i] & 0xFF) << 8) + (rawBytes[i + 1] & 0xFF) + ((buffer[pos - bytesPerPixel] & 0xFF) << 8) + (buffer[pos - bytesPerPixel + 1] & 0xFF);\n        buffer[pos++] = sum >> 8 & 0xFF;\n        buffer[pos++] = sum & 0xFF;\n      }\n    } else {\n      var compArray = new Uint8Array(colors + 1);\n      var bitMask = (1 << bits) - 1;\n      var j = 0,\n          k = bufferLength;\n      var columns = this.columns;\n      for (i = 0; i < columns; ++i) {\n        for (var kk = 0; kk < colors; ++kk) {\n          if (inbits < bits) {\n            inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n            inbits += 8;\n          }\n          compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n          inbits -= bits;\n          outbuf = outbuf << bits | compArray[kk];\n          outbits += bits;\n          if (outbits >= 8) {\n            buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n            outbits -= 8;\n          }\n        }\n      }\n      if (outbits > 0) {\n        buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n      }\n    }\n    this.bufferLength += rowBytes;\n  };\n  PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n    var rowBytes = this.rowBytes;\n    var pixBytes = this.pixBytes;\n    var predictor = this.str.getByte();\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n    if (prevRow.length === 0) {\n      prevRow = new Uint8Array(rowBytes);\n    }\n    var i,\n        j = bufferLength,\n        up,\n        c;\n    switch (predictor) {\n      case 0:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        break;\n      case 1:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 2:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n        }\n        break;\n      case 3:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 4:\n        for (i = 0; i < pixBytes; ++i) {\n          up = prevRow[i];\n          c = rawBytes[i];\n          buffer[j++] = up + c;\n        }\n        for (; i < rowBytes; ++i) {\n          up = prevRow[i];\n          var upLeft = prevRow[i - pixBytes];\n          var left = buffer[j - pixBytes];\n          var p = left + up - upLeft;\n          var pa = p - left;\n          if (pa < 0) {\n            pa = -pa;\n          }\n          var pb = p - up;\n          if (pb < 0) {\n            pb = -pb;\n          }\n          var pc = p - upLeft;\n          if (pc < 0) {\n            pc = -pc;\n          }\n          c = rawBytes[i];\n          if (pa <= pb && pa <= pc) {\n            buffer[j++] = left + c;\n          } else if (pb <= pc) {\n            buffer[j++] = up + c;\n          } else {\n            buffer[j++] = upLeft + c;\n          }\n        }\n        break;\n      default:\n        throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    this.bufferLength += rowBytes;\n  };\n  return PredictorStream;\n}();\nvar DecryptStream = function DecryptStreamClosure() {\n  function DecryptStream(str, maybeLength, decrypt) {\n    this.str = str;\n    this.dict = str.dict;\n    this.decrypt = decrypt;\n    this.nextChunk = null;\n    this.initialized = false;\n    DecodeStream.call(this, maybeLength);\n  }\n  var chunkSize = 512;\n  DecryptStream.prototype = Object.create(DecodeStream.prototype);\n  DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n    var chunk;\n    if (this.initialized) {\n      chunk = this.nextChunk;\n    } else {\n      chunk = this.str.getBytes(chunkSize);\n      this.initialized = true;\n    }\n    if (!chunk || chunk.length === 0) {\n      this.eof = true;\n      return;\n    }\n    this.nextChunk = this.str.getBytes(chunkSize);\n    var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n    var decrypt = this.decrypt;\n    chunk = decrypt(chunk, !hasMoreData);\n    var bufferLength = this.bufferLength;\n    var i,\n        n = chunk.length;\n    var buffer = this.ensureBuffer(bufferLength + n);\n    for (i = 0; i < n; i++) {\n      buffer[bufferLength++] = chunk[i];\n    }\n    this.bufferLength = bufferLength;\n  };\n  return DecryptStream;\n}();\nvar Ascii85Stream = function Ascii85StreamClosure() {\n  function Ascii85Stream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.input = new Uint8Array(5);\n    if (maybeLength) {\n      maybeLength = 0.8 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n  Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n    var TILDA_CHAR = 0x7E;\n    var Z_LOWER_CHAR = 0x7A;\n    var EOF = -1;\n    var str = this.str;\n    var c = str.getByte();\n    while ((0, _util.isSpace)(c)) {\n      c = str.getByte();\n    }\n    if (c === EOF || c === TILDA_CHAR) {\n      this.eof = true;\n      return;\n    }\n    var bufferLength = this.bufferLength,\n        buffer;\n    var i;\n    if (c === Z_LOWER_CHAR) {\n      buffer = this.ensureBuffer(bufferLength + 4);\n      for (i = 0; i < 4; ++i) {\n        buffer[bufferLength + i] = 0;\n      }\n      this.bufferLength += 4;\n    } else {\n      var input = this.input;\n      input[0] = c;\n      for (i = 1; i < 5; ++i) {\n        c = str.getByte();\n        while ((0, _util.isSpace)(c)) {\n          c = str.getByte();\n        }\n        input[i] = c;\n        if (c === EOF || c === TILDA_CHAR) {\n          break;\n        }\n      }\n      buffer = this.ensureBuffer(bufferLength + i - 1);\n      this.bufferLength += i - 1;\n      if (i < 5) {\n        for (; i < 5; ++i) {\n          input[i] = 0x21 + 84;\n        }\n        this.eof = true;\n      }\n      var t = 0;\n      for (i = 0; i < 5; ++i) {\n        t = t * 85 + (input[i] - 0x21);\n      }\n      for (i = 3; i >= 0; --i) {\n        buffer[bufferLength + i] = t & 0xFF;\n        t >>= 8;\n      }\n    }\n  };\n  return Ascii85Stream;\n}();\nvar AsciiHexStream = function AsciiHexStreamClosure() {\n  function AsciiHexStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.firstDigit = -1;\n    if (maybeLength) {\n      maybeLength = 0.5 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n  AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n    var UPSTREAM_BLOCK_SIZE = 8000;\n    var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n    if (!bytes.length) {\n      this.eof = true;\n      return;\n    }\n    var maxDecodeLength = bytes.length + 1 >> 1;\n    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n    var bufferLength = this.bufferLength;\n    var firstDigit = this.firstDigit;\n    for (var i = 0, ii = bytes.length; i < ii; i++) {\n      var ch = bytes[i],\n          digit;\n      if (ch >= 0x30 && ch <= 0x39) {\n        digit = ch & 0x0F;\n      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n        digit = (ch & 0x0F) + 9;\n      } else if (ch === 0x3E) {\n        this.eof = true;\n        break;\n      } else {\n        continue;\n      }\n      if (firstDigit < 0) {\n        firstDigit = digit;\n      } else {\n        buffer[bufferLength++] = firstDigit << 4 | digit;\n        firstDigit = -1;\n      }\n    }\n    if (firstDigit >= 0 && this.eof) {\n      buffer[bufferLength++] = firstDigit << 4;\n      firstDigit = -1;\n    }\n    this.firstDigit = firstDigit;\n    this.bufferLength = bufferLength;\n  };\n  return AsciiHexStream;\n}();\nvar RunLengthStream = function RunLengthStreamClosure() {\n  function RunLengthStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    DecodeStream.call(this, maybeLength);\n  }\n  RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n  RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n    var repeatHeader = this.str.getBytes(2);\n    if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n      this.eof = true;\n      return;\n    }\n    var buffer;\n    var bufferLength = this.bufferLength;\n    var n = repeatHeader[0];\n    if (n < 128) {\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      buffer[bufferLength++] = repeatHeader[1];\n      if (n > 0) {\n        var source = this.str.getBytes(n);\n        buffer.set(source, bufferLength);\n        bufferLength += n;\n      }\n    } else {\n      n = 257 - n;\n      var b = repeatHeader[1];\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      for (var i = 0; i < n; i++) {\n        buffer[bufferLength++] = b;\n      }\n    }\n    this.bufferLength = bufferLength;\n  };\n  return RunLengthStream;\n}();\nvar LZWStream = function LZWStreamClosure() {\n  function LZWStream(str, maybeLength, earlyChange) {\n    this.str = str;\n    this.dict = str.dict;\n    this.cachedData = 0;\n    this.bitsCached = 0;\n    var maxLzwDictionarySize = 4096;\n    var lzwState = {\n      earlyChange: earlyChange,\n      codeLength: 9,\n      nextCode: 258,\n      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n      currentSequence: new Uint8Array(maxLzwDictionarySize),\n      currentSequenceLength: 0\n    };\n    for (var i = 0; i < 256; ++i) {\n      lzwState.dictionaryValues[i] = i;\n      lzwState.dictionaryLengths[i] = 1;\n    }\n    this.lzwState = lzwState;\n    DecodeStream.call(this, maybeLength);\n  }\n  LZWStream.prototype = Object.create(DecodeStream.prototype);\n  LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n    var bitsCached = this.bitsCached;\n    var cachedData = this.cachedData;\n    while (bitsCached < n) {\n      var c = this.str.getByte();\n      if (c === -1) {\n        this.eof = true;\n        return null;\n      }\n      cachedData = cachedData << 8 | c;\n      bitsCached += 8;\n    }\n    this.bitsCached = bitsCached -= n;\n    this.cachedData = cachedData;\n    this.lastCode = null;\n    return cachedData >>> bitsCached & (1 << n) - 1;\n  };\n  LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n    var blockSize = 512;\n    var estimatedDecodedSize = blockSize * 2,\n        decodedSizeDelta = blockSize;\n    var i, j, q;\n    var lzwState = this.lzwState;\n    if (!lzwState) {\n      return;\n    }\n    var earlyChange = lzwState.earlyChange;\n    var nextCode = lzwState.nextCode;\n    var dictionaryValues = lzwState.dictionaryValues;\n    var dictionaryLengths = lzwState.dictionaryLengths;\n    var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n    var codeLength = lzwState.codeLength;\n    var prevCode = lzwState.prevCode;\n    var currentSequence = lzwState.currentSequence;\n    var currentSequenceLength = lzwState.currentSequenceLength;\n    var decodedLength = 0;\n    var currentBufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n    for (i = 0; i < blockSize; i++) {\n      var code = this.readBits(codeLength);\n      var hasPrev = currentSequenceLength > 0;\n      if (code < 256) {\n        currentSequence[0] = code;\n        currentSequenceLength = 1;\n      } else if (code >= 258) {\n        if (code < nextCode) {\n          currentSequenceLength = dictionaryLengths[code];\n          for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n            currentSequence[j] = dictionaryValues[q];\n            q = dictionaryPrevCodes[q];\n          }\n        } else {\n          currentSequence[currentSequenceLength++] = currentSequence[0];\n        }\n      } else if (code === 256) {\n        codeLength = 9;\n        nextCode = 258;\n        currentSequenceLength = 0;\n        continue;\n      } else {\n        this.eof = true;\n        delete this.lzwState;\n        break;\n      }\n      if (hasPrev) {\n        dictionaryPrevCodes[nextCode] = prevCode;\n        dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n        dictionaryValues[nextCode] = currentSequence[0];\n        nextCode++;\n        codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n      }\n      prevCode = code;\n      decodedLength += currentSequenceLength;\n      if (estimatedDecodedSize < decodedLength) {\n        do {\n          estimatedDecodedSize += decodedSizeDelta;\n        } while (estimatedDecodedSize < decodedLength);\n        buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n      }\n      for (j = 0; j < currentSequenceLength; j++) {\n        buffer[currentBufferLength++] = currentSequence[j];\n      }\n    }\n    lzwState.nextCode = nextCode;\n    lzwState.codeLength = codeLength;\n    lzwState.prevCode = prevCode;\n    lzwState.currentSequenceLength = currentSequenceLength;\n    this.bufferLength = currentBufferLength;\n  };\n  return LZWStream;\n}();\nvar NullStream = function NullStreamClosure() {\n  function NullStream() {\n    Stream.call(this, new Uint8Array(0));\n  }\n  NullStream.prototype = Stream.prototype;\n  return NullStream;\n}();\nexports.Ascii85Stream = Ascii85Stream;\nexports.AsciiHexStream = AsciiHexStream;\nexports.DecryptStream = DecryptStream;\nexports.DecodeStream = DecodeStream;\nexports.FlateStream = FlateStream;\nexports.NullStream = NullStream;\nexports.PredictorStream = PredictorStream;\nexports.RunLengthStream = RunLengthStream;\nexports.Stream = Stream;\nexports.StreamsSequenceStream = StreamsSequenceStream;\nexports.StringStream = StringStream;\nexports.LZWStream = LZWStream;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(6);\nvar core = __w_pdfjs_require__(7);\nvar hide = __w_pdfjs_require__(12);\nvar redefine = __w_pdfjs_require__(9);\nvar ctx = __w_pdfjs_require__(11);\nvar PROTOTYPE = 'prototype';\nvar $export = function $export(type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    own = !IS_FORCED && target && target[key] !== undefined;\n    out = (own ? target : source)[key];\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    if (target) redefine(target, key, out, type & $export.U);\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n$export.F = 1;\n$export.G = 2;\n$export.S = 4;\n$export.P = 8;\n$export.B = 16;\n$export.W = 32;\n$export.U = 64;\n$export.R = 128;\nmodule.exports = $export;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif (typeof __g == 'number') __g = global;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar core = module.exports = { version: '2.5.5' };\nif (typeof __e == 'number') __e = core;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(6);\nvar hide = __w_pdfjs_require__(12);\nvar has = __w_pdfjs_require__(10);\nvar SRC = __w_pdfjs_require__(22)('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n__w_pdfjs_require__(7).inspectSource = function (it) {\n  return $toString.call(it);\n};\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar aFunction = __w_pdfjs_require__(17);\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1:\n      return function (a) {\n        return fn.call(that, a);\n      };\n    case 2:\n      return function (a, b) {\n        return fn.call(that, a, b);\n      };\n    case 3:\n      return function (a, b, c) {\n        return fn.call(that, a, b, c);\n      };\n  }\n  return function () {\n    return fn.apply(that, arguments);\n  };\n};\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar dP = __w_pdfjs_require__(16);\nvar createDesc = __w_pdfjs_require__(29);\nmodule.exports = __w_pdfjs_require__(13) ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = !__w_pdfjs_require__(14)(function () {\n  return Object.defineProperty({}, 'a', {\n    get: function get() {\n      return 7;\n    }\n  }).a != 7;\n});\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toString = {}.toString;\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(45);\nvar toPrimitive = __w_pdfjs_require__(46);\nvar dP = Object.defineProperty;\nexports.f = __w_pdfjs_require__(13) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) {}\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar IObject = __w_pdfjs_require__(30);\nvar defined = __w_pdfjs_require__(23);\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {};\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorSpace = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar ColorSpace = function ColorSpaceClosure() {\n  function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n    var COMPONENTS = 3;\n    alpha01 = alpha01 !== 1 ? 0 : alpha01;\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1 * COMPONENTS;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        newIndex += alpha01;\n      }\n    }\n  }\n  function ColorSpace() {\n    (0, _util.unreachable)('should not call ColorSpace constructor');\n  }\n  ColorSpace.prototype = {\n    getRgb: function ColorSpace_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      this.getRgbItem(src, srcOffset, rgb, 0);\n      return rgb;\n    },\n    getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbItem');\n    },\n    getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbBuffer');\n    },\n    getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getOutputLength');\n    },\n    isPassthrough: function ColorSpace_isPassthrough(bits) {\n      return false;\n    },\n    fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n      var count = originalWidth * originalHeight;\n      var rgbBuf = null;\n      var numComponentColors = 1 << bpc;\n      var needsResizing = originalHeight !== height || originalWidth !== width;\n      var i, ii;\n      if (this.isPassthrough(bpc)) {\n        rgbBuf = comps;\n      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n        var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n        var key;\n        for (i = 0; i < numComponentColors; i++) {\n          allColors[i] = i;\n        }\n        var colorMap = new Uint8Array(numComponentColors * 3);\n        this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n        var destPos, rgbPos;\n        if (!needsResizing) {\n          destPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            dest[destPos++] = colorMap[key];\n            dest[destPos++] = colorMap[key + 1];\n            dest[destPos++] = colorMap[key + 2];\n            destPos += alpha01;\n          }\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          rgbPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            rgbBuf[rgbPos++] = colorMap[key];\n            rgbBuf[rgbPos++] = colorMap[key + 1];\n            rgbBuf[rgbPos++] = colorMap[key + 2];\n          }\n        }\n      } else {\n        if (!needsResizing) {\n          this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n        }\n      }\n      if (rgbBuf) {\n        if (needsResizing) {\n          resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n        } else {\n          rgbPos = 0;\n          destPos = 0;\n          for (i = 0, ii = width * actualHeight; i < ii; i++) {\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            destPos += alpha01;\n          }\n        }\n      }\n    },\n    usesZeroToOneRange: true\n  };\n  ColorSpace.parse = function (cs, xref, res, pdfFunctionFactory) {\n    var IR = ColorSpace.parseToIR(cs, xref, res, pdfFunctionFactory);\n    return ColorSpace.fromIR(IR, pdfFunctionFactory);\n  };\n  ColorSpace.fromIR = function (IR, pdfFunctionFactory) {\n    var name = Array.isArray(IR) ? IR[0] : IR;\n    var whitePoint, blackPoint, gamma;\n    switch (name) {\n      case 'DeviceGrayCS':\n        return this.singletons.gray;\n      case 'DeviceRgbCS':\n        return this.singletons.rgb;\n      case 'DeviceCmykCS':\n        return this.singletons.cmyk;\n      case 'CalGrayCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        return new CalGrayCS(whitePoint, blackPoint, gamma);\n      case 'CalRGBCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        var matrix = IR[4];\n        return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n      case 'PatternCS':\n        var basePatternCS = IR[1];\n        if (basePatternCS) {\n          basePatternCS = ColorSpace.fromIR(basePatternCS, pdfFunctionFactory);\n        }\n        return new PatternCS(basePatternCS);\n      case 'IndexedCS':\n        var baseIndexedCS = IR[1];\n        var hiVal = IR[2];\n        var lookup = IR[3];\n        return new IndexedCS(ColorSpace.fromIR(baseIndexedCS, pdfFunctionFactory), hiVal, lookup);\n      case 'AlternateCS':\n        var numComps = IR[1];\n        var alt = IR[2];\n        var tintFnIR = IR[3];\n        return new AlternateCS(numComps, ColorSpace.fromIR(alt, pdfFunctionFactory), pdfFunctionFactory.createFromIR(tintFnIR));\n      case 'LabCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        var range = IR[3];\n        return new LabCS(whitePoint, blackPoint, range);\n      default:\n        throw new _util.FormatError('Unknown colorspace name: ' + name);\n    }\n  };\n  ColorSpace.parseToIR = function (cs, xref) {\n    var res = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var pdfFunctionFactory = arguments[3];\n\n    cs = xref.fetchIfRef(cs);\n    if ((0, _primitives.isName)(cs)) {\n      switch (cs.name) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'Pattern':\n          return ['PatternCS', null];\n        default:\n          if ((0, _primitives.isDict)(res)) {\n            var colorSpaces = res.get('ColorSpace');\n            if ((0, _primitives.isDict)(colorSpaces)) {\n              var resCS = colorSpaces.get(cs.name);\n              if (resCS) {\n                if ((0, _primitives.isName)(resCS)) {\n                  return ColorSpace.parseToIR(resCS, xref, res, pdfFunctionFactory);\n                }\n                cs = resCS;\n                break;\n              }\n            }\n          }\n          throw new _util.FormatError('unrecognized colorspace ' + cs.name);\n      }\n    }\n    if (Array.isArray(cs)) {\n      var mode = xref.fetchIfRef(cs[0]).name;\n      var numComps, params, alt, whitePoint, blackPoint, gamma;\n      switch (mode) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'CalGray':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.get('Gamma');\n          return ['CalGrayCS', whitePoint, blackPoint, gamma];\n        case 'CalRGB':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.getArray('Gamma');\n          var matrix = params.getArray('Matrix');\n          return ['CalRGBCS', whitePoint, blackPoint, gamma, matrix];\n        case 'ICCBased':\n          var stream = xref.fetchIfRef(cs[1]);\n          var dict = stream.dict;\n          numComps = dict.get('N');\n          alt = dict.get('Alternate');\n          if (alt) {\n            var altIR = ColorSpace.parseToIR(alt, xref, res, pdfFunctionFactory);\n            var altCS = ColorSpace.fromIR(altIR, pdfFunctionFactory);\n            if (altCS.numComps === numComps) {\n              return altIR;\n            }\n            (0, _util.warn)('ICCBased color space: Ignoring incorrect /Alternate entry.');\n          }\n          if (numComps === 1) {\n            return 'DeviceGrayCS';\n          } else if (numComps === 3) {\n            return 'DeviceRgbCS';\n          } else if (numComps === 4) {\n            return 'DeviceCmykCS';\n          }\n          break;\n        case 'Pattern':\n          var basePatternCS = cs[1] || null;\n          if (basePatternCS) {\n            basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res, pdfFunctionFactory);\n          }\n          return ['PatternCS', basePatternCS];\n        case 'Indexed':\n        case 'I':\n          var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res, pdfFunctionFactory);\n          var hiVal = xref.fetchIfRef(cs[2]) + 1;\n          var lookup = xref.fetchIfRef(cs[3]);\n          if ((0, _primitives.isStream)(lookup)) {\n            lookup = lookup.getBytes();\n          }\n          return ['IndexedCS', baseIndexedCS, hiVal, lookup];\n        case 'Separation':\n        case 'DeviceN':\n          var name = xref.fetchIfRef(cs[1]);\n          numComps = Array.isArray(name) ? name.length : 1;\n          alt = ColorSpace.parseToIR(cs[2], xref, res, pdfFunctionFactory);\n          var tintFnIR = pdfFunctionFactory.createIR(xref.fetchIfRef(cs[3]));\n          return ['AlternateCS', numComps, alt, tintFnIR];\n        case 'Lab':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          var range = params.getArray('Range');\n          return ['LabCS', whitePoint, blackPoint, range];\n        default:\n          throw new _util.FormatError('unimplemented color space object \"' + mode + '\"');\n      }\n    }\n    throw new _util.FormatError('unrecognized color space object: \"' + cs + '\"');\n  };\n  ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n    if (!Array.isArray(decode)) {\n      return true;\n    }\n    if (n * 2 !== decode.length) {\n      (0, _util.warn)('The decode map is not the correct length');\n      return true;\n    }\n    for (var i = 0, ii = decode.length; i < ii; i += 2) {\n      if (decode[i] !== 0 || decode[i + 1] !== 1) {\n        return false;\n      }\n    }\n    return true;\n  };\n  ColorSpace.singletons = {\n    get gray() {\n      return (0, _util.shadow)(this, 'gray', new DeviceGrayCS());\n    },\n    get rgb() {\n      return (0, _util.shadow)(this, 'rgb', new DeviceRgbCS());\n    },\n    get cmyk() {\n      return (0, _util.shadow)(this, 'cmyk', new DeviceCmykCS());\n    }\n  };\n  return ColorSpace;\n}();\nvar AlternateCS = function AlternateCSClosure() {\n  function AlternateCS(numComps, base, tintFn) {\n    this.name = 'Alternate';\n    this.numComps = numComps;\n    this.defaultColor = new Float32Array(numComps);\n    for (var i = 0; i < numComps; ++i) {\n      this.defaultColor[i] = 1;\n    }\n    this.base = base;\n    this.tintFn = tintFn;\n    this.tmpBuf = new Float32Array(base.numComps);\n  }\n  AlternateCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var tmpBuf = this.tmpBuf;\n      this.tintFn(src, srcOffset, tmpBuf, 0);\n      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n    },\n    getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var tintFn = this.tintFn;\n      var base = this.base;\n      var scale = 1 / ((1 << bits) - 1);\n      var baseNumComps = base.numComps;\n      var usesZeroToOneRange = base.usesZeroToOneRange;\n      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n      var pos = isPassthrough ? destOffset : 0;\n      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n      var numComps = this.numComps;\n      var scaled = new Float32Array(numComps);\n      var tinted = new Float32Array(baseNumComps);\n      var i, j;\n      for (i = 0; i < count; i++) {\n        for (j = 0; j < numComps; j++) {\n          scaled[j] = src[srcOffset++] * scale;\n        }\n        tintFn(scaled, 0, tinted, 0);\n        if (usesZeroToOneRange) {\n          for (j = 0; j < baseNumComps; j++) {\n            baseBuf[pos++] = tinted[j] * 255;\n          }\n        } else {\n          base.getRgbItem(tinted, 0, baseBuf, pos);\n          pos += baseNumComps;\n        }\n      }\n      if (!isPassthrough) {\n        base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n      }\n    },\n    getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return AlternateCS;\n}();\nvar PatternCS = function PatternCSClosure() {\n  function PatternCS(baseCS) {\n    this.name = 'Pattern';\n    this.base = baseCS;\n  }\n  PatternCS.prototype = {};\n  return PatternCS;\n}();\nvar IndexedCS = function IndexedCSClosure() {\n  function IndexedCS(base, highVal, lookup) {\n    this.name = 'Indexed';\n    this.numComps = 1;\n    this.defaultColor = new Uint8Array(this.numComps);\n    this.base = base;\n    this.highVal = highVal;\n    var baseNumComps = base.numComps;\n    var length = baseNumComps * highVal;\n    if ((0, _primitives.isStream)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      var bytes = lookup.getBytes(length);\n      this.lookup.set(bytes);\n    } else if ((0, _util.isString)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      for (var i = 0; i < length; ++i) {\n        this.lookup[i] = lookup.charCodeAt(i);\n      }\n    } else if (lookup instanceof Uint8Array) {\n      this.lookup = lookup;\n    } else {\n      throw new _util.FormatError('Unrecognized lookup table: ' + lookup);\n    }\n  }\n  IndexedCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var numComps = this.base.numComps;\n      var start = src[srcOffset] * numComps;\n      this.base.getRgbBuffer(this.lookup, start, 1, dest, destOffset, 8, 0);\n    },\n    getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var base = this.base;\n      var numComps = base.numComps;\n      var outputDelta = base.getOutputLength(numComps, alpha01);\n      var lookup = this.lookup;\n      for (var i = 0; i < count; ++i) {\n        var lookupPos = src[srcOffset++] * numComps;\n        base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n        destOffset += outputDelta;\n      }\n    },\n    getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: true\n  };\n  return IndexedCS;\n}();\nvar DeviceGrayCS = function DeviceGrayCSClosure() {\n  function DeviceGrayCS() {\n    this.name = 'DeviceGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var c = src[srcOffset] * 255 | 0;\n      c = c < 0 ? 0 : c > 255 ? 255 : c;\n      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n    },\n    getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        var c = scale * src[j++] | 0;\n        dest[q++] = c;\n        dest[q++] = c;\n        dest[q++] = c;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceGrayCS;\n}();\nvar DeviceRgbCS = function DeviceRgbCSClosure() {\n  function DeviceRgbCS() {\n    this.name = 'DeviceRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceRgbCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var r = src[srcOffset] * 255 | 0;\n      var g = src[srcOffset + 1] * 255 | 0;\n      var b = src[srcOffset + 2] * 255 | 0;\n      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n    },\n    getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      if (bits === 8 && alpha01 === 0) {\n        dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n        return;\n      }\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n      return bits === 8;\n    },\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceRgbCS;\n}();\nvar DeviceCmykCS = function DeviceCmykCSClosure() {\n  function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n    var c = src[srcOffset + 0] * srcScale;\n    var m = src[srcOffset + 1] * srcScale;\n    var y = src[srcOffset + 2] * srcScale;\n    var k = src[srcOffset + 3] * srcScale;\n    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n    dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n    dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n    dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n  }\n  function DeviceCmykCS() {\n    this.name = 'DeviceCMYK';\n    this.numComps = 4;\n    this.defaultColor = new Float32Array(this.numComps);\n    this.defaultColor[3] = 1;\n  }\n  DeviceCmykCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(src, srcOffset, 1, dest, destOffset);\n    },\n    getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; i++) {\n        convertToRgb(src, srcOffset, scale, dest, destOffset);\n        srcOffset += 4;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n      return inputLength / 4 * (3 + alpha01) | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceCmykCS;\n}();\nvar CalGrayCS = function CalGrayCSClosure() {\n  function CalGrayCS(whitePoint, blackPoint, gamma) {\n    this.name = 'CalGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalGray');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    gamma = gamma || 1;\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    this.G = gamma;\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ', falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n      (0, _util.warn)(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n    }\n    if (this.G < 1) {\n      (0, _util.info)('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n      this.G = 1;\n    }\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = src[srcOffset] * scale;\n    var AG = Math.pow(A, cs.G);\n    var L = cs.YW * AG;\n    var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n    dest[destOffset] = val;\n    dest[destOffset + 1] = val;\n    dest[destOffset + 2] = val;\n  }\n  CalGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 1;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalGrayCS;\n}();\nvar CalRGBCS = function CalRGBCSClosure() {\n  var BRADFORD_SCALE_MATRIX = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]);\n  var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -0.0085287, 0.0400428, 0.9684867]);\n  var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.9692660, 1.8760108, 0.0415560, 0.0556434, -0.2040259, 1.0572252]);\n  var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\n  var tempNormalizeMatrix = new Float32Array(3);\n  var tempConvertMatrix1 = new Float32Array(3);\n  var tempConvertMatrix2 = new Float32Array(3);\n  var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n  function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n    this.name = 'CalRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalRGB');\n    }\n    blackPoint = blackPoint || new Float32Array(3);\n    gamma = gamma || new Float32Array([1, 1, 1]);\n    matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n    var XW = whitePoint[0];\n    var YW = whitePoint[1];\n    var ZW = whitePoint[2];\n    this.whitePoint = whitePoint;\n    var XB = blackPoint[0];\n    var YB = blackPoint[1];\n    var ZB = blackPoint[2];\n    this.blackPoint = blackPoint;\n    this.GR = gamma[0];\n    this.GG = gamma[1];\n    this.GB = gamma[2];\n    this.MXA = matrix[0];\n    this.MYA = matrix[1];\n    this.MZA = matrix[2];\n    this.MXB = matrix[3];\n    this.MYB = matrix[4];\n    this.MZB = matrix[5];\n    this.MXC = matrix[6];\n    this.MYC = matrix[7];\n    this.MZC = matrix[8];\n    if (XW < 0 || ZW < 0 || YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (XB < 0 || YB < 0 || ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n      this.blackPoint = new Float32Array(3);\n    }\n    if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n      (0, _util.info)('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n      this.GR = this.GG = this.GB = 1;\n    }\n    if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n      (0, _util.info)('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n      this.MXA = this.MYB = this.MZC = 1;\n      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n    }\n  }\n  function matrixProduct(a, b, result) {\n    result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n    result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n    result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n  }\n  function convertToFlat(sourceWhitePoint, LMS, result) {\n    result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n    result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n    result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n  }\n  function convertToD65(sourceWhitePoint, LMS, result) {\n    var D65X = 0.95047;\n    var D65Y = 1;\n    var D65Z = 1.08883;\n    result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n    result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n    result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n  }\n  function sRGBTransferFunction(color) {\n    if (color <= 0.0031308) {\n      return adjustToRange(0, 1, 12.92 * color);\n    }\n    return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n  }\n  function adjustToRange(min, max, value) {\n    return Math.max(min, Math.min(max, value));\n  }\n  function decodeL(L) {\n    if (L < 0) {\n      return -decodeL(-L);\n    }\n    if (L > 8.0) {\n      return Math.pow((L + 16) / 116, 3);\n    }\n    return L * DECODE_L_CONSTANT;\n  }\n  function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n    if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n      result[0] = XYZ_Flat[0];\n      result[1] = XYZ_Flat[1];\n      result[2] = XYZ_Flat[2];\n      return;\n    }\n    var zeroDecodeL = decodeL(0);\n    var X_DST = zeroDecodeL;\n    var X_SRC = decodeL(sourceBlackPoint[0]);\n    var Y_DST = zeroDecodeL;\n    var Y_SRC = decodeL(sourceBlackPoint[1]);\n    var Z_DST = zeroDecodeL;\n    var Z_SRC = decodeL(sourceBlackPoint[2]);\n    var X_Scale = (1 - X_DST) / (1 - X_SRC);\n    var X_Offset = 1 - X_Scale;\n    var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n    var Y_Offset = 1 - Y_Scale;\n    var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n    var Z_Offset = 1 - Z_Scale;\n    result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n    result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n    result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n  }\n  function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n    if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n      result[0] = XYZ_In[0];\n      result[1] = XYZ_In[1];\n      result[2] = XYZ_In[2];\n      return;\n    }\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_Flat = tempNormalizeMatrix;\n    convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n  }\n  function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_D65 = tempNormalizeMatrix;\n    convertToD65(sourceWhitePoint, LMS, LMS_D65);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = adjustToRange(0, 1, src[srcOffset] * scale);\n    var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n    var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n    var AGR = Math.pow(A, cs.GR);\n    var BGG = Math.pow(B, cs.GG);\n    var CGB = Math.pow(C, cs.GB);\n    var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n    var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n    var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n    var XYZ = tempConvertMatrix1;\n    XYZ[0] = X;\n    XYZ[1] = Y;\n    XYZ[2] = Z;\n    var XYZ_Flat = tempConvertMatrix2;\n    normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n    var XYZ_Black = tempConvertMatrix1;\n    compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n    var XYZ_D65 = tempConvertMatrix2;\n    normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n    var SRGB = tempConvertMatrix1;\n    matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n    var sR = sRGBTransferFunction(SRGB[0]);\n    var sG = sRGBTransferFunction(SRGB[1]);\n    var sB = sRGBTransferFunction(SRGB[2]);\n    dest[destOffset] = Math.round(sR * 255);\n    dest[destOffset + 1] = Math.round(sG * 255);\n    dest[destOffset + 2] = Math.round(sB * 255);\n  }\n  CalRGBCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalRGBCS;\n}();\nvar LabCS = function LabCSClosure() {\n  function LabCS(whitePoint, blackPoint, range) {\n    this.name = 'Lab';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space Lab');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    range = range || [-100, 100, -100, 100];\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.amin = range[0];\n    this.amax = range[1];\n    this.bmin = range[2];\n    this.bmax = range[3];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components, no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint, falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.amin > this.amax || this.bmin > this.bmax) {\n      (0, _util.info)('Invalid Range, falling back to defaults');\n      this.amin = -100;\n      this.amax = 100;\n      this.bmin = -100;\n      this.bmax = 100;\n    }\n  }\n  function fn_g(x) {\n    var result;\n    if (x >= 6 / 29) {\n      result = x * x * x;\n    } else {\n      result = 108 / 841 * (x - 4 / 29);\n    }\n    return result;\n  }\n  function decode(value, high1, low2, high2) {\n    return low2 + value * (high2 - low2) / high1;\n  }\n  function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n    var Ls = src[srcOffset];\n    var as = src[srcOffset + 1];\n    var bs = src[srcOffset + 2];\n    if (maxVal !== false) {\n      Ls = decode(Ls, maxVal, 0, 100);\n      as = decode(as, maxVal, cs.amin, cs.amax);\n      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n    }\n    as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n    bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n    var M = (Ls + 16) / 116;\n    var L = M + as / 500;\n    var N = M - bs / 200;\n    var X = cs.XW * fn_g(L);\n    var Y = cs.YW * fn_g(M);\n    var Z = cs.ZW * fn_g(N);\n    var r, g, b;\n    if (cs.ZW < 1) {\n      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n    } else {\n      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n    }\n    dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n    dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n    dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n  }\n  LabCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, false, dest, destOffset);\n    },\n    getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var maxVal = (1 << bits) - 1;\n      for (var i = 0; i < count; i++) {\n        convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: false\n  };\n  return LabCS;\n}();\nexports.ColorSpace = ColorSpace;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar MacExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', 'centoldstyle', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', '', 'threequartersemdash', '', 'questionsmall', '', '', '', '', 'Ethsmall', '', '', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', '', '', '', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hypheninferior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', 'asuperior', 'centsuperior', '', '', '', '', 'Aacutesmall', 'Agravesmall', 'Acircumflexsmall', 'Adieresissmall', 'Atildesmall', 'Aringsmall', 'Ccedillasmall', 'Eacutesmall', 'Egravesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Iacutesmall', 'Igravesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ntildesmall', 'Oacutesmall', 'Ogravesmall', 'Ocircumflexsmall', 'Odieresissmall', 'Otildesmall', 'Uacutesmall', 'Ugravesmall', 'Ucircumflexsmall', 'Udieresissmall', '', 'eightsuperior', 'fourinferior', 'threeinferior', 'sixinferior', 'eightinferior', 'seveninferior', 'Scaronsmall', '', 'centinferior', 'twoinferior', '', 'Dieresissmall', '', 'Caronsmall', 'osuperior', 'fiveinferior', '', 'commainferior', 'periodinferior', 'Yacutesmall', '', 'dollarinferior', '', '', 'Thornsmall', '', 'nineinferior', 'zeroinferior', 'Zcaronsmall', 'AEsmall', 'Oslashsmall', 'questiondownsmall', 'oneinferior', 'Lslashsmall', '', '', '', '', '', '', 'Cedillasmall', '', '', '', '', '', 'OEsmall', 'figuredash', 'hyphensuperior', '', '', '', '', 'exclamdownsmall', '', 'Ydieresissmall', '', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'ninesuperior', 'zerosuperior', '', 'esuperior', 'rsuperior', 'tsuperior', '', '', 'isuperior', 'ssuperior', 'dsuperior', '', '', '', '', '', 'lsuperior', 'Ogoneksmall', 'Brevesmall', 'Macronsmall', 'bsuperior', 'nsuperior', 'msuperior', 'commasuperior', 'periodsuperior', 'Dotaccentsmall', 'Ringsmall', '', '', '', ''];\nvar MacRomanEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'space', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron'];\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls', '', '', '', ''];\nvar WinAnsiEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'bullet', 'Euro', 'bullet', 'quotesinglbase', 'florin', 'quotedblbase', 'ellipsis', 'dagger', 'daggerdbl', 'circumflex', 'perthousand', 'Scaron', 'guilsinglleft', 'OE', 'bullet', 'Zcaron', 'bullet', 'bullet', 'quoteleft', 'quoteright', 'quotedblleft', 'quotedblright', 'bullet', 'endash', 'emdash', 'tilde', 'trademark', 'scaron', 'guilsinglright', 'oe', 'bullet', 'zcaron', 'Ydieresis', 'space', 'exclamdown', 'cent', 'sterling', 'currency', 'yen', 'brokenbar', 'section', 'dieresis', 'copyright', 'ordfeminine', 'guillemotleft', 'logicalnot', 'hyphen', 'registered', 'macron', 'degree', 'plusminus', 'twosuperior', 'threesuperior', 'acute', 'mu', 'paragraph', 'periodcentered', 'cedilla', 'onesuperior', 'ordmasculine', 'guillemotright', 'onequarter', 'onehalf', 'threequarters', 'questiondown', 'Agrave', 'Aacute', 'Acircumflex', 'Atilde', 'Adieresis', 'Aring', 'AE', 'Ccedilla', 'Egrave', 'Eacute', 'Ecircumflex', 'Edieresis', 'Igrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Eth', 'Ntilde', 'Ograve', 'Oacute', 'Ocircumflex', 'Otilde', 'Odieresis', 'multiply', 'Oslash', 'Ugrave', 'Uacute', 'Ucircumflex', 'Udieresis', 'Yacute', 'Thorn', 'germandbls', 'agrave', 'aacute', 'acircumflex', 'atilde', 'adieresis', 'aring', 'ae', 'ccedilla', 'egrave', 'eacute', 'ecircumflex', 'edieresis', 'igrave', 'iacute', 'icircumflex', 'idieresis', 'eth', 'ntilde', 'ograve', 'oacute', 'ocircumflex', 'otilde', 'odieresis', 'divide', 'oslash', 'ugrave', 'uacute', 'ucircumflex', 'udieresis', 'yacute', 'thorn', 'ydieresis'];\nvar SymbolSetEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'universal', 'numbersign', 'existential', 'percent', 'ampersand', 'suchthat', 'parenleft', 'parenright', 'asteriskmath', 'plus', 'comma', 'minus', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'congruent', 'Alpha', 'Beta', 'Chi', 'Delta', 'Epsilon', 'Phi', 'Gamma', 'Eta', 'Iota', 'theta1', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Omicron', 'Pi', 'Theta', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'sigma1', 'Omega', 'Xi', 'Psi', 'Zeta', 'bracketleft', 'therefore', 'bracketright', 'perpendicular', 'underscore', 'radicalex', 'alpha', 'beta', 'chi', 'delta', 'epsilon', 'phi', 'gamma', 'eta', 'iota', 'phi1', 'kappa', 'lambda', 'mu', 'nu', 'omicron', 'pi', 'theta', 'rho', 'sigma', 'tau', 'upsilon', 'omega1', 'omega', 'xi', 'psi', 'zeta', 'braceleft', 'bar', 'braceright', 'similar', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'Euro', 'Upsilon1', 'minute', 'lessequal', 'fraction', 'infinity', 'florin', 'club', 'diamond', 'heart', 'spade', 'arrowboth', 'arrowleft', 'arrowup', 'arrowright', 'arrowdown', 'degree', 'plusminus', 'second', 'greaterequal', 'multiply', 'proportional', 'partialdiff', 'bullet', 'divide', 'notequal', 'equivalence', 'approxequal', 'ellipsis', 'arrowvertex', 'arrowhorizex', 'carriagereturn', 'aleph', 'Ifraktur', 'Rfraktur', 'weierstrass', 'circlemultiply', 'circleplus', 'emptyset', 'intersection', 'union', 'propersuperset', 'reflexsuperset', 'notsubset', 'propersubset', 'reflexsubset', 'element', 'notelement', 'angle', 'gradient', 'registerserif', 'copyrightserif', 'trademarkserif', 'product', 'radical', 'dotmath', 'logicalnot', 'logicaland', 'logicalor', 'arrowdblboth', 'arrowdblleft', 'arrowdblup', 'arrowdblright', 'arrowdbldown', 'lozenge', 'angleleft', 'registersans', 'copyrightsans', 'trademarksans', 'summation', 'parenlefttp', 'parenleftex', 'parenleftbt', 'bracketlefttp', 'bracketleftex', 'bracketleftbt', 'bracelefttp', 'braceleftmid', 'braceleftbt', 'braceex', '', 'angleright', 'integral', 'integraltp', 'integralex', 'integralbt', 'parenrighttp', 'parenrightex', 'parenrightbt', 'bracketrighttp', 'bracketrightex', 'bracketrightbt', 'bracerighttp', 'bracerightmid', 'bracerightbt', ''];\nvar ZapfDingbatsEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'a1', 'a2', 'a202', 'a3', 'a4', 'a5', 'a119', 'a118', 'a117', 'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a105', 'a17', 'a18', 'a19', 'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a6', 'a7', 'a8', 'a9', 'a10', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36', 'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46', 'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56', 'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66', 'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a203', 'a75', 'a204', 'a76', 'a77', 'a78', 'a79', 'a81', 'a82', 'a83', 'a84', 'a97', 'a98', 'a99', 'a100', '', 'a89', 'a90', 'a93', 'a94', 'a91', 'a92', 'a205', 'a85', 'a206', 'a86', 'a87', 'a88', 'a95', 'a96', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'a101', 'a102', 'a103', 'a104', 'a106', 'a107', 'a108', 'a112', 'a111', 'a110', 'a109', 'a120', 'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129', 'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138', 'a139', 'a140', 'a141', 'a142', 'a143', 'a144', 'a145', 'a146', 'a147', 'a148', 'a149', 'a150', 'a151', 'a152', 'a153', 'a154', 'a155', 'a156', 'a157', 'a158', 'a159', 'a160', 'a161', 'a163', 'a164', 'a196', 'a165', 'a192', 'a166', 'a167', 'a168', 'a169', 'a170', 'a171', 'a172', 'a173', 'a162', 'a174', 'a175', 'a176', 'a177', 'a178', 'a179', 'a193', 'a180', 'a199', 'a181', 'a200', 'a182', '', 'a201', 'a183', 'a184', 'a197', 'a185', 'a194', 'a198', 'a186', 'a195', 'a187', 'a188', 'a189', 'a190', 'a191', ''];\nfunction getEncoding(encodingName) {\n  switch (encodingName) {\n    case 'WinAnsiEncoding':\n      return WinAnsiEncoding;\n    case 'StandardEncoding':\n      return StandardEncoding;\n    case 'MacRomanEncoding':\n      return MacRomanEncoding;\n    case 'SymbolSetEncoding':\n      return SymbolSetEncoding;\n    case 'ZapfDingbatsEncoding':\n      return ZapfDingbatsEncoding;\n    case 'ExpertEncoding':\n      return ExpertEncoding;\n    case 'MacExpertEncoding':\n      return MacExpertEncoding;\n    default:\n      return null;\n  }\n}\nexports.WinAnsiEncoding = WinAnsiEncoding;\nexports.StandardEncoding = StandardEncoding;\nexports.MacRomanEncoding = MacRomanEncoding;\nexports.SymbolSetEncoding = SymbolSetEncoding;\nexports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\nexports.ExpertEncoding = ExpertEncoding;\nexports.getEncoding = getEncoding;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $keys = __w_pdfjs_require__(98);\nvar enumBugKeys = __w_pdfjs_require__(53);\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar def = __w_pdfjs_require__(16).f;\nvar has = __w_pdfjs_require__(10);\nvar TAG = __w_pdfjs_require__(2)('toStringTag');\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {\n    configurable: true,\n    value: tag\n  });\n};\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(11);\nvar call = __w_pdfjs_require__(103);\nvar isArrayIter = __w_pdfjs_require__(104);\nvar anObject = __w_pdfjs_require__(8);\nvar toLength = __w_pdfjs_require__(31);\nvar getIterFn = __w_pdfjs_require__(105);\nvar BREAK = {};\nvar RETURN = {};\nvar _exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () {\n    return iterable;\n  } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\n_exports.BREAK = BREAK;\n_exports.RETURN = RETURN;\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = exports.Linearization = exports.Lexer = undefined;\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _ccitt_stream = __w_pdfjs_require__(134);\n\nvar _jbig2_stream = __w_pdfjs_require__(135);\n\nvar _jpeg_stream = __w_pdfjs_require__(41);\n\nvar _jpx_stream = __w_pdfjs_require__(138);\n\nvar MAX_LENGTH_TO_CACHE = 1000;\nvar MAX_ADLER32_LENGTH = 5552;\nfunction computeAdler32(bytes) {\n  var bytesLength = bytes.length;\n  if (bytesLength >= MAX_ADLER32_LENGTH) {\n    throw new Error('computeAdler32: The input is too large.');\n  }\n  var a = 1,\n      b = 0;\n  for (var i = 0; i < bytesLength; ++i) {\n    a += bytes[i] & 0xFF;\n    b += a;\n  }\n  return b % 65521 << 16 | a % 65521;\n}\nvar Parser = function ParserClosure() {\n  function Parser(lexer, allowStreams, xref, recoveryMode) {\n    this.lexer = lexer;\n    this.allowStreams = allowStreams;\n    this.xref = xref;\n    this.recoveryMode = recoveryMode || false;\n    this.imageCache = Object.create(null);\n    this.refill();\n  }\n  Parser.prototype = {\n    refill: function Parser_refill() {\n      this.buf1 = this.lexer.getObj();\n      this.buf2 = this.lexer.getObj();\n    },\n    shift: function Parser_shift() {\n      if ((0, _primitives.isCmd)(this.buf2, 'ID')) {\n        this.buf1 = this.buf2;\n        this.buf2 = null;\n      } else {\n        this.buf1 = this.buf2;\n        this.buf2 = this.lexer.getObj();\n      }\n    },\n    tryShift: function Parser_tryShift() {\n      try {\n        this.shift();\n        return true;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        return false;\n      }\n    },\n    getObj: function Parser_getObj(cipherTransform) {\n      var buf1 = this.buf1;\n      this.shift();\n      if (buf1 instanceof _primitives.Cmd) {\n        switch (buf1.cmd) {\n          case 'BI':\n            return this.makeInlineImage(cipherTransform);\n          case '[':\n            var array = [];\n            while (!(0, _primitives.isCmd)(this.buf1, ']') && !(0, _primitives.isEOF)(this.buf1)) {\n              array.push(this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside array');\n              }\n              return array;\n            }\n            this.shift();\n            return array;\n          case '<<':\n            var dict = new _primitives.Dict(this.xref);\n            while (!(0, _primitives.isCmd)(this.buf1, '>>') && !(0, _primitives.isEOF)(this.buf1)) {\n              if (!(0, _primitives.isName)(this.buf1)) {\n                (0, _util.info)('Malformed dictionary: key must be a name object');\n                this.shift();\n                continue;\n              }\n              var key = this.buf1.name;\n              this.shift();\n              if ((0, _primitives.isEOF)(this.buf1)) {\n                break;\n              }\n              dict.set(key, this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside dictionary');\n              }\n              return dict;\n            }\n            if ((0, _primitives.isCmd)(this.buf2, 'stream')) {\n              return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n            }\n            this.shift();\n            return dict;\n          default:\n            return buf1;\n        }\n      }\n      if (Number.isInteger(buf1)) {\n        var num = buf1;\n        if (Number.isInteger(this.buf1) && (0, _primitives.isCmd)(this.buf2, 'R')) {\n          var ref = new _primitives.Ref(num, this.buf1);\n          this.shift();\n          this.shift();\n          return ref;\n        }\n        return num;\n      }\n      if ((0, _util.isString)(buf1)) {\n        var str = buf1;\n        if (cipherTransform) {\n          str = cipherTransform.decryptString(str);\n        }\n        return str;\n      }\n      return buf1;\n    },\n    findDefaultInlineStreamEnd: function findDefaultInlineStreamEnd(stream) {\n      var E = 0x45,\n          I = 0x49,\n          SPACE = 0x20,\n          LF = 0xA,\n          CR = 0xD;\n      var n = 10,\n          NUL = 0x0;\n      var startPos = stream.pos,\n          state = 0,\n          ch = void 0,\n          maybeEIPos = void 0;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else {\n          (0, _util.assert)(state === 2);\n          if (ch === SPACE || ch === LF || ch === CR) {\n            maybeEIPos = stream.pos;\n            var followingBytes = stream.peekBytes(n);\n            for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n              ch = followingBytes[i];\n              if (ch === NUL && followingBytes[i + 1] !== NUL) {\n                continue;\n              }\n              if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n                state = 0;\n                break;\n              }\n            }\n            if (state === 2) {\n              break;\n            }\n          } else {\n            state = 0;\n          }\n        }\n      }\n      if (ch === -1) {\n        (0, _util.warn)('findDefaultInlineStreamEnd: ' + 'Reached the end of the stream without finding a valid EI marker');\n        if (maybeEIPos) {\n          (0, _util.warn)('... trying to recover by using the last \"EI\" occurrence.');\n          stream.skip(-(stream.pos - maybeEIPos));\n        }\n      }\n      return stream.pos - 4 - startPos;\n    },\n\n    findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n      var startPos = stream.pos,\n          foundEOI = false,\n          b,\n          markerLength,\n          length;\n      while ((b = stream.getByte()) !== -1) {\n        if (b !== 0xFF) {\n          continue;\n        }\n        switch (stream.getByte()) {\n          case 0x00:\n            break;\n          case 0xFF:\n            stream.skip(-1);\n            break;\n          case 0xD9:\n            foundEOI = true;\n            break;\n          case 0xC0:\n          case 0xC1:\n          case 0xC2:\n          case 0xC3:\n          case 0xC5:\n          case 0xC6:\n          case 0xC7:\n          case 0xC9:\n          case 0xCA:\n          case 0xCB:\n          case 0xCD:\n          case 0xCE:\n          case 0xCF:\n          case 0xC4:\n          case 0xCC:\n          case 0xDA:\n          case 0xDB:\n          case 0xDC:\n          case 0xDD:\n          case 0xDE:\n          case 0xDF:\n          case 0xE0:\n          case 0xE1:\n          case 0xE2:\n          case 0xE3:\n          case 0xE4:\n          case 0xE5:\n          case 0xE6:\n          case 0xE7:\n          case 0xE8:\n          case 0xE9:\n          case 0xEA:\n          case 0xEB:\n          case 0xEC:\n          case 0xED:\n          case 0xEE:\n          case 0xEF:\n          case 0xFE:\n            markerLength = stream.getUint16();\n            if (markerLength > 2) {\n              stream.skip(markerLength - 2);\n            } else {\n              stream.skip(-2);\n            }\n            break;\n        }\n        if (foundEOI) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (b === -1) {\n        (0, _util.warn)('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n      var TILDE = 0x7E,\n          GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === TILDE && stream.peekByte() === GT) {\n          stream.skip();\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n      var GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === GT) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n      var E = 0x45,\n          I = 0x49;\n      var state = 0,\n          ch;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else if (state === 2) {\n          break;\n        }\n      }\n    },\n    makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      var dict = new _primitives.Dict(this.xref),\n          dictLength = void 0;\n      while (!(0, _primitives.isCmd)(this.buf1, 'ID') && !(0, _primitives.isEOF)(this.buf1)) {\n        if (!(0, _primitives.isName)(this.buf1)) {\n          throw new _util.FormatError('Dictionary key must be a name object');\n        }\n        var key = this.buf1.name;\n        this.shift();\n        if ((0, _primitives.isEOF)(this.buf1)) {\n          break;\n        }\n        dict.set(key, this.getObj(cipherTransform));\n      }\n      if (lexer.beginInlineImagePos !== -1) {\n        dictLength = stream.pos - lexer.beginInlineImagePos;\n      }\n      var filter = dict.get('Filter', 'F'),\n          filterName;\n      if ((0, _primitives.isName)(filter)) {\n        filterName = filter.name;\n      } else if (Array.isArray(filter)) {\n        var filterZero = this.xref.fetchIfRef(filter[0]);\n        if ((0, _primitives.isName)(filterZero)) {\n          filterName = filterZero.name;\n        }\n      }\n      var startPos = stream.pos,\n          length = void 0;\n      if (filterName === 'DCTDecode' || filterName === 'DCT') {\n        length = this.findDCTDecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCII85Decode' || filterName === 'A85') {\n        length = this.findASCII85DecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n        length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n      } else {\n        length = this.findDefaultInlineStreamEnd(stream);\n      }\n      var imageStream = stream.makeSubStream(startPos, length, dict);\n      var cacheKey = void 0;\n      if (length < MAX_LENGTH_TO_CACHE && dictLength < MAX_ADLER32_LENGTH) {\n        var imageBytes = imageStream.getBytes();\n        imageStream.reset();\n        var initialStreamPos = stream.pos;\n        stream.pos = lexer.beginInlineImagePos;\n        var dictBytes = stream.getBytes(dictLength);\n        stream.pos = initialStreamPos;\n        cacheKey = computeAdler32(imageBytes) + '_' + computeAdler32(dictBytes);\n        var cacheEntry = this.imageCache[cacheKey];\n        if (cacheEntry !== undefined) {\n          this.buf2 = _primitives.Cmd.get('EI');\n          this.shift();\n          cacheEntry.reset();\n          return cacheEntry;\n        }\n      }\n      if (cipherTransform) {\n        imageStream = cipherTransform.createStream(imageStream, length);\n      }\n      imageStream = this.filter(imageStream, dict, length);\n      imageStream.dict = dict;\n      if (cacheKey !== undefined) {\n        imageStream.cacheKey = 'inline_' + length + '_' + cacheKey;\n        this.imageCache[cacheKey] = imageStream;\n      }\n      this.buf2 = _primitives.Cmd.get('EI');\n      this.shift();\n      return imageStream;\n    },\n    makeStream: function Parser_makeStream(dict, cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      lexer.skipToNextLine();\n      var pos = stream.pos - 1;\n      var length = dict.get('Length');\n      if (!Number.isInteger(length)) {\n        (0, _util.info)('Bad ' + length + ' attribute in stream');\n        length = 0;\n      }\n      stream.pos = pos + length;\n      lexer.nextChar();\n      if (this.tryShift() && (0, _primitives.isCmd)(this.buf2, 'endstream')) {\n        this.shift();\n      } else {\n        stream.pos = pos;\n        var SCAN_BLOCK_SIZE = 2048;\n        var ENDSTREAM_SIGNATURE_LENGTH = 9;\n        var ENDSTREAM_SIGNATURE = [0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D];\n        var skipped = 0,\n            found = false,\n            i,\n            j;\n        while (stream.pos < stream.end) {\n          var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n          var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n          if (scanLength <= 0) {\n            break;\n          }\n          found = false;\n          i = 0;\n          while (i < scanLength) {\n            j = 0;\n            while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n              j++;\n            }\n            if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n              found = true;\n              break;\n            }\n            i++;\n          }\n          if (found) {\n            skipped += i;\n            stream.pos += i;\n            break;\n          }\n          skipped += scanLength;\n          stream.pos += scanLength;\n        }\n        if (!found) {\n          throw new _util.FormatError('Missing endstream');\n        }\n        length = skipped;\n        lexer.nextChar();\n        this.shift();\n        this.shift();\n      }\n      this.shift();\n      stream = stream.makeSubStream(pos, length, dict);\n      if (cipherTransform) {\n        stream = cipherTransform.createStream(stream, length);\n      }\n      stream = this.filter(stream, dict, length);\n      stream.dict = dict;\n      return stream;\n    },\n    filter: function Parser_filter(stream, dict, length) {\n      var filter = dict.get('Filter', 'F');\n      var params = dict.get('DecodeParms', 'DP');\n      if ((0, _primitives.isName)(filter)) {\n        if (Array.isArray(params)) {\n          (0, _util.warn)('/DecodeParms should not contain an Array, ' + 'when /Filter contains a Name.');\n        }\n        return this.makeFilter(stream, filter.name, length, params);\n      }\n      var maybeLength = length;\n      if (Array.isArray(filter)) {\n        var filterArray = filter;\n        var paramsArray = params;\n        for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n          filter = this.xref.fetchIfRef(filterArray[i]);\n          if (!(0, _primitives.isName)(filter)) {\n            throw new _util.FormatError('Bad filter name: ' + filter);\n          }\n          params = null;\n          if (Array.isArray(paramsArray) && i in paramsArray) {\n            params = this.xref.fetchIfRef(paramsArray[i]);\n          }\n          stream = this.makeFilter(stream, filter.name, maybeLength, params);\n          maybeLength = null;\n        }\n      }\n      return stream;\n    },\n    makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n      if (maybeLength === 0) {\n        (0, _util.warn)('Empty \"' + name + '\" stream.');\n        return new _stream.NullStream();\n      }\n      try {\n        var xrefStreamStats = this.xref.stats.streamTypes;\n        if (name === 'FlateDecode' || name === 'Fl') {\n          xrefStreamStats[_util.StreamType.FLATE] = true;\n          if (params) {\n            return new _stream.PredictorStream(new _stream.FlateStream(stream, maybeLength), maybeLength, params);\n          }\n          return new _stream.FlateStream(stream, maybeLength);\n        }\n        if (name === 'LZWDecode' || name === 'LZW') {\n          xrefStreamStats[_util.StreamType.LZW] = true;\n          var earlyChange = 1;\n          if (params) {\n            if (params.has('EarlyChange')) {\n              earlyChange = params.get('EarlyChange');\n            }\n            return new _stream.PredictorStream(new _stream.LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n          }\n          return new _stream.LZWStream(stream, maybeLength, earlyChange);\n        }\n        if (name === 'DCTDecode' || name === 'DCT') {\n          xrefStreamStats[_util.StreamType.DCT] = true;\n          return new _jpeg_stream.JpegStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'JPXDecode' || name === 'JPX') {\n          xrefStreamStats[_util.StreamType.JPX] = true;\n          return new _jpx_stream.JpxStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'ASCII85Decode' || name === 'A85') {\n          xrefStreamStats[_util.StreamType.A85] = true;\n          return new _stream.Ascii85Stream(stream, maybeLength);\n        }\n        if (name === 'ASCIIHexDecode' || name === 'AHx') {\n          xrefStreamStats[_util.StreamType.AHX] = true;\n          return new _stream.AsciiHexStream(stream, maybeLength);\n        }\n        if (name === 'CCITTFaxDecode' || name === 'CCF') {\n          xrefStreamStats[_util.StreamType.CCF] = true;\n          return new _ccitt_stream.CCITTFaxStream(stream, maybeLength, params);\n        }\n        if (name === 'RunLengthDecode' || name === 'RL') {\n          xrefStreamStats[_util.StreamType.RL] = true;\n          return new _stream.RunLengthStream(stream, maybeLength);\n        }\n        if (name === 'JBIG2Decode') {\n          xrefStreamStats[_util.StreamType.JBIG] = true;\n          return new _jbig2_stream.Jbig2Stream(stream, maybeLength, stream.dict, params);\n        }\n        (0, _util.warn)('filter \"' + name + '\" not supported yet');\n        return stream;\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid stream: \\\"' + ex + '\\\"');\n        return new _stream.NullStream();\n      }\n    }\n  };\n  return Parser;\n}();\nvar Lexer = function LexerClosure() {\n  function Lexer(stream, knownCommands) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n    this.knownCommands = knownCommands;\n    this.beginInlineImagePos = -1;\n  }\n  var specialChars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  function toHexDigit(ch) {\n    if (ch >= 0x30 && ch <= 0x39) {\n      return ch & 0x0F;\n    }\n    if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n      return (ch & 0x0F) + 9;\n    }\n    return -1;\n  }\n  Lexer.prototype = {\n    nextChar: function Lexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    peekChar: function Lexer_peekChar() {\n      return this.stream.peekByte();\n    },\n    getNumber: function Lexer_getNumber() {\n      var ch = this.currentChar;\n      var eNotation = false;\n      var divideBy = 0;\n      var sign = 1;\n      if (ch === 0x2D) {\n        sign = -1;\n        ch = this.nextChar();\n        if (ch === 0x2D) {\n          ch = this.nextChar();\n        }\n      } else if (ch === 0x2B) {\n        ch = this.nextChar();\n      }\n      if (ch === 0x2E) {\n        divideBy = 10;\n        ch = this.nextChar();\n      }\n      if (ch === 0x0A || ch === 0x0D) {\n        do {\n          ch = this.nextChar();\n        } while (ch === 0x0A || ch === 0x0D);\n      }\n      if (ch < 0x30 || ch > 0x39) {\n        throw new _util.FormatError('Invalid number: ' + String.fromCharCode(ch) + ' (charCode ' + ch + ')');\n      }\n      var baseValue = ch - 0x30;\n      var powerValue = 0;\n      var powerValueSign = 1;\n      while ((ch = this.nextChar()) >= 0) {\n        if (0x30 <= ch && ch <= 0x39) {\n          var currentDigit = ch - 0x30;\n          if (eNotation) {\n            powerValue = powerValue * 10 + currentDigit;\n          } else {\n            if (divideBy !== 0) {\n              divideBy *= 10;\n            }\n            baseValue = baseValue * 10 + currentDigit;\n          }\n        } else if (ch === 0x2E) {\n          if (divideBy === 0) {\n            divideBy = 1;\n          } else {\n            break;\n          }\n        } else if (ch === 0x2D) {\n          (0, _util.warn)('Badly formatted number');\n        } else if (ch === 0x45 || ch === 0x65) {\n          ch = this.peekChar();\n          if (ch === 0x2B || ch === 0x2D) {\n            powerValueSign = ch === 0x2D ? -1 : 1;\n            this.nextChar();\n          } else if (ch < 0x30 || ch > 0x39) {\n            break;\n          }\n          eNotation = true;\n        } else {\n          break;\n        }\n      }\n      if (divideBy !== 0) {\n        baseValue /= divideBy;\n      }\n      if (eNotation) {\n        baseValue *= Math.pow(10, powerValueSign * powerValue);\n      }\n      return sign * baseValue;\n    },\n    getString: function Lexer_getString() {\n      var numParen = 1;\n      var done = false;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.nextChar();\n      while (true) {\n        var charBuffered = false;\n        switch (ch | 0) {\n          case -1:\n            (0, _util.warn)('Unterminated string');\n            done = true;\n            break;\n          case 0x28:\n            ++numParen;\n            strBuf.push('(');\n            break;\n          case 0x29:\n            if (--numParen === 0) {\n              this.nextChar();\n              done = true;\n            } else {\n              strBuf.push(')');\n            }\n            break;\n          case 0x5C:\n            ch = this.nextChar();\n            switch (ch) {\n              case -1:\n                (0, _util.warn)('Unterminated string');\n                done = true;\n                break;\n              case 0x6E:\n                strBuf.push('\\n');\n                break;\n              case 0x72:\n                strBuf.push('\\r');\n                break;\n              case 0x74:\n                strBuf.push('\\t');\n                break;\n              case 0x62:\n                strBuf.push('\\b');\n                break;\n              case 0x66:\n                strBuf.push('\\f');\n                break;\n              case 0x5C:\n              case 0x28:\n              case 0x29:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n              case 0x30:\n              case 0x31:\n              case 0x32:\n              case 0x33:\n              case 0x34:\n              case 0x35:\n              case 0x36:\n              case 0x37:\n                var x = ch & 0x0F;\n                ch = this.nextChar();\n                charBuffered = true;\n                if (ch >= 0x30 && ch <= 0x37) {\n                  x = (x << 3) + (ch & 0x0F);\n                  ch = this.nextChar();\n                  if (ch >= 0x30 && ch <= 0x37) {\n                    charBuffered = false;\n                    x = (x << 3) + (ch & 0x0F);\n                  }\n                }\n                strBuf.push(String.fromCharCode(x));\n                break;\n              case 0x0D:\n                if (this.peekChar() === 0x0A) {\n                  this.nextChar();\n                }\n                break;\n              case 0x0A:\n                break;\n              default:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n            }\n            break;\n          default:\n            strBuf.push(String.fromCharCode(ch));\n            break;\n        }\n        if (done) {\n          break;\n        }\n        if (!charBuffered) {\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getName: function Lexer_getName() {\n      var ch, previousCh;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        if (ch === 0x23) {\n          ch = this.nextChar();\n          if (specialChars[ch]) {\n            (0, _util.warn)('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n            strBuf.push('#');\n            break;\n          }\n          var x = toHexDigit(ch);\n          if (x !== -1) {\n            previousCh = ch;\n            ch = this.nextChar();\n            var x2 = toHexDigit(ch);\n            if (x2 === -1) {\n              (0, _util.warn)('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n              strBuf.push('#', String.fromCharCode(previousCh));\n              if (specialChars[ch]) {\n                break;\n              }\n              strBuf.push(String.fromCharCode(ch));\n              continue;\n            }\n            strBuf.push(String.fromCharCode(x << 4 | x2));\n          } else {\n            strBuf.push('#', String.fromCharCode(ch));\n          }\n        } else {\n          strBuf.push(String.fromCharCode(ch));\n        }\n      }\n      if (strBuf.length > 127) {\n        (0, _util.warn)('name token is longer than allowed by the spec: ' + strBuf.length);\n      }\n      return _primitives.Name.get(strBuf.join(''));\n    },\n    getHexString: function Lexer_getHexString() {\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.currentChar;\n      var isFirstHex = true;\n      var firstDigit;\n      var secondDigit;\n      while (true) {\n        if (ch < 0) {\n          (0, _util.warn)('Unterminated hex string');\n          break;\n        } else if (ch === 0x3E) {\n          this.nextChar();\n          break;\n        } else if (specialChars[ch] === 1) {\n          ch = this.nextChar();\n          continue;\n        } else {\n          if (isFirstHex) {\n            firstDigit = toHexDigit(ch);\n            if (firstDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n          } else {\n            secondDigit = toHexDigit(ch);\n            if (secondDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n            strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n          }\n          isFirstHex = !isFirstHex;\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getObj: function Lexer_getObj() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (specialChars[ch] !== 1) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return this.getNumber();\n        case 0x28:\n          return this.getString();\n        case 0x2F:\n          return this.getName();\n        case 0x5B:\n          this.nextChar();\n          return _primitives.Cmd.get('[');\n        case 0x5D:\n          this.nextChar();\n          return _primitives.Cmd.get(']');\n        case 0x3C:\n          ch = this.nextChar();\n          if (ch === 0x3C) {\n            this.nextChar();\n            return _primitives.Cmd.get('<<');\n          }\n          return this.getHexString();\n        case 0x3E:\n          ch = this.nextChar();\n          if (ch === 0x3E) {\n            this.nextChar();\n            return _primitives.Cmd.get('>>');\n          }\n          return _primitives.Cmd.get('>');\n        case 0x7B:\n          this.nextChar();\n          return _primitives.Cmd.get('{');\n        case 0x7D:\n          this.nextChar();\n          return _primitives.Cmd.get('}');\n        case 0x29:\n          this.nextChar();\n          throw new _util.FormatError('Illegal character: ' + ch);\n      }\n      var str = String.fromCharCode(ch);\n      var knownCommands = this.knownCommands;\n      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        var possibleCommand = str + String.fromCharCode(ch);\n        if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n          break;\n        }\n        if (str.length === 128) {\n          throw new _util.FormatError('Command token too long: ' + str.length);\n        }\n        str = possibleCommand;\n        knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      }\n      if (str === 'true') {\n        return true;\n      }\n      if (str === 'false') {\n        return false;\n      }\n      if (str === 'null') {\n        return null;\n      }\n      if (str === 'BI') {\n        this.beginInlineImagePos = this.stream.pos;\n      }\n      return _primitives.Cmd.get(str);\n    },\n    skipToNextLine: function Lexer_skipToNextLine() {\n      var ch = this.currentChar;\n      while (ch >= 0) {\n        if (ch === 0x0D) {\n          ch = this.nextChar();\n          if (ch === 0x0A) {\n            this.nextChar();\n          }\n          break;\n        } else if (ch === 0x0A) {\n          this.nextChar();\n          break;\n        }\n        ch = this.nextChar();\n      }\n    }\n  };\n  return Lexer;\n}();\nvar Linearization = {\n  create: function LinearizationCreate(stream) {\n    function getInt(name, allowZeroValue) {\n      var obj = linDict.get(name);\n      if (Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n        return obj;\n      }\n      throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n    }\n    function getHints() {\n      var hints = linDict.get('H'),\n          hintsLength,\n          item;\n      if (Array.isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n        for (var index = 0; index < hintsLength; index++) {\n          if (!(Number.isInteger(item = hints[index]) && item > 0)) {\n            throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n          }\n        }\n        return hints;\n      }\n      throw new Error('Hint array in the linearization dictionary is invalid.');\n    }\n    var parser = new Parser(new Lexer(stream), false, null);\n    var obj1 = parser.getObj();\n    var obj2 = parser.getObj();\n    var obj3 = parser.getObj();\n    var linDict = parser.getObj();\n    var obj, length;\n    if (!(Number.isInteger(obj1) && Number.isInteger(obj2) && (0, _primitives.isCmd)(obj3, 'obj') && (0, _primitives.isDict)(linDict) && (0, _util.isNum)(obj = linDict.get('Linearized')) && obj > 0)) {\n      return null;\n    } else if ((length = getInt('L')) !== stream.length) {\n      throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n    }\n    return {\n      length: length,\n      hints: getHints(),\n      objectNumberFirst: getInt('O'),\n      endFirst: getInt('E'),\n      numPages: getInt('N'),\n      mainXRefEntriesOffset: getInt('T'),\n      pageFirst: linDict.has('P') ? getInt('P', true) : 0\n    };\n  }\n};\nexports.Lexer = Lexer;\nexports.Linearization = Linearization;\nexports.Parser = Parser;\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar document = __w_pdfjs_require__(6).document;\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(15);\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(32);\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0;\n};\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(15);\nvar TAG = __w_pdfjs_require__(2)('toStringTag');\nvar ARG = cof(function () {\n  return arguments;\n}()) == 'Arguments';\nvar tryGet = function tryGet(it, key) {\n  try {\n    return it[key];\n  } catch (e) {}\n};\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null' : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T : ARG ? cof(O) : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar shared = __w_pdfjs_require__(47)('keys');\nvar uid = __w_pdfjs_require__(22);\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar defined = __w_pdfjs_require__(23);\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) {\n    throw TypeError(name + ': incorrect invocation!');\n  }\n  return it;\n};\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar aFunction = __w_pdfjs_require__(17);\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar redefine = __w_pdfjs_require__(9);\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    redefine(target, key, src[key], safe);\n  }return target;\n};\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar META = __w_pdfjs_require__(22)('meta');\nvar isObject = __w_pdfjs_require__(3);\nvar has = __w_pdfjs_require__(10);\nvar setDesc = __w_pdfjs_require__(16).f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !__w_pdfjs_require__(14)(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function setMeta(it) {\n  setDesc(it, META, {\n    value: {\n      i: 'O' + ++id,\n      w: {}\n    }\n  });\n};\nvar fastKey = function fastKey(it, create) {\n  if (!isObject(it)) return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    if (!isExtensible(it)) return 'F';\n    if (!create) return 'E';\n    setMeta(it);\n  }\n  return it[META].i;\n};\nvar getWeak = function getWeak(it, create) {\n  if (!has(it, META)) {\n    if (!isExtensible(it)) return true;\n    if (!create) return false;\n    setMeta(it);\n  }\n  return it[META].w;\n};\nvar onFreeze = function onFreeze(it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nexports.f = {}.propertyIsEnumerable;\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegStream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _jpg = __w_pdfjs_require__(137);\n\nvar JpegStream = function JpegStreamClosure() {\n  function JpegStream(stream, maybeLength, dict, params) {\n    var ch = void 0;\n    while ((ch = stream.getByte()) !== -1) {\n      if (ch === 0xFF) {\n        stream.skip(-1);\n        break;\n      }\n    }\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpegStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpegStream.prototype, 'bytes', {\n    get: function JpegStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpegStream.prototype.ensureBuffer = function (requested) {};\n  JpegStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpegImage = new _jpg.JpegImage();\n    var decodeArr = this.dict.getArray('Decode', 'D');\n    if (this.forceRGB && Array.isArray(decodeArr)) {\n      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n      var decodeArrLength = decodeArr.length;\n      var transform = new Int32Array(decodeArrLength);\n      var transformNeeded = false;\n      var maxValue = (1 << bitsPerComponent) - 1;\n      for (var i = 0; i < decodeArrLength; i += 2) {\n        transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n        transform[i + 1] = decodeArr[i] * maxValue | 0;\n        if (transform[i] !== 256 || transform[i + 1] !== 0) {\n          transformNeeded = true;\n        }\n      }\n      if (transformNeeded) {\n        jpegImage.decodeTransform = transform;\n      }\n    }\n    if ((0, _primitives.isDict)(this.params)) {\n      var colorTransform = this.params.get('ColorTransform');\n      if (Number.isInteger(colorTransform)) {\n        jpegImage.colorTransform = colorTransform;\n      }\n    }\n    jpegImage.parse(this.bytes);\n    var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n    this.buffer = data;\n    this.bufferLength = data.length;\n    this.eof = true;\n  };\n  JpegStream.prototype.getIR = function () {\n    var forceDataSchema = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    return (0, _util.createObjectURL)(this.bytes, 'image/jpeg', forceDataSchema);\n  };\n  return JpegStream;\n}();\nexports.JpegStream = JpegStream;\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OperatorList = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar QueueOptimizer = function QueueOptimizerClosure() {\n  function addState(parentState, pattern, checkFn, iterateFn, processFn) {\n    var state = parentState;\n    for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n      var item = pattern[i];\n      state = state[item] || (state[item] = []);\n    }\n    state[pattern[pattern.length - 1]] = {\n      checkFn: checkFn,\n      iterateFn: iterateFn,\n      processFn: processFn\n    };\n  }\n  function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n    var iFirstPIMXO = iFirstSave + 2;\n    for (var i = 0; i < count; i++) {\n      var arg = argsArray[iFirstPIMXO + 4 * i];\n      var imageMask = arg.length === 1 && arg[0];\n      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n        fnArray[iFirstPIMXO + 4 * i] = _util.OPS.paintSolidColorImageMask;\n        continue;\n      }\n      break;\n    }\n    return count - i;\n  }\n  var InitialState = [];\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintInlineImageXObject, _util.OPS.restore], null, function iterateInlineImageGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintInlineImageXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundInlineImageGroup(context, i) {\n    var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n    var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n    var MAX_WIDTH = 1000;\n    var IMAGE_PADDING = 1;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIIXO = curr - 1;\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n    if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var maxX = 0;\n    var map = [],\n        maxLineHeight = 0;\n    var currentX = IMAGE_PADDING,\n        currentY = IMAGE_PADDING;\n    var q;\n    for (q = 0; q < count; q++) {\n      var transform = argsArray[iFirstTransform + (q << 2)];\n      var img = argsArray[iFirstPIIXO + (q << 2)][0];\n      if (currentX + img.width > MAX_WIDTH) {\n        maxX = Math.max(maxX, currentX);\n        currentY += maxLineHeight + 2 * IMAGE_PADDING;\n        currentX = 0;\n        maxLineHeight = 0;\n      }\n      map.push({\n        transform: transform,\n        x: currentX,\n        y: currentY,\n        w: img.width,\n        h: img.height\n      });\n      currentX += img.width + 2 * IMAGE_PADDING;\n      maxLineHeight = Math.max(maxLineHeight, img.height);\n    }\n    var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n    var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n    var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n    var imgRowSize = imgWidth << 2;\n    for (q = 0; q < count; q++) {\n      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n      var rowSize = map[q].w << 2;\n      var dataOffset = 0;\n      var offset = map[q].x + map[q].y * imgWidth << 2;\n      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n      for (var k = 0, kk = map[q].h; k < kk; k++) {\n        imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n        dataOffset += rowSize;\n        offset += imgRowSize;\n      }\n      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n      while (offset >= 0) {\n        data[offset - 4] = data[offset];\n        data[offset - 3] = data[offset + 1];\n        data[offset - 2] = data[offset + 2];\n        data[offset - 1] = data[offset + 3];\n        data[offset + rowSize] = data[offset + rowSize - 4];\n        data[offset + rowSize + 1] = data[offset + rowSize - 3];\n        data[offset + rowSize + 2] = data[offset + rowSize - 2];\n        data[offset + rowSize + 3] = data[offset + rowSize - 1];\n        offset -= imgRowSize;\n      }\n    }\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintInlineImageXObjectGroup);\n    argsArray.splice(iFirstSave, count * 4, [{\n      width: imgWidth,\n      height: imgHeight,\n      kind: _util.ImageKind.RGBA_32BPP,\n      data: imgData\n    }, map]);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageMaskXObject, _util.OPS.restore], null, function iterateImageMaskGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintImageMaskXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundImageMaskGroup(context, i) {\n    var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n    var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n    var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIMXO = curr - 1;\n    var count = Math.floor((i - iFirstSave) / 4);\n    count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n    if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var q;\n    var isSameImage = false;\n    var iTransform, transformArgs;\n    var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n    if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n      isSameImage = true;\n      var firstTransformArg0 = argsArray[iFirstTransform][0];\n      var firstTransformArg3 = argsArray[iFirstTransform][3];\n      iTransform = iFirstTransform + 4;\n      var iPIMXO = iFirstPIMXO + 4;\n      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n        transformArgs = argsArray[iTransform];\n        if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n          if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n            isSameImage = false;\n          } else {\n            count = q;\n          }\n          break;\n        }\n      }\n    }\n    if (isSameImage) {\n      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n      var positions = new Float32Array(count * 2);\n      iTransform = iFirstTransform;\n      for (q = 0; q < count; q++, iTransform += 4) {\n        transformArgs = argsArray[iTransform];\n        positions[q << 1] = transformArgs[4];\n        positions[(q << 1) + 1] = transformArgs[5];\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectRepeat);\n      argsArray.splice(iFirstSave, count * 4, [firstPIMXOArg0, firstTransformArg0, firstTransformArg3, positions]);\n    } else {\n      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n      var images = [];\n      for (q = 0; q < count; q++) {\n        transformArgs = argsArray[iFirstTransform + (q << 2)];\n        var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n        images.push({\n          data: maskParams.data,\n          width: maskParams.width,\n          height: maskParams.height,\n          transform: transformArgs\n        });\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectGroup);\n      argsArray.splice(iFirstSave, count * 4, [images]);\n    }\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageXObject, _util.OPS.restore], function (context) {\n    var argsArray = context.argsArray;\n    var iFirstTransform = context.iCurr - 2;\n    return argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0;\n  }, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        if (fnArray[i] !== _util.OPS.transform) {\n          return false;\n        }\n        var iFirstTransform = context.iCurr - 2;\n        var firstTransformArg0 = argsArray[iFirstTransform][0];\n        var firstTransformArg3 = argsArray[iFirstTransform][3];\n        if (argsArray[i][0] !== firstTransformArg0 || argsArray[i][1] !== 0 || argsArray[i][2] !== 0 || argsArray[i][3] !== firstTransformArg3) {\n          return false;\n        }\n        return true;\n      case 2:\n        if (fnArray[i] !== _util.OPS.paintImageXObject) {\n          return false;\n        }\n        var iFirstPIXO = context.iCurr - 1;\n        var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n        if (argsArray[i][0] !== firstPIXOArg0) {\n          return false;\n        }\n        return true;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function (context, i) {\n    var MIN_IMAGES_IN_BLOCK = 3;\n    var MAX_IMAGES_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIXO = curr - 1;\n    var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n    var firstTransformArg0 = argsArray[iFirstTransform][0];\n    var firstTransformArg3 = argsArray[iFirstTransform][3];\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_BLOCK);\n    if (count < MIN_IMAGES_IN_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var positions = new Float32Array(count * 2);\n    var iTransform = iFirstTransform;\n    for (var q = 0; q < count; q++, iTransform += 4) {\n      var transformArgs = argsArray[iTransform];\n      positions[q << 1] = transformArgs[4];\n      positions[(q << 1) + 1] = transformArgs[5];\n    }\n    var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3, positions];\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageXObjectRepeat);\n    argsArray.splice(iFirstSave, count * 4, args);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.beginText, _util.OPS.setFont, _util.OPS.setTextMatrix, _util.OPS.showText, _util.OPS.endText], null, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 4;\n    var pos = (i - iFirstSave) % 5;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.beginText;\n      case 1:\n        return fnArray[i] === _util.OPS.setFont;\n      case 2:\n        return fnArray[i] === _util.OPS.setTextMatrix;\n      case 3:\n        if (fnArray[i] !== _util.OPS.showText) {\n          return false;\n        }\n        var iFirstSetFont = context.iCurr - 3;\n        var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n        var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n        if (argsArray[i][0] !== firstSetFontArg0 || argsArray[i][1] !== firstSetFontArg1) {\n          return false;\n        }\n        return true;\n      case 4:\n        return fnArray[i] === _util.OPS.endText;\n    }\n  }, function (context, i) {\n    var MIN_CHARS_IN_BLOCK = 3;\n    var MAX_CHARS_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstBeginText = curr - 4;\n    var iFirstSetFont = curr - 3;\n    var iFirstSetTextMatrix = curr - 2;\n    var iFirstShowText = curr - 1;\n    var iFirstEndText = curr;\n    var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n    var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n    var count = Math.min(Math.floor((i - iFirstBeginText) / 5), MAX_CHARS_IN_BLOCK);\n    if (count < MIN_CHARS_IN_BLOCK) {\n      return i - (i - iFirstBeginText) % 5;\n    }\n    var iFirst = iFirstBeginText;\n    if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n      count++;\n      iFirst -= 5;\n    }\n    var iEndText = iFirst + 4;\n    for (var q = 1; q < count; q++) {\n      fnArray.splice(iEndText, 3);\n      argsArray.splice(iEndText, 3);\n      iEndText += 2;\n    }\n    return iEndText + 1;\n  });\n  function QueueOptimizer(queue) {\n    this.queue = queue;\n    this.state = null;\n    this.context = {\n      iCurr: 0,\n      fnArray: queue.fnArray,\n      argsArray: queue.argsArray\n    };\n    this.match = null;\n    this.lastProcessed = 0;\n  }\n  QueueOptimizer.prototype = {\n    _optimize: function _optimize() {\n      var fnArray = this.queue.fnArray;\n      var i = this.lastProcessed,\n          ii = fnArray.length;\n      var state = this.state;\n      var match = this.match;\n      if (!state && !match && i + 1 === ii && !InitialState[fnArray[i]]) {\n        this.lastProcessed = ii;\n        return;\n      }\n      var context = this.context;\n      while (i < ii) {\n        if (match) {\n          var iterate = (0, match.iterateFn)(context, i);\n          if (iterate) {\n            i++;\n            continue;\n          }\n          i = (0, match.processFn)(context, i + 1);\n          ii = fnArray.length;\n          match = null;\n          state = null;\n          if (i >= ii) {\n            break;\n          }\n        }\n        state = (state || InitialState)[fnArray[i]];\n        if (!state || Array.isArray(state)) {\n          i++;\n          continue;\n        }\n        context.iCurr = i;\n        i++;\n        if (state.checkFn && !(0, state.checkFn)(context)) {\n          state = null;\n          continue;\n        }\n        match = state;\n        state = null;\n      }\n      this.state = state;\n      this.match = match;\n      this.lastProcessed = i;\n    },\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n      this._optimize();\n    },\n    flush: function flush() {\n      while (this.match) {\n        var length = this.queue.fnArray.length;\n        this.lastProcessed = (0, this.match.processFn)(this.context, length);\n        this.match = null;\n        this.state = null;\n        this._optimize();\n      }\n    },\n    reset: function reset() {\n      this.state = null;\n      this.match = null;\n      this.lastProcessed = 0;\n    }\n  };\n  return QueueOptimizer;\n}();\nvar NullOptimizer = function NullOptimizerClosure() {\n  function NullOptimizer(queue) {\n    this.queue = queue;\n  }\n  NullOptimizer.prototype = {\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n    },\n    flush: function flush() {}\n  };\n  return NullOptimizer;\n}();\nvar OperatorList = function OperatorListClosure() {\n  var CHUNK_SIZE = 1000;\n  var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n  function getTransfers(queue) {\n    var transfers = [];\n    var fnArray = queue.fnArray,\n        argsArray = queue.argsArray;\n    for (var i = 0, ii = queue.length; i < ii; i++) {\n      switch (fnArray[i]) {\n        case _util.OPS.paintInlineImageXObject:\n        case _util.OPS.paintInlineImageXObjectGroup:\n        case _util.OPS.paintImageMaskXObject:\n          var arg = argsArray[i][0];\n          if (!arg.cached) {\n            transfers.push(arg.data.buffer);\n          }\n          break;\n      }\n    }\n    return transfers;\n  }\n  function OperatorList(intent, messageHandler, pageIndex) {\n    this.messageHandler = messageHandler;\n    this.fnArray = [];\n    this.argsArray = [];\n    if (messageHandler && this.intent !== 'oplist') {\n      this.optimizer = new QueueOptimizer(this);\n    } else {\n      this.optimizer = new NullOptimizer(this);\n    }\n    this.dependencies = Object.create(null);\n    this._totalLength = 0;\n    this.pageIndex = pageIndex;\n    this.intent = intent;\n    this.weight = 0;\n  }\n  OperatorList.prototype = {\n    get length() {\n      return this.argsArray.length;\n    },\n    get totalLength() {\n      return this._totalLength + this.length;\n    },\n    addOp: function addOp(fn, args) {\n      this.optimizer.push(fn, args);\n      this.weight++;\n      if (this.messageHandler) {\n        if (this.weight >= CHUNK_SIZE) {\n          this.flush();\n        } else if (this.weight >= CHUNK_SIZE_ABOUT && (fn === _util.OPS.restore || fn === _util.OPS.endText)) {\n          this.flush();\n        }\n      }\n    },\n    addDependency: function addDependency(dependency) {\n      if (dependency in this.dependencies) {\n        return;\n      }\n      this.dependencies[dependency] = true;\n      this.addOp(_util.OPS.dependency, [dependency]);\n    },\n    addDependencies: function addDependencies(dependencies) {\n      for (var key in dependencies) {\n        this.addDependency(key);\n      }\n    },\n    addOpList: function addOpList(opList) {\n      _util.Util.extendObj(this.dependencies, opList.dependencies);\n      for (var i = 0, ii = opList.length; i < ii; i++) {\n        this.addOp(opList.fnArray[i], opList.argsArray[i]);\n      }\n    },\n    getIR: function getIR() {\n      return {\n        fnArray: this.fnArray,\n        argsArray: this.argsArray,\n        length: this.length\n      };\n    },\n    flush: function flush(lastChunk) {\n      this.optimizer.flush();\n      var transfers = getTransfers(this);\n      var length = this.length;\n      this._totalLength += length;\n      this.messageHandler.send('RenderPageChunk', {\n        operatorList: {\n          fnArray: this.fnArray,\n          argsArray: this.argsArray,\n          lastChunk: lastChunk,\n          length: length\n        },\n        pageIndex: this.pageIndex,\n        intent: this.intent\n      }, transfers);\n      this.dependencies = Object.create(null);\n      this.fnArray.length = 0;\n      this.argsArray.length = 0;\n      this.weight = 0;\n      this.optimizer.reset();\n    }\n  };\n  return OperatorList;\n}();\nexports.OperatorList = OperatorList;\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getLookupTableFactory = __w_pdfjs_require__(0).getLookupTableFactory;\nvar getGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['A'] = 0x0041;\n  t['AE'] = 0x00C6;\n  t['AEacute'] = 0x01FC;\n  t['AEmacron'] = 0x01E2;\n  t['AEsmall'] = 0xF7E6;\n  t['Aacute'] = 0x00C1;\n  t['Aacutesmall'] = 0xF7E1;\n  t['Abreve'] = 0x0102;\n  t['Abreveacute'] = 0x1EAE;\n  t['Abrevecyrillic'] = 0x04D0;\n  t['Abrevedotbelow'] = 0x1EB6;\n  t['Abrevegrave'] = 0x1EB0;\n  t['Abrevehookabove'] = 0x1EB2;\n  t['Abrevetilde'] = 0x1EB4;\n  t['Acaron'] = 0x01CD;\n  t['Acircle'] = 0x24B6;\n  t['Acircumflex'] = 0x00C2;\n  t['Acircumflexacute'] = 0x1EA4;\n  t['Acircumflexdotbelow'] = 0x1EAC;\n  t['Acircumflexgrave'] = 0x1EA6;\n  t['Acircumflexhookabove'] = 0x1EA8;\n  t['Acircumflexsmall'] = 0xF7E2;\n  t['Acircumflextilde'] = 0x1EAA;\n  t['Acute'] = 0xF6C9;\n  t['Acutesmall'] = 0xF7B4;\n  t['Acyrillic'] = 0x0410;\n  t['Adblgrave'] = 0x0200;\n  t['Adieresis'] = 0x00C4;\n  t['Adieresiscyrillic'] = 0x04D2;\n  t['Adieresismacron'] = 0x01DE;\n  t['Adieresissmall'] = 0xF7E4;\n  t['Adotbelow'] = 0x1EA0;\n  t['Adotmacron'] = 0x01E0;\n  t['Agrave'] = 0x00C0;\n  t['Agravesmall'] = 0xF7E0;\n  t['Ahookabove'] = 0x1EA2;\n  t['Aiecyrillic'] = 0x04D4;\n  t['Ainvertedbreve'] = 0x0202;\n  t['Alpha'] = 0x0391;\n  t['Alphatonos'] = 0x0386;\n  t['Amacron'] = 0x0100;\n  t['Amonospace'] = 0xFF21;\n  t['Aogonek'] = 0x0104;\n  t['Aring'] = 0x00C5;\n  t['Aringacute'] = 0x01FA;\n  t['Aringbelow'] = 0x1E00;\n  t['Aringsmall'] = 0xF7E5;\n  t['Asmall'] = 0xF761;\n  t['Atilde'] = 0x00C3;\n  t['Atildesmall'] = 0xF7E3;\n  t['Aybarmenian'] = 0x0531;\n  t['B'] = 0x0042;\n  t['Bcircle'] = 0x24B7;\n  t['Bdotaccent'] = 0x1E02;\n  t['Bdotbelow'] = 0x1E04;\n  t['Becyrillic'] = 0x0411;\n  t['Benarmenian'] = 0x0532;\n  t['Beta'] = 0x0392;\n  t['Bhook'] = 0x0181;\n  t['Blinebelow'] = 0x1E06;\n  t['Bmonospace'] = 0xFF22;\n  t['Brevesmall'] = 0xF6F4;\n  t['Bsmall'] = 0xF762;\n  t['Btopbar'] = 0x0182;\n  t['C'] = 0x0043;\n  t['Caarmenian'] = 0x053E;\n  t['Cacute'] = 0x0106;\n  t['Caron'] = 0xF6CA;\n  t['Caronsmall'] = 0xF6F5;\n  t['Ccaron'] = 0x010C;\n  t['Ccedilla'] = 0x00C7;\n  t['Ccedillaacute'] = 0x1E08;\n  t['Ccedillasmall'] = 0xF7E7;\n  t['Ccircle'] = 0x24B8;\n  t['Ccircumflex'] = 0x0108;\n  t['Cdot'] = 0x010A;\n  t['Cdotaccent'] = 0x010A;\n  t['Cedillasmall'] = 0xF7B8;\n  t['Chaarmenian'] = 0x0549;\n  t['Cheabkhasiancyrillic'] = 0x04BC;\n  t['Checyrillic'] = 0x0427;\n  t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n  t['Chedescendercyrillic'] = 0x04B6;\n  t['Chedieresiscyrillic'] = 0x04F4;\n  t['Cheharmenian'] = 0x0543;\n  t['Chekhakassiancyrillic'] = 0x04CB;\n  t['Cheverticalstrokecyrillic'] = 0x04B8;\n  t['Chi'] = 0x03A7;\n  t['Chook'] = 0x0187;\n  t['Circumflexsmall'] = 0xF6F6;\n  t['Cmonospace'] = 0xFF23;\n  t['Coarmenian'] = 0x0551;\n  t['Csmall'] = 0xF763;\n  t['D'] = 0x0044;\n  t['DZ'] = 0x01F1;\n  t['DZcaron'] = 0x01C4;\n  t['Daarmenian'] = 0x0534;\n  t['Dafrican'] = 0x0189;\n  t['Dcaron'] = 0x010E;\n  t['Dcedilla'] = 0x1E10;\n  t['Dcircle'] = 0x24B9;\n  t['Dcircumflexbelow'] = 0x1E12;\n  t['Dcroat'] = 0x0110;\n  t['Ddotaccent'] = 0x1E0A;\n  t['Ddotbelow'] = 0x1E0C;\n  t['Decyrillic'] = 0x0414;\n  t['Deicoptic'] = 0x03EE;\n  t['Delta'] = 0x2206;\n  t['Deltagreek'] = 0x0394;\n  t['Dhook'] = 0x018A;\n  t['Dieresis'] = 0xF6CB;\n  t['DieresisAcute'] = 0xF6CC;\n  t['DieresisGrave'] = 0xF6CD;\n  t['Dieresissmall'] = 0xF7A8;\n  t['Digammagreek'] = 0x03DC;\n  t['Djecyrillic'] = 0x0402;\n  t['Dlinebelow'] = 0x1E0E;\n  t['Dmonospace'] = 0xFF24;\n  t['Dotaccentsmall'] = 0xF6F7;\n  t['Dslash'] = 0x0110;\n  t['Dsmall'] = 0xF764;\n  t['Dtopbar'] = 0x018B;\n  t['Dz'] = 0x01F2;\n  t['Dzcaron'] = 0x01C5;\n  t['Dzeabkhasiancyrillic'] = 0x04E0;\n  t['Dzecyrillic'] = 0x0405;\n  t['Dzhecyrillic'] = 0x040F;\n  t['E'] = 0x0045;\n  t['Eacute'] = 0x00C9;\n  t['Eacutesmall'] = 0xF7E9;\n  t['Ebreve'] = 0x0114;\n  t['Ecaron'] = 0x011A;\n  t['Ecedillabreve'] = 0x1E1C;\n  t['Echarmenian'] = 0x0535;\n  t['Ecircle'] = 0x24BA;\n  t['Ecircumflex'] = 0x00CA;\n  t['Ecircumflexacute'] = 0x1EBE;\n  t['Ecircumflexbelow'] = 0x1E18;\n  t['Ecircumflexdotbelow'] = 0x1EC6;\n  t['Ecircumflexgrave'] = 0x1EC0;\n  t['Ecircumflexhookabove'] = 0x1EC2;\n  t['Ecircumflexsmall'] = 0xF7EA;\n  t['Ecircumflextilde'] = 0x1EC4;\n  t['Ecyrillic'] = 0x0404;\n  t['Edblgrave'] = 0x0204;\n  t['Edieresis'] = 0x00CB;\n  t['Edieresissmall'] = 0xF7EB;\n  t['Edot'] = 0x0116;\n  t['Edotaccent'] = 0x0116;\n  t['Edotbelow'] = 0x1EB8;\n  t['Efcyrillic'] = 0x0424;\n  t['Egrave'] = 0x00C8;\n  t['Egravesmall'] = 0xF7E8;\n  t['Eharmenian'] = 0x0537;\n  t['Ehookabove'] = 0x1EBA;\n  t['Eightroman'] = 0x2167;\n  t['Einvertedbreve'] = 0x0206;\n  t['Eiotifiedcyrillic'] = 0x0464;\n  t['Elcyrillic'] = 0x041B;\n  t['Elevenroman'] = 0x216A;\n  t['Emacron'] = 0x0112;\n  t['Emacronacute'] = 0x1E16;\n  t['Emacrongrave'] = 0x1E14;\n  t['Emcyrillic'] = 0x041C;\n  t['Emonospace'] = 0xFF25;\n  t['Encyrillic'] = 0x041D;\n  t['Endescendercyrillic'] = 0x04A2;\n  t['Eng'] = 0x014A;\n  t['Enghecyrillic'] = 0x04A4;\n  t['Enhookcyrillic'] = 0x04C7;\n  t['Eogonek'] = 0x0118;\n  t['Eopen'] = 0x0190;\n  t['Epsilon'] = 0x0395;\n  t['Epsilontonos'] = 0x0388;\n  t['Ercyrillic'] = 0x0420;\n  t['Ereversed'] = 0x018E;\n  t['Ereversedcyrillic'] = 0x042D;\n  t['Escyrillic'] = 0x0421;\n  t['Esdescendercyrillic'] = 0x04AA;\n  t['Esh'] = 0x01A9;\n  t['Esmall'] = 0xF765;\n  t['Eta'] = 0x0397;\n  t['Etarmenian'] = 0x0538;\n  t['Etatonos'] = 0x0389;\n  t['Eth'] = 0x00D0;\n  t['Ethsmall'] = 0xF7F0;\n  t['Etilde'] = 0x1EBC;\n  t['Etildebelow'] = 0x1E1A;\n  t['Euro'] = 0x20AC;\n  t['Ezh'] = 0x01B7;\n  t['Ezhcaron'] = 0x01EE;\n  t['Ezhreversed'] = 0x01B8;\n  t['F'] = 0x0046;\n  t['Fcircle'] = 0x24BB;\n  t['Fdotaccent'] = 0x1E1E;\n  t['Feharmenian'] = 0x0556;\n  t['Feicoptic'] = 0x03E4;\n  t['Fhook'] = 0x0191;\n  t['Fitacyrillic'] = 0x0472;\n  t['Fiveroman'] = 0x2164;\n  t['Fmonospace'] = 0xFF26;\n  t['Fourroman'] = 0x2163;\n  t['Fsmall'] = 0xF766;\n  t['G'] = 0x0047;\n  t['GBsquare'] = 0x3387;\n  t['Gacute'] = 0x01F4;\n  t['Gamma'] = 0x0393;\n  t['Gammaafrican'] = 0x0194;\n  t['Gangiacoptic'] = 0x03EA;\n  t['Gbreve'] = 0x011E;\n  t['Gcaron'] = 0x01E6;\n  t['Gcedilla'] = 0x0122;\n  t['Gcircle'] = 0x24BC;\n  t['Gcircumflex'] = 0x011C;\n  t['Gcommaaccent'] = 0x0122;\n  t['Gdot'] = 0x0120;\n  t['Gdotaccent'] = 0x0120;\n  t['Gecyrillic'] = 0x0413;\n  t['Ghadarmenian'] = 0x0542;\n  t['Ghemiddlehookcyrillic'] = 0x0494;\n  t['Ghestrokecyrillic'] = 0x0492;\n  t['Gheupturncyrillic'] = 0x0490;\n  t['Ghook'] = 0x0193;\n  t['Gimarmenian'] = 0x0533;\n  t['Gjecyrillic'] = 0x0403;\n  t['Gmacron'] = 0x1E20;\n  t['Gmonospace'] = 0xFF27;\n  t['Grave'] = 0xF6CE;\n  t['Gravesmall'] = 0xF760;\n  t['Gsmall'] = 0xF767;\n  t['Gsmallhook'] = 0x029B;\n  t['Gstroke'] = 0x01E4;\n  t['H'] = 0x0048;\n  t['H18533'] = 0x25CF;\n  t['H18543'] = 0x25AA;\n  t['H18551'] = 0x25AB;\n  t['H22073'] = 0x25A1;\n  t['HPsquare'] = 0x33CB;\n  t['Haabkhasiancyrillic'] = 0x04A8;\n  t['Hadescendercyrillic'] = 0x04B2;\n  t['Hardsigncyrillic'] = 0x042A;\n  t['Hbar'] = 0x0126;\n  t['Hbrevebelow'] = 0x1E2A;\n  t['Hcedilla'] = 0x1E28;\n  t['Hcircle'] = 0x24BD;\n  t['Hcircumflex'] = 0x0124;\n  t['Hdieresis'] = 0x1E26;\n  t['Hdotaccent'] = 0x1E22;\n  t['Hdotbelow'] = 0x1E24;\n  t['Hmonospace'] = 0xFF28;\n  t['Hoarmenian'] = 0x0540;\n  t['Horicoptic'] = 0x03E8;\n  t['Hsmall'] = 0xF768;\n  t['Hungarumlaut'] = 0xF6CF;\n  t['Hungarumlautsmall'] = 0xF6F8;\n  t['Hzsquare'] = 0x3390;\n  t['I'] = 0x0049;\n  t['IAcyrillic'] = 0x042F;\n  t['IJ'] = 0x0132;\n  t['IUcyrillic'] = 0x042E;\n  t['Iacute'] = 0x00CD;\n  t['Iacutesmall'] = 0xF7ED;\n  t['Ibreve'] = 0x012C;\n  t['Icaron'] = 0x01CF;\n  t['Icircle'] = 0x24BE;\n  t['Icircumflex'] = 0x00CE;\n  t['Icircumflexsmall'] = 0xF7EE;\n  t['Icyrillic'] = 0x0406;\n  t['Idblgrave'] = 0x0208;\n  t['Idieresis'] = 0x00CF;\n  t['Idieresisacute'] = 0x1E2E;\n  t['Idieresiscyrillic'] = 0x04E4;\n  t['Idieresissmall'] = 0xF7EF;\n  t['Idot'] = 0x0130;\n  t['Idotaccent'] = 0x0130;\n  t['Idotbelow'] = 0x1ECA;\n  t['Iebrevecyrillic'] = 0x04D6;\n  t['Iecyrillic'] = 0x0415;\n  t['Ifraktur'] = 0x2111;\n  t['Igrave'] = 0x00CC;\n  t['Igravesmall'] = 0xF7EC;\n  t['Ihookabove'] = 0x1EC8;\n  t['Iicyrillic'] = 0x0418;\n  t['Iinvertedbreve'] = 0x020A;\n  t['Iishortcyrillic'] = 0x0419;\n  t['Imacron'] = 0x012A;\n  t['Imacroncyrillic'] = 0x04E2;\n  t['Imonospace'] = 0xFF29;\n  t['Iniarmenian'] = 0x053B;\n  t['Iocyrillic'] = 0x0401;\n  t['Iogonek'] = 0x012E;\n  t['Iota'] = 0x0399;\n  t['Iotaafrican'] = 0x0196;\n  t['Iotadieresis'] = 0x03AA;\n  t['Iotatonos'] = 0x038A;\n  t['Ismall'] = 0xF769;\n  t['Istroke'] = 0x0197;\n  t['Itilde'] = 0x0128;\n  t['Itildebelow'] = 0x1E2C;\n  t['Izhitsacyrillic'] = 0x0474;\n  t['Izhitsadblgravecyrillic'] = 0x0476;\n  t['J'] = 0x004A;\n  t['Jaarmenian'] = 0x0541;\n  t['Jcircle'] = 0x24BF;\n  t['Jcircumflex'] = 0x0134;\n  t['Jecyrillic'] = 0x0408;\n  t['Jheharmenian'] = 0x054B;\n  t['Jmonospace'] = 0xFF2A;\n  t['Jsmall'] = 0xF76A;\n  t['K'] = 0x004B;\n  t['KBsquare'] = 0x3385;\n  t['KKsquare'] = 0x33CD;\n  t['Kabashkircyrillic'] = 0x04A0;\n  t['Kacute'] = 0x1E30;\n  t['Kacyrillic'] = 0x041A;\n  t['Kadescendercyrillic'] = 0x049A;\n  t['Kahookcyrillic'] = 0x04C3;\n  t['Kappa'] = 0x039A;\n  t['Kastrokecyrillic'] = 0x049E;\n  t['Kaverticalstrokecyrillic'] = 0x049C;\n  t['Kcaron'] = 0x01E8;\n  t['Kcedilla'] = 0x0136;\n  t['Kcircle'] = 0x24C0;\n  t['Kcommaaccent'] = 0x0136;\n  t['Kdotbelow'] = 0x1E32;\n  t['Keharmenian'] = 0x0554;\n  t['Kenarmenian'] = 0x053F;\n  t['Khacyrillic'] = 0x0425;\n  t['Kheicoptic'] = 0x03E6;\n  t['Khook'] = 0x0198;\n  t['Kjecyrillic'] = 0x040C;\n  t['Klinebelow'] = 0x1E34;\n  t['Kmonospace'] = 0xFF2B;\n  t['Koppacyrillic'] = 0x0480;\n  t['Koppagreek'] = 0x03DE;\n  t['Ksicyrillic'] = 0x046E;\n  t['Ksmall'] = 0xF76B;\n  t['L'] = 0x004C;\n  t['LJ'] = 0x01C7;\n  t['LL'] = 0xF6BF;\n  t['Lacute'] = 0x0139;\n  t['Lambda'] = 0x039B;\n  t['Lcaron'] = 0x013D;\n  t['Lcedilla'] = 0x013B;\n  t['Lcircle'] = 0x24C1;\n  t['Lcircumflexbelow'] = 0x1E3C;\n  t['Lcommaaccent'] = 0x013B;\n  t['Ldot'] = 0x013F;\n  t['Ldotaccent'] = 0x013F;\n  t['Ldotbelow'] = 0x1E36;\n  t['Ldotbelowmacron'] = 0x1E38;\n  t['Liwnarmenian'] = 0x053C;\n  t['Lj'] = 0x01C8;\n  t['Ljecyrillic'] = 0x0409;\n  t['Llinebelow'] = 0x1E3A;\n  t['Lmonospace'] = 0xFF2C;\n  t['Lslash'] = 0x0141;\n  t['Lslashsmall'] = 0xF6F9;\n  t['Lsmall'] = 0xF76C;\n  t['M'] = 0x004D;\n  t['MBsquare'] = 0x3386;\n  t['Macron'] = 0xF6D0;\n  t['Macronsmall'] = 0xF7AF;\n  t['Macute'] = 0x1E3E;\n  t['Mcircle'] = 0x24C2;\n  t['Mdotaccent'] = 0x1E40;\n  t['Mdotbelow'] = 0x1E42;\n  t['Menarmenian'] = 0x0544;\n  t['Mmonospace'] = 0xFF2D;\n  t['Msmall'] = 0xF76D;\n  t['Mturned'] = 0x019C;\n  t['Mu'] = 0x039C;\n  t['N'] = 0x004E;\n  t['NJ'] = 0x01CA;\n  t['Nacute'] = 0x0143;\n  t['Ncaron'] = 0x0147;\n  t['Ncedilla'] = 0x0145;\n  t['Ncircle'] = 0x24C3;\n  t['Ncircumflexbelow'] = 0x1E4A;\n  t['Ncommaaccent'] = 0x0145;\n  t['Ndotaccent'] = 0x1E44;\n  t['Ndotbelow'] = 0x1E46;\n  t['Nhookleft'] = 0x019D;\n  t['Nineroman'] = 0x2168;\n  t['Nj'] = 0x01CB;\n  t['Njecyrillic'] = 0x040A;\n  t['Nlinebelow'] = 0x1E48;\n  t['Nmonospace'] = 0xFF2E;\n  t['Nowarmenian'] = 0x0546;\n  t['Nsmall'] = 0xF76E;\n  t['Ntilde'] = 0x00D1;\n  t['Ntildesmall'] = 0xF7F1;\n  t['Nu'] = 0x039D;\n  t['O'] = 0x004F;\n  t['OE'] = 0x0152;\n  t['OEsmall'] = 0xF6FA;\n  t['Oacute'] = 0x00D3;\n  t['Oacutesmall'] = 0xF7F3;\n  t['Obarredcyrillic'] = 0x04E8;\n  t['Obarreddieresiscyrillic'] = 0x04EA;\n  t['Obreve'] = 0x014E;\n  t['Ocaron'] = 0x01D1;\n  t['Ocenteredtilde'] = 0x019F;\n  t['Ocircle'] = 0x24C4;\n  t['Ocircumflex'] = 0x00D4;\n  t['Ocircumflexacute'] = 0x1ED0;\n  t['Ocircumflexdotbelow'] = 0x1ED8;\n  t['Ocircumflexgrave'] = 0x1ED2;\n  t['Ocircumflexhookabove'] = 0x1ED4;\n  t['Ocircumflexsmall'] = 0xF7F4;\n  t['Ocircumflextilde'] = 0x1ED6;\n  t['Ocyrillic'] = 0x041E;\n  t['Odblacute'] = 0x0150;\n  t['Odblgrave'] = 0x020C;\n  t['Odieresis'] = 0x00D6;\n  t['Odieresiscyrillic'] = 0x04E6;\n  t['Odieresissmall'] = 0xF7F6;\n  t['Odotbelow'] = 0x1ECC;\n  t['Ogoneksmall'] = 0xF6FB;\n  t['Ograve'] = 0x00D2;\n  t['Ogravesmall'] = 0xF7F2;\n  t['Oharmenian'] = 0x0555;\n  t['Ohm'] = 0x2126;\n  t['Ohookabove'] = 0x1ECE;\n  t['Ohorn'] = 0x01A0;\n  t['Ohornacute'] = 0x1EDA;\n  t['Ohorndotbelow'] = 0x1EE2;\n  t['Ohorngrave'] = 0x1EDC;\n  t['Ohornhookabove'] = 0x1EDE;\n  t['Ohorntilde'] = 0x1EE0;\n  t['Ohungarumlaut'] = 0x0150;\n  t['Oi'] = 0x01A2;\n  t['Oinvertedbreve'] = 0x020E;\n  t['Omacron'] = 0x014C;\n  t['Omacronacute'] = 0x1E52;\n  t['Omacrongrave'] = 0x1E50;\n  t['Omega'] = 0x2126;\n  t['Omegacyrillic'] = 0x0460;\n  t['Omegagreek'] = 0x03A9;\n  t['Omegaroundcyrillic'] = 0x047A;\n  t['Omegatitlocyrillic'] = 0x047C;\n  t['Omegatonos'] = 0x038F;\n  t['Omicron'] = 0x039F;\n  t['Omicrontonos'] = 0x038C;\n  t['Omonospace'] = 0xFF2F;\n  t['Oneroman'] = 0x2160;\n  t['Oogonek'] = 0x01EA;\n  t['Oogonekmacron'] = 0x01EC;\n  t['Oopen'] = 0x0186;\n  t['Oslash'] = 0x00D8;\n  t['Oslashacute'] = 0x01FE;\n  t['Oslashsmall'] = 0xF7F8;\n  t['Osmall'] = 0xF76F;\n  t['Ostrokeacute'] = 0x01FE;\n  t['Otcyrillic'] = 0x047E;\n  t['Otilde'] = 0x00D5;\n  t['Otildeacute'] = 0x1E4C;\n  t['Otildedieresis'] = 0x1E4E;\n  t['Otildesmall'] = 0xF7F5;\n  t['P'] = 0x0050;\n  t['Pacute'] = 0x1E54;\n  t['Pcircle'] = 0x24C5;\n  t['Pdotaccent'] = 0x1E56;\n  t['Pecyrillic'] = 0x041F;\n  t['Peharmenian'] = 0x054A;\n  t['Pemiddlehookcyrillic'] = 0x04A6;\n  t['Phi'] = 0x03A6;\n  t['Phook'] = 0x01A4;\n  t['Pi'] = 0x03A0;\n  t['Piwrarmenian'] = 0x0553;\n  t['Pmonospace'] = 0xFF30;\n  t['Psi'] = 0x03A8;\n  t['Psicyrillic'] = 0x0470;\n  t['Psmall'] = 0xF770;\n  t['Q'] = 0x0051;\n  t['Qcircle'] = 0x24C6;\n  t['Qmonospace'] = 0xFF31;\n  t['Qsmall'] = 0xF771;\n  t['R'] = 0x0052;\n  t['Raarmenian'] = 0x054C;\n  t['Racute'] = 0x0154;\n  t['Rcaron'] = 0x0158;\n  t['Rcedilla'] = 0x0156;\n  t['Rcircle'] = 0x24C7;\n  t['Rcommaaccent'] = 0x0156;\n  t['Rdblgrave'] = 0x0210;\n  t['Rdotaccent'] = 0x1E58;\n  t['Rdotbelow'] = 0x1E5A;\n  t['Rdotbelowmacron'] = 0x1E5C;\n  t['Reharmenian'] = 0x0550;\n  t['Rfraktur'] = 0x211C;\n  t['Rho'] = 0x03A1;\n  t['Ringsmall'] = 0xF6FC;\n  t['Rinvertedbreve'] = 0x0212;\n  t['Rlinebelow'] = 0x1E5E;\n  t['Rmonospace'] = 0xFF32;\n  t['Rsmall'] = 0xF772;\n  t['Rsmallinverted'] = 0x0281;\n  t['Rsmallinvertedsuperior'] = 0x02B6;\n  t['S'] = 0x0053;\n  t['SF010000'] = 0x250C;\n  t['SF020000'] = 0x2514;\n  t['SF030000'] = 0x2510;\n  t['SF040000'] = 0x2518;\n  t['SF050000'] = 0x253C;\n  t['SF060000'] = 0x252C;\n  t['SF070000'] = 0x2534;\n  t['SF080000'] = 0x251C;\n  t['SF090000'] = 0x2524;\n  t['SF100000'] = 0x2500;\n  t['SF110000'] = 0x2502;\n  t['SF190000'] = 0x2561;\n  t['SF200000'] = 0x2562;\n  t['SF210000'] = 0x2556;\n  t['SF220000'] = 0x2555;\n  t['SF230000'] = 0x2563;\n  t['SF240000'] = 0x2551;\n  t['SF250000'] = 0x2557;\n  t['SF260000'] = 0x255D;\n  t['SF270000'] = 0x255C;\n  t['SF280000'] = 0x255B;\n  t['SF360000'] = 0x255E;\n  t['SF370000'] = 0x255F;\n  t['SF380000'] = 0x255A;\n  t['SF390000'] = 0x2554;\n  t['SF400000'] = 0x2569;\n  t['SF410000'] = 0x2566;\n  t['SF420000'] = 0x2560;\n  t['SF430000'] = 0x2550;\n  t['SF440000'] = 0x256C;\n  t['SF450000'] = 0x2567;\n  t['SF460000'] = 0x2568;\n  t['SF470000'] = 0x2564;\n  t['SF480000'] = 0x2565;\n  t['SF490000'] = 0x2559;\n  t['SF500000'] = 0x2558;\n  t['SF510000'] = 0x2552;\n  t['SF520000'] = 0x2553;\n  t['SF530000'] = 0x256B;\n  t['SF540000'] = 0x256A;\n  t['Sacute'] = 0x015A;\n  t['Sacutedotaccent'] = 0x1E64;\n  t['Sampigreek'] = 0x03E0;\n  t['Scaron'] = 0x0160;\n  t['Scarondotaccent'] = 0x1E66;\n  t['Scaronsmall'] = 0xF6FD;\n  t['Scedilla'] = 0x015E;\n  t['Schwa'] = 0x018F;\n  t['Schwacyrillic'] = 0x04D8;\n  t['Schwadieresiscyrillic'] = 0x04DA;\n  t['Scircle'] = 0x24C8;\n  t['Scircumflex'] = 0x015C;\n  t['Scommaaccent'] = 0x0218;\n  t['Sdotaccent'] = 0x1E60;\n  t['Sdotbelow'] = 0x1E62;\n  t['Sdotbelowdotaccent'] = 0x1E68;\n  t['Seharmenian'] = 0x054D;\n  t['Sevenroman'] = 0x2166;\n  t['Shaarmenian'] = 0x0547;\n  t['Shacyrillic'] = 0x0428;\n  t['Shchacyrillic'] = 0x0429;\n  t['Sheicoptic'] = 0x03E2;\n  t['Shhacyrillic'] = 0x04BA;\n  t['Shimacoptic'] = 0x03EC;\n  t['Sigma'] = 0x03A3;\n  t['Sixroman'] = 0x2165;\n  t['Smonospace'] = 0xFF33;\n  t['Softsigncyrillic'] = 0x042C;\n  t['Ssmall'] = 0xF773;\n  t['Stigmagreek'] = 0x03DA;\n  t['T'] = 0x0054;\n  t['Tau'] = 0x03A4;\n  t['Tbar'] = 0x0166;\n  t['Tcaron'] = 0x0164;\n  t['Tcedilla'] = 0x0162;\n  t['Tcircle'] = 0x24C9;\n  t['Tcircumflexbelow'] = 0x1E70;\n  t['Tcommaaccent'] = 0x0162;\n  t['Tdotaccent'] = 0x1E6A;\n  t['Tdotbelow'] = 0x1E6C;\n  t['Tecyrillic'] = 0x0422;\n  t['Tedescendercyrillic'] = 0x04AC;\n  t['Tenroman'] = 0x2169;\n  t['Tetsecyrillic'] = 0x04B4;\n  t['Theta'] = 0x0398;\n  t['Thook'] = 0x01AC;\n  t['Thorn'] = 0x00DE;\n  t['Thornsmall'] = 0xF7FE;\n  t['Threeroman'] = 0x2162;\n  t['Tildesmall'] = 0xF6FE;\n  t['Tiwnarmenian'] = 0x054F;\n  t['Tlinebelow'] = 0x1E6E;\n  t['Tmonospace'] = 0xFF34;\n  t['Toarmenian'] = 0x0539;\n  t['Tonefive'] = 0x01BC;\n  t['Tonesix'] = 0x0184;\n  t['Tonetwo'] = 0x01A7;\n  t['Tretroflexhook'] = 0x01AE;\n  t['Tsecyrillic'] = 0x0426;\n  t['Tshecyrillic'] = 0x040B;\n  t['Tsmall'] = 0xF774;\n  t['Twelveroman'] = 0x216B;\n  t['Tworoman'] = 0x2161;\n  t['U'] = 0x0055;\n  t['Uacute'] = 0x00DA;\n  t['Uacutesmall'] = 0xF7FA;\n  t['Ubreve'] = 0x016C;\n  t['Ucaron'] = 0x01D3;\n  t['Ucircle'] = 0x24CA;\n  t['Ucircumflex'] = 0x00DB;\n  t['Ucircumflexbelow'] = 0x1E76;\n  t['Ucircumflexsmall'] = 0xF7FB;\n  t['Ucyrillic'] = 0x0423;\n  t['Udblacute'] = 0x0170;\n  t['Udblgrave'] = 0x0214;\n  t['Udieresis'] = 0x00DC;\n  t['Udieresisacute'] = 0x01D7;\n  t['Udieresisbelow'] = 0x1E72;\n  t['Udieresiscaron'] = 0x01D9;\n  t['Udieresiscyrillic'] = 0x04F0;\n  t['Udieresisgrave'] = 0x01DB;\n  t['Udieresismacron'] = 0x01D5;\n  t['Udieresissmall'] = 0xF7FC;\n  t['Udotbelow'] = 0x1EE4;\n  t['Ugrave'] = 0x00D9;\n  t['Ugravesmall'] = 0xF7F9;\n  t['Uhookabove'] = 0x1EE6;\n  t['Uhorn'] = 0x01AF;\n  t['Uhornacute'] = 0x1EE8;\n  t['Uhorndotbelow'] = 0x1EF0;\n  t['Uhorngrave'] = 0x1EEA;\n  t['Uhornhookabove'] = 0x1EEC;\n  t['Uhorntilde'] = 0x1EEE;\n  t['Uhungarumlaut'] = 0x0170;\n  t['Uhungarumlautcyrillic'] = 0x04F2;\n  t['Uinvertedbreve'] = 0x0216;\n  t['Ukcyrillic'] = 0x0478;\n  t['Umacron'] = 0x016A;\n  t['Umacroncyrillic'] = 0x04EE;\n  t['Umacrondieresis'] = 0x1E7A;\n  t['Umonospace'] = 0xFF35;\n  t['Uogonek'] = 0x0172;\n  t['Upsilon'] = 0x03A5;\n  t['Upsilon1'] = 0x03D2;\n  t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n  t['Upsilonafrican'] = 0x01B1;\n  t['Upsilondieresis'] = 0x03AB;\n  t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n  t['Upsilonhooksymbol'] = 0x03D2;\n  t['Upsilontonos'] = 0x038E;\n  t['Uring'] = 0x016E;\n  t['Ushortcyrillic'] = 0x040E;\n  t['Usmall'] = 0xF775;\n  t['Ustraightcyrillic'] = 0x04AE;\n  t['Ustraightstrokecyrillic'] = 0x04B0;\n  t['Utilde'] = 0x0168;\n  t['Utildeacute'] = 0x1E78;\n  t['Utildebelow'] = 0x1E74;\n  t['V'] = 0x0056;\n  t['Vcircle'] = 0x24CB;\n  t['Vdotbelow'] = 0x1E7E;\n  t['Vecyrillic'] = 0x0412;\n  t['Vewarmenian'] = 0x054E;\n  t['Vhook'] = 0x01B2;\n  t['Vmonospace'] = 0xFF36;\n  t['Voarmenian'] = 0x0548;\n  t['Vsmall'] = 0xF776;\n  t['Vtilde'] = 0x1E7C;\n  t['W'] = 0x0057;\n  t['Wacute'] = 0x1E82;\n  t['Wcircle'] = 0x24CC;\n  t['Wcircumflex'] = 0x0174;\n  t['Wdieresis'] = 0x1E84;\n  t['Wdotaccent'] = 0x1E86;\n  t['Wdotbelow'] = 0x1E88;\n  t['Wgrave'] = 0x1E80;\n  t['Wmonospace'] = 0xFF37;\n  t['Wsmall'] = 0xF777;\n  t['X'] = 0x0058;\n  t['Xcircle'] = 0x24CD;\n  t['Xdieresis'] = 0x1E8C;\n  t['Xdotaccent'] = 0x1E8A;\n  t['Xeharmenian'] = 0x053D;\n  t['Xi'] = 0x039E;\n  t['Xmonospace'] = 0xFF38;\n  t['Xsmall'] = 0xF778;\n  t['Y'] = 0x0059;\n  t['Yacute'] = 0x00DD;\n  t['Yacutesmall'] = 0xF7FD;\n  t['Yatcyrillic'] = 0x0462;\n  t['Ycircle'] = 0x24CE;\n  t['Ycircumflex'] = 0x0176;\n  t['Ydieresis'] = 0x0178;\n  t['Ydieresissmall'] = 0xF7FF;\n  t['Ydotaccent'] = 0x1E8E;\n  t['Ydotbelow'] = 0x1EF4;\n  t['Yericyrillic'] = 0x042B;\n  t['Yerudieresiscyrillic'] = 0x04F8;\n  t['Ygrave'] = 0x1EF2;\n  t['Yhook'] = 0x01B3;\n  t['Yhookabove'] = 0x1EF6;\n  t['Yiarmenian'] = 0x0545;\n  t['Yicyrillic'] = 0x0407;\n  t['Yiwnarmenian'] = 0x0552;\n  t['Ymonospace'] = 0xFF39;\n  t['Ysmall'] = 0xF779;\n  t['Ytilde'] = 0x1EF8;\n  t['Yusbigcyrillic'] = 0x046A;\n  t['Yusbigiotifiedcyrillic'] = 0x046C;\n  t['Yuslittlecyrillic'] = 0x0466;\n  t['Yuslittleiotifiedcyrillic'] = 0x0468;\n  t['Z'] = 0x005A;\n  t['Zaarmenian'] = 0x0536;\n  t['Zacute'] = 0x0179;\n  t['Zcaron'] = 0x017D;\n  t['Zcaronsmall'] = 0xF6FF;\n  t['Zcircle'] = 0x24CF;\n  t['Zcircumflex'] = 0x1E90;\n  t['Zdot'] = 0x017B;\n  t['Zdotaccent'] = 0x017B;\n  t['Zdotbelow'] = 0x1E92;\n  t['Zecyrillic'] = 0x0417;\n  t['Zedescendercyrillic'] = 0x0498;\n  t['Zedieresiscyrillic'] = 0x04DE;\n  t['Zeta'] = 0x0396;\n  t['Zhearmenian'] = 0x053A;\n  t['Zhebrevecyrillic'] = 0x04C1;\n  t['Zhecyrillic'] = 0x0416;\n  t['Zhedescendercyrillic'] = 0x0496;\n  t['Zhedieresiscyrillic'] = 0x04DC;\n  t['Zlinebelow'] = 0x1E94;\n  t['Zmonospace'] = 0xFF3A;\n  t['Zsmall'] = 0xF77A;\n  t['Zstroke'] = 0x01B5;\n  t['a'] = 0x0061;\n  t['aabengali'] = 0x0986;\n  t['aacute'] = 0x00E1;\n  t['aadeva'] = 0x0906;\n  t['aagujarati'] = 0x0A86;\n  t['aagurmukhi'] = 0x0A06;\n  t['aamatragurmukhi'] = 0x0A3E;\n  t['aarusquare'] = 0x3303;\n  t['aavowelsignbengali'] = 0x09BE;\n  t['aavowelsigndeva'] = 0x093E;\n  t['aavowelsigngujarati'] = 0x0ABE;\n  t['abbreviationmarkarmenian'] = 0x055F;\n  t['abbreviationsigndeva'] = 0x0970;\n  t['abengali'] = 0x0985;\n  t['abopomofo'] = 0x311A;\n  t['abreve'] = 0x0103;\n  t['abreveacute'] = 0x1EAF;\n  t['abrevecyrillic'] = 0x04D1;\n  t['abrevedotbelow'] = 0x1EB7;\n  t['abrevegrave'] = 0x1EB1;\n  t['abrevehookabove'] = 0x1EB3;\n  t['abrevetilde'] = 0x1EB5;\n  t['acaron'] = 0x01CE;\n  t['acircle'] = 0x24D0;\n  t['acircumflex'] = 0x00E2;\n  t['acircumflexacute'] = 0x1EA5;\n  t['acircumflexdotbelow'] = 0x1EAD;\n  t['acircumflexgrave'] = 0x1EA7;\n  t['acircumflexhookabove'] = 0x1EA9;\n  t['acircumflextilde'] = 0x1EAB;\n  t['acute'] = 0x00B4;\n  t['acutebelowcmb'] = 0x0317;\n  t['acutecmb'] = 0x0301;\n  t['acutecomb'] = 0x0301;\n  t['acutedeva'] = 0x0954;\n  t['acutelowmod'] = 0x02CF;\n  t['acutetonecmb'] = 0x0341;\n  t['acyrillic'] = 0x0430;\n  t['adblgrave'] = 0x0201;\n  t['addakgurmukhi'] = 0x0A71;\n  t['adeva'] = 0x0905;\n  t['adieresis'] = 0x00E4;\n  t['adieresiscyrillic'] = 0x04D3;\n  t['adieresismacron'] = 0x01DF;\n  t['adotbelow'] = 0x1EA1;\n  t['adotmacron'] = 0x01E1;\n  t['ae'] = 0x00E6;\n  t['aeacute'] = 0x01FD;\n  t['aekorean'] = 0x3150;\n  t['aemacron'] = 0x01E3;\n  t['afii00208'] = 0x2015;\n  t['afii08941'] = 0x20A4;\n  t['afii10017'] = 0x0410;\n  t['afii10018'] = 0x0411;\n  t['afii10019'] = 0x0412;\n  t['afii10020'] = 0x0413;\n  t['afii10021'] = 0x0414;\n  t['afii10022'] = 0x0415;\n  t['afii10023'] = 0x0401;\n  t['afii10024'] = 0x0416;\n  t['afii10025'] = 0x0417;\n  t['afii10026'] = 0x0418;\n  t['afii10027'] = 0x0419;\n  t['afii10028'] = 0x041A;\n  t['afii10029'] = 0x041B;\n  t['afii10030'] = 0x041C;\n  t['afii10031'] = 0x041D;\n  t['afii10032'] = 0x041E;\n  t['afii10033'] = 0x041F;\n  t['afii10034'] = 0x0420;\n  t['afii10035'] = 0x0421;\n  t['afii10036'] = 0x0422;\n  t['afii10037'] = 0x0423;\n  t['afii10038'] = 0x0424;\n  t['afii10039'] = 0x0425;\n  t['afii10040'] = 0x0426;\n  t['afii10041'] = 0x0427;\n  t['afii10042'] = 0x0428;\n  t['afii10043'] = 0x0429;\n  t['afii10044'] = 0x042A;\n  t['afii10045'] = 0x042B;\n  t['afii10046'] = 0x042C;\n  t['afii10047'] = 0x042D;\n  t['afii10048'] = 0x042E;\n  t['afii10049'] = 0x042F;\n  t['afii10050'] = 0x0490;\n  t['afii10051'] = 0x0402;\n  t['afii10052'] = 0x0403;\n  t['afii10053'] = 0x0404;\n  t['afii10054'] = 0x0405;\n  t['afii10055'] = 0x0406;\n  t['afii10056'] = 0x0407;\n  t['afii10057'] = 0x0408;\n  t['afii10058'] = 0x0409;\n  t['afii10059'] = 0x040A;\n  t['afii10060'] = 0x040B;\n  t['afii10061'] = 0x040C;\n  t['afii10062'] = 0x040E;\n  t['afii10063'] = 0xF6C4;\n  t['afii10064'] = 0xF6C5;\n  t['afii10065'] = 0x0430;\n  t['afii10066'] = 0x0431;\n  t['afii10067'] = 0x0432;\n  t['afii10068'] = 0x0433;\n  t['afii10069'] = 0x0434;\n  t['afii10070'] = 0x0435;\n  t['afii10071'] = 0x0451;\n  t['afii10072'] = 0x0436;\n  t['afii10073'] = 0x0437;\n  t['afii10074'] = 0x0438;\n  t['afii10075'] = 0x0439;\n  t['afii10076'] = 0x043A;\n  t['afii10077'] = 0x043B;\n  t['afii10078'] = 0x043C;\n  t['afii10079'] = 0x043D;\n  t['afii10080'] = 0x043E;\n  t['afii10081'] = 0x043F;\n  t['afii10082'] = 0x0440;\n  t['afii10083'] = 0x0441;\n  t['afii10084'] = 0x0442;\n  t['afii10085'] = 0x0443;\n  t['afii10086'] = 0x0444;\n  t['afii10087'] = 0x0445;\n  t['afii10088'] = 0x0446;\n  t['afii10089'] = 0x0447;\n  t['afii10090'] = 0x0448;\n  t['afii10091'] = 0x0449;\n  t['afii10092'] = 0x044A;\n  t['afii10093'] = 0x044B;\n  t['afii10094'] = 0x044C;\n  t['afii10095'] = 0x044D;\n  t['afii10096'] = 0x044E;\n  t['afii10097'] = 0x044F;\n  t['afii10098'] = 0x0491;\n  t['afii10099'] = 0x0452;\n  t['afii10100'] = 0x0453;\n  t['afii10101'] = 0x0454;\n  t['afii10102'] = 0x0455;\n  t['afii10103'] = 0x0456;\n  t['afii10104'] = 0x0457;\n  t['afii10105'] = 0x0458;\n  t['afii10106'] = 0x0459;\n  t['afii10107'] = 0x045A;\n  t['afii10108'] = 0x045B;\n  t['afii10109'] = 0x045C;\n  t['afii10110'] = 0x045E;\n  t['afii10145'] = 0x040F;\n  t['afii10146'] = 0x0462;\n  t['afii10147'] = 0x0472;\n  t['afii10148'] = 0x0474;\n  t['afii10192'] = 0xF6C6;\n  t['afii10193'] = 0x045F;\n  t['afii10194'] = 0x0463;\n  t['afii10195'] = 0x0473;\n  t['afii10196'] = 0x0475;\n  t['afii10831'] = 0xF6C7;\n  t['afii10832'] = 0xF6C8;\n  t['afii10846'] = 0x04D9;\n  t['afii299'] = 0x200E;\n  t['afii300'] = 0x200F;\n  t['afii301'] = 0x200D;\n  t['afii57381'] = 0x066A;\n  t['afii57388'] = 0x060C;\n  t['afii57392'] = 0x0660;\n  t['afii57393'] = 0x0661;\n  t['afii57394'] = 0x0662;\n  t['afii57395'] = 0x0663;\n  t['afii57396'] = 0x0664;\n  t['afii57397'] = 0x0665;\n  t['afii57398'] = 0x0666;\n  t['afii57399'] = 0x0667;\n  t['afii57400'] = 0x0668;\n  t['afii57401'] = 0x0669;\n  t['afii57403'] = 0x061B;\n  t['afii57407'] = 0x061F;\n  t['afii57409'] = 0x0621;\n  t['afii57410'] = 0x0622;\n  t['afii57411'] = 0x0623;\n  t['afii57412'] = 0x0624;\n  t['afii57413'] = 0x0625;\n  t['afii57414'] = 0x0626;\n  t['afii57415'] = 0x0627;\n  t['afii57416'] = 0x0628;\n  t['afii57417'] = 0x0629;\n  t['afii57418'] = 0x062A;\n  t['afii57419'] = 0x062B;\n  t['afii57420'] = 0x062C;\n  t['afii57421'] = 0x062D;\n  t['afii57422'] = 0x062E;\n  t['afii57423'] = 0x062F;\n  t['afii57424'] = 0x0630;\n  t['afii57425'] = 0x0631;\n  t['afii57426'] = 0x0632;\n  t['afii57427'] = 0x0633;\n  t['afii57428'] = 0x0634;\n  t['afii57429'] = 0x0635;\n  t['afii57430'] = 0x0636;\n  t['afii57431'] = 0x0637;\n  t['afii57432'] = 0x0638;\n  t['afii57433'] = 0x0639;\n  t['afii57434'] = 0x063A;\n  t['afii57440'] = 0x0640;\n  t['afii57441'] = 0x0641;\n  t['afii57442'] = 0x0642;\n  t['afii57443'] = 0x0643;\n  t['afii57444'] = 0x0644;\n  t['afii57445'] = 0x0645;\n  t['afii57446'] = 0x0646;\n  t['afii57448'] = 0x0648;\n  t['afii57449'] = 0x0649;\n  t['afii57450'] = 0x064A;\n  t['afii57451'] = 0x064B;\n  t['afii57452'] = 0x064C;\n  t['afii57453'] = 0x064D;\n  t['afii57454'] = 0x064E;\n  t['afii57455'] = 0x064F;\n  t['afii57456'] = 0x0650;\n  t['afii57457'] = 0x0651;\n  t['afii57458'] = 0x0652;\n  t['afii57470'] = 0x0647;\n  t['afii57505'] = 0x06A4;\n  t['afii57506'] = 0x067E;\n  t['afii57507'] = 0x0686;\n  t['afii57508'] = 0x0698;\n  t['afii57509'] = 0x06AF;\n  t['afii57511'] = 0x0679;\n  t['afii57512'] = 0x0688;\n  t['afii57513'] = 0x0691;\n  t['afii57514'] = 0x06BA;\n  t['afii57519'] = 0x06D2;\n  t['afii57534'] = 0x06D5;\n  t['afii57636'] = 0x20AA;\n  t['afii57645'] = 0x05BE;\n  t['afii57658'] = 0x05C3;\n  t['afii57664'] = 0x05D0;\n  t['afii57665'] = 0x05D1;\n  t['afii57666'] = 0x05D2;\n  t['afii57667'] = 0x05D3;\n  t['afii57668'] = 0x05D4;\n  t['afii57669'] = 0x05D5;\n  t['afii57670'] = 0x05D6;\n  t['afii57671'] = 0x05D7;\n  t['afii57672'] = 0x05D8;\n  t['afii57673'] = 0x05D9;\n  t['afii57674'] = 0x05DA;\n  t['afii57675'] = 0x05DB;\n  t['afii57676'] = 0x05DC;\n  t['afii57677'] = 0x05DD;\n  t['afii57678'] = 0x05DE;\n  t['afii57679'] = 0x05DF;\n  t['afii57680'] = 0x05E0;\n  t['afii57681'] = 0x05E1;\n  t['afii57682'] = 0x05E2;\n  t['afii57683'] = 0x05E3;\n  t['afii57684'] = 0x05E4;\n  t['afii57685'] = 0x05E5;\n  t['afii57686'] = 0x05E6;\n  t['afii57687'] = 0x05E7;\n  t['afii57688'] = 0x05E8;\n  t['afii57689'] = 0x05E9;\n  t['afii57690'] = 0x05EA;\n  t['afii57694'] = 0xFB2A;\n  t['afii57695'] = 0xFB2B;\n  t['afii57700'] = 0xFB4B;\n  t['afii57705'] = 0xFB1F;\n  t['afii57716'] = 0x05F0;\n  t['afii57717'] = 0x05F1;\n  t['afii57718'] = 0x05F2;\n  t['afii57723'] = 0xFB35;\n  t['afii57793'] = 0x05B4;\n  t['afii57794'] = 0x05B5;\n  t['afii57795'] = 0x05B6;\n  t['afii57796'] = 0x05BB;\n  t['afii57797'] = 0x05B8;\n  t['afii57798'] = 0x05B7;\n  t['afii57799'] = 0x05B0;\n  t['afii57800'] = 0x05B2;\n  t['afii57801'] = 0x05B1;\n  t['afii57802'] = 0x05B3;\n  t['afii57803'] = 0x05C2;\n  t['afii57804'] = 0x05C1;\n  t['afii57806'] = 0x05B9;\n  t['afii57807'] = 0x05BC;\n  t['afii57839'] = 0x05BD;\n  t['afii57841'] = 0x05BF;\n  t['afii57842'] = 0x05C0;\n  t['afii57929'] = 0x02BC;\n  t['afii61248'] = 0x2105;\n  t['afii61289'] = 0x2113;\n  t['afii61352'] = 0x2116;\n  t['afii61573'] = 0x202C;\n  t['afii61574'] = 0x202D;\n  t['afii61575'] = 0x202E;\n  t['afii61664'] = 0x200C;\n  t['afii63167'] = 0x066D;\n  t['afii64937'] = 0x02BD;\n  t['agrave'] = 0x00E0;\n  t['agujarati'] = 0x0A85;\n  t['agurmukhi'] = 0x0A05;\n  t['ahiragana'] = 0x3042;\n  t['ahookabove'] = 0x1EA3;\n  t['aibengali'] = 0x0990;\n  t['aibopomofo'] = 0x311E;\n  t['aideva'] = 0x0910;\n  t['aiecyrillic'] = 0x04D5;\n  t['aigujarati'] = 0x0A90;\n  t['aigurmukhi'] = 0x0A10;\n  t['aimatragurmukhi'] = 0x0A48;\n  t['ainarabic'] = 0x0639;\n  t['ainfinalarabic'] = 0xFECA;\n  t['aininitialarabic'] = 0xFECB;\n  t['ainmedialarabic'] = 0xFECC;\n  t['ainvertedbreve'] = 0x0203;\n  t['aivowelsignbengali'] = 0x09C8;\n  t['aivowelsigndeva'] = 0x0948;\n  t['aivowelsigngujarati'] = 0x0AC8;\n  t['akatakana'] = 0x30A2;\n  t['akatakanahalfwidth'] = 0xFF71;\n  t['akorean'] = 0x314F;\n  t['alef'] = 0x05D0;\n  t['alefarabic'] = 0x0627;\n  t['alefdageshhebrew'] = 0xFB30;\n  t['aleffinalarabic'] = 0xFE8E;\n  t['alefhamzaabovearabic'] = 0x0623;\n  t['alefhamzaabovefinalarabic'] = 0xFE84;\n  t['alefhamzabelowarabic'] = 0x0625;\n  t['alefhamzabelowfinalarabic'] = 0xFE88;\n  t['alefhebrew'] = 0x05D0;\n  t['aleflamedhebrew'] = 0xFB4F;\n  t['alefmaddaabovearabic'] = 0x0622;\n  t['alefmaddaabovefinalarabic'] = 0xFE82;\n  t['alefmaksuraarabic'] = 0x0649;\n  t['alefmaksurafinalarabic'] = 0xFEF0;\n  t['alefmaksurainitialarabic'] = 0xFEF3;\n  t['alefmaksuramedialarabic'] = 0xFEF4;\n  t['alefpatahhebrew'] = 0xFB2E;\n  t['alefqamatshebrew'] = 0xFB2F;\n  t['aleph'] = 0x2135;\n  t['allequal'] = 0x224C;\n  t['alpha'] = 0x03B1;\n  t['alphatonos'] = 0x03AC;\n  t['amacron'] = 0x0101;\n  t['amonospace'] = 0xFF41;\n  t['ampersand'] = 0x0026;\n  t['ampersandmonospace'] = 0xFF06;\n  t['ampersandsmall'] = 0xF726;\n  t['amsquare'] = 0x33C2;\n  t['anbopomofo'] = 0x3122;\n  t['angbopomofo'] = 0x3124;\n  t['angbracketleft'] = 0x3008;\n  t['angbracketright'] = 0x3009;\n  t['angkhankhuthai'] = 0x0E5A;\n  t['angle'] = 0x2220;\n  t['anglebracketleft'] = 0x3008;\n  t['anglebracketleftvertical'] = 0xFE3F;\n  t['anglebracketright'] = 0x3009;\n  t['anglebracketrightvertical'] = 0xFE40;\n  t['angleleft'] = 0x2329;\n  t['angleright'] = 0x232A;\n  t['angstrom'] = 0x212B;\n  t['anoteleia'] = 0x0387;\n  t['anudattadeva'] = 0x0952;\n  t['anusvarabengali'] = 0x0982;\n  t['anusvaradeva'] = 0x0902;\n  t['anusvaragujarati'] = 0x0A82;\n  t['aogonek'] = 0x0105;\n  t['apaatosquare'] = 0x3300;\n  t['aparen'] = 0x249C;\n  t['apostrophearmenian'] = 0x055A;\n  t['apostrophemod'] = 0x02BC;\n  t['apple'] = 0xF8FF;\n  t['approaches'] = 0x2250;\n  t['approxequal'] = 0x2248;\n  t['approxequalorimage'] = 0x2252;\n  t['approximatelyequal'] = 0x2245;\n  t['araeaekorean'] = 0x318E;\n  t['araeakorean'] = 0x318D;\n  t['arc'] = 0x2312;\n  t['arighthalfring'] = 0x1E9A;\n  t['aring'] = 0x00E5;\n  t['aringacute'] = 0x01FB;\n  t['aringbelow'] = 0x1E01;\n  t['arrowboth'] = 0x2194;\n  t['arrowdashdown'] = 0x21E3;\n  t['arrowdashleft'] = 0x21E0;\n  t['arrowdashright'] = 0x21E2;\n  t['arrowdashup'] = 0x21E1;\n  t['arrowdblboth'] = 0x21D4;\n  t['arrowdbldown'] = 0x21D3;\n  t['arrowdblleft'] = 0x21D0;\n  t['arrowdblright'] = 0x21D2;\n  t['arrowdblup'] = 0x21D1;\n  t['arrowdown'] = 0x2193;\n  t['arrowdownleft'] = 0x2199;\n  t['arrowdownright'] = 0x2198;\n  t['arrowdownwhite'] = 0x21E9;\n  t['arrowheaddownmod'] = 0x02C5;\n  t['arrowheadleftmod'] = 0x02C2;\n  t['arrowheadrightmod'] = 0x02C3;\n  t['arrowheadupmod'] = 0x02C4;\n  t['arrowhorizex'] = 0xF8E7;\n  t['arrowleft'] = 0x2190;\n  t['arrowleftdbl'] = 0x21D0;\n  t['arrowleftdblstroke'] = 0x21CD;\n  t['arrowleftoverright'] = 0x21C6;\n  t['arrowleftwhite'] = 0x21E6;\n  t['arrowright'] = 0x2192;\n  t['arrowrightdblstroke'] = 0x21CF;\n  t['arrowrightheavy'] = 0x279E;\n  t['arrowrightoverleft'] = 0x21C4;\n  t['arrowrightwhite'] = 0x21E8;\n  t['arrowtableft'] = 0x21E4;\n  t['arrowtabright'] = 0x21E5;\n  t['arrowup'] = 0x2191;\n  t['arrowupdn'] = 0x2195;\n  t['arrowupdnbse'] = 0x21A8;\n  t['arrowupdownbase'] = 0x21A8;\n  t['arrowupleft'] = 0x2196;\n  t['arrowupleftofdown'] = 0x21C5;\n  t['arrowupright'] = 0x2197;\n  t['arrowupwhite'] = 0x21E7;\n  t['arrowvertex'] = 0xF8E6;\n  t['asciicircum'] = 0x005E;\n  t['asciicircummonospace'] = 0xFF3E;\n  t['asciitilde'] = 0x007E;\n  t['asciitildemonospace'] = 0xFF5E;\n  t['ascript'] = 0x0251;\n  t['ascriptturned'] = 0x0252;\n  t['asmallhiragana'] = 0x3041;\n  t['asmallkatakana'] = 0x30A1;\n  t['asmallkatakanahalfwidth'] = 0xFF67;\n  t['asterisk'] = 0x002A;\n  t['asteriskaltonearabic'] = 0x066D;\n  t['asteriskarabic'] = 0x066D;\n  t['asteriskmath'] = 0x2217;\n  t['asteriskmonospace'] = 0xFF0A;\n  t['asterisksmall'] = 0xFE61;\n  t['asterism'] = 0x2042;\n  t['asuperior'] = 0xF6E9;\n  t['asymptoticallyequal'] = 0x2243;\n  t['at'] = 0x0040;\n  t['atilde'] = 0x00E3;\n  t['atmonospace'] = 0xFF20;\n  t['atsmall'] = 0xFE6B;\n  t['aturned'] = 0x0250;\n  t['aubengali'] = 0x0994;\n  t['aubopomofo'] = 0x3120;\n  t['audeva'] = 0x0914;\n  t['augujarati'] = 0x0A94;\n  t['augurmukhi'] = 0x0A14;\n  t['aulengthmarkbengali'] = 0x09D7;\n  t['aumatragurmukhi'] = 0x0A4C;\n  t['auvowelsignbengali'] = 0x09CC;\n  t['auvowelsigndeva'] = 0x094C;\n  t['auvowelsigngujarati'] = 0x0ACC;\n  t['avagrahadeva'] = 0x093D;\n  t['aybarmenian'] = 0x0561;\n  t['ayin'] = 0x05E2;\n  t['ayinaltonehebrew'] = 0xFB20;\n  t['ayinhebrew'] = 0x05E2;\n  t['b'] = 0x0062;\n  t['babengali'] = 0x09AC;\n  t['backslash'] = 0x005C;\n  t['backslashmonospace'] = 0xFF3C;\n  t['badeva'] = 0x092C;\n  t['bagujarati'] = 0x0AAC;\n  t['bagurmukhi'] = 0x0A2C;\n  t['bahiragana'] = 0x3070;\n  t['bahtthai'] = 0x0E3F;\n  t['bakatakana'] = 0x30D0;\n  t['bar'] = 0x007C;\n  t['barmonospace'] = 0xFF5C;\n  t['bbopomofo'] = 0x3105;\n  t['bcircle'] = 0x24D1;\n  t['bdotaccent'] = 0x1E03;\n  t['bdotbelow'] = 0x1E05;\n  t['beamedsixteenthnotes'] = 0x266C;\n  t['because'] = 0x2235;\n  t['becyrillic'] = 0x0431;\n  t['beharabic'] = 0x0628;\n  t['behfinalarabic'] = 0xFE90;\n  t['behinitialarabic'] = 0xFE91;\n  t['behiragana'] = 0x3079;\n  t['behmedialarabic'] = 0xFE92;\n  t['behmeeminitialarabic'] = 0xFC9F;\n  t['behmeemisolatedarabic'] = 0xFC08;\n  t['behnoonfinalarabic'] = 0xFC6D;\n  t['bekatakana'] = 0x30D9;\n  t['benarmenian'] = 0x0562;\n  t['bet'] = 0x05D1;\n  t['beta'] = 0x03B2;\n  t['betasymbolgreek'] = 0x03D0;\n  t['betdagesh'] = 0xFB31;\n  t['betdageshhebrew'] = 0xFB31;\n  t['bethebrew'] = 0x05D1;\n  t['betrafehebrew'] = 0xFB4C;\n  t['bhabengali'] = 0x09AD;\n  t['bhadeva'] = 0x092D;\n  t['bhagujarati'] = 0x0AAD;\n  t['bhagurmukhi'] = 0x0A2D;\n  t['bhook'] = 0x0253;\n  t['bihiragana'] = 0x3073;\n  t['bikatakana'] = 0x30D3;\n  t['bilabialclick'] = 0x0298;\n  t['bindigurmukhi'] = 0x0A02;\n  t['birusquare'] = 0x3331;\n  t['blackcircle'] = 0x25CF;\n  t['blackdiamond'] = 0x25C6;\n  t['blackdownpointingtriangle'] = 0x25BC;\n  t['blackleftpointingpointer'] = 0x25C4;\n  t['blackleftpointingtriangle'] = 0x25C0;\n  t['blacklenticularbracketleft'] = 0x3010;\n  t['blacklenticularbracketleftvertical'] = 0xFE3B;\n  t['blacklenticularbracketright'] = 0x3011;\n  t['blacklenticularbracketrightvertical'] = 0xFE3C;\n  t['blacklowerlefttriangle'] = 0x25E3;\n  t['blacklowerrighttriangle'] = 0x25E2;\n  t['blackrectangle'] = 0x25AC;\n  t['blackrightpointingpointer'] = 0x25BA;\n  t['blackrightpointingtriangle'] = 0x25B6;\n  t['blacksmallsquare'] = 0x25AA;\n  t['blacksmilingface'] = 0x263B;\n  t['blacksquare'] = 0x25A0;\n  t['blackstar'] = 0x2605;\n  t['blackupperlefttriangle'] = 0x25E4;\n  t['blackupperrighttriangle'] = 0x25E5;\n  t['blackuppointingsmalltriangle'] = 0x25B4;\n  t['blackuppointingtriangle'] = 0x25B2;\n  t['blank'] = 0x2423;\n  t['blinebelow'] = 0x1E07;\n  t['block'] = 0x2588;\n  t['bmonospace'] = 0xFF42;\n  t['bobaimaithai'] = 0x0E1A;\n  t['bohiragana'] = 0x307C;\n  t['bokatakana'] = 0x30DC;\n  t['bparen'] = 0x249D;\n  t['bqsquare'] = 0x33C3;\n  t['braceex'] = 0xF8F4;\n  t['braceleft'] = 0x007B;\n  t['braceleftbt'] = 0xF8F3;\n  t['braceleftmid'] = 0xF8F2;\n  t['braceleftmonospace'] = 0xFF5B;\n  t['braceleftsmall'] = 0xFE5B;\n  t['bracelefttp'] = 0xF8F1;\n  t['braceleftvertical'] = 0xFE37;\n  t['braceright'] = 0x007D;\n  t['bracerightbt'] = 0xF8FE;\n  t['bracerightmid'] = 0xF8FD;\n  t['bracerightmonospace'] = 0xFF5D;\n  t['bracerightsmall'] = 0xFE5C;\n  t['bracerighttp'] = 0xF8FC;\n  t['bracerightvertical'] = 0xFE38;\n  t['bracketleft'] = 0x005B;\n  t['bracketleftbt'] = 0xF8F0;\n  t['bracketleftex'] = 0xF8EF;\n  t['bracketleftmonospace'] = 0xFF3B;\n  t['bracketlefttp'] = 0xF8EE;\n  t['bracketright'] = 0x005D;\n  t['bracketrightbt'] = 0xF8FB;\n  t['bracketrightex'] = 0xF8FA;\n  t['bracketrightmonospace'] = 0xFF3D;\n  t['bracketrighttp'] = 0xF8F9;\n  t['breve'] = 0x02D8;\n  t['brevebelowcmb'] = 0x032E;\n  t['brevecmb'] = 0x0306;\n  t['breveinvertedbelowcmb'] = 0x032F;\n  t['breveinvertedcmb'] = 0x0311;\n  t['breveinverteddoublecmb'] = 0x0361;\n  t['bridgebelowcmb'] = 0x032A;\n  t['bridgeinvertedbelowcmb'] = 0x033A;\n  t['brokenbar'] = 0x00A6;\n  t['bstroke'] = 0x0180;\n  t['bsuperior'] = 0xF6EA;\n  t['btopbar'] = 0x0183;\n  t['buhiragana'] = 0x3076;\n  t['bukatakana'] = 0x30D6;\n  t['bullet'] = 0x2022;\n  t['bulletinverse'] = 0x25D8;\n  t['bulletoperator'] = 0x2219;\n  t['bullseye'] = 0x25CE;\n  t['c'] = 0x0063;\n  t['caarmenian'] = 0x056E;\n  t['cabengali'] = 0x099A;\n  t['cacute'] = 0x0107;\n  t['cadeva'] = 0x091A;\n  t['cagujarati'] = 0x0A9A;\n  t['cagurmukhi'] = 0x0A1A;\n  t['calsquare'] = 0x3388;\n  t['candrabindubengali'] = 0x0981;\n  t['candrabinducmb'] = 0x0310;\n  t['candrabindudeva'] = 0x0901;\n  t['candrabindugujarati'] = 0x0A81;\n  t['capslock'] = 0x21EA;\n  t['careof'] = 0x2105;\n  t['caron'] = 0x02C7;\n  t['caronbelowcmb'] = 0x032C;\n  t['caroncmb'] = 0x030C;\n  t['carriagereturn'] = 0x21B5;\n  t['cbopomofo'] = 0x3118;\n  t['ccaron'] = 0x010D;\n  t['ccedilla'] = 0x00E7;\n  t['ccedillaacute'] = 0x1E09;\n  t['ccircle'] = 0x24D2;\n  t['ccircumflex'] = 0x0109;\n  t['ccurl'] = 0x0255;\n  t['cdot'] = 0x010B;\n  t['cdotaccent'] = 0x010B;\n  t['cdsquare'] = 0x33C5;\n  t['cedilla'] = 0x00B8;\n  t['cedillacmb'] = 0x0327;\n  t['cent'] = 0x00A2;\n  t['centigrade'] = 0x2103;\n  t['centinferior'] = 0xF6DF;\n  t['centmonospace'] = 0xFFE0;\n  t['centoldstyle'] = 0xF7A2;\n  t['centsuperior'] = 0xF6E0;\n  t['chaarmenian'] = 0x0579;\n  t['chabengali'] = 0x099B;\n  t['chadeva'] = 0x091B;\n  t['chagujarati'] = 0x0A9B;\n  t['chagurmukhi'] = 0x0A1B;\n  t['chbopomofo'] = 0x3114;\n  t['cheabkhasiancyrillic'] = 0x04BD;\n  t['checkmark'] = 0x2713;\n  t['checyrillic'] = 0x0447;\n  t['chedescenderabkhasiancyrillic'] = 0x04BF;\n  t['chedescendercyrillic'] = 0x04B7;\n  t['chedieresiscyrillic'] = 0x04F5;\n  t['cheharmenian'] = 0x0573;\n  t['chekhakassiancyrillic'] = 0x04CC;\n  t['cheverticalstrokecyrillic'] = 0x04B9;\n  t['chi'] = 0x03C7;\n  t['chieuchacirclekorean'] = 0x3277;\n  t['chieuchaparenkorean'] = 0x3217;\n  t['chieuchcirclekorean'] = 0x3269;\n  t['chieuchkorean'] = 0x314A;\n  t['chieuchparenkorean'] = 0x3209;\n  t['chochangthai'] = 0x0E0A;\n  t['chochanthai'] = 0x0E08;\n  t['chochingthai'] = 0x0E09;\n  t['chochoethai'] = 0x0E0C;\n  t['chook'] = 0x0188;\n  t['cieucacirclekorean'] = 0x3276;\n  t['cieucaparenkorean'] = 0x3216;\n  t['cieuccirclekorean'] = 0x3268;\n  t['cieuckorean'] = 0x3148;\n  t['cieucparenkorean'] = 0x3208;\n  t['cieucuparenkorean'] = 0x321C;\n  t['circle'] = 0x25CB;\n  t['circlecopyrt'] = 0x00A9;\n  t['circlemultiply'] = 0x2297;\n  t['circleot'] = 0x2299;\n  t['circleplus'] = 0x2295;\n  t['circlepostalmark'] = 0x3036;\n  t['circlewithlefthalfblack'] = 0x25D0;\n  t['circlewithrighthalfblack'] = 0x25D1;\n  t['circumflex'] = 0x02C6;\n  t['circumflexbelowcmb'] = 0x032D;\n  t['circumflexcmb'] = 0x0302;\n  t['clear'] = 0x2327;\n  t['clickalveolar'] = 0x01C2;\n  t['clickdental'] = 0x01C0;\n  t['clicklateral'] = 0x01C1;\n  t['clickretroflex'] = 0x01C3;\n  t['club'] = 0x2663;\n  t['clubsuitblack'] = 0x2663;\n  t['clubsuitwhite'] = 0x2667;\n  t['cmcubedsquare'] = 0x33A4;\n  t['cmonospace'] = 0xFF43;\n  t['cmsquaredsquare'] = 0x33A0;\n  t['coarmenian'] = 0x0581;\n  t['colon'] = 0x003A;\n  t['colonmonetary'] = 0x20A1;\n  t['colonmonospace'] = 0xFF1A;\n  t['colonsign'] = 0x20A1;\n  t['colonsmall'] = 0xFE55;\n  t['colontriangularhalfmod'] = 0x02D1;\n  t['colontriangularmod'] = 0x02D0;\n  t['comma'] = 0x002C;\n  t['commaabovecmb'] = 0x0313;\n  t['commaaboverightcmb'] = 0x0315;\n  t['commaaccent'] = 0xF6C3;\n  t['commaarabic'] = 0x060C;\n  t['commaarmenian'] = 0x055D;\n  t['commainferior'] = 0xF6E1;\n  t['commamonospace'] = 0xFF0C;\n  t['commareversedabovecmb'] = 0x0314;\n  t['commareversedmod'] = 0x02BD;\n  t['commasmall'] = 0xFE50;\n  t['commasuperior'] = 0xF6E2;\n  t['commaturnedabovecmb'] = 0x0312;\n  t['commaturnedmod'] = 0x02BB;\n  t['compass'] = 0x263C;\n  t['congruent'] = 0x2245;\n  t['contourintegral'] = 0x222E;\n  t['control'] = 0x2303;\n  t['controlACK'] = 0x0006;\n  t['controlBEL'] = 0x0007;\n  t['controlBS'] = 0x0008;\n  t['controlCAN'] = 0x0018;\n  t['controlCR'] = 0x000D;\n  t['controlDC1'] = 0x0011;\n  t['controlDC2'] = 0x0012;\n  t['controlDC3'] = 0x0013;\n  t['controlDC4'] = 0x0014;\n  t['controlDEL'] = 0x007F;\n  t['controlDLE'] = 0x0010;\n  t['controlEM'] = 0x0019;\n  t['controlENQ'] = 0x0005;\n  t['controlEOT'] = 0x0004;\n  t['controlESC'] = 0x001B;\n  t['controlETB'] = 0x0017;\n  t['controlETX'] = 0x0003;\n  t['controlFF'] = 0x000C;\n  t['controlFS'] = 0x001C;\n  t['controlGS'] = 0x001D;\n  t['controlHT'] = 0x0009;\n  t['controlLF'] = 0x000A;\n  t['controlNAK'] = 0x0015;\n  t['controlNULL'] = 0x0000;\n  t['controlRS'] = 0x001E;\n  t['controlSI'] = 0x000F;\n  t['controlSO'] = 0x000E;\n  t['controlSOT'] = 0x0002;\n  t['controlSTX'] = 0x0001;\n  t['controlSUB'] = 0x001A;\n  t['controlSYN'] = 0x0016;\n  t['controlUS'] = 0x001F;\n  t['controlVT'] = 0x000B;\n  t['copyright'] = 0x00A9;\n  t['copyrightsans'] = 0xF8E9;\n  t['copyrightserif'] = 0xF6D9;\n  t['cornerbracketleft'] = 0x300C;\n  t['cornerbracketlefthalfwidth'] = 0xFF62;\n  t['cornerbracketleftvertical'] = 0xFE41;\n  t['cornerbracketright'] = 0x300D;\n  t['cornerbracketrighthalfwidth'] = 0xFF63;\n  t['cornerbracketrightvertical'] = 0xFE42;\n  t['corporationsquare'] = 0x337F;\n  t['cosquare'] = 0x33C7;\n  t['coverkgsquare'] = 0x33C6;\n  t['cparen'] = 0x249E;\n  t['cruzeiro'] = 0x20A2;\n  t['cstretched'] = 0x0297;\n  t['curlyand'] = 0x22CF;\n  t['curlyor'] = 0x22CE;\n  t['currency'] = 0x00A4;\n  t['cyrBreve'] = 0xF6D1;\n  t['cyrFlex'] = 0xF6D2;\n  t['cyrbreve'] = 0xF6D4;\n  t['cyrflex'] = 0xF6D5;\n  t['d'] = 0x0064;\n  t['daarmenian'] = 0x0564;\n  t['dabengali'] = 0x09A6;\n  t['dadarabic'] = 0x0636;\n  t['dadeva'] = 0x0926;\n  t['dadfinalarabic'] = 0xFEBE;\n  t['dadinitialarabic'] = 0xFEBF;\n  t['dadmedialarabic'] = 0xFEC0;\n  t['dagesh'] = 0x05BC;\n  t['dageshhebrew'] = 0x05BC;\n  t['dagger'] = 0x2020;\n  t['daggerdbl'] = 0x2021;\n  t['dagujarati'] = 0x0AA6;\n  t['dagurmukhi'] = 0x0A26;\n  t['dahiragana'] = 0x3060;\n  t['dakatakana'] = 0x30C0;\n  t['dalarabic'] = 0x062F;\n  t['dalet'] = 0x05D3;\n  t['daletdagesh'] = 0xFB33;\n  t['daletdageshhebrew'] = 0xFB33;\n  t['dalethebrew'] = 0x05D3;\n  t['dalfinalarabic'] = 0xFEAA;\n  t['dammaarabic'] = 0x064F;\n  t['dammalowarabic'] = 0x064F;\n  t['dammatanaltonearabic'] = 0x064C;\n  t['dammatanarabic'] = 0x064C;\n  t['danda'] = 0x0964;\n  t['dargahebrew'] = 0x05A7;\n  t['dargalefthebrew'] = 0x05A7;\n  t['dasiapneumatacyrilliccmb'] = 0x0485;\n  t['dblGrave'] = 0xF6D3;\n  t['dblanglebracketleft'] = 0x300A;\n  t['dblanglebracketleftvertical'] = 0xFE3D;\n  t['dblanglebracketright'] = 0x300B;\n  t['dblanglebracketrightvertical'] = 0xFE3E;\n  t['dblarchinvertedbelowcmb'] = 0x032B;\n  t['dblarrowleft'] = 0x21D4;\n  t['dblarrowright'] = 0x21D2;\n  t['dbldanda'] = 0x0965;\n  t['dblgrave'] = 0xF6D6;\n  t['dblgravecmb'] = 0x030F;\n  t['dblintegral'] = 0x222C;\n  t['dbllowline'] = 0x2017;\n  t['dbllowlinecmb'] = 0x0333;\n  t['dbloverlinecmb'] = 0x033F;\n  t['dblprimemod'] = 0x02BA;\n  t['dblverticalbar'] = 0x2016;\n  t['dblverticallineabovecmb'] = 0x030E;\n  t['dbopomofo'] = 0x3109;\n  t['dbsquare'] = 0x33C8;\n  t['dcaron'] = 0x010F;\n  t['dcedilla'] = 0x1E11;\n  t['dcircle'] = 0x24D3;\n  t['dcircumflexbelow'] = 0x1E13;\n  t['dcroat'] = 0x0111;\n  t['ddabengali'] = 0x09A1;\n  t['ddadeva'] = 0x0921;\n  t['ddagujarati'] = 0x0AA1;\n  t['ddagurmukhi'] = 0x0A21;\n  t['ddalarabic'] = 0x0688;\n  t['ddalfinalarabic'] = 0xFB89;\n  t['dddhadeva'] = 0x095C;\n  t['ddhabengali'] = 0x09A2;\n  t['ddhadeva'] = 0x0922;\n  t['ddhagujarati'] = 0x0AA2;\n  t['ddhagurmukhi'] = 0x0A22;\n  t['ddotaccent'] = 0x1E0B;\n  t['ddotbelow'] = 0x1E0D;\n  t['decimalseparatorarabic'] = 0x066B;\n  t['decimalseparatorpersian'] = 0x066B;\n  t['decyrillic'] = 0x0434;\n  t['degree'] = 0x00B0;\n  t['dehihebrew'] = 0x05AD;\n  t['dehiragana'] = 0x3067;\n  t['deicoptic'] = 0x03EF;\n  t['dekatakana'] = 0x30C7;\n  t['deleteleft'] = 0x232B;\n  t['deleteright'] = 0x2326;\n  t['delta'] = 0x03B4;\n  t['deltaturned'] = 0x018D;\n  t['denominatorminusonenumeratorbengali'] = 0x09F8;\n  t['dezh'] = 0x02A4;\n  t['dhabengali'] = 0x09A7;\n  t['dhadeva'] = 0x0927;\n  t['dhagujarati'] = 0x0AA7;\n  t['dhagurmukhi'] = 0x0A27;\n  t['dhook'] = 0x0257;\n  t['dialytikatonos'] = 0x0385;\n  t['dialytikatonoscmb'] = 0x0344;\n  t['diamond'] = 0x2666;\n  t['diamondsuitwhite'] = 0x2662;\n  t['dieresis'] = 0x00A8;\n  t['dieresisacute'] = 0xF6D7;\n  t['dieresisbelowcmb'] = 0x0324;\n  t['dieresiscmb'] = 0x0308;\n  t['dieresisgrave'] = 0xF6D8;\n  t['dieresistonos'] = 0x0385;\n  t['dihiragana'] = 0x3062;\n  t['dikatakana'] = 0x30C2;\n  t['dittomark'] = 0x3003;\n  t['divide'] = 0x00F7;\n  t['divides'] = 0x2223;\n  t['divisionslash'] = 0x2215;\n  t['djecyrillic'] = 0x0452;\n  t['dkshade'] = 0x2593;\n  t['dlinebelow'] = 0x1E0F;\n  t['dlsquare'] = 0x3397;\n  t['dmacron'] = 0x0111;\n  t['dmonospace'] = 0xFF44;\n  t['dnblock'] = 0x2584;\n  t['dochadathai'] = 0x0E0E;\n  t['dodekthai'] = 0x0E14;\n  t['dohiragana'] = 0x3069;\n  t['dokatakana'] = 0x30C9;\n  t['dollar'] = 0x0024;\n  t['dollarinferior'] = 0xF6E3;\n  t['dollarmonospace'] = 0xFF04;\n  t['dollaroldstyle'] = 0xF724;\n  t['dollarsmall'] = 0xFE69;\n  t['dollarsuperior'] = 0xF6E4;\n  t['dong'] = 0x20AB;\n  t['dorusquare'] = 0x3326;\n  t['dotaccent'] = 0x02D9;\n  t['dotaccentcmb'] = 0x0307;\n  t['dotbelowcmb'] = 0x0323;\n  t['dotbelowcomb'] = 0x0323;\n  t['dotkatakana'] = 0x30FB;\n  t['dotlessi'] = 0x0131;\n  t['dotlessj'] = 0xF6BE;\n  t['dotlessjstrokehook'] = 0x0284;\n  t['dotmath'] = 0x22C5;\n  t['dottedcircle'] = 0x25CC;\n  t['doubleyodpatah'] = 0xFB1F;\n  t['doubleyodpatahhebrew'] = 0xFB1F;\n  t['downtackbelowcmb'] = 0x031E;\n  t['downtackmod'] = 0x02D5;\n  t['dparen'] = 0x249F;\n  t['dsuperior'] = 0xF6EB;\n  t['dtail'] = 0x0256;\n  t['dtopbar'] = 0x018C;\n  t['duhiragana'] = 0x3065;\n  t['dukatakana'] = 0x30C5;\n  t['dz'] = 0x01F3;\n  t['dzaltone'] = 0x02A3;\n  t['dzcaron'] = 0x01C6;\n  t['dzcurl'] = 0x02A5;\n  t['dzeabkhasiancyrillic'] = 0x04E1;\n  t['dzecyrillic'] = 0x0455;\n  t['dzhecyrillic'] = 0x045F;\n  t['e'] = 0x0065;\n  t['eacute'] = 0x00E9;\n  t['earth'] = 0x2641;\n  t['ebengali'] = 0x098F;\n  t['ebopomofo'] = 0x311C;\n  t['ebreve'] = 0x0115;\n  t['ecandradeva'] = 0x090D;\n  t['ecandragujarati'] = 0x0A8D;\n  t['ecandravowelsigndeva'] = 0x0945;\n  t['ecandravowelsigngujarati'] = 0x0AC5;\n  t['ecaron'] = 0x011B;\n  t['ecedillabreve'] = 0x1E1D;\n  t['echarmenian'] = 0x0565;\n  t['echyiwnarmenian'] = 0x0587;\n  t['ecircle'] = 0x24D4;\n  t['ecircumflex'] = 0x00EA;\n  t['ecircumflexacute'] = 0x1EBF;\n  t['ecircumflexbelow'] = 0x1E19;\n  t['ecircumflexdotbelow'] = 0x1EC7;\n  t['ecircumflexgrave'] = 0x1EC1;\n  t['ecircumflexhookabove'] = 0x1EC3;\n  t['ecircumflextilde'] = 0x1EC5;\n  t['ecyrillic'] = 0x0454;\n  t['edblgrave'] = 0x0205;\n  t['edeva'] = 0x090F;\n  t['edieresis'] = 0x00EB;\n  t['edot'] = 0x0117;\n  t['edotaccent'] = 0x0117;\n  t['edotbelow'] = 0x1EB9;\n  t['eegurmukhi'] = 0x0A0F;\n  t['eematragurmukhi'] = 0x0A47;\n  t['efcyrillic'] = 0x0444;\n  t['egrave'] = 0x00E8;\n  t['egujarati'] = 0x0A8F;\n  t['eharmenian'] = 0x0567;\n  t['ehbopomofo'] = 0x311D;\n  t['ehiragana'] = 0x3048;\n  t['ehookabove'] = 0x1EBB;\n  t['eibopomofo'] = 0x311F;\n  t['eight'] = 0x0038;\n  t['eightarabic'] = 0x0668;\n  t['eightbengali'] = 0x09EE;\n  t['eightcircle'] = 0x2467;\n  t['eightcircleinversesansserif'] = 0x2791;\n  t['eightdeva'] = 0x096E;\n  t['eighteencircle'] = 0x2471;\n  t['eighteenparen'] = 0x2485;\n  t['eighteenperiod'] = 0x2499;\n  t['eightgujarati'] = 0x0AEE;\n  t['eightgurmukhi'] = 0x0A6E;\n  t['eighthackarabic'] = 0x0668;\n  t['eighthangzhou'] = 0x3028;\n  t['eighthnotebeamed'] = 0x266B;\n  t['eightideographicparen'] = 0x3227;\n  t['eightinferior'] = 0x2088;\n  t['eightmonospace'] = 0xFF18;\n  t['eightoldstyle'] = 0xF738;\n  t['eightparen'] = 0x247B;\n  t['eightperiod'] = 0x248F;\n  t['eightpersian'] = 0x06F8;\n  t['eightroman'] = 0x2177;\n  t['eightsuperior'] = 0x2078;\n  t['eightthai'] = 0x0E58;\n  t['einvertedbreve'] = 0x0207;\n  t['eiotifiedcyrillic'] = 0x0465;\n  t['ekatakana'] = 0x30A8;\n  t['ekatakanahalfwidth'] = 0xFF74;\n  t['ekonkargurmukhi'] = 0x0A74;\n  t['ekorean'] = 0x3154;\n  t['elcyrillic'] = 0x043B;\n  t['element'] = 0x2208;\n  t['elevencircle'] = 0x246A;\n  t['elevenparen'] = 0x247E;\n  t['elevenperiod'] = 0x2492;\n  t['elevenroman'] = 0x217A;\n  t['ellipsis'] = 0x2026;\n  t['ellipsisvertical'] = 0x22EE;\n  t['emacron'] = 0x0113;\n  t['emacronacute'] = 0x1E17;\n  t['emacrongrave'] = 0x1E15;\n  t['emcyrillic'] = 0x043C;\n  t['emdash'] = 0x2014;\n  t['emdashvertical'] = 0xFE31;\n  t['emonospace'] = 0xFF45;\n  t['emphasismarkarmenian'] = 0x055B;\n  t['emptyset'] = 0x2205;\n  t['enbopomofo'] = 0x3123;\n  t['encyrillic'] = 0x043D;\n  t['endash'] = 0x2013;\n  t['endashvertical'] = 0xFE32;\n  t['endescendercyrillic'] = 0x04A3;\n  t['eng'] = 0x014B;\n  t['engbopomofo'] = 0x3125;\n  t['enghecyrillic'] = 0x04A5;\n  t['enhookcyrillic'] = 0x04C8;\n  t['enspace'] = 0x2002;\n  t['eogonek'] = 0x0119;\n  t['eokorean'] = 0x3153;\n  t['eopen'] = 0x025B;\n  t['eopenclosed'] = 0x029A;\n  t['eopenreversed'] = 0x025C;\n  t['eopenreversedclosed'] = 0x025E;\n  t['eopenreversedhook'] = 0x025D;\n  t['eparen'] = 0x24A0;\n  t['epsilon'] = 0x03B5;\n  t['epsilontonos'] = 0x03AD;\n  t['equal'] = 0x003D;\n  t['equalmonospace'] = 0xFF1D;\n  t['equalsmall'] = 0xFE66;\n  t['equalsuperior'] = 0x207C;\n  t['equivalence'] = 0x2261;\n  t['erbopomofo'] = 0x3126;\n  t['ercyrillic'] = 0x0440;\n  t['ereversed'] = 0x0258;\n  t['ereversedcyrillic'] = 0x044D;\n  t['escyrillic'] = 0x0441;\n  t['esdescendercyrillic'] = 0x04AB;\n  t['esh'] = 0x0283;\n  t['eshcurl'] = 0x0286;\n  t['eshortdeva'] = 0x090E;\n  t['eshortvowelsigndeva'] = 0x0946;\n  t['eshreversedloop'] = 0x01AA;\n  t['eshsquatreversed'] = 0x0285;\n  t['esmallhiragana'] = 0x3047;\n  t['esmallkatakana'] = 0x30A7;\n  t['esmallkatakanahalfwidth'] = 0xFF6A;\n  t['estimated'] = 0x212E;\n  t['esuperior'] = 0xF6EC;\n  t['eta'] = 0x03B7;\n  t['etarmenian'] = 0x0568;\n  t['etatonos'] = 0x03AE;\n  t['eth'] = 0x00F0;\n  t['etilde'] = 0x1EBD;\n  t['etildebelow'] = 0x1E1B;\n  t['etnahtafoukhhebrew'] = 0x0591;\n  t['etnahtafoukhlefthebrew'] = 0x0591;\n  t['etnahtahebrew'] = 0x0591;\n  t['etnahtalefthebrew'] = 0x0591;\n  t['eturned'] = 0x01DD;\n  t['eukorean'] = 0x3161;\n  t['euro'] = 0x20AC;\n  t['evowelsignbengali'] = 0x09C7;\n  t['evowelsigndeva'] = 0x0947;\n  t['evowelsigngujarati'] = 0x0AC7;\n  t['exclam'] = 0x0021;\n  t['exclamarmenian'] = 0x055C;\n  t['exclamdbl'] = 0x203C;\n  t['exclamdown'] = 0x00A1;\n  t['exclamdownsmall'] = 0xF7A1;\n  t['exclammonospace'] = 0xFF01;\n  t['exclamsmall'] = 0xF721;\n  t['existential'] = 0x2203;\n  t['ezh'] = 0x0292;\n  t['ezhcaron'] = 0x01EF;\n  t['ezhcurl'] = 0x0293;\n  t['ezhreversed'] = 0x01B9;\n  t['ezhtail'] = 0x01BA;\n  t['f'] = 0x0066;\n  t['fadeva'] = 0x095E;\n  t['fagurmukhi'] = 0x0A5E;\n  t['fahrenheit'] = 0x2109;\n  t['fathaarabic'] = 0x064E;\n  t['fathalowarabic'] = 0x064E;\n  t['fathatanarabic'] = 0x064B;\n  t['fbopomofo'] = 0x3108;\n  t['fcircle'] = 0x24D5;\n  t['fdotaccent'] = 0x1E1F;\n  t['feharabic'] = 0x0641;\n  t['feharmenian'] = 0x0586;\n  t['fehfinalarabic'] = 0xFED2;\n  t['fehinitialarabic'] = 0xFED3;\n  t['fehmedialarabic'] = 0xFED4;\n  t['feicoptic'] = 0x03E5;\n  t['female'] = 0x2640;\n  t['ff'] = 0xFB00;\n  t['ffi'] = 0xFB03;\n  t['ffl'] = 0xFB04;\n  t['fi'] = 0xFB01;\n  t['fifteencircle'] = 0x246E;\n  t['fifteenparen'] = 0x2482;\n  t['fifteenperiod'] = 0x2496;\n  t['figuredash'] = 0x2012;\n  t['filledbox'] = 0x25A0;\n  t['filledrect'] = 0x25AC;\n  t['finalkaf'] = 0x05DA;\n  t['finalkafdagesh'] = 0xFB3A;\n  t['finalkafdageshhebrew'] = 0xFB3A;\n  t['finalkafhebrew'] = 0x05DA;\n  t['finalmem'] = 0x05DD;\n  t['finalmemhebrew'] = 0x05DD;\n  t['finalnun'] = 0x05DF;\n  t['finalnunhebrew'] = 0x05DF;\n  t['finalpe'] = 0x05E3;\n  t['finalpehebrew'] = 0x05E3;\n  t['finaltsadi'] = 0x05E5;\n  t['finaltsadihebrew'] = 0x05E5;\n  t['firsttonechinese'] = 0x02C9;\n  t['fisheye'] = 0x25C9;\n  t['fitacyrillic'] = 0x0473;\n  t['five'] = 0x0035;\n  t['fivearabic'] = 0x0665;\n  t['fivebengali'] = 0x09EB;\n  t['fivecircle'] = 0x2464;\n  t['fivecircleinversesansserif'] = 0x278E;\n  t['fivedeva'] = 0x096B;\n  t['fiveeighths'] = 0x215D;\n  t['fivegujarati'] = 0x0AEB;\n  t['fivegurmukhi'] = 0x0A6B;\n  t['fivehackarabic'] = 0x0665;\n  t['fivehangzhou'] = 0x3025;\n  t['fiveideographicparen'] = 0x3224;\n  t['fiveinferior'] = 0x2085;\n  t['fivemonospace'] = 0xFF15;\n  t['fiveoldstyle'] = 0xF735;\n  t['fiveparen'] = 0x2478;\n  t['fiveperiod'] = 0x248C;\n  t['fivepersian'] = 0x06F5;\n  t['fiveroman'] = 0x2174;\n  t['fivesuperior'] = 0x2075;\n  t['fivethai'] = 0x0E55;\n  t['fl'] = 0xFB02;\n  t['florin'] = 0x0192;\n  t['fmonospace'] = 0xFF46;\n  t['fmsquare'] = 0x3399;\n  t['fofanthai'] = 0x0E1F;\n  t['fofathai'] = 0x0E1D;\n  t['fongmanthai'] = 0x0E4F;\n  t['forall'] = 0x2200;\n  t['four'] = 0x0034;\n  t['fourarabic'] = 0x0664;\n  t['fourbengali'] = 0x09EA;\n  t['fourcircle'] = 0x2463;\n  t['fourcircleinversesansserif'] = 0x278D;\n  t['fourdeva'] = 0x096A;\n  t['fourgujarati'] = 0x0AEA;\n  t['fourgurmukhi'] = 0x0A6A;\n  t['fourhackarabic'] = 0x0664;\n  t['fourhangzhou'] = 0x3024;\n  t['fourideographicparen'] = 0x3223;\n  t['fourinferior'] = 0x2084;\n  t['fourmonospace'] = 0xFF14;\n  t['fournumeratorbengali'] = 0x09F7;\n  t['fouroldstyle'] = 0xF734;\n  t['fourparen'] = 0x2477;\n  t['fourperiod'] = 0x248B;\n  t['fourpersian'] = 0x06F4;\n  t['fourroman'] = 0x2173;\n  t['foursuperior'] = 0x2074;\n  t['fourteencircle'] = 0x246D;\n  t['fourteenparen'] = 0x2481;\n  t['fourteenperiod'] = 0x2495;\n  t['fourthai'] = 0x0E54;\n  t['fourthtonechinese'] = 0x02CB;\n  t['fparen'] = 0x24A1;\n  t['fraction'] = 0x2044;\n  t['franc'] = 0x20A3;\n  t['g'] = 0x0067;\n  t['gabengali'] = 0x0997;\n  t['gacute'] = 0x01F5;\n  t['gadeva'] = 0x0917;\n  t['gafarabic'] = 0x06AF;\n  t['gaffinalarabic'] = 0xFB93;\n  t['gafinitialarabic'] = 0xFB94;\n  t['gafmedialarabic'] = 0xFB95;\n  t['gagujarati'] = 0x0A97;\n  t['gagurmukhi'] = 0x0A17;\n  t['gahiragana'] = 0x304C;\n  t['gakatakana'] = 0x30AC;\n  t['gamma'] = 0x03B3;\n  t['gammalatinsmall'] = 0x0263;\n  t['gammasuperior'] = 0x02E0;\n  t['gangiacoptic'] = 0x03EB;\n  t['gbopomofo'] = 0x310D;\n  t['gbreve'] = 0x011F;\n  t['gcaron'] = 0x01E7;\n  t['gcedilla'] = 0x0123;\n  t['gcircle'] = 0x24D6;\n  t['gcircumflex'] = 0x011D;\n  t['gcommaaccent'] = 0x0123;\n  t['gdot'] = 0x0121;\n  t['gdotaccent'] = 0x0121;\n  t['gecyrillic'] = 0x0433;\n  t['gehiragana'] = 0x3052;\n  t['gekatakana'] = 0x30B2;\n  t['geometricallyequal'] = 0x2251;\n  t['gereshaccenthebrew'] = 0x059C;\n  t['gereshhebrew'] = 0x05F3;\n  t['gereshmuqdamhebrew'] = 0x059D;\n  t['germandbls'] = 0x00DF;\n  t['gershayimaccenthebrew'] = 0x059E;\n  t['gershayimhebrew'] = 0x05F4;\n  t['getamark'] = 0x3013;\n  t['ghabengali'] = 0x0998;\n  t['ghadarmenian'] = 0x0572;\n  t['ghadeva'] = 0x0918;\n  t['ghagujarati'] = 0x0A98;\n  t['ghagurmukhi'] = 0x0A18;\n  t['ghainarabic'] = 0x063A;\n  t['ghainfinalarabic'] = 0xFECE;\n  t['ghaininitialarabic'] = 0xFECF;\n  t['ghainmedialarabic'] = 0xFED0;\n  t['ghemiddlehookcyrillic'] = 0x0495;\n  t['ghestrokecyrillic'] = 0x0493;\n  t['gheupturncyrillic'] = 0x0491;\n  t['ghhadeva'] = 0x095A;\n  t['ghhagurmukhi'] = 0x0A5A;\n  t['ghook'] = 0x0260;\n  t['ghzsquare'] = 0x3393;\n  t['gihiragana'] = 0x304E;\n  t['gikatakana'] = 0x30AE;\n  t['gimarmenian'] = 0x0563;\n  t['gimel'] = 0x05D2;\n  t['gimeldagesh'] = 0xFB32;\n  t['gimeldageshhebrew'] = 0xFB32;\n  t['gimelhebrew'] = 0x05D2;\n  t['gjecyrillic'] = 0x0453;\n  t['glottalinvertedstroke'] = 0x01BE;\n  t['glottalstop'] = 0x0294;\n  t['glottalstopinverted'] = 0x0296;\n  t['glottalstopmod'] = 0x02C0;\n  t['glottalstopreversed'] = 0x0295;\n  t['glottalstopreversedmod'] = 0x02C1;\n  t['glottalstopreversedsuperior'] = 0x02E4;\n  t['glottalstopstroke'] = 0x02A1;\n  t['glottalstopstrokereversed'] = 0x02A2;\n  t['gmacron'] = 0x1E21;\n  t['gmonospace'] = 0xFF47;\n  t['gohiragana'] = 0x3054;\n  t['gokatakana'] = 0x30B4;\n  t['gparen'] = 0x24A2;\n  t['gpasquare'] = 0x33AC;\n  t['gradient'] = 0x2207;\n  t['grave'] = 0x0060;\n  t['gravebelowcmb'] = 0x0316;\n  t['gravecmb'] = 0x0300;\n  t['gravecomb'] = 0x0300;\n  t['gravedeva'] = 0x0953;\n  t['gravelowmod'] = 0x02CE;\n  t['gravemonospace'] = 0xFF40;\n  t['gravetonecmb'] = 0x0340;\n  t['greater'] = 0x003E;\n  t['greaterequal'] = 0x2265;\n  t['greaterequalorless'] = 0x22DB;\n  t['greatermonospace'] = 0xFF1E;\n  t['greaterorequivalent'] = 0x2273;\n  t['greaterorless'] = 0x2277;\n  t['greateroverequal'] = 0x2267;\n  t['greatersmall'] = 0xFE65;\n  t['gscript'] = 0x0261;\n  t['gstroke'] = 0x01E5;\n  t['guhiragana'] = 0x3050;\n  t['guillemotleft'] = 0x00AB;\n  t['guillemotright'] = 0x00BB;\n  t['guilsinglleft'] = 0x2039;\n  t['guilsinglright'] = 0x203A;\n  t['gukatakana'] = 0x30B0;\n  t['guramusquare'] = 0x3318;\n  t['gysquare'] = 0x33C9;\n  t['h'] = 0x0068;\n  t['haabkhasiancyrillic'] = 0x04A9;\n  t['haaltonearabic'] = 0x06C1;\n  t['habengali'] = 0x09B9;\n  t['hadescendercyrillic'] = 0x04B3;\n  t['hadeva'] = 0x0939;\n  t['hagujarati'] = 0x0AB9;\n  t['hagurmukhi'] = 0x0A39;\n  t['haharabic'] = 0x062D;\n  t['hahfinalarabic'] = 0xFEA2;\n  t['hahinitialarabic'] = 0xFEA3;\n  t['hahiragana'] = 0x306F;\n  t['hahmedialarabic'] = 0xFEA4;\n  t['haitusquare'] = 0x332A;\n  t['hakatakana'] = 0x30CF;\n  t['hakatakanahalfwidth'] = 0xFF8A;\n  t['halantgurmukhi'] = 0x0A4D;\n  t['hamzaarabic'] = 0x0621;\n  t['hamzalowarabic'] = 0x0621;\n  t['hangulfiller'] = 0x3164;\n  t['hardsigncyrillic'] = 0x044A;\n  t['harpoonleftbarbup'] = 0x21BC;\n  t['harpoonrightbarbup'] = 0x21C0;\n  t['hasquare'] = 0x33CA;\n  t['hatafpatah'] = 0x05B2;\n  t['hatafpatah16'] = 0x05B2;\n  t['hatafpatah23'] = 0x05B2;\n  t['hatafpatah2f'] = 0x05B2;\n  t['hatafpatahhebrew'] = 0x05B2;\n  t['hatafpatahnarrowhebrew'] = 0x05B2;\n  t['hatafpatahquarterhebrew'] = 0x05B2;\n  t['hatafpatahwidehebrew'] = 0x05B2;\n  t['hatafqamats'] = 0x05B3;\n  t['hatafqamats1b'] = 0x05B3;\n  t['hatafqamats28'] = 0x05B3;\n  t['hatafqamats34'] = 0x05B3;\n  t['hatafqamatshebrew'] = 0x05B3;\n  t['hatafqamatsnarrowhebrew'] = 0x05B3;\n  t['hatafqamatsquarterhebrew'] = 0x05B3;\n  t['hatafqamatswidehebrew'] = 0x05B3;\n  t['hatafsegol'] = 0x05B1;\n  t['hatafsegol17'] = 0x05B1;\n  t['hatafsegol24'] = 0x05B1;\n  t['hatafsegol30'] = 0x05B1;\n  t['hatafsegolhebrew'] = 0x05B1;\n  t['hatafsegolnarrowhebrew'] = 0x05B1;\n  t['hatafsegolquarterhebrew'] = 0x05B1;\n  t['hatafsegolwidehebrew'] = 0x05B1;\n  t['hbar'] = 0x0127;\n  t['hbopomofo'] = 0x310F;\n  t['hbrevebelow'] = 0x1E2B;\n  t['hcedilla'] = 0x1E29;\n  t['hcircle'] = 0x24D7;\n  t['hcircumflex'] = 0x0125;\n  t['hdieresis'] = 0x1E27;\n  t['hdotaccent'] = 0x1E23;\n  t['hdotbelow'] = 0x1E25;\n  t['he'] = 0x05D4;\n  t['heart'] = 0x2665;\n  t['heartsuitblack'] = 0x2665;\n  t['heartsuitwhite'] = 0x2661;\n  t['hedagesh'] = 0xFB34;\n  t['hedageshhebrew'] = 0xFB34;\n  t['hehaltonearabic'] = 0x06C1;\n  t['heharabic'] = 0x0647;\n  t['hehebrew'] = 0x05D4;\n  t['hehfinalaltonearabic'] = 0xFBA7;\n  t['hehfinalalttwoarabic'] = 0xFEEA;\n  t['hehfinalarabic'] = 0xFEEA;\n  t['hehhamzaabovefinalarabic'] = 0xFBA5;\n  t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n  t['hehinitialaltonearabic'] = 0xFBA8;\n  t['hehinitialarabic'] = 0xFEEB;\n  t['hehiragana'] = 0x3078;\n  t['hehmedialaltonearabic'] = 0xFBA9;\n  t['hehmedialarabic'] = 0xFEEC;\n  t['heiseierasquare'] = 0x337B;\n  t['hekatakana'] = 0x30D8;\n  t['hekatakanahalfwidth'] = 0xFF8D;\n  t['hekutaarusquare'] = 0x3336;\n  t['henghook'] = 0x0267;\n  t['herutusquare'] = 0x3339;\n  t['het'] = 0x05D7;\n  t['hethebrew'] = 0x05D7;\n  t['hhook'] = 0x0266;\n  t['hhooksuperior'] = 0x02B1;\n  t['hieuhacirclekorean'] = 0x327B;\n  t['hieuhaparenkorean'] = 0x321B;\n  t['hieuhcirclekorean'] = 0x326D;\n  t['hieuhkorean'] = 0x314E;\n  t['hieuhparenkorean'] = 0x320D;\n  t['hihiragana'] = 0x3072;\n  t['hikatakana'] = 0x30D2;\n  t['hikatakanahalfwidth'] = 0xFF8B;\n  t['hiriq'] = 0x05B4;\n  t['hiriq14'] = 0x05B4;\n  t['hiriq21'] = 0x05B4;\n  t['hiriq2d'] = 0x05B4;\n  t['hiriqhebrew'] = 0x05B4;\n  t['hiriqnarrowhebrew'] = 0x05B4;\n  t['hiriqquarterhebrew'] = 0x05B4;\n  t['hiriqwidehebrew'] = 0x05B4;\n  t['hlinebelow'] = 0x1E96;\n  t['hmonospace'] = 0xFF48;\n  t['hoarmenian'] = 0x0570;\n  t['hohipthai'] = 0x0E2B;\n  t['hohiragana'] = 0x307B;\n  t['hokatakana'] = 0x30DB;\n  t['hokatakanahalfwidth'] = 0xFF8E;\n  t['holam'] = 0x05B9;\n  t['holam19'] = 0x05B9;\n  t['holam26'] = 0x05B9;\n  t['holam32'] = 0x05B9;\n  t['holamhebrew'] = 0x05B9;\n  t['holamnarrowhebrew'] = 0x05B9;\n  t['holamquarterhebrew'] = 0x05B9;\n  t['holamwidehebrew'] = 0x05B9;\n  t['honokhukthai'] = 0x0E2E;\n  t['hookabovecomb'] = 0x0309;\n  t['hookcmb'] = 0x0309;\n  t['hookpalatalizedbelowcmb'] = 0x0321;\n  t['hookretroflexbelowcmb'] = 0x0322;\n  t['hoonsquare'] = 0x3342;\n  t['horicoptic'] = 0x03E9;\n  t['horizontalbar'] = 0x2015;\n  t['horncmb'] = 0x031B;\n  t['hotsprings'] = 0x2668;\n  t['house'] = 0x2302;\n  t['hparen'] = 0x24A3;\n  t['hsuperior'] = 0x02B0;\n  t['hturned'] = 0x0265;\n  t['huhiragana'] = 0x3075;\n  t['huiitosquare'] = 0x3333;\n  t['hukatakana'] = 0x30D5;\n  t['hukatakanahalfwidth'] = 0xFF8C;\n  t['hungarumlaut'] = 0x02DD;\n  t['hungarumlautcmb'] = 0x030B;\n  t['hv'] = 0x0195;\n  t['hyphen'] = 0x002D;\n  t['hypheninferior'] = 0xF6E5;\n  t['hyphenmonospace'] = 0xFF0D;\n  t['hyphensmall'] = 0xFE63;\n  t['hyphensuperior'] = 0xF6E6;\n  t['hyphentwo'] = 0x2010;\n  t['i'] = 0x0069;\n  t['iacute'] = 0x00ED;\n  t['iacyrillic'] = 0x044F;\n  t['ibengali'] = 0x0987;\n  t['ibopomofo'] = 0x3127;\n  t['ibreve'] = 0x012D;\n  t['icaron'] = 0x01D0;\n  t['icircle'] = 0x24D8;\n  t['icircumflex'] = 0x00EE;\n  t['icyrillic'] = 0x0456;\n  t['idblgrave'] = 0x0209;\n  t['ideographearthcircle'] = 0x328F;\n  t['ideographfirecircle'] = 0x328B;\n  t['ideographicallianceparen'] = 0x323F;\n  t['ideographiccallparen'] = 0x323A;\n  t['ideographiccentrecircle'] = 0x32A5;\n  t['ideographicclose'] = 0x3006;\n  t['ideographiccomma'] = 0x3001;\n  t['ideographiccommaleft'] = 0xFF64;\n  t['ideographiccongratulationparen'] = 0x3237;\n  t['ideographiccorrectcircle'] = 0x32A3;\n  t['ideographicearthparen'] = 0x322F;\n  t['ideographicenterpriseparen'] = 0x323D;\n  t['ideographicexcellentcircle'] = 0x329D;\n  t['ideographicfestivalparen'] = 0x3240;\n  t['ideographicfinancialcircle'] = 0x3296;\n  t['ideographicfinancialparen'] = 0x3236;\n  t['ideographicfireparen'] = 0x322B;\n  t['ideographichaveparen'] = 0x3232;\n  t['ideographichighcircle'] = 0x32A4;\n  t['ideographiciterationmark'] = 0x3005;\n  t['ideographiclaborcircle'] = 0x3298;\n  t['ideographiclaborparen'] = 0x3238;\n  t['ideographicleftcircle'] = 0x32A7;\n  t['ideographiclowcircle'] = 0x32A6;\n  t['ideographicmedicinecircle'] = 0x32A9;\n  t['ideographicmetalparen'] = 0x322E;\n  t['ideographicmoonparen'] = 0x322A;\n  t['ideographicnameparen'] = 0x3234;\n  t['ideographicperiod'] = 0x3002;\n  t['ideographicprintcircle'] = 0x329E;\n  t['ideographicreachparen'] = 0x3243;\n  t['ideographicrepresentparen'] = 0x3239;\n  t['ideographicresourceparen'] = 0x323E;\n  t['ideographicrightcircle'] = 0x32A8;\n  t['ideographicsecretcircle'] = 0x3299;\n  t['ideographicselfparen'] = 0x3242;\n  t['ideographicsocietyparen'] = 0x3233;\n  t['ideographicspace'] = 0x3000;\n  t['ideographicspecialparen'] = 0x3235;\n  t['ideographicstockparen'] = 0x3231;\n  t['ideographicstudyparen'] = 0x323B;\n  t['ideographicsunparen'] = 0x3230;\n  t['ideographicsuperviseparen'] = 0x323C;\n  t['ideographicwaterparen'] = 0x322C;\n  t['ideographicwoodparen'] = 0x322D;\n  t['ideographiczero'] = 0x3007;\n  t['ideographmetalcircle'] = 0x328E;\n  t['ideographmooncircle'] = 0x328A;\n  t['ideographnamecircle'] = 0x3294;\n  t['ideographsuncircle'] = 0x3290;\n  t['ideographwatercircle'] = 0x328C;\n  t['ideographwoodcircle'] = 0x328D;\n  t['ideva'] = 0x0907;\n  t['idieresis'] = 0x00EF;\n  t['idieresisacute'] = 0x1E2F;\n  t['idieresiscyrillic'] = 0x04E5;\n  t['idotbelow'] = 0x1ECB;\n  t['iebrevecyrillic'] = 0x04D7;\n  t['iecyrillic'] = 0x0435;\n  t['ieungacirclekorean'] = 0x3275;\n  t['ieungaparenkorean'] = 0x3215;\n  t['ieungcirclekorean'] = 0x3267;\n  t['ieungkorean'] = 0x3147;\n  t['ieungparenkorean'] = 0x3207;\n  t['igrave'] = 0x00EC;\n  t['igujarati'] = 0x0A87;\n  t['igurmukhi'] = 0x0A07;\n  t['ihiragana'] = 0x3044;\n  t['ihookabove'] = 0x1EC9;\n  t['iibengali'] = 0x0988;\n  t['iicyrillic'] = 0x0438;\n  t['iideva'] = 0x0908;\n  t['iigujarati'] = 0x0A88;\n  t['iigurmukhi'] = 0x0A08;\n  t['iimatragurmukhi'] = 0x0A40;\n  t['iinvertedbreve'] = 0x020B;\n  t['iishortcyrillic'] = 0x0439;\n  t['iivowelsignbengali'] = 0x09C0;\n  t['iivowelsigndeva'] = 0x0940;\n  t['iivowelsigngujarati'] = 0x0AC0;\n  t['ij'] = 0x0133;\n  t['ikatakana'] = 0x30A4;\n  t['ikatakanahalfwidth'] = 0xFF72;\n  t['ikorean'] = 0x3163;\n  t['ilde'] = 0x02DC;\n  t['iluyhebrew'] = 0x05AC;\n  t['imacron'] = 0x012B;\n  t['imacroncyrillic'] = 0x04E3;\n  t['imageorapproximatelyequal'] = 0x2253;\n  t['imatragurmukhi'] = 0x0A3F;\n  t['imonospace'] = 0xFF49;\n  t['increment'] = 0x2206;\n  t['infinity'] = 0x221E;\n  t['iniarmenian'] = 0x056B;\n  t['integral'] = 0x222B;\n  t['integralbottom'] = 0x2321;\n  t['integralbt'] = 0x2321;\n  t['integralex'] = 0xF8F5;\n  t['integraltop'] = 0x2320;\n  t['integraltp'] = 0x2320;\n  t['intersection'] = 0x2229;\n  t['intisquare'] = 0x3305;\n  t['invbullet'] = 0x25D8;\n  t['invcircle'] = 0x25D9;\n  t['invsmileface'] = 0x263B;\n  t['iocyrillic'] = 0x0451;\n  t['iogonek'] = 0x012F;\n  t['iota'] = 0x03B9;\n  t['iotadieresis'] = 0x03CA;\n  t['iotadieresistonos'] = 0x0390;\n  t['iotalatin'] = 0x0269;\n  t['iotatonos'] = 0x03AF;\n  t['iparen'] = 0x24A4;\n  t['irigurmukhi'] = 0x0A72;\n  t['ismallhiragana'] = 0x3043;\n  t['ismallkatakana'] = 0x30A3;\n  t['ismallkatakanahalfwidth'] = 0xFF68;\n  t['issharbengali'] = 0x09FA;\n  t['istroke'] = 0x0268;\n  t['isuperior'] = 0xF6ED;\n  t['iterationhiragana'] = 0x309D;\n  t['iterationkatakana'] = 0x30FD;\n  t['itilde'] = 0x0129;\n  t['itildebelow'] = 0x1E2D;\n  t['iubopomofo'] = 0x3129;\n  t['iucyrillic'] = 0x044E;\n  t['ivowelsignbengali'] = 0x09BF;\n  t['ivowelsigndeva'] = 0x093F;\n  t['ivowelsigngujarati'] = 0x0ABF;\n  t['izhitsacyrillic'] = 0x0475;\n  t['izhitsadblgravecyrillic'] = 0x0477;\n  t['j'] = 0x006A;\n  t['jaarmenian'] = 0x0571;\n  t['jabengali'] = 0x099C;\n  t['jadeva'] = 0x091C;\n  t['jagujarati'] = 0x0A9C;\n  t['jagurmukhi'] = 0x0A1C;\n  t['jbopomofo'] = 0x3110;\n  t['jcaron'] = 0x01F0;\n  t['jcircle'] = 0x24D9;\n  t['jcircumflex'] = 0x0135;\n  t['jcrossedtail'] = 0x029D;\n  t['jdotlessstroke'] = 0x025F;\n  t['jecyrillic'] = 0x0458;\n  t['jeemarabic'] = 0x062C;\n  t['jeemfinalarabic'] = 0xFE9E;\n  t['jeeminitialarabic'] = 0xFE9F;\n  t['jeemmedialarabic'] = 0xFEA0;\n  t['jeharabic'] = 0x0698;\n  t['jehfinalarabic'] = 0xFB8B;\n  t['jhabengali'] = 0x099D;\n  t['jhadeva'] = 0x091D;\n  t['jhagujarati'] = 0x0A9D;\n  t['jhagurmukhi'] = 0x0A1D;\n  t['jheharmenian'] = 0x057B;\n  t['jis'] = 0x3004;\n  t['jmonospace'] = 0xFF4A;\n  t['jparen'] = 0x24A5;\n  t['jsuperior'] = 0x02B2;\n  t['k'] = 0x006B;\n  t['kabashkircyrillic'] = 0x04A1;\n  t['kabengali'] = 0x0995;\n  t['kacute'] = 0x1E31;\n  t['kacyrillic'] = 0x043A;\n  t['kadescendercyrillic'] = 0x049B;\n  t['kadeva'] = 0x0915;\n  t['kaf'] = 0x05DB;\n  t['kafarabic'] = 0x0643;\n  t['kafdagesh'] = 0xFB3B;\n  t['kafdageshhebrew'] = 0xFB3B;\n  t['kaffinalarabic'] = 0xFEDA;\n  t['kafhebrew'] = 0x05DB;\n  t['kafinitialarabic'] = 0xFEDB;\n  t['kafmedialarabic'] = 0xFEDC;\n  t['kafrafehebrew'] = 0xFB4D;\n  t['kagujarati'] = 0x0A95;\n  t['kagurmukhi'] = 0x0A15;\n  t['kahiragana'] = 0x304B;\n  t['kahookcyrillic'] = 0x04C4;\n  t['kakatakana'] = 0x30AB;\n  t['kakatakanahalfwidth'] = 0xFF76;\n  t['kappa'] = 0x03BA;\n  t['kappasymbolgreek'] = 0x03F0;\n  t['kapyeounmieumkorean'] = 0x3171;\n  t['kapyeounphieuphkorean'] = 0x3184;\n  t['kapyeounpieupkorean'] = 0x3178;\n  t['kapyeounssangpieupkorean'] = 0x3179;\n  t['karoriisquare'] = 0x330D;\n  t['kashidaautoarabic'] = 0x0640;\n  t['kashidaautonosidebearingarabic'] = 0x0640;\n  t['kasmallkatakana'] = 0x30F5;\n  t['kasquare'] = 0x3384;\n  t['kasraarabic'] = 0x0650;\n  t['kasratanarabic'] = 0x064D;\n  t['kastrokecyrillic'] = 0x049F;\n  t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n  t['kaverticalstrokecyrillic'] = 0x049D;\n  t['kbopomofo'] = 0x310E;\n  t['kcalsquare'] = 0x3389;\n  t['kcaron'] = 0x01E9;\n  t['kcedilla'] = 0x0137;\n  t['kcircle'] = 0x24DA;\n  t['kcommaaccent'] = 0x0137;\n  t['kdotbelow'] = 0x1E33;\n  t['keharmenian'] = 0x0584;\n  t['kehiragana'] = 0x3051;\n  t['kekatakana'] = 0x30B1;\n  t['kekatakanahalfwidth'] = 0xFF79;\n  t['kenarmenian'] = 0x056F;\n  t['kesmallkatakana'] = 0x30F6;\n  t['kgreenlandic'] = 0x0138;\n  t['khabengali'] = 0x0996;\n  t['khacyrillic'] = 0x0445;\n  t['khadeva'] = 0x0916;\n  t['khagujarati'] = 0x0A96;\n  t['khagurmukhi'] = 0x0A16;\n  t['khaharabic'] = 0x062E;\n  t['khahfinalarabic'] = 0xFEA6;\n  t['khahinitialarabic'] = 0xFEA7;\n  t['khahmedialarabic'] = 0xFEA8;\n  t['kheicoptic'] = 0x03E7;\n  t['khhadeva'] = 0x0959;\n  t['khhagurmukhi'] = 0x0A59;\n  t['khieukhacirclekorean'] = 0x3278;\n  t['khieukhaparenkorean'] = 0x3218;\n  t['khieukhcirclekorean'] = 0x326A;\n  t['khieukhkorean'] = 0x314B;\n  t['khieukhparenkorean'] = 0x320A;\n  t['khokhaithai'] = 0x0E02;\n  t['khokhonthai'] = 0x0E05;\n  t['khokhuatthai'] = 0x0E03;\n  t['khokhwaithai'] = 0x0E04;\n  t['khomutthai'] = 0x0E5B;\n  t['khook'] = 0x0199;\n  t['khorakhangthai'] = 0x0E06;\n  t['khzsquare'] = 0x3391;\n  t['kihiragana'] = 0x304D;\n  t['kikatakana'] = 0x30AD;\n  t['kikatakanahalfwidth'] = 0xFF77;\n  t['kiroguramusquare'] = 0x3315;\n  t['kiromeetorusquare'] = 0x3316;\n  t['kirosquare'] = 0x3314;\n  t['kiyeokacirclekorean'] = 0x326E;\n  t['kiyeokaparenkorean'] = 0x320E;\n  t['kiyeokcirclekorean'] = 0x3260;\n  t['kiyeokkorean'] = 0x3131;\n  t['kiyeokparenkorean'] = 0x3200;\n  t['kiyeoksioskorean'] = 0x3133;\n  t['kjecyrillic'] = 0x045C;\n  t['klinebelow'] = 0x1E35;\n  t['klsquare'] = 0x3398;\n  t['kmcubedsquare'] = 0x33A6;\n  t['kmonospace'] = 0xFF4B;\n  t['kmsquaredsquare'] = 0x33A2;\n  t['kohiragana'] = 0x3053;\n  t['kohmsquare'] = 0x33C0;\n  t['kokaithai'] = 0x0E01;\n  t['kokatakana'] = 0x30B3;\n  t['kokatakanahalfwidth'] = 0xFF7A;\n  t['kooposquare'] = 0x331E;\n  t['koppacyrillic'] = 0x0481;\n  t['koreanstandardsymbol'] = 0x327F;\n  t['koroniscmb'] = 0x0343;\n  t['kparen'] = 0x24A6;\n  t['kpasquare'] = 0x33AA;\n  t['ksicyrillic'] = 0x046F;\n  t['ktsquare'] = 0x33CF;\n  t['kturned'] = 0x029E;\n  t['kuhiragana'] = 0x304F;\n  t['kukatakana'] = 0x30AF;\n  t['kukatakanahalfwidth'] = 0xFF78;\n  t['kvsquare'] = 0x33B8;\n  t['kwsquare'] = 0x33BE;\n  t['l'] = 0x006C;\n  t['labengali'] = 0x09B2;\n  t['lacute'] = 0x013A;\n  t['ladeva'] = 0x0932;\n  t['lagujarati'] = 0x0AB2;\n  t['lagurmukhi'] = 0x0A32;\n  t['lakkhangyaothai'] = 0x0E45;\n  t['lamaleffinalarabic'] = 0xFEFC;\n  t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n  t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n  t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n  t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n  t['lamalefisolatedarabic'] = 0xFEFB;\n  t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n  t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n  t['lamarabic'] = 0x0644;\n  t['lambda'] = 0x03BB;\n  t['lambdastroke'] = 0x019B;\n  t['lamed'] = 0x05DC;\n  t['lameddagesh'] = 0xFB3C;\n  t['lameddageshhebrew'] = 0xFB3C;\n  t['lamedhebrew'] = 0x05DC;\n  t['lamfinalarabic'] = 0xFEDE;\n  t['lamhahinitialarabic'] = 0xFCCA;\n  t['laminitialarabic'] = 0xFEDF;\n  t['lamjeeminitialarabic'] = 0xFCC9;\n  t['lamkhahinitialarabic'] = 0xFCCB;\n  t['lamlamhehisolatedarabic'] = 0xFDF2;\n  t['lammedialarabic'] = 0xFEE0;\n  t['lammeemhahinitialarabic'] = 0xFD88;\n  t['lammeeminitialarabic'] = 0xFCCC;\n  t['largecircle'] = 0x25EF;\n  t['lbar'] = 0x019A;\n  t['lbelt'] = 0x026C;\n  t['lbopomofo'] = 0x310C;\n  t['lcaron'] = 0x013E;\n  t['lcedilla'] = 0x013C;\n  t['lcircle'] = 0x24DB;\n  t['lcircumflexbelow'] = 0x1E3D;\n  t['lcommaaccent'] = 0x013C;\n  t['ldot'] = 0x0140;\n  t['ldotaccent'] = 0x0140;\n  t['ldotbelow'] = 0x1E37;\n  t['ldotbelowmacron'] = 0x1E39;\n  t['leftangleabovecmb'] = 0x031A;\n  t['lefttackbelowcmb'] = 0x0318;\n  t['less'] = 0x003C;\n  t['lessequal'] = 0x2264;\n  t['lessequalorgreater'] = 0x22DA;\n  t['lessmonospace'] = 0xFF1C;\n  t['lessorequivalent'] = 0x2272;\n  t['lessorgreater'] = 0x2276;\n  t['lessoverequal'] = 0x2266;\n  t['lesssmall'] = 0xFE64;\n  t['lezh'] = 0x026E;\n  t['lfblock'] = 0x258C;\n  t['lhookretroflex'] = 0x026D;\n  t['lira'] = 0x20A4;\n  t['liwnarmenian'] = 0x056C;\n  t['lj'] = 0x01C9;\n  t['ljecyrillic'] = 0x0459;\n  t['ll'] = 0xF6C0;\n  t['lladeva'] = 0x0933;\n  t['llagujarati'] = 0x0AB3;\n  t['llinebelow'] = 0x1E3B;\n  t['llladeva'] = 0x0934;\n  t['llvocalicbengali'] = 0x09E1;\n  t['llvocalicdeva'] = 0x0961;\n  t['llvocalicvowelsignbengali'] = 0x09E3;\n  t['llvocalicvowelsigndeva'] = 0x0963;\n  t['lmiddletilde'] = 0x026B;\n  t['lmonospace'] = 0xFF4C;\n  t['lmsquare'] = 0x33D0;\n  t['lochulathai'] = 0x0E2C;\n  t['logicaland'] = 0x2227;\n  t['logicalnot'] = 0x00AC;\n  t['logicalnotreversed'] = 0x2310;\n  t['logicalor'] = 0x2228;\n  t['lolingthai'] = 0x0E25;\n  t['longs'] = 0x017F;\n  t['lowlinecenterline'] = 0xFE4E;\n  t['lowlinecmb'] = 0x0332;\n  t['lowlinedashed'] = 0xFE4D;\n  t['lozenge'] = 0x25CA;\n  t['lparen'] = 0x24A7;\n  t['lslash'] = 0x0142;\n  t['lsquare'] = 0x2113;\n  t['lsuperior'] = 0xF6EE;\n  t['ltshade'] = 0x2591;\n  t['luthai'] = 0x0E26;\n  t['lvocalicbengali'] = 0x098C;\n  t['lvocalicdeva'] = 0x090C;\n  t['lvocalicvowelsignbengali'] = 0x09E2;\n  t['lvocalicvowelsigndeva'] = 0x0962;\n  t['lxsquare'] = 0x33D3;\n  t['m'] = 0x006D;\n  t['mabengali'] = 0x09AE;\n  t['macron'] = 0x00AF;\n  t['macronbelowcmb'] = 0x0331;\n  t['macroncmb'] = 0x0304;\n  t['macronlowmod'] = 0x02CD;\n  t['macronmonospace'] = 0xFFE3;\n  t['macute'] = 0x1E3F;\n  t['madeva'] = 0x092E;\n  t['magujarati'] = 0x0AAE;\n  t['magurmukhi'] = 0x0A2E;\n  t['mahapakhhebrew'] = 0x05A4;\n  t['mahapakhlefthebrew'] = 0x05A4;\n  t['mahiragana'] = 0x307E;\n  t['maichattawalowleftthai'] = 0xF895;\n  t['maichattawalowrightthai'] = 0xF894;\n  t['maichattawathai'] = 0x0E4B;\n  t['maichattawaupperleftthai'] = 0xF893;\n  t['maieklowleftthai'] = 0xF88C;\n  t['maieklowrightthai'] = 0xF88B;\n  t['maiekthai'] = 0x0E48;\n  t['maiekupperleftthai'] = 0xF88A;\n  t['maihanakatleftthai'] = 0xF884;\n  t['maihanakatthai'] = 0x0E31;\n  t['maitaikhuleftthai'] = 0xF889;\n  t['maitaikhuthai'] = 0x0E47;\n  t['maitholowleftthai'] = 0xF88F;\n  t['maitholowrightthai'] = 0xF88E;\n  t['maithothai'] = 0x0E49;\n  t['maithoupperleftthai'] = 0xF88D;\n  t['maitrilowleftthai'] = 0xF892;\n  t['maitrilowrightthai'] = 0xF891;\n  t['maitrithai'] = 0x0E4A;\n  t['maitriupperleftthai'] = 0xF890;\n  t['maiyamokthai'] = 0x0E46;\n  t['makatakana'] = 0x30DE;\n  t['makatakanahalfwidth'] = 0xFF8F;\n  t['male'] = 0x2642;\n  t['mansyonsquare'] = 0x3347;\n  t['maqafhebrew'] = 0x05BE;\n  t['mars'] = 0x2642;\n  t['masoracirclehebrew'] = 0x05AF;\n  t['masquare'] = 0x3383;\n  t['mbopomofo'] = 0x3107;\n  t['mbsquare'] = 0x33D4;\n  t['mcircle'] = 0x24DC;\n  t['mcubedsquare'] = 0x33A5;\n  t['mdotaccent'] = 0x1E41;\n  t['mdotbelow'] = 0x1E43;\n  t['meemarabic'] = 0x0645;\n  t['meemfinalarabic'] = 0xFEE2;\n  t['meeminitialarabic'] = 0xFEE3;\n  t['meemmedialarabic'] = 0xFEE4;\n  t['meemmeeminitialarabic'] = 0xFCD1;\n  t['meemmeemisolatedarabic'] = 0xFC48;\n  t['meetorusquare'] = 0x334D;\n  t['mehiragana'] = 0x3081;\n  t['meizierasquare'] = 0x337E;\n  t['mekatakana'] = 0x30E1;\n  t['mekatakanahalfwidth'] = 0xFF92;\n  t['mem'] = 0x05DE;\n  t['memdagesh'] = 0xFB3E;\n  t['memdageshhebrew'] = 0xFB3E;\n  t['memhebrew'] = 0x05DE;\n  t['menarmenian'] = 0x0574;\n  t['merkhahebrew'] = 0x05A5;\n  t['merkhakefulahebrew'] = 0x05A6;\n  t['merkhakefulalefthebrew'] = 0x05A6;\n  t['merkhalefthebrew'] = 0x05A5;\n  t['mhook'] = 0x0271;\n  t['mhzsquare'] = 0x3392;\n  t['middledotkatakanahalfwidth'] = 0xFF65;\n  t['middot'] = 0x00B7;\n  t['mieumacirclekorean'] = 0x3272;\n  t['mieumaparenkorean'] = 0x3212;\n  t['mieumcirclekorean'] = 0x3264;\n  t['mieumkorean'] = 0x3141;\n  t['mieumpansioskorean'] = 0x3170;\n  t['mieumparenkorean'] = 0x3204;\n  t['mieumpieupkorean'] = 0x316E;\n  t['mieumsioskorean'] = 0x316F;\n  t['mihiragana'] = 0x307F;\n  t['mikatakana'] = 0x30DF;\n  t['mikatakanahalfwidth'] = 0xFF90;\n  t['minus'] = 0x2212;\n  t['minusbelowcmb'] = 0x0320;\n  t['minuscircle'] = 0x2296;\n  t['minusmod'] = 0x02D7;\n  t['minusplus'] = 0x2213;\n  t['minute'] = 0x2032;\n  t['miribaarusquare'] = 0x334A;\n  t['mirisquare'] = 0x3349;\n  t['mlonglegturned'] = 0x0270;\n  t['mlsquare'] = 0x3396;\n  t['mmcubedsquare'] = 0x33A3;\n  t['mmonospace'] = 0xFF4D;\n  t['mmsquaredsquare'] = 0x339F;\n  t['mohiragana'] = 0x3082;\n  t['mohmsquare'] = 0x33C1;\n  t['mokatakana'] = 0x30E2;\n  t['mokatakanahalfwidth'] = 0xFF93;\n  t['molsquare'] = 0x33D6;\n  t['momathai'] = 0x0E21;\n  t['moverssquare'] = 0x33A7;\n  t['moverssquaredsquare'] = 0x33A8;\n  t['mparen'] = 0x24A8;\n  t['mpasquare'] = 0x33AB;\n  t['mssquare'] = 0x33B3;\n  t['msuperior'] = 0xF6EF;\n  t['mturned'] = 0x026F;\n  t['mu'] = 0x00B5;\n  t['mu1'] = 0x00B5;\n  t['muasquare'] = 0x3382;\n  t['muchgreater'] = 0x226B;\n  t['muchless'] = 0x226A;\n  t['mufsquare'] = 0x338C;\n  t['mugreek'] = 0x03BC;\n  t['mugsquare'] = 0x338D;\n  t['muhiragana'] = 0x3080;\n  t['mukatakana'] = 0x30E0;\n  t['mukatakanahalfwidth'] = 0xFF91;\n  t['mulsquare'] = 0x3395;\n  t['multiply'] = 0x00D7;\n  t['mumsquare'] = 0x339B;\n  t['munahhebrew'] = 0x05A3;\n  t['munahlefthebrew'] = 0x05A3;\n  t['musicalnote'] = 0x266A;\n  t['musicalnotedbl'] = 0x266B;\n  t['musicflatsign'] = 0x266D;\n  t['musicsharpsign'] = 0x266F;\n  t['mussquare'] = 0x33B2;\n  t['muvsquare'] = 0x33B6;\n  t['muwsquare'] = 0x33BC;\n  t['mvmegasquare'] = 0x33B9;\n  t['mvsquare'] = 0x33B7;\n  t['mwmegasquare'] = 0x33BF;\n  t['mwsquare'] = 0x33BD;\n  t['n'] = 0x006E;\n  t['nabengali'] = 0x09A8;\n  t['nabla'] = 0x2207;\n  t['nacute'] = 0x0144;\n  t['nadeva'] = 0x0928;\n  t['nagujarati'] = 0x0AA8;\n  t['nagurmukhi'] = 0x0A28;\n  t['nahiragana'] = 0x306A;\n  t['nakatakana'] = 0x30CA;\n  t['nakatakanahalfwidth'] = 0xFF85;\n  t['napostrophe'] = 0x0149;\n  t['nasquare'] = 0x3381;\n  t['nbopomofo'] = 0x310B;\n  t['nbspace'] = 0x00A0;\n  t['ncaron'] = 0x0148;\n  t['ncedilla'] = 0x0146;\n  t['ncircle'] = 0x24DD;\n  t['ncircumflexbelow'] = 0x1E4B;\n  t['ncommaaccent'] = 0x0146;\n  t['ndotaccent'] = 0x1E45;\n  t['ndotbelow'] = 0x1E47;\n  t['nehiragana'] = 0x306D;\n  t['nekatakana'] = 0x30CD;\n  t['nekatakanahalfwidth'] = 0xFF88;\n  t['newsheqelsign'] = 0x20AA;\n  t['nfsquare'] = 0x338B;\n  t['ngabengali'] = 0x0999;\n  t['ngadeva'] = 0x0919;\n  t['ngagujarati'] = 0x0A99;\n  t['ngagurmukhi'] = 0x0A19;\n  t['ngonguthai'] = 0x0E07;\n  t['nhiragana'] = 0x3093;\n  t['nhookleft'] = 0x0272;\n  t['nhookretroflex'] = 0x0273;\n  t['nieunacirclekorean'] = 0x326F;\n  t['nieunaparenkorean'] = 0x320F;\n  t['nieuncieuckorean'] = 0x3135;\n  t['nieuncirclekorean'] = 0x3261;\n  t['nieunhieuhkorean'] = 0x3136;\n  t['nieunkorean'] = 0x3134;\n  t['nieunpansioskorean'] = 0x3168;\n  t['nieunparenkorean'] = 0x3201;\n  t['nieunsioskorean'] = 0x3167;\n  t['nieuntikeutkorean'] = 0x3166;\n  t['nihiragana'] = 0x306B;\n  t['nikatakana'] = 0x30CB;\n  t['nikatakanahalfwidth'] = 0xFF86;\n  t['nikhahitleftthai'] = 0xF899;\n  t['nikhahitthai'] = 0x0E4D;\n  t['nine'] = 0x0039;\n  t['ninearabic'] = 0x0669;\n  t['ninebengali'] = 0x09EF;\n  t['ninecircle'] = 0x2468;\n  t['ninecircleinversesansserif'] = 0x2792;\n  t['ninedeva'] = 0x096F;\n  t['ninegujarati'] = 0x0AEF;\n  t['ninegurmukhi'] = 0x0A6F;\n  t['ninehackarabic'] = 0x0669;\n  t['ninehangzhou'] = 0x3029;\n  t['nineideographicparen'] = 0x3228;\n  t['nineinferior'] = 0x2089;\n  t['ninemonospace'] = 0xFF19;\n  t['nineoldstyle'] = 0xF739;\n  t['nineparen'] = 0x247C;\n  t['nineperiod'] = 0x2490;\n  t['ninepersian'] = 0x06F9;\n  t['nineroman'] = 0x2178;\n  t['ninesuperior'] = 0x2079;\n  t['nineteencircle'] = 0x2472;\n  t['nineteenparen'] = 0x2486;\n  t['nineteenperiod'] = 0x249A;\n  t['ninethai'] = 0x0E59;\n  t['nj'] = 0x01CC;\n  t['njecyrillic'] = 0x045A;\n  t['nkatakana'] = 0x30F3;\n  t['nkatakanahalfwidth'] = 0xFF9D;\n  t['nlegrightlong'] = 0x019E;\n  t['nlinebelow'] = 0x1E49;\n  t['nmonospace'] = 0xFF4E;\n  t['nmsquare'] = 0x339A;\n  t['nnabengali'] = 0x09A3;\n  t['nnadeva'] = 0x0923;\n  t['nnagujarati'] = 0x0AA3;\n  t['nnagurmukhi'] = 0x0A23;\n  t['nnnadeva'] = 0x0929;\n  t['nohiragana'] = 0x306E;\n  t['nokatakana'] = 0x30CE;\n  t['nokatakanahalfwidth'] = 0xFF89;\n  t['nonbreakingspace'] = 0x00A0;\n  t['nonenthai'] = 0x0E13;\n  t['nonuthai'] = 0x0E19;\n  t['noonarabic'] = 0x0646;\n  t['noonfinalarabic'] = 0xFEE6;\n  t['noonghunnaarabic'] = 0x06BA;\n  t['noonghunnafinalarabic'] = 0xFB9F;\n  t['nooninitialarabic'] = 0xFEE7;\n  t['noonjeeminitialarabic'] = 0xFCD2;\n  t['noonjeemisolatedarabic'] = 0xFC4B;\n  t['noonmedialarabic'] = 0xFEE8;\n  t['noonmeeminitialarabic'] = 0xFCD5;\n  t['noonmeemisolatedarabic'] = 0xFC4E;\n  t['noonnoonfinalarabic'] = 0xFC8D;\n  t['notcontains'] = 0x220C;\n  t['notelement'] = 0x2209;\n  t['notelementof'] = 0x2209;\n  t['notequal'] = 0x2260;\n  t['notgreater'] = 0x226F;\n  t['notgreaternorequal'] = 0x2271;\n  t['notgreaternorless'] = 0x2279;\n  t['notidentical'] = 0x2262;\n  t['notless'] = 0x226E;\n  t['notlessnorequal'] = 0x2270;\n  t['notparallel'] = 0x2226;\n  t['notprecedes'] = 0x2280;\n  t['notsubset'] = 0x2284;\n  t['notsucceeds'] = 0x2281;\n  t['notsuperset'] = 0x2285;\n  t['nowarmenian'] = 0x0576;\n  t['nparen'] = 0x24A9;\n  t['nssquare'] = 0x33B1;\n  t['nsuperior'] = 0x207F;\n  t['ntilde'] = 0x00F1;\n  t['nu'] = 0x03BD;\n  t['nuhiragana'] = 0x306C;\n  t['nukatakana'] = 0x30CC;\n  t['nukatakanahalfwidth'] = 0xFF87;\n  t['nuktabengali'] = 0x09BC;\n  t['nuktadeva'] = 0x093C;\n  t['nuktagujarati'] = 0x0ABC;\n  t['nuktagurmukhi'] = 0x0A3C;\n  t['numbersign'] = 0x0023;\n  t['numbersignmonospace'] = 0xFF03;\n  t['numbersignsmall'] = 0xFE5F;\n  t['numeralsigngreek'] = 0x0374;\n  t['numeralsignlowergreek'] = 0x0375;\n  t['numero'] = 0x2116;\n  t['nun'] = 0x05E0;\n  t['nundagesh'] = 0xFB40;\n  t['nundageshhebrew'] = 0xFB40;\n  t['nunhebrew'] = 0x05E0;\n  t['nvsquare'] = 0x33B5;\n  t['nwsquare'] = 0x33BB;\n  t['nyabengali'] = 0x099E;\n  t['nyadeva'] = 0x091E;\n  t['nyagujarati'] = 0x0A9E;\n  t['nyagurmukhi'] = 0x0A1E;\n  t['o'] = 0x006F;\n  t['oacute'] = 0x00F3;\n  t['oangthai'] = 0x0E2D;\n  t['obarred'] = 0x0275;\n  t['obarredcyrillic'] = 0x04E9;\n  t['obarreddieresiscyrillic'] = 0x04EB;\n  t['obengali'] = 0x0993;\n  t['obopomofo'] = 0x311B;\n  t['obreve'] = 0x014F;\n  t['ocandradeva'] = 0x0911;\n  t['ocandragujarati'] = 0x0A91;\n  t['ocandravowelsigndeva'] = 0x0949;\n  t['ocandravowelsigngujarati'] = 0x0AC9;\n  t['ocaron'] = 0x01D2;\n  t['ocircle'] = 0x24DE;\n  t['ocircumflex'] = 0x00F4;\n  t['ocircumflexacute'] = 0x1ED1;\n  t['ocircumflexdotbelow'] = 0x1ED9;\n  t['ocircumflexgrave'] = 0x1ED3;\n  t['ocircumflexhookabove'] = 0x1ED5;\n  t['ocircumflextilde'] = 0x1ED7;\n  t['ocyrillic'] = 0x043E;\n  t['odblacute'] = 0x0151;\n  t['odblgrave'] = 0x020D;\n  t['odeva'] = 0x0913;\n  t['odieresis'] = 0x00F6;\n  t['odieresiscyrillic'] = 0x04E7;\n  t['odotbelow'] = 0x1ECD;\n  t['oe'] = 0x0153;\n  t['oekorean'] = 0x315A;\n  t['ogonek'] = 0x02DB;\n  t['ogonekcmb'] = 0x0328;\n  t['ograve'] = 0x00F2;\n  t['ogujarati'] = 0x0A93;\n  t['oharmenian'] = 0x0585;\n  t['ohiragana'] = 0x304A;\n  t['ohookabove'] = 0x1ECF;\n  t['ohorn'] = 0x01A1;\n  t['ohornacute'] = 0x1EDB;\n  t['ohorndotbelow'] = 0x1EE3;\n  t['ohorngrave'] = 0x1EDD;\n  t['ohornhookabove'] = 0x1EDF;\n  t['ohorntilde'] = 0x1EE1;\n  t['ohungarumlaut'] = 0x0151;\n  t['oi'] = 0x01A3;\n  t['oinvertedbreve'] = 0x020F;\n  t['okatakana'] = 0x30AA;\n  t['okatakanahalfwidth'] = 0xFF75;\n  t['okorean'] = 0x3157;\n  t['olehebrew'] = 0x05AB;\n  t['omacron'] = 0x014D;\n  t['omacronacute'] = 0x1E53;\n  t['omacrongrave'] = 0x1E51;\n  t['omdeva'] = 0x0950;\n  t['omega'] = 0x03C9;\n  t['omega1'] = 0x03D6;\n  t['omegacyrillic'] = 0x0461;\n  t['omegalatinclosed'] = 0x0277;\n  t['omegaroundcyrillic'] = 0x047B;\n  t['omegatitlocyrillic'] = 0x047D;\n  t['omegatonos'] = 0x03CE;\n  t['omgujarati'] = 0x0AD0;\n  t['omicron'] = 0x03BF;\n  t['omicrontonos'] = 0x03CC;\n  t['omonospace'] = 0xFF4F;\n  t['one'] = 0x0031;\n  t['onearabic'] = 0x0661;\n  t['onebengali'] = 0x09E7;\n  t['onecircle'] = 0x2460;\n  t['onecircleinversesansserif'] = 0x278A;\n  t['onedeva'] = 0x0967;\n  t['onedotenleader'] = 0x2024;\n  t['oneeighth'] = 0x215B;\n  t['onefitted'] = 0xF6DC;\n  t['onegujarati'] = 0x0AE7;\n  t['onegurmukhi'] = 0x0A67;\n  t['onehackarabic'] = 0x0661;\n  t['onehalf'] = 0x00BD;\n  t['onehangzhou'] = 0x3021;\n  t['oneideographicparen'] = 0x3220;\n  t['oneinferior'] = 0x2081;\n  t['onemonospace'] = 0xFF11;\n  t['onenumeratorbengali'] = 0x09F4;\n  t['oneoldstyle'] = 0xF731;\n  t['oneparen'] = 0x2474;\n  t['oneperiod'] = 0x2488;\n  t['onepersian'] = 0x06F1;\n  t['onequarter'] = 0x00BC;\n  t['oneroman'] = 0x2170;\n  t['onesuperior'] = 0x00B9;\n  t['onethai'] = 0x0E51;\n  t['onethird'] = 0x2153;\n  t['oogonek'] = 0x01EB;\n  t['oogonekmacron'] = 0x01ED;\n  t['oogurmukhi'] = 0x0A13;\n  t['oomatragurmukhi'] = 0x0A4B;\n  t['oopen'] = 0x0254;\n  t['oparen'] = 0x24AA;\n  t['openbullet'] = 0x25E6;\n  t['option'] = 0x2325;\n  t['ordfeminine'] = 0x00AA;\n  t['ordmasculine'] = 0x00BA;\n  t['orthogonal'] = 0x221F;\n  t['oshortdeva'] = 0x0912;\n  t['oshortvowelsigndeva'] = 0x094A;\n  t['oslash'] = 0x00F8;\n  t['oslashacute'] = 0x01FF;\n  t['osmallhiragana'] = 0x3049;\n  t['osmallkatakana'] = 0x30A9;\n  t['osmallkatakanahalfwidth'] = 0xFF6B;\n  t['ostrokeacute'] = 0x01FF;\n  t['osuperior'] = 0xF6F0;\n  t['otcyrillic'] = 0x047F;\n  t['otilde'] = 0x00F5;\n  t['otildeacute'] = 0x1E4D;\n  t['otildedieresis'] = 0x1E4F;\n  t['oubopomofo'] = 0x3121;\n  t['overline'] = 0x203E;\n  t['overlinecenterline'] = 0xFE4A;\n  t['overlinecmb'] = 0x0305;\n  t['overlinedashed'] = 0xFE49;\n  t['overlinedblwavy'] = 0xFE4C;\n  t['overlinewavy'] = 0xFE4B;\n  t['overscore'] = 0x00AF;\n  t['ovowelsignbengali'] = 0x09CB;\n  t['ovowelsigndeva'] = 0x094B;\n  t['ovowelsigngujarati'] = 0x0ACB;\n  t['p'] = 0x0070;\n  t['paampssquare'] = 0x3380;\n  t['paasentosquare'] = 0x332B;\n  t['pabengali'] = 0x09AA;\n  t['pacute'] = 0x1E55;\n  t['padeva'] = 0x092A;\n  t['pagedown'] = 0x21DF;\n  t['pageup'] = 0x21DE;\n  t['pagujarati'] = 0x0AAA;\n  t['pagurmukhi'] = 0x0A2A;\n  t['pahiragana'] = 0x3071;\n  t['paiyannoithai'] = 0x0E2F;\n  t['pakatakana'] = 0x30D1;\n  t['palatalizationcyrilliccmb'] = 0x0484;\n  t['palochkacyrillic'] = 0x04C0;\n  t['pansioskorean'] = 0x317F;\n  t['paragraph'] = 0x00B6;\n  t['parallel'] = 0x2225;\n  t['parenleft'] = 0x0028;\n  t['parenleftaltonearabic'] = 0xFD3E;\n  t['parenleftbt'] = 0xF8ED;\n  t['parenleftex'] = 0xF8EC;\n  t['parenleftinferior'] = 0x208D;\n  t['parenleftmonospace'] = 0xFF08;\n  t['parenleftsmall'] = 0xFE59;\n  t['parenleftsuperior'] = 0x207D;\n  t['parenlefttp'] = 0xF8EB;\n  t['parenleftvertical'] = 0xFE35;\n  t['parenright'] = 0x0029;\n  t['parenrightaltonearabic'] = 0xFD3F;\n  t['parenrightbt'] = 0xF8F8;\n  t['parenrightex'] = 0xF8F7;\n  t['parenrightinferior'] = 0x208E;\n  t['parenrightmonospace'] = 0xFF09;\n  t['parenrightsmall'] = 0xFE5A;\n  t['parenrightsuperior'] = 0x207E;\n  t['parenrighttp'] = 0xF8F6;\n  t['parenrightvertical'] = 0xFE36;\n  t['partialdiff'] = 0x2202;\n  t['paseqhebrew'] = 0x05C0;\n  t['pashtahebrew'] = 0x0599;\n  t['pasquare'] = 0x33A9;\n  t['patah'] = 0x05B7;\n  t['patah11'] = 0x05B7;\n  t['patah1d'] = 0x05B7;\n  t['patah2a'] = 0x05B7;\n  t['patahhebrew'] = 0x05B7;\n  t['patahnarrowhebrew'] = 0x05B7;\n  t['patahquarterhebrew'] = 0x05B7;\n  t['patahwidehebrew'] = 0x05B7;\n  t['pazerhebrew'] = 0x05A1;\n  t['pbopomofo'] = 0x3106;\n  t['pcircle'] = 0x24DF;\n  t['pdotaccent'] = 0x1E57;\n  t['pe'] = 0x05E4;\n  t['pecyrillic'] = 0x043F;\n  t['pedagesh'] = 0xFB44;\n  t['pedageshhebrew'] = 0xFB44;\n  t['peezisquare'] = 0x333B;\n  t['pefinaldageshhebrew'] = 0xFB43;\n  t['peharabic'] = 0x067E;\n  t['peharmenian'] = 0x057A;\n  t['pehebrew'] = 0x05E4;\n  t['pehfinalarabic'] = 0xFB57;\n  t['pehinitialarabic'] = 0xFB58;\n  t['pehiragana'] = 0x307A;\n  t['pehmedialarabic'] = 0xFB59;\n  t['pekatakana'] = 0x30DA;\n  t['pemiddlehookcyrillic'] = 0x04A7;\n  t['perafehebrew'] = 0xFB4E;\n  t['percent'] = 0x0025;\n  t['percentarabic'] = 0x066A;\n  t['percentmonospace'] = 0xFF05;\n  t['percentsmall'] = 0xFE6A;\n  t['period'] = 0x002E;\n  t['periodarmenian'] = 0x0589;\n  t['periodcentered'] = 0x00B7;\n  t['periodhalfwidth'] = 0xFF61;\n  t['periodinferior'] = 0xF6E7;\n  t['periodmonospace'] = 0xFF0E;\n  t['periodsmall'] = 0xFE52;\n  t['periodsuperior'] = 0xF6E8;\n  t['perispomenigreekcmb'] = 0x0342;\n  t['perpendicular'] = 0x22A5;\n  t['perthousand'] = 0x2030;\n  t['peseta'] = 0x20A7;\n  t['pfsquare'] = 0x338A;\n  t['phabengali'] = 0x09AB;\n  t['phadeva'] = 0x092B;\n  t['phagujarati'] = 0x0AAB;\n  t['phagurmukhi'] = 0x0A2B;\n  t['phi'] = 0x03C6;\n  t['phi1'] = 0x03D5;\n  t['phieuphacirclekorean'] = 0x327A;\n  t['phieuphaparenkorean'] = 0x321A;\n  t['phieuphcirclekorean'] = 0x326C;\n  t['phieuphkorean'] = 0x314D;\n  t['phieuphparenkorean'] = 0x320C;\n  t['philatin'] = 0x0278;\n  t['phinthuthai'] = 0x0E3A;\n  t['phisymbolgreek'] = 0x03D5;\n  t['phook'] = 0x01A5;\n  t['phophanthai'] = 0x0E1E;\n  t['phophungthai'] = 0x0E1C;\n  t['phosamphaothai'] = 0x0E20;\n  t['pi'] = 0x03C0;\n  t['pieupacirclekorean'] = 0x3273;\n  t['pieupaparenkorean'] = 0x3213;\n  t['pieupcieuckorean'] = 0x3176;\n  t['pieupcirclekorean'] = 0x3265;\n  t['pieupkiyeokkorean'] = 0x3172;\n  t['pieupkorean'] = 0x3142;\n  t['pieupparenkorean'] = 0x3205;\n  t['pieupsioskiyeokkorean'] = 0x3174;\n  t['pieupsioskorean'] = 0x3144;\n  t['pieupsiostikeutkorean'] = 0x3175;\n  t['pieupthieuthkorean'] = 0x3177;\n  t['pieuptikeutkorean'] = 0x3173;\n  t['pihiragana'] = 0x3074;\n  t['pikatakana'] = 0x30D4;\n  t['pisymbolgreek'] = 0x03D6;\n  t['piwrarmenian'] = 0x0583;\n  t['plus'] = 0x002B;\n  t['plusbelowcmb'] = 0x031F;\n  t['pluscircle'] = 0x2295;\n  t['plusminus'] = 0x00B1;\n  t['plusmod'] = 0x02D6;\n  t['plusmonospace'] = 0xFF0B;\n  t['plussmall'] = 0xFE62;\n  t['plussuperior'] = 0x207A;\n  t['pmonospace'] = 0xFF50;\n  t['pmsquare'] = 0x33D8;\n  t['pohiragana'] = 0x307D;\n  t['pointingindexdownwhite'] = 0x261F;\n  t['pointingindexleftwhite'] = 0x261C;\n  t['pointingindexrightwhite'] = 0x261E;\n  t['pointingindexupwhite'] = 0x261D;\n  t['pokatakana'] = 0x30DD;\n  t['poplathai'] = 0x0E1B;\n  t['postalmark'] = 0x3012;\n  t['postalmarkface'] = 0x3020;\n  t['pparen'] = 0x24AB;\n  t['precedes'] = 0x227A;\n  t['prescription'] = 0x211E;\n  t['primemod'] = 0x02B9;\n  t['primereversed'] = 0x2035;\n  t['product'] = 0x220F;\n  t['projective'] = 0x2305;\n  t['prolongedkana'] = 0x30FC;\n  t['propellor'] = 0x2318;\n  t['propersubset'] = 0x2282;\n  t['propersuperset'] = 0x2283;\n  t['proportion'] = 0x2237;\n  t['proportional'] = 0x221D;\n  t['psi'] = 0x03C8;\n  t['psicyrillic'] = 0x0471;\n  t['psilipneumatacyrilliccmb'] = 0x0486;\n  t['pssquare'] = 0x33B0;\n  t['puhiragana'] = 0x3077;\n  t['pukatakana'] = 0x30D7;\n  t['pvsquare'] = 0x33B4;\n  t['pwsquare'] = 0x33BA;\n  t['q'] = 0x0071;\n  t['qadeva'] = 0x0958;\n  t['qadmahebrew'] = 0x05A8;\n  t['qafarabic'] = 0x0642;\n  t['qaffinalarabic'] = 0xFED6;\n  t['qafinitialarabic'] = 0xFED7;\n  t['qafmedialarabic'] = 0xFED8;\n  t['qamats'] = 0x05B8;\n  t['qamats10'] = 0x05B8;\n  t['qamats1a'] = 0x05B8;\n  t['qamats1c'] = 0x05B8;\n  t['qamats27'] = 0x05B8;\n  t['qamats29'] = 0x05B8;\n  t['qamats33'] = 0x05B8;\n  t['qamatsde'] = 0x05B8;\n  t['qamatshebrew'] = 0x05B8;\n  t['qamatsnarrowhebrew'] = 0x05B8;\n  t['qamatsqatanhebrew'] = 0x05B8;\n  t['qamatsqatannarrowhebrew'] = 0x05B8;\n  t['qamatsqatanquarterhebrew'] = 0x05B8;\n  t['qamatsqatanwidehebrew'] = 0x05B8;\n  t['qamatsquarterhebrew'] = 0x05B8;\n  t['qamatswidehebrew'] = 0x05B8;\n  t['qarneyparahebrew'] = 0x059F;\n  t['qbopomofo'] = 0x3111;\n  t['qcircle'] = 0x24E0;\n  t['qhook'] = 0x02A0;\n  t['qmonospace'] = 0xFF51;\n  t['qof'] = 0x05E7;\n  t['qofdagesh'] = 0xFB47;\n  t['qofdageshhebrew'] = 0xFB47;\n  t['qofhebrew'] = 0x05E7;\n  t['qparen'] = 0x24AC;\n  t['quarternote'] = 0x2669;\n  t['qubuts'] = 0x05BB;\n  t['qubuts18'] = 0x05BB;\n  t['qubuts25'] = 0x05BB;\n  t['qubuts31'] = 0x05BB;\n  t['qubutshebrew'] = 0x05BB;\n  t['qubutsnarrowhebrew'] = 0x05BB;\n  t['qubutsquarterhebrew'] = 0x05BB;\n  t['qubutswidehebrew'] = 0x05BB;\n  t['question'] = 0x003F;\n  t['questionarabic'] = 0x061F;\n  t['questionarmenian'] = 0x055E;\n  t['questiondown'] = 0x00BF;\n  t['questiondownsmall'] = 0xF7BF;\n  t['questiongreek'] = 0x037E;\n  t['questionmonospace'] = 0xFF1F;\n  t['questionsmall'] = 0xF73F;\n  t['quotedbl'] = 0x0022;\n  t['quotedblbase'] = 0x201E;\n  t['quotedblleft'] = 0x201C;\n  t['quotedblmonospace'] = 0xFF02;\n  t['quotedblprime'] = 0x301E;\n  t['quotedblprimereversed'] = 0x301D;\n  t['quotedblright'] = 0x201D;\n  t['quoteleft'] = 0x2018;\n  t['quoteleftreversed'] = 0x201B;\n  t['quotereversed'] = 0x201B;\n  t['quoteright'] = 0x2019;\n  t['quoterightn'] = 0x0149;\n  t['quotesinglbase'] = 0x201A;\n  t['quotesingle'] = 0x0027;\n  t['quotesinglemonospace'] = 0xFF07;\n  t['r'] = 0x0072;\n  t['raarmenian'] = 0x057C;\n  t['rabengali'] = 0x09B0;\n  t['racute'] = 0x0155;\n  t['radeva'] = 0x0930;\n  t['radical'] = 0x221A;\n  t['radicalex'] = 0xF8E5;\n  t['radoverssquare'] = 0x33AE;\n  t['radoverssquaredsquare'] = 0x33AF;\n  t['radsquare'] = 0x33AD;\n  t['rafe'] = 0x05BF;\n  t['rafehebrew'] = 0x05BF;\n  t['ragujarati'] = 0x0AB0;\n  t['ragurmukhi'] = 0x0A30;\n  t['rahiragana'] = 0x3089;\n  t['rakatakana'] = 0x30E9;\n  t['rakatakanahalfwidth'] = 0xFF97;\n  t['ralowerdiagonalbengali'] = 0x09F1;\n  t['ramiddlediagonalbengali'] = 0x09F0;\n  t['ramshorn'] = 0x0264;\n  t['ratio'] = 0x2236;\n  t['rbopomofo'] = 0x3116;\n  t['rcaron'] = 0x0159;\n  t['rcedilla'] = 0x0157;\n  t['rcircle'] = 0x24E1;\n  t['rcommaaccent'] = 0x0157;\n  t['rdblgrave'] = 0x0211;\n  t['rdotaccent'] = 0x1E59;\n  t['rdotbelow'] = 0x1E5B;\n  t['rdotbelowmacron'] = 0x1E5D;\n  t['referencemark'] = 0x203B;\n  t['reflexsubset'] = 0x2286;\n  t['reflexsuperset'] = 0x2287;\n  t['registered'] = 0x00AE;\n  t['registersans'] = 0xF8E8;\n  t['registerserif'] = 0xF6DA;\n  t['reharabic'] = 0x0631;\n  t['reharmenian'] = 0x0580;\n  t['rehfinalarabic'] = 0xFEAE;\n  t['rehiragana'] = 0x308C;\n  t['rekatakana'] = 0x30EC;\n  t['rekatakanahalfwidth'] = 0xFF9A;\n  t['resh'] = 0x05E8;\n  t['reshdageshhebrew'] = 0xFB48;\n  t['reshhebrew'] = 0x05E8;\n  t['reversedtilde'] = 0x223D;\n  t['reviahebrew'] = 0x0597;\n  t['reviamugrashhebrew'] = 0x0597;\n  t['revlogicalnot'] = 0x2310;\n  t['rfishhook'] = 0x027E;\n  t['rfishhookreversed'] = 0x027F;\n  t['rhabengali'] = 0x09DD;\n  t['rhadeva'] = 0x095D;\n  t['rho'] = 0x03C1;\n  t['rhook'] = 0x027D;\n  t['rhookturned'] = 0x027B;\n  t['rhookturnedsuperior'] = 0x02B5;\n  t['rhosymbolgreek'] = 0x03F1;\n  t['rhotichookmod'] = 0x02DE;\n  t['rieulacirclekorean'] = 0x3271;\n  t['rieulaparenkorean'] = 0x3211;\n  t['rieulcirclekorean'] = 0x3263;\n  t['rieulhieuhkorean'] = 0x3140;\n  t['rieulkiyeokkorean'] = 0x313A;\n  t['rieulkiyeoksioskorean'] = 0x3169;\n  t['rieulkorean'] = 0x3139;\n  t['rieulmieumkorean'] = 0x313B;\n  t['rieulpansioskorean'] = 0x316C;\n  t['rieulparenkorean'] = 0x3203;\n  t['rieulphieuphkorean'] = 0x313F;\n  t['rieulpieupkorean'] = 0x313C;\n  t['rieulpieupsioskorean'] = 0x316B;\n  t['rieulsioskorean'] = 0x313D;\n  t['rieulthieuthkorean'] = 0x313E;\n  t['rieultikeutkorean'] = 0x316A;\n  t['rieulyeorinhieuhkorean'] = 0x316D;\n  t['rightangle'] = 0x221F;\n  t['righttackbelowcmb'] = 0x0319;\n  t['righttriangle'] = 0x22BF;\n  t['rihiragana'] = 0x308A;\n  t['rikatakana'] = 0x30EA;\n  t['rikatakanahalfwidth'] = 0xFF98;\n  t['ring'] = 0x02DA;\n  t['ringbelowcmb'] = 0x0325;\n  t['ringcmb'] = 0x030A;\n  t['ringhalfleft'] = 0x02BF;\n  t['ringhalfleftarmenian'] = 0x0559;\n  t['ringhalfleftbelowcmb'] = 0x031C;\n  t['ringhalfleftcentered'] = 0x02D3;\n  t['ringhalfright'] = 0x02BE;\n  t['ringhalfrightbelowcmb'] = 0x0339;\n  t['ringhalfrightcentered'] = 0x02D2;\n  t['rinvertedbreve'] = 0x0213;\n  t['rittorusquare'] = 0x3351;\n  t['rlinebelow'] = 0x1E5F;\n  t['rlongleg'] = 0x027C;\n  t['rlonglegturned'] = 0x027A;\n  t['rmonospace'] = 0xFF52;\n  t['rohiragana'] = 0x308D;\n  t['rokatakana'] = 0x30ED;\n  t['rokatakanahalfwidth'] = 0xFF9B;\n  t['roruathai'] = 0x0E23;\n  t['rparen'] = 0x24AD;\n  t['rrabengali'] = 0x09DC;\n  t['rradeva'] = 0x0931;\n  t['rragurmukhi'] = 0x0A5C;\n  t['rreharabic'] = 0x0691;\n  t['rrehfinalarabic'] = 0xFB8D;\n  t['rrvocalicbengali'] = 0x09E0;\n  t['rrvocalicdeva'] = 0x0960;\n  t['rrvocalicgujarati'] = 0x0AE0;\n  t['rrvocalicvowelsignbengali'] = 0x09C4;\n  t['rrvocalicvowelsigndeva'] = 0x0944;\n  t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n  t['rsuperior'] = 0xF6F1;\n  t['rtblock'] = 0x2590;\n  t['rturned'] = 0x0279;\n  t['rturnedsuperior'] = 0x02B4;\n  t['ruhiragana'] = 0x308B;\n  t['rukatakana'] = 0x30EB;\n  t['rukatakanahalfwidth'] = 0xFF99;\n  t['rupeemarkbengali'] = 0x09F2;\n  t['rupeesignbengali'] = 0x09F3;\n  t['rupiah'] = 0xF6DD;\n  t['ruthai'] = 0x0E24;\n  t['rvocalicbengali'] = 0x098B;\n  t['rvocalicdeva'] = 0x090B;\n  t['rvocalicgujarati'] = 0x0A8B;\n  t['rvocalicvowelsignbengali'] = 0x09C3;\n  t['rvocalicvowelsigndeva'] = 0x0943;\n  t['rvocalicvowelsigngujarati'] = 0x0AC3;\n  t['s'] = 0x0073;\n  t['sabengali'] = 0x09B8;\n  t['sacute'] = 0x015B;\n  t['sacutedotaccent'] = 0x1E65;\n  t['sadarabic'] = 0x0635;\n  t['sadeva'] = 0x0938;\n  t['sadfinalarabic'] = 0xFEBA;\n  t['sadinitialarabic'] = 0xFEBB;\n  t['sadmedialarabic'] = 0xFEBC;\n  t['sagujarati'] = 0x0AB8;\n  t['sagurmukhi'] = 0x0A38;\n  t['sahiragana'] = 0x3055;\n  t['sakatakana'] = 0x30B5;\n  t['sakatakanahalfwidth'] = 0xFF7B;\n  t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n  t['samekh'] = 0x05E1;\n  t['samekhdagesh'] = 0xFB41;\n  t['samekhdageshhebrew'] = 0xFB41;\n  t['samekhhebrew'] = 0x05E1;\n  t['saraaathai'] = 0x0E32;\n  t['saraaethai'] = 0x0E41;\n  t['saraaimaimalaithai'] = 0x0E44;\n  t['saraaimaimuanthai'] = 0x0E43;\n  t['saraamthai'] = 0x0E33;\n  t['saraathai'] = 0x0E30;\n  t['saraethai'] = 0x0E40;\n  t['saraiileftthai'] = 0xF886;\n  t['saraiithai'] = 0x0E35;\n  t['saraileftthai'] = 0xF885;\n  t['saraithai'] = 0x0E34;\n  t['saraothai'] = 0x0E42;\n  t['saraueeleftthai'] = 0xF888;\n  t['saraueethai'] = 0x0E37;\n  t['saraueleftthai'] = 0xF887;\n  t['sarauethai'] = 0x0E36;\n  t['sarauthai'] = 0x0E38;\n  t['sarauuthai'] = 0x0E39;\n  t['sbopomofo'] = 0x3119;\n  t['scaron'] = 0x0161;\n  t['scarondotaccent'] = 0x1E67;\n  t['scedilla'] = 0x015F;\n  t['schwa'] = 0x0259;\n  t['schwacyrillic'] = 0x04D9;\n  t['schwadieresiscyrillic'] = 0x04DB;\n  t['schwahook'] = 0x025A;\n  t['scircle'] = 0x24E2;\n  t['scircumflex'] = 0x015D;\n  t['scommaaccent'] = 0x0219;\n  t['sdotaccent'] = 0x1E61;\n  t['sdotbelow'] = 0x1E63;\n  t['sdotbelowdotaccent'] = 0x1E69;\n  t['seagullbelowcmb'] = 0x033C;\n  t['second'] = 0x2033;\n  t['secondtonechinese'] = 0x02CA;\n  t['section'] = 0x00A7;\n  t['seenarabic'] = 0x0633;\n  t['seenfinalarabic'] = 0xFEB2;\n  t['seeninitialarabic'] = 0xFEB3;\n  t['seenmedialarabic'] = 0xFEB4;\n  t['segol'] = 0x05B6;\n  t['segol13'] = 0x05B6;\n  t['segol1f'] = 0x05B6;\n  t['segol2c'] = 0x05B6;\n  t['segolhebrew'] = 0x05B6;\n  t['segolnarrowhebrew'] = 0x05B6;\n  t['segolquarterhebrew'] = 0x05B6;\n  t['segoltahebrew'] = 0x0592;\n  t['segolwidehebrew'] = 0x05B6;\n  t['seharmenian'] = 0x057D;\n  t['sehiragana'] = 0x305B;\n  t['sekatakana'] = 0x30BB;\n  t['sekatakanahalfwidth'] = 0xFF7E;\n  t['semicolon'] = 0x003B;\n  t['semicolonarabic'] = 0x061B;\n  t['semicolonmonospace'] = 0xFF1B;\n  t['semicolonsmall'] = 0xFE54;\n  t['semivoicedmarkkana'] = 0x309C;\n  t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n  t['sentisquare'] = 0x3322;\n  t['sentosquare'] = 0x3323;\n  t['seven'] = 0x0037;\n  t['sevenarabic'] = 0x0667;\n  t['sevenbengali'] = 0x09ED;\n  t['sevencircle'] = 0x2466;\n  t['sevencircleinversesansserif'] = 0x2790;\n  t['sevendeva'] = 0x096D;\n  t['seveneighths'] = 0x215E;\n  t['sevengujarati'] = 0x0AED;\n  t['sevengurmukhi'] = 0x0A6D;\n  t['sevenhackarabic'] = 0x0667;\n  t['sevenhangzhou'] = 0x3027;\n  t['sevenideographicparen'] = 0x3226;\n  t['seveninferior'] = 0x2087;\n  t['sevenmonospace'] = 0xFF17;\n  t['sevenoldstyle'] = 0xF737;\n  t['sevenparen'] = 0x247A;\n  t['sevenperiod'] = 0x248E;\n  t['sevenpersian'] = 0x06F7;\n  t['sevenroman'] = 0x2176;\n  t['sevensuperior'] = 0x2077;\n  t['seventeencircle'] = 0x2470;\n  t['seventeenparen'] = 0x2484;\n  t['seventeenperiod'] = 0x2498;\n  t['seventhai'] = 0x0E57;\n  t['sfthyphen'] = 0x00AD;\n  t['shaarmenian'] = 0x0577;\n  t['shabengali'] = 0x09B6;\n  t['shacyrillic'] = 0x0448;\n  t['shaddaarabic'] = 0x0651;\n  t['shaddadammaarabic'] = 0xFC61;\n  t['shaddadammatanarabic'] = 0xFC5E;\n  t['shaddafathaarabic'] = 0xFC60;\n  t['shaddakasraarabic'] = 0xFC62;\n  t['shaddakasratanarabic'] = 0xFC5F;\n  t['shade'] = 0x2592;\n  t['shadedark'] = 0x2593;\n  t['shadelight'] = 0x2591;\n  t['shademedium'] = 0x2592;\n  t['shadeva'] = 0x0936;\n  t['shagujarati'] = 0x0AB6;\n  t['shagurmukhi'] = 0x0A36;\n  t['shalshelethebrew'] = 0x0593;\n  t['shbopomofo'] = 0x3115;\n  t['shchacyrillic'] = 0x0449;\n  t['sheenarabic'] = 0x0634;\n  t['sheenfinalarabic'] = 0xFEB6;\n  t['sheeninitialarabic'] = 0xFEB7;\n  t['sheenmedialarabic'] = 0xFEB8;\n  t['sheicoptic'] = 0x03E3;\n  t['sheqel'] = 0x20AA;\n  t['sheqelhebrew'] = 0x20AA;\n  t['sheva'] = 0x05B0;\n  t['sheva115'] = 0x05B0;\n  t['sheva15'] = 0x05B0;\n  t['sheva22'] = 0x05B0;\n  t['sheva2e'] = 0x05B0;\n  t['shevahebrew'] = 0x05B0;\n  t['shevanarrowhebrew'] = 0x05B0;\n  t['shevaquarterhebrew'] = 0x05B0;\n  t['shevawidehebrew'] = 0x05B0;\n  t['shhacyrillic'] = 0x04BB;\n  t['shimacoptic'] = 0x03ED;\n  t['shin'] = 0x05E9;\n  t['shindagesh'] = 0xFB49;\n  t['shindageshhebrew'] = 0xFB49;\n  t['shindageshshindot'] = 0xFB2C;\n  t['shindageshshindothebrew'] = 0xFB2C;\n  t['shindageshsindot'] = 0xFB2D;\n  t['shindageshsindothebrew'] = 0xFB2D;\n  t['shindothebrew'] = 0x05C1;\n  t['shinhebrew'] = 0x05E9;\n  t['shinshindot'] = 0xFB2A;\n  t['shinshindothebrew'] = 0xFB2A;\n  t['shinsindot'] = 0xFB2B;\n  t['shinsindothebrew'] = 0xFB2B;\n  t['shook'] = 0x0282;\n  t['sigma'] = 0x03C3;\n  t['sigma1'] = 0x03C2;\n  t['sigmafinal'] = 0x03C2;\n  t['sigmalunatesymbolgreek'] = 0x03F2;\n  t['sihiragana'] = 0x3057;\n  t['sikatakana'] = 0x30B7;\n  t['sikatakanahalfwidth'] = 0xFF7C;\n  t['siluqhebrew'] = 0x05BD;\n  t['siluqlefthebrew'] = 0x05BD;\n  t['similar'] = 0x223C;\n  t['sindothebrew'] = 0x05C2;\n  t['siosacirclekorean'] = 0x3274;\n  t['siosaparenkorean'] = 0x3214;\n  t['sioscieuckorean'] = 0x317E;\n  t['sioscirclekorean'] = 0x3266;\n  t['sioskiyeokkorean'] = 0x317A;\n  t['sioskorean'] = 0x3145;\n  t['siosnieunkorean'] = 0x317B;\n  t['siosparenkorean'] = 0x3206;\n  t['siospieupkorean'] = 0x317D;\n  t['siostikeutkorean'] = 0x317C;\n  t['six'] = 0x0036;\n  t['sixarabic'] = 0x0666;\n  t['sixbengali'] = 0x09EC;\n  t['sixcircle'] = 0x2465;\n  t['sixcircleinversesansserif'] = 0x278F;\n  t['sixdeva'] = 0x096C;\n  t['sixgujarati'] = 0x0AEC;\n  t['sixgurmukhi'] = 0x0A6C;\n  t['sixhackarabic'] = 0x0666;\n  t['sixhangzhou'] = 0x3026;\n  t['sixideographicparen'] = 0x3225;\n  t['sixinferior'] = 0x2086;\n  t['sixmonospace'] = 0xFF16;\n  t['sixoldstyle'] = 0xF736;\n  t['sixparen'] = 0x2479;\n  t['sixperiod'] = 0x248D;\n  t['sixpersian'] = 0x06F6;\n  t['sixroman'] = 0x2175;\n  t['sixsuperior'] = 0x2076;\n  t['sixteencircle'] = 0x246F;\n  t['sixteencurrencydenominatorbengali'] = 0x09F9;\n  t['sixteenparen'] = 0x2483;\n  t['sixteenperiod'] = 0x2497;\n  t['sixthai'] = 0x0E56;\n  t['slash'] = 0x002F;\n  t['slashmonospace'] = 0xFF0F;\n  t['slong'] = 0x017F;\n  t['slongdotaccent'] = 0x1E9B;\n  t['smileface'] = 0x263A;\n  t['smonospace'] = 0xFF53;\n  t['sofpasuqhebrew'] = 0x05C3;\n  t['softhyphen'] = 0x00AD;\n  t['softsigncyrillic'] = 0x044C;\n  t['sohiragana'] = 0x305D;\n  t['sokatakana'] = 0x30BD;\n  t['sokatakanahalfwidth'] = 0xFF7F;\n  t['soliduslongoverlaycmb'] = 0x0338;\n  t['solidusshortoverlaycmb'] = 0x0337;\n  t['sorusithai'] = 0x0E29;\n  t['sosalathai'] = 0x0E28;\n  t['sosothai'] = 0x0E0B;\n  t['sosuathai'] = 0x0E2A;\n  t['space'] = 0x0020;\n  t['spacehackarabic'] = 0x0020;\n  t['spade'] = 0x2660;\n  t['spadesuitblack'] = 0x2660;\n  t['spadesuitwhite'] = 0x2664;\n  t['sparen'] = 0x24AE;\n  t['squarebelowcmb'] = 0x033B;\n  t['squarecc'] = 0x33C4;\n  t['squarecm'] = 0x339D;\n  t['squarediagonalcrosshatchfill'] = 0x25A9;\n  t['squarehorizontalfill'] = 0x25A4;\n  t['squarekg'] = 0x338F;\n  t['squarekm'] = 0x339E;\n  t['squarekmcapital'] = 0x33CE;\n  t['squareln'] = 0x33D1;\n  t['squarelog'] = 0x33D2;\n  t['squaremg'] = 0x338E;\n  t['squaremil'] = 0x33D5;\n  t['squaremm'] = 0x339C;\n  t['squaremsquared'] = 0x33A1;\n  t['squareorthogonalcrosshatchfill'] = 0x25A6;\n  t['squareupperlefttolowerrightfill'] = 0x25A7;\n  t['squareupperrighttolowerleftfill'] = 0x25A8;\n  t['squareverticalfill'] = 0x25A5;\n  t['squarewhitewithsmallblack'] = 0x25A3;\n  t['srsquare'] = 0x33DB;\n  t['ssabengali'] = 0x09B7;\n  t['ssadeva'] = 0x0937;\n  t['ssagujarati'] = 0x0AB7;\n  t['ssangcieuckorean'] = 0x3149;\n  t['ssanghieuhkorean'] = 0x3185;\n  t['ssangieungkorean'] = 0x3180;\n  t['ssangkiyeokkorean'] = 0x3132;\n  t['ssangnieunkorean'] = 0x3165;\n  t['ssangpieupkorean'] = 0x3143;\n  t['ssangsioskorean'] = 0x3146;\n  t['ssangtikeutkorean'] = 0x3138;\n  t['ssuperior'] = 0xF6F2;\n  t['sterling'] = 0x00A3;\n  t['sterlingmonospace'] = 0xFFE1;\n  t['strokelongoverlaycmb'] = 0x0336;\n  t['strokeshortoverlaycmb'] = 0x0335;\n  t['subset'] = 0x2282;\n  t['subsetnotequal'] = 0x228A;\n  t['subsetorequal'] = 0x2286;\n  t['succeeds'] = 0x227B;\n  t['suchthat'] = 0x220B;\n  t['suhiragana'] = 0x3059;\n  t['sukatakana'] = 0x30B9;\n  t['sukatakanahalfwidth'] = 0xFF7D;\n  t['sukunarabic'] = 0x0652;\n  t['summation'] = 0x2211;\n  t['sun'] = 0x263C;\n  t['superset'] = 0x2283;\n  t['supersetnotequal'] = 0x228B;\n  t['supersetorequal'] = 0x2287;\n  t['svsquare'] = 0x33DC;\n  t['syouwaerasquare'] = 0x337C;\n  t['t'] = 0x0074;\n  t['tabengali'] = 0x09A4;\n  t['tackdown'] = 0x22A4;\n  t['tackleft'] = 0x22A3;\n  t['tadeva'] = 0x0924;\n  t['tagujarati'] = 0x0AA4;\n  t['tagurmukhi'] = 0x0A24;\n  t['taharabic'] = 0x0637;\n  t['tahfinalarabic'] = 0xFEC2;\n  t['tahinitialarabic'] = 0xFEC3;\n  t['tahiragana'] = 0x305F;\n  t['tahmedialarabic'] = 0xFEC4;\n  t['taisyouerasquare'] = 0x337D;\n  t['takatakana'] = 0x30BF;\n  t['takatakanahalfwidth'] = 0xFF80;\n  t['tatweelarabic'] = 0x0640;\n  t['tau'] = 0x03C4;\n  t['tav'] = 0x05EA;\n  t['tavdages'] = 0xFB4A;\n  t['tavdagesh'] = 0xFB4A;\n  t['tavdageshhebrew'] = 0xFB4A;\n  t['tavhebrew'] = 0x05EA;\n  t['tbar'] = 0x0167;\n  t['tbopomofo'] = 0x310A;\n  t['tcaron'] = 0x0165;\n  t['tccurl'] = 0x02A8;\n  t['tcedilla'] = 0x0163;\n  t['tcheharabic'] = 0x0686;\n  t['tchehfinalarabic'] = 0xFB7B;\n  t['tchehinitialarabic'] = 0xFB7C;\n  t['tchehmedialarabic'] = 0xFB7D;\n  t['tcircle'] = 0x24E3;\n  t['tcircumflexbelow'] = 0x1E71;\n  t['tcommaaccent'] = 0x0163;\n  t['tdieresis'] = 0x1E97;\n  t['tdotaccent'] = 0x1E6B;\n  t['tdotbelow'] = 0x1E6D;\n  t['tecyrillic'] = 0x0442;\n  t['tedescendercyrillic'] = 0x04AD;\n  t['teharabic'] = 0x062A;\n  t['tehfinalarabic'] = 0xFE96;\n  t['tehhahinitialarabic'] = 0xFCA2;\n  t['tehhahisolatedarabic'] = 0xFC0C;\n  t['tehinitialarabic'] = 0xFE97;\n  t['tehiragana'] = 0x3066;\n  t['tehjeeminitialarabic'] = 0xFCA1;\n  t['tehjeemisolatedarabic'] = 0xFC0B;\n  t['tehmarbutaarabic'] = 0x0629;\n  t['tehmarbutafinalarabic'] = 0xFE94;\n  t['tehmedialarabic'] = 0xFE98;\n  t['tehmeeminitialarabic'] = 0xFCA4;\n  t['tehmeemisolatedarabic'] = 0xFC0E;\n  t['tehnoonfinalarabic'] = 0xFC73;\n  t['tekatakana'] = 0x30C6;\n  t['tekatakanahalfwidth'] = 0xFF83;\n  t['telephone'] = 0x2121;\n  t['telephoneblack'] = 0x260E;\n  t['telishagedolahebrew'] = 0x05A0;\n  t['telishaqetanahebrew'] = 0x05A9;\n  t['tencircle'] = 0x2469;\n  t['tenideographicparen'] = 0x3229;\n  t['tenparen'] = 0x247D;\n  t['tenperiod'] = 0x2491;\n  t['tenroman'] = 0x2179;\n  t['tesh'] = 0x02A7;\n  t['tet'] = 0x05D8;\n  t['tetdagesh'] = 0xFB38;\n  t['tetdageshhebrew'] = 0xFB38;\n  t['tethebrew'] = 0x05D8;\n  t['tetsecyrillic'] = 0x04B5;\n  t['tevirhebrew'] = 0x059B;\n  t['tevirlefthebrew'] = 0x059B;\n  t['thabengali'] = 0x09A5;\n  t['thadeva'] = 0x0925;\n  t['thagujarati'] = 0x0AA5;\n  t['thagurmukhi'] = 0x0A25;\n  t['thalarabic'] = 0x0630;\n  t['thalfinalarabic'] = 0xFEAC;\n  t['thanthakhatlowleftthai'] = 0xF898;\n  t['thanthakhatlowrightthai'] = 0xF897;\n  t['thanthakhatthai'] = 0x0E4C;\n  t['thanthakhatupperleftthai'] = 0xF896;\n  t['theharabic'] = 0x062B;\n  t['thehfinalarabic'] = 0xFE9A;\n  t['thehinitialarabic'] = 0xFE9B;\n  t['thehmedialarabic'] = 0xFE9C;\n  t['thereexists'] = 0x2203;\n  t['therefore'] = 0x2234;\n  t['theta'] = 0x03B8;\n  t['theta1'] = 0x03D1;\n  t['thetasymbolgreek'] = 0x03D1;\n  t['thieuthacirclekorean'] = 0x3279;\n  t['thieuthaparenkorean'] = 0x3219;\n  t['thieuthcirclekorean'] = 0x326B;\n  t['thieuthkorean'] = 0x314C;\n  t['thieuthparenkorean'] = 0x320B;\n  t['thirteencircle'] = 0x246C;\n  t['thirteenparen'] = 0x2480;\n  t['thirteenperiod'] = 0x2494;\n  t['thonangmonthothai'] = 0x0E11;\n  t['thook'] = 0x01AD;\n  t['thophuthaothai'] = 0x0E12;\n  t['thorn'] = 0x00FE;\n  t['thothahanthai'] = 0x0E17;\n  t['thothanthai'] = 0x0E10;\n  t['thothongthai'] = 0x0E18;\n  t['thothungthai'] = 0x0E16;\n  t['thousandcyrillic'] = 0x0482;\n  t['thousandsseparatorarabic'] = 0x066C;\n  t['thousandsseparatorpersian'] = 0x066C;\n  t['three'] = 0x0033;\n  t['threearabic'] = 0x0663;\n  t['threebengali'] = 0x09E9;\n  t['threecircle'] = 0x2462;\n  t['threecircleinversesansserif'] = 0x278C;\n  t['threedeva'] = 0x0969;\n  t['threeeighths'] = 0x215C;\n  t['threegujarati'] = 0x0AE9;\n  t['threegurmukhi'] = 0x0A69;\n  t['threehackarabic'] = 0x0663;\n  t['threehangzhou'] = 0x3023;\n  t['threeideographicparen'] = 0x3222;\n  t['threeinferior'] = 0x2083;\n  t['threemonospace'] = 0xFF13;\n  t['threenumeratorbengali'] = 0x09F6;\n  t['threeoldstyle'] = 0xF733;\n  t['threeparen'] = 0x2476;\n  t['threeperiod'] = 0x248A;\n  t['threepersian'] = 0x06F3;\n  t['threequarters'] = 0x00BE;\n  t['threequartersemdash'] = 0xF6DE;\n  t['threeroman'] = 0x2172;\n  t['threesuperior'] = 0x00B3;\n  t['threethai'] = 0x0E53;\n  t['thzsquare'] = 0x3394;\n  t['tihiragana'] = 0x3061;\n  t['tikatakana'] = 0x30C1;\n  t['tikatakanahalfwidth'] = 0xFF81;\n  t['tikeutacirclekorean'] = 0x3270;\n  t['tikeutaparenkorean'] = 0x3210;\n  t['tikeutcirclekorean'] = 0x3262;\n  t['tikeutkorean'] = 0x3137;\n  t['tikeutparenkorean'] = 0x3202;\n  t['tilde'] = 0x02DC;\n  t['tildebelowcmb'] = 0x0330;\n  t['tildecmb'] = 0x0303;\n  t['tildecomb'] = 0x0303;\n  t['tildedoublecmb'] = 0x0360;\n  t['tildeoperator'] = 0x223C;\n  t['tildeoverlaycmb'] = 0x0334;\n  t['tildeverticalcmb'] = 0x033E;\n  t['timescircle'] = 0x2297;\n  t['tipehahebrew'] = 0x0596;\n  t['tipehalefthebrew'] = 0x0596;\n  t['tippigurmukhi'] = 0x0A70;\n  t['titlocyrilliccmb'] = 0x0483;\n  t['tiwnarmenian'] = 0x057F;\n  t['tlinebelow'] = 0x1E6F;\n  t['tmonospace'] = 0xFF54;\n  t['toarmenian'] = 0x0569;\n  t['tohiragana'] = 0x3068;\n  t['tokatakana'] = 0x30C8;\n  t['tokatakanahalfwidth'] = 0xFF84;\n  t['tonebarextrahighmod'] = 0x02E5;\n  t['tonebarextralowmod'] = 0x02E9;\n  t['tonebarhighmod'] = 0x02E6;\n  t['tonebarlowmod'] = 0x02E8;\n  t['tonebarmidmod'] = 0x02E7;\n  t['tonefive'] = 0x01BD;\n  t['tonesix'] = 0x0185;\n  t['tonetwo'] = 0x01A8;\n  t['tonos'] = 0x0384;\n  t['tonsquare'] = 0x3327;\n  t['topatakthai'] = 0x0E0F;\n  t['tortoiseshellbracketleft'] = 0x3014;\n  t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n  t['tortoiseshellbracketleftvertical'] = 0xFE39;\n  t['tortoiseshellbracketright'] = 0x3015;\n  t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n  t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n  t['totaothai'] = 0x0E15;\n  t['tpalatalhook'] = 0x01AB;\n  t['tparen'] = 0x24AF;\n  t['trademark'] = 0x2122;\n  t['trademarksans'] = 0xF8EA;\n  t['trademarkserif'] = 0xF6DB;\n  t['tretroflexhook'] = 0x0288;\n  t['triagdn'] = 0x25BC;\n  t['triaglf'] = 0x25C4;\n  t['triagrt'] = 0x25BA;\n  t['triagup'] = 0x25B2;\n  t['ts'] = 0x02A6;\n  t['tsadi'] = 0x05E6;\n  t['tsadidagesh'] = 0xFB46;\n  t['tsadidageshhebrew'] = 0xFB46;\n  t['tsadihebrew'] = 0x05E6;\n  t['tsecyrillic'] = 0x0446;\n  t['tsere'] = 0x05B5;\n  t['tsere12'] = 0x05B5;\n  t['tsere1e'] = 0x05B5;\n  t['tsere2b'] = 0x05B5;\n  t['tserehebrew'] = 0x05B5;\n  t['tserenarrowhebrew'] = 0x05B5;\n  t['tserequarterhebrew'] = 0x05B5;\n  t['tserewidehebrew'] = 0x05B5;\n  t['tshecyrillic'] = 0x045B;\n  t['tsuperior'] = 0xF6F3;\n  t['ttabengali'] = 0x099F;\n  t['ttadeva'] = 0x091F;\n  t['ttagujarati'] = 0x0A9F;\n  t['ttagurmukhi'] = 0x0A1F;\n  t['tteharabic'] = 0x0679;\n  t['ttehfinalarabic'] = 0xFB67;\n  t['ttehinitialarabic'] = 0xFB68;\n  t['ttehmedialarabic'] = 0xFB69;\n  t['tthabengali'] = 0x09A0;\n  t['tthadeva'] = 0x0920;\n  t['tthagujarati'] = 0x0AA0;\n  t['tthagurmukhi'] = 0x0A20;\n  t['tturned'] = 0x0287;\n  t['tuhiragana'] = 0x3064;\n  t['tukatakana'] = 0x30C4;\n  t['tukatakanahalfwidth'] = 0xFF82;\n  t['tusmallhiragana'] = 0x3063;\n  t['tusmallkatakana'] = 0x30C3;\n  t['tusmallkatakanahalfwidth'] = 0xFF6F;\n  t['twelvecircle'] = 0x246B;\n  t['twelveparen'] = 0x247F;\n  t['twelveperiod'] = 0x2493;\n  t['twelveroman'] = 0x217B;\n  t['twentycircle'] = 0x2473;\n  t['twentyhangzhou'] = 0x5344;\n  t['twentyparen'] = 0x2487;\n  t['twentyperiod'] = 0x249B;\n  t['two'] = 0x0032;\n  t['twoarabic'] = 0x0662;\n  t['twobengali'] = 0x09E8;\n  t['twocircle'] = 0x2461;\n  t['twocircleinversesansserif'] = 0x278B;\n  t['twodeva'] = 0x0968;\n  t['twodotenleader'] = 0x2025;\n  t['twodotleader'] = 0x2025;\n  t['twodotleadervertical'] = 0xFE30;\n  t['twogujarati'] = 0x0AE8;\n  t['twogurmukhi'] = 0x0A68;\n  t['twohackarabic'] = 0x0662;\n  t['twohangzhou'] = 0x3022;\n  t['twoideographicparen'] = 0x3221;\n  t['twoinferior'] = 0x2082;\n  t['twomonospace'] = 0xFF12;\n  t['twonumeratorbengali'] = 0x09F5;\n  t['twooldstyle'] = 0xF732;\n  t['twoparen'] = 0x2475;\n  t['twoperiod'] = 0x2489;\n  t['twopersian'] = 0x06F2;\n  t['tworoman'] = 0x2171;\n  t['twostroke'] = 0x01BB;\n  t['twosuperior'] = 0x00B2;\n  t['twothai'] = 0x0E52;\n  t['twothirds'] = 0x2154;\n  t['u'] = 0x0075;\n  t['uacute'] = 0x00FA;\n  t['ubar'] = 0x0289;\n  t['ubengali'] = 0x0989;\n  t['ubopomofo'] = 0x3128;\n  t['ubreve'] = 0x016D;\n  t['ucaron'] = 0x01D4;\n  t['ucircle'] = 0x24E4;\n  t['ucircumflex'] = 0x00FB;\n  t['ucircumflexbelow'] = 0x1E77;\n  t['ucyrillic'] = 0x0443;\n  t['udattadeva'] = 0x0951;\n  t['udblacute'] = 0x0171;\n  t['udblgrave'] = 0x0215;\n  t['udeva'] = 0x0909;\n  t['udieresis'] = 0x00FC;\n  t['udieresisacute'] = 0x01D8;\n  t['udieresisbelow'] = 0x1E73;\n  t['udieresiscaron'] = 0x01DA;\n  t['udieresiscyrillic'] = 0x04F1;\n  t['udieresisgrave'] = 0x01DC;\n  t['udieresismacron'] = 0x01D6;\n  t['udotbelow'] = 0x1EE5;\n  t['ugrave'] = 0x00F9;\n  t['ugujarati'] = 0x0A89;\n  t['ugurmukhi'] = 0x0A09;\n  t['uhiragana'] = 0x3046;\n  t['uhookabove'] = 0x1EE7;\n  t['uhorn'] = 0x01B0;\n  t['uhornacute'] = 0x1EE9;\n  t['uhorndotbelow'] = 0x1EF1;\n  t['uhorngrave'] = 0x1EEB;\n  t['uhornhookabove'] = 0x1EED;\n  t['uhorntilde'] = 0x1EEF;\n  t['uhungarumlaut'] = 0x0171;\n  t['uhungarumlautcyrillic'] = 0x04F3;\n  t['uinvertedbreve'] = 0x0217;\n  t['ukatakana'] = 0x30A6;\n  t['ukatakanahalfwidth'] = 0xFF73;\n  t['ukcyrillic'] = 0x0479;\n  t['ukorean'] = 0x315C;\n  t['umacron'] = 0x016B;\n  t['umacroncyrillic'] = 0x04EF;\n  t['umacrondieresis'] = 0x1E7B;\n  t['umatragurmukhi'] = 0x0A41;\n  t['umonospace'] = 0xFF55;\n  t['underscore'] = 0x005F;\n  t['underscoredbl'] = 0x2017;\n  t['underscoremonospace'] = 0xFF3F;\n  t['underscorevertical'] = 0xFE33;\n  t['underscorewavy'] = 0xFE4F;\n  t['union'] = 0x222A;\n  t['universal'] = 0x2200;\n  t['uogonek'] = 0x0173;\n  t['uparen'] = 0x24B0;\n  t['upblock'] = 0x2580;\n  t['upperdothebrew'] = 0x05C4;\n  t['upsilon'] = 0x03C5;\n  t['upsilondieresis'] = 0x03CB;\n  t['upsilondieresistonos'] = 0x03B0;\n  t['upsilonlatin'] = 0x028A;\n  t['upsilontonos'] = 0x03CD;\n  t['uptackbelowcmb'] = 0x031D;\n  t['uptackmod'] = 0x02D4;\n  t['uragurmukhi'] = 0x0A73;\n  t['uring'] = 0x016F;\n  t['ushortcyrillic'] = 0x045E;\n  t['usmallhiragana'] = 0x3045;\n  t['usmallkatakana'] = 0x30A5;\n  t['usmallkatakanahalfwidth'] = 0xFF69;\n  t['ustraightcyrillic'] = 0x04AF;\n  t['ustraightstrokecyrillic'] = 0x04B1;\n  t['utilde'] = 0x0169;\n  t['utildeacute'] = 0x1E79;\n  t['utildebelow'] = 0x1E75;\n  t['uubengali'] = 0x098A;\n  t['uudeva'] = 0x090A;\n  t['uugujarati'] = 0x0A8A;\n  t['uugurmukhi'] = 0x0A0A;\n  t['uumatragurmukhi'] = 0x0A42;\n  t['uuvowelsignbengali'] = 0x09C2;\n  t['uuvowelsigndeva'] = 0x0942;\n  t['uuvowelsigngujarati'] = 0x0AC2;\n  t['uvowelsignbengali'] = 0x09C1;\n  t['uvowelsigndeva'] = 0x0941;\n  t['uvowelsigngujarati'] = 0x0AC1;\n  t['v'] = 0x0076;\n  t['vadeva'] = 0x0935;\n  t['vagujarati'] = 0x0AB5;\n  t['vagurmukhi'] = 0x0A35;\n  t['vakatakana'] = 0x30F7;\n  t['vav'] = 0x05D5;\n  t['vavdagesh'] = 0xFB35;\n  t['vavdagesh65'] = 0xFB35;\n  t['vavdageshhebrew'] = 0xFB35;\n  t['vavhebrew'] = 0x05D5;\n  t['vavholam'] = 0xFB4B;\n  t['vavholamhebrew'] = 0xFB4B;\n  t['vavvavhebrew'] = 0x05F0;\n  t['vavyodhebrew'] = 0x05F1;\n  t['vcircle'] = 0x24E5;\n  t['vdotbelow'] = 0x1E7F;\n  t['vecyrillic'] = 0x0432;\n  t['veharabic'] = 0x06A4;\n  t['vehfinalarabic'] = 0xFB6B;\n  t['vehinitialarabic'] = 0xFB6C;\n  t['vehmedialarabic'] = 0xFB6D;\n  t['vekatakana'] = 0x30F9;\n  t['venus'] = 0x2640;\n  t['verticalbar'] = 0x007C;\n  t['verticallineabovecmb'] = 0x030D;\n  t['verticallinebelowcmb'] = 0x0329;\n  t['verticallinelowmod'] = 0x02CC;\n  t['verticallinemod'] = 0x02C8;\n  t['vewarmenian'] = 0x057E;\n  t['vhook'] = 0x028B;\n  t['vikatakana'] = 0x30F8;\n  t['viramabengali'] = 0x09CD;\n  t['viramadeva'] = 0x094D;\n  t['viramagujarati'] = 0x0ACD;\n  t['visargabengali'] = 0x0983;\n  t['visargadeva'] = 0x0903;\n  t['visargagujarati'] = 0x0A83;\n  t['vmonospace'] = 0xFF56;\n  t['voarmenian'] = 0x0578;\n  t['voicediterationhiragana'] = 0x309E;\n  t['voicediterationkatakana'] = 0x30FE;\n  t['voicedmarkkana'] = 0x309B;\n  t['voicedmarkkanahalfwidth'] = 0xFF9E;\n  t['vokatakana'] = 0x30FA;\n  t['vparen'] = 0x24B1;\n  t['vtilde'] = 0x1E7D;\n  t['vturned'] = 0x028C;\n  t['vuhiragana'] = 0x3094;\n  t['vukatakana'] = 0x30F4;\n  t['w'] = 0x0077;\n  t['wacute'] = 0x1E83;\n  t['waekorean'] = 0x3159;\n  t['wahiragana'] = 0x308F;\n  t['wakatakana'] = 0x30EF;\n  t['wakatakanahalfwidth'] = 0xFF9C;\n  t['wakorean'] = 0x3158;\n  t['wasmallhiragana'] = 0x308E;\n  t['wasmallkatakana'] = 0x30EE;\n  t['wattosquare'] = 0x3357;\n  t['wavedash'] = 0x301C;\n  t['wavyunderscorevertical'] = 0xFE34;\n  t['wawarabic'] = 0x0648;\n  t['wawfinalarabic'] = 0xFEEE;\n  t['wawhamzaabovearabic'] = 0x0624;\n  t['wawhamzaabovefinalarabic'] = 0xFE86;\n  t['wbsquare'] = 0x33DD;\n  t['wcircle'] = 0x24E6;\n  t['wcircumflex'] = 0x0175;\n  t['wdieresis'] = 0x1E85;\n  t['wdotaccent'] = 0x1E87;\n  t['wdotbelow'] = 0x1E89;\n  t['wehiragana'] = 0x3091;\n  t['weierstrass'] = 0x2118;\n  t['wekatakana'] = 0x30F1;\n  t['wekorean'] = 0x315E;\n  t['weokorean'] = 0x315D;\n  t['wgrave'] = 0x1E81;\n  t['whitebullet'] = 0x25E6;\n  t['whitecircle'] = 0x25CB;\n  t['whitecircleinverse'] = 0x25D9;\n  t['whitecornerbracketleft'] = 0x300E;\n  t['whitecornerbracketleftvertical'] = 0xFE43;\n  t['whitecornerbracketright'] = 0x300F;\n  t['whitecornerbracketrightvertical'] = 0xFE44;\n  t['whitediamond'] = 0x25C7;\n  t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n  t['whitedownpointingsmalltriangle'] = 0x25BF;\n  t['whitedownpointingtriangle'] = 0x25BD;\n  t['whiteleftpointingsmalltriangle'] = 0x25C3;\n  t['whiteleftpointingtriangle'] = 0x25C1;\n  t['whitelenticularbracketleft'] = 0x3016;\n  t['whitelenticularbracketright'] = 0x3017;\n  t['whiterightpointingsmalltriangle'] = 0x25B9;\n  t['whiterightpointingtriangle'] = 0x25B7;\n  t['whitesmallsquare'] = 0x25AB;\n  t['whitesmilingface'] = 0x263A;\n  t['whitesquare'] = 0x25A1;\n  t['whitestar'] = 0x2606;\n  t['whitetelephone'] = 0x260F;\n  t['whitetortoiseshellbracketleft'] = 0x3018;\n  t['whitetortoiseshellbracketright'] = 0x3019;\n  t['whiteuppointingsmalltriangle'] = 0x25B5;\n  t['whiteuppointingtriangle'] = 0x25B3;\n  t['wihiragana'] = 0x3090;\n  t['wikatakana'] = 0x30F0;\n  t['wikorean'] = 0x315F;\n  t['wmonospace'] = 0xFF57;\n  t['wohiragana'] = 0x3092;\n  t['wokatakana'] = 0x30F2;\n  t['wokatakanahalfwidth'] = 0xFF66;\n  t['won'] = 0x20A9;\n  t['wonmonospace'] = 0xFFE6;\n  t['wowaenthai'] = 0x0E27;\n  t['wparen'] = 0x24B2;\n  t['wring'] = 0x1E98;\n  t['wsuperior'] = 0x02B7;\n  t['wturned'] = 0x028D;\n  t['wynn'] = 0x01BF;\n  t['x'] = 0x0078;\n  t['xabovecmb'] = 0x033D;\n  t['xbopomofo'] = 0x3112;\n  t['xcircle'] = 0x24E7;\n  t['xdieresis'] = 0x1E8D;\n  t['xdotaccent'] = 0x1E8B;\n  t['xeharmenian'] = 0x056D;\n  t['xi'] = 0x03BE;\n  t['xmonospace'] = 0xFF58;\n  t['xparen'] = 0x24B3;\n  t['xsuperior'] = 0x02E3;\n  t['y'] = 0x0079;\n  t['yaadosquare'] = 0x334E;\n  t['yabengali'] = 0x09AF;\n  t['yacute'] = 0x00FD;\n  t['yadeva'] = 0x092F;\n  t['yaekorean'] = 0x3152;\n  t['yagujarati'] = 0x0AAF;\n  t['yagurmukhi'] = 0x0A2F;\n  t['yahiragana'] = 0x3084;\n  t['yakatakana'] = 0x30E4;\n  t['yakatakanahalfwidth'] = 0xFF94;\n  t['yakorean'] = 0x3151;\n  t['yamakkanthai'] = 0x0E4E;\n  t['yasmallhiragana'] = 0x3083;\n  t['yasmallkatakana'] = 0x30E3;\n  t['yasmallkatakanahalfwidth'] = 0xFF6C;\n  t['yatcyrillic'] = 0x0463;\n  t['ycircle'] = 0x24E8;\n  t['ycircumflex'] = 0x0177;\n  t['ydieresis'] = 0x00FF;\n  t['ydotaccent'] = 0x1E8F;\n  t['ydotbelow'] = 0x1EF5;\n  t['yeharabic'] = 0x064A;\n  t['yehbarreearabic'] = 0x06D2;\n  t['yehbarreefinalarabic'] = 0xFBAF;\n  t['yehfinalarabic'] = 0xFEF2;\n  t['yehhamzaabovearabic'] = 0x0626;\n  t['yehhamzaabovefinalarabic'] = 0xFE8A;\n  t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n  t['yehhamzaabovemedialarabic'] = 0xFE8C;\n  t['yehinitialarabic'] = 0xFEF3;\n  t['yehmedialarabic'] = 0xFEF4;\n  t['yehmeeminitialarabic'] = 0xFCDD;\n  t['yehmeemisolatedarabic'] = 0xFC58;\n  t['yehnoonfinalarabic'] = 0xFC94;\n  t['yehthreedotsbelowarabic'] = 0x06D1;\n  t['yekorean'] = 0x3156;\n  t['yen'] = 0x00A5;\n  t['yenmonospace'] = 0xFFE5;\n  t['yeokorean'] = 0x3155;\n  t['yeorinhieuhkorean'] = 0x3186;\n  t['yerahbenyomohebrew'] = 0x05AA;\n  t['yerahbenyomolefthebrew'] = 0x05AA;\n  t['yericyrillic'] = 0x044B;\n  t['yerudieresiscyrillic'] = 0x04F9;\n  t['yesieungkorean'] = 0x3181;\n  t['yesieungpansioskorean'] = 0x3183;\n  t['yesieungsioskorean'] = 0x3182;\n  t['yetivhebrew'] = 0x059A;\n  t['ygrave'] = 0x1EF3;\n  t['yhook'] = 0x01B4;\n  t['yhookabove'] = 0x1EF7;\n  t['yiarmenian'] = 0x0575;\n  t['yicyrillic'] = 0x0457;\n  t['yikorean'] = 0x3162;\n  t['yinyang'] = 0x262F;\n  t['yiwnarmenian'] = 0x0582;\n  t['ymonospace'] = 0xFF59;\n  t['yod'] = 0x05D9;\n  t['yoddagesh'] = 0xFB39;\n  t['yoddageshhebrew'] = 0xFB39;\n  t['yodhebrew'] = 0x05D9;\n  t['yodyodhebrew'] = 0x05F2;\n  t['yodyodpatahhebrew'] = 0xFB1F;\n  t['yohiragana'] = 0x3088;\n  t['yoikorean'] = 0x3189;\n  t['yokatakana'] = 0x30E8;\n  t['yokatakanahalfwidth'] = 0xFF96;\n  t['yokorean'] = 0x315B;\n  t['yosmallhiragana'] = 0x3087;\n  t['yosmallkatakana'] = 0x30E7;\n  t['yosmallkatakanahalfwidth'] = 0xFF6E;\n  t['yotgreek'] = 0x03F3;\n  t['yoyaekorean'] = 0x3188;\n  t['yoyakorean'] = 0x3187;\n  t['yoyakthai'] = 0x0E22;\n  t['yoyingthai'] = 0x0E0D;\n  t['yparen'] = 0x24B4;\n  t['ypogegrammeni'] = 0x037A;\n  t['ypogegrammenigreekcmb'] = 0x0345;\n  t['yr'] = 0x01A6;\n  t['yring'] = 0x1E99;\n  t['ysuperior'] = 0x02B8;\n  t['ytilde'] = 0x1EF9;\n  t['yturned'] = 0x028E;\n  t['yuhiragana'] = 0x3086;\n  t['yuikorean'] = 0x318C;\n  t['yukatakana'] = 0x30E6;\n  t['yukatakanahalfwidth'] = 0xFF95;\n  t['yukorean'] = 0x3160;\n  t['yusbigcyrillic'] = 0x046B;\n  t['yusbigiotifiedcyrillic'] = 0x046D;\n  t['yuslittlecyrillic'] = 0x0467;\n  t['yuslittleiotifiedcyrillic'] = 0x0469;\n  t['yusmallhiragana'] = 0x3085;\n  t['yusmallkatakana'] = 0x30E5;\n  t['yusmallkatakanahalfwidth'] = 0xFF6D;\n  t['yuyekorean'] = 0x318B;\n  t['yuyeokorean'] = 0x318A;\n  t['yyabengali'] = 0x09DF;\n  t['yyadeva'] = 0x095F;\n  t['z'] = 0x007A;\n  t['zaarmenian'] = 0x0566;\n  t['zacute'] = 0x017A;\n  t['zadeva'] = 0x095B;\n  t['zagurmukhi'] = 0x0A5B;\n  t['zaharabic'] = 0x0638;\n  t['zahfinalarabic'] = 0xFEC6;\n  t['zahinitialarabic'] = 0xFEC7;\n  t['zahiragana'] = 0x3056;\n  t['zahmedialarabic'] = 0xFEC8;\n  t['zainarabic'] = 0x0632;\n  t['zainfinalarabic'] = 0xFEB0;\n  t['zakatakana'] = 0x30B6;\n  t['zaqefgadolhebrew'] = 0x0595;\n  t['zaqefqatanhebrew'] = 0x0594;\n  t['zarqahebrew'] = 0x0598;\n  t['zayin'] = 0x05D6;\n  t['zayindagesh'] = 0xFB36;\n  t['zayindageshhebrew'] = 0xFB36;\n  t['zayinhebrew'] = 0x05D6;\n  t['zbopomofo'] = 0x3117;\n  t['zcaron'] = 0x017E;\n  t['zcircle'] = 0x24E9;\n  t['zcircumflex'] = 0x1E91;\n  t['zcurl'] = 0x0291;\n  t['zdot'] = 0x017C;\n  t['zdotaccent'] = 0x017C;\n  t['zdotbelow'] = 0x1E93;\n  t['zecyrillic'] = 0x0437;\n  t['zedescendercyrillic'] = 0x0499;\n  t['zedieresiscyrillic'] = 0x04DF;\n  t['zehiragana'] = 0x305C;\n  t['zekatakana'] = 0x30BC;\n  t['zero'] = 0x0030;\n  t['zeroarabic'] = 0x0660;\n  t['zerobengali'] = 0x09E6;\n  t['zerodeva'] = 0x0966;\n  t['zerogujarati'] = 0x0AE6;\n  t['zerogurmukhi'] = 0x0A66;\n  t['zerohackarabic'] = 0x0660;\n  t['zeroinferior'] = 0x2080;\n  t['zeromonospace'] = 0xFF10;\n  t['zerooldstyle'] = 0xF730;\n  t['zeropersian'] = 0x06F0;\n  t['zerosuperior'] = 0x2070;\n  t['zerothai'] = 0x0E50;\n  t['zerowidthjoiner'] = 0xFEFF;\n  t['zerowidthnonjoiner'] = 0x200C;\n  t['zerowidthspace'] = 0x200B;\n  t['zeta'] = 0x03B6;\n  t['zhbopomofo'] = 0x3113;\n  t['zhearmenian'] = 0x056A;\n  t['zhebrevecyrillic'] = 0x04C2;\n  t['zhecyrillic'] = 0x0436;\n  t['zhedescendercyrillic'] = 0x0497;\n  t['zhedieresiscyrillic'] = 0x04DD;\n  t['zihiragana'] = 0x3058;\n  t['zikatakana'] = 0x30B8;\n  t['zinorhebrew'] = 0x05AE;\n  t['zlinebelow'] = 0x1E95;\n  t['zmonospace'] = 0xFF5A;\n  t['zohiragana'] = 0x305E;\n  t['zokatakana'] = 0x30BE;\n  t['zparen'] = 0x24B5;\n  t['zretroflexhook'] = 0x0290;\n  t['zstroke'] = 0x01B6;\n  t['zuhiragana'] = 0x305A;\n  t['zukatakana'] = 0x30BA;\n  t['.notdef'] = 0x0000;\n  t['angbracketleftbig'] = 0x2329;\n  t['angbracketleftBig'] = 0x2329;\n  t['angbracketleftbigg'] = 0x2329;\n  t['angbracketleftBigg'] = 0x2329;\n  t['angbracketrightBig'] = 0x232A;\n  t['angbracketrightbig'] = 0x232A;\n  t['angbracketrightBigg'] = 0x232A;\n  t['angbracketrightbigg'] = 0x232A;\n  t['arrowhookleft'] = 0x21AA;\n  t['arrowhookright'] = 0x21A9;\n  t['arrowlefttophalf'] = 0x21BC;\n  t['arrowleftbothalf'] = 0x21BD;\n  t['arrownortheast'] = 0x2197;\n  t['arrownorthwest'] = 0x2196;\n  t['arrowrighttophalf'] = 0x21C0;\n  t['arrowrightbothalf'] = 0x21C1;\n  t['arrowsoutheast'] = 0x2198;\n  t['arrowsouthwest'] = 0x2199;\n  t['backslashbig'] = 0x2216;\n  t['backslashBig'] = 0x2216;\n  t['backslashBigg'] = 0x2216;\n  t['backslashbigg'] = 0x2216;\n  t['bardbl'] = 0x2016;\n  t['bracehtipdownleft'] = 0xFE37;\n  t['bracehtipdownright'] = 0xFE37;\n  t['bracehtipupleft'] = 0xFE38;\n  t['bracehtipupright'] = 0xFE38;\n  t['braceleftBig'] = 0x007B;\n  t['braceleftbig'] = 0x007B;\n  t['braceleftbigg'] = 0x007B;\n  t['braceleftBigg'] = 0x007B;\n  t['bracerightBig'] = 0x007D;\n  t['bracerightbig'] = 0x007D;\n  t['bracerightbigg'] = 0x007D;\n  t['bracerightBigg'] = 0x007D;\n  t['bracketleftbig'] = 0x005B;\n  t['bracketleftBig'] = 0x005B;\n  t['bracketleftbigg'] = 0x005B;\n  t['bracketleftBigg'] = 0x005B;\n  t['bracketrightBig'] = 0x005D;\n  t['bracketrightbig'] = 0x005D;\n  t['bracketrightbigg'] = 0x005D;\n  t['bracketrightBigg'] = 0x005D;\n  t['ceilingleftbig'] = 0x2308;\n  t['ceilingleftBig'] = 0x2308;\n  t['ceilingleftBigg'] = 0x2308;\n  t['ceilingleftbigg'] = 0x2308;\n  t['ceilingrightbig'] = 0x2309;\n  t['ceilingrightBig'] = 0x2309;\n  t['ceilingrightbigg'] = 0x2309;\n  t['ceilingrightBigg'] = 0x2309;\n  t['circledotdisplay'] = 0x2299;\n  t['circledottext'] = 0x2299;\n  t['circlemultiplydisplay'] = 0x2297;\n  t['circlemultiplytext'] = 0x2297;\n  t['circleplusdisplay'] = 0x2295;\n  t['circleplustext'] = 0x2295;\n  t['contintegraldisplay'] = 0x222E;\n  t['contintegraltext'] = 0x222E;\n  t['coproductdisplay'] = 0x2210;\n  t['coproducttext'] = 0x2210;\n  t['floorleftBig'] = 0x230A;\n  t['floorleftbig'] = 0x230A;\n  t['floorleftbigg'] = 0x230A;\n  t['floorleftBigg'] = 0x230A;\n  t['floorrightbig'] = 0x230B;\n  t['floorrightBig'] = 0x230B;\n  t['floorrightBigg'] = 0x230B;\n  t['floorrightbigg'] = 0x230B;\n  t['hatwide'] = 0x0302;\n  t['hatwider'] = 0x0302;\n  t['hatwidest'] = 0x0302;\n  t['intercal'] = 0x1D40;\n  t['integraldisplay'] = 0x222B;\n  t['integraltext'] = 0x222B;\n  t['intersectiondisplay'] = 0x22C2;\n  t['intersectiontext'] = 0x22C2;\n  t['logicalanddisplay'] = 0x2227;\n  t['logicalandtext'] = 0x2227;\n  t['logicalordisplay'] = 0x2228;\n  t['logicalortext'] = 0x2228;\n  t['parenleftBig'] = 0x0028;\n  t['parenleftbig'] = 0x0028;\n  t['parenleftBigg'] = 0x0028;\n  t['parenleftbigg'] = 0x0028;\n  t['parenrightBig'] = 0x0029;\n  t['parenrightbig'] = 0x0029;\n  t['parenrightBigg'] = 0x0029;\n  t['parenrightbigg'] = 0x0029;\n  t['prime'] = 0x2032;\n  t['productdisplay'] = 0x220F;\n  t['producttext'] = 0x220F;\n  t['radicalbig'] = 0x221A;\n  t['radicalBig'] = 0x221A;\n  t['radicalBigg'] = 0x221A;\n  t['radicalbigg'] = 0x221A;\n  t['radicalbt'] = 0x221A;\n  t['radicaltp'] = 0x221A;\n  t['radicalvertex'] = 0x221A;\n  t['slashbig'] = 0x002F;\n  t['slashBig'] = 0x002F;\n  t['slashBigg'] = 0x002F;\n  t['slashbigg'] = 0x002F;\n  t['summationdisplay'] = 0x2211;\n  t['summationtext'] = 0x2211;\n  t['tildewide'] = 0x02DC;\n  t['tildewider'] = 0x02DC;\n  t['tildewidest'] = 0x02DC;\n  t['uniondisplay'] = 0x22C3;\n  t['unionmultidisplay'] = 0x228E;\n  t['unionmultitext'] = 0x228E;\n  t['unionsqdisplay'] = 0x2294;\n  t['unionsqtext'] = 0x2294;\n  t['uniontext'] = 0x22C3;\n  t['vextenddouble'] = 0x2225;\n  t['vextendsingle'] = 0x2223;\n});\nvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['space'] = 0x0020;\n  t['a1'] = 0x2701;\n  t['a2'] = 0x2702;\n  t['a202'] = 0x2703;\n  t['a3'] = 0x2704;\n  t['a4'] = 0x260E;\n  t['a5'] = 0x2706;\n  t['a119'] = 0x2707;\n  t['a118'] = 0x2708;\n  t['a117'] = 0x2709;\n  t['a11'] = 0x261B;\n  t['a12'] = 0x261E;\n  t['a13'] = 0x270C;\n  t['a14'] = 0x270D;\n  t['a15'] = 0x270E;\n  t['a16'] = 0x270F;\n  t['a105'] = 0x2710;\n  t['a17'] = 0x2711;\n  t['a18'] = 0x2712;\n  t['a19'] = 0x2713;\n  t['a20'] = 0x2714;\n  t['a21'] = 0x2715;\n  t['a22'] = 0x2716;\n  t['a23'] = 0x2717;\n  t['a24'] = 0x2718;\n  t['a25'] = 0x2719;\n  t['a26'] = 0x271A;\n  t['a27'] = 0x271B;\n  t['a28'] = 0x271C;\n  t['a6'] = 0x271D;\n  t['a7'] = 0x271E;\n  t['a8'] = 0x271F;\n  t['a9'] = 0x2720;\n  t['a10'] = 0x2721;\n  t['a29'] = 0x2722;\n  t['a30'] = 0x2723;\n  t['a31'] = 0x2724;\n  t['a32'] = 0x2725;\n  t['a33'] = 0x2726;\n  t['a34'] = 0x2727;\n  t['a35'] = 0x2605;\n  t['a36'] = 0x2729;\n  t['a37'] = 0x272A;\n  t['a38'] = 0x272B;\n  t['a39'] = 0x272C;\n  t['a40'] = 0x272D;\n  t['a41'] = 0x272E;\n  t['a42'] = 0x272F;\n  t['a43'] = 0x2730;\n  t['a44'] = 0x2731;\n  t['a45'] = 0x2732;\n  t['a46'] = 0x2733;\n  t['a47'] = 0x2734;\n  t['a48'] = 0x2735;\n  t['a49'] = 0x2736;\n  t['a50'] = 0x2737;\n  t['a51'] = 0x2738;\n  t['a52'] = 0x2739;\n  t['a53'] = 0x273A;\n  t['a54'] = 0x273B;\n  t['a55'] = 0x273C;\n  t['a56'] = 0x273D;\n  t['a57'] = 0x273E;\n  t['a58'] = 0x273F;\n  t['a59'] = 0x2740;\n  t['a60'] = 0x2741;\n  t['a61'] = 0x2742;\n  t['a62'] = 0x2743;\n  t['a63'] = 0x2744;\n  t['a64'] = 0x2745;\n  t['a65'] = 0x2746;\n  t['a66'] = 0x2747;\n  t['a67'] = 0x2748;\n  t['a68'] = 0x2749;\n  t['a69'] = 0x274A;\n  t['a70'] = 0x274B;\n  t['a71'] = 0x25CF;\n  t['a72'] = 0x274D;\n  t['a73'] = 0x25A0;\n  t['a74'] = 0x274F;\n  t['a203'] = 0x2750;\n  t['a75'] = 0x2751;\n  t['a204'] = 0x2752;\n  t['a76'] = 0x25B2;\n  t['a77'] = 0x25BC;\n  t['a78'] = 0x25C6;\n  t['a79'] = 0x2756;\n  t['a81'] = 0x25D7;\n  t['a82'] = 0x2758;\n  t['a83'] = 0x2759;\n  t['a84'] = 0x275A;\n  t['a97'] = 0x275B;\n  t['a98'] = 0x275C;\n  t['a99'] = 0x275D;\n  t['a100'] = 0x275E;\n  t['a101'] = 0x2761;\n  t['a102'] = 0x2762;\n  t['a103'] = 0x2763;\n  t['a104'] = 0x2764;\n  t['a106'] = 0x2765;\n  t['a107'] = 0x2766;\n  t['a108'] = 0x2767;\n  t['a112'] = 0x2663;\n  t['a111'] = 0x2666;\n  t['a110'] = 0x2665;\n  t['a109'] = 0x2660;\n  t['a120'] = 0x2460;\n  t['a121'] = 0x2461;\n  t['a122'] = 0x2462;\n  t['a123'] = 0x2463;\n  t['a124'] = 0x2464;\n  t['a125'] = 0x2465;\n  t['a126'] = 0x2466;\n  t['a127'] = 0x2467;\n  t['a128'] = 0x2468;\n  t['a129'] = 0x2469;\n  t['a130'] = 0x2776;\n  t['a131'] = 0x2777;\n  t['a132'] = 0x2778;\n  t['a133'] = 0x2779;\n  t['a134'] = 0x277A;\n  t['a135'] = 0x277B;\n  t['a136'] = 0x277C;\n  t['a137'] = 0x277D;\n  t['a138'] = 0x277E;\n  t['a139'] = 0x277F;\n  t['a140'] = 0x2780;\n  t['a141'] = 0x2781;\n  t['a142'] = 0x2782;\n  t['a143'] = 0x2783;\n  t['a144'] = 0x2784;\n  t['a145'] = 0x2785;\n  t['a146'] = 0x2786;\n  t['a147'] = 0x2787;\n  t['a148'] = 0x2788;\n  t['a149'] = 0x2789;\n  t['a150'] = 0x278A;\n  t['a151'] = 0x278B;\n  t['a152'] = 0x278C;\n  t['a153'] = 0x278D;\n  t['a154'] = 0x278E;\n  t['a155'] = 0x278F;\n  t['a156'] = 0x2790;\n  t['a157'] = 0x2791;\n  t['a158'] = 0x2792;\n  t['a159'] = 0x2793;\n  t['a160'] = 0x2794;\n  t['a161'] = 0x2192;\n  t['a163'] = 0x2194;\n  t['a164'] = 0x2195;\n  t['a196'] = 0x2798;\n  t['a165'] = 0x2799;\n  t['a192'] = 0x279A;\n  t['a166'] = 0x279B;\n  t['a167'] = 0x279C;\n  t['a168'] = 0x279D;\n  t['a169'] = 0x279E;\n  t['a170'] = 0x279F;\n  t['a171'] = 0x27A0;\n  t['a172'] = 0x27A1;\n  t['a173'] = 0x27A2;\n  t['a162'] = 0x27A3;\n  t['a174'] = 0x27A4;\n  t['a175'] = 0x27A5;\n  t['a176'] = 0x27A6;\n  t['a177'] = 0x27A7;\n  t['a178'] = 0x27A8;\n  t['a179'] = 0x27A9;\n  t['a193'] = 0x27AA;\n  t['a180'] = 0x27AB;\n  t['a199'] = 0x27AC;\n  t['a181'] = 0x27AD;\n  t['a200'] = 0x27AE;\n  t['a182'] = 0x27AF;\n  t['a201'] = 0x27B1;\n  t['a183'] = 0x27B2;\n  t['a184'] = 0x27B3;\n  t['a197'] = 0x27B4;\n  t['a185'] = 0x27B5;\n  t['a194'] = 0x27B6;\n  t['a198'] = 0x27B7;\n  t['a186'] = 0x27B8;\n  t['a195'] = 0x27B9;\n  t['a187'] = 0x27BA;\n  t['a188'] = 0x27BB;\n  t['a189'] = 0x27BC;\n  t['a190'] = 0x27BD;\n  t['a191'] = 0x27BE;\n  t['a89'] = 0x2768;\n  t['a90'] = 0x2769;\n  t['a93'] = 0x276A;\n  t['a94'] = 0x276B;\n  t['a91'] = 0x276C;\n  t['a92'] = 0x276D;\n  t['a205'] = 0x276E;\n  t['a85'] = 0x276F;\n  t['a206'] = 0x2770;\n  t['a86'] = 0x2771;\n  t['a87'] = 0x2772;\n  t['a88'] = 0x2773;\n  t['a95'] = 0x2774;\n  t['a96'] = 0x2775;\n  t['.notdef'] = 0x0000;\n});\nexports.getGlyphsUnicode = getGlyphsUnicode;\nexports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nmodule.exports = function isNodeJS() {\n  return (typeof process === 'undefined' ? 'undefined' : _typeof(process)) === 'object' && process + '' === '[object process]';\n};\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = !__w_pdfjs_require__(13) && !__w_pdfjs_require__(14)(function () {\n  return Object.defineProperty(__w_pdfjs_require__(28)('div'), 'a', {\n    get: function get() {\n      return 7;\n    }\n  }).a != 7;\n});\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(6);\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toIObject = __w_pdfjs_require__(18);\nvar toLength = __w_pdfjs_require__(31);\nvar toAbsoluteIndex = __w_pdfjs_require__(84);\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      if (value != value) return true;\n    } else for (; length > index; index++) {\n      if (IS_INCLUDES || index in O) {\n        if (O[index] === el) return IS_INCLUDES || index || 0;\n      }\n    }return !IS_INCLUDES && -1;\n  };\n};\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar UNSCOPABLES = __w_pdfjs_require__(2)('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) __w_pdfjs_require__(12)(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar classof = __w_pdfjs_require__(33);\nvar test = {};\ntest[__w_pdfjs_require__(2)('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  __w_pdfjs_require__(9)(Object.prototype, 'toString', function toString() {\n    return '[object ' + classof(this) + ']';\n  }, true);\n}\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar LIBRARY = __w_pdfjs_require__(52);\nvar $export = __w_pdfjs_require__(5);\nvar redefine = __w_pdfjs_require__(9);\nvar hide = __w_pdfjs_require__(12);\nvar Iterators = __w_pdfjs_require__(19);\nvar $iterCreate = __w_pdfjs_require__(95);\nvar setToStringTag = __w_pdfjs_require__(25);\nvar getPrototypeOf = __w_pdfjs_require__(99);\nvar ITERATOR = __w_pdfjs_require__(2)('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys());\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar returnThis = function returnThis() {\n  return this;\n};\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function getMethod(kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS:\n        return function keys() {\n          return new Constructor(this, kind);\n        };\n      case VALUES:\n        return function values() {\n          return new Constructor(this, kind);\n        };\n    }\n    return function entries() {\n      return new Constructor(this, kind);\n    };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      setToStringTag(IteratorPrototype, TAG, true);\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() {\n      return $native.call(this);\n    };\n  }\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = false;\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar document = __w_pdfjs_require__(6).document;\nmodule.exports = document && document.documentElement;\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $iterators = __w_pdfjs_require__(100);\nvar getKeys = __w_pdfjs_require__(24);\nvar redefine = __w_pdfjs_require__(9);\nvar global = __w_pdfjs_require__(6);\nvar hide = __w_pdfjs_require__(12);\nvar Iterators = __w_pdfjs_require__(19);\nvar wks = __w_pdfjs_require__(2);\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\nvar DOMIterables = {\n  CSSRuleList: true,\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true,\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true,\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) {\n      if (!proto[key]) redefine(proto, key, $iterators[key], true);\n    }\n  }\n}\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar aFunction = __w_pdfjs_require__(17);\nvar SPECIES = __w_pdfjs_require__(2)('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(11);\nvar invoke = __w_pdfjs_require__(106);\nvar html = __w_pdfjs_require__(54);\nvar cel = __w_pdfjs_require__(28);\nvar global = __w_pdfjs_require__(6);\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function run() {\n  var id = +this;\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function listener(event) {\n  run.call(event.data);\n};\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) {\n      args.push(arguments[i++]);\n    }queue[++counter] = function () {\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  if (__w_pdfjs_require__(15)(process) == 'process') {\n    defer = function defer(id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  } else if (Dispatch && Dispatch.now) {\n    defer = function defer(id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function defer(id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function defer(id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  } else {\n    defer = function defer(id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (exec) {\n  try {\n    return {\n      e: false,\n      v: exec()\n    };\n  } catch (e) {\n    return {\n      e: true,\n      v: e\n    };\n  }\n};\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar isObject = __w_pdfjs_require__(3);\nvar newPromiseCapability = __w_pdfjs_require__(37);\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ITERATOR = __w_pdfjs_require__(2)('iterator');\nvar SAFE_CLOSING = false;\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () {\n    SAFE_CLOSING = true;\n  };\n  Array.from(riter, function () {\n    throw 2;\n  });\n} catch (e) {}\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () {\n      return { done: safe = true };\n    };\n    arr[ITERATOR] = function () {\n      return iter;\n    };\n    exec(arr);\n  } catch (e) {}\n  return safe;\n};\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(11);\nvar IObject = __w_pdfjs_require__(30);\nvar toObject = __w_pdfjs_require__(35);\nvar toLength = __w_pdfjs_require__(31);\nvar asc = __w_pdfjs_require__(113);\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (; length > index; index++) {\n      if (NO_HOLES || index in self) {\n        val = self[index];\n        res = f(val, index, O);\n        if (TYPE) {\n          if (IS_MAP) result[index] = res;else if (res) switch (TYPE) {\n            case 3:\n              return true;\n            case 5:\n              return val;\n            case 6:\n              return index;\n            case 2:\n              result.push(val);\n          } else if (IS_EVERY) return false;\n        }\n      }\n    }return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it, TYPE) {\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n  return it;\n};\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChunkedStreamManager = exports.ChunkedStream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar ChunkedStream = function ChunkedStreamClosure() {\n  function ChunkedStream(length, chunkSize, manager) {\n    this.bytes = new Uint8Array(length);\n    this.start = 0;\n    this.pos = 0;\n    this.end = length;\n    this.chunkSize = chunkSize;\n    this.loadedChunks = [];\n    this.numChunksLoaded = 0;\n    this.numChunks = Math.ceil(length / chunkSize);\n    this.manager = manager;\n    this.progressiveDataLength = 0;\n    this.lastSuccessfulEnsureByteChunk = -1;\n  }\n  ChunkedStream.prototype = {\n    getMissingChunks: function ChunkedStream_getMissingChunks() {\n      var chunks = [];\n      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          chunks.push(chunk);\n        }\n      }\n      return chunks;\n    },\n    getBaseStreams: function ChunkedStream_getBaseStreams() {\n      return [this];\n    },\n    allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n      return this.numChunksLoaded === this.numChunks;\n    },\n    onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n      var end = begin + chunk.byteLength;\n      if (begin % this.chunkSize !== 0) {\n        throw new Error('Bad begin offset: ' + begin);\n      }\n      var length = this.bytes.length;\n      if (end % this.chunkSize !== 0 && end !== length) {\n        throw new Error('Bad end offset: ' + end);\n      }\n      this.bytes.set(new Uint8Array(chunk), begin);\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n      var position = this.progressiveDataLength;\n      var beginChunk = Math.floor(position / this.chunkSize);\n      this.bytes.set(new Uint8Array(data), position);\n      position += data.byteLength;\n      this.progressiveDataLength = position;\n      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    ensureByte: function ChunkedStream_ensureByte(pos) {\n      var chunk = Math.floor(pos / this.chunkSize);\n      if (chunk === this.lastSuccessfulEnsureByteChunk) {\n        return;\n      }\n      if (!this.loadedChunks[chunk]) {\n        throw new _util.MissingDataException(pos, pos + 1);\n      }\n      this.lastSuccessfulEnsureByteChunk = chunk;\n    },\n    ensureRange: function ChunkedStream_ensureRange(begin, end) {\n      if (begin >= end) {\n        return;\n      }\n      if (end <= this.progressiveDataLength) {\n        return;\n      }\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          throw new _util.MissingDataException(begin, end);\n        }\n      }\n    },\n    nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n      var chunk,\n          numChunks = this.numChunks;\n      for (var i = 0; i < numChunks; ++i) {\n        chunk = (beginChunk + i) % numChunks;\n        if (!this.loadedChunks[chunk]) {\n          return chunk;\n        }\n      }\n      return null;\n    },\n    hasChunk: function ChunkedStream_hasChunk(chunk) {\n      return !!this.loadedChunks[chunk];\n    },\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function ChunkedStream_getByte() {\n      var pos = this.pos;\n      if (pos >= this.end) {\n        return -1;\n      }\n      this.ensureByte(pos);\n      return this.bytes[this.pos++];\n    },\n    getUint16: function ChunkedStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function ChunkedStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function ChunkedStream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        this.ensureRange(pos, strEnd);\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.ensureRange(pos, end);\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function ChunkedStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function ChunkedStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    getByteRange: function ChunkedStream_getBytes(begin, end) {\n      this.ensureRange(begin, end);\n      return this.bytes.subarray(begin, end);\n    },\n    skip: function ChunkedStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function ChunkedStream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function ChunkedStream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n      this.ensureRange(start, start + length);\n      function ChunkedStreamSubstream() {}\n      ChunkedStreamSubstream.prototype = Object.create(this);\n      ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n        var chunkSize = this.chunkSize;\n        var beginChunk = Math.floor(this.start / chunkSize);\n        var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n        var missingChunks = [];\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!this.loadedChunks[chunk]) {\n            missingChunks.push(chunk);\n          }\n        }\n        return missingChunks;\n      };\n      var subStream = new ChunkedStreamSubstream();\n      subStream.pos = subStream.start = start;\n      subStream.end = start + length || this.end;\n      subStream.dict = dict;\n      return subStream;\n    }\n  };\n  return ChunkedStream;\n}();\nvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n  function ChunkedStreamManager(pdfNetworkStream, args) {\n    var chunkSize = args.rangeChunkSize;\n    var length = args.length;\n    this.stream = new ChunkedStream(length, chunkSize, this);\n    this.length = length;\n    this.chunkSize = chunkSize;\n    this.pdfNetworkStream = pdfNetworkStream;\n    this.url = args.url;\n    this.disableAutoFetch = args.disableAutoFetch;\n    this.msgHandler = args.msgHandler;\n    this.currRequestId = 0;\n    this.chunksNeededByRequest = Object.create(null);\n    this.requestsByChunk = Object.create(null);\n    this.promisesByRequest = Object.create(null);\n    this.progressiveDataLength = 0;\n    this.aborted = false;\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n  }\n  ChunkedStreamManager.prototype = {\n    onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n      var _this = this;\n\n      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n      if (!rangeReader.isStreamingSupported) {\n        rangeReader.onProgress = this.onProgress.bind(this);\n      }\n      var chunks = [],\n          loaded = 0;\n      var manager = this;\n      var promise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            if (!chunk.done) {\n              var data = chunk.value;\n              chunks.push(data);\n              loaded += (0, _util.arrayByteLength)(data);\n              if (rangeReader.isStreamingSupported) {\n                manager.onProgress({ loaded: loaded });\n              }\n              rangeReader.read().then(readChunk, reject);\n              return;\n            }\n            var chunkData = (0, _util.arraysToBytes)(chunks);\n            chunks = null;\n            resolve(chunkData);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        rangeReader.read().then(readChunk, reject);\n      });\n      promise.then(function (data) {\n        if (_this.aborted) {\n          return;\n        }\n        _this.onReceiveData({\n          chunk: data,\n          begin: begin\n        });\n      });\n    },\n    requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n      var missingChunks = this.stream.getMissingChunks();\n      this._requestChunks(missingChunks);\n      return this._loadedStreamCapability.promise;\n    },\n    _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n      var requestId = this.currRequestId++;\n      var i, ii;\n      var chunksNeeded = Object.create(null);\n      this.chunksNeededByRequest[requestId] = chunksNeeded;\n      for (i = 0, ii = chunks.length; i < ii; i++) {\n        if (!this.stream.hasChunk(chunks[i])) {\n          chunksNeeded[chunks[i]] = true;\n        }\n      }\n      if ((0, _util.isEmptyObj)(chunksNeeded)) {\n        return Promise.resolve();\n      }\n      var capability = (0, _util.createPromiseCapability)();\n      this.promisesByRequest[requestId] = capability;\n      var chunksToRequest = [];\n      for (var chunk in chunksNeeded) {\n        chunk = chunk | 0;\n        if (!(chunk in this.requestsByChunk)) {\n          this.requestsByChunk[chunk] = [];\n          chunksToRequest.push(chunk);\n        }\n        this.requestsByChunk[chunk].push(requestId);\n      }\n      if (!chunksToRequest.length) {\n        return capability.promise;\n      }\n      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n      for (i = 0; i < groupedChunksToRequest.length; ++i) {\n        var groupedChunk = groupedChunksToRequest[i];\n        var begin = groupedChunk.beginChunk * this.chunkSize;\n        var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n        this.sendRequest(begin, end);\n      }\n      return capability.promise;\n    },\n    getStream: function ChunkedStreamManager_getStream() {\n      return this.stream;\n    },\n    requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n      end = Math.min(end, this.length);\n      var beginChunk = this.getBeginChunk(begin);\n      var endChunk = this.getEndChunk(end);\n      var chunks = [];\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        chunks.push(chunk);\n      }\n      return this._requestChunks(chunks);\n    },\n    requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n      ranges = ranges || [];\n      var chunksToRequest = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var beginChunk = this.getBeginChunk(ranges[i].begin);\n        var endChunk = this.getEndChunk(ranges[i].end);\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!chunksToRequest.includes(chunk)) {\n            chunksToRequest.push(chunk);\n          }\n        }\n      }\n      chunksToRequest.sort(function (a, b) {\n        return a - b;\n      });\n      return this._requestChunks(chunksToRequest);\n    },\n    groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n      var groupedChunks = [];\n      var beginChunk = -1;\n      var prevChunk = -1;\n      for (var i = 0; i < chunks.length; ++i) {\n        var chunk = chunks[i];\n        if (beginChunk < 0) {\n          beginChunk = chunk;\n        }\n        if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: prevChunk + 1\n          });\n          beginChunk = chunk;\n        }\n        if (i + 1 === chunks.length) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: chunk + 1\n          });\n        }\n        prevChunk = chunk;\n      }\n      return groupedChunks;\n    },\n    onProgress: function ChunkedStreamManager_onProgress(args) {\n      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n      this.msgHandler.send('DocProgress', {\n        loaded: bytesLoaded,\n        total: this.length\n      });\n    },\n    onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n      var chunk = args.chunk;\n      var isProgressive = args.begin === undefined;\n      var begin = isProgressive ? this.progressiveDataLength : args.begin;\n      var end = begin + chunk.byteLength;\n      var beginChunk = Math.floor(begin / this.chunkSize);\n      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n      if (isProgressive) {\n        this.stream.onReceiveProgressiveData(chunk);\n        this.progressiveDataLength = end;\n      } else {\n        this.stream.onReceiveData(begin, chunk);\n      }\n      if (this.stream.allChunksLoaded()) {\n        this._loadedStreamCapability.resolve(this.stream);\n      }\n      var loadedRequests = [];\n      var i, requestId;\n      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n        var requestIds = this.requestsByChunk[chunk] || [];\n        delete this.requestsByChunk[chunk];\n        for (i = 0; i < requestIds.length; ++i) {\n          requestId = requestIds[i];\n          var chunksNeeded = this.chunksNeededByRequest[requestId];\n          if (chunk in chunksNeeded) {\n            delete chunksNeeded[chunk];\n          }\n          if (!(0, _util.isEmptyObj)(chunksNeeded)) {\n            continue;\n          }\n          loadedRequests.push(requestId);\n        }\n      }\n      if (!this.disableAutoFetch && (0, _util.isEmptyObj)(this.requestsByChunk)) {\n        var nextEmptyChunk;\n        if (this.stream.numChunksLoaded === 1) {\n          var lastChunk = this.stream.numChunks - 1;\n          if (!this.stream.hasChunk(lastChunk)) {\n            nextEmptyChunk = lastChunk;\n          }\n        } else {\n          nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n        }\n        if (Number.isInteger(nextEmptyChunk)) {\n          this._requestChunks([nextEmptyChunk]);\n        }\n      }\n      for (i = 0; i < loadedRequests.length; ++i) {\n        requestId = loadedRequests[i];\n        var capability = this.promisesByRequest[requestId];\n        delete this.promisesByRequest[requestId];\n        capability.resolve();\n      }\n      this.msgHandler.send('DocProgress', {\n        loaded: this.stream.numChunksLoaded * this.chunkSize,\n        total: this.length\n      });\n    },\n    onError: function ChunkedStreamManager_onError(err) {\n      this._loadedStreamCapability.reject(err);\n    },\n    getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n      var chunk = Math.floor(begin / this.chunkSize);\n      return chunk;\n    },\n    getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n      return chunk;\n    },\n    abort: function ChunkedStreamManager_abort() {\n      this.aborted = true;\n      if (this.pdfNetworkStream) {\n        this.pdfNetworkStream.cancelAllRequests('abort');\n      }\n      for (var requestId in this.promisesByRequest) {\n        var capability = this.promisesByRequest[requestId];\n        capability.reject(new Error('Request was aborted'));\n      }\n    }\n  };\n  return ChunkedStreamManager;\n}();\nexports.ChunkedStream = ChunkedStream;\nexports.ChunkedStreamManager = ChunkedStreamManager;\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FileSpec = exports.XRef = exports.ObjectLoader = exports.Catalog = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _parser = __w_pdfjs_require__(27);\n\nvar _chunked_stream = __w_pdfjs_require__(63);\n\nvar _crypto = __w_pdfjs_require__(68);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar Catalog = function CatalogClosure() {\n  function Catalog(pdfManager, xref, pageFactory) {\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.catDict = xref.getCatalogObj();\n    if (!(0, _primitives.isDict)(this.catDict)) {\n      throw new _util.FormatError('catalog object is not a dictionary');\n    }\n    this.fontCache = new _primitives.RefSetCache();\n    this.builtInCMapCache = Object.create(null);\n    this.pageKidsCountCache = new _primitives.RefSetCache();\n    this.pageFactory = pageFactory;\n    this.pagePromises = [];\n  }\n  Catalog.prototype = {\n    get metadata() {\n      var streamRef = this.catDict.getRaw('Metadata');\n      if (!(0, _primitives.isRef)(streamRef)) {\n        return (0, _util.shadow)(this, 'metadata', null);\n      }\n      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n      var stream = this.xref.fetch(streamRef, !encryptMetadata);\n      var metadata;\n      if (stream && (0, _primitives.isDict)(stream.dict)) {\n        var type = stream.dict.get('Type');\n        var subtype = stream.dict.get('Subtype');\n        if ((0, _primitives.isName)(type, 'Metadata') && (0, _primitives.isName)(subtype, 'XML')) {\n          try {\n            metadata = (0, _util.stringToUTF8String)((0, _util.bytesToString)(stream.getBytes()));\n          } catch (e) {\n            if (e instanceof _util.MissingDataException) {\n              throw e;\n            }\n            (0, _util.info)('Skipping invalid metadata.');\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'metadata', metadata);\n    },\n    get toplevelPagesDict() {\n      var pagesObj = this.catDict.get('Pages');\n      if (!(0, _primitives.isDict)(pagesObj)) {\n        throw new _util.FormatError('invalid top-level pages dictionary');\n      }\n      return (0, _util.shadow)(this, 'toplevelPagesDict', pagesObj);\n    },\n    get documentOutline() {\n      var obj = null;\n      try {\n        obj = this.readDocumentOutline();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read document outline');\n      }\n      return (0, _util.shadow)(this, 'documentOutline', obj);\n    },\n    readDocumentOutline: function Catalog_readDocumentOutline() {\n      var obj = this.catDict.get('Outlines');\n      if (!(0, _primitives.isDict)(obj)) {\n        return null;\n      }\n      obj = obj.getRaw('First');\n      if (!(0, _primitives.isRef)(obj)) {\n        return null;\n      }\n      var root = { items: [] };\n      var queue = [{\n        obj: obj,\n        parent: root\n      }];\n      var processed = new _primitives.RefSet();\n      processed.put(obj);\n      var xref = this.xref,\n          blackColor = new Uint8Array(3);\n      while (queue.length > 0) {\n        var i = queue.shift();\n        var outlineDict = xref.fetchIfRef(i.obj);\n        if (outlineDict === null) {\n          continue;\n        }\n        if (!outlineDict.has('Title')) {\n          throw new _util.FormatError('Invalid outline item');\n        }\n        var data = {\n          url: null,\n          dest: null\n        };\n        Catalog.parseDestDictionary({\n          destDict: outlineDict,\n          resultObj: data,\n          docBaseUrl: this.pdfManager.docBaseUrl\n        });\n        var title = outlineDict.get('Title');\n        var flags = outlineDict.get('F') || 0;\n        var color = outlineDict.getArray('C'),\n            rgbColor = blackColor;\n        if (Array.isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n          rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(color, 0);\n        }\n        var outlineItem = {\n          dest: data.dest,\n          url: data.url,\n          unsafeUrl: data.unsafeUrl,\n          newWindow: data.newWindow,\n          title: (0, _util.stringToPDFString)(title),\n          color: rgbColor,\n          count: outlineDict.get('Count'),\n          bold: !!(flags & 2),\n          italic: !!(flags & 1),\n          items: []\n        };\n        i.parent.items.push(outlineItem);\n        obj = outlineDict.getRaw('First');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: outlineItem\n          });\n          processed.put(obj);\n        }\n        obj = outlineDict.getRaw('Next');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: i.parent\n          });\n          processed.put(obj);\n        }\n      }\n      return root.items.length > 0 ? root.items : null;\n    },\n    get numPages() {\n      var obj = this.toplevelPagesDict.get('Count');\n      if (!Number.isInteger(obj)) {\n        throw new _util.FormatError('page count in top level pages object is not an integer');\n      }\n      return (0, _util.shadow)(this, 'numPages', obj);\n    },\n    get destinations() {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dests = {},\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        obj = nameDictionaryRef;\n        obj.forEach(function catalogForEach(key, value) {\n          if (!value) {\n            return;\n          }\n          dests[key] = fetchDestination(value);\n        });\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          dests[name] = fetchDestination(names[name]);\n        }\n      }\n      return (0, _util.shadow)(this, 'destinations', dests);\n    },\n    getDestination: function Catalog_getDestination(destinationId) {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dest = null,\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        var value = nameDictionaryRef.get(destinationId);\n        if (value) {\n          dest = fetchDestination(value);\n        }\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        dest = fetchDestination(nameTree.get(destinationId));\n      }\n      return dest;\n    },\n    get pageLabels() {\n      var obj = null;\n      try {\n        obj = this.readPageLabels();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read page labels.');\n      }\n      return (0, _util.shadow)(this, 'pageLabels', obj);\n    },\n    readPageLabels: function Catalog_readPageLabels() {\n      var obj = this.catDict.getRaw('PageLabels');\n      if (!obj) {\n        return null;\n      }\n      var pageLabels = new Array(this.numPages);\n      var style = null;\n      var prefix = '';\n      var numberTree = new NumberTree(obj, this.xref);\n      var nums = numberTree.getAll();\n      var currentLabel = '',\n          currentIndex = 1;\n      for (var i = 0, ii = this.numPages; i < ii; i++) {\n        if (i in nums) {\n          var labelDict = nums[i];\n          if (!(0, _primitives.isDict)(labelDict)) {\n            throw new _util.FormatError('The PageLabel is not a dictionary.');\n          }\n          if (labelDict.has('Type') && !(0, _primitives.isName)(labelDict.get('Type'), 'PageLabel')) {\n            throw new _util.FormatError('Invalid type in PageLabel dictionary.');\n          }\n          if (labelDict.has('S')) {\n            var s = labelDict.get('S');\n            if (!(0, _primitives.isName)(s)) {\n              throw new _util.FormatError('Invalid style in PageLabel dictionary.');\n            }\n            style = s.name;\n          } else {\n            style = null;\n          }\n          if (labelDict.has('P')) {\n            var p = labelDict.get('P');\n            if (!(0, _util.isString)(p)) {\n              throw new _util.FormatError('Invalid prefix in PageLabel dictionary.');\n            }\n            prefix = (0, _util.stringToPDFString)(p);\n          } else {\n            prefix = '';\n          }\n          if (labelDict.has('St')) {\n            var st = labelDict.get('St');\n            if (!(Number.isInteger(st) && st >= 1)) {\n              throw new _util.FormatError('Invalid start in PageLabel dictionary.');\n            }\n            currentIndex = st;\n          } else {\n            currentIndex = 1;\n          }\n        }\n        switch (style) {\n          case 'D':\n            currentLabel = currentIndex;\n            break;\n          case 'R':\n          case 'r':\n            currentLabel = _util.Util.toRoman(currentIndex, style === 'r');\n            break;\n          case 'A':\n          case 'a':\n            var LIMIT = 26;\n            var A_UPPER_CASE = 0x41,\n                A_LOWER_CASE = 0x61;\n            var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n            var letterIndex = currentIndex - 1;\n            var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n            var charBuf = [];\n            for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n              charBuf.push(character);\n            }\n            currentLabel = charBuf.join('');\n            break;\n          default:\n            if (style) {\n              throw new _util.FormatError('Invalid style \"' + style + '\" in PageLabel dictionary.');\n            }\n            currentLabel = '';\n        }\n        pageLabels[i] = prefix + currentLabel;\n        currentIndex++;\n      }\n      return pageLabels;\n    },\n    get pageMode() {\n      var obj = this.catDict.get('PageMode');\n      var pageMode = 'UseNone';\n      if ((0, _primitives.isName)(obj)) {\n        switch (obj.name) {\n          case 'UseNone':\n          case 'UseOutlines':\n          case 'UseThumbs':\n          case 'FullScreen':\n          case 'UseOC':\n          case 'UseAttachments':\n            pageMode = obj.name;\n        }\n      }\n      return (0, _util.shadow)(this, 'pageMode', pageMode);\n    },\n    get attachments() {\n      var xref = this.xref;\n      var attachments = null,\n          nameTreeRef;\n      var obj = this.catDict.get('Names');\n      if (obj) {\n        nameTreeRef = obj.getRaw('EmbeddedFiles');\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var fs = new FileSpec(names[name], xref);\n          if (!attachments) {\n            attachments = Object.create(null);\n          }\n          attachments[(0, _util.stringToPDFString)(name)] = fs.serializable;\n        }\n      }\n      return (0, _util.shadow)(this, 'attachments', attachments);\n    },\n    get javaScript() {\n      var xref = this.xref;\n      var obj = this.catDict.get('Names');\n      var javaScript = null;\n      function appendIfJavaScriptDict(jsDict) {\n        var type = jsDict.get('S');\n        if (!(0, _primitives.isName)(type, 'JavaScript')) {\n          return;\n        }\n        var js = jsDict.get('JS');\n        if ((0, _primitives.isStream)(js)) {\n          js = (0, _util.bytesToString)(js.getBytes());\n        } else if (!(0, _util.isString)(js)) {\n          return;\n        }\n        if (!javaScript) {\n          javaScript = [];\n        }\n        javaScript.push((0, _util.stringToPDFString)(js));\n      }\n      if (obj && obj.has('JavaScript')) {\n        var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var jsDict = names[name];\n          if ((0, _primitives.isDict)(jsDict)) {\n            appendIfJavaScriptDict(jsDict);\n          }\n        }\n      }\n      var openactionDict = this.catDict.get('OpenAction');\n      if ((0, _primitives.isDict)(openactionDict, 'Action')) {\n        var actionType = openactionDict.get('S');\n        if ((0, _primitives.isName)(actionType, 'Named')) {\n          var action = openactionDict.get('N');\n          if ((0, _primitives.isName)(action, 'Print')) {\n            if (!javaScript) {\n              javaScript = [];\n            }\n            javaScript.push('print({});');\n          }\n        } else {\n          appendIfJavaScriptDict(openactionDict);\n        }\n      }\n      return (0, _util.shadow)(this, 'javaScript', javaScript);\n    },\n    cleanup: function Catalog_cleanup() {\n      var _this = this;\n\n      this.pageKidsCountCache.clear();\n      var promises = [];\n      this.fontCache.forEach(function (promise) {\n        promises.push(promise);\n      });\n      return Promise.all(promises).then(function (translatedFonts) {\n        for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n          var font = translatedFonts[i].dict;\n          delete font.translated;\n        }\n        _this.fontCache.clear();\n        _this.builtInCMapCache = Object.create(null);\n      });\n    },\n    getPage: function Catalog_getPage(pageIndex) {\n      var _this2 = this;\n\n      if (!(pageIndex in this.pagePromises)) {\n        this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              dict = _ref2[0],\n              ref = _ref2[1];\n\n          return _this2.pageFactory.createPage(pageIndex, dict, ref, _this2.fontCache, _this2.builtInCMapCache);\n        });\n      }\n      return this.pagePromises[pageIndex];\n    },\n    getPageDict: function Catalog_getPageDict(pageIndex) {\n      var capability = (0, _util.createPromiseCapability)();\n      var nodesToVisit = [this.catDict.getRaw('Pages')];\n      var count,\n          currentPageIndex = 0;\n      var xref = this.xref,\n          pageKidsCountCache = this.pageKidsCountCache;\n      function next() {\n        while (nodesToVisit.length) {\n          var currentNode = nodesToVisit.pop();\n          if ((0, _primitives.isRef)(currentNode)) {\n            count = pageKidsCountCache.get(currentNode);\n            if (count > 0 && currentPageIndex + count < pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n            xref.fetchAsync(currentNode).then(function (obj) {\n              if ((0, _primitives.isDict)(obj, 'Page') || (0, _primitives.isDict)(obj) && !obj.has('Kids')) {\n                if (pageIndex === currentPageIndex) {\n                  if (currentNode && !pageKidsCountCache.has(currentNode)) {\n                    pageKidsCountCache.put(currentNode, 1);\n                  }\n                  capability.resolve([obj, currentNode]);\n                } else {\n                  currentPageIndex++;\n                  next();\n                }\n                return;\n              }\n              nodesToVisit.push(obj);\n              next();\n            }, capability.reject);\n            return;\n          }\n          if (!(0, _primitives.isDict)(currentNode)) {\n            capability.reject(new _util.FormatError('page dictionary kid reference points to wrong type of object'));\n            return;\n          }\n          count = currentNode.get('Count');\n          if (Number.isInteger(count) && count >= 0) {\n            var objId = currentNode.objId;\n            if (objId && !pageKidsCountCache.has(objId)) {\n              pageKidsCountCache.put(objId, count);\n            }\n            if (currentPageIndex + count <= pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n          }\n          var kids = currentNode.get('Kids');\n          if (!Array.isArray(kids)) {\n            if ((0, _primitives.isName)(currentNode.get('Type'), 'Page') || !currentNode.has('Type') && currentNode.has('Contents')) {\n              if (currentPageIndex === pageIndex) {\n                capability.resolve([currentNode, null]);\n                return;\n              }\n              currentPageIndex++;\n              continue;\n            }\n            capability.reject(new _util.FormatError('page dictionary kids object is not an array'));\n            return;\n          }\n          for (var last = kids.length - 1; last >= 0; last--) {\n            nodesToVisit.push(kids[last]);\n          }\n        }\n        capability.reject(new Error('Page index ' + pageIndex + ' not found.'));\n      }\n      next();\n      return capability.promise;\n    },\n    getPageIndex: function Catalog_getPageIndex(pageRef) {\n      var xref = this.xref;\n      function pagesBeforeRef(kidRef) {\n        var total = 0;\n        var parentRef;\n        return xref.fetchAsync(kidRef).then(function (node) {\n          if ((0, _primitives.isRefsEqual)(kidRef, pageRef) && !(0, _primitives.isDict)(node, 'Page') && !((0, _primitives.isDict)(node) && !node.has('Type') && node.has('Contents'))) {\n            throw new _util.FormatError('The reference does not point to a /Page Dict.');\n          }\n          if (!node) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(node)) {\n            throw new _util.FormatError('node must be a Dict.');\n          }\n          parentRef = node.getRaw('Parent');\n          return node.getAsync('Parent');\n        }).then(function (parent) {\n          if (!parent) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(parent)) {\n            throw new _util.FormatError('parent must be a Dict.');\n          }\n          return parent.getAsync('Kids');\n        }).then(function (kids) {\n          if (!kids) {\n            return null;\n          }\n          var kidPromises = [];\n          var found = false;\n          for (var i = 0; i < kids.length; i++) {\n            var kid = kids[i];\n            if (!(0, _primitives.isRef)(kid)) {\n              throw new _util.FormatError('kid must be a Ref.');\n            }\n            if ((0, _primitives.isRefsEqual)(kid, kidRef)) {\n              found = true;\n              break;\n            }\n            kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n              if (!(0, _primitives.isDict)(kid)) {\n                throw new _util.FormatError('kid node must be a Dict.');\n              }\n              if (kid.has('Count')) {\n                var count = kid.get('Count');\n                total += count;\n              } else {\n                total++;\n              }\n            }));\n          }\n          if (!found) {\n            throw new _util.FormatError('kid ref not found in parents kids');\n          }\n          return Promise.all(kidPromises).then(function () {\n            return [total, parentRef];\n          });\n        });\n      }\n      var total = 0;\n      function next(ref) {\n        return pagesBeforeRef(ref).then(function (args) {\n          if (!args) {\n            return total;\n          }\n          var count = args[0];\n          var parentRef = args[1];\n          total += count;\n          return next(parentRef);\n        });\n      }\n      return next(pageRef);\n    }\n  };\n  Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n    function addDefaultProtocolToUrl(url) {\n      if (url.indexOf('www.') === 0) {\n        return 'http://' + url;\n      }\n      return url;\n    }\n    function tryConvertUrlEncoding(url) {\n      try {\n        return (0, _util.stringToUTF8String)(url);\n      } catch (e) {\n        return url;\n      }\n    }\n    var destDict = params.destDict;\n    if (!(0, _primitives.isDict)(destDict)) {\n      (0, _util.warn)('parseDestDictionary: \"destDict\" must be a dictionary.');\n      return;\n    }\n    var resultObj = params.resultObj;\n    if ((typeof resultObj === 'undefined' ? 'undefined' : _typeof(resultObj)) !== 'object') {\n      (0, _util.warn)('parseDestDictionary: \"resultObj\" must be an object.');\n      return;\n    }\n    var docBaseUrl = params.docBaseUrl || null;\n    var action = destDict.get('A'),\n        url,\n        dest;\n    if (!(0, _primitives.isDict)(action) && destDict.has('Dest')) {\n      action = destDict.get('Dest');\n    }\n    if ((0, _primitives.isDict)(action)) {\n      var actionType = action.get('S');\n      if (!(0, _primitives.isName)(actionType)) {\n        (0, _util.warn)('parseDestDictionary: Invalid type in Action dictionary.');\n        return;\n      }\n      var actionName = actionType.name;\n      switch (actionName) {\n        case 'URI':\n          url = action.get('URI');\n          if ((0, _primitives.isName)(url)) {\n            url = '/' + url.name;\n          } else if ((0, _util.isString)(url)) {\n            url = addDefaultProtocolToUrl(url);\n          }\n          break;\n        case 'GoTo':\n          dest = action.get('D');\n          break;\n        case 'Launch':\n        case 'GoToR':\n          var urlDict = action.get('F');\n          if ((0, _primitives.isDict)(urlDict)) {\n            url = urlDict.get('F') || null;\n          } else if ((0, _util.isString)(urlDict)) {\n            url = urlDict;\n          }\n          var remoteDest = action.get('D');\n          if (remoteDest) {\n            if ((0, _primitives.isName)(remoteDest)) {\n              remoteDest = remoteDest.name;\n            }\n            if ((0, _util.isString)(url)) {\n              var baseUrl = url.split('#')[0];\n              if ((0, _util.isString)(remoteDest)) {\n                url = baseUrl + '#' + remoteDest;\n              } else if (Array.isArray(remoteDest)) {\n                url = baseUrl + '#' + JSON.stringify(remoteDest);\n              }\n            }\n          }\n          var newWindow = action.get('NewWindow');\n          if ((0, _util.isBool)(newWindow)) {\n            resultObj.newWindow = newWindow;\n          }\n          break;\n        case 'Named':\n          var namedAction = action.get('N');\n          if ((0, _primitives.isName)(namedAction)) {\n            resultObj.action = namedAction.name;\n          }\n          break;\n        case 'JavaScript':\n          var jsAction = action.get('JS'),\n              js;\n          if ((0, _primitives.isStream)(jsAction)) {\n            js = (0, _util.bytesToString)(jsAction.getBytes());\n          } else if ((0, _util.isString)(jsAction)) {\n            js = jsAction;\n          }\n          if (js) {\n            var URL_OPEN_METHODS = ['app.launchURL', 'window.open'];\n            var regex = new RegExp('^\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\.') + ')\\\\((?:\\'|\\\")([^\\'\\\"]*)(?:\\'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))', 'i');\n            var jsUrl = regex.exec((0, _util.stringToPDFString)(js));\n            if (jsUrl && jsUrl[2]) {\n              url = jsUrl[2];\n              if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\n                resultObj.newWindow = true;\n              }\n              break;\n            }\n          }\n        default:\n          (0, _util.warn)('parseDestDictionary: Unsupported Action type \"' + actionName + '\".');\n          break;\n      }\n    } else if (destDict.has('Dest')) {\n      dest = destDict.get('Dest');\n    }\n    if ((0, _util.isString)(url)) {\n      url = tryConvertUrlEncoding(url);\n      var absoluteUrl = (0, _util.createValidAbsoluteUrl)(url, docBaseUrl);\n      if (absoluteUrl) {\n        resultObj.url = absoluteUrl.href;\n      }\n      resultObj.unsafeUrl = url;\n    }\n    if (dest) {\n      if ((0, _primitives.isName)(dest)) {\n        dest = dest.name;\n      }\n      if ((0, _util.isString)(dest) || Array.isArray(dest)) {\n        resultObj.dest = dest;\n      }\n    }\n  };\n  return Catalog;\n}();\nvar XRef = function XRefClosure() {\n  function XRef(stream, pdfManager) {\n    this.stream = stream;\n    this.pdfManager = pdfManager;\n    this.entries = [];\n    this.xrefstms = Object.create(null);\n    this.cache = [];\n    this.stats = {\n      streamTypes: [],\n      fontTypes: []\n    };\n  }\n  XRef.prototype = {\n    setStartXRef: function XRef_setStartXRef(startXRef) {\n      this.startXRefQueue = [startXRef];\n    },\n    parse: function XRef_parse(recoveryMode) {\n      var trailerDict;\n      if (!recoveryMode) {\n        trailerDict = this.readXRef();\n      } else {\n        (0, _util.warn)('Indexing all PDF objects');\n        trailerDict = this.indexObjects();\n      }\n      trailerDict.assignXref(this);\n      this.trailer = trailerDict;\n      var encrypt = trailerDict.get('Encrypt');\n      if ((0, _primitives.isDict)(encrypt)) {\n        var ids = trailerDict.get('ID');\n        var fileId = ids && ids.length ? ids[0] : '';\n        encrypt.suppressEncryption = true;\n        this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n      }\n      if (!(this.root = trailerDict.get('Root'))) {\n        throw new _util.FormatError('Invalid root reference');\n      }\n    },\n    processXRefTable: function XRef_processXRefTable(parser) {\n      if (!('tableState' in this)) {\n        this.tableState = {\n          entryNum: 0,\n          streamPos: parser.lexer.stream.pos,\n          parserBuf1: parser.buf1,\n          parserBuf2: parser.buf2\n        };\n      }\n      var obj = this.readXRefTable(parser);\n      if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n        throw new _util.FormatError('Invalid XRef table: could not find trailer dictionary');\n      }\n      var dict = parser.getObj();\n      if (!(0, _primitives.isDict)(dict) && dict.dict) {\n        dict = dict.dict;\n      }\n      if (!(0, _primitives.isDict)(dict)) {\n        throw new _util.FormatError('Invalid XRef table: could not parse trailer dictionary');\n      }\n      delete this.tableState;\n      return dict;\n    },\n    readXRefTable: function XRef_readXRefTable(parser) {\n      var stream = parser.lexer.stream;\n      var tableState = this.tableState;\n      stream.pos = tableState.streamPos;\n      parser.buf1 = tableState.parserBuf1;\n      parser.buf2 = tableState.parserBuf2;\n      var obj;\n      while (true) {\n        if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n          if ((0, _primitives.isCmd)(obj = parser.getObj(), 'trailer')) {\n            break;\n          }\n          tableState.firstEntryNum = obj;\n          tableState.entryCount = parser.getObj();\n        }\n        var first = tableState.firstEntryNum;\n        var count = tableState.entryCount;\n        if (!Number.isInteger(first) || !Number.isInteger(count)) {\n          throw new _util.FormatError('Invalid XRef table: wrong types in subsection header');\n        }\n        for (var i = tableState.entryNum; i < count; i++) {\n          tableState.streamPos = stream.pos;\n          tableState.entryNum = i;\n          tableState.parserBuf1 = parser.buf1;\n          tableState.parserBuf2 = parser.buf2;\n          var entry = {};\n          entry.offset = parser.getObj();\n          entry.gen = parser.getObj();\n          var type = parser.getObj();\n          if ((0, _primitives.isCmd)(type, 'f')) {\n            entry.free = true;\n          } else if ((0, _primitives.isCmd)(type, 'n')) {\n            entry.uncompressed = true;\n          }\n          if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n            throw new _util.FormatError('Invalid entry in XRef subsection: ' + first + ', ' + count);\n          }\n          if (i === 0 && entry.free && first === 1) {\n            first = 0;\n          }\n          if (!this.entries[i + first]) {\n            this.entries[i + first] = entry;\n          }\n        }\n        tableState.entryNum = 0;\n        tableState.streamPos = stream.pos;\n        tableState.parserBuf1 = parser.buf1;\n        tableState.parserBuf2 = parser.buf2;\n        delete tableState.firstEntryNum;\n        delete tableState.entryCount;\n      }\n      if (this.entries[0] && !this.entries[0].free) {\n        throw new _util.FormatError('Invalid XRef table: unexpected first object');\n      }\n      return obj;\n    },\n    processXRefStream: function XRef_processXRefStream(stream) {\n      if (!('streamState' in this)) {\n        var streamParameters = stream.dict;\n        var byteWidths = streamParameters.get('W');\n        var range = streamParameters.get('Index');\n        if (!range) {\n          range = [0, streamParameters.get('Size')];\n        }\n        this.streamState = {\n          entryRanges: range,\n          byteWidths: byteWidths,\n          entryNum: 0,\n          streamPos: stream.pos\n        };\n      }\n      this.readXRefStream(stream);\n      delete this.streamState;\n      return stream.dict;\n    },\n    readXRefStream: function XRef_readXRefStream(stream) {\n      var i, j;\n      var streamState = this.streamState;\n      stream.pos = streamState.streamPos;\n      var byteWidths = streamState.byteWidths;\n      var typeFieldWidth = byteWidths[0];\n      var offsetFieldWidth = byteWidths[1];\n      var generationFieldWidth = byteWidths[2];\n      var entryRanges = streamState.entryRanges;\n      while (entryRanges.length > 0) {\n        var first = entryRanges[0];\n        var n = entryRanges[1];\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n          throw new _util.FormatError('Invalid XRef range fields: ' + first + ', ' + n);\n        }\n        if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n          throw new _util.FormatError('Invalid XRef entry fields length: ' + first + ', ' + n);\n        }\n        for (i = streamState.entryNum; i < n; ++i) {\n          streamState.entryNum = i;\n          streamState.streamPos = stream.pos;\n          var type = 0,\n              offset = 0,\n              generation = 0;\n          for (j = 0; j < typeFieldWidth; ++j) {\n            type = type << 8 | stream.getByte();\n          }\n          if (typeFieldWidth === 0) {\n            type = 1;\n          }\n          for (j = 0; j < offsetFieldWidth; ++j) {\n            offset = offset << 8 | stream.getByte();\n          }\n          for (j = 0; j < generationFieldWidth; ++j) {\n            generation = generation << 8 | stream.getByte();\n          }\n          var entry = {};\n          entry.offset = offset;\n          entry.gen = generation;\n          switch (type) {\n            case 0:\n              entry.free = true;\n              break;\n            case 1:\n              entry.uncompressed = true;\n              break;\n            case 2:\n              break;\n            default:\n              throw new _util.FormatError('Invalid XRef entry type: ' + type);\n          }\n          if (!this.entries[first + i]) {\n            this.entries[first + i] = entry;\n          }\n        }\n        streamState.entryNum = 0;\n        streamState.streamPos = stream.pos;\n        entryRanges.splice(0, 2);\n      }\n    },\n    indexObjects: function XRef_indexObjects() {\n      var TAB = 0x9,\n          LF = 0xA,\n          CR = 0xD,\n          SPACE = 0x20;\n      var PERCENT = 0x25,\n          LT = 0x3C;\n      function readToken(data, offset) {\n        var token = '',\n            ch = data[offset];\n        while (ch !== LF && ch !== CR && ch !== LT) {\n          if (++offset >= data.length) {\n            break;\n          }\n          token += String.fromCharCode(ch);\n          ch = data[offset];\n        }\n        return token;\n      }\n      function skipUntil(data, offset, what) {\n        var length = what.length,\n            dataLength = data.length;\n        var skipped = 0;\n        while (offset < dataLength) {\n          var i = 0;\n          while (i < length && data[offset + i] === what[i]) {\n            ++i;\n          }\n          if (i >= length) {\n            break;\n          }\n          offset++;\n          skipped++;\n        }\n        return skipped;\n      }\n      var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n      var endobjRegExp = /\\bendobj[\\b\\s]$/;\n      var nestedObjRegExp = /\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s])$/;\n      var CHECK_CONTENT_LENGTH = 25;\n      var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n      var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n      var objBytes = new Uint8Array([111, 98, 106]);\n      var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n      this.entries.length = 0;\n      var stream = this.stream;\n      stream.pos = 0;\n      var buffer = stream.getBytes();\n      var position = stream.start,\n          length = buffer.length;\n      var trailers = [],\n          xrefStms = [];\n      while (position < length) {\n        var ch = buffer[position];\n        if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n          ++position;\n          continue;\n        }\n        if (ch === PERCENT) {\n          do {\n            ++position;\n            if (position >= length) {\n              break;\n            }\n            ch = buffer[position];\n          } while (ch !== LF && ch !== CR);\n          continue;\n        }\n        var token = readToken(buffer, position);\n        var m;\n        if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n          position += skipUntil(buffer, position, trailerBytes);\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else if (m = objRegExp.exec(token)) {\n          if (typeof this.entries[m[1]] === 'undefined') {\n            this.entries[m[1]] = {\n              offset: position - stream.start,\n              gen: m[2] | 0,\n              uncompressed: true\n            };\n          }\n          var contentLength = void 0,\n              startPos = position + token.length;\n          while (startPos < buffer.length) {\n            var endPos = startPos + skipUntil(buffer, startPos, objBytes) + 4;\n            contentLength = endPos - position;\n            var checkPos = Math.max(endPos - CHECK_CONTENT_LENGTH, startPos);\n            var tokenStr = (0, _util.bytesToString)(buffer.subarray(checkPos, endPos));\n            if (endobjRegExp.test(tokenStr)) {\n              break;\n            } else {\n              var objToken = nestedObjRegExp.exec(tokenStr);\n              if (objToken && objToken[1]) {\n                (0, _util.warn)('indexObjects: Found new \"obj\" inside of another \"obj\", ' + 'caused by missing \"endobj\" -- trying to recover.');\n                contentLength -= objToken[1].length;\n                break;\n              }\n            }\n            startPos += contentLength;\n          }\n          var content = buffer.subarray(position, position + contentLength);\n          var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n          if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n            xrefStms.push(position - stream.start);\n            this.xrefstms[position - stream.start] = 1;\n          }\n          position += contentLength;\n        } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else {\n          position += token.length + 1;\n        }\n      }\n      var i, ii;\n      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n        this.startXRefQueue.push(xrefStms[i]);\n        this.readXRef(true);\n      }\n      var dict;\n      for (i = 0, ii = trailers.length; i < ii; ++i) {\n        stream.pos = trailers[i];\n        var parser = new _parser.Parser(new _parser.Lexer(stream), true, this, true);\n        var obj = parser.getObj();\n        if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n          continue;\n        }\n        dict = parser.getObj();\n        if (!(0, _primitives.isDict)(dict)) {\n          continue;\n        }\n        if (dict.has('ID')) {\n          return dict;\n        }\n      }\n      if (dict) {\n        return dict;\n      }\n      throw new _util.InvalidPDFException('Invalid PDF structure');\n    },\n    readXRef: function XRef_readXRef(recoveryMode) {\n      var stream = this.stream;\n      var startXRefParsedCache = Object.create(null);\n      try {\n        while (this.startXRefQueue.length) {\n          var startXRef = this.startXRefQueue[0];\n          if (startXRefParsedCache[startXRef]) {\n            (0, _util.warn)('readXRef - skipping XRef table since it was already parsed.');\n            this.startXRefQueue.shift();\n            continue;\n          }\n          startXRefParsedCache[startXRef] = true;\n          stream.pos = startXRef + stream.start;\n          var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n          var obj = parser.getObj();\n          var dict;\n          if ((0, _primitives.isCmd)(obj, 'xref')) {\n            dict = this.processXRefTable(parser);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            obj = dict.get('XRefStm');\n            if (Number.isInteger(obj)) {\n              var pos = obj;\n              if (!(pos in this.xrefstms)) {\n                this.xrefstms[pos] = 1;\n                this.startXRefQueue.push(pos);\n              }\n            }\n          } else if (Number.isInteger(obj)) {\n            if (!Number.isInteger(parser.getObj()) || !(0, _primitives.isCmd)(parser.getObj(), 'obj') || !(0, _primitives.isStream)(obj = parser.getObj())) {\n              throw new _util.FormatError('Invalid XRef stream');\n            }\n            dict = this.processXRefStream(obj);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            if (!dict) {\n              throw new _util.FormatError('Failed to read XRef stream');\n            }\n          } else {\n            throw new _util.FormatError('Invalid XRef stream header');\n          }\n          obj = dict.get('Prev');\n          if (Number.isInteger(obj)) {\n            this.startXRefQueue.push(obj);\n          } else if ((0, _primitives.isRef)(obj)) {\n            this.startXRefQueue.push(obj.num);\n          }\n          this.startXRefQueue.shift();\n        }\n        return this.topDict;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        (0, _util.info)('(while reading XRef): ' + e);\n      }\n      if (recoveryMode) {\n        return;\n      }\n      throw new _util.XRefParseException();\n    },\n    getEntry: function XRef_getEntry(i) {\n      var xrefEntry = this.entries[i];\n      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n        return xrefEntry;\n      }\n      return null;\n    },\n    fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return obj;\n      }\n      return this.fetch(obj, suppressEncryption);\n    },\n    fetch: function XRef_fetch(ref, suppressEncryption) {\n      if (!(0, _primitives.isRef)(ref)) {\n        throw new Error('ref object is not a reference');\n      }\n      var num = ref.num;\n      if (num in this.cache) {\n        var cacheEntry = this.cache[num];\n        if (cacheEntry instanceof _primitives.Dict && !cacheEntry.objId) {\n          cacheEntry.objId = ref.toString();\n        }\n        return cacheEntry;\n      }\n      var xrefEntry = this.getEntry(num);\n      if (xrefEntry === null) {\n        return this.cache[num] = null;\n      }\n      if (xrefEntry.uncompressed) {\n        xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n      } else {\n        xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n      }\n      if ((0, _primitives.isDict)(xrefEntry)) {\n        xrefEntry.objId = ref.toString();\n      } else if ((0, _primitives.isStream)(xrefEntry)) {\n        xrefEntry.dict.objId = ref.toString();\n      }\n      return xrefEntry;\n    },\n    fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n      var gen = ref.gen;\n      var num = ref.num;\n      if (xrefEntry.gen !== gen) {\n        throw new _util.FormatError('inconsistent generation in XRef');\n      }\n      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n      var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n      var obj1 = parser.getObj();\n      var obj2 = parser.getObj();\n      var obj3 = parser.getObj();\n      if (!Number.isInteger(obj1)) {\n        obj1 = parseInt(obj1, 10);\n      }\n      if (!Number.isInteger(obj2)) {\n        obj2 = parseInt(obj2, 10);\n      }\n      if (obj1 !== num || obj2 !== gen || !(0, _primitives.isCmd)(obj3)) {\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (obj3.cmd !== 'obj') {\n        if (obj3.cmd.indexOf('obj') === 0) {\n          num = parseInt(obj3.cmd.substring(3), 10);\n          if (!Number.isNaN(num)) {\n            return num;\n          }\n        }\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (this.encrypt && !suppressEncryption) {\n        xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n      } else {\n        xrefEntry = parser.getObj();\n      }\n      if (!(0, _primitives.isStream)(xrefEntry)) {\n        this.cache[num] = xrefEntry;\n      }\n      return xrefEntry;\n    },\n    fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n      var tableOffset = xrefEntry.offset;\n      var stream = this.fetch(new _primitives.Ref(tableOffset, 0));\n      if (!(0, _primitives.isStream)(stream)) {\n        throw new _util.FormatError('bad ObjStm stream');\n      }\n      var first = stream.dict.get('First');\n      var n = stream.dict.get('N');\n      if (!Number.isInteger(first) || !Number.isInteger(n)) {\n        throw new _util.FormatError('invalid first and n parameters for ObjStm stream');\n      }\n      var parser = new _parser.Parser(new _parser.Lexer(stream), false, this);\n      parser.allowStreams = true;\n      var i,\n          entries = [],\n          num,\n          nums = [];\n      for (i = 0; i < n; ++i) {\n        num = parser.getObj();\n        if (!Number.isInteger(num)) {\n          throw new _util.FormatError('invalid object number in the ObjStm stream: ' + num);\n        }\n        nums.push(num);\n        var offset = parser.getObj();\n        if (!Number.isInteger(offset)) {\n          throw new _util.FormatError('invalid object offset in the ObjStm stream: ' + offset);\n        }\n      }\n      for (i = 0; i < n; ++i) {\n        entries.push(parser.getObj());\n        if ((0, _primitives.isCmd)(parser.buf1, 'endobj')) {\n          parser.shift();\n        }\n        num = nums[i];\n        var entry = this.entries[num];\n        if (entry && entry.offset === tableOffset && entry.gen === i) {\n          this.cache[num] = entries[i];\n        }\n      }\n      xrefEntry = entries[xrefEntry.gen];\n      if (xrefEntry === undefined) {\n        throw new _util.FormatError('bad XRef entry for compressed object');\n      }\n      return xrefEntry;\n    },\n    fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return Promise.resolve(obj);\n      }\n      return this.fetchAsync(obj, suppressEncryption);\n    },\n    fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n      var streamManager = this.stream.manager;\n      var xref = this;\n      return new Promise(function tryFetch(resolve, reject) {\n        try {\n          resolve(xref.fetch(ref, suppressEncryption));\n        } catch (e) {\n          if (e instanceof _util.MissingDataException) {\n            streamManager.requestRange(e.begin, e.end).then(function () {\n              tryFetch(resolve, reject);\n            }, reject);\n            return;\n          }\n          reject(e);\n        }\n      });\n    },\n    getCatalogObj: function XRef_getCatalogObj() {\n      return this.root;\n    }\n  };\n  return XRef;\n}();\nvar NameOrNumberTree = function NameOrNumberTreeClosure() {\n  function NameOrNumberTree(root, xref) {\n    (0, _util.unreachable)('Cannot initialize NameOrNumberTree.');\n  }\n  NameOrNumberTree.prototype = {\n    getAll: function NameOrNumberTree_getAll() {\n      var dict = Object.create(null);\n      if (!this.root) {\n        return dict;\n      }\n      var xref = this.xref;\n      var processed = new _primitives.RefSet();\n      processed.put(this.root);\n      var queue = [this.root];\n      while (queue.length > 0) {\n        var i, n;\n        var obj = xref.fetchIfRef(queue.shift());\n        if (!(0, _primitives.isDict)(obj)) {\n          continue;\n        }\n        if (obj.has('Kids')) {\n          var kids = obj.get('Kids');\n          for (i = 0, n = kids.length; i < n; i++) {\n            var kid = kids[i];\n            if (processed.has(kid)) {\n              throw new _util.FormatError('Duplicate entry in \"' + this._type + '\" tree.');\n            }\n            queue.push(kid);\n            processed.put(kid);\n          }\n          continue;\n        }\n        var entries = obj.get(this._type);\n        if (Array.isArray(entries)) {\n          for (i = 0, n = entries.length; i < n; i += 2) {\n            dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n          }\n        }\n      }\n      return dict;\n    },\n    get: function NameOrNumberTree_get(key) {\n      if (!this.root) {\n        return null;\n      }\n      var xref = this.xref;\n      var kidsOrEntries = xref.fetchIfRef(this.root);\n      var loopCount = 0;\n      var MAX_LEVELS = 10;\n      var l, r, m;\n      while (kidsOrEntries.has('Kids')) {\n        if (++loopCount > MAX_LEVELS) {\n          (0, _util.warn)('Search depth limit reached for \"' + this._type + '\" tree.');\n          return null;\n        }\n        var kids = kidsOrEntries.get('Kids');\n        if (!Array.isArray(kids)) {\n          return null;\n        }\n        l = 0;\n        r = kids.length - 1;\n        while (l <= r) {\n          m = l + r >> 1;\n          var kid = xref.fetchIfRef(kids[m]);\n          var limits = kid.get('Limits');\n          if (key < xref.fetchIfRef(limits[0])) {\n            r = m - 1;\n          } else if (key > xref.fetchIfRef(limits[1])) {\n            l = m + 1;\n          } else {\n            kidsOrEntries = xref.fetchIfRef(kids[m]);\n            break;\n          }\n        }\n        if (l > r) {\n          return null;\n        }\n      }\n      var entries = kidsOrEntries.get(this._type);\n      if (Array.isArray(entries)) {\n        l = 0;\n        r = entries.length - 2;\n        while (l <= r) {\n          m = l + r & ~1;\n          var currentKey = xref.fetchIfRef(entries[m]);\n          if (key < currentKey) {\n            r = m - 2;\n          } else if (key > currentKey) {\n            l = m + 2;\n          } else {\n            return xref.fetchIfRef(entries[m + 1]);\n          }\n        }\n      }\n      return null;\n    }\n  };\n  return NameOrNumberTree;\n}();\nvar NameTree = function NameTreeClosure() {\n  function NameTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Names';\n  }\n  _util.Util.inherit(NameTree, NameOrNumberTree, {});\n  return NameTree;\n}();\nvar NumberTree = function NumberTreeClosure() {\n  function NumberTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Nums';\n  }\n  _util.Util.inherit(NumberTree, NameOrNumberTree, {});\n  return NumberTree;\n}();\nvar FileSpec = function FileSpecClosure() {\n  function FileSpec(root, xref) {\n    if (!root || !(0, _primitives.isDict)(root)) {\n      return;\n    }\n    this.xref = xref;\n    this.root = root;\n    if (root.has('FS')) {\n      this.fs = root.get('FS');\n    }\n    this.description = root.has('Desc') ? (0, _util.stringToPDFString)(root.get('Desc')) : '';\n    if (root.has('RF')) {\n      (0, _util.warn)('Related file specifications are not supported');\n    }\n    this.contentAvailable = true;\n    if (!root.has('EF')) {\n      this.contentAvailable = false;\n      (0, _util.warn)('Non-embedded file specifications are not supported');\n    }\n  }\n  function pickPlatformItem(dict) {\n    if (dict.has('UF')) {\n      return dict.get('UF');\n    } else if (dict.has('F')) {\n      return dict.get('F');\n    } else if (dict.has('Unix')) {\n      return dict.get('Unix');\n    } else if (dict.has('Mac')) {\n      return dict.get('Mac');\n    } else if (dict.has('DOS')) {\n      return dict.get('DOS');\n    }\n    return null;\n  }\n  FileSpec.prototype = {\n    get filename() {\n      if (!this._filename && this.root) {\n        var filename = pickPlatformItem(this.root) || 'unnamed';\n        this._filename = (0, _util.stringToPDFString)(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n      }\n      return this._filename;\n    },\n    get content() {\n      if (!this.contentAvailable) {\n        return null;\n      }\n      if (!this.contentRef && this.root) {\n        this.contentRef = pickPlatformItem(this.root.get('EF'));\n      }\n      var content = null;\n      if (this.contentRef) {\n        var xref = this.xref;\n        var fileObj = xref.fetchIfRef(this.contentRef);\n        if (fileObj && (0, _primitives.isStream)(fileObj)) {\n          content = fileObj.getBytes();\n        } else {\n          (0, _util.warn)('Embedded file specification points to non-existing/invalid ' + 'content');\n        }\n      } else {\n        (0, _util.warn)('Embedded file specification does not have a content');\n      }\n      return content;\n    },\n    get serializable() {\n      return {\n        filename: this.filename,\n        content: this.content\n      };\n    }\n  };\n  return FileSpec;\n}();\nvar ObjectLoader = function () {\n  function mayHaveChildren(value) {\n    return (0, _primitives.isRef)(value) || (0, _primitives.isDict)(value) || Array.isArray(value) || (0, _primitives.isStream)(value);\n  }\n  function addChildren(node, nodesToVisit) {\n    if ((0, _primitives.isDict)(node) || (0, _primitives.isStream)(node)) {\n      var dict = (0, _primitives.isDict)(node) ? node : node.dict;\n      var dictKeys = dict.getKeys();\n      for (var i = 0, ii = dictKeys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(dictKeys[i]);\n        if (mayHaveChildren(rawValue)) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n    } else if (Array.isArray(node)) {\n      for (var _i = 0, _ii = node.length; _i < _ii; _i++) {\n        var value = node[_i];\n        if (mayHaveChildren(value)) {\n          nodesToVisit.push(value);\n        }\n      }\n    }\n  }\n  function ObjectLoader(dict, keys, xref) {\n    this.dict = dict;\n    this.keys = keys;\n    this.xref = xref;\n    this.refSet = null;\n    this.capability = null;\n  }\n  ObjectLoader.prototype = {\n    load: function load() {\n      this.capability = (0, _util.createPromiseCapability)();\n      if (!(this.xref.stream instanceof _chunked_stream.ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n        this.capability.resolve();\n        return this.capability.promise;\n      }\n      var keys = this.keys,\n          dict = this.dict;\n\n      this.refSet = new _primitives.RefSet();\n      var nodesToVisit = [];\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(keys[i]);\n        if (rawValue !== undefined) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n      this._walk(nodesToVisit);\n      return this.capability.promise;\n    },\n    _walk: function _walk(nodesToVisit) {\n      var _this3 = this;\n\n      var nodesToRevisit = [];\n      var pendingRequests = [];\n      while (nodesToVisit.length) {\n        var currentNode = nodesToVisit.pop();\n        if ((0, _primitives.isRef)(currentNode)) {\n          if (this.refSet.has(currentNode)) {\n            continue;\n          }\n          try {\n            this.refSet.put(currentNode);\n            currentNode = this.xref.fetch(currentNode);\n          } catch (ex) {\n            if (!(ex instanceof _util.MissingDataException)) {\n              throw ex;\n            }\n            nodesToRevisit.push(currentNode);\n            pendingRequests.push({\n              begin: ex.begin,\n              end: ex.end\n            });\n          }\n        }\n        if (currentNode && currentNode.getBaseStreams) {\n          var baseStreams = currentNode.getBaseStreams();\n          var foundMissingData = false;\n          for (var i = 0, ii = baseStreams.length; i < ii; i++) {\n            var stream = baseStreams[i];\n            if (stream.getMissingChunks && stream.getMissingChunks().length) {\n              foundMissingData = true;\n              pendingRequests.push({\n                begin: stream.start,\n                end: stream.end\n              });\n            }\n          }\n          if (foundMissingData) {\n            nodesToRevisit.push(currentNode);\n          }\n        }\n        addChildren(currentNode, nodesToVisit);\n      }\n      if (pendingRequests.length) {\n        this.xref.stream.manager.requestRanges(pendingRequests).then(function () {\n          for (var _i2 = 0, _ii2 = nodesToRevisit.length; _i2 < _ii2; _i2++) {\n            var node = nodesToRevisit[_i2];\n            if ((0, _primitives.isRef)(node)) {\n              _this3.refSet.remove(node);\n            }\n          }\n          _this3._walk(nodesToRevisit);\n        }, this.capability.reject);\n        return;\n      }\n      this.refSet = null;\n      this.capability.resolve();\n    }\n  };\n  return ObjectLoader;\n}();\nexports.Catalog = Catalog;\nexports.ObjectLoader = ObjectLoader;\nexports.XRef = XRef;\nexports.FileSpec = FileSpec;\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxDecoder = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar CCITTFaxDecoder = function CCITTFaxDecoder() {\n  var ccittEOL = -2;\n  var ccittEOF = -1;\n  var twoDimPass = 0;\n  var twoDimHoriz = 1;\n  var twoDimVert0 = 2;\n  var twoDimVertR1 = 3;\n  var twoDimVertL1 = 4;\n  var twoDimVertR2 = 5;\n  var twoDimVertL2 = 6;\n  var twoDimVertR3 = 7;\n  var twoDimVertL3 = 8;\n  var twoDimTable = [[-1, -1], [-1, -1], [7, twoDimVertL3], [7, twoDimVertR3], [6, twoDimVertL2], [6, twoDimVertL2], [6, twoDimVertR2], [6, twoDimVertR2], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0]];\n  var whiteTable1 = [[-1, -1], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]];\n  var whiteTable2 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]];\n  var blackTable1 = [[-1, -1], [-1, -1], [12, ccittEOL], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]];\n  var blackTable2 = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]];\n  var blackTable3 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];\n  function CCITTFaxDecoder(source) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!source || typeof source.next !== 'function') {\n      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n    }\n    this.source = source;\n    this.eof = false;\n    this.encoding = options['K'] || 0;\n    this.eoline = options['EndOfLine'] || false;\n    this.byteAlign = options['EncodedByteAlign'] || false;\n    this.columns = options['Columns'] || 1728;\n    this.rows = options['Rows'] || 0;\n    var eoblock = options['EndOfBlock'];\n    if (eoblock === null || eoblock === undefined) {\n      eoblock = true;\n    }\n    this.eoblock = eoblock;\n    this.black = options['BlackIs1'] || false;\n    this.codingLine = new Uint32Array(this.columns + 1);\n    this.refLine = new Uint32Array(this.columns + 2);\n    this.codingLine[0] = this.columns;\n    this.codingPos = 0;\n    this.row = 0;\n    this.nextLine2D = this.encoding < 0;\n    this.inputBits = 0;\n    this.inputBuf = 0;\n    this.outputBits = 0;\n    this.rowsDone = false;\n    var code1 = void 0;\n    while ((code1 = this._lookBits(12)) === 0) {\n      this._eatBits(1);\n    }\n    if (code1 === 1) {\n      this._eatBits(12);\n    }\n    if (this.encoding > 0) {\n      this.nextLine2D = !this._lookBits(1);\n      this._eatBits(1);\n    }\n  }\n  CCITTFaxDecoder.prototype = {\n    readNextChar: function readNextChar() {\n      if (this.eof) {\n        return -1;\n      }\n      var refLine = this.refLine;\n      var codingLine = this.codingLine;\n      var columns = this.columns;\n      var refPos = void 0,\n          blackPixels = void 0,\n          bits = void 0,\n          i = void 0;\n      if (this.outputBits === 0) {\n        if (this.rowsDone) {\n          this.eof = true;\n        }\n        if (this.eof) {\n          return -1;\n        }\n        this.err = false;\n        var code1 = void 0,\n            code2 = void 0,\n            code3 = void 0;\n        if (this.nextLine2D) {\n          for (i = 0; codingLine[i] < columns; ++i) {\n            refLine[i] = codingLine[i];\n          }\n          refLine[i++] = columns;\n          refLine[i] = columns;\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          refPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = this._getTwoDimCode();\n            switch (code1) {\n              case twoDimPass:\n                this._addPixels(refLine[refPos + 1], blackPixels);\n                if (refLine[refPos + 1] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimHoriz:\n                code1 = code2 = 0;\n                if (blackPixels) {\n                  do {\n                    code1 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                } else {\n                  do {\n                    code1 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                }\n                this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n                if (codingLine[this.codingPos] < columns) {\n                  this._addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n                }\n                while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimVertR3:\n                this._addPixels(refLine[refPos] + 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR2:\n                this._addPixels(refLine[refPos] + 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR1:\n                this._addPixels(refLine[refPos] + 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVert0:\n                this._addPixels(refLine[refPos], blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL3:\n                this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL2:\n                this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL1:\n                this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case ccittEOF:\n                this._addPixels(columns, 0);\n                this.eof = true;\n                break;\n              default:\n                (0, _util.info)('bad 2d code');\n                this._addPixels(columns, 0);\n                this.err = true;\n            }\n          }\n        } else {\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = 0;\n            if (blackPixels) {\n              do {\n                code1 += code3 = this._getBlackCode();\n              } while (code3 >= 64);\n            } else {\n              do {\n                code1 += code3 = this._getWhiteCode();\n              } while (code3 >= 64);\n            }\n            this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n            blackPixels ^= 1;\n          }\n        }\n        var gotEOL = false;\n        if (this.byteAlign) {\n          this.inputBits &= ~7;\n        }\n        if (!this.eoblock && this.row === this.rows - 1) {\n          this.rowsDone = true;\n        } else {\n          code1 = this._lookBits(12);\n          if (this.eoline) {\n            while (code1 !== ccittEOF && code1 !== 1) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          } else {\n            while (code1 === 0) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          }\n          if (code1 === 1) {\n            this._eatBits(12);\n            gotEOL = true;\n          } else if (code1 === ccittEOF) {\n            this.eof = true;\n          }\n        }\n        if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n          this.nextLine2D = !this._lookBits(1);\n          this._eatBits(1);\n        }\n        if (this.eoblock && gotEOL && this.byteAlign) {\n          code1 = this._lookBits(12);\n          if (code1 === 1) {\n            this._eatBits(12);\n            if (this.encoding > 0) {\n              this._lookBits(1);\n              this._eatBits(1);\n            }\n            if (this.encoding >= 0) {\n              for (i = 0; i < 4; ++i) {\n                code1 = this._lookBits(12);\n                if (code1 !== 1) {\n                  (0, _util.info)('bad rtc code: ' + code1);\n                }\n                this._eatBits(12);\n                if (this.encoding > 0) {\n                  this._lookBits(1);\n                  this._eatBits(1);\n                }\n              }\n            }\n            this.eof = true;\n          }\n        } else if (this.err && this.eoline) {\n          while (true) {\n            code1 = this._lookBits(13);\n            if (code1 === ccittEOF) {\n              this.eof = true;\n              return -1;\n            }\n            if (code1 >> 1 === 1) {\n              break;\n            }\n            this._eatBits(1);\n          }\n          this._eatBits(12);\n          if (this.encoding > 0) {\n            this._eatBits(1);\n            this.nextLine2D = !(code1 & 1);\n          }\n        }\n        if (codingLine[0] > 0) {\n          this.outputBits = codingLine[this.codingPos = 0];\n        } else {\n          this.outputBits = codingLine[this.codingPos = 1];\n        }\n        this.row++;\n      }\n      var c = void 0;\n      if (this.outputBits >= 8) {\n        c = this.codingPos & 1 ? 0 : 0xFF;\n        this.outputBits -= 8;\n        if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n          this.codingPos++;\n          this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n        }\n      } else {\n        bits = 8;\n        c = 0;\n        do {\n          if (this.outputBits > bits) {\n            c <<= bits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - bits;\n            }\n            this.outputBits -= bits;\n            bits = 0;\n          } else {\n            c <<= this.outputBits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - this.outputBits;\n            }\n            bits -= this.outputBits;\n            this.outputBits = 0;\n            if (codingLine[this.codingPos] < columns) {\n              this.codingPos++;\n              this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n            } else if (bits > 0) {\n              c <<= bits;\n              bits = 0;\n            }\n          }\n        } while (bits);\n      }\n      if (this.black) {\n        c ^= 0xFF;\n      }\n      return c;\n    },\n    _addPixels: function _addPixels(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _addPixelsNeg: function _addPixelsNeg(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      } else if (a1 < codingLine[codingPos]) {\n        if (a1 < 0) {\n          (0, _util.info)('invalid code');\n          this.err = true;\n          a1 = 0;\n        }\n        while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n          --codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _findTableCode: function _findTableCode(start, end, table, limit) {\n      var limitValue = limit || 0;\n      for (var i = start; i <= end; ++i) {\n        var code = this._lookBits(i);\n        if (code === ccittEOF) {\n          return [true, 1, false];\n        }\n        if (i < end) {\n          code <<= end - i;\n        }\n        if (!limitValue || code >= limitValue) {\n          var p = table[code - limitValue];\n          if (p[0] === i) {\n            this._eatBits(i);\n            return [true, p[1], true];\n          }\n        }\n      }\n      return [false, 0, false];\n    },\n    _getTwoDimCode: function _getTwoDimCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(7);\n        p = twoDimTable[code];\n        if (p && p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 7, twoDimTable);\n        if (result[0] && result[2]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('Bad two dim code');\n      return ccittEOF;\n    },\n    _getWhiteCode: function _getWhiteCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(12);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 5 === 0) {\n          p = whiteTable1[code];\n        } else {\n          p = whiteTable2[code >> 3];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 9, whiteTable2);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(11, 12, whiteTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad white code');\n      this._eatBits(1);\n      return 1;\n    },\n    _getBlackCode: function _getBlackCode() {\n      var code = void 0,\n          p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(13);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 7 === 0) {\n          p = blackTable1[code];\n        } else if (code >> 9 === 0 && code >> 7 !== 0) {\n          p = blackTable2[(code >> 1) - 64];\n        } else {\n          p = blackTable3[code >> 7];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(2, 6, blackTable3);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(7, 12, blackTable2, 64);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(10, 13, blackTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad black code');\n      this._eatBits(1);\n      return 1;\n    },\n    _lookBits: function _lookBits(n) {\n      var c = void 0;\n      while (this.inputBits < n) {\n        if ((c = this.source.next()) === -1) {\n          if (this.inputBits === 0) {\n            return ccittEOF;\n          }\n          return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n        }\n        this.inputBuf = this.inputBuf << 8 | c;\n        this.inputBits += 8;\n      }\n      return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n    },\n    _eatBits: function _eatBits(n) {\n      if ((this.inputBits -= n) < 0) {\n        this.inputBits = 0;\n      }\n    }\n  };\n  return CCITTFaxDecoder;\n}();\nexports.CCITTFaxDecoder = CCITTFaxDecoder;\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\n  var QeTable = [{\n    qe: 0x5601,\n    nmps: 1,\n    nlps: 1,\n    switchFlag: 1\n  }, {\n    qe: 0x3401,\n    nmps: 2,\n    nlps: 6,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 3,\n    nlps: 9,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 4,\n    nlps: 12,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 5,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 38,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 7,\n    nlps: 6,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 8,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 9,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 10,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 11,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 12,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 13,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 29,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 15,\n    nlps: 14,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 16,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x5101,\n    nmps: 17,\n    nlps: 15,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 18,\n    nlps: 16,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 19,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x3401,\n    nmps: 20,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 21,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2801,\n    nmps: 22,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 23,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x2201,\n    nmps: 24,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 25,\n    nlps: 22,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 26,\n    nlps: 23,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 27,\n    nlps: 24,\n    switchFlag: 0\n  }, {\n    qe: 0x1401,\n    nmps: 28,\n    nlps: 25,\n    switchFlag: 0\n  }, {\n    qe: 0x1201,\n    nmps: 29,\n    nlps: 26,\n    switchFlag: 0\n  }, {\n    qe: 0x1101,\n    nmps: 30,\n    nlps: 27,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 31,\n    nlps: 28,\n    switchFlag: 0\n  }, {\n    qe: 0x09C1,\n    nmps: 32,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x08A1,\n    nmps: 33,\n    nlps: 30,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 34,\n    nlps: 31,\n    switchFlag: 0\n  }, {\n    qe: 0x0441,\n    nmps: 35,\n    nlps: 32,\n    switchFlag: 0\n  }, {\n    qe: 0x02A1,\n    nmps: 36,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 37,\n    nlps: 34,\n    switchFlag: 0\n  }, {\n    qe: 0x0141,\n    nmps: 38,\n    nlps: 35,\n    switchFlag: 0\n  }, {\n    qe: 0x0111,\n    nmps: 39,\n    nlps: 36,\n    switchFlag: 0\n  }, {\n    qe: 0x0085,\n    nmps: 40,\n    nlps: 37,\n    switchFlag: 0\n  }, {\n    qe: 0x0049,\n    nmps: 41,\n    nlps: 38,\n    switchFlag: 0\n  }, {\n    qe: 0x0025,\n    nmps: 42,\n    nlps: 39,\n    switchFlag: 0\n  }, {\n    qe: 0x0015,\n    nmps: 43,\n    nlps: 40,\n    switchFlag: 0\n  }, {\n    qe: 0x0009,\n    nmps: 44,\n    nlps: 41,\n    switchFlag: 0\n  }, {\n    qe: 0x0005,\n    nmps: 45,\n    nlps: 42,\n    switchFlag: 0\n  }, {\n    qe: 0x0001,\n    nmps: 45,\n    nlps: 43,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 46,\n    nlps: 46,\n    switchFlag: 0\n  }];\n  function ArithmeticDecoder(data, start, end) {\n    this.data = data;\n    this.bp = start;\n    this.dataEnd = end;\n    this.chigh = data[start];\n    this.clow = 0;\n    this.byteIn();\n    this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n    this.clow = this.clow << 7 & 0xFFFF;\n    this.ct -= 7;\n    this.a = 0x8000;\n  }\n  ArithmeticDecoder.prototype = {\n    byteIn: function ArithmeticDecoder_byteIn() {\n      var data = this.data;\n      var bp = this.bp;\n      if (data[bp] === 0xFF) {\n        var b1 = data[bp + 1];\n        if (b1 > 0x8F) {\n          this.clow += 0xFF00;\n          this.ct = 8;\n        } else {\n          bp++;\n          this.clow += data[bp] << 9;\n          this.ct = 7;\n          this.bp = bp;\n        }\n      } else {\n        bp++;\n        this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n        this.ct = 8;\n        this.bp = bp;\n      }\n      if (this.clow > 0xFFFF) {\n        this.chigh += this.clow >> 16;\n        this.clow &= 0xFFFF;\n      }\n    },\n    readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n      var cx_index = contexts[pos] >> 1,\n          cx_mps = contexts[pos] & 1;\n      var qeTableIcx = QeTable[cx_index];\n      var qeIcx = qeTableIcx.qe;\n      var d;\n      var a = this.a - qeIcx;\n      if (this.chigh < qeIcx) {\n        if (a < qeIcx) {\n          a = qeIcx;\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        } else {\n          a = qeIcx;\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        }\n      } else {\n        this.chigh -= qeIcx;\n        if ((a & 0x8000) !== 0) {\n          this.a = a;\n          return cx_mps;\n        }\n        if (a < qeIcx) {\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        } else {\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        }\n      }\n      do {\n        if (this.ct === 0) {\n          this.byteIn();\n        }\n        a <<= 1;\n        this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n        this.clow = this.clow << 1 & 0xFFFF;\n        this.ct--;\n      } while ((a & 0x8000) === 0);\n      this.a = a;\n      contexts[pos] = cx_index << 1 | cx_mps;\n      return d;\n    }\n  };\n  return ArithmeticDecoder;\n}();\nexports.ArithmeticDecoder = ArithmeticDecoder;\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxImage = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _arithmetic_decoder = __w_pdfjs_require__(66);\n\nvar JpxError = function JpxErrorClosure() {\n  function JpxError(msg) {\n    this.message = 'JPX error: ' + msg;\n  }\n  JpxError.prototype = new Error();\n  JpxError.prototype.name = 'JpxError';\n  JpxError.constructor = JpxError;\n  return JpxError;\n}();\nvar JpxImage = function JpxImageClosure() {\n  var SubbandsGainLog2 = {\n    'LL': 0,\n    'LH': 1,\n    'HL': 1,\n    'HH': 2\n  };\n  function JpxImage() {\n    this.failOnCorruptedImage = false;\n  }\n  JpxImage.prototype = {\n    parse: function JpxImage_parse(data) {\n      var head = (0, _util.readUint16)(data, 0);\n      if (head === 0xFF4F) {\n        this.parseCodestream(data, 0, data.length);\n        return;\n      }\n      var position = 0,\n          length = data.length;\n      while (position < length) {\n        var headerSize = 8;\n        var lbox = (0, _util.readUint32)(data, position);\n        var tbox = (0, _util.readUint32)(data, position + 4);\n        position += headerSize;\n        if (lbox === 1) {\n          lbox = (0, _util.readUint32)(data, position) * 4294967296 + (0, _util.readUint32)(data, position + 4);\n          position += 8;\n          headerSize += 8;\n        }\n        if (lbox === 0) {\n          lbox = length - position + headerSize;\n        }\n        if (lbox < headerSize) {\n          throw new JpxError('Invalid box field size');\n        }\n        var dataLength = lbox - headerSize;\n        var jumpDataLength = true;\n        switch (tbox) {\n          case 0x6A703268:\n            jumpDataLength = false;\n            break;\n          case 0x636F6C72:\n            var method = data[position];\n            if (method === 1) {\n              var colorspace = (0, _util.readUint32)(data, position + 3);\n              switch (colorspace) {\n                case 16:\n                case 17:\n                case 18:\n                  break;\n                default:\n                  (0, _util.warn)('Unknown colorspace ' + colorspace);\n                  break;\n              }\n            } else if (method === 2) {\n              (0, _util.info)('ICC profile not supported');\n            }\n            break;\n          case 0x6A703263:\n            this.parseCodestream(data, position, position + dataLength);\n            break;\n          case 0x6A502020:\n            if ((0, _util.readUint32)(data, position) !== 0x0d0a870a) {\n              (0, _util.warn)('Invalid JP2 signature');\n            }\n            break;\n          case 0x6A501A1A:\n          case 0x66747970:\n          case 0x72726571:\n          case 0x72657320:\n          case 0x69686472:\n            break;\n          default:\n            var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n            (0, _util.warn)('Unsupported header type ' + tbox + ' (' + headerType + ')');\n            break;\n        }\n        if (jumpDataLength) {\n          position += dataLength;\n        }\n      }\n    },\n    parseImageProperties: function JpxImage_parseImageProperties(stream) {\n      var newByte = stream.getByte();\n      while (newByte >= 0) {\n        var oldByte = newByte;\n        newByte = stream.getByte();\n        var code = oldByte << 8 | newByte;\n        if (code === 0xFF51) {\n          stream.skip(4);\n          var Xsiz = stream.getInt32() >>> 0;\n          var Ysiz = stream.getInt32() >>> 0;\n          var XOsiz = stream.getInt32() >>> 0;\n          var YOsiz = stream.getInt32() >>> 0;\n          stream.skip(16);\n          var Csiz = stream.getUint16();\n          this.width = Xsiz - XOsiz;\n          this.height = Ysiz - YOsiz;\n          this.componentsCount = Csiz;\n          this.bitsPerComponent = 8;\n          return;\n        }\n      }\n      throw new JpxError('No size marker found in JPX stream');\n    },\n    parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n      var context = {};\n      var doNotRecover = false;\n      try {\n        var position = start;\n        while (position + 1 < end) {\n          var code = (0, _util.readUint16)(data, position);\n          position += 2;\n          var length = 0,\n              j,\n              sqcd,\n              spqcds,\n              spqcdSize,\n              scalarExpounded,\n              tile;\n          switch (code) {\n            case 0xFF4F:\n              context.mainHeader = true;\n              break;\n            case 0xFFD9:\n              break;\n            case 0xFF51:\n              length = (0, _util.readUint16)(data, position);\n              var siz = {};\n              siz.Xsiz = (0, _util.readUint32)(data, position + 4);\n              siz.Ysiz = (0, _util.readUint32)(data, position + 8);\n              siz.XOsiz = (0, _util.readUint32)(data, position + 12);\n              siz.YOsiz = (0, _util.readUint32)(data, position + 16);\n              siz.XTsiz = (0, _util.readUint32)(data, position + 20);\n              siz.YTsiz = (0, _util.readUint32)(data, position + 24);\n              siz.XTOsiz = (0, _util.readUint32)(data, position + 28);\n              siz.YTOsiz = (0, _util.readUint32)(data, position + 32);\n              var componentsCount = (0, _util.readUint16)(data, position + 36);\n              siz.Csiz = componentsCount;\n              var components = [];\n              j = position + 38;\n              for (var i = 0; i < componentsCount; i++) {\n                var component = {\n                  precision: (data[j] & 0x7F) + 1,\n                  isSigned: !!(data[j] & 0x80),\n                  XRsiz: data[j + 1],\n                  YRsiz: data[j + 2]\n                };\n                j += 3;\n                calculateComponentDimensions(component, siz);\n                components.push(component);\n              }\n              context.SIZ = siz;\n              context.components = components;\n              calculateTileGrids(context, components);\n              context.QCC = [];\n              context.COC = [];\n              break;\n            case 0xFF5C:\n              length = (0, _util.readUint16)(data, position);\n              var qcd = {};\n              j = position + 2;\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcd.noQuantization = spqcdSize === 8;\n              qcd.scalarExpounded = scalarExpounded;\n              qcd.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                var spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcd.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCD = qcd;\n              } else {\n                context.currentTile.QCD = qcd;\n                context.currentTile.QCC = [];\n              }\n              break;\n            case 0xFF5D:\n              length = (0, _util.readUint16)(data, position);\n              var qcc = {};\n              j = position + 2;\n              var cqcc;\n              if (context.SIZ.Csiz < 257) {\n                cqcc = data[j++];\n              } else {\n                cqcc = (0, _util.readUint16)(data, j);\n                j += 2;\n              }\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcc.noQuantization = spqcdSize === 8;\n              qcc.scalarExpounded = scalarExpounded;\n              qcc.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcc.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCC[cqcc] = qcc;\n              } else {\n                context.currentTile.QCC[cqcc] = qcc;\n              }\n              break;\n            case 0xFF52:\n              length = (0, _util.readUint16)(data, position);\n              var cod = {};\n              j = position + 2;\n              var scod = data[j++];\n              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n              cod.sopMarkerUsed = !!(scod & 2);\n              cod.ephMarkerUsed = !!(scod & 4);\n              cod.progressionOrder = data[j++];\n              cod.layersCount = (0, _util.readUint16)(data, j);\n              j += 2;\n              cod.multipleComponentTransform = data[j++];\n              cod.decompositionLevelsCount = data[j++];\n              cod.xcb = (data[j++] & 0xF) + 2;\n              cod.ycb = (data[j++] & 0xF) + 2;\n              var blockStyle = data[j++];\n              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n              cod.resetContextProbabilities = !!(blockStyle & 2);\n              cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n              cod.verticallyStripe = !!(blockStyle & 8);\n              cod.predictableTermination = !!(blockStyle & 16);\n              cod.segmentationSymbolUsed = !!(blockStyle & 32);\n              cod.reversibleTransformation = data[j++];\n              if (cod.entropyCoderWithCustomPrecincts) {\n                var precinctsSizes = [];\n                while (j < length + position) {\n                  var precinctsSize = data[j++];\n                  precinctsSizes.push({\n                    PPx: precinctsSize & 0xF,\n                    PPy: precinctsSize >> 4\n                  });\n                }\n                cod.precinctsSizes = precinctsSizes;\n              }\n              var unsupported = [];\n              if (cod.selectiveArithmeticCodingBypass) {\n                unsupported.push('selectiveArithmeticCodingBypass');\n              }\n              if (cod.resetContextProbabilities) {\n                unsupported.push('resetContextProbabilities');\n              }\n              if (cod.terminationOnEachCodingPass) {\n                unsupported.push('terminationOnEachCodingPass');\n              }\n              if (cod.verticallyStripe) {\n                unsupported.push('verticallyStripe');\n              }\n              if (cod.predictableTermination) {\n                unsupported.push('predictableTermination');\n              }\n              if (unsupported.length > 0) {\n                doNotRecover = true;\n                throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n              }\n              if (context.mainHeader) {\n                context.COD = cod;\n              } else {\n                context.currentTile.COD = cod;\n                context.currentTile.COC = [];\n              }\n              break;\n            case 0xFF90:\n              length = (0, _util.readUint16)(data, position);\n              tile = {};\n              tile.index = (0, _util.readUint16)(data, position + 2);\n              tile.length = (0, _util.readUint32)(data, position + 4);\n              tile.dataEnd = tile.length + position - 2;\n              tile.partIndex = data[position + 8];\n              tile.partsCount = data[position + 9];\n              context.mainHeader = false;\n              if (tile.partIndex === 0) {\n                tile.COD = context.COD;\n                tile.COC = context.COC.slice(0);\n                tile.QCD = context.QCD;\n                tile.QCC = context.QCC.slice(0);\n              }\n              context.currentTile = tile;\n              break;\n            case 0xFF93:\n              tile = context.currentTile;\n              if (tile.partIndex === 0) {\n                initializeTile(context, tile.index);\n                buildPackets(context);\n              }\n              length = tile.dataEnd - position;\n              parseTilePackets(context, data, position, length);\n              break;\n            case 0xFF55:\n            case 0xFF57:\n            case 0xFF58:\n            case 0xFF64:\n              length = (0, _util.readUint16)(data, position);\n              break;\n            case 0xFF53:\n              throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n            default:\n              throw new Error('Unknown codestream code: ' + code.toString(16));\n          }\n          position += length;\n        }\n      } catch (e) {\n        if (doNotRecover || this.failOnCorruptedImage) {\n          throw new JpxError(e.message);\n        } else {\n          (0, _util.warn)('JPX: Trying to recover from: ' + e.message);\n        }\n      }\n      this.tiles = transformComponents(context);\n      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n      this.componentsCount = context.SIZ.Csiz;\n    }\n  };\n  function calculateComponentDimensions(component, siz) {\n    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n    component.width = component.x1 - component.x0;\n    component.height = component.y1 - component.y0;\n  }\n  function calculateTileGrids(context, components) {\n    var siz = context.SIZ;\n    var tile,\n        tiles = [];\n    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n    for (var q = 0; q < numYtiles; q++) {\n      for (var p = 0; p < numXtiles; p++) {\n        tile = {};\n        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n        tile.width = tile.tx1 - tile.tx0;\n        tile.height = tile.ty1 - tile.ty0;\n        tile.components = [];\n        tiles.push(tile);\n      }\n    }\n    context.tiles = tiles;\n    var componentsCount = siz.Csiz;\n    for (var i = 0, ii = componentsCount; i < ii; i++) {\n      var component = components[i];\n      for (var j = 0, jj = tiles.length; j < jj; j++) {\n        var tileComponent = {};\n        tile = tiles[j];\n        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n        tile.components[i] = tileComponent;\n      }\n    }\n  }\n  function getBlocksDimensions(context, component, r) {\n    var codOrCoc = component.codingStyleParameters;\n    var result = {};\n    if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n      result.PPx = 15;\n      result.PPy = 15;\n    } else {\n      result.PPx = codOrCoc.precinctsSizes[r].PPx;\n      result.PPy = codOrCoc.precinctsSizes[r].PPy;\n    }\n    result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n    result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n    return result;\n  }\n  function buildPrecincts(context, resolution, dimensions) {\n    var precinctWidth = 1 << dimensions.PPx;\n    var precinctHeight = 1 << dimensions.PPy;\n    var isZeroRes = resolution.resLevel === 0;\n    var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n    var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n    var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n    var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n    var numprecincts = numprecinctswide * numprecinctshigh;\n    resolution.precinctParameters = {\n      precinctWidth: precinctWidth,\n      precinctHeight: precinctHeight,\n      numprecinctswide: numprecinctswide,\n      numprecinctshigh: numprecinctshigh,\n      numprecincts: numprecincts,\n      precinctWidthInSubband: precinctWidthInSubband,\n      precinctHeightInSubband: precinctHeightInSubband\n    };\n  }\n  function buildCodeblocks(context, subband, dimensions) {\n    var xcb_ = dimensions.xcb_;\n    var ycb_ = dimensions.ycb_;\n    var codeblockWidth = 1 << xcb_;\n    var codeblockHeight = 1 << ycb_;\n    var cbx0 = subband.tbx0 >> xcb_;\n    var cby0 = subband.tby0 >> ycb_;\n    var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n    var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n    var precinctParameters = subband.resolution.precinctParameters;\n    var codeblocks = [];\n    var precincts = [];\n    var i, j, codeblock, precinctNumber;\n    for (j = cby0; j < cby1; j++) {\n      for (i = cbx0; i < cbx1; i++) {\n        codeblock = {\n          cbx: i,\n          cby: j,\n          tbx0: codeblockWidth * i,\n          tby0: codeblockHeight * j,\n          tbx1: codeblockWidth * (i + 1),\n          tby1: codeblockHeight * (j + 1)\n        };\n        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n        var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n        var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n        precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n        codeblock.precinctNumber = precinctNumber;\n        codeblock.subbandType = subband.type;\n        codeblock.Lblock = 3;\n        if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n          continue;\n        }\n        codeblocks.push(codeblock);\n        var precinct = precincts[precinctNumber];\n        if (precinct !== undefined) {\n          if (i < precinct.cbxMin) {\n            precinct.cbxMin = i;\n          } else if (i > precinct.cbxMax) {\n            precinct.cbxMax = i;\n          }\n          if (j < precinct.cbyMin) {\n            precinct.cbxMin = j;\n          } else if (j > precinct.cbyMax) {\n            precinct.cbyMax = j;\n          }\n        } else {\n          precincts[precinctNumber] = precinct = {\n            cbxMin: i,\n            cbyMin: j,\n            cbxMax: i,\n            cbyMax: j\n          };\n        }\n        codeblock.precinct = precinct;\n      }\n    }\n    subband.codeblockParameters = {\n      codeblockWidth: xcb_,\n      codeblockHeight: ycb_,\n      numcodeblockwide: cbx1 - cbx0 + 1,\n      numcodeblockhigh: cby1 - cby0 + 1\n    };\n    subband.codeblocks = codeblocks;\n    subband.precincts = precincts;\n  }\n  function createPacket(resolution, precinctNumber, layerNumber) {\n    var precinctCodeblocks = [];\n    var subbands = resolution.subbands;\n    for (var i = 0, ii = subbands.length; i < ii; i++) {\n      var subband = subbands[i];\n      var codeblocks = subband.codeblocks;\n      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n        var codeblock = codeblocks[j];\n        if (codeblock.precinctNumber !== precinctNumber) {\n          continue;\n        }\n        precinctCodeblocks.push(codeblock);\n      }\n    }\n    return {\n      layerNumber: layerNumber,\n      codeblocks: precinctCodeblocks\n    };\n  }\n  function LayerResolutionComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var l = 0,\n        r = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; l < layersCount; l++) {\n        for (; r <= maxDecompositionLevelsCount; r++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        r = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionLayerComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var r = 0,\n        l = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; l < layersCount; l++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        l = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionPositionComponentLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var l, r, c, p;\n    var maxDecompositionLevelsCount = 0;\n    for (c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n    }\n    var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n      var maxNumPrecincts = 0;\n      for (c = 0; c < componentsCount; ++c) {\n        var resolutions = tile.components[c].resolutions;\n        if (r < resolutions.length) {\n          maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n        }\n      }\n      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n    }\n    l = 0;\n    r = 0;\n    c = 0;\n    p = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; p < maxNumPrecinctsInLevel[r]; p++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            if (p >= numprecincts) {\n              continue;\n            }\n            for (; l < layersCount;) {\n              var packet = createPacket(resolution, p, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          c = 0;\n        }\n        p = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function PositionComponentResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var precinctsIterationSizes = precinctsSizes;\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          c = 0;\n        }\n        px = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ComponentPositionResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; c < componentsCount; ++c) {\n        var component = tile.components[c];\n        var precinctsIterationSizes = precinctsSizes.components[c];\n        var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n          for (; px < precinctsIterationSizes.maxNumWide; px++) {\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          px = 0;\n        }\n        py = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n    var posX = pxIndex * precinctIterationSizes.minWidth;\n    var posY = pyIndex * precinctIterationSizes.minHeight;\n    if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n      return null;\n    }\n    var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n    return posX / sizeInImageScale.height + startPrecinctRowIndex;\n  }\n  function getPrecinctSizesInImageScale(tile) {\n    var componentsCount = tile.components.length;\n    var minWidth = Number.MAX_VALUE;\n    var minHeight = Number.MAX_VALUE;\n    var maxNumWide = 0;\n    var maxNumHigh = 0;\n    var sizePerComponent = new Array(componentsCount);\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var sizePerResolution = new Array(decompositionLevelsCount + 1);\n      var minWidthCurrentComponent = Number.MAX_VALUE;\n      var minHeightCurrentComponent = Number.MAX_VALUE;\n      var maxNumWideCurrentComponent = 0;\n      var maxNumHighCurrentComponent = 0;\n      var scale = 1;\n      for (var r = decompositionLevelsCount; r >= 0; --r) {\n        var resolution = component.resolutions[r];\n        var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n        var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n        minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n        minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n        maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n        maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n        sizePerResolution[r] = {\n          width: widthCurrentResolution,\n          height: heightCurrentResolution\n        };\n        scale <<= 1;\n      }\n      minWidth = Math.min(minWidth, minWidthCurrentComponent);\n      minHeight = Math.min(minHeight, minHeightCurrentComponent);\n      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n      sizePerComponent[c] = {\n        resolutions: sizePerResolution,\n        minWidth: minWidthCurrentComponent,\n        minHeight: minHeightCurrentComponent,\n        maxNumWide: maxNumWideCurrentComponent,\n        maxNumHigh: maxNumHighCurrentComponent\n      };\n    }\n    return {\n      components: sizePerComponent,\n      minWidth: minWidth,\n      minHeight: minHeight,\n      maxNumWide: maxNumWide,\n      maxNumHigh: maxNumHigh\n    };\n  }\n  function buildPackets(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var componentsCount = siz.Csiz;\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var resolutions = [];\n      var subbands = [];\n      for (var r = 0; r <= decompositionLevelsCount; r++) {\n        var blocksDimensions = getBlocksDimensions(context, component, r);\n        var resolution = {};\n        var scale = 1 << decompositionLevelsCount - r;\n        resolution.trx0 = Math.ceil(component.tcx0 / scale);\n        resolution.try0 = Math.ceil(component.tcy0 / scale);\n        resolution.trx1 = Math.ceil(component.tcx1 / scale);\n        resolution.try1 = Math.ceil(component.tcy1 / scale);\n        resolution.resLevel = r;\n        buildPrecincts(context, resolution, blocksDimensions);\n        resolutions.push(resolution);\n        var subband;\n        if (r === 0) {\n          subband = {};\n          subband.type = 'LL';\n          subband.tbx0 = Math.ceil(component.tcx0 / scale);\n          subband.tby0 = Math.ceil(component.tcy0 / scale);\n          subband.tbx1 = Math.ceil(component.tcx1 / scale);\n          subband.tby1 = Math.ceil(component.tcy1 / scale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolution.subbands = [subband];\n        } else {\n          var bscale = 1 << decompositionLevelsCount - r + 1;\n          var resolutionSubbands = [];\n          subband = {};\n          subband.type = 'HL';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'LH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'HH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          resolution.subbands = resolutionSubbands;\n        }\n      }\n      component.resolutions = resolutions;\n      component.subbands = subbands;\n    }\n    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n    switch (progressionOrder) {\n      case 0:\n        tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n        break;\n      case 1:\n        tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n        break;\n      case 2:\n        tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n        break;\n      case 3:\n        tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n        break;\n      case 4:\n        tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n        break;\n      default:\n        throw new JpxError('Unsupported progression order ' + progressionOrder);\n    }\n  }\n  function parseTilePackets(context, data, offset, dataLength) {\n    var position = 0;\n    var buffer,\n        bufferSize = 0,\n        skipNextBit = false;\n    function readBits(count) {\n      while (bufferSize < count) {\n        var b = data[offset + position];\n        position++;\n        if (skipNextBit) {\n          buffer = buffer << 7 | b;\n          bufferSize += 7;\n          skipNextBit = false;\n        } else {\n          buffer = buffer << 8 | b;\n          bufferSize += 8;\n        }\n        if (b === 0xFF) {\n          skipNextBit = true;\n        }\n      }\n      bufferSize -= count;\n      return buffer >>> bufferSize & (1 << count) - 1;\n    }\n    function skipMarkerIfEqual(value) {\n      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n        skipBytes(1);\n        return true;\n      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n        skipBytes(2);\n        return true;\n      }\n      return false;\n    }\n    function skipBytes(count) {\n      position += count;\n    }\n    function alignToByte() {\n      bufferSize = 0;\n      if (skipNextBit) {\n        position++;\n        skipNextBit = false;\n      }\n    }\n    function readCodingpasses() {\n      if (readBits(1) === 0) {\n        return 1;\n      }\n      if (readBits(1) === 0) {\n        return 2;\n      }\n      var value = readBits(2);\n      if (value < 3) {\n        return value + 3;\n      }\n      value = readBits(5);\n      if (value < 31) {\n        return value + 6;\n      }\n      value = readBits(7);\n      return value + 37;\n    }\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var sopMarkerUsed = context.COD.sopMarkerUsed;\n    var ephMarkerUsed = context.COD.ephMarkerUsed;\n    var packetsIterator = tile.packetsIterator;\n    while (position < dataLength) {\n      alignToByte();\n      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n        skipBytes(4);\n      }\n      var packet = packetsIterator.nextPacket();\n      if (!readBits(1)) {\n        continue;\n      }\n      var layerNumber = packet.layerNumber;\n      var queue = [],\n          codeblock;\n      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n        codeblock = packet.codeblocks[i];\n        var precinct = codeblock.precinct;\n        var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n        var codeblockRow = codeblock.cby - precinct.cbyMin;\n        var codeblockIncluded = false;\n        var firstTimeInclusion = false;\n        var valueReady;\n        if (codeblock['included'] !== undefined) {\n          codeblockIncluded = !!readBits(1);\n        } else {\n          precinct = codeblock.precinct;\n          var inclusionTree, zeroBitPlanesTree;\n          if (precinct['inclusionTree'] !== undefined) {\n            inclusionTree = precinct.inclusionTree;\n          } else {\n            var width = precinct.cbxMax - precinct.cbxMin + 1;\n            var height = precinct.cbyMax - precinct.cbyMin + 1;\n            inclusionTree = new InclusionTree(width, height, layerNumber);\n            zeroBitPlanesTree = new TagTree(width, height);\n            precinct.inclusionTree = inclusionTree;\n            precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n          }\n          if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n            while (true) {\n              if (readBits(1)) {\n                valueReady = !inclusionTree.nextLevel();\n                if (valueReady) {\n                  codeblock.included = true;\n                  codeblockIncluded = firstTimeInclusion = true;\n                  break;\n                }\n              } else {\n                inclusionTree.incrementValue(layerNumber);\n                break;\n              }\n            }\n          }\n        }\n        if (!codeblockIncluded) {\n          continue;\n        }\n        if (firstTimeInclusion) {\n          zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n          zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n          while (true) {\n            if (readBits(1)) {\n              valueReady = !zeroBitPlanesTree.nextLevel();\n              if (valueReady) {\n                break;\n              }\n            } else {\n              zeroBitPlanesTree.incrementValue();\n            }\n          }\n          codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n        }\n        var codingpasses = readCodingpasses();\n        while (readBits(1)) {\n          codeblock.Lblock++;\n        }\n        var codingpassesLog2 = (0, _util.log2)(codingpasses);\n        var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n        var codedDataLength = readBits(bits);\n        queue.push({\n          codeblock: codeblock,\n          codingpasses: codingpasses,\n          dataLength: codedDataLength\n        });\n      }\n      alignToByte();\n      if (ephMarkerUsed) {\n        skipMarkerIfEqual(0x92);\n      }\n      while (queue.length > 0) {\n        var packetItem = queue.shift();\n        codeblock = packetItem.codeblock;\n        if (codeblock['data'] === undefined) {\n          codeblock.data = [];\n        }\n        codeblock.data.push({\n          data: data,\n          start: offset + position,\n          end: offset + position + packetItem.dataLength,\n          codingpasses: packetItem.codingpasses\n        });\n        position += packetItem.dataLength;\n      }\n    }\n    return position;\n  }\n  function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n    var x0 = subband.tbx0;\n    var y0 = subband.tby0;\n    var width = subband.tbx1 - subband.tbx0;\n    var codeblocks = subband.codeblocks;\n    var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n    var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n      var codeblock = codeblocks[i];\n      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n      if (blockWidth === 0 || blockHeight === 0) {\n        continue;\n      }\n      if (codeblock['data'] === undefined) {\n        continue;\n      }\n      var bitModel, currentCodingpassType;\n      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n      currentCodingpassType = 2;\n      var data = codeblock.data,\n          totalLength = 0,\n          codingpasses = 0;\n      var j, jj, dataItem;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        totalLength += dataItem.end - dataItem.start;\n        codingpasses += dataItem.codingpasses;\n      }\n      var encodedData = new Uint8Array(totalLength);\n      var position = 0;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n        encodedData.set(chunk, position);\n        position += chunk.length;\n      }\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(encodedData, 0, totalLength);\n      bitModel.setDecoder(decoder);\n      for (j = 0; j < codingpasses; j++) {\n        switch (currentCodingpassType) {\n          case 0:\n            bitModel.runSignificancePropagationPass();\n            break;\n          case 1:\n            bitModel.runMagnitudeRefinementPass();\n            break;\n          case 2:\n            bitModel.runCleanupPass();\n            if (segmentationSymbolUsed) {\n              bitModel.checkSegmentationSymbol();\n            }\n            break;\n        }\n        currentCodingpassType = (currentCodingpassType + 1) % 3;\n      }\n      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n      var sign = bitModel.coefficentsSign;\n      var magnitude = bitModel.coefficentsMagnitude;\n      var bitsDecoded = bitModel.bitsDecoded;\n      var magnitudeCorrection = reversible ? 0 : 0.5;\n      var k, n, nb;\n      position = 0;\n      var interleave = subband.type !== 'LL';\n      for (j = 0; j < blockHeight; j++) {\n        var row = offset / width | 0;\n        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n        for (k = 0; k < blockWidth; k++) {\n          n = magnitude[position];\n          if (n !== 0) {\n            n = (n + magnitudeCorrection) * delta;\n            if (sign[position] !== 0) {\n              n = -n;\n            }\n            nb = bitsDecoded[position];\n            var pos = interleave ? levelOffset + (offset << 1) : offset;\n            if (reversible && nb >= mb) {\n              coefficients[pos] = n;\n            } else {\n              coefficients[pos] = n * (1 << mb - nb);\n            }\n          }\n          offset++;\n          position++;\n        }\n        offset += width - blockWidth;\n      }\n    }\n  }\n  function transformTile(context, tile, c) {\n    var component = tile.components[c];\n    var codingStyleParameters = component.codingStyleParameters;\n    var quantizationParameters = component.quantizationParameters;\n    var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n    var spqcds = quantizationParameters.SPqcds;\n    var scalarExpounded = quantizationParameters.scalarExpounded;\n    var guardBits = quantizationParameters.guardBits;\n    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n    var precision = context.components[c].precision;\n    var reversible = codingStyleParameters.reversibleTransformation;\n    var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n    var subbandCoefficients = [];\n    var b = 0;\n    for (var i = 0; i <= decompositionLevelsCount; i++) {\n      var resolution = component.resolutions[i];\n      var width = resolution.trx1 - resolution.trx0;\n      var height = resolution.try1 - resolution.try0;\n      var coefficients = new Float32Array(width * height);\n      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n        var mu, epsilon;\n        if (!scalarExpounded) {\n          mu = spqcds[0].mu;\n          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n        } else {\n          mu = spqcds[b].mu;\n          epsilon = spqcds[b].epsilon;\n          b++;\n        }\n        var subband = resolution.subbands[j];\n        var gainLog2 = SubbandsGainLog2[subband.type];\n        var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n        var mb = guardBits + epsilon - 1;\n        copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n      }\n      subbandCoefficients.push({\n        width: width,\n        height: height,\n        items: coefficients\n      });\n    }\n    var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n    return {\n      left: component.tcx0,\n      top: component.tcy0,\n      width: result.width,\n      height: result.height,\n      items: result.items\n    };\n  }\n  function transformComponents(context) {\n    var siz = context.SIZ;\n    var components = context.components;\n    var componentsCount = siz.Csiz;\n    var resultImages = [];\n    for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n      var tile = context.tiles[i];\n      var transformedTiles = [];\n      var c;\n      for (c = 0; c < componentsCount; c++) {\n        transformedTiles[c] = transformTile(context, tile, c);\n      }\n      var tile0 = transformedTiles[0];\n      var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n      var result = {\n        left: tile0.left,\n        top: tile0.top,\n        width: tile0.width,\n        height: tile0.height,\n        items: out\n      };\n      var shift, offset;\n      var pos = 0,\n          j,\n          jj,\n          y0,\n          y1,\n          y2;\n      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n        var fourComponents = componentsCount === 4;\n        var y0items = transformedTiles[0].items;\n        var y1items = transformedTiles[1].items;\n        var y2items = transformedTiles[2].items;\n        var y3items = fourComponents ? transformedTiles[3].items : null;\n        shift = components[0].precision - 8;\n        offset = (128 << shift) + 0.5;\n        var component0 = tile.components[0];\n        var alpha01 = componentsCount - 3;\n        jj = y0items.length;\n        if (!component0.codingStyleParameters.reversibleTransformation) {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            out[pos++] = y0 + 1.402 * y2 >> shift;\n            out[pos++] = y0 - 0.34413 * y1 - 0.71414 * y2 >> shift;\n            out[pos++] = y0 + 1.772 * y1 >> shift;\n          }\n        } else {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            var g = y0 - (y2 + y1 >> 2);\n            out[pos++] = g + y2 >> shift;\n            out[pos++] = g >> shift;\n            out[pos++] = g + y1 >> shift;\n          }\n        }\n        if (fourComponents) {\n          for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n            out[pos] = y3items[j] + offset >> shift;\n          }\n        }\n      } else {\n        for (c = 0; c < componentsCount; c++) {\n          var items = transformedTiles[c].items;\n          shift = components[c].precision - 8;\n          offset = (128 << shift) + 0.5;\n          for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n            out[pos] = items[j] + offset >> shift;\n            pos += componentsCount;\n          }\n        }\n      }\n      resultImages.push(result);\n    }\n    return resultImages;\n  }\n  function initializeTile(context, tileIndex) {\n    var siz = context.SIZ;\n    var componentsCount = siz.Csiz;\n    var tile = context.tiles[tileIndex];\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n      component.quantizationParameters = qcdOrQcc;\n      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n      component.codingStyleParameters = codOrCoc;\n    }\n    tile.codingStyleDefaultParameters = context.currentTile.COD;\n  }\n  var TagTree = function TagTreeClosure() {\n    function TagTree(width, height) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var level = {\n          width: width,\n          height: height,\n          items: []\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    TagTree.prototype = {\n      reset: function TagTree_reset(i, j) {\n        var currentLevel = 0,\n            value = 0,\n            level;\n        while (currentLevel < this.levels.length) {\n          level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          if (level.items[index] !== undefined) {\n            value = level.items[index];\n            break;\n          }\n          level.index = index;\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        currentLevel--;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        this.currentLevel = currentLevel;\n        delete this.value;\n      },\n      incrementValue: function TagTree_incrementValue() {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index]++;\n      },\n      nextLevel: function TagTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        currentLevel--;\n        if (currentLevel < 0) {\n          this.value = value;\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return TagTree;\n  }();\n  var InclusionTree = function InclusionTreeClosure() {\n    function InclusionTree(width, height, defaultValue) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var items = new Uint8Array(width * height);\n        for (var j = 0, jj = items.length; j < jj; j++) {\n          items[j] = defaultValue;\n        }\n        var level = {\n          width: width,\n          height: height,\n          items: items\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    InclusionTree.prototype = {\n      reset: function InclusionTree_reset(i, j, stopValue) {\n        var currentLevel = 0;\n        while (currentLevel < this.levels.length) {\n          var level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          level.index = index;\n          var value = level.items[index];\n          if (value === 0xFF) {\n            break;\n          }\n          if (value > stopValue) {\n            this.currentLevel = currentLevel;\n            this.propagateValues();\n            return false;\n          }\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        this.currentLevel = currentLevel - 1;\n        return true;\n      },\n      incrementValue: function InclusionTree_incrementValue(stopValue) {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index] = stopValue + 1;\n        this.propagateValues();\n      },\n      propagateValues: function InclusionTree_propagateValues() {\n        var levelIndex = this.currentLevel;\n        var level = this.levels[levelIndex];\n        var currentValue = level.items[level.index];\n        while (--levelIndex >= 0) {\n          level = this.levels[levelIndex];\n          level.items[level.index] = currentValue;\n        }\n      },\n      nextLevel: function InclusionTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        level.items[level.index] = 0xFF;\n        currentLevel--;\n        if (currentLevel < 0) {\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return InclusionTree;\n  }();\n  var BitModel = function BitModelClosure() {\n    var UNIFORM_CONTEXT = 17;\n    var RUNLENGTH_CONTEXT = 18;\n    var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]);\n    var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);\n    var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);\n    function BitModel(width, height, subband, zeroBitPlanes, mb) {\n      this.width = width;\n      this.height = height;\n      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n      var coefficientCount = width * height;\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\n      this.coefficentsSign = new Uint8Array(coefficientCount);\n      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n      this.processingFlags = new Uint8Array(coefficientCount);\n      var bitsDecoded = new Uint8Array(coefficientCount);\n      if (zeroBitPlanes !== 0) {\n        for (var i = 0; i < coefficientCount; i++) {\n          bitsDecoded[i] = zeroBitPlanes;\n        }\n      }\n      this.bitsDecoded = bitsDecoded;\n      this.reset();\n    }\n    BitModel.prototype = {\n      setDecoder: function BitModel_setDecoder(decoder) {\n        this.decoder = decoder;\n      },\n      reset: function BitModel_reset() {\n        this.contexts = new Int8Array(19);\n        this.contexts[0] = 4 << 1 | 0;\n        this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n        this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n      },\n      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n        var neighborsSignificance = this.neighborsSignificance;\n        var width = this.width,\n            height = this.height;\n        var left = column > 0;\n        var right = column + 1 < width;\n        var i;\n        if (row > 0) {\n          i = index - width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (row + 1 < height) {\n          i = index + width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (left) {\n          neighborsSignificance[index - 1] += 0x01;\n        }\n        if (right) {\n          neighborsSignificance[index + 1] += 0x01;\n        }\n        neighborsSignificance[index] |= 0x80;\n      },\n      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var neighborsSignificance = this.neighborsSignificance;\n        var processingFlags = this.processingFlags;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processedInverseMask = ~1;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        for (var i0 = 0; i0 < height; i0 += 4) {\n          for (var j = 0; j < width; j++) {\n            var index = i0 * width + j;\n            for (var i1 = 0; i1 < 4; i1++, index += width) {\n              var i = i0 + i1;\n              if (i >= height) {\n                break;\n              }\n              processingFlags[index] &= processedInverseMask;\n              if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision) {\n                var sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contribution, sign0, sign1, significance1;\n        var contextLabel, decoded;\n        significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n          sign1 = coefficentsSign[index + 1];\n          if (significance1) {\n            sign0 = coefficentsSign[index - 1];\n            contribution = 1 - sign1 - sign0;\n          } else {\n            contribution = 1 - sign1 - sign1;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - 1];\n          contribution = 1 - sign0 - sign0;\n        } else {\n          contribution = 0;\n        }\n        var horizontalContribution = 3 * contribution;\n        significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n          sign1 = coefficentsSign[index + width];\n          if (significance1) {\n            sign0 = coefficentsSign[index - width];\n            contribution = 1 - sign1 - sign0 + horizontalContribution;\n          } else {\n            contribution = 1 - sign1 - sign1 + horizontalContribution;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - width];\n          contribution = 1 - sign0 - sign0 + horizontalContribution;\n        } else {\n          contribution = horizontalContribution;\n        }\n        if (contribution >= 0) {\n          contextLabel = 9 + contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel);\n        } else {\n          contextLabel = 9 - contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n        }\n        return decoded;\n      },\n      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var neighborsSignificance = this.neighborsSignificance;\n        var contexts = this.contexts;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var length = width * height;\n        var width4 = width * 4;\n        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n          indexNext = Math.min(length, index0 + width4);\n          for (var j = 0; j < width; j++) {\n            for (var index = index0 + j; index < indexNext; index += width) {\n              if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = 16;\n              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n                processingFlags[index] ^= firstMagnitudeBitMask;\n                var significance = neighborsSignificance[index] & 127;\n                contextLabel = significance === 0 ? 15 : 14;\n              }\n              var bit = decoder.readBit(contexts, contextLabel);\n              coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      runCleanupPass: function BitModel_runCleanupPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var neighborsSignificance = this.neighborsSignificance;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var oneRowDown = width;\n        var twoRowsDown = width * 2;\n        var threeRowsDown = width * 3;\n        var iNext;\n        for (var i0 = 0; i0 < height; i0 = iNext) {\n          iNext = Math.min(i0 + 4, height);\n          var indexBase = i0 * width;\n          var checkAllEmpty = i0 + 3 < height;\n          for (var j = 0; j < width; j++) {\n            var index0 = indexBase + j;\n            var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n            var i1 = 0,\n                index = index0;\n            var i = i0,\n                sign;\n            if (allEmpty) {\n              var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n              if (!hasSignificantCoefficent) {\n                bitsDecoded[index0]++;\n                bitsDecoded[index0 + oneRowDown]++;\n                bitsDecoded[index0 + twoRowsDown]++;\n                bitsDecoded[index0 + threeRowsDown]++;\n                continue;\n              }\n              i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n              if (i1 !== 0) {\n                i = i0 + i1;\n                index += i1 * width;\n              }\n              sign = this.decodeSignBit(i, j, index);\n              coefficentsSign[index] = sign;\n              coefficentsMagnitude[index] = 1;\n              this.setNeighborsSignificance(i, j, index);\n              processingFlags[index] |= firstMagnitudeBitMask;\n              index = index0;\n              for (var i2 = i0; i2 <= i; i2++, index += width) {\n                bitsDecoded[index]++;\n              }\n              i1++;\n            }\n            for (i = i0 + i1; i < iNext; i++, index += width) {\n              if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision === 1) {\n                sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n            }\n          }\n        }\n      },\n      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n        var decoder = this.decoder;\n        var contexts = this.contexts;\n        var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n        if (symbol !== 0xA) {\n          throw new JpxError('Invalid segmentation symbol');\n        }\n      }\n    };\n    return BitModel;\n  }();\n  var Transform = function TransformClosure() {\n    function Transform() {}\n    Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n      var ll = subbands[0];\n      for (var i = 1, ii = subbands.length; i < ii; i++) {\n        ll = this.iterate(ll, subbands[i], u0, v0);\n      }\n      return ll;\n    };\n    Transform.prototype.extend = function extend(buffer, offset, size) {\n      var i1 = offset - 1,\n          j1 = offset + 1;\n      var i2 = offset + size - 2,\n          j2 = offset + size;\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1] = buffer[j1];\n      buffer[j2] = buffer[i2];\n    };\n    Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n      var llWidth = ll.width,\n          llHeight = ll.height,\n          llItems = ll.items;\n      var width = hl_lh_hh.width;\n      var height = hl_lh_hh.height;\n      var items = hl_lh_hh.items;\n      var i, j, k, l, u, v;\n      for (k = 0, i = 0; i < llHeight; i++) {\n        l = i * 2 * width;\n        for (j = 0; j < llWidth; j++, k++, l += 2) {\n          items[l] = llItems[k];\n        }\n      }\n      llItems = ll.items = null;\n      var bufferPadding = 4;\n      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n      if (width === 1) {\n        if ((u0 & 1) !== 0) {\n          for (v = 0, k = 0; v < height; v++, k += width) {\n            items[k] *= 0.5;\n          }\n        }\n      } else {\n        for (v = 0, k = 0; v < height; v++, k += width) {\n          rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n          this.extend(rowBuffer, bufferPadding, width);\n          this.filter(rowBuffer, bufferPadding, width);\n          items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n        }\n      }\n      var numBuffers = 16;\n      var colBuffers = [];\n      for (i = 0; i < numBuffers; i++) {\n        colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n      }\n      var b,\n          currentBuffer = 0;\n      ll = bufferPadding + height;\n      if (height === 1) {\n        if ((v0 & 1) !== 0) {\n          for (u = 0; u < width; u++) {\n            items[u] *= 0.5;\n          }\n        }\n      } else {\n        for (u = 0; u < width; u++) {\n          if (currentBuffer === 0) {\n            numBuffers = Math.min(width - u, numBuffers);\n            for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                colBuffers[b][l] = items[k + b];\n              }\n            }\n            currentBuffer = numBuffers;\n          }\n          currentBuffer--;\n          var buffer = colBuffers[currentBuffer];\n          this.extend(buffer, bufferPadding, height);\n          this.filter(buffer, bufferPadding, height);\n          if (currentBuffer === 0) {\n            k = u - numBuffers + 1;\n            for (l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                items[k + b] = colBuffers[b][l];\n              }\n            }\n          }\n        }\n      }\n      return {\n        width: width,\n        height: height,\n        items: items\n      };\n    };\n    return Transform;\n  }();\n  var IrreversibleTransform = function IrreversibleTransformClosure() {\n    function IrreversibleTransform() {\n      Transform.call(this);\n    }\n    IrreversibleTransform.prototype = Object.create(Transform.prototype);\n    IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n, current, next;\n      var alpha = -1.586134342059924;\n      var beta = -0.052980118572961;\n      var gamma = 0.882911075530934;\n      var delta = 0.443506852043971;\n      var K = 1.230174104914001;\n      var K_ = 1 / K;\n      j = offset - 3;\n      for (n = len + 4; n--; j += 2) {\n        x[j] *= K_;\n      }\n      j = offset - 2;\n      current = delta * x[j - 1];\n      for (n = len + 3; n--; j += 2) {\n        next = delta * x[j + 1];\n        x[j] = K * x[j] - current - next;\n        if (n--) {\n          j += 2;\n          current = delta * x[j + 1];\n          x[j] = K * x[j] - current - next;\n        } else {\n          break;\n        }\n      }\n      j = offset - 1;\n      current = gamma * x[j - 1];\n      for (n = len + 2; n--; j += 2) {\n        next = gamma * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = gamma * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      j = offset;\n      current = beta * x[j - 1];\n      for (n = len + 1; n--; j += 2) {\n        next = beta * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = beta * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      if (len !== 0) {\n        j = offset + 1;\n        current = alpha * x[j - 1];\n        for (n = len; n--; j += 2) {\n          next = alpha * x[j + 1];\n          x[j] -= current + next;\n          if (n--) {\n            j += 2;\n            current = alpha * x[j + 1];\n            x[j] -= current + next;\n          } else {\n            break;\n          }\n        }\n      }\n    };\n    return IrreversibleTransform;\n  }();\n  var ReversibleTransform = function ReversibleTransformClosure() {\n    function ReversibleTransform() {\n      Transform.call(this);\n    }\n    ReversibleTransform.prototype = Object.create(Transform.prototype);\n    ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n;\n      for (j = offset, n = len + 1; n--; j += 2) {\n        x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n      }\n      for (j = offset + 1, n = len; n--; j += 2) {\n        x[j] += x[j - 1] + x[j + 1] >> 1;\n      }\n    };\n    return ReversibleTransform;\n  }();\n  return JpxImage;\n}();\nexports.JpxImage = JpxImage;\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateSHA512 = exports.calculateSHA384 = exports.calculateSHA256 = exports.calculateMD5 = exports.PDF20 = exports.PDF17 = exports.CipherTransformFactory = exports.ARCFourCipher = exports.AES256Cipher = exports.AES128Cipher = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _stream = __w_pdfjs_require__(4);\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ARCFourCipher = function ARCFourCipherClosure() {\n  function ARCFourCipher(key) {\n    this.a = 0;\n    this.b = 0;\n    var s = new Uint8Array(256);\n    var i,\n        j = 0,\n        tmp,\n        keyLength = key.length;\n    for (i = 0; i < 256; ++i) {\n      s[i] = i;\n    }\n    for (i = 0; i < 256; ++i) {\n      tmp = s[i];\n      j = j + tmp + key[i % keyLength] & 0xFF;\n      s[i] = s[j];\n      s[j] = tmp;\n    }\n    this.s = s;\n  }\n  ARCFourCipher.prototype = {\n    encryptBlock: function ARCFourCipher_encryptBlock(data) {\n      var i,\n          n = data.length,\n          tmp,\n          tmp2;\n      var a = this.a,\n          b = this.b,\n          s = this.s;\n      var output = new Uint8Array(n);\n      for (i = 0; i < n; ++i) {\n        a = a + 1 & 0xFF;\n        tmp = s[a];\n        b = b + tmp & 0xFF;\n        tmp2 = s[b];\n        s[a] = tmp2;\n        s[b] = tmp;\n        output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n      }\n      this.a = a;\n      this.b = b;\n      return output;\n    }\n  };\n  ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n  return ARCFourCipher;\n}();\nvar calculateMD5 = function calculateMD5Closure() {\n  var r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n  var k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n  function hash(data, offset, length) {\n    var h0 = 1732584193,\n        h1 = -271733879,\n        h2 = -1732584194,\n        h3 = 271733878;\n    var paddedLength = length + 72 & ~63;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = length << 3 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    var w = new Int32Array(16);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j, i += 4) {\n        w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          f,\n          g;\n      for (j = 0; j < 64; ++j) {\n        if (j < 16) {\n          f = b & c | ~b & d;\n          g = j;\n        } else if (j < 32) {\n          f = d & b | ~d & c;\n          g = 5 * j + 1 & 15;\n        } else if (j < 48) {\n          f = b ^ c ^ d;\n          g = 3 * j + 5 & 15;\n        } else {\n          f = c ^ (b | ~d);\n          g = 7 * j & 15;\n        }\n        var tmp = d,\n            rotateArg = a + f + k[j] + w[g] | 0,\n            rotate = r[j];\n        d = c;\n        c = b;\n        b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n        a = tmp;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n    }\n    return new Uint8Array([h0 & 0xFF, h0 >> 8 & 0xFF, h0 >> 16 & 0xFF, h0 >>> 24 & 0xFF, h1 & 0xFF, h1 >> 8 & 0xFF, h1 >> 16 & 0xFF, h1 >>> 24 & 0xFF, h2 & 0xFF, h2 >> 8 & 0xFF, h2 >> 16 & 0xFF, h2 >>> 24 & 0xFF, h3 & 0xFF, h3 >> 8 & 0xFF, h3 >> 16 & 0xFF, h3 >>> 24 & 0xFF]);\n  }\n  return hash;\n}();\nvar Word64 = function Word64Closure() {\n  function Word64(highInteger, lowInteger) {\n    this.high = highInteger | 0;\n    this.low = lowInteger | 0;\n  }\n  Word64.prototype = {\n    and: function Word64_and(word) {\n      this.high &= word.high;\n      this.low &= word.low;\n    },\n    xor: function Word64_xor(word) {\n      this.high ^= word.high;\n      this.low ^= word.low;\n    },\n    or: function Word64_or(word) {\n      this.high |= word.high;\n      this.low |= word.low;\n    },\n    shiftRight: function Word64_shiftRight(places) {\n      if (places >= 32) {\n        this.low = this.high >>> places - 32 | 0;\n        this.high = 0;\n      } else {\n        this.low = this.low >>> places | this.high << 32 - places;\n        this.high = this.high >>> places | 0;\n      }\n    },\n    shiftLeft: function Word64_shiftLeft(places) {\n      if (places >= 32) {\n        this.high = this.low << places - 32;\n        this.low = 0;\n      } else {\n        this.high = this.high << places | this.low >>> 32 - places;\n        this.low = this.low << places;\n      }\n    },\n    rotateRight: function Word64_rotateRight(places) {\n      var low, high;\n      if (places & 32) {\n        high = this.low;\n        low = this.high;\n      } else {\n        low = this.low;\n        high = this.high;\n      }\n      places &= 31;\n      this.low = low >>> places | high << 32 - places;\n      this.high = high >>> places | low << 32 - places;\n    },\n    not: function Word64_not() {\n      this.high = ~this.high;\n      this.low = ~this.low;\n    },\n    add: function Word64_add(word) {\n      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n      var highAdd = (this.high >>> 0) + (word.high >>> 0);\n      if (lowAdd > 0xFFFFFFFF) {\n        highAdd += 1;\n      }\n      this.low = lowAdd | 0;\n      this.high = highAdd | 0;\n    },\n    copyTo: function Word64_copyTo(bytes, offset) {\n      bytes[offset] = this.high >>> 24 & 0xFF;\n      bytes[offset + 1] = this.high >> 16 & 0xFF;\n      bytes[offset + 2] = this.high >> 8 & 0xFF;\n      bytes[offset + 3] = this.high & 0xFF;\n      bytes[offset + 4] = this.low >>> 24 & 0xFF;\n      bytes[offset + 5] = this.low >> 16 & 0xFF;\n      bytes[offset + 6] = this.low >> 8 & 0xFF;\n      bytes[offset + 7] = this.low & 0xFF;\n    },\n    assign: function Word64_assign(word) {\n      this.high = word.high;\n      this.low = word.low;\n    }\n  };\n  return Word64;\n}();\nvar calculateSHA256 = function calculateSHA256Closure() {\n  function rotr(x, n) {\n    return x >>> n | x << 32 - n;\n  }\n  function ch(x, y, z) {\n    return x & y ^ ~x & z;\n  }\n  function maj(x, y, z) {\n    return x & y ^ x & z ^ y & z;\n  }\n  function sigma(x) {\n    return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n  }\n  function sigmaPrime(x) {\n    return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n  }\n  function littleSigma(x) {\n    return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n  }\n  function littleSigmaPrime(x) {\n    return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n  }\n  var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n  function hash(data, offset, length) {\n    var h0 = 0x6a09e667,\n        h1 = 0xbb67ae85,\n        h2 = 0x3c6ef372,\n        h3 = 0xa54ff53a,\n        h4 = 0x510e527f,\n        h5 = 0x9b05688c,\n        h6 = 0x1f83d9ab,\n        h7 = 0x5be0cd19;\n    var paddedLength = Math.ceil((length + 9) / 64) * 64;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Uint32Array(64);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        i += 4;\n      }\n      for (j = 16; j < 64; ++j) {\n        w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          e = h4,\n          f = h5,\n          g = h6,\n          h = h7,\n          t1,\n          t2;\n      for (j = 0; j < 64; ++j) {\n        t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n        t2 = sigma(a) + maj(a, b, c);\n        h = g;\n        g = f;\n        f = e;\n        e = d + t1 | 0;\n        d = c;\n        c = b;\n        b = a;\n        a = t1 + t2 | 0;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n      h4 = h4 + e | 0;\n      h5 = h5 + f | 0;\n      h6 = h6 + g | 0;\n      h7 = h7 + h | 0;\n    }\n    return new Uint8Array([h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF, h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF]);\n  }\n  return hash;\n}();\nvar calculateSHA512 = function calculateSHA512Closure() {\n  function ch(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.not();\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function maj(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.and(z);\n    result.xor(tmp);\n    tmp.assign(y);\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function sigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(28);\n    tmp.assign(x);\n    tmp.rotateRight(34);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(39);\n    result.xor(tmp);\n  }\n  function sigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(14);\n    tmp.assign(x);\n    tmp.rotateRight(18);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(41);\n    result.xor(tmp);\n  }\n  function littleSigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(1);\n    tmp.assign(x);\n    tmp.rotateRight(8);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(7);\n    result.xor(tmp);\n  }\n  function littleSigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(19);\n    tmp.assign(x);\n    tmp.rotateRight(61);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(6);\n    result.xor(tmp);\n  }\n  var k = [new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd), new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc), new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019), new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118), new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe), new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2), new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1), new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694), new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3), new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65), new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483), new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5), new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210), new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4), new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725), new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70), new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926), new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df), new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8), new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b), new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001), new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30), new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910), new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8), new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53), new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8), new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb), new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3), new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60), new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec), new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9), new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b), new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207), new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178), new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6), new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b), new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493), new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c), new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a), new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\n  function hash(data, offset, length, mode384) {\n    mode384 = !!mode384;\n    var h0, h1, h2, h3, h4, h5, h6, h7;\n    if (!mode384) {\n      h0 = new Word64(0x6a09e667, 0xf3bcc908);\n      h1 = new Word64(0xbb67ae85, 0x84caa73b);\n      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n      h4 = new Word64(0x510e527f, 0xade682d1);\n      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n      h7 = new Word64(0x5be0cd19, 0x137e2179);\n    } else {\n      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n      h1 = new Word64(0x629a292a, 0x367cd507);\n      h2 = new Word64(0x9159015a, 0x3070dd17);\n      h3 = new Word64(0x152fecd8, 0xf70e5939);\n      h4 = new Word64(0x67332667, 0xffc00b31);\n      h5 = new Word64(0x8eb44a87, 0x68581511);\n      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n    }\n    var paddedLength = Math.ceil((length + 17) / 128) * 128;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 16;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Array(80);\n    for (i = 0; i < 80; i++) {\n      w[i] = new Word64(0, 0);\n    }\n    var a = new Word64(0, 0),\n        b = new Word64(0, 0),\n        c = new Word64(0, 0);\n    var d = new Word64(0, 0),\n        e = new Word64(0, 0),\n        f = new Word64(0, 0);\n    var g = new Word64(0, 0),\n        h = new Word64(0, 0);\n    var t1 = new Word64(0, 0),\n        t2 = new Word64(0, 0);\n    var tmp1 = new Word64(0, 0),\n        tmp2 = new Word64(0, 0),\n        tmp3;\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n        i += 8;\n      }\n      for (j = 16; j < 80; ++j) {\n        tmp3 = w[j];\n        littleSigmaPrime(tmp3, w[j - 2], tmp2);\n        tmp3.add(w[j - 7]);\n        littleSigma(tmp1, w[j - 15], tmp2);\n        tmp3.add(tmp1);\n        tmp3.add(w[j - 16]);\n      }\n      a.assign(h0);\n      b.assign(h1);\n      c.assign(h2);\n      d.assign(h3);\n      e.assign(h4);\n      f.assign(h5);\n      g.assign(h6);\n      h.assign(h7);\n      for (j = 0; j < 80; ++j) {\n        t1.assign(h);\n        sigmaPrime(tmp1, e, tmp2);\n        t1.add(tmp1);\n        ch(tmp1, e, f, g, tmp2);\n        t1.add(tmp1);\n        t1.add(k[j]);\n        t1.add(w[j]);\n        sigma(t2, a, tmp2);\n        maj(tmp1, a, b, c, tmp2);\n        t2.add(tmp1);\n        tmp3 = h;\n        h = g;\n        g = f;\n        f = e;\n        d.add(t1);\n        e = d;\n        d = c;\n        c = b;\n        b = a;\n        tmp3.assign(t1);\n        tmp3.add(t2);\n        a = tmp3;\n      }\n      h0.add(a);\n      h1.add(b);\n      h2.add(c);\n      h3.add(d);\n      h4.add(e);\n      h5.add(f);\n      h6.add(g);\n      h7.add(h);\n    }\n    var result;\n    if (!mode384) {\n      result = new Uint8Array(64);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n      h6.copyTo(result, 48);\n      h7.copyTo(result, 56);\n    } else {\n      result = new Uint8Array(48);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n    }\n    return result;\n  }\n  return hash;\n}();\nvar calculateSHA384 = function calculateSHA384Closure() {\n  function hash(data, offset, length) {\n    return calculateSHA512(data, offset, length, true);\n  }\n  return hash;\n}();\nvar NullCipher = function NullCipherClosure() {\n  function NullCipher() {}\n  NullCipher.prototype = {\n    decryptBlock: function NullCipher_decryptBlock(data) {\n      return data;\n    }\n  };\n  return NullCipher;\n}();\n\nvar AESBaseCipher = function () {\n  function AESBaseCipher() {\n    _classCallCheck(this, AESBaseCipher);\n\n    if (this.constructor === AESBaseCipher) {\n      (0, _util.unreachable)('Cannot initialize AESBaseCipher.');\n    }\n    this._s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n    this._inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n    this._mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n    this._mixCol = new Uint8Array(256);\n    for (var i = 0; i < 256; i++) {\n      if (i < 128) {\n        this._mixCol[i] = i << 1;\n      } else {\n        this._mixCol[i] = i << 1 ^ 0x1b;\n      }\n    }\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n\n  _createClass(AESBaseCipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      (0, _util.unreachable)('Cannot call `_expandKey` on the base class');\n    }\n  }, {\n    key: '_decrypt',\n    value: function _decrypt(input, key) {\n      var t = void 0,\n          u = void 0,\n          v = void 0;\n      var state = new Uint8Array(16);\n      state.set(input);\n      for (var j = 0, k = this._keySize; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (var i = this._cyclesOfRepetition - 1; i >= 1; --i) {\n        t = state[13];\n        state[13] = state[9];\n        state[9] = state[5];\n        state[5] = state[1];\n        state[1] = t;\n        t = state[14];\n        u = state[10];\n        state[14] = state[6];\n        state[10] = state[2];\n        state[6] = t;\n        state[2] = u;\n        t = state[15];\n        u = state[11];\n        v = state[7];\n        state[15] = state[3];\n        state[11] = t;\n        state[7] = u;\n        state[3] = v;\n        for (var _j = 0; _j < 16; ++_j) {\n          state[_j] = this._inv_s[state[_j]];\n        }\n        for (var _j2 = 0, _k = i * 16; _j2 < 16; ++_j2, ++_k) {\n          state[_j2] ^= key[_k];\n        }\n        for (var _j3 = 0; _j3 < 16; _j3 += 4) {\n          var s0 = this._mix[state[_j3]];\n          var s1 = this._mix[state[_j3 + 1]];\n          var s2 = this._mix[state[_j3 + 2]];\n          var s3 = this._mix[state[_j3 + 3]];\n          t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n          state[_j3] = t >>> 24 & 0xFF;\n          state[_j3 + 1] = t >> 16 & 0xFF;\n          state[_j3 + 2] = t >> 8 & 0xFF;\n          state[_j3 + 3] = t & 0xFF;\n        }\n      }\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (var _j4 = 0; _j4 < 16; ++_j4) {\n        state[_j4] = this._inv_s[state[_j4]];\n        state[_j4] ^= key[_j4];\n      }\n      return state;\n    }\n  }, {\n    key: '_encrypt',\n    value: function _encrypt(input, key) {\n      var s = this._s;\n      var t = void 0,\n          u = void 0,\n          v = void 0;\n      var state = new Uint8Array(16);\n      state.set(input);\n      for (var j = 0; j < 16; ++j) {\n        state[j] ^= key[j];\n      }\n      for (var i = 1; i < this._cyclesOfRepetition; i++) {\n        for (var _j5 = 0; _j5 < 16; ++_j5) {\n          state[_j5] = s[state[_j5]];\n        }\n        v = state[1];\n        state[1] = state[5];\n        state[5] = state[9];\n        state[9] = state[13];\n        state[13] = v;\n        v = state[2];\n        u = state[6];\n        state[2] = state[10];\n        state[6] = state[14];\n        state[10] = v;\n        state[14] = u;\n        v = state[3];\n        u = state[7];\n        t = state[11];\n        state[3] = state[15];\n        state[7] = v;\n        state[11] = u;\n        state[15] = t;\n        for (var _j6 = 0; _j6 < 16; _j6 += 4) {\n          var s0 = state[_j6 + 0];\n          var s1 = state[_j6 + 1];\n          var s2 = state[_j6 + 2];\n          var s3 = state[_j6 + 3];\n          t = s0 ^ s1 ^ s2 ^ s3;\n          state[_j6 + 0] ^= t ^ this._mixCol[s0 ^ s1];\n          state[_j6 + 1] ^= t ^ this._mixCol[s1 ^ s2];\n          state[_j6 + 2] ^= t ^ this._mixCol[s2 ^ s3];\n          state[_j6 + 3] ^= t ^ this._mixCol[s3 ^ s0];\n        }\n        for (var _j7 = 0, k = i * 16; _j7 < 16; ++_j7, ++k) {\n          state[_j7] ^= key[k];\n        }\n      }\n      for (var _j8 = 0; _j8 < 16; ++_j8) {\n        state[_j8] = s[state[_j8]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (var _j9 = 0, _k2 = this._keySize; _j9 < 16; ++_j9, ++_k2) {\n        state[_j9] ^= key[_k2];\n      }\n      return state;\n    }\n  }, {\n    key: '_decryptBlock2',\n    value: function _decryptBlock2(data, finalize) {\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      var result = [],\n          iv = this.iv;\n      for (var i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        var plain = this._decrypt(buffer, this._key);\n        for (var j = 0; j < 16; ++j) {\n          plain[j] ^= iv[j];\n        }\n        iv = buffer;\n        result.push(plain);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array(0);\n      }\n      var outputLength = 16 * result.length;\n      if (finalize) {\n        var lastBlock = result[result.length - 1];\n        var psLen = lastBlock[15];\n        if (psLen <= 16) {\n          for (var _i = 15, ii = 16 - psLen; _i >= ii; --_i) {\n            if (lastBlock[_i] !== psLen) {\n              psLen = 0;\n              break;\n            }\n          }\n          outputLength -= psLen;\n          result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n        }\n      }\n      var output = new Uint8Array(outputLength);\n      for (var _i2 = 0, _j10 = 0, _ii = result.length; _i2 < _ii; ++_i2, _j10 += 16) {\n        output.set(result[_i2], _j10);\n      }\n      return output;\n    }\n  }, {\n    key: 'decryptBlock',\n    value: function decryptBlock(data, finalize) {\n      var iv = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      if (iv) {\n        this.iv = iv;\n      } else {\n        for (var i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n          buffer[bufferLength] = data[i];\n        }\n        if (bufferLength < 16) {\n          this.bufferLength = bufferLength;\n          return new Uint8Array(0);\n        }\n        this.iv = buffer;\n        data = data.subarray(16);\n      }\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = this._decryptBlock2;\n      return this.decryptBlock(data, finalize);\n    }\n  }, {\n    key: 'encrypt',\n    value: function encrypt(data, iv) {\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      var result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (var i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (var j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = this._encrypt(buffer, this._key);\n        iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array(0);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (var _i3 = 0, _j11 = 0, ii = result.length; _i3 < ii; ++_i3, _j11 += 16) {\n        output.set(result[_i3], _j11);\n      }\n      return output;\n    }\n  }]);\n\n  return AESBaseCipher;\n}();\n\nvar AES128Cipher = function (_AESBaseCipher) {\n  _inherits(AES128Cipher, _AESBaseCipher);\n\n  function AES128Cipher(key) {\n    _classCallCheck(this, AES128Cipher);\n\n    var _this = _possibleConstructorReturn(this, (AES128Cipher.__proto__ || Object.getPrototypeOf(AES128Cipher)).call(this));\n\n    _this._cyclesOfRepetition = 10;\n    _this._keySize = 160;\n    _this._rcon = new Uint8Array([0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d]);\n    _this._key = _this._expandKey(key);\n    return _this;\n  }\n\n  _createClass(AES128Cipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      var b = 176;\n      var s = this._s;\n      var rcon = this._rcon;\n      var result = new Uint8Array(b);\n      result.set(cipherKey);\n      for (var j = 16, i = 1; j < b; ++i) {\n        var t1 = result[j - 3];\n        var t2 = result[j - 2];\n        var t3 = result[j - 1];\n        var t4 = result[j - 4];\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n        t1 = t1 ^ rcon[i];\n        for (var n = 0; n < 4; ++n) {\n          result[j] = t1 ^= result[j - 16];\n          j++;\n          result[j] = t2 ^= result[j - 16];\n          j++;\n          result[j] = t3 ^= result[j - 16];\n          j++;\n          result[j] = t4 ^= result[j - 16];\n          j++;\n        }\n      }\n      return result;\n    }\n  }]);\n\n  return AES128Cipher;\n}(AESBaseCipher);\n\nvar AES256Cipher = function (_AESBaseCipher2) {\n  _inherits(AES256Cipher, _AESBaseCipher2);\n\n  function AES256Cipher(key) {\n    _classCallCheck(this, AES256Cipher);\n\n    var _this2 = _possibleConstructorReturn(this, (AES256Cipher.__proto__ || Object.getPrototypeOf(AES256Cipher)).call(this));\n\n    _this2._cyclesOfRepetition = 14;\n    _this2._keySize = 224;\n    _this2._key = _this2._expandKey(key);\n    return _this2;\n  }\n\n  _createClass(AES256Cipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      var b = 240;\n      var s = this._s;\n      var result = new Uint8Array(b);\n      result.set(cipherKey);\n      var r = 1;\n      var t1 = void 0,\n          t2 = void 0,\n          t3 = void 0,\n          t4 = void 0;\n      for (var j = 32, i = 1; j < b; ++i) {\n        if (j % 32 === 16) {\n          t1 = s[t1];\n          t2 = s[t2];\n          t3 = s[t3];\n          t4 = s[t4];\n        } else if (j % 32 === 0) {\n          t1 = result[j - 3];\n          t2 = result[j - 2];\n          t3 = result[j - 1];\n          t4 = result[j - 4];\n          t1 = s[t1];\n          t2 = s[t2];\n          t3 = s[t3];\n          t4 = s[t4];\n          t1 = t1 ^ r;\n          if ((r <<= 1) >= 256) {\n            r = (r ^ 0x1b) & 0xFF;\n          }\n        }\n        for (var n = 0; n < 4; ++n) {\n          result[j] = t1 ^= result[j - 32];\n          j++;\n          result[j] = t2 ^= result[j - 32];\n          j++;\n          result[j] = t3 ^= result[j - 32];\n          j++;\n          result[j] = t4 ^= result[j - 32];\n          j++;\n        }\n      }\n      return result;\n    }\n  }]);\n\n  return AES256Cipher;\n}(AESBaseCipher);\n\nvar PDF17 = function PDF17Closure() {\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function PDF17() {}\n  PDF17.prototype = {\n    checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF17;\n}();\nvar PDF20 = function PDF20Closure() {\n  function concatArrays(array1, array2) {\n    var t = new Uint8Array(array1.length + array2.length);\n    t.set(array1, 0);\n    t.set(array2, array1.length);\n    return t;\n  }\n  function calculatePDF20Hash(password, input, userBytes) {\n    var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n    var e = [0];\n    var i = 0;\n    while (i < 64 || e[e.length - 1] > i - 32) {\n      var arrayLength = password.length + k.length + userBytes.length;\n      var k1 = new Uint8Array(arrayLength * 64);\n      var array = concatArrays(password, k);\n      array = concatArrays(array, userBytes);\n      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n        k1.set(array, pos);\n      }\n      var cipher = new AES128Cipher(k.subarray(0, 16));\n      e = cipher.encrypt(k1, k.subarray(16, 32));\n      var remainder = 0;\n      for (var z = 0; z < 16; z++) {\n        remainder *= 256 % 3;\n        remainder %= 3;\n        remainder += (e[z] >>> 0) % 3;\n        remainder %= 3;\n      }\n      if (remainder === 0) {\n        k = calculateSHA256(e, 0, e.length);\n      } else if (remainder === 1) {\n        k = calculateSHA384(e, 0, e.length);\n      } else if (remainder === 2) {\n        k = calculateSHA512(e, 0, e.length);\n      }\n      i++;\n    }\n    return k.subarray(0, 32);\n  }\n  function PDF20() {}\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  PDF20.prototype = {\n    hash: function PDF20_hash(password, concatBytes, userBytes) {\n      return calculatePDF20Hash(password, concatBytes, userBytes);\n    },\n    checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculatePDF20Hash(password, hashData, userBytes);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculatePDF20Hash(password, hashData, []);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculatePDF20Hash(password, hashData, userBytes);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculatePDF20Hash(password, hashData, []);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF20;\n}();\nvar CipherTransform = function CipherTransformClosure() {\n  function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n    this.StringCipherConstructor = stringCipherConstructor;\n    this.StreamCipherConstructor = streamCipherConstructor;\n  }\n  CipherTransform.prototype = {\n    createStream: function CipherTransform_createStream(stream, length) {\n      var cipher = new this.StreamCipherConstructor();\n      return new _stream.DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n        return cipher.decryptBlock(data, finalize);\n      });\n    },\n    decryptString: function CipherTransform_decryptString(s) {\n      var cipher = new this.StringCipherConstructor();\n      var data = (0, _util.stringToBytes)(s);\n      data = cipher.decryptBlock(data, true);\n      return (0, _util.bytesToString)(data);\n    }\n  };\n  return CipherTransform;\n}();\nvar CipherTransformFactory = function CipherTransformFactoryClosure() {\n  var defaultPasswordBytes = new Uint8Array([0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41, 0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08, 0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80, 0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\n  function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n    if (password) {\n      var passwordLength = Math.min(127, password.length);\n      password = password.subarray(0, passwordLength);\n    } else {\n      password = [];\n    }\n    var pdfAlgorithm;\n    if (revision === 6) {\n      pdfAlgorithm = new PDF20();\n    } else {\n      pdfAlgorithm = new PDF17();\n    }\n    if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n    } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n    }\n    return null;\n  }\n  function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n    var hashDataSize = 40 + ownerPassword.length + fileId.length;\n    var hashData = new Uint8Array(hashDataSize),\n        i = 0,\n        j,\n        n;\n    if (password) {\n      n = Math.min(32, password.length);\n      for (; i < n; ++i) {\n        hashData[i] = password[i];\n      }\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    for (j = 0, n = ownerPassword.length; j < n; ++j) {\n      hashData[i++] = ownerPassword[j];\n    }\n    hashData[i++] = flags & 0xFF;\n    hashData[i++] = flags >> 8 & 0xFF;\n    hashData[i++] = flags >> 16 & 0xFF;\n    hashData[i++] = flags >>> 24 & 0xFF;\n    for (j = 0, n = fileId.length; j < n; ++j) {\n      hashData[i++] = fileId[j];\n    }\n    if (revision >= 4 && !encryptMetadata) {\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, keyLengthInBytes);\n      }\n    }\n    var encryptionKey = hash.subarray(0, keyLengthInBytes);\n    var cipher, checkData;\n    if (revision >= 3) {\n      for (i = 0; i < 32; ++i) {\n        hashData[i] = defaultPasswordBytes[i];\n      }\n      for (j = 0, n = fileId.length; j < n; ++j) {\n        hashData[i++] = fileId[j];\n      }\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n      n = encryptionKey.length;\n      var derivedKey = new Uint8Array(n),\n          k;\n      for (j = 1; j <= 19; ++j) {\n        for (k = 0; k < n; ++k) {\n          derivedKey[k] = encryptionKey[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        checkData = cipher.encryptBlock(checkData);\n      }\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    } else {\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(defaultPasswordBytes);\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    }\n    return encryptionKey;\n  }\n  function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n    var hashData = new Uint8Array(32),\n        i = 0,\n        j,\n        n;\n    n = Math.min(32, password.length);\n    for (; i < n; ++i) {\n      hashData[i] = password[i];\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, hash.length);\n      }\n    }\n    var cipher, userPassword;\n    if (revision >= 3) {\n      userPassword = ownerPassword;\n      var derivedKey = new Uint8Array(keyLengthInBytes),\n          k;\n      for (j = 19; j >= 0; j--) {\n        for (k = 0; k < keyLengthInBytes; ++k) {\n          derivedKey[k] = hash[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        userPassword = cipher.encryptBlock(userPassword);\n      }\n    } else {\n      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n      userPassword = cipher.encryptBlock(ownerPassword);\n    }\n    return userPassword;\n  }\n  var identityName = _primitives.Name.get('Identity');\n  function CipherTransformFactory(dict, fileId, password) {\n    var filter = dict.get('Filter');\n    if (!(0, _primitives.isName)(filter, 'Standard')) {\n      throw new _util.FormatError('unknown encryption method');\n    }\n    this.dict = dict;\n    var algorithm = dict.get('V');\n    if (!Number.isInteger(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n      throw new _util.FormatError('unsupported encryption algorithm');\n    }\n    this.algorithm = algorithm;\n    var keyLength = dict.get('Length');\n    if (!keyLength) {\n      if (algorithm <= 3) {\n        keyLength = 40;\n      } else {\n        var cfDict = dict.get('CF');\n        var streamCryptoName = dict.get('StmF');\n        if ((0, _primitives.isDict)(cfDict) && (0, _primitives.isName)(streamCryptoName)) {\n          cfDict.suppressEncryption = true;\n          var handlerDict = cfDict.get(streamCryptoName.name);\n          keyLength = handlerDict && handlerDict.get('Length') || 128;\n          if (keyLength < 40) {\n            keyLength <<= 3;\n          }\n        }\n      }\n    }\n    if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n      throw new _util.FormatError('invalid key length');\n    }\n    var ownerPassword = (0, _util.stringToBytes)(dict.get('O')).subarray(0, 32);\n    var userPassword = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 32);\n    var flags = dict.get('P');\n    var revision = dict.get('R');\n    var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n    this.encryptMetadata = encryptMetadata;\n    var fileIdBytes = (0, _util.stringToBytes)(fileId);\n    var passwordBytes;\n    if (password) {\n      if (revision === 6) {\n        try {\n          password = (0, _util.utf8StringToString)(password);\n        } catch (ex) {\n          (0, _util.warn)('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n        }\n      }\n      passwordBytes = (0, _util.stringToBytes)(password);\n    }\n    var encryptionKey;\n    if (algorithm !== 5) {\n      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    } else {\n      var ownerValidationSalt = (0, _util.stringToBytes)(dict.get('O')).subarray(32, 40);\n      var ownerKeySalt = (0, _util.stringToBytes)(dict.get('O')).subarray(40, 48);\n      var uBytes = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 48);\n      var userValidationSalt = (0, _util.stringToBytes)(dict.get('U')).subarray(32, 40);\n      var userKeySalt = (0, _util.stringToBytes)(dict.get('U')).subarray(40, 48);\n      var ownerEncryption = (0, _util.stringToBytes)(dict.get('OE'));\n      var userEncryption = (0, _util.stringToBytes)(dict.get('UE'));\n      var perms = (0, _util.stringToBytes)(dict.get('Perms'));\n      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n    }\n    if (!encryptionKey && !password) {\n      throw new _util.PasswordException('No password given', _util.PasswordResponses.NEED_PASSWORD);\n    } else if (!encryptionKey && password) {\n      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    }\n    if (!encryptionKey) {\n      throw new _util.PasswordException('Incorrect Password', _util.PasswordResponses.INCORRECT_PASSWORD);\n    }\n    this.encryptionKey = encryptionKey;\n    if (algorithm >= 4) {\n      var cf = dict.get('CF');\n      if ((0, _primitives.isDict)(cf)) {\n        cf.suppressEncryption = true;\n      }\n      this.cf = cf;\n      this.stmf = dict.get('StmF') || identityName;\n      this.strf = dict.get('StrF') || identityName;\n      this.eff = dict.get('EFF') || this.stmf;\n    }\n  }\n  function buildObjectKey(num, gen, encryptionKey, isAes) {\n    var key = new Uint8Array(encryptionKey.length + 9),\n        i,\n        n;\n    for (i = 0, n = encryptionKey.length; i < n; ++i) {\n      key[i] = encryptionKey[i];\n    }\n    key[i++] = num & 0xFF;\n    key[i++] = num >> 8 & 0xFF;\n    key[i++] = num >> 16 & 0xFF;\n    key[i++] = gen & 0xFF;\n    key[i++] = gen >> 8 & 0xFF;\n    if (isAes) {\n      key[i++] = 0x73;\n      key[i++] = 0x41;\n      key[i++] = 0x6C;\n      key[i++] = 0x54;\n    }\n    var hash = calculateMD5(key, 0, i);\n    return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n  }\n  function buildCipherConstructor(cf, name, num, gen, key) {\n    if (!(0, _primitives.isName)(name)) {\n      throw new _util.FormatError('Invalid crypt filter name.');\n    }\n    var cryptFilter = cf.get(name.name);\n    var cfm;\n    if (cryptFilter !== null && cryptFilter !== undefined) {\n      cfm = cryptFilter.get('CFM');\n    }\n    if (!cfm || cfm.name === 'None') {\n      return function cipherTransformFactoryBuildCipherConstructorNone() {\n        return new NullCipher();\n      };\n    }\n    if (cfm.name === 'V2') {\n      return function cipherTransformFactoryBuildCipherConstructorV2() {\n        return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n      };\n    }\n    if (cfm.name === 'AESV2') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n        return new AES128Cipher(buildObjectKey(num, gen, key, true));\n      };\n    }\n    if (cfm.name === 'AESV3') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n        return new AES256Cipher(key);\n      };\n    }\n    throw new _util.FormatError('Unknown crypto method');\n  }\n  CipherTransformFactory.prototype = {\n    createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n      if (this.algorithm === 4 || this.algorithm === 5) {\n        return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n      }\n      var key = buildObjectKey(num, gen, this.encryptionKey, false);\n      var cipherConstructor = function buildCipherCipherConstructor() {\n        return new ARCFourCipher(key);\n      };\n      return new CipherTransform(cipherConstructor, cipherConstructor);\n    }\n  };\n  return CipherTransformFactory;\n}();\nexports.AES128Cipher = AES128Cipher;\nexports.AES256Cipher = AES256Cipher;\nexports.ARCFourCipher = ARCFourCipher;\nexports.CipherTransformFactory = CipherTransformFactory;\nexports.PDF17 = PDF17;\nexports.PDF20 = PDF20;\nexports.calculateMD5 = calculateMD5;\nexports.calculateSHA256 = calculateSHA256;\nexports.calculateSHA384 = calculateSHA384;\nexports.calculateSHA512 = calculateSHA512;\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CFFCompiler = exports.CFFPrivateDict = exports.CFFTopDict = exports.CFFCharset = exports.CFFIndex = exports.CFFStrings = exports.CFFHeader = exports.CFF = exports.CFFParser = exports.CFFStandardStrings = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _charsets = __w_pdfjs_require__(143);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar MAX_SUBR_NESTING = 10;\nvar CFFStandardStrings = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000', '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\nvar CFFParser = function CFFParserClosure() {\n  var CharstringValidationData = [null, {\n    id: 'hstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, null, {\n    id: 'vstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'vmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'rlineto',\n    min: 2,\n    resetStack: true\n  }, {\n    id: 'hlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'vlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'rrcurveto',\n    min: 6,\n    resetStack: true\n  }, null, {\n    id: 'callsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'return',\n    min: 0,\n    undefStack: true\n  }, null, null, {\n    id: 'endchar',\n    min: 0,\n    stackClearing: true\n  }, null, null, null, {\n    id: 'hstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'hintmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'cntrmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'rmoveto',\n    min: 2,\n    stackClearing: true\n  }, {\n    id: 'hmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'vstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'rcurveline',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'rlinecurve',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'vvcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hhcurveto',\n    min: 4,\n    resetStack: true\n  }, null, {\n    id: 'callgsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'vhcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hvcurveto',\n    min: 4,\n    resetStack: true\n  }];\n  var CharstringValidationData12 = [null, null, null, {\n    id: 'and',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'or',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'not',\n    min: 1,\n    stackDelta: 0\n  }, null, null, null, {\n    id: 'abs',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'add',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] + stack[index - 1];\n    }\n  }, {\n    id: 'sub',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] - stack[index - 1];\n    }\n  }, {\n    id: 'div',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] / stack[index - 1];\n    }\n  }, null, {\n    id: 'neg',\n    min: 1,\n    stackDelta: 0,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 1] = -stack[index - 1];\n    }\n  }, {\n    id: 'eq',\n    min: 2,\n    stackDelta: -1\n  }, null, null, {\n    id: 'drop',\n    min: 1,\n    stackDelta: -1\n  }, null, {\n    id: 'put',\n    min: 2,\n    stackDelta: -2\n  }, {\n    id: 'get',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'ifelse',\n    min: 4,\n    stackDelta: -3\n  }, {\n    id: 'random',\n    min: 0,\n    stackDelta: 1\n  }, {\n    id: 'mul',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] * stack[index - 1];\n    }\n  }, null, {\n    id: 'sqrt',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'dup',\n    min: 1,\n    stackDelta: 1\n  }, {\n    id: 'exch',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'index',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'roll',\n    min: 3,\n    stackDelta: -2\n  }, null, null, null, {\n    id: 'hflex',\n    min: 7,\n    resetStack: true\n  }, {\n    id: 'flex',\n    min: 13,\n    resetStack: true\n  }, {\n    id: 'hflex1',\n    min: 9,\n    resetStack: true\n  }, {\n    id: 'flex1',\n    min: 11,\n    resetStack: true\n  }];\n  function CFFParser(file, properties, seacAnalysisEnabled) {\n    this.bytes = file.getBytes();\n    this.properties = properties;\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n  }\n  CFFParser.prototype = {\n    parse: function CFFParser_parse() {\n      var properties = this.properties;\n      var cff = new CFF();\n      this.cff = cff;\n      var header = this.parseHeader();\n      var nameIndex = this.parseIndex(header.endPos);\n      var topDictIndex = this.parseIndex(nameIndex.endPos);\n      var stringIndex = this.parseIndex(topDictIndex.endPos);\n      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n      cff.header = header.obj;\n      cff.names = this.parseNameIndex(nameIndex.obj);\n      cff.strings = this.parseStringIndex(stringIndex.obj);\n      cff.topDict = topDict;\n      cff.globalSubrIndex = globalSubrIndex.obj;\n      this.parsePrivateDict(cff.topDict);\n      cff.isCIDFont = topDict.hasName('ROS');\n      var charStringOffset = topDict.getByName('CharStrings');\n      var charStringIndex = this.parseIndex(charStringOffset).obj;\n      var fontMatrix = topDict.getByName('FontMatrix');\n      if (fontMatrix) {\n        properties.fontMatrix = fontMatrix;\n      }\n      var fontBBox = topDict.getByName('FontBBox');\n      if (fontBBox) {\n        properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n        properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n        properties.ascentScaled = true;\n      }\n      var charset, encoding;\n      if (cff.isCIDFont) {\n        var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n        for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n          var dictRaw = fdArrayIndex.get(i);\n          var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n          this.parsePrivateDict(fontDict);\n          cff.fdArray.push(fontDict);\n        }\n        encoding = null;\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n        cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n      } else {\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n        encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n      }\n      cff.charset = charset;\n      cff.encoding = encoding;\n      var charStringsAndSeacs = this.parseCharStrings({\n        charStrings: charStringIndex,\n        localSubrIndex: topDict.privateDict.subrsIndex,\n        globalSubrIndex: globalSubrIndex.obj,\n        fdSelect: cff.fdSelect,\n        fdArray: cff.fdArray,\n        privateDict: topDict.privateDict\n      });\n      cff.charStrings = charStringsAndSeacs.charStrings;\n      cff.seacs = charStringsAndSeacs.seacs;\n      cff.widths = charStringsAndSeacs.widths;\n      return cff;\n    },\n    parseHeader: function CFFParser_parseHeader() {\n      var bytes = this.bytes;\n      var bytesLength = bytes.length;\n      var offset = 0;\n      while (offset < bytesLength && bytes[offset] !== 1) {\n        ++offset;\n      }\n      if (offset >= bytesLength) {\n        throw new _util.FormatError('Invalid CFF header');\n      }\n      if (offset !== 0) {\n        (0, _util.info)('cff data is shifted');\n        bytes = bytes.subarray(offset);\n        this.bytes = bytes;\n      }\n      var major = bytes[0];\n      var minor = bytes[1];\n      var hdrSize = bytes[2];\n      var offSize = bytes[3];\n      var header = new CFFHeader(major, minor, hdrSize, offSize);\n      return {\n        obj: header,\n        endPos: hdrSize\n      };\n    },\n    parseDict: function CFFParser_parseDict(dict) {\n      var pos = 0;\n      function parseOperand() {\n        var value = dict[pos++];\n        if (value === 30) {\n          return parseFloatOperand();\n        } else if (value === 28) {\n          value = dict[pos++];\n          value = (value << 24 | dict[pos++] << 16) >> 16;\n          return value;\n        } else if (value === 29) {\n          value = dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          return value;\n        } else if (value >= 32 && value <= 246) {\n          return value - 139;\n        } else if (value >= 247 && value <= 250) {\n          return (value - 247) * 256 + dict[pos++] + 108;\n        } else if (value >= 251 && value <= 254) {\n          return -((value - 251) * 256) - dict[pos++] - 108;\n        }\n        (0, _util.warn)('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n        return NaN;\n      }\n      function parseFloatOperand() {\n        var str = '';\n        var eof = 15;\n        var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n        var length = dict.length;\n        while (pos < length) {\n          var b = dict[pos++];\n          var b1 = b >> 4;\n          var b2 = b & 15;\n          if (b1 === eof) {\n            break;\n          }\n          str += lookup[b1];\n          if (b2 === eof) {\n            break;\n          }\n          str += lookup[b2];\n        }\n        return parseFloat(str);\n      }\n      var operands = [];\n      var entries = [];\n      pos = 0;\n      var end = dict.length;\n      while (pos < end) {\n        var b = dict[pos];\n        if (b <= 21) {\n          if (b === 12) {\n            b = b << 8 | dict[++pos];\n          }\n          entries.push([b, operands]);\n          operands = [];\n          ++pos;\n        } else {\n          operands.push(parseOperand());\n        }\n      }\n      return entries;\n    },\n    parseIndex: function CFFParser_parseIndex(pos) {\n      var cffIndex = new CFFIndex();\n      var bytes = this.bytes;\n      var count = bytes[pos++] << 8 | bytes[pos++];\n      var offsets = [];\n      var end = pos;\n      var i, ii;\n      if (count !== 0) {\n        var offsetSize = bytes[pos++];\n        var startPos = pos + (count + 1) * offsetSize - 1;\n        for (i = 0, ii = count + 1; i < ii; ++i) {\n          var offset = 0;\n          for (var j = 0; j < offsetSize; ++j) {\n            offset <<= 8;\n            offset += bytes[pos++];\n          }\n          offsets.push(startPos + offset);\n        }\n        end = offsets[count];\n      }\n      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n        var offsetStart = offsets[i];\n        var offsetEnd = offsets[i + 1];\n        cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n      }\n      return {\n        obj: cffIndex,\n        endPos: end\n      };\n    },\n    parseNameIndex: function CFFParser_parseNameIndex(index) {\n      var names = [];\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var name = index.get(i);\n        names.push((0, _util.bytesToString)(name));\n      }\n      return names;\n    },\n    parseStringIndex: function CFFParser_parseStringIndex(index) {\n      var strings = new CFFStrings();\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var data = index.get(i);\n        strings.add((0, _util.bytesToString)(data));\n      }\n      return strings;\n    },\n    createDict: function CFFParser_createDict(Type, dict, strings) {\n      var cffDict = new Type(strings);\n      for (var i = 0, ii = dict.length; i < ii; ++i) {\n        var pair = dict[i];\n        var key = pair[0];\n        var value = pair[1];\n        cffDict.setByKey(key, value);\n      }\n      return cffDict;\n    },\n    parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n      if (!data || state.callDepth > MAX_SUBR_NESTING) {\n        return false;\n      }\n      var stackSize = state.stackSize;\n      var stack = state.stack;\n      var length = data.length;\n      for (var j = 0; j < length;) {\n        var value = data[j++];\n        var validationCommand = null;\n        if (value === 12) {\n          var q = data[j++];\n          if (q === 0) {\n            data[j - 2] = 139;\n            data[j - 1] = 22;\n            stackSize = 0;\n          } else {\n            validationCommand = CharstringValidationData12[q];\n          }\n        } else if (value === 28) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n          j += 2;\n          stackSize++;\n        } else if (value === 14) {\n          if (stackSize >= 4) {\n            stackSize -= 4;\n            if (this.seacAnalysisEnabled) {\n              state.seac = stack.slice(stackSize, stackSize + 4);\n              return false;\n            }\n          }\n          validationCommand = CharstringValidationData[value];\n        } else if (value >= 32 && value <= 246) {\n          stack[stackSize] = value - 139;\n          stackSize++;\n        } else if (value >= 247 && value <= 254) {\n          stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n          j++;\n          stackSize++;\n        } else if (value === 255) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n          j += 4;\n          stackSize++;\n        } else if (value === 19 || value === 20) {\n          state.hints += stackSize >> 1;\n          j += state.hints + 7 >> 3;\n          stackSize %= 2;\n          validationCommand = CharstringValidationData[value];\n        } else if (value === 10 || value === 29) {\n          var subrsIndex;\n          if (value === 10) {\n            subrsIndex = localSubrIndex;\n          } else {\n            subrsIndex = globalSubrIndex;\n          }\n          if (!subrsIndex) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Missing subrsIndex for ' + validationCommand.id);\n            return false;\n          }\n          var bias = 32768;\n          if (subrsIndex.count < 1240) {\n            bias = 107;\n          } else if (subrsIndex.count < 33900) {\n            bias = 1131;\n          }\n          var subrNumber = stack[--stackSize] + bias;\n          if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Out of bounds subrIndex for ' + validationCommand.id);\n            return false;\n          }\n          state.stackSize = stackSize;\n          state.callDepth++;\n          var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n          if (!valid) {\n            return false;\n          }\n          state.callDepth--;\n          stackSize = state.stackSize;\n          continue;\n        } else if (value === 11) {\n          state.stackSize = stackSize;\n          return true;\n        } else {\n          validationCommand = CharstringValidationData[value];\n        }\n        if (validationCommand) {\n          if (validationCommand.stem) {\n            state.hints += stackSize >> 1;\n          }\n          if ('min' in validationCommand) {\n            if (!state.undefStack && stackSize < validationCommand.min) {\n              (0, _util.warn)('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n              return false;\n            }\n          }\n          if (state.firstStackClearing && validationCommand.stackClearing) {\n            state.firstStackClearing = false;\n            stackSize -= validationCommand.min;\n            if (stackSize >= 2 && validationCommand.stem) {\n              stackSize %= 2;\n            } else if (stackSize > 1) {\n              (0, _util.warn)('Found too many parameters for stack-clearing command');\n            }\n            if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n              state.width = stack[stackSize - 1];\n            }\n          }\n          if ('stackDelta' in validationCommand) {\n            if ('stackFn' in validationCommand) {\n              validationCommand.stackFn(stack, stackSize);\n            }\n            stackSize += validationCommand.stackDelta;\n          } else if (validationCommand.stackClearing) {\n            stackSize = 0;\n          } else if (validationCommand.resetStack) {\n            stackSize = 0;\n            state.undefStack = false;\n          } else if (validationCommand.undefStack) {\n            stackSize = 0;\n            state.undefStack = true;\n            state.firstStackClearing = false;\n          }\n        }\n      }\n      state.stackSize = stackSize;\n      return true;\n    },\n    parseCharStrings: function parseCharStrings(_ref) {\n      var charStrings = _ref.charStrings,\n          localSubrIndex = _ref.localSubrIndex,\n          globalSubrIndex = _ref.globalSubrIndex,\n          fdSelect = _ref.fdSelect,\n          fdArray = _ref.fdArray,\n          privateDict = _ref.privateDict;\n\n      var seacs = [];\n      var widths = [];\n      var count = charStrings.count;\n      for (var i = 0; i < count; i++) {\n        var charstring = charStrings.get(i);\n        var state = {\n          callDepth: 0,\n          stackSize: 0,\n          stack: [],\n          undefStack: true,\n          hints: 0,\n          firstStackClearing: true,\n          seac: null,\n          width: null\n        };\n        var valid = true;\n        var localSubrToUse = null;\n        var privateDictToUse = privateDict;\n        if (fdSelect && fdArray.length) {\n          var fdIndex = fdSelect.getFDIndex(i);\n          if (fdIndex === -1) {\n            (0, _util.warn)('Glyph index is not in fd select.');\n            valid = false;\n          }\n          if (fdIndex >= fdArray.length) {\n            (0, _util.warn)('Invalid fd index for glyph index.');\n            valid = false;\n          }\n          if (valid) {\n            privateDictToUse = fdArray[fdIndex].privateDict;\n            localSubrToUse = privateDictToUse.subrsIndex;\n          }\n        } else if (localSubrIndex) {\n          localSubrToUse = localSubrIndex;\n        }\n        if (valid) {\n          valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n        }\n        if (state.width !== null) {\n          var nominalWidth = privateDictToUse.getByName('nominalWidthX');\n          widths[i] = nominalWidth + state.width;\n        } else {\n          var defaultWidth = privateDictToUse.getByName('defaultWidthX');\n          widths[i] = defaultWidth;\n        }\n        if (state.seac !== null) {\n          seacs[i] = state.seac;\n        }\n        if (!valid) {\n          charStrings.set(i, new Uint8Array([14]));\n        }\n      }\n      return {\n        charStrings: charStrings,\n        seacs: seacs,\n        widths: widths\n      };\n    },\n\n    emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n      parentDict.setByKey(18, [0, 0]);\n      parentDict.privateDict = privateDict;\n    },\n    parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n      if (!parentDict.hasName('Private')) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateOffset = parentDict.getByName('Private');\n      if (!Array.isArray(privateOffset) || privateOffset.length !== 2) {\n        parentDict.removeByName('Private');\n        return;\n      }\n      var size = privateOffset[0];\n      var offset = privateOffset[1];\n      if (size === 0 || offset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateDictEnd = offset + size;\n      var dictData = this.bytes.subarray(offset, privateDictEnd);\n      var dict = this.parseDict(dictData);\n      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n      parentDict.privateDict = privateDict;\n      if (!privateDict.getByName('Subrs')) {\n        return;\n      }\n      var subrsOffset = privateDict.getByName('Subrs');\n      var relativeOffset = offset + subrsOffset;\n      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var subrsIndex = this.parseIndex(relativeOffset);\n      privateDict.subrsIndex = subrsIndex.obj;\n    },\n    parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n      if (pos === 0) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, _charsets.ISOAdobeCharset);\n      } else if (pos === 1) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, _charsets.ExpertCharset);\n      } else if (pos === 2) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, _charsets.ExpertSubsetCharset);\n      }\n      var bytes = this.bytes;\n      var start = pos;\n      var format = bytes[pos++];\n      var charset = ['.notdef'];\n      var id, count, i;\n      length -= 1;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; i++) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            charset.push(cid ? id : strings.get(id));\n          }\n          break;\n        case 1:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        case 2:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++] << 8 | bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        default:\n          throw new _util.FormatError('Unknown charset format');\n      }\n      var end = pos;\n      var raw = bytes.subarray(start, end);\n      return new CFFCharset(false, format, charset, raw);\n    },\n    parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n      var encoding = Object.create(null);\n      var bytes = this.bytes;\n      var predefined = false;\n      var format, i, ii;\n      var raw = null;\n      function readSupplement() {\n        var supplementsCount = bytes[pos++];\n        for (i = 0; i < supplementsCount; i++) {\n          var code = bytes[pos++];\n          var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n          encoding[code] = charset.indexOf(strings.get(sid));\n        }\n      }\n      if (pos === 0 || pos === 1) {\n        predefined = true;\n        format = pos;\n        var baseEncoding = pos ? _encodings.ExpertEncoding : _encodings.StandardEncoding;\n        for (i = 0, ii = charset.length; i < ii; i++) {\n          var index = baseEncoding.indexOf(charset[i]);\n          if (index !== -1) {\n            encoding[index] = i;\n          }\n        }\n      } else {\n        var dataStart = pos;\n        format = bytes[pos++];\n        switch (format & 0x7f) {\n          case 0:\n            var glyphsCount = bytes[pos++];\n            for (i = 1; i <= glyphsCount; i++) {\n              encoding[bytes[pos++]] = i;\n            }\n            break;\n          case 1:\n            var rangesCount = bytes[pos++];\n            var gid = 1;\n            for (i = 0; i < rangesCount; i++) {\n              var start = bytes[pos++];\n              var left = bytes[pos++];\n              for (var j = start; j <= start + left; j++) {\n                encoding[j] = gid++;\n              }\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown encoding format: ' + format + ' in CFF');\n        }\n        var dataEnd = pos;\n        if (format & 0x80) {\n          bytes[dataStart] &= 0x7f;\n          readSupplement();\n        }\n        raw = bytes.subarray(dataStart, dataEnd);\n      }\n      format = format & 0x7f;\n      return new CFFEncoding(predefined, format, encoding, raw);\n    },\n    parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n      var start = pos;\n      var bytes = this.bytes;\n      var format = bytes[pos++];\n      var fdSelect = [],\n          rawBytes;\n      var i,\n          invalidFirstGID = false;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; ++i) {\n            var id = bytes[pos++];\n            fdSelect.push(id);\n          }\n          rawBytes = bytes.subarray(start, pos);\n          break;\n        case 3:\n          var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n          for (i = 0; i < rangesCount; ++i) {\n            var first = bytes[pos++] << 8 | bytes[pos++];\n            if (i === 0 && first !== 0) {\n              (0, _util.warn)('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n              invalidFirstGID = true;\n              first = 0;\n            }\n            var fdIndex = bytes[pos++];\n            var next = bytes[pos] << 8 | bytes[pos + 1];\n            for (var j = first; j < next; ++j) {\n              fdSelect.push(fdIndex);\n            }\n          }\n          pos += 2;\n          rawBytes = bytes.subarray(start, pos);\n          if (invalidFirstGID) {\n            rawBytes[3] = rawBytes[4] = 0;\n          }\n          break;\n        default:\n          throw new _util.FormatError('parseFDSelect: Unknown format \"' + format + '\".');\n      }\n      if (fdSelect.length !== length) {\n        throw new _util.FormatError('parseFDSelect: Invalid font data.');\n      }\n      return new CFFFDSelect(fdSelect, rawBytes);\n    }\n  };\n  return CFFParser;\n}();\nvar CFF = function CFFClosure() {\n  function CFF() {\n    this.header = null;\n    this.names = [];\n    this.topDict = null;\n    this.strings = new CFFStrings();\n    this.globalSubrIndex = null;\n    this.encoding = null;\n    this.charset = null;\n    this.charStrings = null;\n    this.fdArray = [];\n    this.fdSelect = null;\n    this.isCIDFont = false;\n  }\n  return CFF;\n}();\nvar CFFHeader = function CFFHeaderClosure() {\n  function CFFHeader(major, minor, hdrSize, offSize) {\n    this.major = major;\n    this.minor = minor;\n    this.hdrSize = hdrSize;\n    this.offSize = offSize;\n  }\n  return CFFHeader;\n}();\nvar CFFStrings = function CFFStringsClosure() {\n  function CFFStrings() {\n    this.strings = [];\n  }\n  CFFStrings.prototype = {\n    get: function CFFStrings_get(index) {\n      if (index >= 0 && index <= 390) {\n        return CFFStandardStrings[index];\n      }\n      if (index - 391 <= this.strings.length) {\n        return this.strings[index - 391];\n      }\n      return CFFStandardStrings[0];\n    },\n    add: function CFFStrings_add(value) {\n      this.strings.push(value);\n    },\n    get count() {\n      return this.strings.length;\n    }\n  };\n  return CFFStrings;\n}();\nvar CFFIndex = function CFFIndexClosure() {\n  function CFFIndex() {\n    this.objects = [];\n    this.length = 0;\n  }\n  CFFIndex.prototype = {\n    add: function CFFIndex_add(data) {\n      this.length += data.length;\n      this.objects.push(data);\n    },\n    set: function CFFIndex_set(index, data) {\n      this.length += data.length - this.objects[index].length;\n      this.objects[index] = data;\n    },\n    get: function CFFIndex_get(index) {\n      return this.objects[index];\n    },\n    get count() {\n      return this.objects.length;\n    }\n  };\n  return CFFIndex;\n}();\nvar CFFDict = function CFFDictClosure() {\n  function CFFDict(tables, strings) {\n    this.keyToNameMap = tables.keyToNameMap;\n    this.nameToKeyMap = tables.nameToKeyMap;\n    this.defaults = tables.defaults;\n    this.types = tables.types;\n    this.opcodes = tables.opcodes;\n    this.order = tables.order;\n    this.strings = strings;\n    this.values = Object.create(null);\n  }\n  CFFDict.prototype = {\n    setByKey: function CFFDict_setByKey(key, value) {\n      if (!(key in this.keyToNameMap)) {\n        return false;\n      }\n      var valueLength = value.length;\n      if (valueLength === 0) {\n        return true;\n      }\n      for (var i = 0; i < valueLength; i++) {\n        if (isNaN(value[i])) {\n          (0, _util.warn)('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n          return true;\n        }\n      }\n      var type = this.types[key];\n      if (type === 'num' || type === 'sid' || type === 'offset') {\n        value = value[0];\n      }\n      this.values[key] = value;\n      return true;\n    },\n    setByName: function CFFDict_setByName(name, value) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name \"' + name + '\"');\n      }\n      this.values[this.nameToKeyMap[name]] = value;\n    },\n    hasName: function CFFDict_hasName(name) {\n      return this.nameToKeyMap[name] in this.values;\n    },\n    getByName: function CFFDict_getByName(name) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name ' + name + '\"');\n      }\n      var key = this.nameToKeyMap[name];\n      if (!(key in this.values)) {\n        return this.defaults[key];\n      }\n      return this.values[key];\n    },\n    removeByName: function CFFDict_removeByName(name) {\n      delete this.values[this.nameToKeyMap[name]];\n    }\n  };\n  CFFDict.createTables = function CFFDict_createTables(layout) {\n    var tables = {\n      keyToNameMap: {},\n      nameToKeyMap: {},\n      defaults: {},\n      types: {},\n      opcodes: {},\n      order: []\n    };\n    for (var i = 0, ii = layout.length; i < ii; ++i) {\n      var entry = layout[i];\n      var key = Array.isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n      tables.keyToNameMap[key] = entry[1];\n      tables.nameToKeyMap[entry[1]] = key;\n      tables.types[key] = entry[2];\n      tables.defaults[key] = entry[3];\n      tables.opcodes[key] = Array.isArray(entry[0]) ? entry[0] : [entry[0]];\n      tables.order.push(key);\n    }\n    return tables;\n  };\n  return CFFDict;\n}();\nvar CFFTopDict = function CFFTopDictClosure() {\n  var layout = [[[12, 30], 'ROS', ['sid', 'sid', 'num'], null], [[12, 20], 'SyntheticBase', 'num', null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'num', 0], [[12, 2], 'ItalicAngle', 'num', 0], [[12, 3], 'UnderlinePosition', 'num', -100], [[12, 4], 'UnderlineThickness', 'num', 50], [[12, 5], 'PaintType', 'num', 0], [[12, 6], 'CharstringType', 'num', 2], [[12, 7], 'FontMatrix', ['num', 'num', 'num', 'num', 'num', 'num'], [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'num', null], [5, 'FontBBox', ['num', 'num', 'num', 'num'], [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'num', 0], [14, 'XUID', 'array', null], [15, 'charset', 'offset', 0], [16, 'Encoding', 'offset', 0], [17, 'CharStrings', 'offset', 0], [18, 'Private', ['offset', 'offset'], null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'num', 0], [[12, 32], 'CIDFontRevision', 'num', 0], [[12, 33], 'CIDFontType', 'num', 0], [[12, 34], 'CIDCount', 'num', 8720], [[12, 35], 'UIDBase', 'num', null], [[12, 37], 'FDSelect', 'offset', null], [[12, 36], 'FDArray', 'offset', null], [[12, 38], 'FontName', 'sid', null]];\n  var tables = null;\n  function CFFTopDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.privateDict = null;\n  }\n  CFFTopDict.prototype = Object.create(CFFDict.prototype);\n  return CFFTopDict;\n}();\nvar CFFPrivateDict = function CFFPrivateDictClosure() {\n  var layout = [[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'num', 0.039625], [[12, 10], 'BlueShift', 'num', 7], [[12, 11], 'BlueFuzz', 'num', 1], [10, 'StdHW', 'num', null], [11, 'StdVW', 'num', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'num', 0], [[12, 17], 'LanguageGroup', 'num', 0], [[12, 18], 'ExpansionFactor', 'num', 0.06], [[12, 19], 'initialRandomSeed', 'num', 0], [20, 'defaultWidthX', 'num', 0], [21, 'nominalWidthX', 'num', 0], [19, 'Subrs', 'offset', null]];\n  var tables = null;\n  function CFFPrivateDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.subrsIndex = null;\n  }\n  CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n  return CFFPrivateDict;\n}();\nvar CFFCharsetPredefinedTypes = {\n  ISO_ADOBE: 0,\n  EXPERT: 1,\n  EXPERT_SUBSET: 2\n};\nvar CFFCharset = function CFFCharsetClosure() {\n  function CFFCharset(predefined, format, charset, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.charset = charset;\n    this.raw = raw;\n  }\n  return CFFCharset;\n}();\nvar CFFEncoding = function CFFEncodingClosure() {\n  function CFFEncoding(predefined, format, encoding, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.encoding = encoding;\n    this.raw = raw;\n  }\n  return CFFEncoding;\n}();\nvar CFFFDSelect = function CFFFDSelectClosure() {\n  function CFFFDSelect(fdSelect, raw) {\n    this.fdSelect = fdSelect;\n    this.raw = raw;\n  }\n  CFFFDSelect.prototype = {\n    getFDIndex: function CFFFDSelect_get(glyphIndex) {\n      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n        return -1;\n      }\n      return this.fdSelect[glyphIndex];\n    }\n  };\n  return CFFFDSelect;\n}();\nvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n  function CFFOffsetTracker() {\n    this.offsets = Object.create(null);\n  }\n  CFFOffsetTracker.prototype = {\n    isTracking: function CFFOffsetTracker_isTracking(key) {\n      return key in this.offsets;\n    },\n    track: function CFFOffsetTracker_track(key, location) {\n      if (key in this.offsets) {\n        throw new _util.FormatError('Already tracking location of ' + key);\n      }\n      this.offsets[key] = location;\n    },\n    offset: function CFFOffsetTracker_offset(value) {\n      for (var key in this.offsets) {\n        this.offsets[key] += value;\n      }\n    },\n    setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n      if (!(key in this.offsets)) {\n        throw new _util.FormatError('Not tracking location of ' + key);\n      }\n      var data = output.data;\n      var dataOffset = this.offsets[key];\n      var size = 5;\n      for (var i = 0, ii = values.length; i < ii; ++i) {\n        var offset0 = i * size + dataOffset;\n        var offset1 = offset0 + 1;\n        var offset2 = offset0 + 2;\n        var offset3 = offset0 + 3;\n        var offset4 = offset0 + 4;\n        if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n          throw new _util.FormatError('writing to an offset that is not empty');\n        }\n        var value = values[i];\n        data[offset0] = 0x1d;\n        data[offset1] = value >> 24 & 0xFF;\n        data[offset2] = value >> 16 & 0xFF;\n        data[offset3] = value >> 8 & 0xFF;\n        data[offset4] = value & 0xFF;\n      }\n    }\n  };\n  return CFFOffsetTracker;\n}();\nvar CFFCompiler = function CFFCompilerClosure() {\n  function CFFCompiler(cff) {\n    this.cff = cff;\n  }\n  CFFCompiler.prototype = {\n    compile: function CFFCompiler_compile() {\n      var cff = this.cff;\n      var output = {\n        data: [],\n        length: 0,\n        add: function CFFCompiler_add(data) {\n          this.data = this.data.concat(data);\n          this.length = this.data.length;\n        }\n      };\n      var header = this.compileHeader(cff.header);\n      output.add(header);\n      var nameIndex = this.compileNameIndex(cff.names);\n      output.add(nameIndex);\n      if (cff.isCIDFont) {\n        if (cff.topDict.hasName('FontMatrix')) {\n          var base = cff.topDict.getByName('FontMatrix');\n          cff.topDict.removeByName('FontMatrix');\n          for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n            var subDict = cff.fdArray[i];\n            var matrix = base.slice(0);\n            if (subDict.hasName('FontMatrix')) {\n              matrix = _util.Util.transform(matrix, subDict.getByName('FontMatrix'));\n            }\n            subDict.setByName('FontMatrix', matrix);\n          }\n        }\n      }\n      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n      output.add(compiled.output);\n      var topDictTracker = compiled.trackers[0];\n      var stringIndex = this.compileStringIndex(cff.strings.strings);\n      output.add(stringIndex);\n      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n      output.add(globalSubrIndex);\n      if (cff.encoding && cff.topDict.hasName('Encoding')) {\n        if (cff.encoding.predefined) {\n          topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n        } else {\n          var encoding = this.compileEncoding(cff.encoding);\n          topDictTracker.setEntryLocation('Encoding', [output.length], output);\n          output.add(encoding);\n        }\n      }\n      if (cff.charset && cff.topDict.hasName('charset')) {\n        if (cff.charset.predefined) {\n          topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n        } else {\n          var charset = this.compileCharset(cff.charset);\n          topDictTracker.setEntryLocation('charset', [output.length], output);\n          output.add(charset);\n        }\n      }\n      var charStrings = this.compileCharStrings(cff.charStrings);\n      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n      output.add(charStrings);\n      if (cff.isCIDFont) {\n        topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n        var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n        output.add(fdSelect);\n        compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n        topDictTracker.setEntryLocation('FDArray', [output.length], output);\n        output.add(compiled.output);\n        var fontDictTrackers = compiled.trackers;\n        this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n      }\n      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n      output.add([0]);\n      return output.data;\n    },\n    encodeNumber: function CFFCompiler_encodeNumber(value) {\n      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n        return this.encodeInteger(value);\n      }\n      return this.encodeFloat(value);\n    },\n    encodeFloat: function CFFCompiler_encodeFloat(num) {\n      var value = num.toString();\n      var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n      if (m) {\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(num * epsilon) / epsilon).toString();\n      }\n      var nibbles = '';\n      var i, ii;\n      for (i = 0, ii = value.length; i < ii; ++i) {\n        var a = value[i];\n        if (a === 'e') {\n          nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (a === '.') {\n          nibbles += 'a';\n        } else if (a === '-') {\n          nibbles += 'e';\n        } else {\n          nibbles += a;\n        }\n      }\n      nibbles += nibbles.length & 1 ? 'f' : 'ff';\n      var out = [30];\n      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n      }\n      return out;\n    },\n    encodeInteger: function CFFCompiler_encodeInteger(value) {\n      var code;\n      if (value >= -107 && value <= 107) {\n        code = [value + 139];\n      } else if (value >= 108 && value <= 1131) {\n        value = value - 108;\n        code = [(value >> 8) + 247, value & 0xFF];\n      } else if (value >= -1131 && value <= -108) {\n        value = -value - 108;\n        code = [(value >> 8) + 251, value & 0xFF];\n      } else if (value >= -32768 && value <= 32767) {\n        code = [0x1c, value >> 8 & 0xFF, value & 0xFF];\n      } else {\n        code = [0x1d, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF];\n      }\n      return code;\n    },\n    compileHeader: function CFFCompiler_compileHeader(header) {\n      return [header.major, header.minor, header.hdrSize, header.offSize];\n    },\n    compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n      var nameIndex = new CFFIndex();\n      for (var i = 0, ii = names.length; i < ii; ++i) {\n        var name = names[i];\n        var length = Math.min(name.length, 127);\n        var sanitizedName = new Array(length);\n        for (var j = 0; j < length; j++) {\n          var char = name[j];\n          if (char < '!' || char > '~' || char === '[' || char === ']' || char === '(' || char === ')' || char === '{' || char === '}' || char === '<' || char === '>' || char === '/' || char === '%') {\n            char = '_';\n          }\n          sanitizedName[j] = char;\n        }\n        sanitizedName = sanitizedName.join('');\n        if (sanitizedName === '') {\n          sanitizedName = 'Bad_Font_Name';\n        }\n        nameIndex.add((0, _util.stringToBytes)(sanitizedName));\n      }\n      return this.compileIndex(nameIndex);\n    },\n    compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n      var fontDictTrackers = [];\n      var fdArrayIndex = new CFFIndex();\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        if (removeCidKeys) {\n          fontDict.removeByName('CIDFontVersion');\n          fontDict.removeByName('CIDFontRevision');\n          fontDict.removeByName('CIDFontType');\n          fontDict.removeByName('CIDCount');\n          fontDict.removeByName('UIDBase');\n        }\n        var fontDictTracker = new CFFOffsetTracker();\n        var fontDictData = this.compileDict(fontDict, fontDictTracker);\n        fontDictTrackers.push(fontDictTracker);\n        fdArrayIndex.add(fontDictData);\n        fontDictTracker.offset(length);\n      }\n      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n      return {\n        trackers: fontDictTrackers,\n        output: fdArrayIndex\n      };\n    },\n    compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        var privateDict = fontDict.privateDict;\n        if (!privateDict || !fontDict.hasName('Private')) {\n          throw new _util.FormatError('There must be a private dictionary.');\n        }\n        var privateDictTracker = new CFFOffsetTracker();\n        var privateDictData = this.compileDict(privateDict, privateDictTracker);\n        var outputLength = output.length;\n        privateDictTracker.offset(outputLength);\n        if (!privateDictData.length) {\n          outputLength = 0;\n        }\n        trackers[i].setEntryLocation('Private', [privateDictData.length, outputLength], output);\n        output.add(privateDictData);\n        if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n          var subrs = this.compileIndex(privateDict.subrsIndex);\n          privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n          output.add(subrs);\n        }\n      }\n    },\n    compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n      var out = [];\n      var order = dict.order;\n      for (var i = 0; i < order.length; ++i) {\n        var key = order[i];\n        if (!(key in dict.values)) {\n          continue;\n        }\n        var values = dict.values[key];\n        var types = dict.types[key];\n        if (!Array.isArray(types)) {\n          types = [types];\n        }\n        if (!Array.isArray(values)) {\n          values = [values];\n        }\n        if (values.length === 0) {\n          continue;\n        }\n        for (var j = 0, jj = types.length; j < jj; ++j) {\n          var type = types[j];\n          var value = values[j];\n          switch (type) {\n            case 'num':\n            case 'sid':\n              out = out.concat(this.encodeNumber(value));\n              break;\n            case 'offset':\n              var name = dict.keyToNameMap[key];\n              if (!offsetTracker.isTracking(name)) {\n                offsetTracker.track(name, out.length);\n              }\n              out = out.concat([0x1d, 0, 0, 0, 0]);\n              break;\n            case 'array':\n            case 'delta':\n              out = out.concat(this.encodeNumber(value));\n              for (var k = 1, kk = values.length; k < kk; ++k) {\n                out = out.concat(this.encodeNumber(values[k]));\n              }\n              break;\n            default:\n              throw new _util.FormatError('Unknown data type of ' + type);\n          }\n        }\n        out = out.concat(dict.opcodes[key]);\n      }\n      return out;\n    },\n    compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n      var stringIndex = new CFFIndex();\n      for (var i = 0, ii = strings.length; i < ii; ++i) {\n        stringIndex.add((0, _util.stringToBytes)(strings[i]));\n      }\n      return this.compileIndex(stringIndex);\n    },\n    compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n      var globalSubrIndex = this.cff.globalSubrIndex;\n      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n    },\n    compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n      return this.compileIndex(charStrings);\n    },\n    compileCharset: function CFFCompiler_compileCharset(charset) {\n      return this.compileTypedArray(charset.raw);\n    },\n    compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n      return this.compileTypedArray(encoding.raw);\n    },\n    compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n      return this.compileTypedArray(fdSelect);\n    },\n    compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n      var out = [];\n      for (var i = 0, ii = data.length; i < ii; ++i) {\n        out[i] = data[i];\n      }\n      return out;\n    },\n    compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n      trackers = trackers || [];\n      var objects = index.objects;\n      var count = objects.length;\n      if (count === 0) {\n        return [0, 0, 0];\n      }\n      var data = [count >> 8 & 0xFF, count & 0xff];\n      var lastOffset = 1,\n          i;\n      for (i = 0; i < count; ++i) {\n        lastOffset += objects[i].length;\n      }\n      var offsetSize;\n      if (lastOffset < 0x100) {\n        offsetSize = 1;\n      } else if (lastOffset < 0x10000) {\n        offsetSize = 2;\n      } else if (lastOffset < 0x1000000) {\n        offsetSize = 3;\n      } else {\n        offsetSize = 4;\n      }\n      data.push(offsetSize);\n      var relativeOffset = 1;\n      for (i = 0; i < count + 1; i++) {\n        if (offsetSize === 1) {\n          data.push(relativeOffset & 0xFF);\n        } else if (offsetSize === 2) {\n          data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else if (offsetSize === 3) {\n          data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else {\n          data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        }\n        if (objects[i]) {\n          relativeOffset += objects[i].length;\n        }\n      }\n      for (i = 0; i < count; i++) {\n        if (trackers[i]) {\n          trackers[i].offset(data.length);\n        }\n        for (var j = 0, jj = objects[i].length; j < jj; j++) {\n          data.push(objects[i][j]);\n        }\n      }\n      return data;\n    }\n  };\n  return CFFCompiler;\n}();\nexports.CFFStandardStrings = CFFStandardStrings;\nexports.CFFParser = CFFParser;\nexports.CFF = CFF;\nexports.CFFHeader = CFFHeader;\nexports.CFFStrings = CFFStrings;\nexports.CFFIndex = CFFIndex;\nexports.CFFCharset = CFFCharset;\nexports.CFFTopDict = CFFTopDict;\nexports.CFFPrivateDict = CFFPrivateDict;\nexports.CFFCompiler = CFFCompiler;\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSupplementalGlyphMapForCalibri = exports.getSupplementalGlyphMapForArialBlack = exports.getGlyphMapForStandardFonts = exports.getSymbolsFonts = exports.getSerifFonts = exports.getNonStdFontMap = exports.getStdFontMap = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar getStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['ArialNarrow'] = 'Helvetica';\n  t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n  t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n  t['ArialBlack'] = 'Helvetica';\n  t['ArialBlack-Bold'] = 'Helvetica-Bold';\n  t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n  t['Arial-Black'] = 'Helvetica';\n  t['Arial-Black-Bold'] = 'Helvetica-Bold';\n  t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n  t['Arial'] = 'Helvetica';\n  t['Arial-Bold'] = 'Helvetica-Bold';\n  t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Italic'] = 'Helvetica-Oblique';\n  t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n  t['Arial-BoldMT'] = 'Helvetica-Bold';\n  t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n  t['ArialMT'] = 'Helvetica';\n  t['Courier-Bold'] = 'Courier-Bold';\n  t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n  t['Courier-Italic'] = 'Courier-Oblique';\n  t['CourierNew'] = 'Courier';\n  t['CourierNew-Bold'] = 'Courier-Bold';\n  t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n  t['CourierNew-Italic'] = 'Courier-Oblique';\n  t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n  t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n  t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n  t['CourierNewPSMT'] = 'Courier';\n  t['Helvetica'] = 'Helvetica';\n  t['Helvetica-Bold'] = 'Helvetica-Bold';\n  t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n  t['Helvetica-Italic'] = 'Helvetica-Oblique';\n  t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n  t['SegoeUISymbol'] = 'Helvetica';\n  t['Symbol-Bold'] = 'Symbol';\n  t['Symbol-BoldItalic'] = 'Symbol';\n  t['Symbol-Italic'] = 'Symbol';\n  t['TimesNewRoman'] = 'Times-Roman';\n  t['TimesNewRoman-Bold'] = 'Times-Bold';\n  t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRoman-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS'] = 'Times-Roman';\n  t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n  t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n  t['TimesNewRomanPSMT'] = 'Times-Roman';\n  t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n});\nvar getNonStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['Calibri'] = 'Helvetica';\n  t['Calibri-Bold'] = 'Helvetica-Bold';\n  t['Calibri-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Calibri-Italic'] = 'Helvetica-Oblique';\n  t['CenturyGothic'] = 'Helvetica';\n  t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n  t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n  t['ComicSansMS'] = 'Comic Sans MS';\n  t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n  t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n  t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n  t['LucidaConsole'] = 'Courier';\n  t['LucidaConsole-Bold'] = 'Courier-Bold';\n  t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n  t['LucidaConsole-Italic'] = 'Courier-Oblique';\n  t['LucidaSans-Demi'] = 'Helvetica-Bold';\n  t['MS-Gothic'] = 'MS Gothic';\n  t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n  t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n  t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n  t['MS-Mincho'] = 'MS Mincho';\n  t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n  t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n  t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n  t['MS-PGothic'] = 'MS PGothic';\n  t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n  t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n  t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n  t['MS-PMincho'] = 'MS PMincho';\n  t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n  t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n  t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n  t['NuptialScript'] = 'Times-Italic';\n  t['Wingdings'] = 'ZapfDingbats';\n});\nvar getSerifFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Adobe Jenson'] = true;\n  t['Adobe Text'] = true;\n  t['Albertus'] = true;\n  t['Aldus'] = true;\n  t['Alexandria'] = true;\n  t['Algerian'] = true;\n  t['American Typewriter'] = true;\n  t['Antiqua'] = true;\n  t['Apex'] = true;\n  t['Arno'] = true;\n  t['Aster'] = true;\n  t['Aurora'] = true;\n  t['Baskerville'] = true;\n  t['Bell'] = true;\n  t['Bembo'] = true;\n  t['Bembo Schoolbook'] = true;\n  t['Benguiat'] = true;\n  t['Berkeley Old Style'] = true;\n  t['Bernhard Modern'] = true;\n  t['Berthold City'] = true;\n  t['Bodoni'] = true;\n  t['Bauer Bodoni'] = true;\n  t['Book Antiqua'] = true;\n  t['Bookman'] = true;\n  t['Bordeaux Roman'] = true;\n  t['Californian FB'] = true;\n  t['Calisto'] = true;\n  t['Calvert'] = true;\n  t['Capitals'] = true;\n  t['Cambria'] = true;\n  t['Cartier'] = true;\n  t['Caslon'] = true;\n  t['Catull'] = true;\n  t['Centaur'] = true;\n  t['Century Old Style'] = true;\n  t['Century Schoolbook'] = true;\n  t['Chaparral'] = true;\n  t['Charis SIL'] = true;\n  t['Cheltenham'] = true;\n  t['Cholla Slab'] = true;\n  t['Clarendon'] = true;\n  t['Clearface'] = true;\n  t['Cochin'] = true;\n  t['Colonna'] = true;\n  t['Computer Modern'] = true;\n  t['Concrete Roman'] = true;\n  t['Constantia'] = true;\n  t['Cooper Black'] = true;\n  t['Corona'] = true;\n  t['Ecotype'] = true;\n  t['Egyptienne'] = true;\n  t['Elephant'] = true;\n  t['Excelsior'] = true;\n  t['Fairfield'] = true;\n  t['FF Scala'] = true;\n  t['Folkard'] = true;\n  t['Footlight'] = true;\n  t['FreeSerif'] = true;\n  t['Friz Quadrata'] = true;\n  t['Garamond'] = true;\n  t['Gentium'] = true;\n  t['Georgia'] = true;\n  t['Gloucester'] = true;\n  t['Goudy Old Style'] = true;\n  t['Goudy Schoolbook'] = true;\n  t['Goudy Pro Font'] = true;\n  t['Granjon'] = true;\n  t['Guardian Egyptian'] = true;\n  t['Heather'] = true;\n  t['Hercules'] = true;\n  t['High Tower Text'] = true;\n  t['Hiroshige'] = true;\n  t['Hoefler Text'] = true;\n  t['Humana Serif'] = true;\n  t['Imprint'] = true;\n  t['Ionic No. 5'] = true;\n  t['Janson'] = true;\n  t['Joanna'] = true;\n  t['Korinna'] = true;\n  t['Lexicon'] = true;\n  t['Liberation Serif'] = true;\n  t['Linux Libertine'] = true;\n  t['Literaturnaya'] = true;\n  t['Lucida'] = true;\n  t['Lucida Bright'] = true;\n  t['Melior'] = true;\n  t['Memphis'] = true;\n  t['Miller'] = true;\n  t['Minion'] = true;\n  t['Modern'] = true;\n  t['Mona Lisa'] = true;\n  t['Mrs Eaves'] = true;\n  t['MS Serif'] = true;\n  t['Museo Slab'] = true;\n  t['New York'] = true;\n  t['Nimbus Roman'] = true;\n  t['NPS Rawlinson Roadway'] = true;\n  t['NuptialScript'] = true;\n  t['Palatino'] = true;\n  t['Perpetua'] = true;\n  t['Plantin'] = true;\n  t['Plantin Schoolbook'] = true;\n  t['Playbill'] = true;\n  t['Poor Richard'] = true;\n  t['Rawlinson Roadway'] = true;\n  t['Renault'] = true;\n  t['Requiem'] = true;\n  t['Rockwell'] = true;\n  t['Roman'] = true;\n  t['Rotis Serif'] = true;\n  t['Sabon'] = true;\n  t['Scala'] = true;\n  t['Seagull'] = true;\n  t['Sistina'] = true;\n  t['Souvenir'] = true;\n  t['STIX'] = true;\n  t['Stone Informal'] = true;\n  t['Stone Serif'] = true;\n  t['Sylfaen'] = true;\n  t['Times'] = true;\n  t['Trajan'] = true;\n  t['Trinité'] = true;\n  t['Trump Mediaeval'] = true;\n  t['Utopia'] = true;\n  t['Vale Type'] = true;\n  t['Bitstream Vera'] = true;\n  t['Vera Serif'] = true;\n  t['Versailles'] = true;\n  t['Wanted'] = true;\n  t['Weiss'] = true;\n  t['Wide Latin'] = true;\n  t['Windsor'] = true;\n  t['XITS'] = true;\n});\nvar getSymbolsFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Dingbats'] = true;\n  t['Symbol'] = true;\n  t['ZapfDingbats'] = true;\n});\nvar getGlyphMapForStandardFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t[2] = 10;\n  t[3] = 32;\n  t[4] = 33;\n  t[5] = 34;\n  t[6] = 35;\n  t[7] = 36;\n  t[8] = 37;\n  t[9] = 38;\n  t[10] = 39;\n  t[11] = 40;\n  t[12] = 41;\n  t[13] = 42;\n  t[14] = 43;\n  t[15] = 44;\n  t[16] = 45;\n  t[17] = 46;\n  t[18] = 47;\n  t[19] = 48;\n  t[20] = 49;\n  t[21] = 50;\n  t[22] = 51;\n  t[23] = 52;\n  t[24] = 53;\n  t[25] = 54;\n  t[26] = 55;\n  t[27] = 56;\n  t[28] = 57;\n  t[29] = 58;\n  t[30] = 894;\n  t[31] = 60;\n  t[32] = 61;\n  t[33] = 62;\n  t[34] = 63;\n  t[35] = 64;\n  t[36] = 65;\n  t[37] = 66;\n  t[38] = 67;\n  t[39] = 68;\n  t[40] = 69;\n  t[41] = 70;\n  t[42] = 71;\n  t[43] = 72;\n  t[44] = 73;\n  t[45] = 74;\n  t[46] = 75;\n  t[47] = 76;\n  t[48] = 77;\n  t[49] = 78;\n  t[50] = 79;\n  t[51] = 80;\n  t[52] = 81;\n  t[53] = 82;\n  t[54] = 83;\n  t[55] = 84;\n  t[56] = 85;\n  t[57] = 86;\n  t[58] = 87;\n  t[59] = 88;\n  t[60] = 89;\n  t[61] = 90;\n  t[62] = 91;\n  t[63] = 92;\n  t[64] = 93;\n  t[65] = 94;\n  t[66] = 95;\n  t[67] = 96;\n  t[68] = 97;\n  t[69] = 98;\n  t[70] = 99;\n  t[71] = 100;\n  t[72] = 101;\n  t[73] = 102;\n  t[74] = 103;\n  t[75] = 104;\n  t[76] = 105;\n  t[77] = 106;\n  t[78] = 107;\n  t[79] = 108;\n  t[80] = 109;\n  t[81] = 110;\n  t[82] = 111;\n  t[83] = 112;\n  t[84] = 113;\n  t[85] = 114;\n  t[86] = 115;\n  t[87] = 116;\n  t[88] = 117;\n  t[89] = 118;\n  t[90] = 119;\n  t[91] = 120;\n  t[92] = 121;\n  t[93] = 122;\n  t[94] = 123;\n  t[95] = 124;\n  t[96] = 125;\n  t[97] = 126;\n  t[98] = 196;\n  t[99] = 197;\n  t[100] = 199;\n  t[101] = 201;\n  t[102] = 209;\n  t[103] = 214;\n  t[104] = 220;\n  t[105] = 225;\n  t[106] = 224;\n  t[107] = 226;\n  t[108] = 228;\n  t[109] = 227;\n  t[110] = 229;\n  t[111] = 231;\n  t[112] = 233;\n  t[113] = 232;\n  t[114] = 234;\n  t[115] = 235;\n  t[116] = 237;\n  t[117] = 236;\n  t[118] = 238;\n  t[119] = 239;\n  t[120] = 241;\n  t[121] = 243;\n  t[122] = 242;\n  t[123] = 244;\n  t[124] = 246;\n  t[125] = 245;\n  t[126] = 250;\n  t[127] = 249;\n  t[128] = 251;\n  t[129] = 252;\n  t[130] = 8224;\n  t[131] = 176;\n  t[132] = 162;\n  t[133] = 163;\n  t[134] = 167;\n  t[135] = 8226;\n  t[136] = 182;\n  t[137] = 223;\n  t[138] = 174;\n  t[139] = 169;\n  t[140] = 8482;\n  t[141] = 180;\n  t[142] = 168;\n  t[143] = 8800;\n  t[144] = 198;\n  t[145] = 216;\n  t[146] = 8734;\n  t[147] = 177;\n  t[148] = 8804;\n  t[149] = 8805;\n  t[150] = 165;\n  t[151] = 181;\n  t[152] = 8706;\n  t[153] = 8721;\n  t[154] = 8719;\n  t[156] = 8747;\n  t[157] = 170;\n  t[158] = 186;\n  t[159] = 8486;\n  t[160] = 230;\n  t[161] = 248;\n  t[162] = 191;\n  t[163] = 161;\n  t[164] = 172;\n  t[165] = 8730;\n  t[166] = 402;\n  t[167] = 8776;\n  t[168] = 8710;\n  t[169] = 171;\n  t[170] = 187;\n  t[171] = 8230;\n  t[210] = 218;\n  t[223] = 711;\n  t[224] = 321;\n  t[225] = 322;\n  t[227] = 353;\n  t[229] = 382;\n  t[234] = 253;\n  t[252] = 263;\n  t[253] = 268;\n  t[254] = 269;\n  t[258] = 258;\n  t[260] = 260;\n  t[261] = 261;\n  t[265] = 280;\n  t[266] = 281;\n  t[268] = 283;\n  t[269] = 313;\n  t[275] = 323;\n  t[276] = 324;\n  t[278] = 328;\n  t[284] = 345;\n  t[285] = 346;\n  t[286] = 347;\n  t[292] = 367;\n  t[295] = 377;\n  t[296] = 378;\n  t[298] = 380;\n  t[305] = 963;\n  t[306] = 964;\n  t[307] = 966;\n  t[308] = 8215;\n  t[309] = 8252;\n  t[310] = 8319;\n  t[311] = 8359;\n  t[312] = 8592;\n  t[313] = 8593;\n  t[337] = 9552;\n  t[493] = 1039;\n  t[494] = 1040;\n  t[705] = 1524;\n  t[706] = 8362;\n  t[710] = 64288;\n  t[711] = 64298;\n  t[759] = 1617;\n  t[761] = 1776;\n  t[763] = 1778;\n  t[775] = 1652;\n  t[777] = 1764;\n  t[778] = 1780;\n  t[779] = 1781;\n  t[780] = 1782;\n  t[782] = 771;\n  t[783] = 64726;\n  t[786] = 8363;\n  t[788] = 8532;\n  t[790] = 768;\n  t[791] = 769;\n  t[792] = 768;\n  t[795] = 803;\n  t[797] = 64336;\n  t[798] = 64337;\n  t[799] = 64342;\n  t[800] = 64343;\n  t[801] = 64344;\n  t[802] = 64345;\n  t[803] = 64362;\n  t[804] = 64363;\n  t[805] = 64364;\n  t[2424] = 7821;\n  t[2425] = 7822;\n  t[2426] = 7823;\n  t[2427] = 7824;\n  t[2428] = 7825;\n  t[2429] = 7826;\n  t[2430] = 7827;\n  t[2433] = 7682;\n  t[2678] = 8045;\n  t[2679] = 8046;\n  t[2830] = 1552;\n  t[2838] = 686;\n  t[2840] = 751;\n  t[2842] = 753;\n  t[2843] = 754;\n  t[2844] = 755;\n  t[2846] = 757;\n  t[2856] = 767;\n  t[2857] = 848;\n  t[2858] = 849;\n  t[2862] = 853;\n  t[2863] = 854;\n  t[2864] = 855;\n  t[2865] = 861;\n  t[2866] = 862;\n  t[2906] = 7460;\n  t[2908] = 7462;\n  t[2909] = 7463;\n  t[2910] = 7464;\n  t[2912] = 7466;\n  t[2913] = 7467;\n  t[2914] = 7468;\n  t[2916] = 7470;\n  t[2917] = 7471;\n  t[2918] = 7472;\n  t[2920] = 7474;\n  t[2921] = 7475;\n  t[2922] = 7476;\n  t[2924] = 7478;\n  t[2925] = 7479;\n  t[2926] = 7480;\n  t[2928] = 7482;\n  t[2929] = 7483;\n  t[2930] = 7484;\n  t[2932] = 7486;\n  t[2933] = 7487;\n  t[2934] = 7488;\n  t[2936] = 7490;\n  t[2937] = 7491;\n  t[2938] = 7492;\n  t[2940] = 7494;\n  t[2941] = 7495;\n  t[2942] = 7496;\n  t[2944] = 7498;\n  t[2946] = 7500;\n  t[2948] = 7502;\n  t[2950] = 7504;\n  t[2951] = 7505;\n  t[2952] = 7506;\n  t[2954] = 7508;\n  t[2955] = 7509;\n  t[2956] = 7510;\n  t[2958] = 7512;\n  t[2959] = 7513;\n  t[2960] = 7514;\n  t[2962] = 7516;\n  t[2963] = 7517;\n  t[2964] = 7518;\n  t[2966] = 7520;\n  t[2967] = 7521;\n  t[2968] = 7522;\n  t[2970] = 7524;\n  t[2971] = 7525;\n  t[2972] = 7526;\n  t[2974] = 7528;\n  t[2975] = 7529;\n  t[2976] = 7530;\n  t[2978] = 1537;\n  t[2979] = 1538;\n  t[2980] = 1539;\n  t[2982] = 1549;\n  t[2983] = 1551;\n  t[2984] = 1552;\n  t[2986] = 1554;\n  t[2987] = 1555;\n  t[2988] = 1556;\n  t[2990] = 1623;\n  t[2991] = 1624;\n  t[2995] = 1775;\n  t[2999] = 1791;\n  t[3002] = 64290;\n  t[3003] = 64291;\n  t[3004] = 64292;\n  t[3006] = 64294;\n  t[3007] = 64295;\n  t[3008] = 64296;\n  t[3011] = 1900;\n  t[3014] = 8223;\n  t[3015] = 8244;\n  t[3017] = 7532;\n  t[3018] = 7533;\n  t[3019] = 7534;\n  t[3075] = 7590;\n  t[3076] = 7591;\n  t[3079] = 7594;\n  t[3080] = 7595;\n  t[3083] = 7598;\n  t[3084] = 7599;\n  t[3087] = 7602;\n  t[3088] = 7603;\n  t[3091] = 7606;\n  t[3092] = 7607;\n  t[3095] = 7610;\n  t[3096] = 7611;\n  t[3099] = 7614;\n  t[3100] = 7615;\n  t[3103] = 7618;\n  t[3104] = 7619;\n  t[3107] = 8337;\n  t[3108] = 8338;\n  t[3116] = 1884;\n  t[3119] = 1885;\n  t[3120] = 1885;\n  t[3123] = 1886;\n  t[3124] = 1886;\n  t[3127] = 1887;\n  t[3128] = 1887;\n  t[3131] = 1888;\n  t[3132] = 1888;\n  t[3135] = 1889;\n  t[3136] = 1889;\n  t[3139] = 1890;\n  t[3140] = 1890;\n  t[3143] = 1891;\n  t[3144] = 1891;\n  t[3147] = 1892;\n  t[3148] = 1892;\n  t[3153] = 580;\n  t[3154] = 581;\n  t[3157] = 584;\n  t[3158] = 585;\n  t[3161] = 588;\n  t[3162] = 589;\n  t[3165] = 891;\n  t[3166] = 892;\n  t[3169] = 1274;\n  t[3170] = 1275;\n  t[3173] = 1278;\n  t[3174] = 1279;\n  t[3181] = 7622;\n  t[3182] = 7623;\n  t[3282] = 11799;\n  t[3316] = 578;\n  t[3379] = 42785;\n  t[3393] = 1159;\n  t[3416] = 8377;\n});\nvar getSupplementalGlyphMapForArialBlack = (0, _util.getLookupTableFactory)(function (t) {\n  t[227] = 322;\n  t[264] = 261;\n  t[291] = 346;\n});\nvar getSupplementalGlyphMapForCalibri = (0, _util.getLookupTableFactory)(function (t) {\n  t[1] = 32;\n  t[4] = 65;\n  t[17] = 66;\n  t[18] = 67;\n  t[24] = 68;\n  t[28] = 69;\n  t[38] = 70;\n  t[39] = 71;\n  t[44] = 72;\n  t[47] = 73;\n  t[58] = 74;\n  t[60] = 75;\n  t[62] = 76;\n  t[68] = 77;\n  t[69] = 78;\n  t[75] = 79;\n  t[87] = 80;\n  t[89] = 81;\n  t[90] = 82;\n  t[94] = 83;\n  t[100] = 84;\n  t[104] = 85;\n  t[115] = 86;\n  t[116] = 87;\n  t[121] = 88;\n  t[122] = 89;\n  t[127] = 90;\n  t[258] = 97;\n  t[268] = 261;\n  t[271] = 98;\n  t[272] = 99;\n  t[273] = 263;\n  t[282] = 100;\n  t[286] = 101;\n  t[295] = 281;\n  t[296] = 102;\n  t[336] = 103;\n  t[346] = 104;\n  t[349] = 105;\n  t[361] = 106;\n  t[364] = 107;\n  t[367] = 108;\n  t[371] = 322;\n  t[373] = 109;\n  t[374] = 110;\n  t[381] = 111;\n  t[383] = 243;\n  t[393] = 112;\n  t[395] = 113;\n  t[396] = 114;\n  t[400] = 115;\n  t[401] = 347;\n  t[410] = 116;\n  t[437] = 117;\n  t[448] = 118;\n  t[449] = 119;\n  t[454] = 120;\n  t[455] = 121;\n  t[460] = 122;\n  t[463] = 380;\n  t[853] = 44;\n  t[855] = 58;\n  t[856] = 46;\n  t[876] = 47;\n  t[878] = 45;\n  t[882] = 45;\n  t[894] = 40;\n  t[895] = 41;\n  t[896] = 91;\n  t[897] = 93;\n  t[923] = 64;\n  t[1004] = 48;\n  t[1005] = 49;\n  t[1006] = 50;\n  t[1007] = 51;\n  t[1008] = 52;\n  t[1009] = 53;\n  t[1010] = 54;\n  t[1011] = 55;\n  t[1012] = 56;\n  t[1013] = 57;\n  t[1081] = 37;\n  t[1085] = 43;\n  t[1086] = 45;\n});\nexports.getStdFontMap = getStdFontMap;\nexports.getNonStdFontMap = getNonStdFontMap;\nexports.getSerifFonts = getSerifFonts;\nexports.getSymbolsFonts = getSymbolsFonts;\nexports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\nexports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\nexports.getSupplementalGlyphMapForCalibri = getSupplementalGlyphMapForCalibri;\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getLookupTableFactory = __w_pdfjs_require__(0).getLookupTableFactory;\nvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\n  t[63721] = 0x00A9;\n  t[63193] = 0x00A9;\n  t[63720] = 0x00AE;\n  t[63194] = 0x00AE;\n  t[63722] = 0x2122;\n  t[63195] = 0x2122;\n  t[63729] = 0x23A7;\n  t[63730] = 0x23A8;\n  t[63731] = 0x23A9;\n  t[63740] = 0x23AB;\n  t[63741] = 0x23AC;\n  t[63742] = 0x23AD;\n  t[63726] = 0x23A1;\n  t[63727] = 0x23A2;\n  t[63728] = 0x23A3;\n  t[63737] = 0x23A4;\n  t[63738] = 0x23A5;\n  t[63739] = 0x23A6;\n  t[63723] = 0x239B;\n  t[63724] = 0x239C;\n  t[63725] = 0x239D;\n  t[63734] = 0x239E;\n  t[63735] = 0x239F;\n  t[63736] = 0x23A0;\n});\nfunction mapSpecialUnicodeValues(code) {\n  if (code >= 0xFFF0 && code <= 0xFFFF) {\n    return 0;\n  } else if (code >= 0xF600 && code <= 0xF8FF) {\n    return getSpecialPUASymbols()[code] || code;\n  } else if (code === 0x00AD) {\n    return 0x002D;\n  }\n  return code;\n}\nfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\n  var unicode = glyphsUnicodeMap[name];\n  if (unicode !== undefined) {\n    return unicode;\n  }\n  if (!name) {\n    return -1;\n  }\n  if (name[0] === 'u') {\n    var nameLen = name.length,\n        hexStr;\n    if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n      hexStr = name.substr(3);\n    } else if (nameLen >= 5 && nameLen <= 7) {\n      hexStr = name.substr(1);\n    } else {\n      return -1;\n    }\n    if (hexStr === hexStr.toUpperCase()) {\n      unicode = parseInt(hexStr, 16);\n      if (unicode >= 0) {\n        return unicode;\n      }\n    }\n  }\n  return -1;\n}\nvar UnicodeRanges = [{\n  'begin': 0x0000,\n  'end': 0x007F\n}, {\n  'begin': 0x0080,\n  'end': 0x00FF\n}, {\n  'begin': 0x0100,\n  'end': 0x017F\n}, {\n  'begin': 0x0180,\n  'end': 0x024F\n}, {\n  'begin': 0x0250,\n  'end': 0x02AF\n}, {\n  'begin': 0x02B0,\n  'end': 0x02FF\n}, {\n  'begin': 0x0300,\n  'end': 0x036F\n}, {\n  'begin': 0x0370,\n  'end': 0x03FF\n}, {\n  'begin': 0x2C80,\n  'end': 0x2CFF\n}, {\n  'begin': 0x0400,\n  'end': 0x04FF\n}, {\n  'begin': 0x0530,\n  'end': 0x058F\n}, {\n  'begin': 0x0590,\n  'end': 0x05FF\n}, {\n  'begin': 0xA500,\n  'end': 0xA63F\n}, {\n  'begin': 0x0600,\n  'end': 0x06FF\n}, {\n  'begin': 0x07C0,\n  'end': 0x07FF\n}, {\n  'begin': 0x0900,\n  'end': 0x097F\n}, {\n  'begin': 0x0980,\n  'end': 0x09FF\n}, {\n  'begin': 0x0A00,\n  'end': 0x0A7F\n}, {\n  'begin': 0x0A80,\n  'end': 0x0AFF\n}, {\n  'begin': 0x0B00,\n  'end': 0x0B7F\n}, {\n  'begin': 0x0B80,\n  'end': 0x0BFF\n}, {\n  'begin': 0x0C00,\n  'end': 0x0C7F\n}, {\n  'begin': 0x0C80,\n  'end': 0x0CFF\n}, {\n  'begin': 0x0D00,\n  'end': 0x0D7F\n}, {\n  'begin': 0x0E00,\n  'end': 0x0E7F\n}, {\n  'begin': 0x0E80,\n  'end': 0x0EFF\n}, {\n  'begin': 0x10A0,\n  'end': 0x10FF\n}, {\n  'begin': 0x1B00,\n  'end': 0x1B7F\n}, {\n  'begin': 0x1100,\n  'end': 0x11FF\n}, {\n  'begin': 0x1E00,\n  'end': 0x1EFF\n}, {\n  'begin': 0x1F00,\n  'end': 0x1FFF\n}, {\n  'begin': 0x2000,\n  'end': 0x206F\n}, {\n  'begin': 0x2070,\n  'end': 0x209F\n}, {\n  'begin': 0x20A0,\n  'end': 0x20CF\n}, {\n  'begin': 0x20D0,\n  'end': 0x20FF\n}, {\n  'begin': 0x2100,\n  'end': 0x214F\n}, {\n  'begin': 0x2150,\n  'end': 0x218F\n}, {\n  'begin': 0x2190,\n  'end': 0x21FF\n}, {\n  'begin': 0x2200,\n  'end': 0x22FF\n}, {\n  'begin': 0x2300,\n  'end': 0x23FF\n}, {\n  'begin': 0x2400,\n  'end': 0x243F\n}, {\n  'begin': 0x2440,\n  'end': 0x245F\n}, {\n  'begin': 0x2460,\n  'end': 0x24FF\n}, {\n  'begin': 0x2500,\n  'end': 0x257F\n}, {\n  'begin': 0x2580,\n  'end': 0x259F\n}, {\n  'begin': 0x25A0,\n  'end': 0x25FF\n}, {\n  'begin': 0x2600,\n  'end': 0x26FF\n}, {\n  'begin': 0x2700,\n  'end': 0x27BF\n}, {\n  'begin': 0x3000,\n  'end': 0x303F\n}, {\n  'begin': 0x3040,\n  'end': 0x309F\n}, {\n  'begin': 0x30A0,\n  'end': 0x30FF\n}, {\n  'begin': 0x3100,\n  'end': 0x312F\n}, {\n  'begin': 0x3130,\n  'end': 0x318F\n}, {\n  'begin': 0xA840,\n  'end': 0xA87F\n}, {\n  'begin': 0x3200,\n  'end': 0x32FF\n}, {\n  'begin': 0x3300,\n  'end': 0x33FF\n}, {\n  'begin': 0xAC00,\n  'end': 0xD7AF\n}, {\n  'begin': 0xD800,\n  'end': 0xDFFF\n}, {\n  'begin': 0x10900,\n  'end': 0x1091F\n}, {\n  'begin': 0x4E00,\n  'end': 0x9FFF\n}, {\n  'begin': 0xE000,\n  'end': 0xF8FF\n}, {\n  'begin': 0x31C0,\n  'end': 0x31EF\n}, {\n  'begin': 0xFB00,\n  'end': 0xFB4F\n}, {\n  'begin': 0xFB50,\n  'end': 0xFDFF\n}, {\n  'begin': 0xFE20,\n  'end': 0xFE2F\n}, {\n  'begin': 0xFE10,\n  'end': 0xFE1F\n}, {\n  'begin': 0xFE50,\n  'end': 0xFE6F\n}, {\n  'begin': 0xFE70,\n  'end': 0xFEFF\n}, {\n  'begin': 0xFF00,\n  'end': 0xFFEF\n}, {\n  'begin': 0xFFF0,\n  'end': 0xFFFF\n}, {\n  'begin': 0x0F00,\n  'end': 0x0FFF\n}, {\n  'begin': 0x0700,\n  'end': 0x074F\n}, {\n  'begin': 0x0780,\n  'end': 0x07BF\n}, {\n  'begin': 0x0D80,\n  'end': 0x0DFF\n}, {\n  'begin': 0x1000,\n  'end': 0x109F\n}, {\n  'begin': 0x1200,\n  'end': 0x137F\n}, {\n  'begin': 0x13A0,\n  'end': 0x13FF\n}, {\n  'begin': 0x1400,\n  'end': 0x167F\n}, {\n  'begin': 0x1680,\n  'end': 0x169F\n}, {\n  'begin': 0x16A0,\n  'end': 0x16FF\n}, {\n  'begin': 0x1780,\n  'end': 0x17FF\n}, {\n  'begin': 0x1800,\n  'end': 0x18AF\n}, {\n  'begin': 0x2800,\n  'end': 0x28FF\n}, {\n  'begin': 0xA000,\n  'end': 0xA48F\n}, {\n  'begin': 0x1700,\n  'end': 0x171F\n}, {\n  'begin': 0x10300,\n  'end': 0x1032F\n}, {\n  'begin': 0x10330,\n  'end': 0x1034F\n}, {\n  'begin': 0x10400,\n  'end': 0x1044F\n}, {\n  'begin': 0x1D000,\n  'end': 0x1D0FF\n}, {\n  'begin': 0x1D400,\n  'end': 0x1D7FF\n}, {\n  'begin': 0xFF000,\n  'end': 0xFFFFD\n}, {\n  'begin': 0xFE00,\n  'end': 0xFE0F\n}, {\n  'begin': 0xE0000,\n  'end': 0xE007F\n}, {\n  'begin': 0x1900,\n  'end': 0x194F\n}, {\n  'begin': 0x1950,\n  'end': 0x197F\n}, {\n  'begin': 0x1980,\n  'end': 0x19DF\n}, {\n  'begin': 0x1A00,\n  'end': 0x1A1F\n}, {\n  'begin': 0x2C00,\n  'end': 0x2C5F\n}, {\n  'begin': 0x2D30,\n  'end': 0x2D7F\n}, {\n  'begin': 0x4DC0,\n  'end': 0x4DFF\n}, {\n  'begin': 0xA800,\n  'end': 0xA82F\n}, {\n  'begin': 0x10000,\n  'end': 0x1007F\n}, {\n  'begin': 0x10140,\n  'end': 0x1018F\n}, {\n  'begin': 0x10380,\n  'end': 0x1039F\n}, {\n  'begin': 0x103A0,\n  'end': 0x103DF\n}, {\n  'begin': 0x10450,\n  'end': 0x1047F\n}, {\n  'begin': 0x10480,\n  'end': 0x104AF\n}, {\n  'begin': 0x10800,\n  'end': 0x1083F\n}, {\n  'begin': 0x10A00,\n  'end': 0x10A5F\n}, {\n  'begin': 0x1D300,\n  'end': 0x1D35F\n}, {\n  'begin': 0x12000,\n  'end': 0x123FF\n}, {\n  'begin': 0x1D360,\n  'end': 0x1D37F\n}, {\n  'begin': 0x1B80,\n  'end': 0x1BBF\n}, {\n  'begin': 0x1C00,\n  'end': 0x1C4F\n}, {\n  'begin': 0x1C50,\n  'end': 0x1C7F\n}, {\n  'begin': 0xA880,\n  'end': 0xA8DF\n}, {\n  'begin': 0xA900,\n  'end': 0xA92F\n}, {\n  'begin': 0xA930,\n  'end': 0xA95F\n}, {\n  'begin': 0xAA00,\n  'end': 0xAA5F\n}, {\n  'begin': 0x10190,\n  'end': 0x101CF\n}, {\n  'begin': 0x101D0,\n  'end': 0x101FF\n}, {\n  'begin': 0x102A0,\n  'end': 0x102DF\n}, {\n  'begin': 0x1F030,\n  'end': 0x1F09F\n}];\nfunction getUnicodeRangeFor(value) {\n  for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n    var range = UnicodeRanges[i];\n    if (value >= range.begin && value < range.end) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction isRTLRangeFor(value) {\n  var range = UnicodeRanges[13];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  range = UnicodeRanges[11];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  return false;\n}\nvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\n  t['\\xA8'] = ' \\u0308';\n  t['\\xAF'] = ' \\u0304';\n  t['\\xB4'] = ' \\u0301';\n  t['\\xB5'] = '\\u03BC';\n  t['\\xB8'] = ' \\u0327';\n  t['\\u0132'] = 'IJ';\n  t['\\u0133'] = 'ij';\n  t['\\u013F'] = 'L\\xB7';\n  t['\\u0140'] = 'l\\xB7';\n  t['\\u0149'] = '\\u02BCn';\n  t['\\u017F'] = 's';\n  t['\\u01C4'] = 'D\\u017D';\n  t['\\u01C5'] = 'D\\u017E';\n  t['\\u01C6'] = 'd\\u017E';\n  t['\\u01C7'] = 'LJ';\n  t['\\u01C8'] = 'Lj';\n  t['\\u01C9'] = 'lj';\n  t['\\u01CA'] = 'NJ';\n  t['\\u01CB'] = 'Nj';\n  t['\\u01CC'] = 'nj';\n  t['\\u01F1'] = 'DZ';\n  t['\\u01F2'] = 'Dz';\n  t['\\u01F3'] = 'dz';\n  t['\\u02D8'] = ' \\u0306';\n  t['\\u02D9'] = ' \\u0307';\n  t['\\u02DA'] = ' \\u030A';\n  t['\\u02DB'] = ' \\u0328';\n  t['\\u02DC'] = ' \\u0303';\n  t['\\u02DD'] = ' \\u030B';\n  t['\\u037A'] = ' \\u0345';\n  t['\\u0384'] = ' \\u0301';\n  t['\\u03D0'] = '\\u03B2';\n  t['\\u03D1'] = '\\u03B8';\n  t['\\u03D2'] = '\\u03A5';\n  t['\\u03D5'] = '\\u03C6';\n  t['\\u03D6'] = '\\u03C0';\n  t['\\u03F0'] = '\\u03BA';\n  t['\\u03F1'] = '\\u03C1';\n  t['\\u03F2'] = '\\u03C2';\n  t['\\u03F4'] = '\\u0398';\n  t['\\u03F5'] = '\\u03B5';\n  t['\\u03F9'] = '\\u03A3';\n  t['\\u0587'] = '\\u0565\\u0582';\n  t['\\u0675'] = '\\u0627\\u0674';\n  t['\\u0676'] = '\\u0648\\u0674';\n  t['\\u0677'] = '\\u06C7\\u0674';\n  t['\\u0678'] = '\\u064A\\u0674';\n  t['\\u0E33'] = '\\u0E4D\\u0E32';\n  t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n  t['\\u0EDC'] = '\\u0EAB\\u0E99';\n  t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n  t['\\u0F77'] = '\\u0FB2\\u0F81';\n  t['\\u0F79'] = '\\u0FB3\\u0F81';\n  t['\\u1E9A'] = 'a\\u02BE';\n  t['\\u1FBD'] = ' \\u0313';\n  t['\\u1FBF'] = ' \\u0313';\n  t['\\u1FC0'] = ' \\u0342';\n  t['\\u1FFE'] = ' \\u0314';\n  t['\\u2002'] = ' ';\n  t['\\u2003'] = ' ';\n  t['\\u2004'] = ' ';\n  t['\\u2005'] = ' ';\n  t['\\u2006'] = ' ';\n  t['\\u2008'] = ' ';\n  t['\\u2009'] = ' ';\n  t['\\u200A'] = ' ';\n  t['\\u2017'] = ' \\u0333';\n  t['\\u2024'] = '.';\n  t['\\u2025'] = '..';\n  t['\\u2026'] = '...';\n  t['\\u2033'] = '\\u2032\\u2032';\n  t['\\u2034'] = '\\u2032\\u2032\\u2032';\n  t['\\u2036'] = '\\u2035\\u2035';\n  t['\\u2037'] = '\\u2035\\u2035\\u2035';\n  t['\\u203C'] = '!!';\n  t['\\u203E'] = ' \\u0305';\n  t['\\u2047'] = '??';\n  t['\\u2048'] = '?!';\n  t['\\u2049'] = '!?';\n  t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n  t['\\u205F'] = ' ';\n  t['\\u20A8'] = 'Rs';\n  t['\\u2100'] = 'a/c';\n  t['\\u2101'] = 'a/s';\n  t['\\u2103'] = '\\xB0C';\n  t['\\u2105'] = 'c/o';\n  t['\\u2106'] = 'c/u';\n  t['\\u2107'] = '\\u0190';\n  t['\\u2109'] = '\\xB0F';\n  t['\\u2116'] = 'No';\n  t['\\u2121'] = 'TEL';\n  t['\\u2135'] = '\\u05D0';\n  t['\\u2136'] = '\\u05D1';\n  t['\\u2137'] = '\\u05D2';\n  t['\\u2138'] = '\\u05D3';\n  t['\\u213B'] = 'FAX';\n  t['\\u2160'] = 'I';\n  t['\\u2161'] = 'II';\n  t['\\u2162'] = 'III';\n  t['\\u2163'] = 'IV';\n  t['\\u2164'] = 'V';\n  t['\\u2165'] = 'VI';\n  t['\\u2166'] = 'VII';\n  t['\\u2167'] = 'VIII';\n  t['\\u2168'] = 'IX';\n  t['\\u2169'] = 'X';\n  t['\\u216A'] = 'XI';\n  t['\\u216B'] = 'XII';\n  t['\\u216C'] = 'L';\n  t['\\u216D'] = 'C';\n  t['\\u216E'] = 'D';\n  t['\\u216F'] = 'M';\n  t['\\u2170'] = 'i';\n  t['\\u2171'] = 'ii';\n  t['\\u2172'] = 'iii';\n  t['\\u2173'] = 'iv';\n  t['\\u2174'] = 'v';\n  t['\\u2175'] = 'vi';\n  t['\\u2176'] = 'vii';\n  t['\\u2177'] = 'viii';\n  t['\\u2178'] = 'ix';\n  t['\\u2179'] = 'x';\n  t['\\u217A'] = 'xi';\n  t['\\u217B'] = 'xii';\n  t['\\u217C'] = 'l';\n  t['\\u217D'] = 'c';\n  t['\\u217E'] = 'd';\n  t['\\u217F'] = 'm';\n  t['\\u222C'] = '\\u222B\\u222B';\n  t['\\u222D'] = '\\u222B\\u222B\\u222B';\n  t['\\u222F'] = '\\u222E\\u222E';\n  t['\\u2230'] = '\\u222E\\u222E\\u222E';\n  t['\\u2474'] = '(1)';\n  t['\\u2475'] = '(2)';\n  t['\\u2476'] = '(3)';\n  t['\\u2477'] = '(4)';\n  t['\\u2478'] = '(5)';\n  t['\\u2479'] = '(6)';\n  t['\\u247A'] = '(7)';\n  t['\\u247B'] = '(8)';\n  t['\\u247C'] = '(9)';\n  t['\\u247D'] = '(10)';\n  t['\\u247E'] = '(11)';\n  t['\\u247F'] = '(12)';\n  t['\\u2480'] = '(13)';\n  t['\\u2481'] = '(14)';\n  t['\\u2482'] = '(15)';\n  t['\\u2483'] = '(16)';\n  t['\\u2484'] = '(17)';\n  t['\\u2485'] = '(18)';\n  t['\\u2486'] = '(19)';\n  t['\\u2487'] = '(20)';\n  t['\\u2488'] = '1.';\n  t['\\u2489'] = '2.';\n  t['\\u248A'] = '3.';\n  t['\\u248B'] = '4.';\n  t['\\u248C'] = '5.';\n  t['\\u248D'] = '6.';\n  t['\\u248E'] = '7.';\n  t['\\u248F'] = '8.';\n  t['\\u2490'] = '9.';\n  t['\\u2491'] = '10.';\n  t['\\u2492'] = '11.';\n  t['\\u2493'] = '12.';\n  t['\\u2494'] = '13.';\n  t['\\u2495'] = '14.';\n  t['\\u2496'] = '15.';\n  t['\\u2497'] = '16.';\n  t['\\u2498'] = '17.';\n  t['\\u2499'] = '18.';\n  t['\\u249A'] = '19.';\n  t['\\u249B'] = '20.';\n  t['\\u249C'] = '(a)';\n  t['\\u249D'] = '(b)';\n  t['\\u249E'] = '(c)';\n  t['\\u249F'] = '(d)';\n  t['\\u24A0'] = '(e)';\n  t['\\u24A1'] = '(f)';\n  t['\\u24A2'] = '(g)';\n  t['\\u24A3'] = '(h)';\n  t['\\u24A4'] = '(i)';\n  t['\\u24A5'] = '(j)';\n  t['\\u24A6'] = '(k)';\n  t['\\u24A7'] = '(l)';\n  t['\\u24A8'] = '(m)';\n  t['\\u24A9'] = '(n)';\n  t['\\u24AA'] = '(o)';\n  t['\\u24AB'] = '(p)';\n  t['\\u24AC'] = '(q)';\n  t['\\u24AD'] = '(r)';\n  t['\\u24AE'] = '(s)';\n  t['\\u24AF'] = '(t)';\n  t['\\u24B0'] = '(u)';\n  t['\\u24B1'] = '(v)';\n  t['\\u24B2'] = '(w)';\n  t['\\u24B3'] = '(x)';\n  t['\\u24B4'] = '(y)';\n  t['\\u24B5'] = '(z)';\n  t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n  t['\\u2A74'] = '::=';\n  t['\\u2A75'] = '==';\n  t['\\u2A76'] = '===';\n  t['\\u2E9F'] = '\\u6BCD';\n  t['\\u2EF3'] = '\\u9F9F';\n  t['\\u2F00'] = '\\u4E00';\n  t['\\u2F01'] = '\\u4E28';\n  t['\\u2F02'] = '\\u4E36';\n  t['\\u2F03'] = '\\u4E3F';\n  t['\\u2F04'] = '\\u4E59';\n  t['\\u2F05'] = '\\u4E85';\n  t['\\u2F06'] = '\\u4E8C';\n  t['\\u2F07'] = '\\u4EA0';\n  t['\\u2F08'] = '\\u4EBA';\n  t['\\u2F09'] = '\\u513F';\n  t['\\u2F0A'] = '\\u5165';\n  t['\\u2F0B'] = '\\u516B';\n  t['\\u2F0C'] = '\\u5182';\n  t['\\u2F0D'] = '\\u5196';\n  t['\\u2F0E'] = '\\u51AB';\n  t['\\u2F0F'] = '\\u51E0';\n  t['\\u2F10'] = '\\u51F5';\n  t['\\u2F11'] = '\\u5200';\n  t['\\u2F12'] = '\\u529B';\n  t['\\u2F13'] = '\\u52F9';\n  t['\\u2F14'] = '\\u5315';\n  t['\\u2F15'] = '\\u531A';\n  t['\\u2F16'] = '\\u5338';\n  t['\\u2F17'] = '\\u5341';\n  t['\\u2F18'] = '\\u535C';\n  t['\\u2F19'] = '\\u5369';\n  t['\\u2F1A'] = '\\u5382';\n  t['\\u2F1B'] = '\\u53B6';\n  t['\\u2F1C'] = '\\u53C8';\n  t['\\u2F1D'] = '\\u53E3';\n  t['\\u2F1E'] = '\\u56D7';\n  t['\\u2F1F'] = '\\u571F';\n  t['\\u2F20'] = '\\u58EB';\n  t['\\u2F21'] = '\\u5902';\n  t['\\u2F22'] = '\\u590A';\n  t['\\u2F23'] = '\\u5915';\n  t['\\u2F24'] = '\\u5927';\n  t['\\u2F25'] = '\\u5973';\n  t['\\u2F26'] = '\\u5B50';\n  t['\\u2F27'] = '\\u5B80';\n  t['\\u2F28'] = '\\u5BF8';\n  t['\\u2F29'] = '\\u5C0F';\n  t['\\u2F2A'] = '\\u5C22';\n  t['\\u2F2B'] = '\\u5C38';\n  t['\\u2F2C'] = '\\u5C6E';\n  t['\\u2F2D'] = '\\u5C71';\n  t['\\u2F2E'] = '\\u5DDB';\n  t['\\u2F2F'] = '\\u5DE5';\n  t['\\u2F30'] = '\\u5DF1';\n  t['\\u2F31'] = '\\u5DFE';\n  t['\\u2F32'] = '\\u5E72';\n  t['\\u2F33'] = '\\u5E7A';\n  t['\\u2F34'] = '\\u5E7F';\n  t['\\u2F35'] = '\\u5EF4';\n  t['\\u2F36'] = '\\u5EFE';\n  t['\\u2F37'] = '\\u5F0B';\n  t['\\u2F38'] = '\\u5F13';\n  t['\\u2F39'] = '\\u5F50';\n  t['\\u2F3A'] = '\\u5F61';\n  t['\\u2F3B'] = '\\u5F73';\n  t['\\u2F3C'] = '\\u5FC3';\n  t['\\u2F3D'] = '\\u6208';\n  t['\\u2F3E'] = '\\u6236';\n  t['\\u2F3F'] = '\\u624B';\n  t['\\u2F40'] = '\\u652F';\n  t['\\u2F41'] = '\\u6534';\n  t['\\u2F42'] = '\\u6587';\n  t['\\u2F43'] = '\\u6597';\n  t['\\u2F44'] = '\\u65A4';\n  t['\\u2F45'] = '\\u65B9';\n  t['\\u2F46'] = '\\u65E0';\n  t['\\u2F47'] = '\\u65E5';\n  t['\\u2F48'] = '\\u66F0';\n  t['\\u2F49'] = '\\u6708';\n  t['\\u2F4A'] = '\\u6728';\n  t['\\u2F4B'] = '\\u6B20';\n  t['\\u2F4C'] = '\\u6B62';\n  t['\\u2F4D'] = '\\u6B79';\n  t['\\u2F4E'] = '\\u6BB3';\n  t['\\u2F4F'] = '\\u6BCB';\n  t['\\u2F50'] = '\\u6BD4';\n  t['\\u2F51'] = '\\u6BDB';\n  t['\\u2F52'] = '\\u6C0F';\n  t['\\u2F53'] = '\\u6C14';\n  t['\\u2F54'] = '\\u6C34';\n  t['\\u2F55'] = '\\u706B';\n  t['\\u2F56'] = '\\u722A';\n  t['\\u2F57'] = '\\u7236';\n  t['\\u2F58'] = '\\u723B';\n  t['\\u2F59'] = '\\u723F';\n  t['\\u2F5A'] = '\\u7247';\n  t['\\u2F5B'] = '\\u7259';\n  t['\\u2F5C'] = '\\u725B';\n  t['\\u2F5D'] = '\\u72AC';\n  t['\\u2F5E'] = '\\u7384';\n  t['\\u2F5F'] = '\\u7389';\n  t['\\u2F60'] = '\\u74DC';\n  t['\\u2F61'] = '\\u74E6';\n  t['\\u2F62'] = '\\u7518';\n  t['\\u2F63'] = '\\u751F';\n  t['\\u2F64'] = '\\u7528';\n  t['\\u2F65'] = '\\u7530';\n  t['\\u2F66'] = '\\u758B';\n  t['\\u2F67'] = '\\u7592';\n  t['\\u2F68'] = '\\u7676';\n  t['\\u2F69'] = '\\u767D';\n  t['\\u2F6A'] = '\\u76AE';\n  t['\\u2F6B'] = '\\u76BF';\n  t['\\u2F6C'] = '\\u76EE';\n  t['\\u2F6D'] = '\\u77DB';\n  t['\\u2F6E'] = '\\u77E2';\n  t['\\u2F6F'] = '\\u77F3';\n  t['\\u2F70'] = '\\u793A';\n  t['\\u2F71'] = '\\u79B8';\n  t['\\u2F72'] = '\\u79BE';\n  t['\\u2F73'] = '\\u7A74';\n  t['\\u2F74'] = '\\u7ACB';\n  t['\\u2F75'] = '\\u7AF9';\n  t['\\u2F76'] = '\\u7C73';\n  t['\\u2F77'] = '\\u7CF8';\n  t['\\u2F78'] = '\\u7F36';\n  t['\\u2F79'] = '\\u7F51';\n  t['\\u2F7A'] = '\\u7F8A';\n  t['\\u2F7B'] = '\\u7FBD';\n  t['\\u2F7C'] = '\\u8001';\n  t['\\u2F7D'] = '\\u800C';\n  t['\\u2F7E'] = '\\u8012';\n  t['\\u2F7F'] = '\\u8033';\n  t['\\u2F80'] = '\\u807F';\n  t['\\u2F81'] = '\\u8089';\n  t['\\u2F82'] = '\\u81E3';\n  t['\\u2F83'] = '\\u81EA';\n  t['\\u2F84'] = '\\u81F3';\n  t['\\u2F85'] = '\\u81FC';\n  t['\\u2F86'] = '\\u820C';\n  t['\\u2F87'] = '\\u821B';\n  t['\\u2F88'] = '\\u821F';\n  t['\\u2F89'] = '\\u826E';\n  t['\\u2F8A'] = '\\u8272';\n  t['\\u2F8B'] = '\\u8278';\n  t['\\u2F8C'] = '\\u864D';\n  t['\\u2F8D'] = '\\u866B';\n  t['\\u2F8E'] = '\\u8840';\n  t['\\u2F8F'] = '\\u884C';\n  t['\\u2F90'] = '\\u8863';\n  t['\\u2F91'] = '\\u897E';\n  t['\\u2F92'] = '\\u898B';\n  t['\\u2F93'] = '\\u89D2';\n  t['\\u2F94'] = '\\u8A00';\n  t['\\u2F95'] = '\\u8C37';\n  t['\\u2F96'] = '\\u8C46';\n  t['\\u2F97'] = '\\u8C55';\n  t['\\u2F98'] = '\\u8C78';\n  t['\\u2F99'] = '\\u8C9D';\n  t['\\u2F9A'] = '\\u8D64';\n  t['\\u2F9B'] = '\\u8D70';\n  t['\\u2F9C'] = '\\u8DB3';\n  t['\\u2F9D'] = '\\u8EAB';\n  t['\\u2F9E'] = '\\u8ECA';\n  t['\\u2F9F'] = '\\u8F9B';\n  t['\\u2FA0'] = '\\u8FB0';\n  t['\\u2FA1'] = '\\u8FB5';\n  t['\\u2FA2'] = '\\u9091';\n  t['\\u2FA3'] = '\\u9149';\n  t['\\u2FA4'] = '\\u91C6';\n  t['\\u2FA5'] = '\\u91CC';\n  t['\\u2FA6'] = '\\u91D1';\n  t['\\u2FA7'] = '\\u9577';\n  t['\\u2FA8'] = '\\u9580';\n  t['\\u2FA9'] = '\\u961C';\n  t['\\u2FAA'] = '\\u96B6';\n  t['\\u2FAB'] = '\\u96B9';\n  t['\\u2FAC'] = '\\u96E8';\n  t['\\u2FAD'] = '\\u9751';\n  t['\\u2FAE'] = '\\u975E';\n  t['\\u2FAF'] = '\\u9762';\n  t['\\u2FB0'] = '\\u9769';\n  t['\\u2FB1'] = '\\u97CB';\n  t['\\u2FB2'] = '\\u97ED';\n  t['\\u2FB3'] = '\\u97F3';\n  t['\\u2FB4'] = '\\u9801';\n  t['\\u2FB5'] = '\\u98A8';\n  t['\\u2FB6'] = '\\u98DB';\n  t['\\u2FB7'] = '\\u98DF';\n  t['\\u2FB8'] = '\\u9996';\n  t['\\u2FB9'] = '\\u9999';\n  t['\\u2FBA'] = '\\u99AC';\n  t['\\u2FBB'] = '\\u9AA8';\n  t['\\u2FBC'] = '\\u9AD8';\n  t['\\u2FBD'] = '\\u9ADF';\n  t['\\u2FBE'] = '\\u9B25';\n  t['\\u2FBF'] = '\\u9B2F';\n  t['\\u2FC0'] = '\\u9B32';\n  t['\\u2FC1'] = '\\u9B3C';\n  t['\\u2FC2'] = '\\u9B5A';\n  t['\\u2FC3'] = '\\u9CE5';\n  t['\\u2FC4'] = '\\u9E75';\n  t['\\u2FC5'] = '\\u9E7F';\n  t['\\u2FC6'] = '\\u9EA5';\n  t['\\u2FC7'] = '\\u9EBB';\n  t['\\u2FC8'] = '\\u9EC3';\n  t['\\u2FC9'] = '\\u9ECD';\n  t['\\u2FCA'] = '\\u9ED1';\n  t['\\u2FCB'] = '\\u9EF9';\n  t['\\u2FCC'] = '\\u9EFD';\n  t['\\u2FCD'] = '\\u9F0E';\n  t['\\u2FCE'] = '\\u9F13';\n  t['\\u2FCF'] = '\\u9F20';\n  t['\\u2FD0'] = '\\u9F3B';\n  t['\\u2FD1'] = '\\u9F4A';\n  t['\\u2FD2'] = '\\u9F52';\n  t['\\u2FD3'] = '\\u9F8D';\n  t['\\u2FD4'] = '\\u9F9C';\n  t['\\u2FD5'] = '\\u9FA0';\n  t['\\u3036'] = '\\u3012';\n  t['\\u3038'] = '\\u5341';\n  t['\\u3039'] = '\\u5344';\n  t['\\u303A'] = '\\u5345';\n  t['\\u309B'] = ' \\u3099';\n  t['\\u309C'] = ' \\u309A';\n  t['\\u3131'] = '\\u1100';\n  t['\\u3132'] = '\\u1101';\n  t['\\u3133'] = '\\u11AA';\n  t['\\u3134'] = '\\u1102';\n  t['\\u3135'] = '\\u11AC';\n  t['\\u3136'] = '\\u11AD';\n  t['\\u3137'] = '\\u1103';\n  t['\\u3138'] = '\\u1104';\n  t['\\u3139'] = '\\u1105';\n  t['\\u313A'] = '\\u11B0';\n  t['\\u313B'] = '\\u11B1';\n  t['\\u313C'] = '\\u11B2';\n  t['\\u313D'] = '\\u11B3';\n  t['\\u313E'] = '\\u11B4';\n  t['\\u313F'] = '\\u11B5';\n  t['\\u3140'] = '\\u111A';\n  t['\\u3141'] = '\\u1106';\n  t['\\u3142'] = '\\u1107';\n  t['\\u3143'] = '\\u1108';\n  t['\\u3144'] = '\\u1121';\n  t['\\u3145'] = '\\u1109';\n  t['\\u3146'] = '\\u110A';\n  t['\\u3147'] = '\\u110B';\n  t['\\u3148'] = '\\u110C';\n  t['\\u3149'] = '\\u110D';\n  t['\\u314A'] = '\\u110E';\n  t['\\u314B'] = '\\u110F';\n  t['\\u314C'] = '\\u1110';\n  t['\\u314D'] = '\\u1111';\n  t['\\u314E'] = '\\u1112';\n  t['\\u314F'] = '\\u1161';\n  t['\\u3150'] = '\\u1162';\n  t['\\u3151'] = '\\u1163';\n  t['\\u3152'] = '\\u1164';\n  t['\\u3153'] = '\\u1165';\n  t['\\u3154'] = '\\u1166';\n  t['\\u3155'] = '\\u1167';\n  t['\\u3156'] = '\\u1168';\n  t['\\u3157'] = '\\u1169';\n  t['\\u3158'] = '\\u116A';\n  t['\\u3159'] = '\\u116B';\n  t['\\u315A'] = '\\u116C';\n  t['\\u315B'] = '\\u116D';\n  t['\\u315C'] = '\\u116E';\n  t['\\u315D'] = '\\u116F';\n  t['\\u315E'] = '\\u1170';\n  t['\\u315F'] = '\\u1171';\n  t['\\u3160'] = '\\u1172';\n  t['\\u3161'] = '\\u1173';\n  t['\\u3162'] = '\\u1174';\n  t['\\u3163'] = '\\u1175';\n  t['\\u3164'] = '\\u1160';\n  t['\\u3165'] = '\\u1114';\n  t['\\u3166'] = '\\u1115';\n  t['\\u3167'] = '\\u11C7';\n  t['\\u3168'] = '\\u11C8';\n  t['\\u3169'] = '\\u11CC';\n  t['\\u316A'] = '\\u11CE';\n  t['\\u316B'] = '\\u11D3';\n  t['\\u316C'] = '\\u11D7';\n  t['\\u316D'] = '\\u11D9';\n  t['\\u316E'] = '\\u111C';\n  t['\\u316F'] = '\\u11DD';\n  t['\\u3170'] = '\\u11DF';\n  t['\\u3171'] = '\\u111D';\n  t['\\u3172'] = '\\u111E';\n  t['\\u3173'] = '\\u1120';\n  t['\\u3174'] = '\\u1122';\n  t['\\u3175'] = '\\u1123';\n  t['\\u3176'] = '\\u1127';\n  t['\\u3177'] = '\\u1129';\n  t['\\u3178'] = '\\u112B';\n  t['\\u3179'] = '\\u112C';\n  t['\\u317A'] = '\\u112D';\n  t['\\u317B'] = '\\u112E';\n  t['\\u317C'] = '\\u112F';\n  t['\\u317D'] = '\\u1132';\n  t['\\u317E'] = '\\u1136';\n  t['\\u317F'] = '\\u1140';\n  t['\\u3180'] = '\\u1147';\n  t['\\u3181'] = '\\u114C';\n  t['\\u3182'] = '\\u11F1';\n  t['\\u3183'] = '\\u11F2';\n  t['\\u3184'] = '\\u1157';\n  t['\\u3185'] = '\\u1158';\n  t['\\u3186'] = '\\u1159';\n  t['\\u3187'] = '\\u1184';\n  t['\\u3188'] = '\\u1185';\n  t['\\u3189'] = '\\u1188';\n  t['\\u318A'] = '\\u1191';\n  t['\\u318B'] = '\\u1192';\n  t['\\u318C'] = '\\u1194';\n  t['\\u318D'] = '\\u119E';\n  t['\\u318E'] = '\\u11A1';\n  t['\\u3200'] = '(\\u1100)';\n  t['\\u3201'] = '(\\u1102)';\n  t['\\u3202'] = '(\\u1103)';\n  t['\\u3203'] = '(\\u1105)';\n  t['\\u3204'] = '(\\u1106)';\n  t['\\u3205'] = '(\\u1107)';\n  t['\\u3206'] = '(\\u1109)';\n  t['\\u3207'] = '(\\u110B)';\n  t['\\u3208'] = '(\\u110C)';\n  t['\\u3209'] = '(\\u110E)';\n  t['\\u320A'] = '(\\u110F)';\n  t['\\u320B'] = '(\\u1110)';\n  t['\\u320C'] = '(\\u1111)';\n  t['\\u320D'] = '(\\u1112)';\n  t['\\u320E'] = '(\\u1100\\u1161)';\n  t['\\u320F'] = '(\\u1102\\u1161)';\n  t['\\u3210'] = '(\\u1103\\u1161)';\n  t['\\u3211'] = '(\\u1105\\u1161)';\n  t['\\u3212'] = '(\\u1106\\u1161)';\n  t['\\u3213'] = '(\\u1107\\u1161)';\n  t['\\u3214'] = '(\\u1109\\u1161)';\n  t['\\u3215'] = '(\\u110B\\u1161)';\n  t['\\u3216'] = '(\\u110C\\u1161)';\n  t['\\u3217'] = '(\\u110E\\u1161)';\n  t['\\u3218'] = '(\\u110F\\u1161)';\n  t['\\u3219'] = '(\\u1110\\u1161)';\n  t['\\u321A'] = '(\\u1111\\u1161)';\n  t['\\u321B'] = '(\\u1112\\u1161)';\n  t['\\u321C'] = '(\\u110C\\u116E)';\n  t['\\u321D'] = '(\\u110B\\u1169\\u110C\\u1165\\u11AB)';\n  t['\\u321E'] = '(\\u110B\\u1169\\u1112\\u116E)';\n  t['\\u3220'] = '(\\u4E00)';\n  t['\\u3221'] = '(\\u4E8C)';\n  t['\\u3222'] = '(\\u4E09)';\n  t['\\u3223'] = '(\\u56DB)';\n  t['\\u3224'] = '(\\u4E94)';\n  t['\\u3225'] = '(\\u516D)';\n  t['\\u3226'] = '(\\u4E03)';\n  t['\\u3227'] = '(\\u516B)';\n  t['\\u3228'] = '(\\u4E5D)';\n  t['\\u3229'] = '(\\u5341)';\n  t['\\u322A'] = '(\\u6708)';\n  t['\\u322B'] = '(\\u706B)';\n  t['\\u322C'] = '(\\u6C34)';\n  t['\\u322D'] = '(\\u6728)';\n  t['\\u322E'] = '(\\u91D1)';\n  t['\\u322F'] = '(\\u571F)';\n  t['\\u3230'] = '(\\u65E5)';\n  t['\\u3231'] = '(\\u682A)';\n  t['\\u3232'] = '(\\u6709)';\n  t['\\u3233'] = '(\\u793E)';\n  t['\\u3234'] = '(\\u540D)';\n  t['\\u3235'] = '(\\u7279)';\n  t['\\u3236'] = '(\\u8CA1)';\n  t['\\u3237'] = '(\\u795D)';\n  t['\\u3238'] = '(\\u52B4)';\n  t['\\u3239'] = '(\\u4EE3)';\n  t['\\u323A'] = '(\\u547C)';\n  t['\\u323B'] = '(\\u5B66)';\n  t['\\u323C'] = '(\\u76E3)';\n  t['\\u323D'] = '(\\u4F01)';\n  t['\\u323E'] = '(\\u8CC7)';\n  t['\\u323F'] = '(\\u5354)';\n  t['\\u3240'] = '(\\u796D)';\n  t['\\u3241'] = '(\\u4F11)';\n  t['\\u3242'] = '(\\u81EA)';\n  t['\\u3243'] = '(\\u81F3)';\n  t['\\u32C0'] = '1\\u6708';\n  t['\\u32C1'] = '2\\u6708';\n  t['\\u32C2'] = '3\\u6708';\n  t['\\u32C3'] = '4\\u6708';\n  t['\\u32C4'] = '5\\u6708';\n  t['\\u32C5'] = '6\\u6708';\n  t['\\u32C6'] = '7\\u6708';\n  t['\\u32C7'] = '8\\u6708';\n  t['\\u32C8'] = '9\\u6708';\n  t['\\u32C9'] = '10\\u6708';\n  t['\\u32CA'] = '11\\u6708';\n  t['\\u32CB'] = '12\\u6708';\n  t['\\u3358'] = '0\\u70B9';\n  t['\\u3359'] = '1\\u70B9';\n  t['\\u335A'] = '2\\u70B9';\n  t['\\u335B'] = '3\\u70B9';\n  t['\\u335C'] = '4\\u70B9';\n  t['\\u335D'] = '5\\u70B9';\n  t['\\u335E'] = '6\\u70B9';\n  t['\\u335F'] = '7\\u70B9';\n  t['\\u3360'] = '8\\u70B9';\n  t['\\u3361'] = '9\\u70B9';\n  t['\\u3362'] = '10\\u70B9';\n  t['\\u3363'] = '11\\u70B9';\n  t['\\u3364'] = '12\\u70B9';\n  t['\\u3365'] = '13\\u70B9';\n  t['\\u3366'] = '14\\u70B9';\n  t['\\u3367'] = '15\\u70B9';\n  t['\\u3368'] = '16\\u70B9';\n  t['\\u3369'] = '17\\u70B9';\n  t['\\u336A'] = '18\\u70B9';\n  t['\\u336B'] = '19\\u70B9';\n  t['\\u336C'] = '20\\u70B9';\n  t['\\u336D'] = '21\\u70B9';\n  t['\\u336E'] = '22\\u70B9';\n  t['\\u336F'] = '23\\u70B9';\n  t['\\u3370'] = '24\\u70B9';\n  t['\\u33E0'] = '1\\u65E5';\n  t['\\u33E1'] = '2\\u65E5';\n  t['\\u33E2'] = '3\\u65E5';\n  t['\\u33E3'] = '4\\u65E5';\n  t['\\u33E4'] = '5\\u65E5';\n  t['\\u33E5'] = '6\\u65E5';\n  t['\\u33E6'] = '7\\u65E5';\n  t['\\u33E7'] = '8\\u65E5';\n  t['\\u33E8'] = '9\\u65E5';\n  t['\\u33E9'] = '10\\u65E5';\n  t['\\u33EA'] = '11\\u65E5';\n  t['\\u33EB'] = '12\\u65E5';\n  t['\\u33EC'] = '13\\u65E5';\n  t['\\u33ED'] = '14\\u65E5';\n  t['\\u33EE'] = '15\\u65E5';\n  t['\\u33EF'] = '16\\u65E5';\n  t['\\u33F0'] = '17\\u65E5';\n  t['\\u33F1'] = '18\\u65E5';\n  t['\\u33F2'] = '19\\u65E5';\n  t['\\u33F3'] = '20\\u65E5';\n  t['\\u33F4'] = '21\\u65E5';\n  t['\\u33F5'] = '22\\u65E5';\n  t['\\u33F6'] = '23\\u65E5';\n  t['\\u33F7'] = '24\\u65E5';\n  t['\\u33F8'] = '25\\u65E5';\n  t['\\u33F9'] = '26\\u65E5';\n  t['\\u33FA'] = '27\\u65E5';\n  t['\\u33FB'] = '28\\u65E5';\n  t['\\u33FC'] = '29\\u65E5';\n  t['\\u33FD'] = '30\\u65E5';\n  t['\\u33FE'] = '31\\u65E5';\n  t['\\uFB00'] = 'ff';\n  t['\\uFB01'] = 'fi';\n  t['\\uFB02'] = 'fl';\n  t['\\uFB03'] = 'ffi';\n  t['\\uFB04'] = 'ffl';\n  t['\\uFB05'] = '\\u017Ft';\n  t['\\uFB06'] = 'st';\n  t['\\uFB13'] = '\\u0574\\u0576';\n  t['\\uFB14'] = '\\u0574\\u0565';\n  t['\\uFB15'] = '\\u0574\\u056B';\n  t['\\uFB16'] = '\\u057E\\u0576';\n  t['\\uFB17'] = '\\u0574\\u056D';\n  t['\\uFB4F'] = '\\u05D0\\u05DC';\n  t['\\uFB50'] = '\\u0671';\n  t['\\uFB51'] = '\\u0671';\n  t['\\uFB52'] = '\\u067B';\n  t['\\uFB53'] = '\\u067B';\n  t['\\uFB54'] = '\\u067B';\n  t['\\uFB55'] = '\\u067B';\n  t['\\uFB56'] = '\\u067E';\n  t['\\uFB57'] = '\\u067E';\n  t['\\uFB58'] = '\\u067E';\n  t['\\uFB59'] = '\\u067E';\n  t['\\uFB5A'] = '\\u0680';\n  t['\\uFB5B'] = '\\u0680';\n  t['\\uFB5C'] = '\\u0680';\n  t['\\uFB5D'] = '\\u0680';\n  t['\\uFB5E'] = '\\u067A';\n  t['\\uFB5F'] = '\\u067A';\n  t['\\uFB60'] = '\\u067A';\n  t['\\uFB61'] = '\\u067A';\n  t['\\uFB62'] = '\\u067F';\n  t['\\uFB63'] = '\\u067F';\n  t['\\uFB64'] = '\\u067F';\n  t['\\uFB65'] = '\\u067F';\n  t['\\uFB66'] = '\\u0679';\n  t['\\uFB67'] = '\\u0679';\n  t['\\uFB68'] = '\\u0679';\n  t['\\uFB69'] = '\\u0679';\n  t['\\uFB6A'] = '\\u06A4';\n  t['\\uFB6B'] = '\\u06A4';\n  t['\\uFB6C'] = '\\u06A4';\n  t['\\uFB6D'] = '\\u06A4';\n  t['\\uFB6E'] = '\\u06A6';\n  t['\\uFB6F'] = '\\u06A6';\n  t['\\uFB70'] = '\\u06A6';\n  t['\\uFB71'] = '\\u06A6';\n  t['\\uFB72'] = '\\u0684';\n  t['\\uFB73'] = '\\u0684';\n  t['\\uFB74'] = '\\u0684';\n  t['\\uFB75'] = '\\u0684';\n  t['\\uFB76'] = '\\u0683';\n  t['\\uFB77'] = '\\u0683';\n  t['\\uFB78'] = '\\u0683';\n  t['\\uFB79'] = '\\u0683';\n  t['\\uFB7A'] = '\\u0686';\n  t['\\uFB7B'] = '\\u0686';\n  t['\\uFB7C'] = '\\u0686';\n  t['\\uFB7D'] = '\\u0686';\n  t['\\uFB7E'] = '\\u0687';\n  t['\\uFB7F'] = '\\u0687';\n  t['\\uFB80'] = '\\u0687';\n  t['\\uFB81'] = '\\u0687';\n  t['\\uFB82'] = '\\u068D';\n  t['\\uFB83'] = '\\u068D';\n  t['\\uFB84'] = '\\u068C';\n  t['\\uFB85'] = '\\u068C';\n  t['\\uFB86'] = '\\u068E';\n  t['\\uFB87'] = '\\u068E';\n  t['\\uFB88'] = '\\u0688';\n  t['\\uFB89'] = '\\u0688';\n  t['\\uFB8A'] = '\\u0698';\n  t['\\uFB8B'] = '\\u0698';\n  t['\\uFB8C'] = '\\u0691';\n  t['\\uFB8D'] = '\\u0691';\n  t['\\uFB8E'] = '\\u06A9';\n  t['\\uFB8F'] = '\\u06A9';\n  t['\\uFB90'] = '\\u06A9';\n  t['\\uFB91'] = '\\u06A9';\n  t['\\uFB92'] = '\\u06AF';\n  t['\\uFB93'] = '\\u06AF';\n  t['\\uFB94'] = '\\u06AF';\n  t['\\uFB95'] = '\\u06AF';\n  t['\\uFB96'] = '\\u06B3';\n  t['\\uFB97'] = '\\u06B3';\n  t['\\uFB98'] = '\\u06B3';\n  t['\\uFB99'] = '\\u06B3';\n  t['\\uFB9A'] = '\\u06B1';\n  t['\\uFB9B'] = '\\u06B1';\n  t['\\uFB9C'] = '\\u06B1';\n  t['\\uFB9D'] = '\\u06B1';\n  t['\\uFB9E'] = '\\u06BA';\n  t['\\uFB9F'] = '\\u06BA';\n  t['\\uFBA0'] = '\\u06BB';\n  t['\\uFBA1'] = '\\u06BB';\n  t['\\uFBA2'] = '\\u06BB';\n  t['\\uFBA3'] = '\\u06BB';\n  t['\\uFBA4'] = '\\u06C0';\n  t['\\uFBA5'] = '\\u06C0';\n  t['\\uFBA6'] = '\\u06C1';\n  t['\\uFBA7'] = '\\u06C1';\n  t['\\uFBA8'] = '\\u06C1';\n  t['\\uFBA9'] = '\\u06C1';\n  t['\\uFBAA'] = '\\u06BE';\n  t['\\uFBAB'] = '\\u06BE';\n  t['\\uFBAC'] = '\\u06BE';\n  t['\\uFBAD'] = '\\u06BE';\n  t['\\uFBAE'] = '\\u06D2';\n  t['\\uFBAF'] = '\\u06D2';\n  t['\\uFBB0'] = '\\u06D3';\n  t['\\uFBB1'] = '\\u06D3';\n  t['\\uFBD3'] = '\\u06AD';\n  t['\\uFBD4'] = '\\u06AD';\n  t['\\uFBD5'] = '\\u06AD';\n  t['\\uFBD6'] = '\\u06AD';\n  t['\\uFBD7'] = '\\u06C7';\n  t['\\uFBD8'] = '\\u06C7';\n  t['\\uFBD9'] = '\\u06C6';\n  t['\\uFBDA'] = '\\u06C6';\n  t['\\uFBDB'] = '\\u06C8';\n  t['\\uFBDC'] = '\\u06C8';\n  t['\\uFBDD'] = '\\u0677';\n  t['\\uFBDE'] = '\\u06CB';\n  t['\\uFBDF'] = '\\u06CB';\n  t['\\uFBE0'] = '\\u06C5';\n  t['\\uFBE1'] = '\\u06C5';\n  t['\\uFBE2'] = '\\u06C9';\n  t['\\uFBE3'] = '\\u06C9';\n  t['\\uFBE4'] = '\\u06D0';\n  t['\\uFBE5'] = '\\u06D0';\n  t['\\uFBE6'] = '\\u06D0';\n  t['\\uFBE7'] = '\\u06D0';\n  t['\\uFBE8'] = '\\u0649';\n  t['\\uFBE9'] = '\\u0649';\n  t['\\uFBEA'] = '\\u0626\\u0627';\n  t['\\uFBEB'] = '\\u0626\\u0627';\n  t['\\uFBEC'] = '\\u0626\\u06D5';\n  t['\\uFBED'] = '\\u0626\\u06D5';\n  t['\\uFBEE'] = '\\u0626\\u0648';\n  t['\\uFBEF'] = '\\u0626\\u0648';\n  t['\\uFBF0'] = '\\u0626\\u06C7';\n  t['\\uFBF1'] = '\\u0626\\u06C7';\n  t['\\uFBF2'] = '\\u0626\\u06C6';\n  t['\\uFBF3'] = '\\u0626\\u06C6';\n  t['\\uFBF4'] = '\\u0626\\u06C8';\n  t['\\uFBF5'] = '\\u0626\\u06C8';\n  t['\\uFBF6'] = '\\u0626\\u06D0';\n  t['\\uFBF7'] = '\\u0626\\u06D0';\n  t['\\uFBF8'] = '\\u0626\\u06D0';\n  t['\\uFBF9'] = '\\u0626\\u0649';\n  t['\\uFBFA'] = '\\u0626\\u0649';\n  t['\\uFBFB'] = '\\u0626\\u0649';\n  t['\\uFBFC'] = '\\u06CC';\n  t['\\uFBFD'] = '\\u06CC';\n  t['\\uFBFE'] = '\\u06CC';\n  t['\\uFBFF'] = '\\u06CC';\n  t['\\uFC00'] = '\\u0626\\u062C';\n  t['\\uFC01'] = '\\u0626\\u062D';\n  t['\\uFC02'] = '\\u0626\\u0645';\n  t['\\uFC03'] = '\\u0626\\u0649';\n  t['\\uFC04'] = '\\u0626\\u064A';\n  t['\\uFC05'] = '\\u0628\\u062C';\n  t['\\uFC06'] = '\\u0628\\u062D';\n  t['\\uFC07'] = '\\u0628\\u062E';\n  t['\\uFC08'] = '\\u0628\\u0645';\n  t['\\uFC09'] = '\\u0628\\u0649';\n  t['\\uFC0A'] = '\\u0628\\u064A';\n  t['\\uFC0B'] = '\\u062A\\u062C';\n  t['\\uFC0C'] = '\\u062A\\u062D';\n  t['\\uFC0D'] = '\\u062A\\u062E';\n  t['\\uFC0E'] = '\\u062A\\u0645';\n  t['\\uFC0F'] = '\\u062A\\u0649';\n  t['\\uFC10'] = '\\u062A\\u064A';\n  t['\\uFC11'] = '\\u062B\\u062C';\n  t['\\uFC12'] = '\\u062B\\u0645';\n  t['\\uFC13'] = '\\u062B\\u0649';\n  t['\\uFC14'] = '\\u062B\\u064A';\n  t['\\uFC15'] = '\\u062C\\u062D';\n  t['\\uFC16'] = '\\u062C\\u0645';\n  t['\\uFC17'] = '\\u062D\\u062C';\n  t['\\uFC18'] = '\\u062D\\u0645';\n  t['\\uFC19'] = '\\u062E\\u062C';\n  t['\\uFC1A'] = '\\u062E\\u062D';\n  t['\\uFC1B'] = '\\u062E\\u0645';\n  t['\\uFC1C'] = '\\u0633\\u062C';\n  t['\\uFC1D'] = '\\u0633\\u062D';\n  t['\\uFC1E'] = '\\u0633\\u062E';\n  t['\\uFC1F'] = '\\u0633\\u0645';\n  t['\\uFC20'] = '\\u0635\\u062D';\n  t['\\uFC21'] = '\\u0635\\u0645';\n  t['\\uFC22'] = '\\u0636\\u062C';\n  t['\\uFC23'] = '\\u0636\\u062D';\n  t['\\uFC24'] = '\\u0636\\u062E';\n  t['\\uFC25'] = '\\u0636\\u0645';\n  t['\\uFC26'] = '\\u0637\\u062D';\n  t['\\uFC27'] = '\\u0637\\u0645';\n  t['\\uFC28'] = '\\u0638\\u0645';\n  t['\\uFC29'] = '\\u0639\\u062C';\n  t['\\uFC2A'] = '\\u0639\\u0645';\n  t['\\uFC2B'] = '\\u063A\\u062C';\n  t['\\uFC2C'] = '\\u063A\\u0645';\n  t['\\uFC2D'] = '\\u0641\\u062C';\n  t['\\uFC2E'] = '\\u0641\\u062D';\n  t['\\uFC2F'] = '\\u0641\\u062E';\n  t['\\uFC30'] = '\\u0641\\u0645';\n  t['\\uFC31'] = '\\u0641\\u0649';\n  t['\\uFC32'] = '\\u0641\\u064A';\n  t['\\uFC33'] = '\\u0642\\u062D';\n  t['\\uFC34'] = '\\u0642\\u0645';\n  t['\\uFC35'] = '\\u0642\\u0649';\n  t['\\uFC36'] = '\\u0642\\u064A';\n  t['\\uFC37'] = '\\u0643\\u0627';\n  t['\\uFC38'] = '\\u0643\\u062C';\n  t['\\uFC39'] = '\\u0643\\u062D';\n  t['\\uFC3A'] = '\\u0643\\u062E';\n  t['\\uFC3B'] = '\\u0643\\u0644';\n  t['\\uFC3C'] = '\\u0643\\u0645';\n  t['\\uFC3D'] = '\\u0643\\u0649';\n  t['\\uFC3E'] = '\\u0643\\u064A';\n  t['\\uFC3F'] = '\\u0644\\u062C';\n  t['\\uFC40'] = '\\u0644\\u062D';\n  t['\\uFC41'] = '\\u0644\\u062E';\n  t['\\uFC42'] = '\\u0644\\u0645';\n  t['\\uFC43'] = '\\u0644\\u0649';\n  t['\\uFC44'] = '\\u0644\\u064A';\n  t['\\uFC45'] = '\\u0645\\u062C';\n  t['\\uFC46'] = '\\u0645\\u062D';\n  t['\\uFC47'] = '\\u0645\\u062E';\n  t['\\uFC48'] = '\\u0645\\u0645';\n  t['\\uFC49'] = '\\u0645\\u0649';\n  t['\\uFC4A'] = '\\u0645\\u064A';\n  t['\\uFC4B'] = '\\u0646\\u062C';\n  t['\\uFC4C'] = '\\u0646\\u062D';\n  t['\\uFC4D'] = '\\u0646\\u062E';\n  t['\\uFC4E'] = '\\u0646\\u0645';\n  t['\\uFC4F'] = '\\u0646\\u0649';\n  t['\\uFC50'] = '\\u0646\\u064A';\n  t['\\uFC51'] = '\\u0647\\u062C';\n  t['\\uFC52'] = '\\u0647\\u0645';\n  t['\\uFC53'] = '\\u0647\\u0649';\n  t['\\uFC54'] = '\\u0647\\u064A';\n  t['\\uFC55'] = '\\u064A\\u062C';\n  t['\\uFC56'] = '\\u064A\\u062D';\n  t['\\uFC57'] = '\\u064A\\u062E';\n  t['\\uFC58'] = '\\u064A\\u0645';\n  t['\\uFC59'] = '\\u064A\\u0649';\n  t['\\uFC5A'] = '\\u064A\\u064A';\n  t['\\uFC5B'] = '\\u0630\\u0670';\n  t['\\uFC5C'] = '\\u0631\\u0670';\n  t['\\uFC5D'] = '\\u0649\\u0670';\n  t['\\uFC5E'] = ' \\u064C\\u0651';\n  t['\\uFC5F'] = ' \\u064D\\u0651';\n  t['\\uFC60'] = ' \\u064E\\u0651';\n  t['\\uFC61'] = ' \\u064F\\u0651';\n  t['\\uFC62'] = ' \\u0650\\u0651';\n  t['\\uFC63'] = ' \\u0651\\u0670';\n  t['\\uFC64'] = '\\u0626\\u0631';\n  t['\\uFC65'] = '\\u0626\\u0632';\n  t['\\uFC66'] = '\\u0626\\u0645';\n  t['\\uFC67'] = '\\u0626\\u0646';\n  t['\\uFC68'] = '\\u0626\\u0649';\n  t['\\uFC69'] = '\\u0626\\u064A';\n  t['\\uFC6A'] = '\\u0628\\u0631';\n  t['\\uFC6B'] = '\\u0628\\u0632';\n  t['\\uFC6C'] = '\\u0628\\u0645';\n  t['\\uFC6D'] = '\\u0628\\u0646';\n  t['\\uFC6E'] = '\\u0628\\u0649';\n  t['\\uFC6F'] = '\\u0628\\u064A';\n  t['\\uFC70'] = '\\u062A\\u0631';\n  t['\\uFC71'] = '\\u062A\\u0632';\n  t['\\uFC72'] = '\\u062A\\u0645';\n  t['\\uFC73'] = '\\u062A\\u0646';\n  t['\\uFC74'] = '\\u062A\\u0649';\n  t['\\uFC75'] = '\\u062A\\u064A';\n  t['\\uFC76'] = '\\u062B\\u0631';\n  t['\\uFC77'] = '\\u062B\\u0632';\n  t['\\uFC78'] = '\\u062B\\u0645';\n  t['\\uFC79'] = '\\u062B\\u0646';\n  t['\\uFC7A'] = '\\u062B\\u0649';\n  t['\\uFC7B'] = '\\u062B\\u064A';\n  t['\\uFC7C'] = '\\u0641\\u0649';\n  t['\\uFC7D'] = '\\u0641\\u064A';\n  t['\\uFC7E'] = '\\u0642\\u0649';\n  t['\\uFC7F'] = '\\u0642\\u064A';\n  t['\\uFC80'] = '\\u0643\\u0627';\n  t['\\uFC81'] = '\\u0643\\u0644';\n  t['\\uFC82'] = '\\u0643\\u0645';\n  t['\\uFC83'] = '\\u0643\\u0649';\n  t['\\uFC84'] = '\\u0643\\u064A';\n  t['\\uFC85'] = '\\u0644\\u0645';\n  t['\\uFC86'] = '\\u0644\\u0649';\n  t['\\uFC87'] = '\\u0644\\u064A';\n  t['\\uFC88'] = '\\u0645\\u0627';\n  t['\\uFC89'] = '\\u0645\\u0645';\n  t['\\uFC8A'] = '\\u0646\\u0631';\n  t['\\uFC8B'] = '\\u0646\\u0632';\n  t['\\uFC8C'] = '\\u0646\\u0645';\n  t['\\uFC8D'] = '\\u0646\\u0646';\n  t['\\uFC8E'] = '\\u0646\\u0649';\n  t['\\uFC8F'] = '\\u0646\\u064A';\n  t['\\uFC90'] = '\\u0649\\u0670';\n  t['\\uFC91'] = '\\u064A\\u0631';\n  t['\\uFC92'] = '\\u064A\\u0632';\n  t['\\uFC93'] = '\\u064A\\u0645';\n  t['\\uFC94'] = '\\u064A\\u0646';\n  t['\\uFC95'] = '\\u064A\\u0649';\n  t['\\uFC96'] = '\\u064A\\u064A';\n  t['\\uFC97'] = '\\u0626\\u062C';\n  t['\\uFC98'] = '\\u0626\\u062D';\n  t['\\uFC99'] = '\\u0626\\u062E';\n  t['\\uFC9A'] = '\\u0626\\u0645';\n  t['\\uFC9B'] = '\\u0626\\u0647';\n  t['\\uFC9C'] = '\\u0628\\u062C';\n  t['\\uFC9D'] = '\\u0628\\u062D';\n  t['\\uFC9E'] = '\\u0628\\u062E';\n  t['\\uFC9F'] = '\\u0628\\u0645';\n  t['\\uFCA0'] = '\\u0628\\u0647';\n  t['\\uFCA1'] = '\\u062A\\u062C';\n  t['\\uFCA2'] = '\\u062A\\u062D';\n  t['\\uFCA3'] = '\\u062A\\u062E';\n  t['\\uFCA4'] = '\\u062A\\u0645';\n  t['\\uFCA5'] = '\\u062A\\u0647';\n  t['\\uFCA6'] = '\\u062B\\u0645';\n  t['\\uFCA7'] = '\\u062C\\u062D';\n  t['\\uFCA8'] = '\\u062C\\u0645';\n  t['\\uFCA9'] = '\\u062D\\u062C';\n  t['\\uFCAA'] = '\\u062D\\u0645';\n  t['\\uFCAB'] = '\\u062E\\u062C';\n  t['\\uFCAC'] = '\\u062E\\u0645';\n  t['\\uFCAD'] = '\\u0633\\u062C';\n  t['\\uFCAE'] = '\\u0633\\u062D';\n  t['\\uFCAF'] = '\\u0633\\u062E';\n  t['\\uFCB0'] = '\\u0633\\u0645';\n  t['\\uFCB1'] = '\\u0635\\u062D';\n  t['\\uFCB2'] = '\\u0635\\u062E';\n  t['\\uFCB3'] = '\\u0635\\u0645';\n  t['\\uFCB4'] = '\\u0636\\u062C';\n  t['\\uFCB5'] = '\\u0636\\u062D';\n  t['\\uFCB6'] = '\\u0636\\u062E';\n  t['\\uFCB7'] = '\\u0636\\u0645';\n  t['\\uFCB8'] = '\\u0637\\u062D';\n  t['\\uFCB9'] = '\\u0638\\u0645';\n  t['\\uFCBA'] = '\\u0639\\u062C';\n  t['\\uFCBB'] = '\\u0639\\u0645';\n  t['\\uFCBC'] = '\\u063A\\u062C';\n  t['\\uFCBD'] = '\\u063A\\u0645';\n  t['\\uFCBE'] = '\\u0641\\u062C';\n  t['\\uFCBF'] = '\\u0641\\u062D';\n  t['\\uFCC0'] = '\\u0641\\u062E';\n  t['\\uFCC1'] = '\\u0641\\u0645';\n  t['\\uFCC2'] = '\\u0642\\u062D';\n  t['\\uFCC3'] = '\\u0642\\u0645';\n  t['\\uFCC4'] = '\\u0643\\u062C';\n  t['\\uFCC5'] = '\\u0643\\u062D';\n  t['\\uFCC6'] = '\\u0643\\u062E';\n  t['\\uFCC7'] = '\\u0643\\u0644';\n  t['\\uFCC8'] = '\\u0643\\u0645';\n  t['\\uFCC9'] = '\\u0644\\u062C';\n  t['\\uFCCA'] = '\\u0644\\u062D';\n  t['\\uFCCB'] = '\\u0644\\u062E';\n  t['\\uFCCC'] = '\\u0644\\u0645';\n  t['\\uFCCD'] = '\\u0644\\u0647';\n  t['\\uFCCE'] = '\\u0645\\u062C';\n  t['\\uFCCF'] = '\\u0645\\u062D';\n  t['\\uFCD0'] = '\\u0645\\u062E';\n  t['\\uFCD1'] = '\\u0645\\u0645';\n  t['\\uFCD2'] = '\\u0646\\u062C';\n  t['\\uFCD3'] = '\\u0646\\u062D';\n  t['\\uFCD4'] = '\\u0646\\u062E';\n  t['\\uFCD5'] = '\\u0646\\u0645';\n  t['\\uFCD6'] = '\\u0646\\u0647';\n  t['\\uFCD7'] = '\\u0647\\u062C';\n  t['\\uFCD8'] = '\\u0647\\u0645';\n  t['\\uFCD9'] = '\\u0647\\u0670';\n  t['\\uFCDA'] = '\\u064A\\u062C';\n  t['\\uFCDB'] = '\\u064A\\u062D';\n  t['\\uFCDC'] = '\\u064A\\u062E';\n  t['\\uFCDD'] = '\\u064A\\u0645';\n  t['\\uFCDE'] = '\\u064A\\u0647';\n  t['\\uFCDF'] = '\\u0626\\u0645';\n  t['\\uFCE0'] = '\\u0626\\u0647';\n  t['\\uFCE1'] = '\\u0628\\u0645';\n  t['\\uFCE2'] = '\\u0628\\u0647';\n  t['\\uFCE3'] = '\\u062A\\u0645';\n  t['\\uFCE4'] = '\\u062A\\u0647';\n  t['\\uFCE5'] = '\\u062B\\u0645';\n  t['\\uFCE6'] = '\\u062B\\u0647';\n  t['\\uFCE7'] = '\\u0633\\u0645';\n  t['\\uFCE8'] = '\\u0633\\u0647';\n  t['\\uFCE9'] = '\\u0634\\u0645';\n  t['\\uFCEA'] = '\\u0634\\u0647';\n  t['\\uFCEB'] = '\\u0643\\u0644';\n  t['\\uFCEC'] = '\\u0643\\u0645';\n  t['\\uFCED'] = '\\u0644\\u0645';\n  t['\\uFCEE'] = '\\u0646\\u0645';\n  t['\\uFCEF'] = '\\u0646\\u0647';\n  t['\\uFCF0'] = '\\u064A\\u0645';\n  t['\\uFCF1'] = '\\u064A\\u0647';\n  t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n  t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n  t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n  t['\\uFCF5'] = '\\u0637\\u0649';\n  t['\\uFCF6'] = '\\u0637\\u064A';\n  t['\\uFCF7'] = '\\u0639\\u0649';\n  t['\\uFCF8'] = '\\u0639\\u064A';\n  t['\\uFCF9'] = '\\u063A\\u0649';\n  t['\\uFCFA'] = '\\u063A\\u064A';\n  t['\\uFCFB'] = '\\u0633\\u0649';\n  t['\\uFCFC'] = '\\u0633\\u064A';\n  t['\\uFCFD'] = '\\u0634\\u0649';\n  t['\\uFCFE'] = '\\u0634\\u064A';\n  t['\\uFCFF'] = '\\u062D\\u0649';\n  t['\\uFD00'] = '\\u062D\\u064A';\n  t['\\uFD01'] = '\\u062C\\u0649';\n  t['\\uFD02'] = '\\u062C\\u064A';\n  t['\\uFD03'] = '\\u062E\\u0649';\n  t['\\uFD04'] = '\\u062E\\u064A';\n  t['\\uFD05'] = '\\u0635\\u0649';\n  t['\\uFD06'] = '\\u0635\\u064A';\n  t['\\uFD07'] = '\\u0636\\u0649';\n  t['\\uFD08'] = '\\u0636\\u064A';\n  t['\\uFD09'] = '\\u0634\\u062C';\n  t['\\uFD0A'] = '\\u0634\\u062D';\n  t['\\uFD0B'] = '\\u0634\\u062E';\n  t['\\uFD0C'] = '\\u0634\\u0645';\n  t['\\uFD0D'] = '\\u0634\\u0631';\n  t['\\uFD0E'] = '\\u0633\\u0631';\n  t['\\uFD0F'] = '\\u0635\\u0631';\n  t['\\uFD10'] = '\\u0636\\u0631';\n  t['\\uFD11'] = '\\u0637\\u0649';\n  t['\\uFD12'] = '\\u0637\\u064A';\n  t['\\uFD13'] = '\\u0639\\u0649';\n  t['\\uFD14'] = '\\u0639\\u064A';\n  t['\\uFD15'] = '\\u063A\\u0649';\n  t['\\uFD16'] = '\\u063A\\u064A';\n  t['\\uFD17'] = '\\u0633\\u0649';\n  t['\\uFD18'] = '\\u0633\\u064A';\n  t['\\uFD19'] = '\\u0634\\u0649';\n  t['\\uFD1A'] = '\\u0634\\u064A';\n  t['\\uFD1B'] = '\\u062D\\u0649';\n  t['\\uFD1C'] = '\\u062D\\u064A';\n  t['\\uFD1D'] = '\\u062C\\u0649';\n  t['\\uFD1E'] = '\\u062C\\u064A';\n  t['\\uFD1F'] = '\\u062E\\u0649';\n  t['\\uFD20'] = '\\u062E\\u064A';\n  t['\\uFD21'] = '\\u0635\\u0649';\n  t['\\uFD22'] = '\\u0635\\u064A';\n  t['\\uFD23'] = '\\u0636\\u0649';\n  t['\\uFD24'] = '\\u0636\\u064A';\n  t['\\uFD25'] = '\\u0634\\u062C';\n  t['\\uFD26'] = '\\u0634\\u062D';\n  t['\\uFD27'] = '\\u0634\\u062E';\n  t['\\uFD28'] = '\\u0634\\u0645';\n  t['\\uFD29'] = '\\u0634\\u0631';\n  t['\\uFD2A'] = '\\u0633\\u0631';\n  t['\\uFD2B'] = '\\u0635\\u0631';\n  t['\\uFD2C'] = '\\u0636\\u0631';\n  t['\\uFD2D'] = '\\u0634\\u062C';\n  t['\\uFD2E'] = '\\u0634\\u062D';\n  t['\\uFD2F'] = '\\u0634\\u062E';\n  t['\\uFD30'] = '\\u0634\\u0645';\n  t['\\uFD31'] = '\\u0633\\u0647';\n  t['\\uFD32'] = '\\u0634\\u0647';\n  t['\\uFD33'] = '\\u0637\\u0645';\n  t['\\uFD34'] = '\\u0633\\u062C';\n  t['\\uFD35'] = '\\u0633\\u062D';\n  t['\\uFD36'] = '\\u0633\\u062E';\n  t['\\uFD37'] = '\\u0634\\u062C';\n  t['\\uFD38'] = '\\u0634\\u062D';\n  t['\\uFD39'] = '\\u0634\\u062E';\n  t['\\uFD3A'] = '\\u0637\\u0645';\n  t['\\uFD3B'] = '\\u0638\\u0645';\n  t['\\uFD3C'] = '\\u0627\\u064B';\n  t['\\uFD3D'] = '\\u0627\\u064B';\n  t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n  t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n  t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n  t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n  t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n  t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n  t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n  t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n  t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n  t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n  t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n  t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n  t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n  t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n  t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n  t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n  t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n  t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n  t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n  t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n  t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n  t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n  t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n  t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n  t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n  t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n  t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n  t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n  t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n  t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n  t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n  t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n  t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n  t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n  t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n  t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n  t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n  t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n  t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n  t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n  t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n  t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n  t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n  t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n  t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n  t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n  t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n  t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n  t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n  t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n  t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n  t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n  t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n  t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n  t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n  t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n  t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n  t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n  t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n  t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n  t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n  t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n  t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n  t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n  t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n  t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n  t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n  t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n  t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n  t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n  t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n  t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n  t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n  t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n  t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n  t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n  t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n  t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n  t['\\uFE49'] = '\\u203E';\n  t['\\uFE4A'] = '\\u203E';\n  t['\\uFE4B'] = '\\u203E';\n  t['\\uFE4C'] = '\\u203E';\n  t['\\uFE4D'] = '_';\n  t['\\uFE4E'] = '_';\n  t['\\uFE4F'] = '_';\n  t['\\uFE80'] = '\\u0621';\n  t['\\uFE81'] = '\\u0622';\n  t['\\uFE82'] = '\\u0622';\n  t['\\uFE83'] = '\\u0623';\n  t['\\uFE84'] = '\\u0623';\n  t['\\uFE85'] = '\\u0624';\n  t['\\uFE86'] = '\\u0624';\n  t['\\uFE87'] = '\\u0625';\n  t['\\uFE88'] = '\\u0625';\n  t['\\uFE89'] = '\\u0626';\n  t['\\uFE8A'] = '\\u0626';\n  t['\\uFE8B'] = '\\u0626';\n  t['\\uFE8C'] = '\\u0626';\n  t['\\uFE8D'] = '\\u0627';\n  t['\\uFE8E'] = '\\u0627';\n  t['\\uFE8F'] = '\\u0628';\n  t['\\uFE90'] = '\\u0628';\n  t['\\uFE91'] = '\\u0628';\n  t['\\uFE92'] = '\\u0628';\n  t['\\uFE93'] = '\\u0629';\n  t['\\uFE94'] = '\\u0629';\n  t['\\uFE95'] = '\\u062A';\n  t['\\uFE96'] = '\\u062A';\n  t['\\uFE97'] = '\\u062A';\n  t['\\uFE98'] = '\\u062A';\n  t['\\uFE99'] = '\\u062B';\n  t['\\uFE9A'] = '\\u062B';\n  t['\\uFE9B'] = '\\u062B';\n  t['\\uFE9C'] = '\\u062B';\n  t['\\uFE9D'] = '\\u062C';\n  t['\\uFE9E'] = '\\u062C';\n  t['\\uFE9F'] = '\\u062C';\n  t['\\uFEA0'] = '\\u062C';\n  t['\\uFEA1'] = '\\u062D';\n  t['\\uFEA2'] = '\\u062D';\n  t['\\uFEA3'] = '\\u062D';\n  t['\\uFEA4'] = '\\u062D';\n  t['\\uFEA5'] = '\\u062E';\n  t['\\uFEA6'] = '\\u062E';\n  t['\\uFEA7'] = '\\u062E';\n  t['\\uFEA8'] = '\\u062E';\n  t['\\uFEA9'] = '\\u062F';\n  t['\\uFEAA'] = '\\u062F';\n  t['\\uFEAB'] = '\\u0630';\n  t['\\uFEAC'] = '\\u0630';\n  t['\\uFEAD'] = '\\u0631';\n  t['\\uFEAE'] = '\\u0631';\n  t['\\uFEAF'] = '\\u0632';\n  t['\\uFEB0'] = '\\u0632';\n  t['\\uFEB1'] = '\\u0633';\n  t['\\uFEB2'] = '\\u0633';\n  t['\\uFEB3'] = '\\u0633';\n  t['\\uFEB4'] = '\\u0633';\n  t['\\uFEB5'] = '\\u0634';\n  t['\\uFEB6'] = '\\u0634';\n  t['\\uFEB7'] = '\\u0634';\n  t['\\uFEB8'] = '\\u0634';\n  t['\\uFEB9'] = '\\u0635';\n  t['\\uFEBA'] = '\\u0635';\n  t['\\uFEBB'] = '\\u0635';\n  t['\\uFEBC'] = '\\u0635';\n  t['\\uFEBD'] = '\\u0636';\n  t['\\uFEBE'] = '\\u0636';\n  t['\\uFEBF'] = '\\u0636';\n  t['\\uFEC0'] = '\\u0636';\n  t['\\uFEC1'] = '\\u0637';\n  t['\\uFEC2'] = '\\u0637';\n  t['\\uFEC3'] = '\\u0637';\n  t['\\uFEC4'] = '\\u0637';\n  t['\\uFEC5'] = '\\u0638';\n  t['\\uFEC6'] = '\\u0638';\n  t['\\uFEC7'] = '\\u0638';\n  t['\\uFEC8'] = '\\u0638';\n  t['\\uFEC9'] = '\\u0639';\n  t['\\uFECA'] = '\\u0639';\n  t['\\uFECB'] = '\\u0639';\n  t['\\uFECC'] = '\\u0639';\n  t['\\uFECD'] = '\\u063A';\n  t['\\uFECE'] = '\\u063A';\n  t['\\uFECF'] = '\\u063A';\n  t['\\uFED0'] = '\\u063A';\n  t['\\uFED1'] = '\\u0641';\n  t['\\uFED2'] = '\\u0641';\n  t['\\uFED3'] = '\\u0641';\n  t['\\uFED4'] = '\\u0641';\n  t['\\uFED5'] = '\\u0642';\n  t['\\uFED6'] = '\\u0642';\n  t['\\uFED7'] = '\\u0642';\n  t['\\uFED8'] = '\\u0642';\n  t['\\uFED9'] = '\\u0643';\n  t['\\uFEDA'] = '\\u0643';\n  t['\\uFEDB'] = '\\u0643';\n  t['\\uFEDC'] = '\\u0643';\n  t['\\uFEDD'] = '\\u0644';\n  t['\\uFEDE'] = '\\u0644';\n  t['\\uFEDF'] = '\\u0644';\n  t['\\uFEE0'] = '\\u0644';\n  t['\\uFEE1'] = '\\u0645';\n  t['\\uFEE2'] = '\\u0645';\n  t['\\uFEE3'] = '\\u0645';\n  t['\\uFEE4'] = '\\u0645';\n  t['\\uFEE5'] = '\\u0646';\n  t['\\uFEE6'] = '\\u0646';\n  t['\\uFEE7'] = '\\u0646';\n  t['\\uFEE8'] = '\\u0646';\n  t['\\uFEE9'] = '\\u0647';\n  t['\\uFEEA'] = '\\u0647';\n  t['\\uFEEB'] = '\\u0647';\n  t['\\uFEEC'] = '\\u0647';\n  t['\\uFEED'] = '\\u0648';\n  t['\\uFEEE'] = '\\u0648';\n  t['\\uFEEF'] = '\\u0649';\n  t['\\uFEF0'] = '\\u0649';\n  t['\\uFEF1'] = '\\u064A';\n  t['\\uFEF2'] = '\\u064A';\n  t['\\uFEF3'] = '\\u064A';\n  t['\\uFEF4'] = '\\u064A';\n  t['\\uFEF5'] = '\\u0644\\u0622';\n  t['\\uFEF6'] = '\\u0644\\u0622';\n  t['\\uFEF7'] = '\\u0644\\u0623';\n  t['\\uFEF8'] = '\\u0644\\u0623';\n  t['\\uFEF9'] = '\\u0644\\u0625';\n  t['\\uFEFA'] = '\\u0644\\u0625';\n  t['\\uFEFB'] = '\\u0644\\u0627';\n  t['\\uFEFC'] = '\\u0644\\u0627';\n});\nfunction reverseIfRtl(chars) {\n  var charsLength = chars.length;\n  if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n    return chars;\n  }\n  var s = '';\n  for (var ii = charsLength - 1; ii >= 0; ii--) {\n    s += chars[ii];\n  }\n  return s;\n}\nexports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\nexports.reverseIfRtl = reverseIfRtl;\nexports.getUnicodeRangeFor = getUnicodeRangeFor;\nexports.getNormalizedUnicodes = getNormalizedUnicodes;\nexports.getUnicodeForGlyph = getUnicodeForGlyph;\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptCompiler = exports.PostScriptEvaluator = exports.PDFFunctionFactory = exports.isPDFFunction = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _ps_parser = __w_pdfjs_require__(149);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar IsEvalSupportedCached = {\n  get value() {\n    return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());\n  }\n};\n\nvar PDFFunctionFactory = function () {\n  function PDFFunctionFactory(_ref) {\n    var xref = _ref.xref,\n        _ref$isEvalSupported = _ref.isEvalSupported,\n        isEvalSupported = _ref$isEvalSupported === undefined ? true : _ref$isEvalSupported;\n\n    _classCallCheck(this, PDFFunctionFactory);\n\n    this.xref = xref;\n    this.isEvalSupported = isEvalSupported !== false;\n  }\n\n  _createClass(PDFFunctionFactory, [{\n    key: 'create',\n    value: function create(fn) {\n      return PDFFunction.parse({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }, {\n    key: 'createFromArray',\n    value: function createFromArray(fnObj) {\n      return PDFFunction.parseArray({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fnObj: fnObj\n      });\n    }\n  }, {\n    key: 'createFromIR',\n    value: function createFromIR(IR) {\n      return PDFFunction.fromIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        IR: IR\n      });\n    }\n  }, {\n    key: 'createIR',\n    value: function createIR(fn) {\n      return PDFFunction.getIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }]);\n\n  return PDFFunctionFactory;\n}();\n\nvar PDFFunction = function PDFFunctionClosure() {\n  var CONSTRUCT_SAMPLED = 0;\n  var CONSTRUCT_INTERPOLATED = 2;\n  var CONSTRUCT_STICHED = 3;\n  var CONSTRUCT_POSTSCRIPT = 4;\n  return {\n    getSampleArray: function getSampleArray(size, outputSize, bps, stream) {\n      var i, ii;\n      var length = 1;\n      for (i = 0, ii = size.length; i < ii; i++) {\n        length *= size[i];\n      }\n      length *= outputSize;\n      var array = new Array(length);\n      var codeSize = 0;\n      var codeBuf = 0;\n      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n      var strBytes = stream.getBytes((length * bps + 7) / 8);\n      var strIdx = 0;\n      for (i = 0; i < length; i++) {\n        while (codeSize < bps) {\n          codeBuf <<= 8;\n          codeBuf |= strBytes[strIdx++];\n          codeSize += 8;\n        }\n        codeSize -= bps;\n        array[i] = (codeBuf >> codeSize) * sampleMul;\n        codeBuf &= (1 << codeSize) - 1;\n      }\n      return array;\n    },\n    getIR: function getIR(_ref2) {\n      var xref = _ref2.xref,\n          isEvalSupported = _ref2.isEvalSupported,\n          fn = _ref2.fn;\n\n      var dict = fn.dict;\n      if (!dict) {\n        dict = fn;\n      }\n      var types = [this.constructSampled, null, this.constructInterpolated, this.constructStiched, this.constructPostScript];\n      var typeNum = dict.get('FunctionType');\n      var typeFn = types[typeNum];\n      if (!typeFn) {\n        throw new _util.FormatError('Unknown type of function');\n      }\n      return typeFn.call(this, {\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn,\n        dict: dict\n      });\n    },\n    fromIR: function fromIR(_ref3) {\n      var xref = _ref3.xref,\n          isEvalSupported = _ref3.isEvalSupported,\n          IR = _ref3.IR;\n\n      var type = IR[0];\n      switch (type) {\n        case CONSTRUCT_SAMPLED:\n          return this.constructSampledFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_INTERPOLATED:\n          return this.constructInterpolatedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_STICHED:\n          return this.constructStichedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        default:\n          return this.constructPostScriptFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n      }\n    },\n    parse: function parse(_ref4) {\n      var xref = _ref4.xref,\n          isEvalSupported = _ref4.isEvalSupported,\n          fn = _ref4.fn;\n\n      var IR = this.getIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn\n      });\n      return this.fromIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        IR: IR\n      });\n    },\n    parseArray: function parseArray(_ref5) {\n      var xref = _ref5.xref,\n          isEvalSupported = _ref5.isEvalSupported,\n          fnObj = _ref5.fnObj;\n\n      if (!Array.isArray(fnObj)) {\n        return this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: fnObj\n        });\n      }\n      var fnArray = [];\n      for (var j = 0, jj = fnObj.length; j < jj; j++) {\n        fnArray.push(this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnObj[j])\n        }));\n      }\n      return function (src, srcOffset, dest, destOffset) {\n        for (var i = 0, ii = fnArray.length; i < ii; i++) {\n          fnArray[i](src, srcOffset, dest, destOffset + i);\n        }\n      };\n    },\n    constructSampled: function constructSampled(_ref6) {\n      var xref = _ref6.xref,\n          isEvalSupported = _ref6.isEvalSupported,\n          fn = _ref6.fn,\n          dict = _ref6.dict;\n\n      function toMultiArray(arr) {\n        var inputLength = arr.length;\n        var out = [];\n        var index = 0;\n        for (var i = 0; i < inputLength; i += 2) {\n          out[index] = [arr[i], arr[i + 1]];\n          ++index;\n        }\n        return out;\n      }\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain || !range) {\n        throw new _util.FormatError('No domain or range');\n      }\n      var inputSize = domain.length / 2;\n      var outputSize = range.length / 2;\n      domain = toMultiArray(domain);\n      range = toMultiArray(range);\n      var size = dict.get('Size');\n      var bps = dict.get('BitsPerSample');\n      var order = dict.get('Order') || 1;\n      if (order !== 1) {\n        (0, _util.info)('No support for cubic spline interpolation: ' + order);\n      }\n      var encode = dict.getArray('Encode');\n      if (!encode) {\n        encode = [];\n        for (var i = 0; i < inputSize; ++i) {\n          encode.push(0);\n          encode.push(size[i] - 1);\n        }\n      }\n      encode = toMultiArray(encode);\n      var decode = dict.getArray('Decode');\n      if (!decode) {\n        decode = range;\n      } else {\n        decode = toMultiArray(decode);\n      }\n      var samples = this.getSampleArray(size, outputSize, bps, fn);\n      return [CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size, outputSize, Math.pow(2, bps) - 1, range];\n    },\n    constructSampledFromIR: function constructSampledFromIR(_ref7) {\n      var xref = _ref7.xref,\n          isEvalSupported = _ref7.isEvalSupported,\n          IR = _ref7.IR;\n\n      function interpolate(x, xmin, xmax, ymin, ymax) {\n        return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n      }\n      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n        var m = IR[1];\n        var domain = IR[2];\n        var encode = IR[3];\n        var decode = IR[4];\n        var samples = IR[5];\n        var size = IR[6];\n        var n = IR[7];\n        var range = IR[9];\n        var cubeVertices = 1 << m;\n        var cubeN = new Float64Array(cubeVertices);\n        var cubeVertex = new Uint32Array(cubeVertices);\n        var i, j;\n        for (j = 0; j < cubeVertices; j++) {\n          cubeN[j] = 1;\n        }\n        var k = n,\n            pos = 1;\n        for (i = 0; i < m; ++i) {\n          var domain_2i = domain[i][0];\n          var domain_2i_1 = domain[i][1];\n          var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n          var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n          var size_i = size[i];\n          e = Math.min(Math.max(e, 0), size_i - 1);\n          var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n          var n0 = e0 + 1 - e;\n          var n1 = e - e0;\n          var offset0 = e0 * k;\n          var offset1 = offset0 + k;\n          for (j = 0; j < cubeVertices; j++) {\n            if (j & pos) {\n              cubeN[j] *= n1;\n              cubeVertex[j] += offset1;\n            } else {\n              cubeN[j] *= n0;\n              cubeVertex[j] += offset0;\n            }\n          }\n          k *= size_i;\n          pos <<= 1;\n        }\n        for (j = 0; j < n; ++j) {\n          var rj = 0;\n          for (i = 0; i < cubeVertices; i++) {\n            rj += samples[cubeVertex[i] + j] * cubeN[i];\n          }\n          rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n          dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n        }\n      };\n    },\n    constructInterpolated: function constructInterpolated(_ref8) {\n      var xref = _ref8.xref,\n          isEvalSupported = _ref8.isEvalSupported,\n          fn = _ref8.fn,\n          dict = _ref8.dict;\n\n      var c0 = dict.getArray('C0') || [0];\n      var c1 = dict.getArray('C1') || [1];\n      var n = dict.get('N');\n      if (!Array.isArray(c0) || !Array.isArray(c1)) {\n        throw new _util.FormatError('Illegal dictionary for interpolated function');\n      }\n      var length = c0.length;\n      var diff = [];\n      for (var i = 0; i < length; ++i) {\n        diff.push(c1[i] - c0[i]);\n      }\n      return [CONSTRUCT_INTERPOLATED, c0, diff, n];\n    },\n    constructInterpolatedFromIR: function constructInterpolatedFromIR(_ref9) {\n      var xref = _ref9.xref,\n          isEvalSupported = _ref9.isEvalSupported,\n          IR = _ref9.IR;\n\n      var c0 = IR[1];\n      var diff = IR[2];\n      var n = IR[3];\n      var length = diff.length;\n      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n        var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n        for (var j = 0; j < length; ++j) {\n          dest[destOffset + j] = c0[j] + x * diff[j];\n        }\n      };\n    },\n    constructStiched: function constructStiched(_ref10) {\n      var xref = _ref10.xref,\n          isEvalSupported = _ref10.isEvalSupported,\n          fn = _ref10.fn,\n          dict = _ref10.dict;\n\n      var domain = dict.getArray('Domain');\n      if (!domain) {\n        throw new _util.FormatError('No domain');\n      }\n      var inputSize = domain.length / 2;\n      if (inputSize !== 1) {\n        throw new _util.FormatError('Bad domain for stiched function');\n      }\n      var fnRefs = dict.get('Functions');\n      var fns = [];\n      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n        fns.push(this.getIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnRefs[i])\n        }));\n      }\n      var bounds = dict.getArray('Bounds');\n      var encode = dict.getArray('Encode');\n      return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\n    },\n    constructStichedFromIR: function constructStichedFromIR(_ref11) {\n      var xref = _ref11.xref,\n          isEvalSupported = _ref11.isEvalSupported,\n          IR = _ref11.IR;\n\n      var domain = IR[1];\n      var bounds = IR[2];\n      var encode = IR[3];\n      var fnsIR = IR[4];\n      var fns = [];\n      var tmpBuf = new Float32Array(1);\n      for (var i = 0, ii = fnsIR.length; i < ii; i++) {\n        fns.push(this.fromIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          IR: fnsIR[i]\n        }));\n      }\n      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n        var clip = function constructStichedFromIRClip(v, min, max) {\n          if (v > max) {\n            v = max;\n          } else if (v < min) {\n            v = min;\n          }\n          return v;\n        };\n        var v = clip(src[srcOffset], domain[0], domain[1]);\n        for (var i = 0, ii = bounds.length; i < ii; ++i) {\n          if (v < bounds[i]) {\n            break;\n          }\n        }\n        var dmin = domain[0];\n        if (i > 0) {\n          dmin = bounds[i - 1];\n        }\n        var dmax = domain[1];\n        if (i < bounds.length) {\n          dmax = bounds[i];\n        }\n        var rmin = encode[2 * i];\n        var rmax = encode[2 * i + 1];\n        tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n        fns[i](tmpBuf, 0, dest, destOffset);\n      };\n    },\n    constructPostScript: function constructPostScript(_ref12) {\n      var xref = _ref12.xref,\n          isEvalSupported = _ref12.isEvalSupported,\n          fn = _ref12.fn,\n          dict = _ref12.dict;\n\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain) {\n        throw new _util.FormatError('No domain.');\n      }\n      if (!range) {\n        throw new _util.FormatError('No range.');\n      }\n      var lexer = new _ps_parser.PostScriptLexer(fn);\n      var parser = new _ps_parser.PostScriptParser(lexer);\n      var code = parser.parse();\n      return [CONSTRUCT_POSTSCRIPT, domain, range, code];\n    },\n    constructPostScriptFromIR: function constructPostScriptFromIR(_ref13) {\n      var xref = _ref13.xref,\n          isEvalSupported = _ref13.isEvalSupported,\n          IR = _ref13.IR;\n\n      var domain = IR[1];\n      var range = IR[2];\n      var code = IR[3];\n      if (isEvalSupported && IsEvalSupportedCached.value) {\n        var compiled = new PostScriptCompiler().compile(code, domain, range);\n        if (compiled) {\n          return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n        }\n      }\n      (0, _util.info)('Unable to compile PS function');\n      var numOutputs = range.length >> 1;\n      var numInputs = domain.length >> 1;\n      var evaluator = new PostScriptEvaluator(code);\n      var cache = Object.create(null);\n      var MAX_CACHE_SIZE = 2048 * 4;\n      var cache_available = MAX_CACHE_SIZE;\n      var tmpBuf = new Float32Array(numInputs);\n      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n        var i, value;\n        var key = '';\n        var input = tmpBuf;\n        for (i = 0; i < numInputs; i++) {\n          value = src[srcOffset + i];\n          input[i] = value;\n          key += value + '_';\n        }\n        var cachedValue = cache[key];\n        if (cachedValue !== undefined) {\n          dest.set(cachedValue, destOffset);\n          return;\n        }\n        var output = new Float32Array(numOutputs);\n        var stack = evaluator.execute(input);\n        var stackIndex = stack.length - numOutputs;\n        for (i = 0; i < numOutputs; i++) {\n          value = stack[stackIndex + i];\n          var bound = range[i * 2];\n          if (value < bound) {\n            value = bound;\n          } else {\n            bound = range[i * 2 + 1];\n            if (value > bound) {\n              value = bound;\n            }\n          }\n          output[i] = value;\n        }\n        if (cache_available > 0) {\n          cache_available--;\n          cache[key] = output;\n        }\n        dest.set(output, destOffset);\n      };\n    }\n  };\n}();\nfunction isPDFFunction(v) {\n  var fnDict;\n  if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) !== 'object') {\n    return false;\n  } else if ((0, _primitives.isDict)(v)) {\n    fnDict = v;\n  } else if ((0, _primitives.isStream)(v)) {\n    fnDict = v.dict;\n  } else {\n    return false;\n  }\n  return fnDict.has('FunctionType');\n}\nvar PostScriptStack = function PostScriptStackClosure() {\n  var MAX_STACK_SIZE = 100;\n  function PostScriptStack(initialStack) {\n    this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n  }\n  PostScriptStack.prototype = {\n    push: function PostScriptStack_push(value) {\n      if (this.stack.length >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      this.stack.push(value);\n    },\n    pop: function PostScriptStack_pop() {\n      if (this.stack.length <= 0) {\n        throw new Error('PostScript function stack underflow.');\n      }\n      return this.stack.pop();\n    },\n    copy: function PostScriptStack_copy(n) {\n      if (this.stack.length + n >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      var stack = this.stack;\n      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n        stack.push(stack[i]);\n      }\n    },\n    index: function PostScriptStack_index(n) {\n      this.push(this.stack[this.stack.length - n - 1]);\n    },\n    roll: function PostScriptStack_roll(n, p) {\n      var stack = this.stack;\n      var l = stack.length - n;\n      var r = stack.length - 1,\n          c = l + (p - Math.floor(p / n) * n),\n          i,\n          j,\n          t;\n      for (i = l, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = l, j = c - 1; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = c, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n    }\n  };\n  return PostScriptStack;\n}();\nvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n  function PostScriptEvaluator(operators) {\n    this.operators = operators;\n  }\n  PostScriptEvaluator.prototype = {\n    execute: function PostScriptEvaluator_execute(initialStack) {\n      var stack = new PostScriptStack(initialStack);\n      var counter = 0;\n      var operators = this.operators;\n      var length = operators.length;\n      var operator, a, b;\n      while (counter < length) {\n        operator = operators[counter++];\n        if (typeof operator === 'number') {\n          stack.push(operator);\n          continue;\n        }\n        switch (operator) {\n          case 'jz':\n            b = stack.pop();\n            a = stack.pop();\n            if (!a) {\n              counter = b;\n            }\n            break;\n          case 'j':\n            a = stack.pop();\n            counter = a;\n            break;\n          case 'abs':\n            a = stack.pop();\n            stack.push(Math.abs(a));\n            break;\n          case 'add':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a + b);\n            break;\n          case 'and':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a && b);\n            } else {\n              stack.push(a & b);\n            }\n            break;\n          case 'atan':\n            a = stack.pop();\n            stack.push(Math.atan(a));\n            break;\n          case 'bitshift':\n            b = stack.pop();\n            a = stack.pop();\n            if (a > 0) {\n              stack.push(a << b);\n            } else {\n              stack.push(a >> b);\n            }\n            break;\n          case 'ceiling':\n            a = stack.pop();\n            stack.push(Math.ceil(a));\n            break;\n          case 'copy':\n            a = stack.pop();\n            stack.copy(a);\n            break;\n          case 'cos':\n            a = stack.pop();\n            stack.push(Math.cos(a));\n            break;\n          case 'cvi':\n            a = stack.pop() | 0;\n            stack.push(a);\n            break;\n          case 'cvr':\n            break;\n          case 'div':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b);\n            break;\n          case 'dup':\n            stack.copy(1);\n            break;\n          case 'eq':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a === b);\n            break;\n          case 'exch':\n            stack.roll(2, 1);\n            break;\n          case 'exp':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(Math.pow(a, b));\n            break;\n          case 'false':\n            stack.push(false);\n            break;\n          case 'floor':\n            a = stack.pop();\n            stack.push(Math.floor(a));\n            break;\n          case 'ge':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a >= b);\n            break;\n          case 'gt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a > b);\n            break;\n          case 'idiv':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b | 0);\n            break;\n          case 'index':\n            a = stack.pop();\n            stack.index(a);\n            break;\n          case 'le':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a <= b);\n            break;\n          case 'ln':\n            a = stack.pop();\n            stack.push(Math.log(a));\n            break;\n          case 'log':\n            a = stack.pop();\n            stack.push(Math.log(a) / Math.LN10);\n            break;\n          case 'lt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a < b);\n            break;\n          case 'mod':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a % b);\n            break;\n          case 'mul':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a * b);\n            break;\n          case 'ne':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a !== b);\n            break;\n          case 'neg':\n            a = stack.pop();\n            stack.push(-a);\n            break;\n          case 'not':\n            a = stack.pop();\n            if ((0, _util.isBool)(a)) {\n              stack.push(!a);\n            } else {\n              stack.push(~a);\n            }\n            break;\n          case 'or':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a || b);\n            } else {\n              stack.push(a | b);\n            }\n            break;\n          case 'pop':\n            stack.pop();\n            break;\n          case 'roll':\n            b = stack.pop();\n            a = stack.pop();\n            stack.roll(a, b);\n            break;\n          case 'round':\n            a = stack.pop();\n            stack.push(Math.round(a));\n            break;\n          case 'sin':\n            a = stack.pop();\n            stack.push(Math.sin(a));\n            break;\n          case 'sqrt':\n            a = stack.pop();\n            stack.push(Math.sqrt(a));\n            break;\n          case 'sub':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a - b);\n            break;\n          case 'true':\n            stack.push(true);\n            break;\n          case 'truncate':\n            a = stack.pop();\n            a = a < 0 ? Math.ceil(a) : Math.floor(a);\n            stack.push(a);\n            break;\n          case 'xor':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a !== b);\n            } else {\n              stack.push(a ^ b);\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown operator ' + operator);\n        }\n      }\n      return stack.stack;\n    }\n  };\n  return PostScriptEvaluator;\n}();\nvar PostScriptCompiler = function PostScriptCompilerClosure() {\n  function AstNode(type) {\n    this.type = type;\n  }\n  AstNode.prototype.visit = function (visitor) {\n    (0, _util.unreachable)('abstract method');\n  };\n  function AstArgument(index, min, max) {\n    AstNode.call(this, 'args');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstArgument.prototype = Object.create(AstNode.prototype);\n  AstArgument.prototype.visit = function (visitor) {\n    visitor.visitArgument(this);\n  };\n  function AstLiteral(number) {\n    AstNode.call(this, 'literal');\n    this.number = number;\n    this.min = number;\n    this.max = number;\n  }\n  AstLiteral.prototype = Object.create(AstNode.prototype);\n  AstLiteral.prototype.visit = function (visitor) {\n    visitor.visitLiteral(this);\n  };\n  function AstBinaryOperation(op, arg1, arg2, min, max) {\n    AstNode.call(this, 'binary');\n    this.op = op;\n    this.arg1 = arg1;\n    this.arg2 = arg2;\n    this.min = min;\n    this.max = max;\n  }\n  AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n  AstBinaryOperation.prototype.visit = function (visitor) {\n    visitor.visitBinaryOperation(this);\n  };\n  function AstMin(arg, max) {\n    AstNode.call(this, 'max');\n    this.arg = arg;\n    this.min = arg.min;\n    this.max = max;\n  }\n  AstMin.prototype = Object.create(AstNode.prototype);\n  AstMin.prototype.visit = function (visitor) {\n    visitor.visitMin(this);\n  };\n  function AstVariable(index, min, max) {\n    AstNode.call(this, 'var');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstVariable.prototype = Object.create(AstNode.prototype);\n  AstVariable.prototype.visit = function (visitor) {\n    visitor.visitVariable(this);\n  };\n  function AstVariableDefinition(variable, arg) {\n    AstNode.call(this, 'definition');\n    this.variable = variable;\n    this.arg = arg;\n  }\n  AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n  AstVariableDefinition.prototype.visit = function (visitor) {\n    visitor.visitVariableDefinition(this);\n  };\n  function ExpressionBuilderVisitor() {\n    this.parts = [];\n  }\n  ExpressionBuilderVisitor.prototype = {\n    visitArgument: function visitArgument(arg) {\n      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n    },\n    visitVariable: function visitVariable(variable) {\n      this.parts.push('v', variable.index);\n    },\n    visitLiteral: function visitLiteral(literal) {\n      this.parts.push(literal.number);\n    },\n    visitBinaryOperation: function visitBinaryOperation(operation) {\n      this.parts.push('(');\n      operation.arg1.visit(this);\n      this.parts.push(' ', operation.op, ' ');\n      operation.arg2.visit(this);\n      this.parts.push(')');\n    },\n    visitVariableDefinition: function visitVariableDefinition(definition) {\n      this.parts.push('var ');\n      definition.variable.visit(this);\n      this.parts.push(' = ');\n      definition.arg.visit(this);\n      this.parts.push(';');\n    },\n    visitMin: function visitMin(max) {\n      this.parts.push('Math.min(');\n      max.arg.visit(this);\n      this.parts.push(', ', max.max, ')');\n    },\n    toString: function toString() {\n      return this.parts.join('');\n    }\n  };\n  function buildAddOperation(num1, num2) {\n    if (num2.type === 'literal' && num2.number === 0) {\n      return num1;\n    }\n    if (num1.type === 'literal' && num1.number === 0) {\n      return num2;\n    }\n    if (num2.type === 'literal' && num1.type === 'literal') {\n      return new AstLiteral(num1.number + num2.number);\n    }\n    return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n  }\n  function buildMulOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return new AstLiteral(0);\n      } else if (num2.number === 1) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number * num2.number);\n      }\n    }\n    if (num1.type === 'literal') {\n      if (num1.number === 0) {\n        return new AstLiteral(0);\n      } else if (num1.number === 1) {\n        return num2;\n      }\n    }\n    var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    return new AstBinaryOperation('*', num1, num2, min, max);\n  }\n  function buildSubOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number - num2.number);\n      }\n    }\n    if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n      return num2.arg2;\n    }\n    return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n  }\n  function buildMinOperation(num1, max) {\n    if (num1.min >= max) {\n      return new AstLiteral(max);\n    } else if (num1.max <= max) {\n      return num1;\n    }\n    return new AstMin(num1, max);\n  }\n  function PostScriptCompiler() {}\n  PostScriptCompiler.prototype = {\n    compile: function PostScriptCompiler_compile(code, domain, range) {\n      var stack = [];\n      var i, ii;\n      var instructions = [];\n      var inputSize = domain.length >> 1,\n          outputSize = range.length >> 1;\n      var lastRegister = 0;\n      var n, j;\n      var num1, num2, ast1, ast2, tmpVar, item;\n      for (i = 0; i < inputSize; i++) {\n        stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n      }\n      for (i = 0, ii = code.length; i < ii; i++) {\n        item = code[i];\n        if (typeof item === 'number') {\n          stack.push(new AstLiteral(item));\n          continue;\n        }\n        switch (item) {\n          case 'add':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildAddOperation(num1, num2));\n            break;\n          case 'cvr':\n            if (stack.length < 1) {\n              return null;\n            }\n            break;\n          case 'mul':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildMulOperation(num1, num2));\n            break;\n          case 'sub':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildSubOperation(num1, num2));\n            break;\n          case 'exch':\n            if (stack.length < 2) {\n              return null;\n            }\n            ast1 = stack.pop();\n            ast2 = stack.pop();\n            stack.push(ast1, ast2);\n            break;\n          case 'pop':\n            if (stack.length < 1) {\n              return null;\n            }\n            stack.pop();\n            break;\n          case 'index':\n            if (stack.length < 1) {\n              return null;\n            }\n            num1 = stack.pop();\n            if (num1.type !== 'literal') {\n              return null;\n            }\n            n = num1.number;\n            if (n < 0 || !Number.isInteger(n) || stack.length < n) {\n              return null;\n            }\n            ast1 = stack[stack.length - n - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - n - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'dup':\n            if (stack.length < 1) {\n              return null;\n            }\n            if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n              num1 = stack.pop();\n              stack.push(buildMinOperation(num1, code[i + 1]));\n              i += 6;\n              break;\n            }\n            ast1 = stack[stack.length - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'roll':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            if (num2.type !== 'literal' || num1.type !== 'literal') {\n              return null;\n            }\n            j = num2.number;\n            n = num1.number;\n            if (n <= 0 || !Number.isInteger(n) || !Number.isInteger(j) || stack.length < n) {\n              return null;\n            }\n            j = (j % n + n) % n;\n            if (j === 0) {\n              break;\n            }\n            Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n            break;\n          default:\n            return null;\n        }\n      }\n      if (stack.length !== outputSize) {\n        return null;\n      }\n      var result = [];\n      instructions.forEach(function (instruction) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        instruction.visit(statementBuilder);\n        result.push(statementBuilder.toString());\n      });\n      stack.forEach(function (expr, i) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        expr.visit(statementBuilder);\n        var min = range[i * 2],\n            max = range[i * 2 + 1];\n        var out = [statementBuilder.toString()];\n        if (min > expr.min) {\n          out.unshift('Math.max(', min, ', ');\n          out.push(')');\n        }\n        if (max < expr.max) {\n          out.unshift('Math.min(', max, ', ');\n          out.push(')');\n        }\n        out.unshift('dest[destOffset + ', i, '] = ');\n        out.push(';');\n        result.push(out.join(''));\n      });\n      return result.join('\\n');\n    }\n  };\n  return PostScriptCompiler;\n}();\nexports.isPDFFunction = isPDFFunction;\nexports.PDFFunctionFactory = PDFFunctionFactory;\nexports.PostScriptEvaluator = PostScriptEvaluator;\nexports.PostScriptCompiler = PostScriptCompiler;\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar pdfjsVersion = '2.0.489';\nvar pdfjsBuild = '7d7bc80e';\nvar pdfjsCoreWorker = __w_pdfjs_require__(74);\nexports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkerMessageHandler = exports.WorkerTask = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _pdf_manager = __w_pdfjs_require__(132);\n\nvar _is_node = __w_pdfjs_require__(44);\n\nvar _is_node2 = _interopRequireDefault(_is_node);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar WorkerTask = function WorkerTaskClosure() {\n  function WorkerTask(name) {\n    this.name = name;\n    this.terminated = false;\n    this._capability = (0, _util.createPromiseCapability)();\n  }\n  WorkerTask.prototype = {\n    get finished() {\n      return this._capability.promise;\n    },\n    finish: function finish() {\n      this._capability.resolve();\n    },\n    terminate: function terminate() {\n      this.terminated = true;\n    },\n    ensureNotTerminated: function ensureNotTerminated() {\n      if (this.terminated) {\n        throw new Error('Worker task was terminated');\n      }\n    }\n  };\n  return WorkerTask;\n}();\n;\nvar PDFWorkerStream = function PDFWorkerStreamClosure() {\n  function PDFWorkerStream(msgHandler) {\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  PDFWorkerStream.prototype = {\n    getFullReader: function getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader);\n      this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);\n      return this._fullRequestReader;\n    },\n    getRangeReader: function getRangeReader(begin, end) {\n      var reader = new PDFWorkerStreamRangeReader(begin, end, this._msgHandler);\n      this._rangeRequestReaders.push(reader);\n      return reader;\n    },\n    cancelAllRequests: function cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n      var readers = this._rangeRequestReaders.slice(0);\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n  };\n  function PDFWorkerStreamReader(msgHandler) {\n    var _this = this;\n\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._isRangeSupported = false;\n    this._isStreamingSupported = false;\n    var readableStream = this._msgHandler.sendWithStream('GetReader');\n    this._reader = readableStream.getReader();\n    this._headersReady = this._msgHandler.sendWithPromise('ReaderHeadersReady').then(function (data) {\n      _this._isStreamingSupported = data.isStreamingSupported;\n      _this._isRangeSupported = data.isRangeSupported;\n      _this._contentLength = data.contentLength;\n    });\n  }\n  PDFWorkerStreamReader.prototype = {\n    get headersReady() {\n      return this._headersReady;\n    },\n    get contentLength() {\n      return this._contentLength;\n    },\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    },\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref) {\n        var value = _ref.value,\n            done = _ref.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  function PDFWorkerStreamRangeReader(begin, end, msgHandler) {\n    this._msgHandler = msgHandler;\n    this.onProgress = null;\n    var readableStream = this._msgHandler.sendWithStream('GetRangeReader', {\n      begin: begin,\n      end: end\n    });\n    this._reader = readableStream.getReader();\n  }\n  PDFWorkerStreamRangeReader.prototype = {\n    get isStreamingSupported() {\n      return false;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref2) {\n        var value = _ref2.value,\n            done = _ref2.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  return PDFWorkerStream;\n}();\nvar WorkerMessageHandler = {\n  setup: function setup(handler, port) {\n    var testMessageProcessed = false;\n    handler.on('test', function wphSetupTest(data) {\n      if (testMessageProcessed) {\n        return;\n      }\n      testMessageProcessed = true;\n      if (!(data instanceof Uint8Array)) {\n        handler.send('test', 'main', false);\n        return;\n      }\n      var supportTransfers = data[0] === 255;\n      handler.postMessageTransfers = supportTransfers;\n      var xhr = new XMLHttpRequest();\n      var responseExists = 'response' in xhr;\n      try {\n        xhr.responseType;\n      } catch (e) {\n        responseExists = false;\n      }\n      if (!responseExists) {\n        handler.send('test', false);\n        return;\n      }\n      handler.send('test', {\n        supportTypedArray: true,\n        supportTransfers: supportTransfers\n      });\n    });\n    handler.on('configure', function wphConfigure(data) {\n      (0, _util.setVerbosityLevel)(data.verbosity);\n    });\n    handler.on('GetDocRequest', function wphSetupDoc(data) {\n      return WorkerMessageHandler.createDocumentHandler(data, port);\n    });\n  },\n  createDocumentHandler: function createDocumentHandler(docParams, port) {\n    var pdfManager;\n    var terminated = false;\n    var cancelXHRs = null;\n    var WorkerTasks = [];\n    var apiVersion = docParams.apiVersion;\n    var workerVersion = '2.0.489';\n    if (apiVersion !== null && apiVersion !== workerVersion) {\n      throw new Error('The API version \"' + apiVersion + '\" does not match ' + ('the Worker version \"' + workerVersion + '\".'));\n    }\n    var docId = docParams.docId;\n    var docBaseUrl = docParams.docBaseUrl;\n    var workerHandlerName = docParams.docId + '_worker';\n    var handler = new _util.MessageHandler(workerHandlerName, docId, port);\n    handler.postMessageTransfers = docParams.postMessageTransfers;\n    function ensureNotTerminated() {\n      if (terminated) {\n        throw new Error('Worker was terminated');\n      }\n    }\n    function startWorkerTask(task) {\n      WorkerTasks.push(task);\n    }\n    function finishWorkerTask(task) {\n      task.finish();\n      var i = WorkerTasks.indexOf(task);\n      WorkerTasks.splice(i, 1);\n    }\n    function loadDocument(recoveryMode) {\n      var loadDocumentCapability = (0, _util.createPromiseCapability)();\n      var parseSuccess = function parseSuccess() {\n        Promise.all([pdfManager.ensureDoc('numPages'), pdfManager.ensureDoc('fingerprint')]).then(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 2),\n              numPages = _ref4[0],\n              fingerprint = _ref4[1];\n\n          loadDocumentCapability.resolve({\n            numPages: numPages,\n            fingerprint: fingerprint\n          });\n        }, parseFailure);\n      };\n      var parseFailure = function parseFailure(e) {\n        loadDocumentCapability.reject(e);\n      };\n      pdfManager.ensureDoc('checkHeader', []).then(function () {\n        pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n          pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n        }, parseFailure);\n      }, parseFailure);\n      return loadDocumentCapability.promise;\n    }\n    function getPdfManager(data, evaluatorOptions) {\n      var pdfManagerCapability = (0, _util.createPromiseCapability)();\n      var pdfManager;\n      var source = data.source;\n      if (source.data) {\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        return pdfManagerCapability.promise;\n      }\n      var pdfStream,\n          cachedChunks = [];\n      try {\n        pdfStream = new PDFWorkerStream(handler);\n      } catch (ex) {\n        pdfManagerCapability.reject(ex);\n        return pdfManagerCapability.promise;\n      }\n      var fullRequest = pdfStream.getFullReader();\n      fullRequest.headersReady.then(function () {\n        if (!fullRequest.isRangeSupported) {\n          return;\n        }\n        var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n        pdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, {\n          msgHandler: handler,\n          url: source.url,\n          password: source.password,\n          length: fullRequest.contentLength,\n          disableAutoFetch: disableAutoFetch,\n          rangeChunkSize: source.rangeChunkSize\n        }, evaluatorOptions, docBaseUrl);\n        for (var i = 0; i < cachedChunks.length; i++) {\n          pdfManager.sendProgressiveData(cachedChunks[i]);\n        }\n        cachedChunks = [];\n        pdfManagerCapability.resolve(pdfManager);\n        cancelXHRs = null;\n      }).catch(function (reason) {\n        pdfManagerCapability.reject(reason);\n        cancelXHRs = null;\n      });\n      var loaded = 0;\n      var flushChunks = function flushChunks() {\n        var pdfFile = (0, _util.arraysToBytes)(cachedChunks);\n        if (source.length && pdfFile.length !== source.length) {\n          (0, _util.warn)('reported HTTP length is different from actual');\n        }\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        cachedChunks = [];\n      };\n      var readPromise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            ensureNotTerminated();\n            if (chunk.done) {\n              if (!pdfManager) {\n                flushChunks();\n              }\n              cancelXHRs = null;\n              return;\n            }\n            var data = chunk.value;\n            loaded += (0, _util.arrayByteLength)(data);\n            if (!fullRequest.isStreamingSupported) {\n              handler.send('DocProgress', {\n                loaded: loaded,\n                total: Math.max(loaded, fullRequest.contentLength || 0)\n              });\n            }\n            if (pdfManager) {\n              pdfManager.sendProgressiveData(data);\n            } else {\n              cachedChunks.push(data);\n            }\n            fullRequest.read().then(readChunk, reject);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        fullRequest.read().then(readChunk, reject);\n      });\n      readPromise.catch(function (e) {\n        pdfManagerCapability.reject(e);\n        cancelXHRs = null;\n      });\n      cancelXHRs = function cancelXHRs() {\n        pdfStream.cancelAllRequests('abort');\n      };\n      return pdfManagerCapability.promise;\n    }\n    function setupDoc(data) {\n      function onSuccess(doc) {\n        ensureNotTerminated();\n        handler.send('GetDoc', { pdfInfo: doc });\n      }\n      function onFailure(e) {\n        ensureNotTerminated();\n        if (e instanceof _util.PasswordException) {\n          var task = new WorkerTask('PasswordException: response ' + e.code);\n          startWorkerTask(task);\n          handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n            finishWorkerTask(task);\n            pdfManager.updatePassword(data.password);\n            pdfManagerReady();\n          }).catch(function (ex) {\n            finishWorkerTask(task);\n            handler.send('PasswordException', ex);\n          }.bind(null, e));\n        } else if (e instanceof _util.InvalidPDFException) {\n          handler.send('InvalidPDF', e);\n        } else if (e instanceof _util.MissingPDFException) {\n          handler.send('MissingPDF', e);\n        } else if (e instanceof _util.UnexpectedResponseException) {\n          handler.send('UnexpectedResponse', e);\n        } else {\n          handler.send('UnknownError', new _util.UnknownErrorException(e.message, e.toString()));\n        }\n      }\n      function pdfManagerReady() {\n        ensureNotTerminated();\n        loadDocument(false).then(onSuccess, function loadFailure(ex) {\n          ensureNotTerminated();\n          if (!(ex instanceof _util.XRefParseException)) {\n            onFailure(ex);\n            return;\n          }\n          pdfManager.requestLoadedStream();\n          pdfManager.onLoadedStream().then(function () {\n            ensureNotTerminated();\n            loadDocument(true).then(onSuccess, onFailure);\n          });\n        }, onFailure);\n      }\n      ensureNotTerminated();\n      var evaluatorOptions = {\n        forceDataSchema: data.disableCreateObjectURL,\n        maxImageSize: data.maxImageSize,\n        disableFontFace: data.disableFontFace,\n        nativeImageDecoderSupport: data.nativeImageDecoderSupport,\n        ignoreErrors: data.ignoreErrors,\n        isEvalSupported: data.isEvalSupported\n      };\n      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n        if (terminated) {\n          newPdfManager.terminate();\n          throw new Error('Worker was terminated');\n        }\n        pdfManager = newPdfManager;\n        handler.send('PDFManagerReady', null);\n        pdfManager.onLoadedStream().then(function (stream) {\n          handler.send('DataLoaded', { length: stream.bytes.byteLength });\n        });\n      }).then(pdfManagerReady, onFailure);\n    }\n    handler.on('GetPage', function wphSetupGetPage(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        var rotatePromise = pdfManager.ensure(page, 'rotate');\n        var refPromise = pdfManager.ensure(page, 'ref');\n        var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n        var viewPromise = pdfManager.ensure(page, 'view');\n        return Promise.all([rotatePromise, refPromise, userUnitPromise, viewPromise]).then(function (results) {\n          return {\n            rotate: results[0],\n            ref: results[1],\n            userUnit: results[2],\n            view: results[3]\n          };\n        });\n      });\n    });\n    handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n      var ref = new _primitives.Ref(data.ref.num, data.ref.gen);\n      var catalog = pdfManager.pdfDocument.catalog;\n      return catalog.getPageIndex(ref);\n    });\n    handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n      return pdfManager.ensureCatalog('destinations');\n    });\n    handler.on('GetDestination', function wphSetupGetDestination(data) {\n      return pdfManager.ensureCatalog('getDestination', [data.id]);\n    });\n    handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n      return pdfManager.ensureCatalog('pageLabels');\n    });\n    handler.on('GetPageMode', function wphSetupGetPageMode(data) {\n      return pdfManager.ensureCatalog('pageMode');\n    });\n    handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n      return pdfManager.ensureCatalog('attachments');\n    });\n    handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n      return pdfManager.ensureCatalog('javaScript');\n    });\n    handler.on('GetOutline', function wphSetupGetOutline(data) {\n      return pdfManager.ensureCatalog('documentOutline');\n    });\n    handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n      return Promise.all([pdfManager.ensureDoc('documentInfo'), pdfManager.ensureCatalog('metadata')]);\n    });\n    handler.on('GetData', function wphSetupGetData(data) {\n      pdfManager.requestLoadedStream();\n      return pdfManager.onLoadedStream().then(function (stream) {\n        return stream.bytes;\n      });\n    });\n    handler.on('GetStats', function wphSetupGetStats(data) {\n      return pdfManager.pdfDocument.xref.stats;\n    });\n    handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n      });\n    });\n    handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n      var pageIndex = data.pageIndex;\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.getOperatorList({\n          handler: handler,\n          task: task,\n          intent: data.intent,\n          renderInteractiveForms: data.renderInteractiveForms\n        }).then(function (operatorList) {\n          finishWorkerTask(task);\n          (0, _util.info)('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n        }, function (e) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n          var wrappedException;\n          if (typeof e === 'string') {\n            wrappedException = {\n              message: e,\n              stack: minimumStackMessage\n            };\n          } else if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') {\n            wrappedException = {\n              message: e.message || e.toString(),\n              stack: e.stack || minimumStackMessage\n            };\n          } else {\n            wrappedException = {\n              message: 'Unknown exception type: ' + (typeof e === 'undefined' ? 'undefined' : _typeof(e)),\n              stack: minimumStackMessage\n            };\n          }\n          handler.send('PageError', {\n            pageNum: pageNum,\n            error: wrappedException,\n            intent: data.intent\n          });\n        });\n      });\n    }, this);\n    handler.on('GetTextContent', function wphExtractText(data, sink) {\n      var pageIndex = data.pageIndex;\n      sink.onPull = function (desiredSize) {};\n      sink.onCancel = function (reason) {};\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.extractTextContent({\n          handler: handler,\n          task: task,\n          sink: sink,\n          normalizeWhitespace: data.normalizeWhitespace,\n          combineTextItems: data.combineTextItems\n        }).then(function () {\n          finishWorkerTask(task);\n          (0, _util.info)('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n          sink.close();\n        }, function (reason) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          sink.error(reason);\n          throw reason;\n        });\n      });\n    });\n    handler.on('Cleanup', function wphCleanup(data) {\n      return pdfManager.cleanup();\n    });\n    handler.on('Terminate', function wphTerminate(data) {\n      terminated = true;\n      if (pdfManager) {\n        pdfManager.terminate();\n        pdfManager = null;\n      }\n      if (cancelXHRs) {\n        cancelXHRs();\n      }\n      var waitOn = [];\n      WorkerTasks.forEach(function (task) {\n        waitOn.push(task.finished);\n        task.terminate();\n      });\n      return Promise.all(waitOn).then(function () {\n        handler.destroy();\n        handler = null;\n      });\n    });\n    handler.on('Ready', function wphReady(data) {\n      setupDoc(docParams);\n      docParams = null;\n    });\n    return workerHandlerName;\n  },\n  initializeFromPort: function initializeFromPort(port) {\n    var handler = new _util.MessageHandler('worker', 'main', port);\n    WorkerMessageHandler.setup(handler, port);\n    handler.send('ready', null);\n  }\n};\nfunction isMessagePort(maybePort) {\n  return typeof maybePort.postMessage === 'function' && 'onmessage' in maybePort;\n}\nif (typeof window === 'undefined' && !(0, _is_node2.default)() && typeof self !== 'undefined' && isMessagePort(self)) {\n  WorkerMessageHandler.initializeFromPort(self);\n}\nexports.WorkerTask = WorkerTask;\nexports.WorkerMessageHandler = WorkerMessageHandler;\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar globalScope = __w_pdfjs_require__(76);\nif (!globalScope._pdfjsCompatibilityChecked) {\n  globalScope._pdfjsCompatibilityChecked = true;\n  var isNodeJS = __w_pdfjs_require__(44);\n  var hasDOM = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && (typeof document === 'undefined' ? 'undefined' : _typeof(document)) === 'object';\n  (function checkNodeBtoa() {\n    if (globalScope.btoa || !isNodeJS()) {\n      return;\n    }\n    globalScope.btoa = function (chars) {\n      return Buffer.from(chars, 'binary').toString('base64');\n    };\n  })();\n  (function checkNodeAtob() {\n    if (globalScope.atob || !isNodeJS()) {\n      return;\n    }\n    globalScope.atob = function (input) {\n      return Buffer.from(input, 'base64').toString('binary');\n    };\n  })();\n  (function checkCurrentScript() {\n    if (!hasDOM) {\n      return;\n    }\n    if ('currentScript' in document) {\n      return;\n    }\n    Object.defineProperty(document, 'currentScript', {\n      get: function get() {\n        var scripts = document.getElementsByTagName('script');\n        return scripts[scripts.length - 1];\n      },\n\n      enumerable: true,\n      configurable: true\n    });\n  })();\n  (function checkChildNodeRemove() {\n    if (!hasDOM) {\n      return;\n    }\n    if (typeof Element.prototype.remove !== 'undefined') {\n      return;\n    }\n    Element.prototype.remove = function () {\n      if (this.parentNode) {\n        this.parentNode.removeChild(this);\n      }\n    };\n  })();\n  (function checkStringIncludes() {\n    if (String.prototype.includes) {\n      return;\n    }\n    __w_pdfjs_require__(77);\n  })();\n  (function checkArrayIncludes() {\n    if (Array.prototype.includes) {\n      return;\n    }\n    __w_pdfjs_require__(82);\n  })();\n  (function checkMathLog2() {\n    if (Math.log2) {\n      return;\n    }\n    Math.log2 = __w_pdfjs_require__(85);\n  })();\n  (function checkNumberIsNaN() {\n    if (Number.isNaN) {\n      return;\n    }\n    Number.isNaN = __w_pdfjs_require__(87);\n  })();\n  (function checkNumberIsInteger() {\n    if (Number.isInteger) {\n      return;\n    }\n    Number.isInteger = __w_pdfjs_require__(89);\n  })();\n  (function checkPromise() {\n    if (globalScope.Promise) {\n      return;\n    }\n    globalScope.Promise = __w_pdfjs_require__(92);\n  })();\n  (function checkWeakMap() {\n    if (globalScope.WeakMap) {\n      return;\n    }\n    globalScope.WeakMap = __w_pdfjs_require__(111);\n  })();\n  (function checkURLConstructor() {\n    var hasWorkingUrl = false;\n    try {\n      if (typeof URL === 'function' && _typeof(URL.prototype) === 'object' && 'origin' in URL.prototype) {\n        var u = new URL('b', 'http://a');\n        u.pathname = 'c%20d';\n        hasWorkingUrl = u.href === 'http://a/c%20d';\n      }\n    } catch (e) {}\n    if (hasWorkingUrl) {\n      return;\n    }\n    var relative = Object.create(null);\n    relative['ftp'] = 21;\n    relative['file'] = 0;\n    relative['gopher'] = 70;\n    relative['http'] = 80;\n    relative['https'] = 443;\n    relative['ws'] = 80;\n    relative['wss'] = 443;\n    var relativePathDotMapping = Object.create(null);\n    relativePathDotMapping['%2e'] = '.';\n    relativePathDotMapping['.%2e'] = '..';\n    relativePathDotMapping['%2e.'] = '..';\n    relativePathDotMapping['%2e%2e'] = '..';\n    function isRelativeScheme(scheme) {\n      return relative[scheme] !== undefined;\n    }\n    function invalid() {\n      clear.call(this);\n      this._isInvalid = true;\n    }\n    function IDNAToASCII(h) {\n      if (h === '') {\n        invalid.call(this);\n      }\n      return h.toLowerCase();\n    }\n    function percentEscape(c) {\n      var unicode = c.charCodeAt(0);\n      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x3F, 0x60].indexOf(unicode) === -1) {\n        return c;\n      }\n      return encodeURIComponent(c);\n    }\n    function percentEscapeQuery(c) {\n      var unicode = c.charCodeAt(0);\n      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x60].indexOf(unicode) === -1) {\n        return c;\n      }\n      return encodeURIComponent(c);\n    }\n    var EOF,\n        ALPHA = /[a-zA-Z]/,\n        ALPHANUMERIC = /[a-zA-Z0-9\\+\\-\\.]/;\n    function parse(input, stateOverride, base) {\n      function err(message) {\n        errors.push(message);\n      }\n      var state = stateOverride || 'scheme start',\n          cursor = 0,\n          buffer = '',\n          seenAt = false,\n          seenBracket = false,\n          errors = [];\n      loop: while ((input[cursor - 1] !== EOF || cursor === 0) && !this._isInvalid) {\n        var c = input[cursor];\n        switch (state) {\n          case 'scheme start':\n            if (c && ALPHA.test(c)) {\n              buffer += c.toLowerCase();\n              state = 'scheme';\n            } else if (!stateOverride) {\n              buffer = '';\n              state = 'no scheme';\n              continue;\n            } else {\n              err('Invalid scheme.');\n              break loop;\n            }\n            break;\n          case 'scheme':\n            if (c && ALPHANUMERIC.test(c)) {\n              buffer += c.toLowerCase();\n            } else if (c === ':') {\n              this._scheme = buffer;\n              buffer = '';\n              if (stateOverride) {\n                break loop;\n              }\n              if (isRelativeScheme(this._scheme)) {\n                this._isRelative = true;\n              }\n              if (this._scheme === 'file') {\n                state = 'relative';\n              } else if (this._isRelative && base && base._scheme === this._scheme) {\n                state = 'relative or authority';\n              } else if (this._isRelative) {\n                state = 'authority first slash';\n              } else {\n                state = 'scheme data';\n              }\n            } else if (!stateOverride) {\n              buffer = '';\n              cursor = 0;\n              state = 'no scheme';\n              continue;\n            } else if (c === EOF) {\n              break loop;\n            } else {\n              err('Code point not allowed in scheme: ' + c);\n              break loop;\n            }\n            break;\n          case 'scheme data':\n            if (c === '?') {\n              this._query = '?';\n              state = 'query';\n            } else if (c === '#') {\n              this._fragment = '#';\n              state = 'fragment';\n            } else {\n              if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n                this._schemeData += percentEscape(c);\n              }\n            }\n            break;\n          case 'no scheme':\n            if (!base || !isRelativeScheme(base._scheme)) {\n              err('Missing scheme.');\n              invalid.call(this);\n            } else {\n              state = 'relative';\n              continue;\n            }\n            break;\n          case 'relative or authority':\n            if (c === '/' && input[cursor + 1] === '/') {\n              state = 'authority ignore slashes';\n            } else {\n              err('Expected /, got: ' + c);\n              state = 'relative';\n              continue;\n            }\n            break;\n          case 'relative':\n            this._isRelative = true;\n            if (this._scheme !== 'file') {\n              this._scheme = base._scheme;\n            }\n            if (c === EOF) {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = base._query;\n              this._username = base._username;\n              this._password = base._password;\n              break loop;\n            } else if (c === '/' || c === '\\\\') {\n              if (c === '\\\\') {\n                err('\\\\ is an invalid code point.');\n              }\n              state = 'relative slash';\n            } else if (c === '?') {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = '?';\n              this._username = base._username;\n              this._password = base._password;\n              state = 'query';\n            } else if (c === '#') {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = base._query;\n              this._fragment = '#';\n              this._username = base._username;\n              this._password = base._password;\n              state = 'fragment';\n            } else {\n              var nextC = input[cursor + 1];\n              var nextNextC = input[cursor + 2];\n              if (this._scheme !== 'file' || !ALPHA.test(c) || nextC !== ':' && nextC !== '|' || nextNextC !== EOF && nextNextC !== '/' && nextNextC !== '\\\\' && nextNextC !== '?' && nextNextC !== '#') {\n                this._host = base._host;\n                this._port = base._port;\n                this._username = base._username;\n                this._password = base._password;\n                this._path = base._path.slice();\n                this._path.pop();\n              }\n              state = 'relative path';\n              continue;\n            }\n            break;\n          case 'relative slash':\n            if (c === '/' || c === '\\\\') {\n              if (c === '\\\\') {\n                err('\\\\ is an invalid code point.');\n              }\n              if (this._scheme === 'file') {\n                state = 'file host';\n              } else {\n                state = 'authority ignore slashes';\n              }\n            } else {\n              if (this._scheme !== 'file') {\n                this._host = base._host;\n                this._port = base._port;\n                this._username = base._username;\n                this._password = base._password;\n              }\n              state = 'relative path';\n              continue;\n            }\n            break;\n          case 'authority first slash':\n            if (c === '/') {\n              state = 'authority second slash';\n            } else {\n              err('Expected \\'/\\', got: ' + c);\n              state = 'authority ignore slashes';\n              continue;\n            }\n            break;\n          case 'authority second slash':\n            state = 'authority ignore slashes';\n            if (c !== '/') {\n              err('Expected \\'/\\', got: ' + c);\n              continue;\n            }\n            break;\n          case 'authority ignore slashes':\n            if (c !== '/' && c !== '\\\\') {\n              state = 'authority';\n              continue;\n            } else {\n              err('Expected authority, got: ' + c);\n            }\n            break;\n          case 'authority':\n            if (c === '@') {\n              if (seenAt) {\n                err('@ already seen.');\n                buffer += '%40';\n              }\n              seenAt = true;\n              for (var i = 0; i < buffer.length; i++) {\n                var cp = buffer[i];\n                if (cp === '\\t' || cp === '\\n' || cp === '\\r') {\n                  err('Invalid whitespace in authority.');\n                  continue;\n                }\n                if (cp === ':' && this._password === null) {\n                  this._password = '';\n                  continue;\n                }\n                var tempC = percentEscape(cp);\n                if (this._password !== null) {\n                  this._password += tempC;\n                } else {\n                  this._username += tempC;\n                }\n              }\n              buffer = '';\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              cursor -= buffer.length;\n              buffer = '';\n              state = 'host';\n              continue;\n            } else {\n              buffer += c;\n            }\n            break;\n          case 'file host':\n            if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              if (buffer.length === 2 && ALPHA.test(buffer[0]) && (buffer[1] === ':' || buffer[1] === '|')) {\n                state = 'relative path';\n              } else if (buffer.length === 0) {\n                state = 'relative path start';\n              } else {\n                this._host = IDNAToASCII.call(this, buffer);\n                buffer = '';\n                state = 'relative path start';\n              }\n              continue;\n            } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n              err('Invalid whitespace in file host.');\n            } else {\n              buffer += c;\n            }\n            break;\n          case 'host':\n          case 'hostname':\n            if (c === ':' && !seenBracket) {\n              this._host = IDNAToASCII.call(this, buffer);\n              buffer = '';\n              state = 'port';\n              if (stateOverride === 'hostname') {\n                break loop;\n              }\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              this._host = IDNAToASCII.call(this, buffer);\n              buffer = '';\n              state = 'relative path start';\n              if (stateOverride) {\n                break loop;\n              }\n              continue;\n            } else if (c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              if (c === '[') {\n                seenBracket = true;\n              } else if (c === ']') {\n                seenBracket = false;\n              }\n              buffer += c;\n            } else {\n              err('Invalid code point in host/hostname: ' + c);\n            }\n            break;\n          case 'port':\n            if (/[0-9]/.test(c)) {\n              buffer += c;\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#' || stateOverride) {\n              if (buffer !== '') {\n                var temp = parseInt(buffer, 10);\n                if (temp !== relative[this._scheme]) {\n                  this._port = temp + '';\n                }\n                buffer = '';\n              }\n              if (stateOverride) {\n                break loop;\n              }\n              state = 'relative path start';\n              continue;\n            } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n              err('Invalid code point in port: ' + c);\n            } else {\n              invalid.call(this);\n            }\n            break;\n          case 'relative path start':\n            if (c === '\\\\') {\n              err('\\'\\\\\\' not allowed in path.');\n            }\n            state = 'relative path';\n            if (c !== '/' && c !== '\\\\') {\n              continue;\n            }\n            break;\n          case 'relative path':\n            if (c === EOF || c === '/' || c === '\\\\' || !stateOverride && (c === '?' || c === '#')) {\n              if (c === '\\\\') {\n                err('\\\\ not allowed in relative path.');\n              }\n              var tmp;\n              if (tmp = relativePathDotMapping[buffer.toLowerCase()]) {\n                buffer = tmp;\n              }\n              if (buffer === '..') {\n                this._path.pop();\n                if (c !== '/' && c !== '\\\\') {\n                  this._path.push('');\n                }\n              } else if (buffer === '.' && c !== '/' && c !== '\\\\') {\n                this._path.push('');\n              } else if (buffer !== '.') {\n                if (this._scheme === 'file' && this._path.length === 0 && buffer.length === 2 && ALPHA.test(buffer[0]) && buffer[1] === '|') {\n                  buffer = buffer[0] + ':';\n                }\n                this._path.push(buffer);\n              }\n              buffer = '';\n              if (c === '?') {\n                this._query = '?';\n                state = 'query';\n              } else if (c === '#') {\n                this._fragment = '#';\n                state = 'fragment';\n              }\n            } else if (c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              buffer += percentEscape(c);\n            }\n            break;\n          case 'query':\n            if (!stateOverride && c === '#') {\n              this._fragment = '#';\n              state = 'fragment';\n            } else if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              this._query += percentEscapeQuery(c);\n            }\n            break;\n          case 'fragment':\n            if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              this._fragment += c;\n            }\n            break;\n        }\n        cursor++;\n      }\n    }\n    function clear() {\n      this._scheme = '';\n      this._schemeData = '';\n      this._username = '';\n      this._password = null;\n      this._host = '';\n      this._port = '';\n      this._path = [];\n      this._query = '';\n      this._fragment = '';\n      this._isInvalid = false;\n      this._isRelative = false;\n    }\n    function JURL(url, base) {\n      if (base !== undefined && !(base instanceof JURL)) {\n        base = new JURL(String(base));\n      }\n      this._url = url;\n      clear.call(this);\n      var input = url.replace(/^[ \\t\\r\\n\\f]+|[ \\t\\r\\n\\f]+$/g, '');\n      parse.call(this, input, null, base);\n    }\n    JURL.prototype = {\n      toString: function toString() {\n        return this.href;\n      },\n\n      get href() {\n        if (this._isInvalid) {\n          return this._url;\n        }\n        var authority = '';\n        if (this._username !== '' || this._password !== null) {\n          authority = this._username + (this._password !== null ? ':' + this._password : '') + '@';\n        }\n        return this.protocol + (this._isRelative ? '//' + authority + this.host : '') + this.pathname + this._query + this._fragment;\n      },\n      set href(value) {\n        clear.call(this);\n        parse.call(this, value);\n      },\n      get protocol() {\n        return this._scheme + ':';\n      },\n      set protocol(value) {\n        if (this._isInvalid) {\n          return;\n        }\n        parse.call(this, value + ':', 'scheme start');\n      },\n      get host() {\n        return this._isInvalid ? '' : this._port ? this._host + ':' + this._port : this._host;\n      },\n      set host(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'host');\n      },\n      get hostname() {\n        return this._host;\n      },\n      set hostname(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'hostname');\n      },\n      get port() {\n        return this._port;\n      },\n      set port(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'port');\n      },\n      get pathname() {\n        return this._isInvalid ? '' : this._isRelative ? '/' + this._path.join('/') : this._schemeData;\n      },\n      set pathname(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        this._path = [];\n        parse.call(this, value, 'relative path start');\n      },\n      get search() {\n        return this._isInvalid || !this._query || this._query === '?' ? '' : this._query;\n      },\n      set search(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        this._query = '?';\n        if (value[0] === '?') {\n          value = value.slice(1);\n        }\n        parse.call(this, value, 'query');\n      },\n      get hash() {\n        return this._isInvalid || !this._fragment || this._fragment === '#' ? '' : this._fragment;\n      },\n      set hash(value) {\n        if (this._isInvalid) {\n          return;\n        }\n        this._fragment = '#';\n        if (value[0] === '#') {\n          value = value.slice(1);\n        }\n        parse.call(this, value, 'fragment');\n      },\n      get origin() {\n        var host;\n        if (this._isInvalid || !this._scheme) {\n          return '';\n        }\n        switch (this._scheme) {\n          case 'data':\n          case 'file':\n          case 'javascript':\n          case 'mailto':\n            return 'null';\n          case 'blob':\n            try {\n              return new JURL(this._schemeData).origin || 'null';\n            } catch (_) {}\n            return 'null';\n        }\n        host = this.host;\n        if (!host) {\n          return '';\n        }\n        return this._scheme + '://' + host;\n      }\n    };\n    var OriginalURL = globalScope.URL;\n    if (OriginalURL) {\n      JURL.createObjectURL = function (blob) {\n        return OriginalURL.createObjectURL.apply(OriginalURL, arguments);\n      };\n      JURL.revokeObjectURL = function (url) {\n        OriginalURL.revokeObjectURL(url);\n      };\n    }\n    globalScope.URL = JURL;\n  })();\n  (function checkObjectValues() {\n    if (Object.values) {\n      return;\n    }\n    Object.values = __w_pdfjs_require__(127);\n  })();\n}\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = typeof window !== 'undefined' && window.Math === Math ? window : typeof global !== 'undefined' && global.Math === Math ? global : typeof self !== 'undefined' && self.Math === Math ? self : {};\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(78);\nmodule.exports = __w_pdfjs_require__(7).String.includes;\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nvar context = __w_pdfjs_require__(79);\nvar INCLUDES = 'includes';\n$export($export.P + $export.F * __w_pdfjs_require__(81)(INCLUDES), 'String', {\n  includes: function includes(searchString) {\n    return !!~context(this, searchString, INCLUDES).indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isRegExp = __w_pdfjs_require__(80);\nvar defined = __w_pdfjs_require__(23);\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar cof = __w_pdfjs_require__(15);\nvar MATCH = __w_pdfjs_require__(2)('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar MATCH = __w_pdfjs_require__(2)('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) {}\n  }\n  return true;\n};\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(83);\nmodule.exports = __w_pdfjs_require__(7).Array.includes;\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nvar $includes = __w_pdfjs_require__(48)(true);\n$export($export.P, 'Array', {\n  includes: function includes(el) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n__w_pdfjs_require__(49)('includes');\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(32);\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(86);\nmodule.exports = __w_pdfjs_require__(7).Math.log2;\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\n$export($export.S, 'Math', {\n  log2: function log2(x) {\n    return Math.log(x) / Math.LN2;\n  }\n});\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(88);\nmodule.exports = __w_pdfjs_require__(7).Number.isNaN;\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\n$export($export.S, 'Number', {\n  isNaN: function isNaN(number) {\n    return number != number;\n  }\n});\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(90);\nmodule.exports = __w_pdfjs_require__(7).Number.isInteger;\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\n$export($export.S, 'Number', { isInteger: __w_pdfjs_require__(91) });\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(50);\n__w_pdfjs_require__(93);\n__w_pdfjs_require__(55);\n__w_pdfjs_require__(102);\n__w_pdfjs_require__(109);\n__w_pdfjs_require__(110);\nmodule.exports = __w_pdfjs_require__(7).Promise;\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $at = __w_pdfjs_require__(94)(true);\n__w_pdfjs_require__(51)(String, 'String', function (iterated) {\n  this._t = String(iterated);\n  this._i = 0;\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return {\n    value: undefined,\n    done: true\n  };\n  point = $at(O, index);\n  this._i += point.length;\n  return {\n    value: point,\n    done: false\n  };\n});\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(32);\nvar defined = __w_pdfjs_require__(23);\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar create = __w_pdfjs_require__(96);\nvar descriptor = __w_pdfjs_require__(29);\nvar setToStringTag = __w_pdfjs_require__(25);\nvar IteratorPrototype = {};\n__w_pdfjs_require__(12)(IteratorPrototype, __w_pdfjs_require__(2)('iterator'), function () {\n  return this;\n});\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar dPs = __w_pdfjs_require__(97);\nvar enumBugKeys = __w_pdfjs_require__(53);\nvar IE_PROTO = __w_pdfjs_require__(34)('IE_PROTO');\nvar Empty = function Empty() {};\nvar PROTOTYPE = 'prototype';\nvar _createDict = function createDict() {\n  var iframe = __w_pdfjs_require__(28)('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  __w_pdfjs_require__(54).appendChild(iframe);\n  iframe.src = 'javascript:';\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  _createDict = iframeDocument.F;\n  while (i--) {\n    delete _createDict[PROTOTYPE][enumBugKeys[i]];\n  }return _createDict();\n};\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    result[IE_PROTO] = O;\n  } else result = _createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar dP = __w_pdfjs_require__(16);\nvar anObject = __w_pdfjs_require__(8);\nvar getKeys = __w_pdfjs_require__(24);\nmodule.exports = __w_pdfjs_require__(13) ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) {\n    dP.f(O, P = keys[i++], Properties[P]);\n  }return O;\n};\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar has = __w_pdfjs_require__(10);\nvar toIObject = __w_pdfjs_require__(18);\nvar arrayIndexOf = __w_pdfjs_require__(48)(false);\nvar IE_PROTO = __w_pdfjs_require__(34)('IE_PROTO');\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) {\n    if (key != IE_PROTO) has(O, key) && result.push(key);\n  }while (names.length > i) {\n    if (has(O, key = names[i++])) {\n      ~arrayIndexOf(result, key) || result.push(key);\n    }\n  }return result;\n};\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar has = __w_pdfjs_require__(10);\nvar toObject = __w_pdfjs_require__(35);\nvar IE_PROTO = __w_pdfjs_require__(34)('IE_PROTO');\nvar ObjectProto = Object.prototype;\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  }\n  return O instanceof Object ? ObjectProto : null;\n};\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar addToUnscopables = __w_pdfjs_require__(49);\nvar step = __w_pdfjs_require__(101);\nvar Iterators = __w_pdfjs_require__(19);\nvar toIObject = __w_pdfjs_require__(18);\nmodule.exports = __w_pdfjs_require__(51)(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated);\n  this._i = 0;\n  this._k = kind;\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\nIterators.Arguments = Iterators.Array;\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (done, value) {\n  return {\n    value: value,\n    done: !!done\n  };\n};\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar LIBRARY = __w_pdfjs_require__(52);\nvar global = __w_pdfjs_require__(6);\nvar ctx = __w_pdfjs_require__(11);\nvar classof = __w_pdfjs_require__(33);\nvar $export = __w_pdfjs_require__(5);\nvar isObject = __w_pdfjs_require__(3);\nvar aFunction = __w_pdfjs_require__(17);\nvar anInstance = __w_pdfjs_require__(36);\nvar forOf = __w_pdfjs_require__(26);\nvar speciesConstructor = __w_pdfjs_require__(56);\nvar task = __w_pdfjs_require__(57).set;\nvar microtask = __w_pdfjs_require__(107)();\nvar newPromiseCapabilityModule = __w_pdfjs_require__(37);\nvar perform = __w_pdfjs_require__(58);\nvar promiseResolve = __w_pdfjs_require__(59);\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function empty() {};\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\nvar USE_NATIVE = !!function () {\n  try {\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[__w_pdfjs_require__(2)('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;\n  } catch (e) {}\n}();\nvar isThenable = function isThenable(it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function notify(promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function run(reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;else {\n            if (domain) domain.enter();\n            result = handler(value);\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) {\n      run(chain[i++]);\n    }promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function onUnhandled(promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({\n            promise: promise,\n            reason: value\n          });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    }\n    promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function isUnhandled(promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function onHandleUnhandled(promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({\n        promise: promise,\n        reason: promise._v\n      });\n    }\n  });\n};\nvar $reject = function $reject(value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise;\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function $resolve(value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise;\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = {\n          _w: promise,\n          _d: false\n        };\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({\n      _w: promise,\n      _d: false\n    }, e);\n  }\n};\nif (!USE_NATIVE) {\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  Internal = function Promise(executor) {\n    this._c = [];\n    this._a = undefined;\n    this._s = 0;\n    this._d = false;\n    this._v = undefined;\n    this._h = 0;\n    this._n = false;\n  };\n  Internal.prototype = __w_pdfjs_require__(38)($Promise.prototype, {\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    'catch': function _catch(onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function OwnPromiseCapability() {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function newPromiseCapability(C) {\n    return C === $Promise || C === Wrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);\n  };\n}\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\n__w_pdfjs_require__(25)($Promise, PROMISE);\n__w_pdfjs_require__(108)(PROMISE);\nWrapper = __w_pdfjs_require__(7)[PROMISE];\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && __w_pdfjs_require__(60)(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar Iterators = __w_pdfjs_require__(19);\nvar ITERATOR = __w_pdfjs_require__(2)('iterator');\nvar ArrayProto = Array.prototype;\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar classof = __w_pdfjs_require__(33);\nvar ITERATOR = __w_pdfjs_require__(2)('iterator');\nvar Iterators = __w_pdfjs_require__(19);\nmodule.exports = __w_pdfjs_require__(7).getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];\n};\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0:\n      return un ? fn() : fn.call(that);\n    case 1:\n      return un ? fn(args[0]) : fn.call(that, args[0]);\n    case 2:\n      return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);\n    case 3:\n      return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);\n    case 4:\n      return un ? fn(args[0], args[1], args[2], args[3]) : fn.call(that, args[0], args[1], args[2], args[3]);\n  }\n  return fn.apply(that, args);\n};\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(6);\nvar macrotask = __w_pdfjs_require__(57).set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = __w_pdfjs_require__(15)(process) == 'process';\nmodule.exports = function () {\n  var head, last, notify;\n  var flush = function flush() {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();else last = undefined;\n        throw e;\n      }\n    }\n    last = undefined;\n    if (parent) parent.enter();\n  };\n  if (isNode) {\n    notify = function notify() {\n      process.nextTick(flush);\n    };\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true });\n    notify = function notify() {\n      node.data = toggle = !toggle;\n    };\n  } else if (Promise && Promise.resolve) {\n    var promise = Promise.resolve();\n    notify = function notify() {\n      promise.then(flush);\n    };\n  } else {\n    notify = function notify() {\n      macrotask.call(global, flush);\n    };\n  }\n  return function (fn) {\n    var task = {\n      fn: fn,\n      next: undefined\n    };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    }\n    last = task;\n  };\n};\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(6);\nvar dP = __w_pdfjs_require__(16);\nvar DESCRIPTORS = __w_pdfjs_require__(13);\nvar SPECIES = __w_pdfjs_require__(2)('species');\nmodule.exports = function (KEY) {\n  var C = global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function get() {\n      return this;\n    }\n  });\n};\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nvar core = __w_pdfjs_require__(7);\nvar global = __w_pdfjs_require__(6);\nvar speciesConstructor = __w_pdfjs_require__(56);\nvar promiseResolve = __w_pdfjs_require__(59);\n$export($export.P + $export.R, 'Promise', {\n  'finally': function _finally(onFinally) {\n    var C = speciesConstructor(this, core.Promise || global.Promise);\n    var isFunction = typeof onFinally == 'function';\n    return this.then(isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () {\n        return x;\n      });\n    } : onFinally, isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () {\n        throw e;\n      });\n    } : onFinally);\n  }\n});\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nvar newPromiseCapability = __w_pdfjs_require__(37);\nvar perform = __w_pdfjs_require__(58);\n$export($export.S, 'Promise', {\n  'try': function _try(callbackfn) {\n    var promiseCapability = newPromiseCapability.f(this);\n    var result = perform(callbackfn);\n    (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n    return promiseCapability.promise;\n  }\n});\n\n/***/ }),\n/* 111 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(50);\n__w_pdfjs_require__(55);\n__w_pdfjs_require__(112);\n__w_pdfjs_require__(123);\n__w_pdfjs_require__(125);\nmodule.exports = __w_pdfjs_require__(7).WeakMap;\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar each = __w_pdfjs_require__(61)(0);\nvar redefine = __w_pdfjs_require__(9);\nvar meta = __w_pdfjs_require__(39);\nvar assign = __w_pdfjs_require__(116);\nvar weak = __w_pdfjs_require__(118);\nvar isObject = __w_pdfjs_require__(3);\nvar fails = __w_pdfjs_require__(14);\nvar validate = __w_pdfjs_require__(62);\nvar WEAK_MAP = 'WeakMap';\nvar getWeak = meta.getWeak;\nvar isExtensible = Object.isExtensible;\nvar uncaughtFrozenStore = weak.ufstore;\nvar tmp = {};\nvar InternalMap;\nvar wrapper = function wrapper(get) {\n  return function WeakMap() {\n    return get(this, arguments.length > 0 ? arguments[0] : undefined);\n  };\n};\nvar methods = {\n  get: function get(key) {\n    if (isObject(key)) {\n      var data = getWeak(key);\n      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);\n      return data ? data[this._i] : undefined;\n    }\n  },\n  set: function set(key, value) {\n    return weak.def(validate(this, WEAK_MAP), key, value);\n  }\n};\nvar $WeakMap = module.exports = __w_pdfjs_require__(119)(WEAK_MAP, wrapper, methods, weak, true, true);\nif (fails(function () {\n  return new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7;\n})) {\n  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);\n  assign(InternalMap.prototype, methods);\n  meta.NEED = true;\n  each(['delete', 'has', 'get', 'set'], function (key) {\n    var proto = $WeakMap.prototype;\n    var method = proto[key];\n    redefine(proto, key, function (a, b) {\n      if (isObject(a) && !isExtensible(a)) {\n        if (!this._f) this._f = new InternalMap();\n        var result = this._f[key](a, b);\n        return key == 'set' ? this : result;\n      }\n      return method.call(this, a, b);\n    });\n  });\n}\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar speciesConstructor = __w_pdfjs_require__(114);\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar isArray = __w_pdfjs_require__(115);\nvar SPECIES = __w_pdfjs_require__(2)('species');\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  }\n  return C === undefined ? Array : C;\n};\n\n/***/ }),\n/* 115 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(15);\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n\n/***/ }),\n/* 116 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getKeys = __w_pdfjs_require__(24);\nvar gOPS = __w_pdfjs_require__(117);\nvar pIE = __w_pdfjs_require__(40);\nvar toObject = __w_pdfjs_require__(35);\nvar IObject = __w_pdfjs_require__(30);\nvar $assign = Object.assign;\nmodule.exports = !$assign || __w_pdfjs_require__(14)(function () {\n  var A = {};\n  var B = {};\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) {\n    B[k] = k;\n  });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) {\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n    }\n  }\n  return T;\n} : $assign;\n\n/***/ }),\n/* 117 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nexports.f = Object.getOwnPropertySymbols;\n\n/***/ }),\n/* 118 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar redefineAll = __w_pdfjs_require__(38);\nvar getWeak = __w_pdfjs_require__(39).getWeak;\nvar anObject = __w_pdfjs_require__(8);\nvar isObject = __w_pdfjs_require__(3);\nvar anInstance = __w_pdfjs_require__(36);\nvar forOf = __w_pdfjs_require__(26);\nvar createArrayMethod = __w_pdfjs_require__(61);\nvar $has = __w_pdfjs_require__(10);\nvar validate = __w_pdfjs_require__(62);\nvar arrayFind = createArrayMethod(5);\nvar arrayFindIndex = createArrayMethod(6);\nvar id = 0;\nvar uncaughtFrozenStore = function uncaughtFrozenStore(that) {\n  return that._l || (that._l = new UncaughtFrozenStore());\n};\nvar UncaughtFrozenStore = function UncaughtFrozenStore() {\n  this.a = [];\n};\nvar findUncaughtFrozen = function findUncaughtFrozen(store, key) {\n  return arrayFind(store.a, function (it) {\n    return it[0] === key;\n  });\n};\nUncaughtFrozenStore.prototype = {\n  get: function get(key) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) return entry[1];\n  },\n  has: function has(key) {\n    return !!findUncaughtFrozen(this, key);\n  },\n  set: function set(key, value) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) entry[1] = value;else this.a.push([key, value]);\n  },\n  'delete': function _delete(key) {\n    var index = arrayFindIndex(this.a, function (it) {\n      return it[0] === key;\n    });\n    if (~index) this.a.splice(index, 1);\n    return !!~index;\n  }\n};\nmodule.exports = {\n  getConstructor: function getConstructor(wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;\n      that._i = id++;\n      that._l = undefined;\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      'delete': function _delete(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);\n        return data && $has(data, this._i) && delete data[this._i];\n      },\n      has: function has(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);\n        return data && $has(data, this._i);\n      }\n    });\n    return C;\n  },\n  def: function def(that, key, value) {\n    var data = getWeak(anObject(key), true);\n    if (data === true) uncaughtFrozenStore(that).set(key, value);else data[that._i] = value;\n    return that;\n  },\n  ufstore: uncaughtFrozenStore\n};\n\n/***/ }),\n/* 119 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(6);\nvar $export = __w_pdfjs_require__(5);\nvar redefine = __w_pdfjs_require__(9);\nvar redefineAll = __w_pdfjs_require__(38);\nvar meta = __w_pdfjs_require__(39);\nvar forOf = __w_pdfjs_require__(26);\nvar anInstance = __w_pdfjs_require__(36);\nvar isObject = __w_pdfjs_require__(3);\nvar fails = __w_pdfjs_require__(14);\nvar $iterDetect = __w_pdfjs_require__(60);\nvar setToStringTag = __w_pdfjs_require__(25);\nvar inheritIfRequired = __w_pdfjs_require__(120);\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n  var Base = global[NAME];\n  var C = Base;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var proto = C && C.prototype;\n  var O = {};\n  var fixMethod = function fixMethod(KEY) {\n    var fn = proto[KEY];\n    redefine(proto, KEY, KEY == 'delete' ? function (a) {\n      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'has' ? function has(a) {\n      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'get' ? function get(a) {\n      return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'add' ? function add(a) {\n      fn.call(this, a === 0 ? 0 : a);\n      return this;\n    } : function set(a, b) {\n      fn.call(this, a === 0 ? 0 : a, b);\n      return this;\n    });\n  };\n  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n    new C().entries().next();\n  }))) {\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    var instance = new C();\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    var THROWS_ON_PRIMITIVES = fails(function () {\n      instance.has(1);\n    });\n    var ACCEPT_ITERABLES = $iterDetect(function (iter) {\n      new C(iter);\n    });\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n      var $instance = new C();\n      var index = 5;\n      while (index--) {\n        $instance[ADDER](index, index);\n      }return !$instance.has(-0);\n    });\n    if (!ACCEPT_ITERABLES) {\n      C = wrapper(function (target, iterable) {\n        anInstance(target, C, NAME);\n        var that = inheritIfRequired(new Base(), target, C);\n        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n        return that;\n      });\n      C.prototype = proto;\n      proto.constructor = C;\n    }\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n    if (IS_WEAK && proto.clear) delete proto.clear;\n  }\n  setToStringTag(C, NAME);\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F * (C != Base), O);\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n  return C;\n};\n\n/***/ }),\n/* 120 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar setPrototypeOf = __w_pdfjs_require__(121).set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  }\n  return that;\n};\n\n/***/ }),\n/* 121 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar anObject = __w_pdfjs_require__(8);\nvar check = function check(O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? function (test, buggy, set) {\n    try {\n      set = __w_pdfjs_require__(11)(Function.call, __w_pdfjs_require__(122).f(Object.prototype, '__proto__').set, 2);\n      set(test, []);\n      buggy = !(test instanceof Array);\n    } catch (e) {\n      buggy = true;\n    }\n    return function setPrototypeOf(O, proto) {\n      check(O, proto);\n      if (buggy) O.__proto__ = proto;else set(O, proto);\n      return O;\n    };\n  }({}, false) : undefined),\n  check: check\n};\n\n/***/ }),\n/* 122 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar pIE = __w_pdfjs_require__(40);\nvar createDesc = __w_pdfjs_require__(29);\nvar toIObject = __w_pdfjs_require__(18);\nvar toPrimitive = __w_pdfjs_require__(46);\nvar has = __w_pdfjs_require__(10);\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(45);\nvar gOPD = Object.getOwnPropertyDescriptor;\nexports.f = __w_pdfjs_require__(13) ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) {}\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n/***/ }),\n/* 123 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(124)('WeakMap');\n\n/***/ }),\n/* 124 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, {\n    of: function of() {\n      var length = arguments.length;\n      var A = new Array(length);\n      while (length--) {\n        A[length] = arguments[length];\n      }return new this(A);\n    }\n  });\n};\n\n/***/ }),\n/* 125 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(126)('WeakMap');\n\n/***/ }),\n/* 126 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nvar aFunction = __w_pdfjs_require__(17);\nvar ctx = __w_pdfjs_require__(11);\nvar forOf = __w_pdfjs_require__(26);\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, {\n    from: function from(source) {\n      var mapFn = arguments[1];\n      var mapping, A, n, cb;\n      aFunction(this);\n      mapping = mapFn !== undefined;\n      if (mapping) aFunction(mapFn);\n      if (source == undefined) return new this();\n      A = [];\n      if (mapping) {\n        n = 0;\n        cb = ctx(mapFn, arguments[2], 2);\n        forOf(source, false, function (nextItem) {\n          A.push(cb(nextItem, n++));\n        });\n      } else {\n        forOf(source, false, A.push, A);\n      }\n      return new this(A);\n    }\n  });\n};\n\n/***/ }),\n/* 127 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(128);\nmodule.exports = __w_pdfjs_require__(7).Object.values;\n\n/***/ }),\n/* 128 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nvar $values = __w_pdfjs_require__(129)(false);\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n\n/***/ }),\n/* 129 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getKeys = __w_pdfjs_require__(24);\nvar toIObject = __w_pdfjs_require__(18);\nvar isEnum = __w_pdfjs_require__(40).f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      if (isEnum.call(O, key = keys[i++])) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }return result;\n  };\n};\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isReadableStreamSupported = false;\nif (typeof ReadableStream !== 'undefined') {\n  try {\n    new ReadableStream({\n      start: function start(controller) {\n        controller.close();\n      }\n    });\n    isReadableStreamSupported = true;\n  } catch (e) {}\n}\nif (isReadableStreamSupported) {\n  exports.ReadableStream = ReadableStream;\n} else {\n  exports.ReadableStream = __w_pdfjs_require__(131).ReadableStream;\n}\n\n/***/ }),\n/* 131 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function (e, a) {\n  for (var i in a) {\n    e[i] = a[i];\n  }\n})(exports, function (modules) {\n  var installedModules = {};\n  function __w_pdfjs_require__(moduleId) {\n    if (installedModules[moduleId]) return installedModules[moduleId].exports;\n    var module = installedModules[moduleId] = {\n      i: moduleId,\n      l: false,\n      exports: {}\n    };\n    modules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n    module.l = true;\n    return module.exports;\n  }\n  __w_pdfjs_require__.m = modules;\n  __w_pdfjs_require__.c = installedModules;\n  __w_pdfjs_require__.i = function (value) {\n    return value;\n  };\n  __w_pdfjs_require__.d = function (exports, name, getter) {\n    if (!__w_pdfjs_require__.o(exports, name)) {\n      Object.defineProperty(exports, name, {\n        configurable: false,\n        enumerable: true,\n        get: getter\n      });\n    }\n  };\n  __w_pdfjs_require__.n = function (module) {\n    var getter = module && module.__esModule ? function getDefault() {\n      return module['default'];\n    } : function getModuleExports() {\n      return module;\n    };\n    __w_pdfjs_require__.d(getter, 'a', getter);\n    return getter;\n  };\n  __w_pdfjs_require__.o = function (object, property) {\n    return Object.prototype.hasOwnProperty.call(object, property);\n  };\n  __w_pdfjs_require__.p = \"\";\n  return __w_pdfjs_require__(__w_pdfjs_require__.s = 7);\n}([function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n    return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n  };\n  var _require = __w_pdfjs_require__(1),\n      assert = _require.assert;\n  function IsPropertyKey(argument) {\n    return typeof argument === 'string' || (typeof argument === 'undefined' ? 'undefined' : _typeof(argument)) === 'symbol';\n  }\n  exports.typeIsObject = function (x) {\n    return (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && x !== null || typeof x === 'function';\n  };\n  exports.createDataProperty = function (o, p, v) {\n    assert(exports.typeIsObject(o));\n    Object.defineProperty(o, p, {\n      value: v,\n      writable: true,\n      enumerable: true,\n      configurable: true\n    });\n  };\n  exports.createArrayFromList = function (elements) {\n    return elements.slice();\n  };\n  exports.ArrayBufferCopy = function (dest, destOffset, src, srcOffset, n) {\n    new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n  };\n  exports.CreateIterResultObject = function (value, done) {\n    assert(typeof done === 'boolean');\n    var obj = {};\n    Object.defineProperty(obj, 'value', {\n      value: value,\n      enumerable: true,\n      writable: true,\n      configurable: true\n    });\n    Object.defineProperty(obj, 'done', {\n      value: done,\n      enumerable: true,\n      writable: true,\n      configurable: true\n    });\n    return obj;\n  };\n  exports.IsFiniteNonNegativeNumber = function (v) {\n    if (Number.isNaN(v)) {\n      return false;\n    }\n    if (v === Infinity) {\n      return false;\n    }\n    if (v < 0) {\n      return false;\n    }\n    return true;\n  };\n  function Call(F, V, args) {\n    if (typeof F !== 'function') {\n      throw new TypeError('Argument is not a function');\n    }\n    return Function.prototype.apply.call(F, V, args);\n  }\n  exports.InvokeOrNoop = function (O, P, args) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    var method = O[P];\n    if (method === undefined) {\n      return undefined;\n    }\n    return Call(method, O, args);\n  };\n  exports.PromiseInvokeOrNoop = function (O, P, args) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    try {\n      return Promise.resolve(exports.InvokeOrNoop(O, P, args));\n    } catch (returnValueE) {\n      return Promise.reject(returnValueE);\n    }\n  };\n  exports.PromiseInvokeOrPerformFallback = function (O, P, args, F, argsF) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    assert(Array.isArray(argsF));\n    var method = void 0;\n    try {\n      method = O[P];\n    } catch (methodE) {\n      return Promise.reject(methodE);\n    }\n    if (method === undefined) {\n      return F.apply(null, argsF);\n    }\n    try {\n      return Promise.resolve(Call(method, O, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  exports.TransferArrayBuffer = function (O) {\n    return O.slice();\n  };\n  exports.ValidateAndNormalizeHighWaterMark = function (highWaterMark) {\n    highWaterMark = Number(highWaterMark);\n    if (Number.isNaN(highWaterMark) || highWaterMark < 0) {\n      throw new RangeError('highWaterMark property of a queuing strategy must be non-negative and non-NaN');\n    }\n    return highWaterMark;\n  };\n  exports.ValidateAndNormalizeQueuingStrategy = function (size, highWaterMark) {\n    if (size !== undefined && typeof size !== 'function') {\n      throw new TypeError('size property of a queuing strategy must be a function');\n    }\n    highWaterMark = exports.ValidateAndNormalizeHighWaterMark(highWaterMark);\n    return {\n      size: size,\n      highWaterMark: highWaterMark\n    };\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  function rethrowAssertionErrorRejection(e) {\n    if (e && e.constructor === AssertionError) {\n      setTimeout(function () {\n        throw e;\n      }, 0);\n    }\n  }\n  function AssertionError(message) {\n    this.name = 'AssertionError';\n    this.message = message || '';\n    this.stack = new Error().stack;\n  }\n  AssertionError.prototype = Object.create(Error.prototype);\n  AssertionError.prototype.constructor = AssertionError;\n  function assert(value, message) {\n    if (!value) {\n      throw new AssertionError(message);\n    }\n  }\n  module.exports = {\n    rethrowAssertionErrorRejection: rethrowAssertionErrorRejection,\n    AssertionError: AssertionError,\n    assert: assert\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(0),\n      InvokeOrNoop = _require.InvokeOrNoop,\n      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\n      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\n      typeIsObject = _require.typeIsObject;\n  var _require2 = __w_pdfjs_require__(1),\n      assert = _require2.assert,\n      rethrowAssertionErrorRejection = _require2.rethrowAssertionErrorRejection;\n  var _require3 = __w_pdfjs_require__(3),\n      DequeueValue = _require3.DequeueValue,\n      EnqueueValueWithSize = _require3.EnqueueValueWithSize,\n      PeekQueueValue = _require3.PeekQueueValue,\n      ResetQueue = _require3.ResetQueue;\n  var WritableStream = function () {\n    function WritableStream() {\n      var underlyingSink = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          size = _ref.size,\n          _ref$highWaterMark = _ref.highWaterMark,\n          highWaterMark = _ref$highWaterMark === undefined ? 1 : _ref$highWaterMark;\n      _classCallCheck(this, WritableStream);\n      this._state = 'writable';\n      this._storedError = undefined;\n      this._writer = undefined;\n      this._writableStreamController = undefined;\n      this._writeRequests = [];\n      this._inFlightWriteRequest = undefined;\n      this._closeRequest = undefined;\n      this._inFlightCloseRequest = undefined;\n      this._pendingAbortRequest = undefined;\n      this._backpressure = false;\n      var type = underlyingSink.type;\n      if (type !== undefined) {\n        throw new RangeError('Invalid type is specified');\n      }\n      this._writableStreamController = new WritableStreamDefaultController(this, underlyingSink, size, highWaterMark);\n      this._writableStreamController.__startSteps();\n    }\n    _createClass(WritableStream, [{\n      key: 'abort',\n      value: function abort(reason) {\n        if (IsWritableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('abort'));\n        }\n        if (IsWritableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('Cannot abort a stream that already has a writer'));\n        }\n        return WritableStreamAbort(this, reason);\n      }\n    }, {\n      key: 'getWriter',\n      value: function getWriter() {\n        if (IsWritableStream(this) === false) {\n          throw streamBrandCheckException('getWriter');\n        }\n        return AcquireWritableStreamDefaultWriter(this);\n      }\n    }, {\n      key: 'locked',\n      get: function get() {\n        if (IsWritableStream(this) === false) {\n          throw streamBrandCheckException('locked');\n        }\n        return IsWritableStreamLocked(this);\n      }\n    }]);\n    return WritableStream;\n  }();\n  module.exports = {\n    AcquireWritableStreamDefaultWriter: AcquireWritableStreamDefaultWriter,\n    IsWritableStream: IsWritableStream,\n    IsWritableStreamLocked: IsWritableStreamLocked,\n    WritableStream: WritableStream,\n    WritableStreamAbort: WritableStreamAbort,\n    WritableStreamDefaultControllerError: WritableStreamDefaultControllerError,\n    WritableStreamDefaultWriterCloseWithErrorPropagation: WritableStreamDefaultWriterCloseWithErrorPropagation,\n    WritableStreamDefaultWriterRelease: WritableStreamDefaultWriterRelease,\n    WritableStreamDefaultWriterWrite: WritableStreamDefaultWriterWrite,\n    WritableStreamCloseQueuedOrInFlight: WritableStreamCloseQueuedOrInFlight\n  };\n  function AcquireWritableStreamDefaultWriter(stream) {\n    return new WritableStreamDefaultWriter(stream);\n  }\n  function IsWritableStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function IsWritableStreamLocked(stream) {\n    assert(IsWritableStream(stream) === true, 'IsWritableStreamLocked should only be used on known writable streams');\n    if (stream._writer === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamAbort(stream, reason) {\n    var state = stream._state;\n    if (state === 'closed') {\n      return Promise.resolve(undefined);\n    }\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    var error = new TypeError('Requested to abort');\n    if (stream._pendingAbortRequest !== undefined) {\n      return Promise.reject(error);\n    }\n    assert(state === 'writable' || state === 'erroring', 'state must be writable or erroring');\n    var wasAlreadyErroring = false;\n    if (state === 'erroring') {\n      wasAlreadyErroring = true;\n      reason = undefined;\n    }\n    var promise = new Promise(function (resolve, reject) {\n      stream._pendingAbortRequest = {\n        _resolve: resolve,\n        _reject: reject,\n        _reason: reason,\n        _wasAlreadyErroring: wasAlreadyErroring\n      };\n    });\n    if (wasAlreadyErroring === false) {\n      WritableStreamStartErroring(stream, error);\n    }\n    return promise;\n  }\n  function WritableStreamAddWriteRequest(stream) {\n    assert(IsWritableStreamLocked(stream) === true);\n    assert(stream._state === 'writable');\n    var promise = new Promise(function (resolve, reject) {\n      var writeRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._writeRequests.push(writeRequest);\n    });\n    return promise;\n  }\n  function WritableStreamDealWithRejection(stream, error) {\n    var state = stream._state;\n    if (state === 'writable') {\n      WritableStreamStartErroring(stream, error);\n      return;\n    }\n    assert(state === 'erroring');\n    WritableStreamFinishErroring(stream);\n  }\n  function WritableStreamStartErroring(stream, reason) {\n    assert(stream._storedError === undefined, 'stream._storedError === undefined');\n    assert(stream._state === 'writable', 'state must be writable');\n    var controller = stream._writableStreamController;\n    assert(controller !== undefined, 'controller must not be undefined');\n    stream._state = 'erroring';\n    stream._storedError = reason;\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n    }\n    if (WritableStreamHasOperationMarkedInFlight(stream) === false && controller._started === true) {\n      WritableStreamFinishErroring(stream);\n    }\n  }\n  function WritableStreamFinishErroring(stream) {\n    assert(stream._state === 'erroring', 'stream._state === erroring');\n    assert(WritableStreamHasOperationMarkedInFlight(stream) === false, 'WritableStreamHasOperationMarkedInFlight(stream) === false');\n    stream._state = 'errored';\n    stream._writableStreamController.__errorSteps();\n    var storedError = stream._storedError;\n    for (var i = 0; i < stream._writeRequests.length; i++) {\n      var writeRequest = stream._writeRequests[i];\n      writeRequest._reject(storedError);\n    }\n    stream._writeRequests = [];\n    if (stream._pendingAbortRequest === undefined) {\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      return;\n    }\n    var abortRequest = stream._pendingAbortRequest;\n    stream._pendingAbortRequest = undefined;\n    if (abortRequest._wasAlreadyErroring === true) {\n      abortRequest._reject(storedError);\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      return;\n    }\n    var promise = stream._writableStreamController.__abortSteps(abortRequest._reason);\n    promise.then(function () {\n      abortRequest._resolve();\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    }, function (reason) {\n      abortRequest._reject(reason);\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    });\n  }\n  function WritableStreamFinishInFlightWrite(stream) {\n    assert(stream._inFlightWriteRequest !== undefined);\n    stream._inFlightWriteRequest._resolve(undefined);\n    stream._inFlightWriteRequest = undefined;\n  }\n  function WritableStreamFinishInFlightWriteWithError(stream, error) {\n    assert(stream._inFlightWriteRequest !== undefined);\n    stream._inFlightWriteRequest._reject(error);\n    stream._inFlightWriteRequest = undefined;\n    assert(stream._state === 'writable' || stream._state === 'erroring');\n    WritableStreamDealWithRejection(stream, error);\n  }\n  function WritableStreamFinishInFlightClose(stream) {\n    assert(stream._inFlightCloseRequest !== undefined);\n    stream._inFlightCloseRequest._resolve(undefined);\n    stream._inFlightCloseRequest = undefined;\n    var state = stream._state;\n    assert(state === 'writable' || state === 'erroring');\n    if (state === 'erroring') {\n      stream._storedError = undefined;\n      if (stream._pendingAbortRequest !== undefined) {\n        stream._pendingAbortRequest._resolve();\n        stream._pendingAbortRequest = undefined;\n      }\n    }\n    stream._state = 'closed';\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      defaultWriterClosedPromiseResolve(writer);\n    }\n    assert(stream._pendingAbortRequest === undefined, 'stream._pendingAbortRequest === undefined');\n    assert(stream._storedError === undefined, 'stream._storedError === undefined');\n  }\n  function WritableStreamFinishInFlightCloseWithError(stream, error) {\n    assert(stream._inFlightCloseRequest !== undefined);\n    stream._inFlightCloseRequest._reject(error);\n    stream._inFlightCloseRequest = undefined;\n    assert(stream._state === 'writable' || stream._state === 'erroring');\n    if (stream._pendingAbortRequest !== undefined) {\n      stream._pendingAbortRequest._reject(error);\n      stream._pendingAbortRequest = undefined;\n    }\n    WritableStreamDealWithRejection(stream, error);\n  }\n  function WritableStreamCloseQueuedOrInFlight(stream) {\n    if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamHasOperationMarkedInFlight(stream) {\n    if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamMarkCloseRequestInFlight(stream) {\n    assert(stream._inFlightCloseRequest === undefined);\n    assert(stream._closeRequest !== undefined);\n    stream._inFlightCloseRequest = stream._closeRequest;\n    stream._closeRequest = undefined;\n  }\n  function WritableStreamMarkFirstWriteRequestInFlight(stream) {\n    assert(stream._inFlightWriteRequest === undefined, 'there must be no pending write request');\n    assert(stream._writeRequests.length !== 0, 'writeRequests must not be empty');\n    stream._inFlightWriteRequest = stream._writeRequests.shift();\n  }\n  function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n    assert(stream._state === 'errored', '_stream_.[[state]] is `\"errored\"`');\n    if (stream._closeRequest !== undefined) {\n      assert(stream._inFlightCloseRequest === undefined);\n      stream._closeRequest._reject(stream._storedError);\n      stream._closeRequest = undefined;\n    }\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      defaultWriterClosedPromiseReject(writer, stream._storedError);\n      writer._closedPromise.catch(function () {});\n    }\n  }\n  function WritableStreamUpdateBackpressure(stream, backpressure) {\n    assert(stream._state === 'writable');\n    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n    var writer = stream._writer;\n    if (writer !== undefined && backpressure !== stream._backpressure) {\n      if (backpressure === true) {\n        defaultWriterReadyPromiseReset(writer);\n      } else {\n        assert(backpressure === false);\n        defaultWriterReadyPromiseResolve(writer);\n      }\n    }\n    stream._backpressure = backpressure;\n  }\n  var WritableStreamDefaultWriter = function () {\n    function WritableStreamDefaultWriter(stream) {\n      _classCallCheck(this, WritableStreamDefaultWriter);\n      if (IsWritableStream(stream) === false) {\n        throw new TypeError('WritableStreamDefaultWriter can only be constructed with a WritableStream instance');\n      }\n      if (IsWritableStreamLocked(stream) === true) {\n        throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n      }\n      this._ownerWritableStream = stream;\n      stream._writer = this;\n      var state = stream._state;\n      if (state === 'writable') {\n        if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._backpressure === true) {\n          defaultWriterReadyPromiseInitialize(this);\n        } else {\n          defaultWriterReadyPromiseInitializeAsResolved(this);\n        }\n        defaultWriterClosedPromiseInitialize(this);\n      } else if (state === 'erroring') {\n        defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n        this._readyPromise.catch(function () {});\n        defaultWriterClosedPromiseInitialize(this);\n      } else if (state === 'closed') {\n        defaultWriterReadyPromiseInitializeAsResolved(this);\n        defaultWriterClosedPromiseInitializeAsResolved(this);\n      } else {\n        assert(state === 'errored', 'state must be errored');\n        var storedError = stream._storedError;\n        defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n        this._readyPromise.catch(function () {});\n        defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n        this._closedPromise.catch(function () {});\n      }\n    }\n    _createClass(WritableStreamDefaultWriter, [{\n      key: 'abort',\n      value: function abort(reason) {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('abort'));\n        }\n        if (this._ownerWritableStream === undefined) {\n          return Promise.reject(defaultWriterLockException('abort'));\n        }\n        return WritableStreamDefaultWriterAbort(this, reason);\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('close'));\n        }\n        var stream = this._ownerWritableStream;\n        if (stream === undefined) {\n          return Promise.reject(defaultWriterLockException('close'));\n        }\n        if (WritableStreamCloseQueuedOrInFlight(stream) === true) {\n          return Promise.reject(new TypeError('cannot close an already-closing stream'));\n        }\n        return WritableStreamDefaultWriterClose(this);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          throw defaultWriterBrandCheckException('releaseLock');\n        }\n        var stream = this._ownerWritableStream;\n        if (stream === undefined) {\n          return;\n        }\n        assert(stream._writer !== undefined);\n        WritableStreamDefaultWriterRelease(this);\n      }\n    }, {\n      key: 'write',\n      value: function write(chunk) {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('write'));\n        }\n        if (this._ownerWritableStream === undefined) {\n          return Promise.reject(defaultWriterLockException('write to'));\n        }\n        return WritableStreamDefaultWriterWrite(this, chunk);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          throw defaultWriterBrandCheckException('desiredSize');\n        }\n        if (this._ownerWritableStream === undefined) {\n          throw defaultWriterLockException('desiredSize');\n        }\n        return WritableStreamDefaultWriterGetDesiredSize(this);\n      }\n    }, {\n      key: 'ready',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('ready'));\n        }\n        return this._readyPromise;\n      }\n    }]);\n    return WritableStreamDefaultWriter;\n  }();\n  function IsWritableStreamDefaultWriter(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamDefaultWriterAbort(writer, reason) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    return WritableStreamAbort(stream, reason);\n  }\n  function WritableStreamDefaultWriterClose(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var state = stream._state;\n    if (state === 'closed' || state === 'errored') {\n      return Promise.reject(new TypeError('The stream (in ' + state + ' state) is not in the writable state and cannot be closed'));\n    }\n    assert(state === 'writable' || state === 'erroring');\n    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n    var promise = new Promise(function (resolve, reject) {\n      var closeRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._closeRequest = closeRequest;\n    });\n    if (stream._backpressure === true && state === 'writable') {\n      defaultWriterReadyPromiseResolve(writer);\n    }\n    WritableStreamDefaultControllerClose(stream._writableStreamController);\n    return promise;\n  }\n  function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var state = stream._state;\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n      return Promise.resolve();\n    }\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(state === 'writable' || state === 'erroring');\n    return WritableStreamDefaultWriterClose(writer);\n  }\n  function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n    if (writer._closedPromiseState === 'pending') {\n      defaultWriterClosedPromiseReject(writer, error);\n    } else {\n      defaultWriterClosedPromiseResetToRejected(writer, error);\n    }\n    writer._closedPromise.catch(function () {});\n  }\n  function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n    if (writer._readyPromiseState === 'pending') {\n      defaultWriterReadyPromiseReject(writer, error);\n    } else {\n      defaultWriterReadyPromiseResetToRejected(writer, error);\n    }\n    writer._readyPromise.catch(function () {});\n  }\n  function WritableStreamDefaultWriterGetDesiredSize(writer) {\n    var stream = writer._ownerWritableStream;\n    var state = stream._state;\n    if (state === 'errored' || state === 'erroring') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n  }\n  function WritableStreamDefaultWriterRelease(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    assert(stream._writer === writer);\n    var releasedError = new TypeError('Writer was released and can no longer be used to monitor the stream\\'s closedness');\n    WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n    WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n    stream._writer = undefined;\n    writer._ownerWritableStream = undefined;\n  }\n  function WritableStreamDefaultWriterWrite(writer, chunk) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var controller = stream._writableStreamController;\n    var chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n    if (stream !== writer._ownerWritableStream) {\n      return Promise.reject(defaultWriterLockException('write to'));\n    }\n    var state = stream._state;\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n      return Promise.reject(new TypeError('The stream is closing or closed and cannot be written to'));\n    }\n    if (state === 'erroring') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(state === 'writable');\n    var promise = WritableStreamAddWriteRequest(stream);\n    WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n    return promise;\n  }\n  var WritableStreamDefaultController = function () {\n    function WritableStreamDefaultController(stream, underlyingSink, size, highWaterMark) {\n      _classCallCheck(this, WritableStreamDefaultController);\n      if (IsWritableStream(stream) === false) {\n        throw new TypeError('WritableStreamDefaultController can only be constructed with a WritableStream instance');\n      }\n      if (stream._writableStreamController !== undefined) {\n        throw new TypeError('WritableStreamDefaultController instances can only be created by the WritableStream constructor');\n      }\n      this._controlledWritableStream = stream;\n      this._underlyingSink = underlyingSink;\n      this._queue = undefined;\n      this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._started = false;\n      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\n      this._strategySize = normalizedStrategy.size;\n      this._strategyHWM = normalizedStrategy.highWaterMark;\n      var backpressure = WritableStreamDefaultControllerGetBackpressure(this);\n      WritableStreamUpdateBackpressure(stream, backpressure);\n    }\n    _createClass(WritableStreamDefaultController, [{\n      key: 'error',\n      value: function error(e) {\n        if (IsWritableStreamDefaultController(this) === false) {\n          throw new TypeError('WritableStreamDefaultController.prototype.error can only be used on a WritableStreamDefaultController');\n        }\n        var state = this._controlledWritableStream._state;\n        if (state !== 'writable') {\n          return;\n        }\n        WritableStreamDefaultControllerError(this, e);\n      }\n    }, {\n      key: '__abortSteps',\n      value: function __abortSteps(reason) {\n        return PromiseInvokeOrNoop(this._underlyingSink, 'abort', [reason]);\n      }\n    }, {\n      key: '__errorSteps',\n      value: function __errorSteps() {\n        ResetQueue(this);\n      }\n    }, {\n      key: '__startSteps',\n      value: function __startSteps() {\n        var _this = this;\n        var startResult = InvokeOrNoop(this._underlyingSink, 'start', [this]);\n        var stream = this._controlledWritableStream;\n        Promise.resolve(startResult).then(function () {\n          assert(stream._state === 'writable' || stream._state === 'erroring');\n          _this._started = true;\n          WritableStreamDefaultControllerAdvanceQueueIfNeeded(_this);\n        }, function (r) {\n          assert(stream._state === 'writable' || stream._state === 'erroring');\n          _this._started = true;\n          WritableStreamDealWithRejection(stream, r);\n        }).catch(rethrowAssertionErrorRejection);\n      }\n    }]);\n    return WritableStreamDefaultController;\n  }();\n  function WritableStreamDefaultControllerClose(controller) {\n    EnqueueValueWithSize(controller, 'close', 0);\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n  }\n  function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n    var strategySize = controller._strategySize;\n    if (strategySize === undefined) {\n      return 1;\n    }\n    try {\n      return strategySize(chunk);\n    } catch (chunkSizeE) {\n      WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n      return 1;\n    }\n  }\n  function WritableStreamDefaultControllerGetDesiredSize(controller) {\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n    var writeRecord = { chunk: chunk };\n    try {\n      EnqueueValueWithSize(controller, writeRecord, chunkSize);\n    } catch (enqueueE) {\n      WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n      return;\n    }\n    var stream = controller._controlledWritableStream;\n    if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._state === 'writable') {\n      var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n      WritableStreamUpdateBackpressure(stream, backpressure);\n    }\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n  }\n  function IsWritableStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSink')) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n    var stream = controller._controlledWritableStream;\n    if (controller._started === false) {\n      return;\n    }\n    if (stream._inFlightWriteRequest !== undefined) {\n      return;\n    }\n    var state = stream._state;\n    if (state === 'closed' || state === 'errored') {\n      return;\n    }\n    if (state === 'erroring') {\n      WritableStreamFinishErroring(stream);\n      return;\n    }\n    if (controller._queue.length === 0) {\n      return;\n    }\n    var writeRecord = PeekQueueValue(controller);\n    if (writeRecord === 'close') {\n      WritableStreamDefaultControllerProcessClose(controller);\n    } else {\n      WritableStreamDefaultControllerProcessWrite(controller, writeRecord.chunk);\n    }\n  }\n  function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n    if (controller._controlledWritableStream._state === 'writable') {\n      WritableStreamDefaultControllerError(controller, error);\n    }\n  }\n  function WritableStreamDefaultControllerProcessClose(controller) {\n    var stream = controller._controlledWritableStream;\n    WritableStreamMarkCloseRequestInFlight(stream);\n    DequeueValue(controller);\n    assert(controller._queue.length === 0, 'queue must be empty once the final write record is dequeued');\n    var sinkClosePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'close', []);\n    sinkClosePromise.then(function () {\n      WritableStreamFinishInFlightClose(stream);\n    }, function (reason) {\n      WritableStreamFinishInFlightCloseWithError(stream, reason);\n    }).catch(rethrowAssertionErrorRejection);\n  }\n  function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n    var stream = controller._controlledWritableStream;\n    WritableStreamMarkFirstWriteRequestInFlight(stream);\n    var sinkWritePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'write', [chunk, controller]);\n    sinkWritePromise.then(function () {\n      WritableStreamFinishInFlightWrite(stream);\n      var state = stream._state;\n      assert(state === 'writable' || state === 'erroring');\n      DequeueValue(controller);\n      if (WritableStreamCloseQueuedOrInFlight(stream) === false && state === 'writable') {\n        var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n      }\n      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }, function (reason) {\n      WritableStreamFinishInFlightWriteWithError(stream, reason);\n    }).catch(rethrowAssertionErrorRejection);\n  }\n  function WritableStreamDefaultControllerGetBackpressure(controller) {\n    var desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n    return desiredSize <= 0;\n  }\n  function WritableStreamDefaultControllerError(controller, error) {\n    var stream = controller._controlledWritableStream;\n    assert(stream._state === 'writable');\n    WritableStreamStartErroring(stream, error);\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('WritableStream.prototype.' + name + ' can only be used on a WritableStream');\n  }\n  function defaultWriterBrandCheckException(name) {\n    return new TypeError('WritableStreamDefaultWriter.prototype.' + name + ' can only be used on a WritableStreamDefaultWriter');\n  }\n  function defaultWriterLockException(name) {\n    return new TypeError('Cannot ' + name + ' a stream using a released writer');\n  }\n  function defaultWriterClosedPromiseInitialize(writer) {\n    writer._closedPromise = new Promise(function (resolve, reject) {\n      writer._closedPromise_resolve = resolve;\n      writer._closedPromise_reject = reject;\n      writer._closedPromiseState = 'pending';\n    });\n  }\n  function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n    writer._closedPromise = Promise.reject(reason);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseInitializeAsResolved(writer) {\n    writer._closedPromise = Promise.resolve(undefined);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'resolved';\n  }\n  function defaultWriterClosedPromiseReject(writer, reason) {\n    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\n    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\n    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\n    writer._closedPromise_reject(reason);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseResetToRejected(writer, reason) {\n    assert(writer._closedPromise_resolve === undefined, 'writer._closedPromise_resolve === undefined');\n    assert(writer._closedPromise_reject === undefined, 'writer._closedPromise_reject === undefined');\n    assert(writer._closedPromiseState !== 'pending', 'writer._closedPromiseState is not pending');\n    writer._closedPromise = Promise.reject(reason);\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseResolve(writer) {\n    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\n    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\n    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\n    writer._closedPromise_resolve(undefined);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'resolved';\n  }\n  function defaultWriterReadyPromiseInitialize(writer) {\n    writer._readyPromise = new Promise(function (resolve, reject) {\n      writer._readyPromise_resolve = resolve;\n      writer._readyPromise_reject = reject;\n    });\n    writer._readyPromiseState = 'pending';\n  }\n  function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n    writer._readyPromise = Promise.reject(reason);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseInitializeAsResolved(writer) {\n    writer._readyPromise = Promise.resolve(undefined);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'fulfilled';\n  }\n  function defaultWriterReadyPromiseReject(writer, reason) {\n    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\n    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\n    writer._readyPromise_reject(reason);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseReset(writer) {\n    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\n    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\n    writer._readyPromise = new Promise(function (resolve, reject) {\n      writer._readyPromise_resolve = resolve;\n      writer._readyPromise_reject = reject;\n    });\n    writer._readyPromiseState = 'pending';\n  }\n  function defaultWriterReadyPromiseResetToRejected(writer, reason) {\n    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\n    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\n    writer._readyPromise = Promise.reject(reason);\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseResolve(writer) {\n    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\n    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\n    writer._readyPromise_resolve(undefined);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'fulfilled';\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _require = __w_pdfjs_require__(0),\n      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber;\n  var _require2 = __w_pdfjs_require__(1),\n      assert = _require2.assert;\n  exports.DequeueValue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: DequeueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    assert(container._queue.length > 0, 'Spec-level failure: should never dequeue from an empty queue.');\n    var pair = container._queue.shift();\n    container._queueTotalSize -= pair.size;\n    if (container._queueTotalSize < 0) {\n      container._queueTotalSize = 0;\n    }\n    return pair.value;\n  };\n  exports.EnqueueValueWithSize = function (container, value, size) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: EnqueueValueWithSize should only be used on containers with [[queue]] and ' + '[[queueTotalSize]].');\n    size = Number(size);\n    if (!IsFiniteNonNegativeNumber(size)) {\n      throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n    }\n    container._queue.push({\n      value: value,\n      size: size\n    });\n    container._queueTotalSize += size;\n  };\n  exports.PeekQueueValue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: PeekQueueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    assert(container._queue.length > 0, 'Spec-level failure: should never peek at an empty queue.');\n    var pair = container._queue[0];\n    return pair.value;\n  };\n  exports.ResetQueue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: ResetQueue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    container._queue = [];\n    container._queueTotalSize = 0;\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(0),\n      ArrayBufferCopy = _require.ArrayBufferCopy,\n      CreateIterResultObject = _require.CreateIterResultObject,\n      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber,\n      InvokeOrNoop = _require.InvokeOrNoop,\n      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\n      TransferArrayBuffer = _require.TransferArrayBuffer,\n      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\n      ValidateAndNormalizeHighWaterMark = _require.ValidateAndNormalizeHighWaterMark;\n  var _require2 = __w_pdfjs_require__(0),\n      createArrayFromList = _require2.createArrayFromList,\n      createDataProperty = _require2.createDataProperty,\n      typeIsObject = _require2.typeIsObject;\n  var _require3 = __w_pdfjs_require__(1),\n      assert = _require3.assert,\n      rethrowAssertionErrorRejection = _require3.rethrowAssertionErrorRejection;\n  var _require4 = __w_pdfjs_require__(3),\n      DequeueValue = _require4.DequeueValue,\n      EnqueueValueWithSize = _require4.EnqueueValueWithSize,\n      ResetQueue = _require4.ResetQueue;\n  var _require5 = __w_pdfjs_require__(2),\n      AcquireWritableStreamDefaultWriter = _require5.AcquireWritableStreamDefaultWriter,\n      IsWritableStream = _require5.IsWritableStream,\n      IsWritableStreamLocked = _require5.IsWritableStreamLocked,\n      WritableStreamAbort = _require5.WritableStreamAbort,\n      WritableStreamDefaultWriterCloseWithErrorPropagation = _require5.WritableStreamDefaultWriterCloseWithErrorPropagation,\n      WritableStreamDefaultWriterRelease = _require5.WritableStreamDefaultWriterRelease,\n      WritableStreamDefaultWriterWrite = _require5.WritableStreamDefaultWriterWrite,\n      WritableStreamCloseQueuedOrInFlight = _require5.WritableStreamCloseQueuedOrInFlight;\n  var ReadableStream = function () {\n    function ReadableStream() {\n      var underlyingSource = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          size = _ref.size,\n          highWaterMark = _ref.highWaterMark;\n      _classCallCheck(this, ReadableStream);\n      this._state = 'readable';\n      this._reader = undefined;\n      this._storedError = undefined;\n      this._disturbed = false;\n      this._readableStreamController = undefined;\n      var type = underlyingSource.type;\n      var typeString = String(type);\n      if (typeString === 'bytes') {\n        if (highWaterMark === undefined) {\n          highWaterMark = 0;\n        }\n        this._readableStreamController = new ReadableByteStreamController(this, underlyingSource, highWaterMark);\n      } else if (type === undefined) {\n        if (highWaterMark === undefined) {\n          highWaterMark = 1;\n        }\n        this._readableStreamController = new ReadableStreamDefaultController(this, underlyingSource, size, highWaterMark);\n      } else {\n        throw new RangeError('Invalid type is specified');\n      }\n    }\n    _createClass(ReadableStream, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (IsReadableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('cancel'));\n        }\n        if (IsReadableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('Cannot cancel a stream that already has a reader'));\n        }\n        return ReadableStreamCancel(this, reason);\n      }\n    }, {\n      key: 'getReader',\n      value: function getReader() {\n        var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            mode = _ref2.mode;\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('getReader');\n        }\n        if (mode === undefined) {\n          return AcquireReadableStreamDefaultReader(this);\n        }\n        mode = String(mode);\n        if (mode === 'byob') {\n          return AcquireReadableStreamBYOBReader(this);\n        }\n        throw new RangeError('Invalid mode is specified');\n      }\n    }, {\n      key: 'pipeThrough',\n      value: function pipeThrough(_ref3, options) {\n        var writable = _ref3.writable,\n            readable = _ref3.readable;\n        var promise = this.pipeTo(writable, options);\n        ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise);\n        return readable;\n      }\n    }, {\n      key: 'pipeTo',\n      value: function pipeTo(dest) {\n        var _this = this;\n        var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n            preventClose = _ref4.preventClose,\n            preventAbort = _ref4.preventAbort,\n            preventCancel = _ref4.preventCancel;\n        if (IsReadableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('pipeTo'));\n        }\n        if (IsWritableStream(dest) === false) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo\\'s first argument must be a WritableStream'));\n        }\n        preventClose = Boolean(preventClose);\n        preventAbort = Boolean(preventAbort);\n        preventCancel = Boolean(preventCancel);\n        if (IsReadableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n        }\n        if (IsWritableStreamLocked(dest) === true) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n        }\n        var reader = AcquireReadableStreamDefaultReader(this);\n        var writer = AcquireWritableStreamDefaultWriter(dest);\n        var shuttingDown = false;\n        var currentWrite = Promise.resolve();\n        return new Promise(function (resolve, reject) {\n          function pipeLoop() {\n            currentWrite = Promise.resolve();\n            if (shuttingDown === true) {\n              return Promise.resolve();\n            }\n            return writer._readyPromise.then(function () {\n              return ReadableStreamDefaultReaderRead(reader).then(function (_ref5) {\n                var value = _ref5.value,\n                    done = _ref5.done;\n                if (done === true) {\n                  return;\n                }\n                currentWrite = WritableStreamDefaultWriterWrite(writer, value).catch(function () {});\n              });\n            }).then(pipeLoop);\n          }\n          isOrBecomesErrored(_this, reader._closedPromise, function (storedError) {\n            if (preventAbort === false) {\n              shutdownWithAction(function () {\n                return WritableStreamAbort(dest, storedError);\n              }, true, storedError);\n            } else {\n              shutdown(true, storedError);\n            }\n          });\n          isOrBecomesErrored(dest, writer._closedPromise, function (storedError) {\n            if (preventCancel === false) {\n              shutdownWithAction(function () {\n                return ReadableStreamCancel(_this, storedError);\n              }, true, storedError);\n            } else {\n              shutdown(true, storedError);\n            }\n          });\n          isOrBecomesClosed(_this, reader._closedPromise, function () {\n            if (preventClose === false) {\n              shutdownWithAction(function () {\n                return WritableStreamDefaultWriterCloseWithErrorPropagation(writer);\n              });\n            } else {\n              shutdown();\n            }\n          });\n          if (WritableStreamCloseQueuedOrInFlight(dest) === true || dest._state === 'closed') {\n            var destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n            if (preventCancel === false) {\n              shutdownWithAction(function () {\n                return ReadableStreamCancel(_this, destClosed);\n              }, true, destClosed);\n            } else {\n              shutdown(true, destClosed);\n            }\n          }\n          pipeLoop().catch(function (err) {\n            currentWrite = Promise.resolve();\n            rethrowAssertionErrorRejection(err);\n          });\n          function waitForWritesToFinish() {\n            var oldCurrentWrite = currentWrite;\n            return currentWrite.then(function () {\n              return oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined;\n            });\n          }\n          function isOrBecomesErrored(stream, promise, action) {\n            if (stream._state === 'errored') {\n              action(stream._storedError);\n            } else {\n              promise.catch(action).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function isOrBecomesClosed(stream, promise, action) {\n            if (stream._state === 'closed') {\n              action();\n            } else {\n              promise.then(action).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function shutdownWithAction(action, originalIsError, originalError) {\n            if (shuttingDown === true) {\n              return;\n            }\n            shuttingDown = true;\n            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n              waitForWritesToFinish().then(doTheRest);\n            } else {\n              doTheRest();\n            }\n            function doTheRest() {\n              action().then(function () {\n                return finalize(originalIsError, originalError);\n              }, function (newError) {\n                return finalize(true, newError);\n              }).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function shutdown(isError, error) {\n            if (shuttingDown === true) {\n              return;\n            }\n            shuttingDown = true;\n            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n              waitForWritesToFinish().then(function () {\n                return finalize(isError, error);\n              }).catch(rethrowAssertionErrorRejection);\n            } else {\n              finalize(isError, error);\n            }\n          }\n          function finalize(isError, error) {\n            WritableStreamDefaultWriterRelease(writer);\n            ReadableStreamReaderGenericRelease(reader);\n            if (isError) {\n              reject(error);\n            } else {\n              resolve(undefined);\n            }\n          }\n        });\n      }\n    }, {\n      key: 'tee',\n      value: function tee() {\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('tee');\n        }\n        var branches = ReadableStreamTee(this, false);\n        return createArrayFromList(branches);\n      }\n    }, {\n      key: 'locked',\n      get: function get() {\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('locked');\n        }\n        return IsReadableStreamLocked(this);\n      }\n    }]);\n    return ReadableStream;\n  }();\n  module.exports = {\n    ReadableStream: ReadableStream,\n    IsReadableStreamDisturbed: IsReadableStreamDisturbed,\n    ReadableStreamDefaultControllerClose: ReadableStreamDefaultControllerClose,\n    ReadableStreamDefaultControllerEnqueue: ReadableStreamDefaultControllerEnqueue,\n    ReadableStreamDefaultControllerError: ReadableStreamDefaultControllerError,\n    ReadableStreamDefaultControllerGetDesiredSize: ReadableStreamDefaultControllerGetDesiredSize\n  };\n  function AcquireReadableStreamBYOBReader(stream) {\n    return new ReadableStreamBYOBReader(stream);\n  }\n  function AcquireReadableStreamDefaultReader(stream) {\n    return new ReadableStreamDefaultReader(stream);\n  }\n  function IsReadableStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamDisturbed(stream) {\n    assert(IsReadableStream(stream) === true, 'IsReadableStreamDisturbed should only be used on known readable streams');\n    return stream._disturbed;\n  }\n  function IsReadableStreamLocked(stream) {\n    assert(IsReadableStream(stream) === true, 'IsReadableStreamLocked should only be used on known readable streams');\n    if (stream._reader === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamTee(stream, cloneForBranch2) {\n    assert(IsReadableStream(stream) === true);\n    assert(typeof cloneForBranch2 === 'boolean');\n    var reader = AcquireReadableStreamDefaultReader(stream);\n    var teeState = {\n      closedOrErrored: false,\n      canceled1: false,\n      canceled2: false,\n      reason1: undefined,\n      reason2: undefined\n    };\n    teeState.promise = new Promise(function (resolve) {\n      teeState._resolve = resolve;\n    });\n    var pull = create_ReadableStreamTeePullFunction();\n    pull._reader = reader;\n    pull._teeState = teeState;\n    pull._cloneForBranch2 = cloneForBranch2;\n    var cancel1 = create_ReadableStreamTeeBranch1CancelFunction();\n    cancel1._stream = stream;\n    cancel1._teeState = teeState;\n    var cancel2 = create_ReadableStreamTeeBranch2CancelFunction();\n    cancel2._stream = stream;\n    cancel2._teeState = teeState;\n    var underlyingSource1 = Object.create(Object.prototype);\n    createDataProperty(underlyingSource1, 'pull', pull);\n    createDataProperty(underlyingSource1, 'cancel', cancel1);\n    var branch1Stream = new ReadableStream(underlyingSource1);\n    var underlyingSource2 = Object.create(Object.prototype);\n    createDataProperty(underlyingSource2, 'pull', pull);\n    createDataProperty(underlyingSource2, 'cancel', cancel2);\n    var branch2Stream = new ReadableStream(underlyingSource2);\n    pull._branch1 = branch1Stream._readableStreamController;\n    pull._branch2 = branch2Stream._readableStreamController;\n    reader._closedPromise.catch(function (r) {\n      if (teeState.closedOrErrored === true) {\n        return;\n      }\n      ReadableStreamDefaultControllerError(pull._branch1, r);\n      ReadableStreamDefaultControllerError(pull._branch2, r);\n      teeState.closedOrErrored = true;\n    });\n    return [branch1Stream, branch2Stream];\n  }\n  function create_ReadableStreamTeePullFunction() {\n    function f() {\n      var reader = f._reader,\n          branch1 = f._branch1,\n          branch2 = f._branch2,\n          teeState = f._teeState;\n      return ReadableStreamDefaultReaderRead(reader).then(function (result) {\n        assert(typeIsObject(result));\n        var value = result.value;\n        var done = result.done;\n        assert(typeof done === 'boolean');\n        if (done === true && teeState.closedOrErrored === false) {\n          if (teeState.canceled1 === false) {\n            ReadableStreamDefaultControllerClose(branch1);\n          }\n          if (teeState.canceled2 === false) {\n            ReadableStreamDefaultControllerClose(branch2);\n          }\n          teeState.closedOrErrored = true;\n        }\n        if (teeState.closedOrErrored === true) {\n          return;\n        }\n        var value1 = value;\n        var value2 = value;\n        if (teeState.canceled1 === false) {\n          ReadableStreamDefaultControllerEnqueue(branch1, value1);\n        }\n        if (teeState.canceled2 === false) {\n          ReadableStreamDefaultControllerEnqueue(branch2, value2);\n        }\n      });\n    }\n    return f;\n  }\n  function create_ReadableStreamTeeBranch1CancelFunction() {\n    function f(reason) {\n      var stream = f._stream,\n          teeState = f._teeState;\n      teeState.canceled1 = true;\n      teeState.reason1 = reason;\n      if (teeState.canceled2 === true) {\n        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\n        var cancelResult = ReadableStreamCancel(stream, compositeReason);\n        teeState._resolve(cancelResult);\n      }\n      return teeState.promise;\n    }\n    return f;\n  }\n  function create_ReadableStreamTeeBranch2CancelFunction() {\n    function f(reason) {\n      var stream = f._stream,\n          teeState = f._teeState;\n      teeState.canceled2 = true;\n      teeState.reason2 = reason;\n      if (teeState.canceled1 === true) {\n        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\n        var cancelResult = ReadableStreamCancel(stream, compositeReason);\n        teeState._resolve(cancelResult);\n      }\n      return teeState.promise;\n    }\n    return f;\n  }\n  function ReadableStreamAddReadIntoRequest(stream) {\n    assert(IsReadableStreamBYOBReader(stream._reader) === true);\n    assert(stream._state === 'readable' || stream._state === 'closed');\n    var promise = new Promise(function (resolve, reject) {\n      var readIntoRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._reader._readIntoRequests.push(readIntoRequest);\n    });\n    return promise;\n  }\n  function ReadableStreamAddReadRequest(stream) {\n    assert(IsReadableStreamDefaultReader(stream._reader) === true);\n    assert(stream._state === 'readable');\n    var promise = new Promise(function (resolve, reject) {\n      var readRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._reader._readRequests.push(readRequest);\n    });\n    return promise;\n  }\n  function ReadableStreamCancel(stream, reason) {\n    stream._disturbed = true;\n    if (stream._state === 'closed') {\n      return Promise.resolve(undefined);\n    }\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    ReadableStreamClose(stream);\n    var sourceCancelPromise = stream._readableStreamController.__cancelSteps(reason);\n    return sourceCancelPromise.then(function () {\n      return undefined;\n    });\n  }\n  function ReadableStreamClose(stream) {\n    assert(stream._state === 'readable');\n    stream._state = 'closed';\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return undefined;\n    }\n    if (IsReadableStreamDefaultReader(reader) === true) {\n      for (var i = 0; i < reader._readRequests.length; i++) {\n        var _resolve = reader._readRequests[i]._resolve;\n        _resolve(CreateIterResultObject(undefined, true));\n      }\n      reader._readRequests = [];\n    }\n    defaultReaderClosedPromiseResolve(reader);\n    return undefined;\n  }\n  function ReadableStreamError(stream, e) {\n    assert(IsReadableStream(stream) === true, 'stream must be ReadableStream');\n    assert(stream._state === 'readable', 'state must be readable');\n    stream._state = 'errored';\n    stream._storedError = e;\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return undefined;\n    }\n    if (IsReadableStreamDefaultReader(reader) === true) {\n      for (var i = 0; i < reader._readRequests.length; i++) {\n        var readRequest = reader._readRequests[i];\n        readRequest._reject(e);\n      }\n      reader._readRequests = [];\n    } else {\n      assert(IsReadableStreamBYOBReader(reader), 'reader must be ReadableStreamBYOBReader');\n      for (var _i = 0; _i < reader._readIntoRequests.length; _i++) {\n        var readIntoRequest = reader._readIntoRequests[_i];\n        readIntoRequest._reject(e);\n      }\n      reader._readIntoRequests = [];\n    }\n    defaultReaderClosedPromiseReject(reader, e);\n    reader._closedPromise.catch(function () {});\n  }\n  function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n    var reader = stream._reader;\n    assert(reader._readIntoRequests.length > 0);\n    var readIntoRequest = reader._readIntoRequests.shift();\n    readIntoRequest._resolve(CreateIterResultObject(chunk, done));\n  }\n  function ReadableStreamFulfillReadRequest(stream, chunk, done) {\n    var reader = stream._reader;\n    assert(reader._readRequests.length > 0);\n    var readRequest = reader._readRequests.shift();\n    readRequest._resolve(CreateIterResultObject(chunk, done));\n  }\n  function ReadableStreamGetNumReadIntoRequests(stream) {\n    return stream._reader._readIntoRequests.length;\n  }\n  function ReadableStreamGetNumReadRequests(stream) {\n    return stream._reader._readRequests.length;\n  }\n  function ReadableStreamHasBYOBReader(stream) {\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return false;\n    }\n    if (IsReadableStreamBYOBReader(reader) === false) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamHasDefaultReader(stream) {\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return false;\n    }\n    if (IsReadableStreamDefaultReader(reader) === false) {\n      return false;\n    }\n    return true;\n  }\n  var ReadableStreamDefaultReader = function () {\n    function ReadableStreamDefaultReader(stream) {\n      _classCallCheck(this, ReadableStreamDefaultReader);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableStreamDefaultReader can only be constructed with a ReadableStream instance');\n      }\n      if (IsReadableStreamLocked(stream) === true) {\n        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n      }\n      ReadableStreamReaderGenericInitialize(this, stream);\n      this._readRequests = [];\n    }\n    _createClass(ReadableStreamDefaultReader, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('cancel'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('cancel'));\n        }\n        return ReadableStreamReaderGenericCancel(this, reason);\n      }\n    }, {\n      key: 'read',\n      value: function read() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('read'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('read from'));\n        }\n        return ReadableStreamDefaultReaderRead(this);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          throw defaultReaderBrandCheckException('releaseLock');\n        }\n        if (this._ownerReadableStream === undefined) {\n          return;\n        }\n        if (this._readRequests.length > 0) {\n          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n        }\n        ReadableStreamReaderGenericRelease(this);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }]);\n    return ReadableStreamDefaultReader;\n  }();\n  var ReadableStreamBYOBReader = function () {\n    function ReadableStreamBYOBReader(stream) {\n      _classCallCheck(this, ReadableStreamBYOBReader);\n      if (!IsReadableStream(stream)) {\n        throw new TypeError('ReadableStreamBYOBReader can only be constructed with a ReadableStream instance given a ' + 'byte source');\n      }\n      if (IsReadableByteStreamController(stream._readableStreamController) === false) {\n        throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' + 'source');\n      }\n      if (IsReadableStreamLocked(stream)) {\n        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n      }\n      ReadableStreamReaderGenericInitialize(this, stream);\n      this._readIntoRequests = [];\n    }\n    _createClass(ReadableStreamBYOBReader, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('cancel'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('cancel'));\n        }\n        return ReadableStreamReaderGenericCancel(this, reason);\n      }\n    }, {\n      key: 'read',\n      value: function read(view) {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('read'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('read from'));\n        }\n        if (!ArrayBuffer.isView(view)) {\n          return Promise.reject(new TypeError('view must be an array buffer view'));\n        }\n        if (view.byteLength === 0) {\n          return Promise.reject(new TypeError('view must have non-zero byteLength'));\n        }\n        return ReadableStreamBYOBReaderRead(this, view);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (!IsReadableStreamBYOBReader(this)) {\n          throw byobReaderBrandCheckException('releaseLock');\n        }\n        if (this._ownerReadableStream === undefined) {\n          return;\n        }\n        if (this._readIntoRequests.length > 0) {\n          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n        }\n        ReadableStreamReaderGenericRelease(this);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }]);\n    return ReadableStreamBYOBReader;\n  }();\n  function IsReadableStreamBYOBReader(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamDefaultReader(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamReaderGenericInitialize(reader, stream) {\n    reader._ownerReadableStream = stream;\n    stream._reader = reader;\n    if (stream._state === 'readable') {\n      defaultReaderClosedPromiseInitialize(reader);\n    } else if (stream._state === 'closed') {\n      defaultReaderClosedPromiseInitializeAsResolved(reader);\n    } else {\n      assert(stream._state === 'errored', 'state must be errored');\n      defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n      reader._closedPromise.catch(function () {});\n    }\n  }\n  function ReadableStreamReaderGenericCancel(reader, reason) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    return ReadableStreamCancel(stream, reason);\n  }\n  function ReadableStreamReaderGenericRelease(reader) {\n    assert(reader._ownerReadableStream !== undefined);\n    assert(reader._ownerReadableStream._reader === reader);\n    if (reader._ownerReadableStream._state === 'readable') {\n      defaultReaderClosedPromiseReject(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n    } else {\n      defaultReaderClosedPromiseResetToRejected(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n    }\n    reader._closedPromise.catch(function () {});\n    reader._ownerReadableStream._reader = undefined;\n    reader._ownerReadableStream = undefined;\n  }\n  function ReadableStreamBYOBReaderRead(reader, view) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    stream._disturbed = true;\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    return ReadableByteStreamControllerPullInto(stream._readableStreamController, view);\n  }\n  function ReadableStreamDefaultReaderRead(reader) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    stream._disturbed = true;\n    if (stream._state === 'closed') {\n      return Promise.resolve(CreateIterResultObject(undefined, true));\n    }\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(stream._state === 'readable');\n    return stream._readableStreamController.__pullSteps();\n  }\n  var ReadableStreamDefaultController = function () {\n    function ReadableStreamDefaultController(stream, underlyingSource, size, highWaterMark) {\n      _classCallCheck(this, ReadableStreamDefaultController);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableStreamDefaultController can only be constructed with a ReadableStream instance');\n      }\n      if (stream._readableStreamController !== undefined) {\n        throw new TypeError('ReadableStreamDefaultController instances can only be created by the ReadableStream constructor');\n      }\n      this._controlledReadableStream = stream;\n      this._underlyingSource = underlyingSource;\n      this._queue = undefined;\n      this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._started = false;\n      this._closeRequested = false;\n      this._pullAgain = false;\n      this._pulling = false;\n      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\n      this._strategySize = normalizedStrategy.size;\n      this._strategyHWM = normalizedStrategy.highWaterMark;\n      var controller = this;\n      var startResult = InvokeOrNoop(underlyingSource, 'start', [this]);\n      Promise.resolve(startResult).then(function () {\n        controller._started = true;\n        assert(controller._pulling === false);\n        assert(controller._pullAgain === false);\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }, function (r) {\n        ReadableStreamDefaultControllerErrorIfNeeded(controller, r);\n      }).catch(rethrowAssertionErrorRejection);\n    }\n    _createClass(ReadableStreamDefaultController, [{\n      key: 'close',\n      value: function close() {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('close');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('The stream has already been closed; do not close it again!');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\n        }\n        ReadableStreamDefaultControllerClose(this);\n      }\n    }, {\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('enqueue');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('stream is closed or draining');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\n        }\n        return ReadableStreamDefaultControllerEnqueue(this, chunk);\n      }\n    }, {\n      key: 'error',\n      value: function error(e) {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('error');\n        }\n        var stream = this._controlledReadableStream;\n        if (stream._state !== 'readable') {\n          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\n        }\n        ReadableStreamDefaultControllerError(this, e);\n      }\n    }, {\n      key: '__cancelSteps',\n      value: function __cancelSteps(reason) {\n        ResetQueue(this);\n        return PromiseInvokeOrNoop(this._underlyingSource, 'cancel', [reason]);\n      }\n    }, {\n      key: '__pullSteps',\n      value: function __pullSteps() {\n        var stream = this._controlledReadableStream;\n        if (this._queue.length > 0) {\n          var chunk = DequeueValue(this);\n          if (this._closeRequested === true && this._queue.length === 0) {\n            ReadableStreamClose(stream);\n          } else {\n            ReadableStreamDefaultControllerCallPullIfNeeded(this);\n          }\n          return Promise.resolve(CreateIterResultObject(chunk, false));\n        }\n        var pendingPromise = ReadableStreamAddReadRequest(stream);\n        ReadableStreamDefaultControllerCallPullIfNeeded(this);\n        return pendingPromise;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('desiredSize');\n        }\n        return ReadableStreamDefaultControllerGetDesiredSize(this);\n      }\n    }]);\n    return ReadableStreamDefaultController;\n  }();\n  function IsReadableStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSource')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n    var shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n    if (shouldPull === false) {\n      return undefined;\n    }\n    if (controller._pulling === true) {\n      controller._pullAgain = true;\n      return undefined;\n    }\n    assert(controller._pullAgain === false);\n    controller._pulling = true;\n    var pullPromise = PromiseInvokeOrNoop(controller._underlyingSource, 'pull', [controller]);\n    pullPromise.then(function () {\n      controller._pulling = false;\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        return ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }\n      return undefined;\n    }, function (e) {\n      ReadableStreamDefaultControllerErrorIfNeeded(controller, e);\n    }).catch(rethrowAssertionErrorRejection);\n    return undefined;\n  }\n  function ReadableStreamDefaultControllerShouldCallPull(controller) {\n    var stream = controller._controlledReadableStream;\n    if (stream._state === 'closed' || stream._state === 'errored') {\n      return false;\n    }\n    if (controller._closeRequested === true) {\n      return false;\n    }\n    if (controller._started === false) {\n      return false;\n    }\n    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      return true;\n    }\n    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n    if (desiredSize > 0) {\n      return true;\n    }\n    return false;\n  }\n  function ReadableStreamDefaultControllerClose(controller) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    controller._closeRequested = true;\n    if (controller._queue.length === 0) {\n      ReadableStreamClose(stream);\n    }\n  }\n  function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      ReadableStreamFulfillReadRequest(stream, chunk, false);\n    } else {\n      var chunkSize = 1;\n      if (controller._strategySize !== undefined) {\n        var strategySize = controller._strategySize;\n        try {\n          chunkSize = strategySize(chunk);\n        } catch (chunkSizeE) {\n          ReadableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n          throw chunkSizeE;\n        }\n      }\n      try {\n        EnqueueValueWithSize(controller, chunk, chunkSize);\n      } catch (enqueueE) {\n        ReadableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n        throw enqueueE;\n      }\n    }\n    ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    return undefined;\n  }\n  function ReadableStreamDefaultControllerError(controller, e) {\n    var stream = controller._controlledReadableStream;\n    assert(stream._state === 'readable');\n    ResetQueue(controller);\n    ReadableStreamError(stream, e);\n  }\n  function ReadableStreamDefaultControllerErrorIfNeeded(controller, e) {\n    if (controller._controlledReadableStream._state === 'readable') {\n      ReadableStreamDefaultControllerError(controller, e);\n    }\n  }\n  function ReadableStreamDefaultControllerGetDesiredSize(controller) {\n    var stream = controller._controlledReadableStream;\n    var state = stream._state;\n    if (state === 'errored') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  var ReadableStreamBYOBRequest = function () {\n    function ReadableStreamBYOBRequest(controller, view) {\n      _classCallCheck(this, ReadableStreamBYOBRequest);\n      this._associatedReadableByteStreamController = controller;\n      this._view = view;\n    }\n    _createClass(ReadableStreamBYOBRequest, [{\n      key: 'respond',\n      value: function respond(bytesWritten) {\n        if (IsReadableStreamBYOBRequest(this) === false) {\n          throw byobRequestBrandCheckException('respond');\n        }\n        if (this._associatedReadableByteStreamController === undefined) {\n          throw new TypeError('This BYOB request has been invalidated');\n        }\n        ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n      }\n    }, {\n      key: 'respondWithNewView',\n      value: function respondWithNewView(view) {\n        if (IsReadableStreamBYOBRequest(this) === false) {\n          throw byobRequestBrandCheckException('respond');\n        }\n        if (this._associatedReadableByteStreamController === undefined) {\n          throw new TypeError('This BYOB request has been invalidated');\n        }\n        if (!ArrayBuffer.isView(view)) {\n          throw new TypeError('You can only respond with array buffer views');\n        }\n        ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n      }\n    }, {\n      key: 'view',\n      get: function get() {\n        return this._view;\n      }\n    }]);\n    return ReadableStreamBYOBRequest;\n  }();\n  var ReadableByteStreamController = function () {\n    function ReadableByteStreamController(stream, underlyingByteSource, highWaterMark) {\n      _classCallCheck(this, ReadableByteStreamController);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableByteStreamController can only be constructed with a ReadableStream instance given ' + 'a byte source');\n      }\n      if (stream._readableStreamController !== undefined) {\n        throw new TypeError('ReadableByteStreamController instances can only be created by the ReadableStream constructor given a byte ' + 'source');\n      }\n      this._controlledReadableStream = stream;\n      this._underlyingByteSource = underlyingByteSource;\n      this._pullAgain = false;\n      this._pulling = false;\n      ReadableByteStreamControllerClearPendingPullIntos(this);\n      this._queue = this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._closeRequested = false;\n      this._started = false;\n      this._strategyHWM = ValidateAndNormalizeHighWaterMark(highWaterMark);\n      var autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n      if (autoAllocateChunkSize !== undefined) {\n        if (Number.isInteger(autoAllocateChunkSize) === false || autoAllocateChunkSize <= 0) {\n          throw new RangeError('autoAllocateChunkSize must be a positive integer');\n        }\n      }\n      this._autoAllocateChunkSize = autoAllocateChunkSize;\n      this._pendingPullIntos = [];\n      var controller = this;\n      var startResult = InvokeOrNoop(underlyingByteSource, 'start', [this]);\n      Promise.resolve(startResult).then(function () {\n        controller._started = true;\n        assert(controller._pulling === false);\n        assert(controller._pullAgain === false);\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }, function (r) {\n        if (stream._state === 'readable') {\n          ReadableByteStreamControllerError(controller, r);\n        }\n      }).catch(rethrowAssertionErrorRejection);\n    }\n    _createClass(ReadableByteStreamController, [{\n      key: 'close',\n      value: function close() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('close');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('The stream has already been closed; do not close it again!');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\n        }\n        ReadableByteStreamControllerClose(this);\n      }\n    }, {\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('enqueue');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('stream is closed or draining');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\n        }\n        if (!ArrayBuffer.isView(chunk)) {\n          throw new TypeError('You can only enqueue array buffer views when using a ReadableByteStreamController');\n        }\n        ReadableByteStreamControllerEnqueue(this, chunk);\n      }\n    }, {\n      key: 'error',\n      value: function error(e) {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('error');\n        }\n        var stream = this._controlledReadableStream;\n        if (stream._state !== 'readable') {\n          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\n        }\n        ReadableByteStreamControllerError(this, e);\n      }\n    }, {\n      key: '__cancelSteps',\n      value: function __cancelSteps(reason) {\n        if (this._pendingPullIntos.length > 0) {\n          var firstDescriptor = this._pendingPullIntos[0];\n          firstDescriptor.bytesFilled = 0;\n        }\n        ResetQueue(this);\n        return PromiseInvokeOrNoop(this._underlyingByteSource, 'cancel', [reason]);\n      }\n    }, {\n      key: '__pullSteps',\n      value: function __pullSteps() {\n        var stream = this._controlledReadableStream;\n        assert(ReadableStreamHasDefaultReader(stream) === true);\n        if (this._queueTotalSize > 0) {\n          assert(ReadableStreamGetNumReadRequests(stream) === 0);\n          var entry = this._queue.shift();\n          this._queueTotalSize -= entry.byteLength;\n          ReadableByteStreamControllerHandleQueueDrain(this);\n          var view = void 0;\n          try {\n            view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n          } catch (viewE) {\n            return Promise.reject(viewE);\n          }\n          return Promise.resolve(CreateIterResultObject(view, false));\n        }\n        var autoAllocateChunkSize = this._autoAllocateChunkSize;\n        if (autoAllocateChunkSize !== undefined) {\n          var buffer = void 0;\n          try {\n            buffer = new ArrayBuffer(autoAllocateChunkSize);\n          } catch (bufferE) {\n            return Promise.reject(bufferE);\n          }\n          var pullIntoDescriptor = {\n            buffer: buffer,\n            byteOffset: 0,\n            byteLength: autoAllocateChunkSize,\n            bytesFilled: 0,\n            elementSize: 1,\n            ctor: Uint8Array,\n            readerType: 'default'\n          };\n          this._pendingPullIntos.push(pullIntoDescriptor);\n        }\n        var promise = ReadableStreamAddReadRequest(stream);\n        ReadableByteStreamControllerCallPullIfNeeded(this);\n        return promise;\n      }\n    }, {\n      key: 'byobRequest',\n      get: function get() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('byobRequest');\n        }\n        if (this._byobRequest === undefined && this._pendingPullIntos.length > 0) {\n          var firstDescriptor = this._pendingPullIntos[0];\n          var view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n          this._byobRequest = new ReadableStreamBYOBRequest(this, view);\n        }\n        return this._byobRequest;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('desiredSize');\n        }\n        return ReadableByteStreamControllerGetDesiredSize(this);\n      }\n    }]);\n    return ReadableByteStreamController;\n  }();\n  function IsReadableByteStreamController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingByteSource')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamBYOBRequest(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableByteStreamControllerCallPullIfNeeded(controller) {\n    var shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n    if (shouldPull === false) {\n      return undefined;\n    }\n    if (controller._pulling === true) {\n      controller._pullAgain = true;\n      return undefined;\n    }\n    assert(controller._pullAgain === false);\n    controller._pulling = true;\n    var pullPromise = PromiseInvokeOrNoop(controller._underlyingByteSource, 'pull', [controller]);\n    pullPromise.then(function () {\n      controller._pulling = false;\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }\n    }, function (e) {\n      if (controller._controlledReadableStream._state === 'readable') {\n        ReadableByteStreamControllerError(controller, e);\n      }\n    }).catch(rethrowAssertionErrorRejection);\n    return undefined;\n  }\n  function ReadableByteStreamControllerClearPendingPullIntos(controller) {\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    controller._pendingPullIntos = [];\n  }\n  function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n    assert(stream._state !== 'errored', 'state must not be errored');\n    var done = false;\n    if (stream._state === 'closed') {\n      assert(pullIntoDescriptor.bytesFilled === 0);\n      done = true;\n    }\n    var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n    if (pullIntoDescriptor.readerType === 'default') {\n      ReadableStreamFulfillReadRequest(stream, filledView, done);\n    } else {\n      assert(pullIntoDescriptor.readerType === 'byob');\n      ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n    }\n  }\n  function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n    var bytesFilled = pullIntoDescriptor.bytesFilled;\n    var elementSize = pullIntoDescriptor.elementSize;\n    assert(bytesFilled <= pullIntoDescriptor.byteLength);\n    assert(bytesFilled % elementSize === 0);\n    return new pullIntoDescriptor.ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n  }\n  function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n    controller._queue.push({\n      buffer: buffer,\n      byteOffset: byteOffset,\n      byteLength: byteLength\n    });\n    controller._queueTotalSize += byteLength;\n  }\n  function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n    var elementSize = pullIntoDescriptor.elementSize;\n    var currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n    var maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n    var maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n    var maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n    var totalBytesToCopyRemaining = maxBytesToCopy;\n    var ready = false;\n    if (maxAlignedBytes > currentAlignedBytes) {\n      totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n      ready = true;\n    }\n    var queue = controller._queue;\n    while (totalBytesToCopyRemaining > 0) {\n      var headOfQueue = queue[0];\n      var bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n      var destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n      ArrayBufferCopy(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n      if (headOfQueue.byteLength === bytesToCopy) {\n        queue.shift();\n      } else {\n        headOfQueue.byteOffset += bytesToCopy;\n        headOfQueue.byteLength -= bytesToCopy;\n      }\n      controller._queueTotalSize -= bytesToCopy;\n      ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n      totalBytesToCopyRemaining -= bytesToCopy;\n    }\n    if (ready === false) {\n      assert(controller._queueTotalSize === 0, 'queue must be empty');\n      assert(pullIntoDescriptor.bytesFilled > 0);\n      assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize);\n    }\n    return ready;\n  }\n  function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n    assert(controller._pendingPullIntos.length === 0 || controller._pendingPullIntos[0] === pullIntoDescriptor);\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    pullIntoDescriptor.bytesFilled += size;\n  }\n  function ReadableByteStreamControllerHandleQueueDrain(controller) {\n    assert(controller._controlledReadableStream._state === 'readable');\n    if (controller._queueTotalSize === 0 && controller._closeRequested === true) {\n      ReadableStreamClose(controller._controlledReadableStream);\n    } else {\n      ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n  }\n  function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n    if (controller._byobRequest === undefined) {\n      return;\n    }\n    controller._byobRequest._associatedReadableByteStreamController = undefined;\n    controller._byobRequest._view = undefined;\n    controller._byobRequest = undefined;\n  }\n  function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n    assert(controller._closeRequested === false);\n    while (controller._pendingPullIntos.length > 0) {\n      if (controller._queueTotalSize === 0) {\n        return;\n      }\n      var pullIntoDescriptor = controller._pendingPullIntos[0];\n      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\n      }\n    }\n  }\n  function ReadableByteStreamControllerPullInto(controller, view) {\n    var stream = controller._controlledReadableStream;\n    var elementSize = 1;\n    if (view.constructor !== DataView) {\n      elementSize = view.constructor.BYTES_PER_ELEMENT;\n    }\n    var ctor = view.constructor;\n    var pullIntoDescriptor = {\n      buffer: view.buffer,\n      byteOffset: view.byteOffset,\n      byteLength: view.byteLength,\n      bytesFilled: 0,\n      elementSize: elementSize,\n      ctor: ctor,\n      readerType: 'byob'\n    };\n    if (controller._pendingPullIntos.length > 0) {\n      pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n      controller._pendingPullIntos.push(pullIntoDescriptor);\n      return ReadableStreamAddReadIntoRequest(stream);\n    }\n    if (stream._state === 'closed') {\n      var emptyView = new view.constructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n      return Promise.resolve(CreateIterResultObject(emptyView, true));\n    }\n    if (controller._queueTotalSize > 0) {\n      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n        var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n        ReadableByteStreamControllerHandleQueueDrain(controller);\n        return Promise.resolve(CreateIterResultObject(filledView, false));\n      }\n      if (controller._closeRequested === true) {\n        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n        ReadableByteStreamControllerError(controller, e);\n        return Promise.reject(e);\n      }\n    }\n    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n    controller._pendingPullIntos.push(pullIntoDescriptor);\n    var promise = ReadableStreamAddReadIntoRequest(stream);\n    ReadableByteStreamControllerCallPullIfNeeded(controller);\n    return promise;\n  }\n  function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n    firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n    assert(firstDescriptor.bytesFilled === 0, 'bytesFilled must be 0');\n    var stream = controller._controlledReadableStream;\n    if (ReadableStreamHasBYOBReader(stream) === true) {\n      while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n        var pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n        ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n      }\n    }\n  }\n  function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n    if (pullIntoDescriptor.bytesFilled + bytesWritten > pullIntoDescriptor.byteLength) {\n      throw new RangeError('bytesWritten out of range');\n    }\n    ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n    if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n      return;\n    }\n    ReadableByteStreamControllerShiftPendingPullInto(controller);\n    var remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n    if (remainderSize > 0) {\n      var end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n      var remainder = pullIntoDescriptor.buffer.slice(end - remainderSize, end);\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n    }\n    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n    pullIntoDescriptor.bytesFilled -= remainderSize;\n    ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\n    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n  }\n  function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n    var firstDescriptor = controller._pendingPullIntos[0];\n    var stream = controller._controlledReadableStream;\n    if (stream._state === 'closed') {\n      if (bytesWritten !== 0) {\n        throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n      }\n      ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\n    } else {\n      assert(stream._state === 'readable');\n      ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n    }\n  }\n  function ReadableByteStreamControllerShiftPendingPullInto(controller) {\n    var descriptor = controller._pendingPullIntos.shift();\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    return descriptor;\n  }\n  function ReadableByteStreamControllerShouldCallPull(controller) {\n    var stream = controller._controlledReadableStream;\n    if (stream._state !== 'readable') {\n      return false;\n    }\n    if (controller._closeRequested === true) {\n      return false;\n    }\n    if (controller._started === false) {\n      return false;\n    }\n    if (ReadableStreamHasDefaultReader(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      return true;\n    }\n    if (ReadableStreamHasBYOBReader(stream) === true && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n      return true;\n    }\n    if (ReadableByteStreamControllerGetDesiredSize(controller) > 0) {\n      return true;\n    }\n    return false;\n  }\n  function ReadableByteStreamControllerClose(controller) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    if (controller._queueTotalSize > 0) {\n      controller._closeRequested = true;\n      return;\n    }\n    if (controller._pendingPullIntos.length > 0) {\n      var firstPendingPullInto = controller._pendingPullIntos[0];\n      if (firstPendingPullInto.bytesFilled > 0) {\n        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n        ReadableByteStreamControllerError(controller, e);\n        throw e;\n      }\n    }\n    ReadableStreamClose(stream);\n  }\n  function ReadableByteStreamControllerEnqueue(controller, chunk) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    var buffer = chunk.buffer;\n    var byteOffset = chunk.byteOffset;\n    var byteLength = chunk.byteLength;\n    var transferredBuffer = TransferArrayBuffer(buffer);\n    if (ReadableStreamHasDefaultReader(stream) === true) {\n      if (ReadableStreamGetNumReadRequests(stream) === 0) {\n        ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n      } else {\n        assert(controller._queue.length === 0);\n        var transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n        ReadableStreamFulfillReadRequest(stream, transferredView, false);\n      }\n    } else if (ReadableStreamHasBYOBReader(stream) === true) {\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n      ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n    } else {\n      assert(IsReadableStreamLocked(stream) === false, 'stream must not be locked');\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    }\n  }\n  function ReadableByteStreamControllerError(controller, e) {\n    var stream = controller._controlledReadableStream;\n    assert(stream._state === 'readable');\n    ReadableByteStreamControllerClearPendingPullIntos(controller);\n    ResetQueue(controller);\n    ReadableStreamError(stream, e);\n  }\n  function ReadableByteStreamControllerGetDesiredSize(controller) {\n    var stream = controller._controlledReadableStream;\n    var state = stream._state;\n    if (state === 'errored') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  function ReadableByteStreamControllerRespond(controller, bytesWritten) {\n    bytesWritten = Number(bytesWritten);\n    if (IsFiniteNonNegativeNumber(bytesWritten) === false) {\n      throw new RangeError('bytesWritten must be a finite');\n    }\n    assert(controller._pendingPullIntos.length > 0);\n    ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n  }\n  function ReadableByteStreamControllerRespondWithNewView(controller, view) {\n    assert(controller._pendingPullIntos.length > 0);\n    var firstDescriptor = controller._pendingPullIntos[0];\n    if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n      throw new RangeError('The region specified by view does not match byobRequest');\n    }\n    if (firstDescriptor.byteLength !== view.byteLength) {\n      throw new RangeError('The buffer of view has different capacity than byobRequest');\n    }\n    firstDescriptor.buffer = view.buffer;\n    ReadableByteStreamControllerRespondInternal(controller, view.byteLength);\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('ReadableStream.prototype.' + name + ' can only be used on a ReadableStream');\n  }\n  function readerLockException(name) {\n    return new TypeError('Cannot ' + name + ' a stream using a released reader');\n  }\n  function defaultReaderBrandCheckException(name) {\n    return new TypeError('ReadableStreamDefaultReader.prototype.' + name + ' can only be used on a ReadableStreamDefaultReader');\n  }\n  function defaultReaderClosedPromiseInitialize(reader) {\n    reader._closedPromise = new Promise(function (resolve, reject) {\n      reader._closedPromise_resolve = resolve;\n      reader._closedPromise_reject = reject;\n    });\n  }\n  function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n    reader._closedPromise = Promise.reject(reason);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseInitializeAsResolved(reader) {\n    reader._closedPromise = Promise.resolve(undefined);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseReject(reader, reason) {\n    assert(reader._closedPromise_resolve !== undefined);\n    assert(reader._closedPromise_reject !== undefined);\n    reader._closedPromise_reject(reason);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseResetToRejected(reader, reason) {\n    assert(reader._closedPromise_resolve === undefined);\n    assert(reader._closedPromise_reject === undefined);\n    reader._closedPromise = Promise.reject(reason);\n  }\n  function defaultReaderClosedPromiseResolve(reader) {\n    assert(reader._closedPromise_resolve !== undefined);\n    assert(reader._closedPromise_reject !== undefined);\n    reader._closedPromise_resolve(undefined);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function byobReaderBrandCheckException(name) {\n    return new TypeError('ReadableStreamBYOBReader.prototype.' + name + ' can only be used on a ReadableStreamBYOBReader');\n  }\n  function defaultControllerBrandCheckException(name) {\n    return new TypeError('ReadableStreamDefaultController.prototype.' + name + ' can only be used on a ReadableStreamDefaultController');\n  }\n  function byobRequestBrandCheckException(name) {\n    return new TypeError('ReadableStreamBYOBRequest.prototype.' + name + ' can only be used on a ReadableStreamBYOBRequest');\n  }\n  function byteStreamControllerBrandCheckException(name) {\n    return new TypeError('ReadableByteStreamController.prototype.' + name + ' can only be used on a ReadableByteStreamController');\n  }\n  function ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise) {\n    try {\n      Promise.prototype.then.call(promise, undefined, function () {});\n    } catch (e) {}\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var transformStream = __w_pdfjs_require__(6);\n  var readableStream = __w_pdfjs_require__(4);\n  var writableStream = __w_pdfjs_require__(2);\n  exports.TransformStream = transformStream.TransformStream;\n  exports.ReadableStream = readableStream.ReadableStream;\n  exports.IsReadableStreamDisturbed = readableStream.IsReadableStreamDisturbed;\n  exports.ReadableStreamDefaultControllerClose = readableStream.ReadableStreamDefaultControllerClose;\n  exports.ReadableStreamDefaultControllerEnqueue = readableStream.ReadableStreamDefaultControllerEnqueue;\n  exports.ReadableStreamDefaultControllerError = readableStream.ReadableStreamDefaultControllerError;\n  exports.ReadableStreamDefaultControllerGetDesiredSize = readableStream.ReadableStreamDefaultControllerGetDesiredSize;\n  exports.AcquireWritableStreamDefaultWriter = writableStream.AcquireWritableStreamDefaultWriter;\n  exports.IsWritableStream = writableStream.IsWritableStream;\n  exports.IsWritableStreamLocked = writableStream.IsWritableStreamLocked;\n  exports.WritableStream = writableStream.WritableStream;\n  exports.WritableStreamAbort = writableStream.WritableStreamAbort;\n  exports.WritableStreamDefaultControllerError = writableStream.WritableStreamDefaultControllerError;\n  exports.WritableStreamDefaultWriterCloseWithErrorPropagation = writableStream.WritableStreamDefaultWriterCloseWithErrorPropagation;\n  exports.WritableStreamDefaultWriterRelease = writableStream.WritableStreamDefaultWriterRelease;\n  exports.WritableStreamDefaultWriterWrite = writableStream.WritableStreamDefaultWriterWrite;\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(1),\n      assert = _require.assert;\n  var _require2 = __w_pdfjs_require__(0),\n      InvokeOrNoop = _require2.InvokeOrNoop,\n      PromiseInvokeOrPerformFallback = _require2.PromiseInvokeOrPerformFallback,\n      PromiseInvokeOrNoop = _require2.PromiseInvokeOrNoop,\n      typeIsObject = _require2.typeIsObject;\n  var _require3 = __w_pdfjs_require__(4),\n      ReadableStream = _require3.ReadableStream,\n      ReadableStreamDefaultControllerClose = _require3.ReadableStreamDefaultControllerClose,\n      ReadableStreamDefaultControllerEnqueue = _require3.ReadableStreamDefaultControllerEnqueue,\n      ReadableStreamDefaultControllerError = _require3.ReadableStreamDefaultControllerError,\n      ReadableStreamDefaultControllerGetDesiredSize = _require3.ReadableStreamDefaultControllerGetDesiredSize;\n  var _require4 = __w_pdfjs_require__(2),\n      WritableStream = _require4.WritableStream,\n      WritableStreamDefaultControllerError = _require4.WritableStreamDefaultControllerError;\n  function TransformStreamCloseReadable(transformStream) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    if (transformStream._readableClosed === true) {\n      throw new TypeError('Readable side is already closed');\n    }\n    TransformStreamCloseReadableInternal(transformStream);\n  }\n  function TransformStreamEnqueueToReadable(transformStream, chunk) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    if (transformStream._readableClosed === true) {\n      throw new TypeError('Readable side is already closed');\n    }\n    var controller = transformStream._readableController;\n    try {\n      ReadableStreamDefaultControllerEnqueue(controller, chunk);\n    } catch (e) {\n      transformStream._readableClosed = true;\n      TransformStreamErrorIfNeeded(transformStream, e);\n      throw transformStream._storedError;\n    }\n    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n    var maybeBackpressure = desiredSize <= 0;\n    if (maybeBackpressure === true && transformStream._backpressure === false) {\n      TransformStreamSetBackpressure(transformStream, true);\n    }\n  }\n  function TransformStreamError(transformStream, e) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    TransformStreamErrorInternal(transformStream, e);\n  }\n  function TransformStreamCloseReadableInternal(transformStream) {\n    assert(transformStream._errored === false);\n    assert(transformStream._readableClosed === false);\n    try {\n      ReadableStreamDefaultControllerClose(transformStream._readableController);\n    } catch (e) {\n      assert(false);\n    }\n    transformStream._readableClosed = true;\n  }\n  function TransformStreamErrorIfNeeded(transformStream, e) {\n    if (transformStream._errored === false) {\n      TransformStreamErrorInternal(transformStream, e);\n    }\n  }\n  function TransformStreamErrorInternal(transformStream, e) {\n    assert(transformStream._errored === false);\n    transformStream._errored = true;\n    transformStream._storedError = e;\n    if (transformStream._writableDone === false) {\n      WritableStreamDefaultControllerError(transformStream._writableController, e);\n    }\n    if (transformStream._readableClosed === false) {\n      ReadableStreamDefaultControllerError(transformStream._readableController, e);\n    }\n  }\n  function TransformStreamReadableReadyPromise(transformStream) {\n    assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n    if (transformStream._backpressure === false) {\n      return Promise.resolve();\n    }\n    assert(transformStream._backpressure === true, '_backpressure should have been initialized');\n    return transformStream._backpressureChangePromise;\n  }\n  function TransformStreamSetBackpressure(transformStream, backpressure) {\n    assert(transformStream._backpressure !== backpressure, 'TransformStreamSetBackpressure() should be called only when backpressure is changed');\n    if (transformStream._backpressureChangePromise !== undefined) {\n      transformStream._backpressureChangePromise_resolve(backpressure);\n    }\n    transformStream._backpressureChangePromise = new Promise(function (resolve) {\n      transformStream._backpressureChangePromise_resolve = resolve;\n    });\n    transformStream._backpressureChangePromise.then(function (resolution) {\n      assert(resolution !== backpressure, '_backpressureChangePromise should be fulfilled only when backpressure is changed');\n    });\n    transformStream._backpressure = backpressure;\n  }\n  function TransformStreamDefaultTransform(chunk, transformStreamController) {\n    var transformStream = transformStreamController._controlledTransformStream;\n    TransformStreamEnqueueToReadable(transformStream, chunk);\n    return Promise.resolve();\n  }\n  function TransformStreamTransform(transformStream, chunk) {\n    assert(transformStream._errored === false);\n    assert(transformStream._transforming === false);\n    assert(transformStream._backpressure === false);\n    transformStream._transforming = true;\n    var transformer = transformStream._transformer;\n    var controller = transformStream._transformStreamController;\n    var transformPromise = PromiseInvokeOrPerformFallback(transformer, 'transform', [chunk, controller], TransformStreamDefaultTransform, [chunk, controller]);\n    return transformPromise.then(function () {\n      transformStream._transforming = false;\n      return TransformStreamReadableReadyPromise(transformStream);\n    }, function (e) {\n      TransformStreamErrorIfNeeded(transformStream, e);\n      return Promise.reject(e);\n    });\n  }\n  function IsTransformStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n      return false;\n    }\n    return true;\n  }\n  function IsTransformStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  var TransformStreamSink = function () {\n    function TransformStreamSink(transformStream, startPromise) {\n      _classCallCheck(this, TransformStreamSink);\n      this._transformStream = transformStream;\n      this._startPromise = startPromise;\n    }\n    _createClass(TransformStreamSink, [{\n      key: 'start',\n      value: function start(c) {\n        var transformStream = this._transformStream;\n        transformStream._writableController = c;\n        return this._startPromise.then(function () {\n          return TransformStreamReadableReadyPromise(transformStream);\n        });\n      }\n    }, {\n      key: 'write',\n      value: function write(chunk) {\n        var transformStream = this._transformStream;\n        return TransformStreamTransform(transformStream, chunk);\n      }\n    }, {\n      key: 'abort',\n      value: function abort() {\n        var transformStream = this._transformStream;\n        transformStream._writableDone = true;\n        TransformStreamErrorInternal(transformStream, new TypeError('Writable side aborted'));\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        var transformStream = this._transformStream;\n        assert(transformStream._transforming === false);\n        transformStream._writableDone = true;\n        var flushPromise = PromiseInvokeOrNoop(transformStream._transformer, 'flush', [transformStream._transformStreamController]);\n        return flushPromise.then(function () {\n          if (transformStream._errored === true) {\n            return Promise.reject(transformStream._storedError);\n          }\n          if (transformStream._readableClosed === false) {\n            TransformStreamCloseReadableInternal(transformStream);\n          }\n          return Promise.resolve();\n        }).catch(function (r) {\n          TransformStreamErrorIfNeeded(transformStream, r);\n          return Promise.reject(transformStream._storedError);\n        });\n      }\n    }]);\n    return TransformStreamSink;\n  }();\n  var TransformStreamSource = function () {\n    function TransformStreamSource(transformStream, startPromise) {\n      _classCallCheck(this, TransformStreamSource);\n      this._transformStream = transformStream;\n      this._startPromise = startPromise;\n    }\n    _createClass(TransformStreamSource, [{\n      key: 'start',\n      value: function start(c) {\n        var transformStream = this._transformStream;\n        transformStream._readableController = c;\n        return this._startPromise.then(function () {\n          assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n          if (transformStream._backpressure === true) {\n            return Promise.resolve();\n          }\n          assert(transformStream._backpressure === false, '_backpressure should have been initialized');\n          return transformStream._backpressureChangePromise;\n        });\n      }\n    }, {\n      key: 'pull',\n      value: function pull() {\n        var transformStream = this._transformStream;\n        assert(transformStream._backpressure === true, 'pull() should be never called while _backpressure is false');\n        assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n        TransformStreamSetBackpressure(transformStream, false);\n        return transformStream._backpressureChangePromise;\n      }\n    }, {\n      key: 'cancel',\n      value: function cancel() {\n        var transformStream = this._transformStream;\n        transformStream._readableClosed = true;\n        TransformStreamErrorInternal(transformStream, new TypeError('Readable side canceled'));\n      }\n    }]);\n    return TransformStreamSource;\n  }();\n  var TransformStreamDefaultController = function () {\n    function TransformStreamDefaultController(transformStream) {\n      _classCallCheck(this, TransformStreamDefaultController);\n      if (IsTransformStream(transformStream) === false) {\n        throw new TypeError('TransformStreamDefaultController can only be ' + 'constructed with a TransformStream instance');\n      }\n      if (transformStream._transformStreamController !== undefined) {\n        throw new TypeError('TransformStreamDefaultController instances can ' + 'only be created by the TransformStream constructor');\n      }\n      this._controlledTransformStream = transformStream;\n    }\n    _createClass(TransformStreamDefaultController, [{\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('enqueue');\n        }\n        TransformStreamEnqueueToReadable(this._controlledTransformStream, chunk);\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('close');\n        }\n        TransformStreamCloseReadable(this._controlledTransformStream);\n      }\n    }, {\n      key: 'error',\n      value: function error(reason) {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('error');\n        }\n        TransformStreamError(this._controlledTransformStream, reason);\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('desiredSize');\n        }\n        var transformStream = this._controlledTransformStream;\n        var readableController = transformStream._readableController;\n        return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n      }\n    }]);\n    return TransformStreamDefaultController;\n  }();\n  var TransformStream = function () {\n    function TransformStream() {\n      var transformer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      _classCallCheck(this, TransformStream);\n      this._transformer = transformer;\n      var readableStrategy = transformer.readableStrategy,\n          writableStrategy = transformer.writableStrategy;\n      this._transforming = false;\n      this._errored = false;\n      this._storedError = undefined;\n      this._writableController = undefined;\n      this._readableController = undefined;\n      this._transformStreamController = undefined;\n      this._writableDone = false;\n      this._readableClosed = false;\n      this._backpressure = undefined;\n      this._backpressureChangePromise = undefined;\n      this._backpressureChangePromise_resolve = undefined;\n      this._transformStreamController = new TransformStreamDefaultController(this);\n      var startPromise_resolve = void 0;\n      var startPromise = new Promise(function (resolve) {\n        startPromise_resolve = resolve;\n      });\n      var source = new TransformStreamSource(this, startPromise);\n      this._readable = new ReadableStream(source, readableStrategy);\n      var sink = new TransformStreamSink(this, startPromise);\n      this._writable = new WritableStream(sink, writableStrategy);\n      assert(this._writableController !== undefined);\n      assert(this._readableController !== undefined);\n      var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(this._readableController);\n      TransformStreamSetBackpressure(this, desiredSize <= 0);\n      var transformStream = this;\n      var startResult = InvokeOrNoop(transformer, 'start', [transformStream._transformStreamController]);\n      startPromise_resolve(startResult);\n      startPromise.catch(function (e) {\n        if (transformStream._errored === false) {\n          transformStream._errored = true;\n          transformStream._storedError = e;\n        }\n      });\n    }\n    _createClass(TransformStream, [{\n      key: 'readable',\n      get: function get() {\n        if (IsTransformStream(this) === false) {\n          throw streamBrandCheckException('readable');\n        }\n        return this._readable;\n      }\n    }, {\n      key: 'writable',\n      get: function get() {\n        if (IsTransformStream(this) === false) {\n          throw streamBrandCheckException('writable');\n        }\n        return this._writable;\n      }\n    }]);\n    return TransformStream;\n  }();\n  module.exports = { TransformStream: TransformStream };\n  function defaultControllerBrandCheckException(name) {\n    return new TypeError('TransformStreamDefaultController.prototype.' + name + ' can only be used on a TransformStreamDefaultController');\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('TransformStream.prototype.' + name + ' can only be used on a TransformStream');\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  module.exports = __w_pdfjs_require__(5);\n}]));\n\n/***/ }),\n/* 132 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkPdfManager = exports.LocalPdfManager = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _chunked_stream = __w_pdfjs_require__(63);\n\nvar _document = __w_pdfjs_require__(133);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar BasePdfManager = function BasePdfManagerClosure() {\n  function BasePdfManager() {\n    (0, _util.unreachable)('Cannot initialize BaseManagerManager');\n  }\n  BasePdfManager.prototype = {\n    get docId() {\n      return this._docId;\n    },\n    get password() {\n      return this._password;\n    },\n    get docBaseUrl() {\n      var docBaseUrl = null;\n      if (this._docBaseUrl) {\n        var absoluteUrl = (0, _util.createValidAbsoluteUrl)(this._docBaseUrl);\n        if (absoluteUrl) {\n          docBaseUrl = absoluteUrl.href;\n        } else {\n          (0, _util.warn)('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n        }\n      }\n      return (0, _util.shadow)(this, 'docBaseUrl', docBaseUrl);\n    },\n    onLoadedStream: function BasePdfManager_onLoadedStream() {\n      throw new _util.NotImplementedException();\n    },\n    ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n      return this.ensure(this.pdfDocument, prop, args);\n    },\n    ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n      return this.ensure(this.pdfDocument.xref, prop, args);\n    },\n    ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n      return this.ensure(this.pdfDocument.catalog, prop, args);\n    },\n    getPage: function BasePdfManager_getPage(pageIndex) {\n      return this.pdfDocument.getPage(pageIndex);\n    },\n    cleanup: function BasePdfManager_cleanup() {\n      return this.pdfDocument.cleanup();\n    },\n    ensure: function BasePdfManager_ensure(obj, prop, args) {\n      return new _util.NotImplementedException();\n    },\n    requestRange: function BasePdfManager_requestRange(begin, end) {\n      return new _util.NotImplementedException();\n    },\n    requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n      return new _util.NotImplementedException();\n    },\n    sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n      return new _util.NotImplementedException();\n    },\n    updatePassword: function BasePdfManager_updatePassword(password) {\n      this._password = password;\n    },\n    terminate: function BasePdfManager_terminate() {\n      return new _util.NotImplementedException();\n    }\n  };\n  return BasePdfManager;\n}();\nvar LocalPdfManager = function LocalPdfManagerClosure() {\n  function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = password;\n    this._docBaseUrl = docBaseUrl;\n    this.evaluatorOptions = evaluatorOptions;\n    var stream = new _stream.Stream(data);\n    this.pdfDocument = new _document.PDFDocument(this, stream);\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n    this._loadedStreamCapability.resolve(stream);\n  }\n  _util.Util.inherit(LocalPdfManager, BasePdfManager, {\n    ensure: function LocalPdfManager_ensure(obj, prop, args) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var value = obj[prop];\n          var result;\n          if (typeof value === 'function') {\n            result = value.apply(obj, args);\n          } else {\n            result = value;\n          }\n          resolve(result);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    },\n    requestRange: function LocalPdfManager_requestRange(begin, end) {\n      return Promise.resolve();\n    },\n    requestLoadedStream: function LocalPdfManager_requestLoadedStream() {},\n    onLoadedStream: function LocalPdfManager_onLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    terminate: function LocalPdfManager_terminate() {}\n  });\n  return LocalPdfManager;\n}();\nvar NetworkPdfManager = function NetworkPdfManagerClosure() {\n  function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = args.password;\n    this._docBaseUrl = docBaseUrl;\n    this.msgHandler = args.msgHandler;\n    this.evaluatorOptions = evaluatorOptions;\n    var params = {\n      msgHandler: args.msgHandler,\n      url: args.url,\n      length: args.length,\n      disableAutoFetch: args.disableAutoFetch,\n      rangeChunkSize: args.rangeChunkSize\n    };\n    this.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, params);\n    this.pdfDocument = new _document.PDFDocument(this, this.streamManager.getStream());\n  }\n  _util.Util.inherit(NetworkPdfManager, BasePdfManager, {\n    ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n      var pdfManager = this;\n      return new Promise(function (resolve, reject) {\n        function ensureHelper() {\n          try {\n            var result;\n            var value = obj[prop];\n            if (typeof value === 'function') {\n              result = value.apply(obj, args);\n            } else {\n              result = value;\n            }\n            resolve(result);\n          } catch (e) {\n            if (!(e instanceof _util.MissingDataException)) {\n              reject(e);\n              return;\n            }\n            pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n          }\n        }\n        ensureHelper();\n      });\n    },\n    requestRange: function NetworkPdfManager_requestRange(begin, end) {\n      return this.streamManager.requestRange(begin, end);\n    },\n    requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n      this.streamManager.requestAllChunks();\n    },\n    sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n      this.streamManager.onReceiveData({ chunk: chunk });\n    },\n    onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n      return this.streamManager.onLoadedStream();\n    },\n    terminate: function NetworkPdfManager_terminate() {\n      this.streamManager.abort();\n    }\n  });\n  return NetworkPdfManager;\n}();\nexports.LocalPdfManager = LocalPdfManager;\nexports.NetworkPdfManager = NetworkPdfManager;\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFDocument = exports.Page = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _obj = __w_pdfjs_require__(64);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _annotation = __w_pdfjs_require__(139);\n\nvar _crypto = __w_pdfjs_require__(68);\n\nvar _parser = __w_pdfjs_require__(27);\n\nvar _operator_list = __w_pdfjs_require__(42);\n\nvar _evaluator = __w_pdfjs_require__(140);\n\nvar _function = __w_pdfjs_require__(72);\n\nvar Page = function PageClosure() {\n  var DEFAULT_USER_UNIT = 1.0;\n  var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\n  function isAnnotationRenderable(annotation, intent) {\n    return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\n  }\n  function Page(_ref) {\n    var pdfManager = _ref.pdfManager,\n        xref = _ref.xref,\n        pageIndex = _ref.pageIndex,\n        pageDict = _ref.pageDict,\n        ref = _ref.ref,\n        fontCache = _ref.fontCache,\n        builtInCMapCache = _ref.builtInCMapCache,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.pageIndex = pageIndex;\n    this.pageDict = pageDict;\n    this.xref = xref;\n    this.ref = ref;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.evaluatorOptions = pdfManager.evaluatorOptions;\n    this.resourcesPromise = null;\n    var uniquePrefix = 'p' + this.pageIndex + '_';\n    var idCounters = { obj: 0 };\n    this.idFactory = {\n      createObjId: function createObjId() {\n        return uniquePrefix + ++idCounters.obj;\n      }\n    };\n  }\n  Page.prototype = {\n    _getInheritableProperty: function _getInheritableProperty(key) {\n      var getArray = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var value = (0, _util.getInheritableProperty)({\n        dict: this.pageDict,\n        key: key,\n        getArray: getArray,\n        stopWhenFound: false\n      });\n      if (!Array.isArray(value)) {\n        return value;\n      }\n      if (value.length === 1 || !(0, _primitives.isDict)(value[0])) {\n        return value[0];\n      }\n      return _primitives.Dict.merge(this.xref, value);\n    },\n\n    get content() {\n      return this.pageDict.get('Contents');\n    },\n    get resources() {\n      return (0, _util.shadow)(this, 'resources', this._getInheritableProperty('Resources') || _primitives.Dict.empty);\n    },\n    get mediaBox() {\n      var mediaBox = this._getInheritableProperty('MediaBox', true);\n      if (!Array.isArray(mediaBox) || mediaBox.length !== 4) {\n        return (0, _util.shadow)(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n      }\n      return (0, _util.shadow)(this, 'mediaBox', mediaBox);\n    },\n    get cropBox() {\n      var cropBox = this._getInheritableProperty('CropBox', true);\n      if (!Array.isArray(cropBox) || cropBox.length !== 4) {\n        return (0, _util.shadow)(this, 'cropBox', this.mediaBox);\n      }\n      return (0, _util.shadow)(this, 'cropBox', cropBox);\n    },\n    get userUnit() {\n      var obj = this.pageDict.get('UserUnit');\n      if (!(0, _util.isNum)(obj) || obj <= 0) {\n        obj = DEFAULT_USER_UNIT;\n      }\n      return (0, _util.shadow)(this, 'userUnit', obj);\n    },\n    get view() {\n      var mediaBox = this.mediaBox,\n          cropBox = this.cropBox;\n      if (mediaBox === cropBox) {\n        return (0, _util.shadow)(this, 'view', mediaBox);\n      }\n      var intersection = _util.Util.intersect(cropBox, mediaBox);\n      return (0, _util.shadow)(this, 'view', intersection || mediaBox);\n    },\n    get rotate() {\n      var rotate = this._getInheritableProperty('Rotate') || 0;\n      if (rotate % 90 !== 0) {\n        rotate = 0;\n      } else if (rotate >= 360) {\n        rotate = rotate % 360;\n      } else if (rotate < 0) {\n        rotate = (rotate % 360 + 360) % 360;\n      }\n      return (0, _util.shadow)(this, 'rotate', rotate);\n    },\n    getContentStream: function Page_getContentStream() {\n      var content = this.content;\n      var stream;\n      if (Array.isArray(content)) {\n        var xref = this.xref;\n        var i,\n            n = content.length;\n        var streams = [];\n        for (i = 0; i < n; ++i) {\n          streams.push(xref.fetchIfRef(content[i]));\n        }\n        stream = new _stream.StreamsSequenceStream(streams);\n      } else if ((0, _primitives.isStream)(content)) {\n        stream = content;\n      } else {\n        stream = new _stream.NullStream();\n      }\n      return stream;\n    },\n    loadResources: function Page_loadResources(keys) {\n      var _this = this;\n\n      if (!this.resourcesPromise) {\n        this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n      }\n      return this.resourcesPromise.then(function () {\n        var objectLoader = new _obj.ObjectLoader(_this.resources, keys, _this.xref);\n        return objectLoader.load();\n      });\n    },\n    getOperatorList: function getOperatorList(_ref2) {\n      var _this2 = this;\n\n      var handler = _ref2.handler,\n          task = _ref2.task,\n          intent = _ref2.intent,\n          renderInteractiveForms = _ref2.renderInteractiveForms;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var partialEvaluator = new _evaluator.PartialEvaluator({\n        pdfManager: this.pdfManager,\n        xref: this.xref,\n        handler: handler,\n        pageIndex: this.pageIndex,\n        idFactory: this.idFactory,\n        fontCache: this.fontCache,\n        builtInCMapCache: this.builtInCMapCache,\n        options: this.evaluatorOptions,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      });\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      var pageListPromise = dataPromises.then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n            contentStream = _ref4[0];\n\n        var opList = new _operator_list.OperatorList(intent, handler, _this2.pageIndex);\n        handler.send('StartRenderPage', {\n          transparency: partialEvaluator.hasBlendModes(_this2.resources),\n          pageIndex: _this2.pageIndex,\n          intent: intent\n        });\n        return partialEvaluator.getOperatorList({\n          stream: contentStream,\n          task: task,\n          resources: _this2.resources,\n          operatorList: opList\n        }).then(function () {\n          return opList;\n        });\n      });\n      var annotationsPromise = this.pdfManager.ensure(this, 'annotations');\n      return Promise.all([pageListPromise, annotationsPromise]).then(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            pageOpList = _ref6[0],\n            annotations = _ref6[1];\n\n        if (annotations.length === 0) {\n          pageOpList.flush(true);\n          return pageOpList;\n        }\n        var i,\n            ii,\n            opListPromises = [];\n        for (i = 0, ii = annotations.length; i < ii; i++) {\n          if (isAnnotationRenderable(annotations[i], intent)) {\n            opListPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderInteractiveForms));\n          }\n        }\n        return Promise.all(opListPromises).then(function (opLists) {\n          pageOpList.addOp(_util.OPS.beginAnnotations, []);\n          for (i = 0, ii = opLists.length; i < ii; i++) {\n            pageOpList.addOpList(opLists[i]);\n          }\n          pageOpList.addOp(_util.OPS.endAnnotations, []);\n          pageOpList.flush(true);\n          return pageOpList;\n        });\n      });\n    },\n    extractTextContent: function extractTextContent(_ref7) {\n      var _this3 = this;\n\n      var handler = _ref7.handler,\n          task = _ref7.task,\n          normalizeWhitespace = _ref7.normalizeWhitespace,\n          sink = _ref7.sink,\n          combineTextItems = _ref7.combineTextItems;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'XObject', 'Font']);\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      return dataPromises.then(function (_ref8) {\n        var _ref9 = _slicedToArray(_ref8, 1),\n            contentStream = _ref9[0];\n\n        var partialEvaluator = new _evaluator.PartialEvaluator({\n          pdfManager: _this3.pdfManager,\n          xref: _this3.xref,\n          handler: handler,\n          pageIndex: _this3.pageIndex,\n          idFactory: _this3.idFactory,\n          fontCache: _this3.fontCache,\n          builtInCMapCache: _this3.builtInCMapCache,\n          options: _this3.evaluatorOptions,\n          pdfFunctionFactory: _this3.pdfFunctionFactory\n        });\n        return partialEvaluator.getTextContent({\n          stream: contentStream,\n          task: task,\n          resources: _this3.resources,\n          normalizeWhitespace: normalizeWhitespace,\n          combineTextItems: combineTextItems,\n          sink: sink\n        });\n      });\n    },\n\n    getAnnotationsData: function Page_getAnnotationsData(intent) {\n      var annotations = this.annotations;\n      var annotationsData = [];\n      for (var i = 0, n = annotations.length; i < n; ++i) {\n        if (!intent || isAnnotationRenderable(annotations[i], intent)) {\n          annotationsData.push(annotations[i].data);\n        }\n      }\n      return annotationsData;\n    },\n    get annotations() {\n      var annotations = [];\n      var annotationRefs = this._getInheritableProperty('Annots') || [];\n      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n        var annotationRef = annotationRefs[i];\n        var annotation = _annotation.AnnotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n        if (annotation) {\n          annotations.push(annotation);\n        }\n      }\n      return (0, _util.shadow)(this, 'annotations', annotations);\n    }\n  };\n  return Page;\n}();\nvar PDFDocument = function PDFDocumentClosure() {\n  var FINGERPRINT_FIRST_BYTES = 1024;\n  var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n  function PDFDocument(pdfManager, arg) {\n    var stream;\n    if ((0, _primitives.isStream)(arg)) {\n      stream = arg;\n    } else if ((0, _util.isArrayBuffer)(arg)) {\n      stream = new _stream.Stream(arg);\n    } else {\n      throw new Error('PDFDocument: Unknown argument type');\n    }\n    if (stream.length <= 0) {\n      throw new Error('PDFDocument: stream must have data');\n    }\n    this.pdfManager = pdfManager;\n    this.stream = stream;\n    this.xref = new _obj.XRef(stream, pdfManager);\n    var evaluatorOptions = pdfManager.evaluatorOptions;\n    this.pdfFunctionFactory = new _function.PDFFunctionFactory({\n      xref: this.xref,\n      isEvalSupported: evaluatorOptions.isEvalSupported\n    });\n  }\n  function find(stream, needle, limit, backwards) {\n    var pos = stream.pos;\n    var end = stream.end;\n    var strBuf = [];\n    if (pos + limit > end) {\n      limit = end - pos;\n    }\n    for (var n = 0; n < limit; ++n) {\n      strBuf.push(String.fromCharCode(stream.getByte()));\n    }\n    var str = strBuf.join('');\n    stream.pos = pos;\n    var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n    if (index === -1) {\n      return false;\n    }\n    stream.pos += index;\n    return true;\n  }\n  var DocumentInfoValidators = {\n    get entries() {\n      return (0, _util.shadow)(this, 'entries', {\n        Title: _util.isString,\n        Author: _util.isString,\n        Subject: _util.isString,\n        Keywords: _util.isString,\n        Creator: _util.isString,\n        Producer: _util.isString,\n        CreationDate: _util.isString,\n        ModDate: _util.isString,\n        Trapped: _primitives.isName\n      });\n    }\n  };\n  PDFDocument.prototype = {\n    parse: function PDFDocument_parse(recoveryMode) {\n      this.setup(recoveryMode);\n      var version = this.catalog.catDict.get('Version');\n      if ((0, _primitives.isName)(version)) {\n        this.pdfFormatVersion = version.name;\n      }\n      try {\n        this.acroForm = this.catalog.catDict.get('AcroForm');\n        if (this.acroForm) {\n          this.xfa = this.acroForm.get('XFA');\n          var fields = this.acroForm.get('Fields');\n          if ((!fields || !Array.isArray(fields) || fields.length === 0) && !this.xfa) {\n            this.acroForm = null;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.info)('Something wrong with AcroForm entry');\n        this.acroForm = null;\n      }\n    },\n    get linearization() {\n      var linearization = null;\n      if (this.stream.length) {\n        try {\n          linearization = _parser.Linearization.create(this.stream);\n        } catch (err) {\n          if (err instanceof _util.MissingDataException) {\n            throw err;\n          }\n          (0, _util.info)(err);\n        }\n      }\n      return (0, _util.shadow)(this, 'linearization', linearization);\n    },\n    get startXRef() {\n      var stream = this.stream;\n      var startXRef = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        stream.reset();\n        if (find(stream, 'endobj', 1024)) {\n          startXRef = stream.pos + 6;\n        }\n      } else {\n        var step = 1024;\n        var found = false,\n            pos = stream.end;\n        while (!found && pos > 0) {\n          pos -= step - 'startxref'.length;\n          if (pos < 0) {\n            pos = 0;\n          }\n          stream.pos = pos;\n          found = find(stream, 'startxref', step, true);\n        }\n        if (found) {\n          stream.skip(9);\n          var ch;\n          do {\n            ch = stream.getByte();\n          } while ((0, _util.isSpace)(ch));\n          var str = '';\n          while (ch >= 0x20 && ch <= 0x39) {\n            str += String.fromCharCode(ch);\n            ch = stream.getByte();\n          }\n          startXRef = parseInt(str, 10);\n          if (isNaN(startXRef)) {\n            startXRef = 0;\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'startXRef', startXRef);\n    },\n    get mainXRefEntriesOffset() {\n      var mainXRefEntriesOffset = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n      }\n      return (0, _util.shadow)(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n    },\n    checkHeader: function PDFDocument_checkHeader() {\n      var stream = this.stream;\n      stream.reset();\n      if (find(stream, '%PDF-', 1024)) {\n        stream.moveStart();\n        var MAX_VERSION_LENGTH = 12;\n        var version = '',\n            ch;\n        while ((ch = stream.getByte()) > 0x20) {\n          if (version.length >= MAX_VERSION_LENGTH) {\n            break;\n          }\n          version += String.fromCharCode(ch);\n        }\n        if (!this.pdfFormatVersion) {\n          this.pdfFormatVersion = version.substring(5);\n        }\n        return;\n      }\n    },\n    parseStartXRef: function PDFDocument_parseStartXRef() {\n      var startXRef = this.startXRef;\n      this.xref.setStartXRef(startXRef);\n    },\n    setup: function PDFDocument_setup(recoveryMode) {\n      var _this4 = this;\n\n      this.xref.parse(recoveryMode);\n      var pageFactory = {\n        createPage: function createPage(pageIndex, dict, ref, fontCache, builtInCMapCache) {\n          return new Page({\n            pdfManager: _this4.pdfManager,\n            xref: _this4.xref,\n            pageIndex: pageIndex,\n            pageDict: dict,\n            ref: ref,\n            fontCache: fontCache,\n            builtInCMapCache: builtInCMapCache,\n            pdfFunctionFactory: _this4.pdfFunctionFactory\n          });\n        }\n      };\n      this.catalog = new _obj.Catalog(this.pdfManager, this.xref, pageFactory);\n    },\n    get numPages() {\n      var linearization = this.linearization;\n      var num = linearization ? linearization.numPages : this.catalog.numPages;\n      return (0, _util.shadow)(this, 'numPages', num);\n    },\n    get documentInfo() {\n      var docInfo = {\n        PDFFormatVersion: this.pdfFormatVersion,\n        IsAcroFormPresent: !!this.acroForm,\n        IsXFAPresent: !!this.xfa\n      };\n      var infoDict;\n      try {\n        infoDict = this.xref.trailer.get('Info');\n      } catch (err) {\n        if (err instanceof _util.MissingDataException) {\n          throw err;\n        }\n        (0, _util.info)('The document information dictionary is invalid.');\n      }\n      if (infoDict) {\n        var validEntries = DocumentInfoValidators.entries;\n        for (var key in validEntries) {\n          if (infoDict.has(key)) {\n            var value = infoDict.get(key);\n            if (validEntries[key](value)) {\n              docInfo[key] = typeof value !== 'string' ? value : (0, _util.stringToPDFString)(value);\n            } else {\n              (0, _util.info)('Bad value in document info for \"' + key + '\"');\n            }\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'documentInfo', docInfo);\n    },\n    get fingerprint() {\n      var xref = this.xref,\n          hash,\n          fileID = '';\n      var idArray = xref.trailer.get('ID');\n      if (Array.isArray(idArray) && idArray[0] && (0, _util.isString)(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n        hash = (0, _util.stringToBytes)(idArray[0]);\n      } else {\n        if (this.stream.ensureRange) {\n          this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n        }\n        hash = (0, _crypto.calculateMD5)(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n      }\n      for (var i = 0, n = hash.length; i < n; i++) {\n        var hex = hash[i].toString(16);\n        fileID += hex.length === 1 ? '0' + hex : hex;\n      }\n      return (0, _util.shadow)(this, 'fingerprint', fileID);\n    },\n    getPage: function PDFDocument_getPage(pageIndex) {\n      return this.catalog.getPage(pageIndex);\n    },\n    cleanup: function PDFDocument_cleanup() {\n      return this.catalog.cleanup();\n    }\n  };\n  return PDFDocument;\n}();\nexports.Page = Page;\nexports.PDFDocument = PDFDocument;\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxStream = undefined;\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _ccitt = __w_pdfjs_require__(65);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar CCITTFaxStream = function CCITTFaxStreamClosure() {\n  function CCITTFaxStream(str, maybeLength, params) {\n    this.str = str;\n    this.dict = str.dict;\n    if (!(0, _primitives.isDict)(params)) {\n      params = _primitives.Dict.empty;\n    }\n    var source = {\n      next: function next() {\n        return str.getByte();\n      }\n    };\n    this.ccittFaxDecoder = new _ccitt.CCITTFaxDecoder(source, {\n      K: params.get('K'),\n      EndOfLine: params.get('EndOfLine'),\n      EncodedByteAlign: params.get('EncodedByteAlign'),\n      Columns: params.get('Columns'),\n      Rows: params.get('Rows'),\n      EndOfBlock: params.get('EndOfBlock'),\n      BlackIs1: params.get('BlackIs1')\n    });\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  CCITTFaxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  CCITTFaxStream.prototype.readBlock = function () {\n    while (!this.eof) {\n      var c = this.ccittFaxDecoder.readNextChar();\n      if (c === -1) {\n        this.eof = true;\n        return;\n      }\n      this.ensureBuffer(this.bufferLength + 1);\n      this.buffer[this.bufferLength++] = c;\n    }\n  };\n  return CCITTFaxStream;\n}();\nexports.CCITTFaxStream = CCITTFaxStream;\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Stream = undefined;\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _jbig = __w_pdfjs_require__(136);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar Jbig2Stream = function Jbig2StreamClosure() {\n  function Jbig2Stream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  Jbig2Stream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n    get: function get() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n\n    configurable: true\n  });\n  Jbig2Stream.prototype.ensureBuffer = function (requested) {};\n  Jbig2Stream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jbig2Image = new _jbig.Jbig2Image();\n    var chunks = [];\n    if ((0, _primitives.isDict)(this.params)) {\n      var globalsStream = this.params.get('JBIG2Globals');\n      if ((0, _primitives.isStream)(globalsStream)) {\n        var globals = globalsStream.getBytes();\n        chunks.push({\n          data: globals,\n          start: 0,\n          end: globals.length\n        });\n      }\n    }\n    chunks.push({\n      data: this.bytes,\n      start: 0,\n      end: this.bytes.length\n    });\n    var data = jbig2Image.parseChunks(chunks);\n    var dataLength = data.length;\n    for (var i = 0; i < dataLength; i++) {\n      data[i] ^= 0xFF;\n    }\n    this.buffer = data;\n    this.bufferLength = dataLength;\n    this.eof = true;\n  };\n  return Jbig2Stream;\n}();\nexports.Jbig2Stream = Jbig2Stream;\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Image = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _arithmetic_decoder = __w_pdfjs_require__(66);\n\nvar _ccitt = __w_pdfjs_require__(65);\n\nvar Jbig2Error = function Jbig2ErrorClosure() {\n  function Jbig2Error(msg) {\n    this.message = 'JBIG2 error: ' + msg;\n  }\n  Jbig2Error.prototype = new Error();\n  Jbig2Error.prototype.name = 'Jbig2Error';\n  Jbig2Error.constructor = Jbig2Error;\n  return Jbig2Error;\n}();\nvar Jbig2Image = function Jbig2ImageClosure() {\n  function ContextCache() {}\n  ContextCache.prototype = {\n    getContexts: function getContexts(id) {\n      if (id in this) {\n        return this[id];\n      }\n      return this[id] = new Int8Array(1 << 16);\n    }\n  };\n  function DecodingContext(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n  }\n  DecodingContext.prototype = {\n    get decoder() {\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(this.data, this.start, this.end);\n      return (0, _util.shadow)(this, 'decoder', decoder);\n    },\n    get contextCache() {\n      var cache = new ContextCache();\n      return (0, _util.shadow)(this, 'contextCache', cache);\n    }\n  };\n  function decodeInteger(contextCache, procedure, decoder) {\n    var contexts = contextCache.getContexts(procedure);\n    var prev = 1;\n    function readBits(length) {\n      var v = 0;\n      for (var i = 0; i < length; i++) {\n        var bit = decoder.readBit(contexts, prev);\n        prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n        v = v << 1 | bit;\n      }\n      return v >>> 0;\n    }\n    var sign = readBits(1);\n    var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n    return sign === 0 ? value : value > 0 ? -value : null;\n  }\n  function decodeIAID(contextCache, decoder, codeLength) {\n    var contexts = contextCache.getContexts('IAID');\n    var prev = 1;\n    for (var i = 0; i < codeLength; i++) {\n      var bit = decoder.readBit(contexts, prev);\n      prev = prev << 1 | bit;\n    }\n    if (codeLength < 31) {\n      return prev & (1 << codeLength) - 1;\n    }\n    return prev & 0x7FFFFFFF;\n  }\n  var SegmentTypes = ['SymbolDictionary', null, null, null, 'IntermediateTextRegion', null, 'ImmediateTextRegion', 'ImmediateLosslessTextRegion', null, null, null, null, null, null, null, null, 'PatternDictionary', null, null, null, 'IntermediateHalftoneRegion', null, 'ImmediateHalftoneRegion', 'ImmediateLosslessHalftoneRegion', null, null, null, null, null, null, null, null, null, null, null, null, 'IntermediateGenericRegion', null, 'ImmediateGenericRegion', 'ImmediateLosslessGenericRegion', 'IntermediateGenericRefinementRegion', null, 'ImmediateGenericRefinementRegion', 'ImmediateLosslessGenericRefinementRegion', null, null, null, null, 'PageInformation', 'EndOfPage', 'EndOfStripe', 'EndOfFile', 'Profiles', 'Tables', null, null, null, null, null, null, null, null, 'Extension'];\n  var CodingTemplates = [[{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: 2,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -3,\n    y: -1\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }]];\n  var RefinementTemplates = [{\n    coding: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: -1,\n      y: 1\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }, {\n    coding: [{\n      x: -1,\n      y: -1\n    }, {\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }];\n  var ReusedContexts = [0x9B25, 0x0795, 0x00E5, 0x0195];\n  var RefinementReusedContexts = [0x0020, 0x0008];\n  function decodeBitmapTemplate0(width, height, decodingContext) {\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var contextLabel,\n        i,\n        j,\n        pixel,\n        row,\n        row1,\n        row2,\n        bitmap = [];\n    var OLD_PIXEL_MASK = 0x7BF7;\n    for (i = 0; i < height; i++) {\n      row = bitmap[i] = new Uint8Array(width);\n      row1 = i < 1 ? row : bitmap[i - 1];\n      row2 = i < 2 ? row : bitmap[i - 2];\n      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n      for (j = 0; j < width; j++) {\n        row[j] = pixel = decoder.readBit(contexts, contextLabel);\n        contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n    if (mmr) {\n      var input = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n      return decodeMMRBitmap(input, width, height, false);\n    }\n    if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n      return decodeBitmapTemplate0(width, height, decodingContext);\n    }\n    var useskip = !!skip;\n    var template = CodingTemplates[templateIndex].concat(at);\n    template.sort(function (a, b) {\n      return a.y - b.y || a.x - b.x;\n    });\n    var templateLength = template.length;\n    var templateX = new Int8Array(templateLength);\n    var templateY = new Int8Array(templateLength);\n    var changingTemplateEntries = [];\n    var reuseMask = 0,\n        minX = 0,\n        maxX = 0,\n        minY = 0;\n    var c, k;\n    for (k = 0; k < templateLength; k++) {\n      templateX[k] = template[k].x;\n      templateY[k] = template[k].y;\n      minX = Math.min(minX, template[k].x);\n      maxX = Math.max(maxX, template[k].x);\n      minY = Math.min(minY, template[k].y);\n      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n        reuseMask |= 1 << templateLength - 1 - k;\n      } else {\n        changingTemplateEntries.push(k);\n      }\n    }\n    var changingEntriesLength = changingTemplateEntries.length;\n    var changingTemplateX = new Int8Array(changingEntriesLength);\n    var changingTemplateY = new Int8Array(changingEntriesLength);\n    var changingTemplateBit = new Uint16Array(changingEntriesLength);\n    for (c = 0; c < changingEntriesLength; c++) {\n      k = changingTemplateEntries[c];\n      changingTemplateX[c] = template[k].x;\n      changingTemplateY[c] = template[k].y;\n      changingTemplateBit[c] = 1 << templateLength - 1 - k;\n    }\n    var sbb_left = -minX;\n    var sbb_top = -minY;\n    var sbb_right = width - maxX;\n    var pseudoPixelContext = ReusedContexts[templateIndex];\n    var row = new Uint8Array(width);\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var ltp = 0,\n        j,\n        i0,\n        j0,\n        contextLabel = 0,\n        bit,\n        shift;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          bitmap.push(row);\n          continue;\n        }\n      }\n      row = new Uint8Array(row);\n      bitmap.push(row);\n      for (j = 0; j < width; j++) {\n        if (useskip && skip[i][j]) {\n          row[j] = 0;\n          continue;\n        }\n        if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n          contextLabel = contextLabel << 1 & reuseMask;\n          for (k = 0; k < changingEntriesLength; k++) {\n            i0 = i + changingTemplateY[k];\n            j0 = j + changingTemplateX[k];\n            bit = bitmap[i0][j0];\n            if (bit) {\n              bit = changingTemplateBit[k];\n              contextLabel |= bit;\n            }\n          }\n        } else {\n          contextLabel = 0;\n          shift = templateLength - 1;\n          for (k = 0; k < templateLength; k++, shift--) {\n            j0 = j + templateX[k];\n            if (j0 >= 0 && j0 < width) {\n              i0 = i + templateY[k];\n              if (i0 >= 0) {\n                bit = bitmap[i0][j0];\n                if (bit) {\n                  contextLabel |= bit << shift;\n                }\n              }\n            }\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n    var codingTemplate = RefinementTemplates[templateIndex].coding;\n    if (templateIndex === 0) {\n      codingTemplate = codingTemplate.concat([at[0]]);\n    }\n    var codingTemplateLength = codingTemplate.length;\n    var codingTemplateX = new Int32Array(codingTemplateLength);\n    var codingTemplateY = new Int32Array(codingTemplateLength);\n    var k;\n    for (k = 0; k < codingTemplateLength; k++) {\n      codingTemplateX[k] = codingTemplate[k].x;\n      codingTemplateY[k] = codingTemplate[k].y;\n    }\n    var referenceTemplate = RefinementTemplates[templateIndex].reference;\n    if (templateIndex === 0) {\n      referenceTemplate = referenceTemplate.concat([at[1]]);\n    }\n    var referenceTemplateLength = referenceTemplate.length;\n    var referenceTemplateX = new Int32Array(referenceTemplateLength);\n    var referenceTemplateY = new Int32Array(referenceTemplateLength);\n    for (k = 0; k < referenceTemplateLength; k++) {\n      referenceTemplateX[k] = referenceTemplate[k].x;\n      referenceTemplateY[k] = referenceTemplate[k].y;\n    }\n    var referenceWidth = referenceBitmap[0].length;\n    var referenceHeight = referenceBitmap.length;\n    var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GR');\n    var ltp = 0;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          throw new Jbig2Error('prediction is not supported');\n        }\n      }\n      var row = new Uint8Array(width);\n      bitmap.push(row);\n      for (var j = 0; j < width; j++) {\n        var i0, j0;\n        var contextLabel = 0;\n        for (k = 0; k < codingTemplateLength; k++) {\n          i0 = i + codingTemplateY[k];\n          j0 = j + codingTemplateX[k];\n          if (i0 < 0 || j0 < 0 || j0 >= width) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | bitmap[i0][j0];\n          }\n        }\n        for (k = 0; k < referenceTemplateLength; k++) {\n          i0 = i + referenceTemplateY[k] - offsetY;\n          j0 = j + referenceTemplateX[k] - offsetX;\n          if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('symbol refinement with Huffman is not supported');\n    }\n    var newSymbols = [];\n    var currentHeight = 0;\n    var symbolCodeLength = (0, _util.log2)(symbols.length + numberOfNewSymbols);\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var tableB1 = void 0,\n        symbolWidths = void 0;\n    if (huffman) {\n      tableB1 = getStandardTable(1);\n      symbolWidths = [];\n      symbolCodeLength = Math.max(symbolCodeLength, 1);\n    }\n    while (newSymbols.length < numberOfNewSymbols) {\n      var deltaHeight = huffman ? huffmanTables.tableDeltaHeight.decode(huffmanInput) : decodeInteger(contextCache, 'IADH', decoder);\n      currentHeight += deltaHeight;\n      var currentWidth = 0,\n          totalWidth = 0;\n      var firstSymbol = huffman ? symbolWidths.length : 0;\n      while (true) {\n        var deltaWidth = huffman ? huffmanTables.tableDeltaWidth.decode(huffmanInput) : decodeInteger(contextCache, 'IADW', decoder);\n        if (deltaWidth === null) {\n          break;\n        }\n        currentWidth += deltaWidth;\n        totalWidth += currentWidth;\n        var bitmap;\n        if (refinement) {\n          var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n          if (numberOfInstances > 1) {\n            bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, 0, huffmanInput);\n          } else {\n            var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n            var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n            var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n            var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n            bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n          }\n          newSymbols.push(bitmap);\n        } else if (huffman) {\n          symbolWidths.push(currentWidth);\n        } else {\n          bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n          newSymbols.push(bitmap);\n        }\n      }\n      if (huffman && !refinement) {\n        var bitmapSize = huffmanTables.tableBitmapSize.decode(huffmanInput);\n        huffmanInput.byteAlign();\n        var collectiveBitmap = void 0;\n        if (bitmapSize === 0) {\n          collectiveBitmap = readUncompressedBitmap(huffmanInput, totalWidth, currentHeight);\n        } else {\n          var originalEnd = huffmanInput.end;\n          var bitmapEnd = huffmanInput.position + bitmapSize;\n          huffmanInput.end = bitmapEnd;\n          collectiveBitmap = decodeMMRBitmap(huffmanInput, totalWidth, currentHeight, false);\n          huffmanInput.end = originalEnd;\n          huffmanInput.position = bitmapEnd;\n        }\n        var numberOfSymbolsDecoded = symbolWidths.length;\n        if (firstSymbol === numberOfSymbolsDecoded - 1) {\n          newSymbols.push(collectiveBitmap);\n        } else {\n          var _i = void 0,\n              y = void 0,\n              xMin = 0,\n              xMax = void 0,\n              bitmapWidth = void 0,\n              symbolBitmap = void 0;\n          for (_i = firstSymbol; _i < numberOfSymbolsDecoded; _i++) {\n            bitmapWidth = symbolWidths[_i];\n            xMax = xMin + bitmapWidth;\n            symbolBitmap = [];\n            for (y = 0; y < currentHeight; y++) {\n              symbolBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n            }\n            newSymbols.push(symbolBitmap);\n            xMin = xMax;\n          }\n        }\n      }\n    }\n    var exportedSymbols = [];\n    var flags = [],\n        currentFlag = false;\n    var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n    while (flags.length < totalSymbolsLength) {\n      var runLength = huffman ? tableB1.decode(huffmanInput) : decodeInteger(contextCache, 'IAEX', decoder);\n      while (runLength--) {\n        flags.push(currentFlag);\n      }\n      currentFlag = !currentFlag;\n    }\n    for (var i = 0, ii = symbols.length; i < ii; i++) {\n      if (flags[i]) {\n        exportedSymbols.push(symbols[i]);\n      }\n    }\n    for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n      if (flags[i]) {\n        exportedSymbols.push(newSymbols[j]);\n      }\n    }\n    return exportedSymbols;\n  }\n  function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, logStripSize, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    var bitmap = [];\n    var i, row;\n    for (i = 0; i < height; i++) {\n      row = new Uint8Array(width);\n      if (defaultPixelValue) {\n        for (var j = 0; j < width; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      bitmap.push(row);\n    }\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var stripT = huffman ? -huffmanTables.tableDeltaT.decode(huffmanInput) : -decodeInteger(contextCache, 'IADT', decoder);\n    var firstS = 0;\n    i = 0;\n    while (i < numberOfSymbolInstances) {\n      var deltaT = huffman ? huffmanTables.tableDeltaT.decode(huffmanInput) : decodeInteger(contextCache, 'IADT', decoder);\n      stripT += deltaT;\n      var deltaFirstS = huffman ? huffmanTables.tableFirstS.decode(huffmanInput) : decodeInteger(contextCache, 'IAFS', decoder);\n      firstS += deltaFirstS;\n      var currentS = firstS;\n      do {\n        var currentT = 0;\n        if (stripSize > 1) {\n          currentT = huffman ? huffmanInput.readBits(logStripSize) : decodeInteger(contextCache, 'IAIT', decoder);\n        }\n        var t = stripSize * stripT + currentT;\n        var symbolId = huffman ? huffmanTables.symbolIDTable.decode(huffmanInput) : decodeIAID(contextCache, decoder, symbolCodeLength);\n        var applyRefinement = refinement && (huffman ? huffmanInput.readBit() : decodeInteger(contextCache, 'IARI', decoder));\n        var symbolBitmap = inputSymbols[symbolId];\n        var symbolWidth = symbolBitmap[0].length;\n        var symbolHeight = symbolBitmap.length;\n        if (applyRefinement) {\n          var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n          var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n          var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n          var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n          symbolWidth += rdw;\n          symbolHeight += rdh;\n          symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n        }\n        var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n        var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n        var s2, t2, symbolRow;\n        if (transposed) {\n          for (s2 = 0; s2 < symbolHeight; s2++) {\n            row = bitmap[offsetS + s2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[s2];\n            var maxWidth = Math.min(width - offsetT, symbolWidth);\n            switch (combinationOperator) {\n              case 0:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] |= symbolRow[t2];\n                }\n                break;\n              case 2:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] ^= symbolRow[t2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolHeight - 1;\n        } else {\n          for (t2 = 0; t2 < symbolHeight; t2++) {\n            row = bitmap[offsetT + t2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[t2];\n            switch (combinationOperator) {\n              case 0:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] |= symbolRow[s2];\n                }\n                break;\n              case 2:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] ^= symbolRow[s2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolWidth - 1;\n        }\n        i++;\n        var deltaS = huffman ? huffmanTables.tableDeltaS.decode(huffmanInput) : decodeInteger(contextCache, 'IADS', decoder);\n        if (deltaS === null) {\n          break;\n        }\n        currentS += deltaS + dsOffset;\n      } while (true);\n    }\n    return bitmap;\n  }\n  function decodePatternDictionary(mmr, patternWidth, patternHeight, maxPatternIndex, template, decodingContext) {\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: -patternWidth,\n        y: 0\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n    var collectiveBitmap = decodeBitmap(mmr, collectiveWidth, patternHeight, template, false, null, at, decodingContext);\n    var patterns = [],\n        i = 0,\n        patternBitmap = void 0,\n        xMin = void 0,\n        xMax = void 0,\n        y = void 0;\n    while (i <= maxPatternIndex) {\n      patternBitmap = [];\n      xMin = patternWidth * i;\n      xMax = xMin + patternWidth;\n      for (y = 0; y < patternHeight; y++) {\n        patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n      }\n      patterns.push(patternBitmap);\n      i++;\n    }\n    return patterns;\n  }\n  function decodeHalftoneRegion(mmr, patterns, template, regionWidth, regionHeight, defaultPixelValue, enableSkip, combinationOperator, gridWidth, gridHeight, gridOffsetX, gridOffsetY, gridVectorX, gridVectorY, decodingContext) {\n    var skip = null;\n    if (enableSkip) {\n      throw new Jbig2Error('skip is not supported');\n    }\n    if (combinationOperator !== 0) {\n      throw new Jbig2Error('operator ' + combinationOperator + ' is not supported in halftone region');\n    }\n    var regionBitmap = [];\n    var i = void 0,\n        j = void 0,\n        row = void 0;\n    for (i = 0; i < regionHeight; i++) {\n      row = new Uint8Array(regionWidth);\n      if (defaultPixelValue) {\n        for (j = 0; j < regionWidth; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      regionBitmap.push(row);\n    }\n    var numberOfPatterns = patterns.length;\n    var pattern0 = patterns[0];\n    var patternWidth = pattern0[0].length,\n        patternHeight = pattern0.length;\n    var bitsPerValue = (0, _util.log2)(numberOfPatterns);\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: template <= 1 ? 3 : 2,\n        y: -1\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var grayScaleBitPlanes = [],\n        mmrInput = void 0,\n        bitmap = void 0;\n    if (mmr) {\n      mmrInput = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n    }\n    for (i = bitsPerValue - 1; i >= 0; i--) {\n      if (mmr) {\n        bitmap = decodeMMRBitmap(mmrInput, gridWidth, gridHeight, true);\n      } else {\n        bitmap = decodeBitmap(false, gridWidth, gridHeight, template, false, skip, at, decodingContext);\n      }\n      grayScaleBitPlanes[i] = bitmap;\n    }\n    var mg = void 0,\n        ng = void 0,\n        bit = void 0,\n        patternIndex = void 0,\n        patternBitmap = void 0,\n        x = void 0,\n        y = void 0,\n        patternRow = void 0,\n        regionRow = void 0;\n    for (mg = 0; mg < gridHeight; mg++) {\n      for (ng = 0; ng < gridWidth; ng++) {\n        bit = 0;\n        patternIndex = 0;\n        for (j = bitsPerValue - 1; j >= 0; j--) {\n          bit = grayScaleBitPlanes[j][mg][ng] ^ bit;\n          patternIndex |= bit << j;\n        }\n        patternBitmap = patterns[patternIndex];\n        x = gridOffsetX + mg * gridVectorY + ng * gridVectorX >> 8;\n        y = gridOffsetY + mg * gridVectorX - ng * gridVectorY >> 8;\n        if (x >= 0 && x + patternWidth <= regionWidth && y >= 0 && y + patternHeight <= regionHeight) {\n          for (i = 0; i < patternHeight; i++) {\n            regionRow = regionBitmap[y + i];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionRow[x + j] |= patternRow[j];\n            }\n          }\n        } else {\n          var regionX = void 0,\n              regionY = void 0;\n          for (i = 0; i < patternHeight; i++) {\n            regionY = y + i;\n            if (regionY < 0 || regionY >= regionHeight) {\n              continue;\n            }\n            regionRow = regionBitmap[regionY];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionX = x + j;\n              if (regionX >= 0 && regionX < regionWidth) {\n                regionRow[regionX] |= patternRow[j];\n              }\n            }\n          }\n        }\n      }\n    }\n    return regionBitmap;\n  }\n  function readSegmentHeader(data, start) {\n    var segmentHeader = {};\n    segmentHeader.number = (0, _util.readUint32)(data, start);\n    var flags = data[start + 4];\n    var segmentType = flags & 0x3F;\n    if (!SegmentTypes[segmentType]) {\n      throw new Jbig2Error('invalid segment type: ' + segmentType);\n    }\n    segmentHeader.type = segmentType;\n    segmentHeader.typeName = SegmentTypes[segmentType];\n    segmentHeader.deferredNonRetain = !!(flags & 0x80);\n    var pageAssociationFieldSize = !!(flags & 0x40);\n    var referredFlags = data[start + 5];\n    var referredToCount = referredFlags >> 5 & 7;\n    var retainBits = [referredFlags & 31];\n    var position = start + 6;\n    if (referredFlags === 7) {\n      referredToCount = (0, _util.readUint32)(data, position - 1) & 0x1FFFFFFF;\n      position += 3;\n      var bytes = referredToCount + 7 >> 3;\n      retainBits[0] = data[position++];\n      while (--bytes > 0) {\n        retainBits.push(data[position++]);\n      }\n    } else if (referredFlags === 5 || referredFlags === 6) {\n      throw new Jbig2Error('invalid referred-to flags');\n    }\n    segmentHeader.retainBits = retainBits;\n    var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n    var referredTo = [];\n    var i, ii;\n    for (i = 0; i < referredToCount; i++) {\n      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? (0, _util.readUint16)(data, position) : (0, _util.readUint32)(data, position);\n      referredTo.push(number);\n      position += referredToSegmentNumberSize;\n    }\n    segmentHeader.referredTo = referredTo;\n    if (!pageAssociationFieldSize) {\n      segmentHeader.pageAssociation = data[position++];\n    } else {\n      segmentHeader.pageAssociation = (0, _util.readUint32)(data, position);\n      position += 4;\n    }\n    segmentHeader.length = (0, _util.readUint32)(data, position);\n    position += 4;\n    if (segmentHeader.length === 0xFFFFFFFF) {\n      if (segmentType === 38) {\n        var genericRegionInfo = readRegionSegmentInformation(data, position);\n        var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n        var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n        var searchPatternLength = 6;\n        var searchPattern = new Uint8Array(searchPatternLength);\n        if (!genericRegionMmr) {\n          searchPattern[0] = 0xFF;\n          searchPattern[1] = 0xAC;\n        }\n        searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n        searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n        searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n        searchPattern[5] = genericRegionInfo.height & 0xFF;\n        for (i = position, ii = data.length; i < ii; i++) {\n          var j = 0;\n          while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n            j++;\n          }\n          if (j === searchPatternLength) {\n            segmentHeader.length = i + searchPatternLength;\n            break;\n          }\n        }\n        if (segmentHeader.length === 0xFFFFFFFF) {\n          throw new Jbig2Error('segment end was not found');\n        }\n      } else {\n        throw new Jbig2Error('invalid unknown segment length');\n      }\n    }\n    segmentHeader.headerEnd = position;\n    return segmentHeader;\n  }\n  function readSegments(header, data, start, end) {\n    var segments = [];\n    var position = start;\n    while (position < end) {\n      var segmentHeader = readSegmentHeader(data, position);\n      position = segmentHeader.headerEnd;\n      var segment = {\n        header: segmentHeader,\n        data: data\n      };\n      if (!header.randomAccess) {\n        segment.start = position;\n        position += segmentHeader.length;\n        segment.end = position;\n      }\n      segments.push(segment);\n      if (segmentHeader.type === 51) {\n        break;\n      }\n    }\n    if (header.randomAccess) {\n      for (var i = 0, ii = segments.length; i < ii; i++) {\n        segments[i].start = position;\n        position += segments[i].header.length;\n        segments[i].end = position;\n      }\n    }\n    return segments;\n  }\n  function readRegionSegmentInformation(data, start) {\n    return {\n      width: (0, _util.readUint32)(data, start),\n      height: (0, _util.readUint32)(data, start + 4),\n      x: (0, _util.readUint32)(data, start + 8),\n      y: (0, _util.readUint32)(data, start + 12),\n      combinationOperator: data[start + 16] & 7\n    };\n  }\n  var RegionSegmentInformationFieldLength = 17;\n  function processSegment(segment, visitor) {\n    var header = segment.header;\n    var data = segment.data,\n        position = segment.start,\n        end = segment.end;\n    var args, at, i, atLength;\n    switch (header.type) {\n      case 0:\n        var dictionary = {};\n        var dictionaryFlags = (0, _util.readUint16)(data, position);\n        dictionary.huffman = !!(dictionaryFlags & 1);\n        dictionary.refinement = !!(dictionaryFlags & 2);\n        dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n        dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n        dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n        dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n        dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n        dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n        dictionary.template = dictionaryFlags >> 10 & 3;\n        dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n        position += 2;\n        if (!dictionary.huffman) {\n          atLength = dictionary.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.at = at;\n        }\n        if (dictionary.refinement && !dictionary.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.refinementAt = at;\n        }\n        dictionary.numberOfExportedSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        dictionary.numberOfNewSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [dictionary, header.number, header.referredTo, data, position, end];\n        break;\n      case 6:\n      case 7:\n        var textRegion = {};\n        textRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var textRegionSegmentFlags = (0, _util.readUint16)(data, position);\n        position += 2;\n        textRegion.huffman = !!(textRegionSegmentFlags & 1);\n        textRegion.refinement = !!(textRegionSegmentFlags & 2);\n        textRegion.logStripSize = textRegionSegmentFlags >> 2 & 3;\n        textRegion.stripSize = 1 << textRegion.logStripSize;\n        textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n        textRegion.transposed = !!(textRegionSegmentFlags & 64);\n        textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n        textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n        textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n        textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n        if (textRegion.huffman) {\n          var textRegionHuffmanFlags = (0, _util.readUint16)(data, position);\n          position += 2;\n          textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n          textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n          textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n          textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n          textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n          textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n          textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n          textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 0x4000);\n        }\n        if (textRegion.refinement && !textRegion.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          textRegion.refinementAt = at;\n        }\n        textRegion.numberOfSymbolInstances = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [textRegion, header.referredTo, data, position, end];\n        break;\n      case 16:\n        var patternDictionary = {};\n        var patternDictionaryFlags = data[position++];\n        patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n        patternDictionary.template = patternDictionaryFlags >> 1 & 3;\n        patternDictionary.patternWidth = data[position++];\n        patternDictionary.patternHeight = data[position++];\n        patternDictionary.maxPatternIndex = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [patternDictionary, header.number, data, position, end];\n        break;\n      case 22:\n      case 23:\n        var halftoneRegion = {};\n        halftoneRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var halftoneRegionFlags = data[position++];\n        halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n        halftoneRegion.template = halftoneRegionFlags >> 1 & 3;\n        halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n        halftoneRegion.combinationOperator = halftoneRegionFlags >> 4 & 7;\n        halftoneRegion.defaultPixelValue = halftoneRegionFlags >> 7 & 1;\n        halftoneRegion.gridWidth = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridHeight = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridOffsetX = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridOffsetY = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridVectorX = (0, _util.readUint16)(data, position);\n        position += 2;\n        halftoneRegion.gridVectorY = (0, _util.readUint16)(data, position);\n        position += 2;\n        args = [halftoneRegion, header.referredTo, data, position, end];\n        break;\n      case 38:\n      case 39:\n        var genericRegion = {};\n        genericRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var genericRegionSegmentFlags = data[position++];\n        genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n        genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n        genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n        if (!genericRegion.mmr) {\n          atLength = genericRegion.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          genericRegion.at = at;\n        }\n        args = [genericRegion, data, position, end];\n        break;\n      case 48:\n        var pageInfo = {\n          width: (0, _util.readUint32)(data, position),\n          height: (0, _util.readUint32)(data, position + 4),\n          resolutionX: (0, _util.readUint32)(data, position + 8),\n          resolutionY: (0, _util.readUint32)(data, position + 12)\n        };\n        if (pageInfo.height === 0xFFFFFFFF) {\n          delete pageInfo.height;\n        }\n        var pageSegmentFlags = data[position + 16];\n        (0, _util.readUint16)(data, position + 17);\n        pageInfo.lossless = !!(pageSegmentFlags & 1);\n        pageInfo.refinement = !!(pageSegmentFlags & 2);\n        pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n        pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n        pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n        pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n        args = [pageInfo];\n        break;\n      case 49:\n        break;\n      case 50:\n        break;\n      case 51:\n        break;\n      case 53:\n        args = [header.number, data, position, end];\n        break;\n      case 62:\n        break;\n      default:\n        throw new Jbig2Error('segment type ' + header.typeName + '(' + header.type + ')' + ' is not implemented');\n    }\n    var callbackName = 'on' + header.typeName;\n    if (callbackName in visitor) {\n      visitor[callbackName].apply(visitor, args);\n    }\n  }\n  function processSegments(segments, visitor) {\n    for (var i = 0, ii = segments.length; i < ii; i++) {\n      processSegment(segments[i], visitor);\n    }\n  }\n  function parseJbig2Chunks(chunks) {\n    var visitor = new SimpleSegmentVisitor();\n    for (var i = 0, ii = chunks.length; i < ii; i++) {\n      var chunk = chunks[i];\n      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n      processSegments(segments, visitor);\n    }\n    return visitor.buffer;\n  }\n  function SimpleSegmentVisitor() {}\n  SimpleSegmentVisitor.prototype = {\n    onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n      this.currentPageInfo = info;\n      var rowSize = info.width + 7 >> 3;\n      var buffer = new Uint8ClampedArray(rowSize * info.height);\n      if (info.defaultPixelValue) {\n        for (var i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = 0xFF;\n        }\n      }\n      this.buffer = buffer;\n    },\n    drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n      var pageInfo = this.currentPageInfo;\n      var width = regionInfo.width,\n          height = regionInfo.height;\n      var rowSize = pageInfo.width + 7 >> 3;\n      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n      var buffer = this.buffer;\n      var mask0 = 128 >> (regionInfo.x & 7);\n      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n      var i, j, mask, offset;\n      switch (combinationOperator) {\n        case 0:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] |= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        case 2:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] ^= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        default:\n          throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n      }\n    },\n    onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n      this.onImmediateGenericRegion.apply(this, arguments);\n    },\n    onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      if (dictionary.huffman) {\n        huffmanTables = getSymbolDictionaryHuffmanTables(dictionary, referredSegments, this.customTables);\n        huffmanInput = new Reader(data, start, end);\n      }\n      var symbols = this.symbols;\n      if (!symbols) {\n        this.symbols = symbols = {};\n      }\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext, huffmanInput);\n    },\n    onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n      var regionInfo = region.info;\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      var symbols = this.symbols;\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var symbolCodeLength = (0, _util.log2)(inputSymbols.length);\n      if (region.huffman) {\n        huffmanInput = new Reader(data, start, end);\n        huffmanTables = getTextRegionHuffmanTables(region, referredSegments, this.customTables, inputSymbols.length, huffmanInput);\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext, region.logStripSize, huffmanInput);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n      this.onImmediateTextRegion.apply(this, arguments);\n    },\n    onPatternDictionary: function onPatternDictionary(dictionary, currentSegment, data, start, end) {\n      var patterns = this.patterns;\n      if (!patterns) {\n        this.patterns = patterns = {};\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      patterns[currentSegment] = decodePatternDictionary(dictionary.mmr, dictionary.patternWidth, dictionary.patternHeight, dictionary.maxPatternIndex, dictionary.template, decodingContext);\n    },\n    onImmediateHalftoneRegion: function onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n      var patterns = this.patterns[referredSegments[0]];\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeHalftoneRegion(region.mmr, patterns, region.template, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.enableSkip, region.combinationOperator, region.gridWidth, region.gridHeight, region.gridOffsetX, region.gridOffsetY, region.gridVectorX, region.gridVectorY, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessHalftoneRegion: function onImmediateLosslessHalftoneRegion() {\n      this.onImmediateHalftoneRegion.apply(this, arguments);\n    },\n    onTables: function onTables(currentSegment, data, start, end) {\n      var customTables = this.customTables;\n      if (!customTables) {\n        this.customTables = customTables = {};\n      }\n      customTables[currentSegment] = decodeTablesSegment(data, start, end);\n    }\n  };\n  function HuffmanLine(lineData) {\n    if (lineData.length === 2) {\n      this.isOOB = true;\n      this.rangeLow = 0;\n      this.prefixLength = lineData[0];\n      this.rangeLength = 0;\n      this.prefixCode = lineData[1];\n      this.isLowerRange = false;\n    } else {\n      this.isOOB = false;\n      this.rangeLow = lineData[0];\n      this.prefixLength = lineData[1];\n      this.rangeLength = lineData[2];\n      this.prefixCode = lineData[3];\n      this.isLowerRange = lineData[4] === 'lower';\n    }\n  }\n  function HuffmanTreeNode(line) {\n    this.children = [];\n    if (line) {\n      this.isLeaf = true;\n      this.rangeLength = line.rangeLength;\n      this.rangeLow = line.rangeLow;\n      this.isLowerRange = line.isLowerRange;\n      this.isOOB = line.isOOB;\n    } else {\n      this.isLeaf = false;\n    }\n  }\n  HuffmanTreeNode.prototype = {\n    buildTree: function buildTree(line, shift) {\n      var bit = line.prefixCode >> shift & 1;\n      if (shift <= 0) {\n        this.children[bit] = new HuffmanTreeNode(line);\n      } else {\n        var node = this.children[bit];\n        if (!node) {\n          this.children[bit] = node = new HuffmanTreeNode(null);\n        }\n        node.buildTree(line, shift - 1);\n      }\n    },\n    decodeNode: function decodeNode(reader) {\n      if (this.isLeaf) {\n        if (this.isOOB) {\n          return null;\n        }\n        var htOffset = reader.readBits(this.rangeLength);\n        return this.rangeLow + (this.isLowerRange ? -htOffset : htOffset);\n      }\n      var node = this.children[reader.readBit()];\n      if (!node) {\n        throw new Jbig2Error('invalid Huffman data');\n      }\n      return node.decodeNode(reader);\n    }\n  };\n  function HuffmanTable(lines, prefixCodesDone) {\n    if (!prefixCodesDone) {\n      this.assignPrefixCodes(lines);\n    }\n    this.rootNode = new HuffmanTreeNode(null);\n    var i = void 0,\n        ii = lines.length,\n        line = void 0;\n    for (i = 0; i < ii; i++) {\n      line = lines[i];\n      if (line.prefixLength > 0) {\n        this.rootNode.buildTree(line, line.prefixLength - 1);\n      }\n    }\n  }\n  HuffmanTable.prototype = {\n    decode: function decode(reader) {\n      return this.rootNode.decodeNode(reader);\n    },\n    assignPrefixCodes: function assignPrefixCodes(lines) {\n      var linesLength = lines.length,\n          prefixLengthMax = 0,\n          i = void 0;\n      for (i = 0; i < linesLength; i++) {\n        prefixLengthMax = Math.max(prefixLengthMax, lines[i].prefixLength);\n      }\n      var histogram = new Uint32Array(prefixLengthMax + 1);\n      for (i = 0; i < linesLength; i++) {\n        histogram[lines[i].prefixLength]++;\n      }\n      var currentLength = 1,\n          firstCode = 0,\n          currentCode = void 0,\n          currentTemp = void 0,\n          line = void 0;\n      histogram[0] = 0;\n      while (currentLength <= prefixLengthMax) {\n        firstCode = firstCode + histogram[currentLength - 1] << 1;\n        currentCode = firstCode;\n        currentTemp = 0;\n        while (currentTemp < linesLength) {\n          line = lines[currentTemp];\n          if (line.prefixLength === currentLength) {\n            line.prefixCode = currentCode;\n            currentCode++;\n          }\n          currentTemp++;\n        }\n        currentLength++;\n      }\n    }\n  };\n  function decodeTablesSegment(data, start, end) {\n    var flags = data[start];\n    var lowestValue = (0, _util.readUint32)(data, start + 1) & 0xFFFFFFFF;\n    var highestValue = (0, _util.readUint32)(data, start + 5) & 0xFFFFFFFF;\n    var reader = new Reader(data, start + 9, end);\n    var prefixSizeBits = (flags >> 1 & 7) + 1;\n    var rangeSizeBits = (flags >> 4 & 7) + 1;\n    var lines = [];\n    var prefixLength = void 0,\n        rangeLength = void 0,\n        currentRangeLow = lowestValue;\n    do {\n      prefixLength = reader.readBits(prefixSizeBits);\n      rangeLength = reader.readBits(rangeSizeBits);\n      lines.push(new HuffmanLine([currentRangeLow, prefixLength, rangeLength, 0]));\n      currentRangeLow += 1 << rangeLength;\n    } while (currentRangeLow < highestValue);\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([lowestValue - 1, prefixLength, 32, 0, 'lower']));\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([highestValue, prefixLength, 32, 0]));\n    if (flags & 1) {\n      prefixLength = reader.readBits(prefixSizeBits);\n      lines.push(new HuffmanLine([prefixLength, 0]));\n    }\n    return new HuffmanTable(lines, false);\n  }\n  var standardTablesCache = {};\n  function getStandardTable(number) {\n    var table = standardTablesCache[number];\n    if (table) {\n      return table;\n    }\n    var lines = void 0;\n    switch (number) {\n      case 1:\n        lines = [[0, 1, 4, 0x0], [16, 2, 8, 0x2], [272, 3, 16, 0x6], [65808, 3, 32, 0x7]];\n        break;\n      case 2:\n        lines = [[0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [75, 6, 32, 0x3E], [6, 0x3F]];\n        break;\n      case 3:\n        lines = [[-256, 8, 8, 0xFE], [0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [-257, 8, 32, 0xFF, 'lower'], [75, 7, 32, 0x7E], [6, 0x3E]];\n        break;\n      case 4:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [76, 5, 32, 0x1F]];\n        break;\n      case 5:\n        lines = [[-255, 7, 8, 0x7E], [1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [-256, 7, 32, 0x7F, 'lower'], [76, 6, 32, 0x3E]];\n        break;\n      case 6:\n        lines = [[-2048, 5, 10, 0x1C], [-1024, 4, 9, 0x8], [-512, 4, 8, 0x9], [-256, 4, 7, 0xA], [-128, 5, 6, 0x1D], [-64, 5, 5, 0x1E], [-32, 4, 5, 0xB], [0, 2, 7, 0x0], [128, 3, 7, 0x2], [256, 3, 8, 0x3], [512, 4, 9, 0xC], [1024, 4, 10, 0xD], [-2049, 6, 32, 0x3E, 'lower'], [2048, 6, 32, 0x3F]];\n        break;\n      case 7:\n        lines = [[-1024, 4, 9, 0x8], [-512, 3, 8, 0x0], [-256, 4, 7, 0x9], [-128, 5, 6, 0x1A], [-64, 5, 5, 0x1B], [-32, 4, 5, 0xA], [0, 4, 5, 0xB], [32, 5, 5, 0x1C], [64, 5, 6, 0x1D], [128, 4, 7, 0xC], [256, 3, 8, 0x1], [512, 3, 9, 0x2], [1024, 3, 10, 0x3], [-1025, 5, 32, 0x1E, 'lower'], [2048, 5, 32, 0x1F]];\n        break;\n      case 8:\n        lines = [[-15, 8, 3, 0xFC], [-7, 9, 1, 0x1FC], [-5, 8, 1, 0xFD], [-3, 9, 0, 0x1FD], [-2, 7, 0, 0x7C], [-1, 4, 0, 0xA], [0, 2, 1, 0x0], [2, 5, 0, 0x1A], [3, 6, 0, 0x3A], [4, 3, 4, 0x4], [20, 6, 1, 0x3B], [22, 4, 4, 0xB], [38, 4, 5, 0xC], [70, 5, 6, 0x1B], [134, 5, 7, 0x1C], [262, 6, 7, 0x3C], [390, 7, 8, 0x7D], [646, 6, 10, 0x3D], [-16, 9, 32, 0x1FE, 'lower'], [1670, 9, 32, 0x1FF], [2, 0x1]];\n        break;\n      case 9:\n        lines = [[-31, 8, 4, 0xFC], [-15, 9, 2, 0x1FC], [-11, 8, 2, 0xFD], [-7, 9, 1, 0x1FD], [-5, 7, 1, 0x7C], [-3, 4, 1, 0xA], [-1, 3, 1, 0x2], [1, 3, 1, 0x3], [3, 5, 1, 0x1A], [5, 6, 1, 0x3A], [7, 3, 5, 0x4], [39, 6, 2, 0x3B], [43, 4, 5, 0xB], [75, 4, 6, 0xC], [139, 5, 7, 0x1B], [267, 5, 8, 0x1C], [523, 6, 8, 0x3C], [779, 7, 9, 0x7D], [1291, 6, 11, 0x3D], [-32, 9, 32, 0x1FE, 'lower'], [3339, 9, 32, 0x1FF], [2, 0x0]];\n        break;\n      case 10:\n        lines = [[-21, 7, 4, 0x7A], [-5, 8, 0, 0xFC], [-4, 7, 0, 0x7B], [-3, 5, 0, 0x18], [-2, 2, 2, 0x0], [2, 5, 0, 0x19], [3, 6, 0, 0x36], [4, 7, 0, 0x7C], [5, 8, 0, 0xFD], [6, 2, 6, 0x1], [70, 5, 5, 0x1A], [102, 6, 5, 0x37], [134, 6, 6, 0x38], [198, 6, 7, 0x39], [326, 6, 8, 0x3A], [582, 6, 9, 0x3B], [1094, 6, 10, 0x3C], [2118, 7, 11, 0x7D], [-22, 8, 32, 0xFE, 'lower'], [4166, 8, 32, 0xFF], [2, 0x2]];\n        break;\n      case 11:\n        lines = [[1, 1, 0, 0x0], [2, 2, 1, 0x2], [4, 4, 0, 0xC], [5, 4, 1, 0xD], [7, 5, 1, 0x1C], [9, 5, 2, 0x1D], [13, 6, 2, 0x3C], [17, 7, 2, 0x7A], [21, 7, 3, 0x7B], [29, 7, 4, 0x7C], [45, 7, 5, 0x7D], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 12:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 1, 0x6], [5, 5, 0, 0x1C], [6, 5, 1, 0x1D], [8, 6, 1, 0x3C], [10, 7, 0, 0x7A], [11, 7, 1, 0x7B], [13, 7, 2, 0x7C], [17, 7, 3, 0x7D], [25, 7, 4, 0x7E], [41, 8, 5, 0xFE], [73, 8, 32, 0xFF]];\n        break;\n      case 13:\n        lines = [[1, 1, 0, 0x0], [2, 3, 0, 0x4], [3, 4, 0, 0xC], [4, 5, 0, 0x1C], [5, 4, 1, 0xD], [7, 3, 3, 0x5], [15, 6, 1, 0x3A], [17, 6, 2, 0x3B], [21, 6, 3, 0x3C], [29, 6, 4, 0x3D], [45, 6, 5, 0x3E], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 14:\n        lines = [[-2, 3, 0, 0x4], [-1, 3, 0, 0x5], [0, 1, 0, 0x0], [1, 3, 0, 0x6], [2, 3, 0, 0x7]];\n        break;\n      case 15:\n        lines = [[-24, 7, 4, 0x7C], [-8, 6, 2, 0x3C], [-4, 5, 1, 0x1C], [-2, 4, 0, 0xC], [-1, 3, 0, 0x4], [0, 1, 0, 0x0], [1, 3, 0, 0x5], [2, 4, 0, 0xD], [3, 5, 1, 0x1D], [5, 6, 2, 0x3D], [9, 7, 4, 0x7D], [-25, 7, 32, 0x7E, 'lower'], [25, 7, 32, 0x7F]];\n        break;\n      default:\n        throw new Jbig2Error('standard table B.' + number + ' does not exist');\n    }\n    var length = lines.length,\n        i = void 0;\n    for (i = 0; i < length; i++) {\n      lines[i] = new HuffmanLine(lines[i]);\n    }\n    table = new HuffmanTable(lines, true);\n    standardTablesCache[number] = table;\n    return table;\n  }\n  function Reader(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n    this.position = start;\n    this.shift = -1;\n    this.currentByte = 0;\n  }\n  Reader.prototype = {\n    readBit: function readBit() {\n      if (this.shift < 0) {\n        if (this.position >= this.end) {\n          throw new Jbig2Error('end of data while reading bit');\n        }\n        this.currentByte = this.data[this.position++];\n        this.shift = 7;\n      }\n      var bit = this.currentByte >> this.shift & 1;\n      this.shift--;\n      return bit;\n    },\n    readBits: function readBits(numBits) {\n      var result = 0,\n          i = void 0;\n      for (i = numBits - 1; i >= 0; i--) {\n        result |= this.readBit() << i;\n      }\n      return result;\n    },\n    byteAlign: function byteAlign() {\n      this.shift = -1;\n    },\n    next: function next() {\n      if (this.position >= this.end) {\n        return -1;\n      }\n      return this.data[this.position++];\n    }\n  };\n  function getCustomHuffmanTable(index, referredTo, customTables) {\n    var currentIndex = 0,\n        i = void 0,\n        ii = referredTo.length,\n        table = void 0;\n    for (i = 0; i < ii; i++) {\n      table = customTables[referredTo[i]];\n      if (table) {\n        if (index === currentIndex) {\n          return table;\n        }\n        currentIndex++;\n      }\n    }\n    throw new Jbig2Error('can\\'t find custom Huffman table');\n  }\n  function getTextRegionHuffmanTables(textRegion, referredTo, customTables, numberOfSymbols, reader) {\n    var codes = [],\n        i = void 0,\n        codeLength = void 0;\n    for (i = 0; i <= 34; i++) {\n      codeLength = reader.readBits(4);\n      codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n    }\n    var runCodesTable = new HuffmanTable(codes, false);\n    codes.length = 0;\n    for (i = 0; i < numberOfSymbols;) {\n      codeLength = runCodesTable.decode(reader);\n      if (codeLength >= 32) {\n        var repeatedLength = void 0,\n            numberOfRepeats = void 0,\n            j = void 0;\n        switch (codeLength) {\n          case 32:\n            if (i === 0) {\n              throw new Jbig2Error('no previous value in symbol ID table');\n            }\n            numberOfRepeats = reader.readBits(2) + 3;\n            repeatedLength = codes[i - 1].prefixLength;\n            break;\n          case 33:\n            numberOfRepeats = reader.readBits(3) + 3;\n            repeatedLength = 0;\n            break;\n          case 34:\n            numberOfRepeats = reader.readBits(7) + 11;\n            repeatedLength = 0;\n            break;\n          default:\n            throw new Jbig2Error('invalid code length in symbol ID table');\n        }\n        for (j = 0; j < numberOfRepeats; j++) {\n          codes.push(new HuffmanLine([i, repeatedLength, 0, 0]));\n          i++;\n        }\n      } else {\n        codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n        i++;\n      }\n    }\n    reader.byteAlign();\n    var symbolIDTable = new HuffmanTable(codes, false);\n    var customIndex = 0,\n        tableFirstS = void 0,\n        tableDeltaS = void 0,\n        tableDeltaT = void 0;\n    switch (textRegion.huffmanFS) {\n      case 0:\n      case 1:\n        tableFirstS = getStandardTable(textRegion.huffmanFS + 6);\n        break;\n      case 3:\n        tableFirstS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman FS selector');\n    }\n    switch (textRegion.huffmanDS) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaS = getStandardTable(textRegion.huffmanDS + 8);\n        break;\n      case 3:\n        tableDeltaS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DS selector');\n    }\n    switch (textRegion.huffmanDT) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaT = getStandardTable(textRegion.huffmanDT + 11);\n        break;\n      case 3:\n        tableDeltaT = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DT selector');\n    }\n    if (textRegion.refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    return {\n      symbolIDTable: symbolIDTable,\n      tableFirstS: tableFirstS,\n      tableDeltaS: tableDeltaS,\n      tableDeltaT: tableDeltaT\n    };\n  }\n  function getSymbolDictionaryHuffmanTables(dictionary, referredTo, customTables) {\n    var customIndex = 0,\n        tableDeltaHeight = void 0,\n        tableDeltaWidth = void 0;\n    switch (dictionary.huffmanDHSelector) {\n      case 0:\n      case 1:\n        tableDeltaHeight = getStandardTable(dictionary.huffmanDHSelector + 4);\n        break;\n      case 3:\n        tableDeltaHeight = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DH selector');\n    }\n    switch (dictionary.huffmanDWSelector) {\n      case 0:\n      case 1:\n        tableDeltaWidth = getStandardTable(dictionary.huffmanDWSelector + 2);\n        break;\n      case 3:\n        tableDeltaWidth = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DW selector');\n    }\n    var tableBitmapSize = void 0,\n        tableAggregateInstances = void 0;\n    if (dictionary.bitmapSizeSelector) {\n      tableBitmapSize = getCustomHuffmanTable(customIndex, referredTo, customTables);\n      customIndex++;\n    } else {\n      tableBitmapSize = getStandardTable(1);\n    }\n    if (dictionary.aggregationInstancesSelector) {\n      tableAggregateInstances = getCustomHuffmanTable(customIndex, referredTo, customTables);\n    } else {\n      tableAggregateInstances = getStandardTable(1);\n    }\n    return {\n      tableDeltaHeight: tableDeltaHeight,\n      tableDeltaWidth: tableDeltaWidth,\n      tableBitmapSize: tableBitmapSize,\n      tableAggregateInstances: tableAggregateInstances\n    };\n  }\n  function readUncompressedBitmap(reader, width, height) {\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      for (x = 0; x < width; x++) {\n        row[x] = reader.readBit();\n      }\n      reader.byteAlign();\n    }\n    return bitmap;\n  }\n  function decodeMMRBitmap(input, width, height, endOfBlock) {\n    var params = {\n      K: -1,\n      Columns: width,\n      Rows: height,\n      BlackIs1: true,\n      EndOfBlock: endOfBlock\n    };\n    var decoder = new _ccitt.CCITTFaxDecoder(input, params);\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0,\n        currentByte = void 0,\n        shift = void 0,\n        eof = false;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      shift = -1;\n      for (x = 0; x < width; x++) {\n        if (shift < 0) {\n          currentByte = decoder.readNextChar();\n          if (currentByte === -1) {\n            currentByte = 0;\n            eof = true;\n          }\n          shift = 7;\n        }\n        row[x] = currentByte >> shift & 1;\n        shift--;\n      }\n    }\n    if (endOfBlock && !eof) {\n      var lookForEOFLimit = 5;\n      for (var i = 0; i < lookForEOFLimit; i++) {\n        if (decoder.readNextChar() === -1) {\n          break;\n        }\n      }\n    }\n    return bitmap;\n  }\n  function Jbig2Image() {}\n  Jbig2Image.prototype = {\n    parseChunks: function Jbig2Image_parseChunks(chunks) {\n      return parseJbig2Chunks(chunks);\n    }\n  };\n  return Jbig2Image;\n}();\nexports.Jbig2Image = Jbig2Image;\n\n/***/ }),\n/* 137 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegImage = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = __w_pdfjs_require__(0);\n\nvar JpegError = function JpegErrorClosure() {\n  function JpegError(msg) {\n    this.message = 'JPEG error: ' + msg;\n  }\n  JpegError.prototype = new Error();\n  JpegError.prototype.name = 'JpegError';\n  JpegError.constructor = JpegError;\n  return JpegError;\n}();\nvar DNLMarkerError = function DNLMarkerErrorClosure() {\n  function DNLMarkerError(message, scanLines) {\n    this.message = message;\n    this.scanLines = scanLines;\n  }\n  DNLMarkerError.prototype = new Error();\n  DNLMarkerError.prototype.name = 'DNLMarkerError';\n  DNLMarkerError.constructor = DNLMarkerError;\n  return DNLMarkerError;\n}();\nvar JpegImage = function JpegImageClosure() {\n  var dctZigZag = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\n  var dctCos1 = 4017;\n  var dctSin1 = 799;\n  var dctCos3 = 3406;\n  var dctSin3 = 2276;\n  var dctCos6 = 1567;\n  var dctSin6 = 3784;\n  var dctSqrt2 = 5793;\n  var dctSqrt1d2 = 2896;\n  function JpegImage() {\n    this.decodeTransform = null;\n    this.colorTransform = -1;\n  }\n  function buildHuffmanTable(codeLengths, values) {\n    var k = 0,\n        code = [],\n        i,\n        j,\n        length = 16;\n    while (length > 0 && !codeLengths[length - 1]) {\n      length--;\n    }\n    code.push({\n      children: [],\n      index: 0\n    });\n    var p = code[0],\n        q;\n    for (i = 0; i < length; i++) {\n      for (j = 0; j < codeLengths[i]; j++) {\n        p = code.pop();\n        p.children[p.index] = values[k];\n        while (p.index > 0) {\n          p = code.pop();\n        }\n        p.index++;\n        code.push(p);\n        while (code.length <= i) {\n          code.push(q = {\n            children: [],\n            index: 0\n          });\n          p.children[p.index] = q.children;\n          p = q;\n        }\n        k++;\n      }\n      if (i + 1 < length) {\n        code.push(q = {\n          children: [],\n          index: 0\n        });\n        p.children[p.index] = q.children;\n        p = q;\n      }\n    }\n    return code[0].children;\n  }\n  function getBlockBufferOffset(component, row, col) {\n    return 64 * ((component.blocksPerLine + 1) * row + col);\n  }\n  function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n    var parseDNLMarker = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : false;\n\n    var mcusPerLine = frame.mcusPerLine;\n    var progressive = frame.progressive;\n    var startOffset = offset,\n        bitsData = 0,\n        bitsCount = 0;\n    function readBit() {\n      if (bitsCount > 0) {\n        bitsCount--;\n        return bitsData >> bitsCount & 1;\n      }\n      bitsData = data[offset++];\n      if (bitsData === 0xFF) {\n        var nextByte = data[offset++];\n        if (nextByte) {\n          if (nextByte === 0xDC && parseDNLMarker) {\n            offset += 2;\n            var scanLines = data[offset++] << 8 | data[offset++];\n            if (scanLines > 0 && scanLines !== frame.scanLines) {\n              throw new DNLMarkerError('Found DNL marker (0xFFDC) while parsing scan data', scanLines);\n            }\n          }\n          throw new JpegError('unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n        }\n      }\n      bitsCount = 7;\n      return bitsData >>> 7;\n    }\n    function decodeHuffman(tree) {\n      var node = tree;\n      while (true) {\n        node = node[readBit()];\n        if (typeof node === 'number') {\n          return node;\n        }\n        if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {\n          throw new JpegError('invalid huffman sequence');\n        }\n      }\n    }\n    function receive(length) {\n      var n = 0;\n      while (length > 0) {\n        n = n << 1 | readBit();\n        length--;\n      }\n      return n;\n    }\n    function receiveAndExtend(length) {\n      if (length === 1) {\n        return readBit() === 1 ? 1 : -1;\n      }\n      var n = receive(length);\n      if (n >= 1 << length - 1) {\n        return n;\n      }\n      return n + (-1 << length) + 1;\n    }\n    function decodeBaseline(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\n      component.blockData[offset] = component.pred += diff;\n      var k = 1;\n      while (k < 64) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n    function decodeDCFirst(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n      component.blockData[offset] = component.pred += diff;\n    }\n    function decodeDCSuccessive(component, offset) {\n      component.blockData[offset] |= readBit() << successive;\n    }\n    var eobrun = 0;\n    function decodeACFirst(component, offset) {\n      if (eobrun > 0) {\n        eobrun--;\n        return;\n      }\n      var k = spectralStart,\n          e = spectralEnd;\n      while (k <= e) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            eobrun = receive(r) + (1 << r) - 1;\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n    var successiveACState = 0,\n        successiveACNextValue;\n    function decodeACSuccessive(component, offset) {\n      var k = spectralStart;\n      var e = spectralEnd;\n      var r = 0;\n      var s;\n      var rs;\n      while (k <= e) {\n        var offsetZ = offset + dctZigZag[k];\n        var sign = component.blockData[offsetZ] < 0 ? -1 : 1;\n        switch (successiveACState) {\n          case 0:\n            rs = decodeHuffman(component.huffmanTableAC);\n            s = rs & 15;\n            r = rs >> 4;\n            if (s === 0) {\n              if (r < 15) {\n                eobrun = receive(r) + (1 << r);\n                successiveACState = 4;\n              } else {\n                r = 16;\n                successiveACState = 1;\n              }\n            } else {\n              if (s !== 1) {\n                throw new JpegError('invalid ACn encoding');\n              }\n              successiveACNextValue = receiveAndExtend(s);\n              successiveACState = r ? 2 : 3;\n            }\n            continue;\n          case 1:\n          case 2:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              r--;\n              if (r === 0) {\n                successiveACState = successiveACState === 2 ? 3 : 0;\n              }\n            }\n            break;\n          case 3:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              component.blockData[offsetZ] = successiveACNextValue << successive;\n              successiveACState = 0;\n            }\n            break;\n          case 4:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            }\n            break;\n        }\n        k++;\n      }\n      if (successiveACState === 4) {\n        eobrun--;\n        if (eobrun === 0) {\n          successiveACState = 0;\n        }\n      }\n    }\n    function decodeMcu(component, decode, mcu, row, col) {\n      var mcuRow = mcu / mcusPerLine | 0;\n      var mcuCol = mcu % mcusPerLine;\n      var blockRow = mcuRow * component.v + row;\n      var blockCol = mcuCol * component.h + col;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    function decodeBlock(component, decode, mcu) {\n      var blockRow = mcu / component.blocksPerLine | 0;\n      var blockCol = mcu % component.blocksPerLine;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    var componentsLength = components.length;\n    var component, i, j, k, n;\n    var decodeFn;\n    if (progressive) {\n      if (spectralStart === 0) {\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n      } else {\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n      }\n    } else {\n      decodeFn = decodeBaseline;\n    }\n    var mcu = 0,\n        fileMarker;\n    var mcuExpected;\n    if (componentsLength === 1) {\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n    } else {\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n    }\n    var h, v;\n    while (mcu < mcuExpected) {\n      var mcuToRead = resetInterval ? Math.min(mcuExpected - mcu, resetInterval) : mcuExpected;\n      for (i = 0; i < componentsLength; i++) {\n        components[i].pred = 0;\n      }\n      eobrun = 0;\n      if (componentsLength === 1) {\n        component = components[0];\n        for (n = 0; n < mcuToRead; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < mcuToRead; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n        }\n      }\n      bitsCount = 0;\n      fileMarker = findNextFileMarker(data, offset);\n      if (fileMarker && fileMarker.invalid) {\n        (0, _util.warn)('decodeScan - unexpected MCU data, current marker is: ' + fileMarker.invalid);\n        offset = fileMarker.offset;\n      }\n      var marker = fileMarker && fileMarker.marker;\n      if (!marker || marker <= 0xFF00) {\n        throw new JpegError('marker was not found');\n      }\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n        offset += 2;\n      } else {\n        break;\n      }\n    }\n    fileMarker = findNextFileMarker(data, offset);\n    if (fileMarker && fileMarker.invalid) {\n      (0, _util.warn)('decodeScan - unexpected Scan data, current marker is: ' + fileMarker.invalid);\n      offset = fileMarker.offset;\n    }\n    return offset - startOffset;\n  }\n  function quantizeAndInverse(component, blockBufferOffset, p) {\n    var qt = component.quantizationTable,\n        blockData = component.blockData;\n    var v0, v1, v2, v3, v4, v5, v6, v7;\n    var p0, p1, p2, p3, p4, p5, p6, p7;\n    var t;\n    if (!qt) {\n      throw new JpegError('missing required Quantization Table.');\n    }\n    for (var row = 0; row < 64; row += 8) {\n      p0 = blockData[blockBufferOffset + row];\n      p1 = blockData[blockBufferOffset + row + 1];\n      p2 = blockData[blockBufferOffset + row + 2];\n      p3 = blockData[blockBufferOffset + row + 3];\n      p4 = blockData[blockBufferOffset + row + 4];\n      p5 = blockData[blockBufferOffset + row + 5];\n      p6 = blockData[blockBufferOffset + row + 6];\n      p7 = blockData[blockBufferOffset + row + 7];\n      p0 *= qt[row];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 512 >> 10;\n        p[row] = t;\n        p[row + 1] = t;\n        p[row + 2] = t;\n        p[row + 3] = t;\n        p[row + 4] = t;\n        p[row + 5] = t;\n        p[row + 6] = t;\n        p[row + 7] = t;\n        continue;\n      }\n      p1 *= qt[row + 1];\n      p2 *= qt[row + 2];\n      p3 *= qt[row + 3];\n      p4 *= qt[row + 4];\n      p5 *= qt[row + 5];\n      p6 *= qt[row + 6];\n      p7 *= qt[row + 7];\n      v0 = dctSqrt2 * p0 + 128 >> 8;\n      v1 = dctSqrt2 * p4 + 128 >> 8;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n      v5 = p3 << 4;\n      v6 = p5 << 4;\n      v0 = v0 + v1 + 1 >> 1;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p[row] = v0 + v7;\n      p[row + 7] = v0 - v7;\n      p[row + 1] = v1 + v6;\n      p[row + 6] = v1 - v6;\n      p[row + 2] = v2 + v5;\n      p[row + 5] = v2 - v5;\n      p[row + 3] = v3 + v4;\n      p[row + 4] = v3 - v4;\n    }\n    for (var col = 0; col < 8; ++col) {\n      p0 = p[col];\n      p1 = p[col + 8];\n      p2 = p[col + 16];\n      p3 = p[col + 24];\n      p4 = p[col + 32];\n      p5 = p[col + 40];\n      p6 = p[col + 48];\n      p7 = p[col + 56];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 8192 >> 14;\n        t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n        blockData[blockBufferOffset + col] = t;\n        blockData[blockBufferOffset + col + 8] = t;\n        blockData[blockBufferOffset + col + 16] = t;\n        blockData[blockBufferOffset + col + 24] = t;\n        blockData[blockBufferOffset + col + 32] = t;\n        blockData[blockBufferOffset + col + 40] = t;\n        blockData[blockBufferOffset + col + 48] = t;\n        blockData[blockBufferOffset + col + 56] = t;\n        continue;\n      }\n      v0 = dctSqrt2 * p0 + 2048 >> 12;\n      v1 = dctSqrt2 * p4 + 2048 >> 12;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n      v5 = p3;\n      v6 = p5;\n      v0 = (v0 + v1 + 1 >> 1) + 4112;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p0 = v0 + v7;\n      p7 = v0 - v7;\n      p1 = v1 + v6;\n      p6 = v1 - v6;\n      p2 = v2 + v5;\n      p5 = v2 - v5;\n      p3 = v3 + v4;\n      p4 = v3 - v4;\n      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n      blockData[blockBufferOffset + col] = p0;\n      blockData[blockBufferOffset + col + 8] = p1;\n      blockData[blockBufferOffset + col + 16] = p2;\n      blockData[blockBufferOffset + col + 24] = p3;\n      blockData[blockBufferOffset + col + 32] = p4;\n      blockData[blockBufferOffset + col + 40] = p5;\n      blockData[blockBufferOffset + col + 48] = p6;\n      blockData[blockBufferOffset + col + 56] = p7;\n    }\n  }\n  function buildComponentData(frame, component) {\n    var blocksPerLine = component.blocksPerLine;\n    var blocksPerColumn = component.blocksPerColumn;\n    var computationBuffer = new Int16Array(64);\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n        quantizeAndInverse(component, offset, computationBuffer);\n      }\n    }\n    return component.blockData;\n  }\n  function findNextFileMarker(data, currentPos) {\n    var startPos = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : currentPos;\n\n    function peekUint16(pos) {\n      return data[pos] << 8 | data[pos + 1];\n    }\n    var maxPos = data.length - 1;\n    var newPos = startPos < currentPos ? startPos : currentPos;\n    if (currentPos >= maxPos) {\n      return null;\n    }\n    var currentMarker = peekUint16(currentPos);\n    if (currentMarker >= 0xFFC0 && currentMarker <= 0xFFFE) {\n      return {\n        invalid: null,\n        marker: currentMarker,\n        offset: currentPos\n      };\n    }\n    var newMarker = peekUint16(newPos);\n    while (!(newMarker >= 0xFFC0 && newMarker <= 0xFFFE)) {\n      if (++newPos >= maxPos) {\n        return null;\n      }\n      newMarker = peekUint16(newPos);\n    }\n    return {\n      invalid: currentMarker.toString(16),\n      marker: newMarker,\n      offset: newPos\n    };\n  }\n  JpegImage.prototype = {\n    parse: function parse(data) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref$dnlScanLines = _ref.dnlScanLines,\n          dnlScanLines = _ref$dnlScanLines === undefined ? null : _ref$dnlScanLines;\n\n      function readUint16() {\n        var value = data[offset] << 8 | data[offset + 1];\n        offset += 2;\n        return value;\n      }\n      function readDataBlock() {\n        var length = readUint16();\n        var endOffset = offset + length - 2;\n        var fileMarker = findNextFileMarker(data, endOffset, offset);\n        if (fileMarker && fileMarker.invalid) {\n          (0, _util.warn)('readDataBlock - incorrect length, current marker is: ' + fileMarker.invalid);\n          endOffset = fileMarker.offset;\n        }\n        var array = data.subarray(offset, endOffset);\n        offset += array.length;\n        return array;\n      }\n      function prepareComponents(frame) {\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n        for (var i = 0; i < frame.components.length; i++) {\n          component = frame.components[i];\n          var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n          var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n          var blocksPerLineForMcu = mcusPerLine * component.h;\n          var blocksPerColumnForMcu = mcusPerColumn * component.v;\n          var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n          component.blockData = new Int16Array(blocksBufferSize);\n          component.blocksPerLine = blocksPerLine;\n          component.blocksPerColumn = blocksPerColumn;\n        }\n        frame.mcusPerLine = mcusPerLine;\n        frame.mcusPerColumn = mcusPerColumn;\n      }\n      var offset = 0;\n      var jfif = null;\n      var adobe = null;\n      var frame, resetInterval;\n      var numSOSMarkers = 0;\n      var quantizationTables = [];\n      var huffmanTablesAC = [],\n          huffmanTablesDC = [];\n      var fileMarker = readUint16();\n      if (fileMarker !== 0xFFD8) {\n        throw new JpegError('SOI not found');\n      }\n      fileMarker = readUint16();\n      while (fileMarker !== 0xFFD9) {\n        var i, j, l;\n        switch (fileMarker) {\n          case 0xFFE0:\n          case 0xFFE1:\n          case 0xFFE2:\n          case 0xFFE3:\n          case 0xFFE4:\n          case 0xFFE5:\n          case 0xFFE6:\n          case 0xFFE7:\n          case 0xFFE8:\n          case 0xFFE9:\n          case 0xFFEA:\n          case 0xFFEB:\n          case 0xFFEC:\n          case 0xFFED:\n          case 0xFFEE:\n          case 0xFFEF:\n          case 0xFFFE:\n            var appData = readDataBlock();\n            if (fileMarker === 0xFFE0) {\n              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n                jfif = {\n                  version: {\n                    major: appData[5],\n                    minor: appData[6]\n                  },\n                  densityUnits: appData[7],\n                  xDensity: appData[8] << 8 | appData[9],\n                  yDensity: appData[10] << 8 | appData[11],\n                  thumbWidth: appData[12],\n                  thumbHeight: appData[13],\n                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n                };\n              }\n            }\n            if (fileMarker === 0xFFEE) {\n              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n                adobe = {\n                  version: appData[5] << 8 | appData[6],\n                  flags0: appData[7] << 8 | appData[8],\n                  flags1: appData[9] << 8 | appData[10],\n                  transformCode: appData[11]\n                };\n              }\n            }\n            break;\n          case 0xFFDB:\n            var quantizationTablesLength = readUint16();\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n            var z;\n            while (offset < quantizationTablesEnd) {\n              var quantizationTableSpec = data[offset++];\n              var tableData = new Uint16Array(64);\n              if (quantizationTableSpec >> 4 === 0) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = data[offset++];\n                }\n              } else if (quantizationTableSpec >> 4 === 1) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = readUint16();\n                }\n              } else {\n                throw new JpegError('DQT - invalid table spec');\n              }\n              quantizationTables[quantizationTableSpec & 15] = tableData;\n            }\n            break;\n          case 0xFFC0:\n          case 0xFFC1:\n          case 0xFFC2:\n            if (frame) {\n              throw new JpegError('Only single frame JPEGs supported');\n            }\n            readUint16();\n            frame = {};\n            frame.extended = fileMarker === 0xFFC1;\n            frame.progressive = fileMarker === 0xFFC2;\n            frame.precision = data[offset++];\n            var sofScanLines = readUint16();\n            frame.scanLines = dnlScanLines || sofScanLines;\n            frame.samplesPerLine = readUint16();\n            frame.components = [];\n            frame.componentIds = {};\n            var componentsCount = data[offset++],\n                componentId;\n            var maxH = 0,\n                maxV = 0;\n            for (i = 0; i < componentsCount; i++) {\n              componentId = data[offset];\n              var h = data[offset + 1] >> 4;\n              var v = data[offset + 1] & 15;\n              if (maxH < h) {\n                maxH = h;\n              }\n              if (maxV < v) {\n                maxV = v;\n              }\n              var qId = data[offset + 2];\n              l = frame.components.push({\n                h: h,\n                v: v,\n                quantizationId: qId,\n                quantizationTable: null\n              });\n              frame.componentIds[componentId] = l - 1;\n              offset += 3;\n            }\n            frame.maxH = maxH;\n            frame.maxV = maxV;\n            prepareComponents(frame);\n            break;\n          case 0xFFC4:\n            var huffmanLength = readUint16();\n            for (i = 2; i < huffmanLength;) {\n              var huffmanTableSpec = data[offset++];\n              var codeLengths = new Uint8Array(16);\n              var codeLengthSum = 0;\n              for (j = 0; j < 16; j++, offset++) {\n                codeLengthSum += codeLengths[j] = data[offset];\n              }\n              var huffmanValues = new Uint8Array(codeLengthSum);\n              for (j = 0; j < codeLengthSum; j++, offset++) {\n                huffmanValues[j] = data[offset];\n              }\n              i += 17 + codeLengthSum;\n              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n            }\n            break;\n          case 0xFFDD:\n            readUint16();\n            resetInterval = readUint16();\n            break;\n          case 0xFFDA:\n            var parseDNLMarker = ++numSOSMarkers === 1 && !dnlScanLines;\n            readUint16();\n            var selectorsCount = data[offset++];\n            var components = [],\n                component;\n            for (i = 0; i < selectorsCount; i++) {\n              var componentIndex = frame.componentIds[data[offset++]];\n              component = frame.components[componentIndex];\n              var tableSpec = data[offset++];\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n              components.push(component);\n            }\n            var spectralStart = data[offset++];\n            var spectralEnd = data[offset++];\n            var successiveApproximation = data[offset++];\n            try {\n              var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15, parseDNLMarker);\n              offset += processed;\n            } catch (ex) {\n              if (ex instanceof DNLMarkerError) {\n                (0, _util.warn)('Attempting to re-parse JPEG image using \"scanLines\" ' + 'parameter found in DNL marker (0xFFDC) segment.');\n                return this.parse(data, { dnlScanLines: ex.scanLines });\n              }\n              throw ex;\n            }\n            break;\n          case 0xFFDC:\n            offset += 4;\n            break;\n          case 0xFFFF:\n            if (data[offset] !== 0xFF) {\n              offset--;\n            }\n            break;\n          default:\n            if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n              offset -= 3;\n              break;\n            }\n            var nextFileMarker = findNextFileMarker(data, offset - 2);\n            if (nextFileMarker && nextFileMarker.invalid) {\n              (0, _util.warn)('JpegImage.parse - unexpected data, current marker is: ' + nextFileMarker.invalid);\n              offset = nextFileMarker.offset;\n              break;\n            }\n            throw new JpegError('unknown marker ' + fileMarker.toString(16));\n        }\n        fileMarker = readUint16();\n      }\n      this.width = frame.samplesPerLine;\n      this.height = frame.scanLines;\n      this.jfif = jfif;\n      this.adobe = adobe;\n      this.components = [];\n      for (i = 0; i < frame.components.length; i++) {\n        component = frame.components[i];\n        var quantizationTable = quantizationTables[component.quantizationId];\n        if (quantizationTable) {\n          component.quantizationTable = quantizationTable;\n        }\n        this.components.push({\n          output: buildComponentData(frame, component),\n          scaleX: component.h / frame.maxH,\n          scaleY: component.v / frame.maxV,\n          blocksPerLine: component.blocksPerLine,\n          blocksPerColumn: component.blocksPerColumn\n        });\n      }\n      this.numComponents = this.components.length;\n    },\n\n    _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n      var scaleX = this.width / width,\n          scaleY = this.height / height;\n      var component, componentScaleX, componentScaleY, blocksPerScanline;\n      var x, y, i, j, k;\n      var index;\n      var offset = 0;\n      var output;\n      var numComponents = this.components.length;\n      var dataLength = width * height * numComponents;\n      var data = new Uint8ClampedArray(dataLength);\n      var xScaleBlockOffset = new Uint32Array(width);\n      var mask3LSB = 0xfffffff8;\n      for (i = 0; i < numComponents; i++) {\n        component = this.components[i];\n        componentScaleX = component.scaleX * scaleX;\n        componentScaleY = component.scaleY * scaleY;\n        offset = i;\n        output = component.output;\n        blocksPerScanline = component.blocksPerLine + 1 << 3;\n        for (x = 0; x < width; x++) {\n          j = 0 | x * componentScaleX;\n          xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n        }\n        for (y = 0; y < height; y++) {\n          j = 0 | y * componentScaleY;\n          index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n          for (x = 0; x < width; x++) {\n            data[offset] = output[index + xScaleBlockOffset[x]];\n            offset += numComponents;\n          }\n        }\n      }\n      var transform = this.decodeTransform;\n      if (transform) {\n        for (i = 0; i < dataLength;) {\n          for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n            data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n          }\n        }\n      }\n      return data;\n    },\n    _isColorConversionNeeded: function _isColorConversionNeeded() {\n      if (this.adobe) {\n        return !!this.adobe.transformCode;\n      }\n      if (this.numComponents === 3) {\n        if (this.colorTransform === 0) {\n          return false;\n        }\n        return true;\n      }\n      if (this.colorTransform === 1) {\n        return true;\n      }\n      return false;\n    },\n\n    _convertYccToRgb: function convertYccToRgb(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 3) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = Y - 179.456 + 1.402 * Cr;\n        data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n        data[i + 2] = Y - 226.816 + 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertYcckToRgb: function convertYcckToRgb(data) {\n      var Y, Cb, Cr, k;\n      var offset = 0;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        k = data[i + 3];\n        data[offset++] = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n        data[offset++] = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n        data[offset++] = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n      }\n      return data.subarray(0, offset);\n    },\n    _convertYcckToCmyk: function convertYcckToCmyk(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = 434.456 - Y - 1.402 * Cr;\n        data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n        data[i + 2] = 481.816 - Y - 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertCmykToRgb: function convertCmykToRgb(data) {\n      var c, m, y, k;\n      var offset = 0;\n      var scale = 1 / 255;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        c = data[i] * scale;\n        m = data[i + 1] * scale;\n        y = data[i + 2] * scale;\n        k = data[i + 3] * scale;\n        data[offset++] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) - k * (21.86122147463605 * k + 189.48180835922747);\n        data[offset++] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) - k * (20.737325471181034 * k + 187.80453709719578);\n        data[offset++] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 193.58209356861505) - k * (22.33816807309886 * k + 180.12613974708367);\n      }\n      return data.subarray(0, offset);\n    },\n    getData: function getData(width, height, forceRGBoutput) {\n      if (this.numComponents > 4) {\n        throw new JpegError('Unsupported color mode');\n      }\n      var data = this._getLinearizedBlockData(width, height);\n      if (this.numComponents === 1 && forceRGBoutput) {\n        var dataLength = data.length;\n        var rgbData = new Uint8ClampedArray(dataLength * 3);\n        var offset = 0;\n        for (var i = 0; i < dataLength; i++) {\n          var grayColor = data[i];\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n        }\n        return rgbData;\n      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n        return this._convertYccToRgb(data);\n      } else if (this.numComponents === 4) {\n        if (this._isColorConversionNeeded()) {\n          if (forceRGBoutput) {\n            return this._convertYcckToRgb(data);\n          }\n          return this._convertYcckToCmyk(data);\n        } else if (forceRGBoutput) {\n          return this._convertCmykToRgb(data);\n        }\n      }\n      return data;\n    }\n  };\n  return JpegImage;\n}();\nexports.JpegImage = JpegImage;\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxStream = undefined;\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _jpx = __w_pdfjs_require__(67);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar JpxStream = function JpxStreamClosure() {\n  function JpxStream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpxStream.prototype, 'bytes', {\n    get: function JpxStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpxStream.prototype.ensureBuffer = function (requested) {};\n  JpxStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpxImage = new _jpx.JpxImage();\n    jpxImage.parse(this.bytes);\n    var width = jpxImage.width;\n    var height = jpxImage.height;\n    var componentsCount = jpxImage.componentsCount;\n    var tileCount = jpxImage.tiles.length;\n    if (tileCount === 1) {\n      this.buffer = jpxImage.tiles[0].items;\n    } else {\n      var data = new Uint8ClampedArray(width * height * componentsCount);\n      for (var k = 0; k < tileCount; k++) {\n        var tileComponents = jpxImage.tiles[k];\n        var tileWidth = tileComponents.width;\n        var tileHeight = tileComponents.height;\n        var tileLeft = tileComponents.left;\n        var tileTop = tileComponents.top;\n        var src = tileComponents.items;\n        var srcPosition = 0;\n        var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n        var imgRowSize = width * componentsCount;\n        var tileRowSize = tileWidth * componentsCount;\n        for (var j = 0; j < tileHeight; j++) {\n          var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n          data.set(rowBytes, dataPosition);\n          srcPosition += tileRowSize;\n          dataPosition += imgRowSize;\n        }\n      }\n      this.buffer = data;\n    }\n    this.bufferLength = this.buffer.length;\n    this.eof = true;\n  };\n  return JpxStream;\n}();\nexports.JpxStream = JpxStream;\n\n/***/ }),\n/* 139 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = undefined;\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _obj = __w_pdfjs_require__(64);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _operator_list = __w_pdfjs_require__(42);\n\nvar _stream = __w_pdfjs_require__(4);\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AnnotationFactory = function () {\n  function AnnotationFactory() {\n    _classCallCheck(this, AnnotationFactory);\n  }\n\n  _createClass(AnnotationFactory, null, [{\n    key: 'create',\n    value: function create(xref, ref, pdfManager, idFactory) {\n      var dict = xref.fetchIfRef(ref);\n      if (!(0, _primitives.isDict)(dict)) {\n        return;\n      }\n      var id = (0, _primitives.isRef)(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n      var subtype = dict.get('Subtype');\n      subtype = (0, _primitives.isName)(subtype) ? subtype.name : null;\n      var parameters = {\n        xref: xref,\n        dict: dict,\n        ref: (0, _primitives.isRef)(ref) ? ref : null,\n        subtype: subtype,\n        id: id,\n        pdfManager: pdfManager\n      };\n      switch (subtype) {\n        case 'Link':\n          return new LinkAnnotation(parameters);\n        case 'Text':\n          return new TextAnnotation(parameters);\n        case 'Widget':\n          var fieldType = (0, _util.getInheritableProperty)({\n            dict: dict,\n            key: 'FT'\n          });\n          fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n          switch (fieldType) {\n            case 'Tx':\n              return new TextWidgetAnnotation(parameters);\n            case 'Btn':\n              return new ButtonWidgetAnnotation(parameters);\n            case 'Ch':\n              return new ChoiceWidgetAnnotation(parameters);\n          }\n          (0, _util.warn)('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n          return new WidgetAnnotation(parameters);\n        case 'Popup':\n          return new PopupAnnotation(parameters);\n        case 'Line':\n          return new LineAnnotation(parameters);\n        case 'Square':\n          return new SquareAnnotation(parameters);\n        case 'Circle':\n          return new CircleAnnotation(parameters);\n        case 'PolyLine':\n          return new PolylineAnnotation(parameters);\n        case 'Polygon':\n          return new PolygonAnnotation(parameters);\n        case 'Highlight':\n          return new HighlightAnnotation(parameters);\n        case 'Underline':\n          return new UnderlineAnnotation(parameters);\n        case 'Squiggly':\n          return new SquigglyAnnotation(parameters);\n        case 'StrikeOut':\n          return new StrikeOutAnnotation(parameters);\n        case 'Stamp':\n          return new StampAnnotation(parameters);\n        case 'FileAttachment':\n          return new FileAttachmentAnnotation(parameters);\n        default:\n          if (!subtype) {\n            (0, _util.warn)('Annotation is missing the required /Subtype.');\n          } else {\n            (0, _util.warn)('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n          }\n          return new Annotation(parameters);\n      }\n    }\n  }]);\n\n  return AnnotationFactory;\n}();\n\nfunction getTransformMatrix(rect, bbox, matrix) {\n  var bounds = _util.Util.getAxialAlignedBoundingBox(bbox, matrix);\n  var minX = bounds[0];\n  var minY = bounds[1];\n  var maxX = bounds[2];\n  var maxY = bounds[3];\n  if (minX === maxX || minY === maxY) {\n    return [1, 0, 0, 1, rect[0], rect[1]];\n  }\n  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n  return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio];\n}\n\nvar Annotation = function () {\n  function Annotation(params) {\n    _classCallCheck(this, Annotation);\n\n    var dict = params.dict;\n    this.setFlags(dict.get('F'));\n    this.setRectangle(dict.getArray('Rect'));\n    this.setColor(dict.getArray('C'));\n    this.setBorderStyle(dict);\n    this.setAppearance(dict);\n    this.data = {\n      annotationFlags: this.flags,\n      borderStyle: this.borderStyle,\n      color: this.color,\n      hasAppearance: !!this.appearance,\n      id: params.id,\n      rect: this.rectangle,\n      subtype: params.subtype\n    };\n  }\n\n  _createClass(Annotation, [{\n    key: '_hasFlag',\n    value: function _hasFlag(flags, flag) {\n      return !!(flags & flag);\n    }\n  }, {\n    key: '_isViewable',\n    value: function _isViewable(flags) {\n      return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW);\n    }\n  }, {\n    key: '_isPrintable',\n    value: function _isPrintable(flags) {\n      return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN);\n    }\n  }, {\n    key: 'setFlags',\n    value: function setFlags(flags) {\n      this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0;\n    }\n  }, {\n    key: 'hasFlag',\n    value: function hasFlag(flag) {\n      return this._hasFlag(this.flags, flag);\n    }\n  }, {\n    key: 'setRectangle',\n    value: function setRectangle(rectangle) {\n      if (Array.isArray(rectangle) && rectangle.length === 4) {\n        this.rectangle = _util.Util.normalizeRect(rectangle);\n      } else {\n        this.rectangle = [0, 0, 0, 0];\n      }\n    }\n  }, {\n    key: 'setColor',\n    value: function setColor(color) {\n      var rgbColor = new Uint8Array(3);\n      if (!Array.isArray(color)) {\n        this.color = rgbColor;\n        return;\n      }\n      switch (color.length) {\n        case 0:\n          this.color = null;\n          break;\n        case 1:\n          _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 3:\n          _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 4:\n          _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        default:\n          this.color = rgbColor;\n          break;\n      }\n    }\n  }, {\n    key: 'setBorderStyle',\n    value: function setBorderStyle(borderStyle) {\n      this.borderStyle = new AnnotationBorderStyle();\n      if (!(0, _primitives.isDict)(borderStyle)) {\n        return;\n      }\n      if (borderStyle.has('BS')) {\n        var dict = borderStyle.get('BS');\n        var dictType = dict.get('Type');\n        if (!dictType || (0, _primitives.isName)(dictType, 'Border')) {\n          this.borderStyle.setWidth(dict.get('W'));\n          this.borderStyle.setStyle(dict.get('S'));\n          this.borderStyle.setDashArray(dict.getArray('D'));\n        }\n      } else if (borderStyle.has('Border')) {\n        var array = borderStyle.getArray('Border');\n        if (Array.isArray(array) && array.length >= 3) {\n          this.borderStyle.setHorizontalCornerRadius(array[0]);\n          this.borderStyle.setVerticalCornerRadius(array[1]);\n          this.borderStyle.setWidth(array[2]);\n          if (array.length === 4) {\n            this.borderStyle.setDashArray(array[3]);\n          }\n        }\n      } else {\n        this.borderStyle.setWidth(0);\n      }\n    }\n  }, {\n    key: 'setAppearance',\n    value: function setAppearance(dict) {\n      this.appearance = null;\n      var appearanceStates = dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if ((0, _primitives.isStream)(normalAppearanceState)) {\n        this.appearance = normalAppearanceState;\n        return;\n      }\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var as = dict.get('AS');\n      if (!(0, _primitives.isName)(as) || !normalAppearanceState.has(as.name)) {\n        return;\n      }\n      this.appearance = normalAppearanceState.get(as.name);\n    }\n  }, {\n    key: '_preparePopup',\n    value: function _preparePopup(dict) {\n      if (!dict.has('C')) {\n        this.data.color = null;\n      }\n      this.data.hasPopup = dict.has('Popup');\n      this.data.title = (0, _util.stringToPDFString)(dict.get('T') || '');\n      this.data.contents = (0, _util.stringToPDFString)(dict.get('Contents') || '');\n    }\n  }, {\n    key: 'loadResources',\n    value: function loadResources(keys) {\n      return this.appearance.dict.getAsync('Resources').then(function (resources) {\n        if (!resources) {\n          return;\n        }\n        var objectLoader = new _obj.ObjectLoader(resources, keys, resources.xref);\n        return objectLoader.load().then(function () {\n          return resources;\n        });\n      });\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      var _this = this;\n\n      if (!this.appearance) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      var data = this.data;\n      var appearanceDict = this.appearance.dict;\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var bbox = appearanceDict.getArray('BBox') || [0, 0, 1, 1];\n      var matrix = appearanceDict.getArray('Matrix') || [1, 0, 0, 1, 0, 0];\n      var transform = getTransformMatrix(data.rect, bbox, matrix);\n      return resourcesPromise.then(function (resources) {\n        var opList = new _operator_list.OperatorList();\n        opList.addOp(_util.OPS.beginAnnotation, [data.rect, transform, matrix]);\n        return evaluator.getOperatorList({\n          stream: _this.appearance,\n          task: task,\n          resources: resources,\n          operatorList: opList\n        }).then(function () {\n          opList.addOp(_util.OPS.endAnnotation, []);\n          _this.appearance.reset();\n          return opList;\n        });\n      });\n    }\n  }, {\n    key: 'viewable',\n    get: function get() {\n      if (this.flags === 0) {\n        return true;\n      }\n      return this._isViewable(this.flags);\n    }\n  }, {\n    key: 'printable',\n    get: function get() {\n      if (this.flags === 0) {\n        return false;\n      }\n      return this._isPrintable(this.flags);\n    }\n  }]);\n\n  return Annotation;\n}();\n\nvar AnnotationBorderStyle = function () {\n  function AnnotationBorderStyle() {\n    _classCallCheck(this, AnnotationBorderStyle);\n\n    this.width = 1;\n    this.style = _util.AnnotationBorderStyleType.SOLID;\n    this.dashArray = [3];\n    this.horizontalCornerRadius = 0;\n    this.verticalCornerRadius = 0;\n  }\n\n  _createClass(AnnotationBorderStyle, [{\n    key: 'setWidth',\n    value: function setWidth(width) {\n      if (Number.isInteger(width)) {\n        this.width = width;\n      }\n    }\n  }, {\n    key: 'setStyle',\n    value: function setStyle(style) {\n      if (!style) {\n        return;\n      }\n      switch (style.name) {\n        case 'S':\n          this.style = _util.AnnotationBorderStyleType.SOLID;\n          break;\n        case 'D':\n          this.style = _util.AnnotationBorderStyleType.DASHED;\n          break;\n        case 'B':\n          this.style = _util.AnnotationBorderStyleType.BEVELED;\n          break;\n        case 'I':\n          this.style = _util.AnnotationBorderStyleType.INSET;\n          break;\n        case 'U':\n          this.style = _util.AnnotationBorderStyleType.UNDERLINE;\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'setDashArray',\n    value: function setDashArray(dashArray) {\n      if (Array.isArray(dashArray) && dashArray.length > 0) {\n        var isValid = true;\n        var allZeros = true;\n        for (var i = 0, len = dashArray.length; i < len; i++) {\n          var element = dashArray[i];\n          var validNumber = +element >= 0;\n          if (!validNumber) {\n            isValid = false;\n            break;\n          } else if (element > 0) {\n            allZeros = false;\n          }\n        }\n        if (isValid && !allZeros) {\n          this.dashArray = dashArray;\n        } else {\n          this.width = 0;\n        }\n      } else if (dashArray) {\n        this.width = 0;\n      }\n    }\n  }, {\n    key: 'setHorizontalCornerRadius',\n    value: function setHorizontalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.horizontalCornerRadius = radius;\n      }\n    }\n  }, {\n    key: 'setVerticalCornerRadius',\n    value: function setVerticalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.verticalCornerRadius = radius;\n      }\n    }\n  }]);\n\n  return AnnotationBorderStyle;\n}();\n\nvar WidgetAnnotation = function (_Annotation) {\n  _inherits(WidgetAnnotation, _Annotation);\n\n  function WidgetAnnotation(params) {\n    _classCallCheck(this, WidgetAnnotation);\n\n    var _this2 = _possibleConstructorReturn(this, (WidgetAnnotation.__proto__ || Object.getPrototypeOf(WidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    var data = _this2.data;\n    data.annotationType = _util.AnnotationType.WIDGET;\n    data.fieldName = _this2._constructFieldName(dict);\n    data.fieldValue = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'V',\n      getArray: true\n    });\n    data.alternativeText = (0, _util.stringToPDFString)(dict.get('TU') || '');\n    data.defaultAppearance = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'DA'\n    }) || '';\n    var fieldType = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'FT'\n    });\n    data.fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n    _this2.fieldResources = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'DR'\n    }) || _primitives.Dict.empty;\n    data.fieldFlags = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'Ff'\n    });\n    if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) {\n      data.fieldFlags = 0;\n    }\n    data.readOnly = _this2.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);\n    if (data.fieldType === 'Sig') {\n      _this2.setFlags(_util.AnnotationFlag.HIDDEN);\n    }\n    return _this2;\n  }\n\n  _createClass(WidgetAnnotation, [{\n    key: '_constructFieldName',\n    value: function _constructFieldName(dict) {\n      if (!dict.has('T') && !dict.has('Parent')) {\n        (0, _util.warn)('Unknown field name, falling back to empty field name.');\n        return '';\n      }\n      if (!dict.has('Parent')) {\n        return (0, _util.stringToPDFString)(dict.get('T'));\n      }\n      var fieldName = [];\n      if (dict.has('T')) {\n        fieldName.unshift((0, _util.stringToPDFString)(dict.get('T')));\n      }\n      var loopDict = dict;\n      while (loopDict.has('Parent')) {\n        loopDict = loopDict.get('Parent');\n        if (!(0, _primitives.isDict)(loopDict)) {\n          break;\n        }\n        if (loopDict.has('T')) {\n          fieldName.unshift((0, _util.stringToPDFString)(loopDict.get('T')));\n        }\n      }\n      return fieldName.join('.');\n    }\n  }, {\n    key: 'hasFieldFlag',\n    value: function hasFieldFlag(flag) {\n      return !!(this.data.fieldFlags & flag);\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      return _get(WidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(WidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n    }\n  }]);\n\n  return WidgetAnnotation;\n}(Annotation);\n\nvar TextWidgetAnnotation = function (_WidgetAnnotation) {\n  _inherits(TextWidgetAnnotation, _WidgetAnnotation);\n\n  function TextWidgetAnnotation(params) {\n    _classCallCheck(this, TextWidgetAnnotation);\n\n    var _this3 = _possibleConstructorReturn(this, (TextWidgetAnnotation.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    _this3.data.fieldValue = (0, _util.stringToPDFString)(_this3.data.fieldValue || '');\n    var alignment = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'Q'\n    });\n    if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) {\n      alignment = null;\n    }\n    _this3.data.textAlignment = alignment;\n    var maximumLength = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'MaxLen'\n    });\n    if (!Number.isInteger(maximumLength) || maximumLength < 0) {\n      maximumLength = null;\n    }\n    _this3.data.maxLen = maximumLength;\n    _this3.data.multiLine = _this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);\n    _this3.data.comb = _this3.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && _this3.data.maxLen !== null;\n    return _this3;\n  }\n\n  _createClass(TextWidgetAnnotation, [{\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms || this.appearance) {\n        return _get(TextWidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n      }\n      var operatorList = new _operator_list.OperatorList();\n      if (!this.data.defaultAppearance) {\n        return Promise.resolve(operatorList);\n      }\n      var stream = new _stream.Stream((0, _util.stringToBytes)(this.data.defaultAppearance));\n      return evaluator.getOperatorList({\n        stream: stream,\n        task: task,\n        resources: this.fieldResources,\n        operatorList: operatorList\n      }).then(function () {\n        return operatorList;\n      });\n    }\n  }]);\n\n  return TextWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ButtonWidgetAnnotation = function (_WidgetAnnotation2) {\n  _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);\n\n  function ButtonWidgetAnnotation(params) {\n    _classCallCheck(this, ButtonWidgetAnnotation);\n\n    var _this4 = _possibleConstructorReturn(this, (ButtonWidgetAnnotation.__proto__ || Object.getPrototypeOf(ButtonWidgetAnnotation)).call(this, params));\n\n    _this4.data.checkBox = !_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.radioButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.pushButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    if (_this4.data.checkBox) {\n      _this4._processCheckBox();\n    } else if (_this4.data.radioButton) {\n      _this4._processRadioButton(params);\n    } else if (_this4.data.pushButton) {\n      _this4._processPushButton(params);\n    } else {\n      (0, _util.warn)('Invalid field flags for button widget annotation');\n    }\n    return _this4;\n  }\n\n  _createClass(ButtonWidgetAnnotation, [{\n    key: '_processCheckBox',\n    value: function _processCheckBox() {\n      if (!(0, _primitives.isName)(this.data.fieldValue)) {\n        return;\n      }\n      this.data.fieldValue = this.data.fieldValue.name;\n    }\n  }, {\n    key: '_processRadioButton',\n    value: function _processRadioButton(params) {\n      this.data.fieldValue = this.data.buttonValue = null;\n      var fieldParent = params.dict.get('Parent');\n      if ((0, _primitives.isDict)(fieldParent) && fieldParent.has('V')) {\n        var fieldParentValue = fieldParent.get('V');\n        if ((0, _primitives.isName)(fieldParentValue)) {\n          this.data.fieldValue = fieldParentValue.name;\n        }\n      }\n      var appearanceStates = params.dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var keys = normalAppearanceState.getKeys();\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        if (keys[i] !== 'Off') {\n          this.data.buttonValue = keys[i];\n          break;\n        }\n      }\n    }\n  }, {\n    key: '_processPushButton',\n    value: function _processPushButton(params) {\n      if (!params.dict.has('A')) {\n        (0, _util.warn)('Push buttons without action dictionaries are not supported');\n        return;\n      }\n      _obj.Catalog.parseDestDictionary({\n        destDict: params.dict,\n        resultObj: this.data,\n        docBaseUrl: params.pdfManager.docBaseUrl\n      });\n    }\n  }]);\n\n  return ButtonWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ChoiceWidgetAnnotation = function (_WidgetAnnotation3) {\n  _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);\n\n  function ChoiceWidgetAnnotation(params) {\n    _classCallCheck(this, ChoiceWidgetAnnotation);\n\n    var _this5 = _possibleConstructorReturn(this, (ChoiceWidgetAnnotation.__proto__ || Object.getPrototypeOf(ChoiceWidgetAnnotation)).call(this, params));\n\n    _this5.data.options = [];\n    var options = (0, _util.getInheritableProperty)({\n      dict: params.dict,\n      key: 'Opt'\n    });\n    if (Array.isArray(options)) {\n      var xref = params.xref;\n      for (var i = 0, ii = options.length; i < ii; i++) {\n        var option = xref.fetchIfRef(options[i]);\n        var isOptionArray = Array.isArray(option);\n        _this5.data.options[i] = {\n          exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n          displayValue: (0, _util.stringToPDFString)(isOptionArray ? xref.fetchIfRef(option[1]) : option)\n        };\n      }\n    }\n    if (!Array.isArray(_this5.data.fieldValue)) {\n      _this5.data.fieldValue = [_this5.data.fieldValue];\n    }\n    _this5.data.combo = _this5.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);\n    _this5.data.multiSelect = _this5.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);\n    return _this5;\n  }\n\n  return ChoiceWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar TextAnnotation = function (_Annotation2) {\n  _inherits(TextAnnotation, _Annotation2);\n\n  function TextAnnotation(parameters) {\n    _classCallCheck(this, TextAnnotation);\n\n    var DEFAULT_ICON_SIZE = 22;\n\n    var _this6 = _possibleConstructorReturn(this, (TextAnnotation.__proto__ || Object.getPrototypeOf(TextAnnotation)).call(this, parameters));\n\n    _this6.data.annotationType = _util.AnnotationType.TEXT;\n    if (_this6.data.hasAppearance) {\n      _this6.data.name = 'NoIcon';\n    } else {\n      _this6.data.rect[1] = _this6.data.rect[3] - DEFAULT_ICON_SIZE;\n      _this6.data.rect[2] = _this6.data.rect[0] + DEFAULT_ICON_SIZE;\n      _this6.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n    }\n    _this6._preparePopup(parameters.dict);\n    return _this6;\n  }\n\n  return TextAnnotation;\n}(Annotation);\n\nvar LinkAnnotation = function (_Annotation3) {\n  _inherits(LinkAnnotation, _Annotation3);\n\n  function LinkAnnotation(params) {\n    _classCallCheck(this, LinkAnnotation);\n\n    var _this7 = _possibleConstructorReturn(this, (LinkAnnotation.__proto__ || Object.getPrototypeOf(LinkAnnotation)).call(this, params));\n\n    _this7.data.annotationType = _util.AnnotationType.LINK;\n    _obj.Catalog.parseDestDictionary({\n      destDict: params.dict,\n      resultObj: _this7.data,\n      docBaseUrl: params.pdfManager.docBaseUrl\n    });\n    return _this7;\n  }\n\n  return LinkAnnotation;\n}(Annotation);\n\nvar PopupAnnotation = function (_Annotation4) {\n  _inherits(PopupAnnotation, _Annotation4);\n\n  function PopupAnnotation(parameters) {\n    _classCallCheck(this, PopupAnnotation);\n\n    var _this8 = _possibleConstructorReturn(this, (PopupAnnotation.__proto__ || Object.getPrototypeOf(PopupAnnotation)).call(this, parameters));\n\n    _this8.data.annotationType = _util.AnnotationType.POPUP;\n    var dict = parameters.dict;\n    var parentItem = dict.get('Parent');\n    if (!parentItem) {\n      (0, _util.warn)('Popup annotation has a missing or invalid parent annotation.');\n      return _possibleConstructorReturn(_this8);\n    }\n    var parentSubtype = parentItem.get('Subtype');\n    _this8.data.parentType = (0, _primitives.isName)(parentSubtype) ? parentSubtype.name : null;\n    _this8.data.parentId = dict.getRaw('Parent').toString();\n    _this8.data.title = (0, _util.stringToPDFString)(parentItem.get('T') || '');\n    _this8.data.contents = (0, _util.stringToPDFString)(parentItem.get('Contents') || '');\n    if (!parentItem.has('C')) {\n      _this8.data.color = null;\n    } else {\n      _this8.setColor(parentItem.getArray('C'));\n      _this8.data.color = _this8.color;\n    }\n    if (!_this8.viewable) {\n      var parentFlags = parentItem.get('F');\n      if (_this8._isViewable(parentFlags)) {\n        _this8.setFlags(parentFlags);\n      }\n    }\n    return _this8;\n  }\n\n  return PopupAnnotation;\n}(Annotation);\n\nvar LineAnnotation = function (_Annotation5) {\n  _inherits(LineAnnotation, _Annotation5);\n\n  function LineAnnotation(parameters) {\n    _classCallCheck(this, LineAnnotation);\n\n    var _this9 = _possibleConstructorReturn(this, (LineAnnotation.__proto__ || Object.getPrototypeOf(LineAnnotation)).call(this, parameters));\n\n    _this9.data.annotationType = _util.AnnotationType.LINE;\n    var dict = parameters.dict;\n    _this9.data.lineCoordinates = _util.Util.normalizeRect(dict.getArray('L'));\n    _this9._preparePopup(dict);\n    return _this9;\n  }\n\n  return LineAnnotation;\n}(Annotation);\n\nvar SquareAnnotation = function (_Annotation6) {\n  _inherits(SquareAnnotation, _Annotation6);\n\n  function SquareAnnotation(parameters) {\n    _classCallCheck(this, SquareAnnotation);\n\n    var _this10 = _possibleConstructorReturn(this, (SquareAnnotation.__proto__ || Object.getPrototypeOf(SquareAnnotation)).call(this, parameters));\n\n    _this10.data.annotationType = _util.AnnotationType.SQUARE;\n    _this10._preparePopup(parameters.dict);\n    return _this10;\n  }\n\n  return SquareAnnotation;\n}(Annotation);\n\nvar CircleAnnotation = function (_Annotation7) {\n  _inherits(CircleAnnotation, _Annotation7);\n\n  function CircleAnnotation(parameters) {\n    _classCallCheck(this, CircleAnnotation);\n\n    var _this11 = _possibleConstructorReturn(this, (CircleAnnotation.__proto__ || Object.getPrototypeOf(CircleAnnotation)).call(this, parameters));\n\n    _this11.data.annotationType = _util.AnnotationType.CIRCLE;\n    _this11._preparePopup(parameters.dict);\n    return _this11;\n  }\n\n  return CircleAnnotation;\n}(Annotation);\n\nvar PolylineAnnotation = function (_Annotation8) {\n  _inherits(PolylineAnnotation, _Annotation8);\n\n  function PolylineAnnotation(parameters) {\n    _classCallCheck(this, PolylineAnnotation);\n\n    var _this12 = _possibleConstructorReturn(this, (PolylineAnnotation.__proto__ || Object.getPrototypeOf(PolylineAnnotation)).call(this, parameters));\n\n    _this12.data.annotationType = _util.AnnotationType.POLYLINE;\n    var dict = parameters.dict;\n    var rawVertices = dict.getArray('Vertices');\n    _this12.data.vertices = [];\n    for (var i = 0, ii = rawVertices.length; i < ii; i += 2) {\n      _this12.data.vertices.push({\n        x: rawVertices[i],\n        y: rawVertices[i + 1]\n      });\n    }\n    _this12._preparePopup(dict);\n    return _this12;\n  }\n\n  return PolylineAnnotation;\n}(Annotation);\n\nvar PolygonAnnotation = function (_PolylineAnnotation) {\n  _inherits(PolygonAnnotation, _PolylineAnnotation);\n\n  function PolygonAnnotation(parameters) {\n    _classCallCheck(this, PolygonAnnotation);\n\n    var _this13 = _possibleConstructorReturn(this, (PolygonAnnotation.__proto__ || Object.getPrototypeOf(PolygonAnnotation)).call(this, parameters));\n\n    _this13.data.annotationType = _util.AnnotationType.POLYGON;\n    return _this13;\n  }\n\n  return PolygonAnnotation;\n}(PolylineAnnotation);\n\nvar HighlightAnnotation = function (_Annotation9) {\n  _inherits(HighlightAnnotation, _Annotation9);\n\n  function HighlightAnnotation(parameters) {\n    _classCallCheck(this, HighlightAnnotation);\n\n    var _this14 = _possibleConstructorReturn(this, (HighlightAnnotation.__proto__ || Object.getPrototypeOf(HighlightAnnotation)).call(this, parameters));\n\n    _this14.data.annotationType = _util.AnnotationType.HIGHLIGHT;\n    _this14._preparePopup(parameters.dict);\n    return _this14;\n  }\n\n  return HighlightAnnotation;\n}(Annotation);\n\nvar UnderlineAnnotation = function (_Annotation10) {\n  _inherits(UnderlineAnnotation, _Annotation10);\n\n  function UnderlineAnnotation(parameters) {\n    _classCallCheck(this, UnderlineAnnotation);\n\n    var _this15 = _possibleConstructorReturn(this, (UnderlineAnnotation.__proto__ || Object.getPrototypeOf(UnderlineAnnotation)).call(this, parameters));\n\n    _this15.data.annotationType = _util.AnnotationType.UNDERLINE;\n    _this15._preparePopup(parameters.dict);\n    return _this15;\n  }\n\n  return UnderlineAnnotation;\n}(Annotation);\n\nvar SquigglyAnnotation = function (_Annotation11) {\n  _inherits(SquigglyAnnotation, _Annotation11);\n\n  function SquigglyAnnotation(parameters) {\n    _classCallCheck(this, SquigglyAnnotation);\n\n    var _this16 = _possibleConstructorReturn(this, (SquigglyAnnotation.__proto__ || Object.getPrototypeOf(SquigglyAnnotation)).call(this, parameters));\n\n    _this16.data.annotationType = _util.AnnotationType.SQUIGGLY;\n    _this16._preparePopup(parameters.dict);\n    return _this16;\n  }\n\n  return SquigglyAnnotation;\n}(Annotation);\n\nvar StrikeOutAnnotation = function (_Annotation12) {\n  _inherits(StrikeOutAnnotation, _Annotation12);\n\n  function StrikeOutAnnotation(parameters) {\n    _classCallCheck(this, StrikeOutAnnotation);\n\n    var _this17 = _possibleConstructorReturn(this, (StrikeOutAnnotation.__proto__ || Object.getPrototypeOf(StrikeOutAnnotation)).call(this, parameters));\n\n    _this17.data.annotationType = _util.AnnotationType.STRIKEOUT;\n    _this17._preparePopup(parameters.dict);\n    return _this17;\n  }\n\n  return StrikeOutAnnotation;\n}(Annotation);\n\nvar StampAnnotation = function (_Annotation13) {\n  _inherits(StampAnnotation, _Annotation13);\n\n  function StampAnnotation(parameters) {\n    _classCallCheck(this, StampAnnotation);\n\n    var _this18 = _possibleConstructorReturn(this, (StampAnnotation.__proto__ || Object.getPrototypeOf(StampAnnotation)).call(this, parameters));\n\n    _this18.data.annotationType = _util.AnnotationType.STAMP;\n    _this18._preparePopup(parameters.dict);\n    return _this18;\n  }\n\n  return StampAnnotation;\n}(Annotation);\n\nvar FileAttachmentAnnotation = function (_Annotation14) {\n  _inherits(FileAttachmentAnnotation, _Annotation14);\n\n  function FileAttachmentAnnotation(parameters) {\n    _classCallCheck(this, FileAttachmentAnnotation);\n\n    var _this19 = _possibleConstructorReturn(this, (FileAttachmentAnnotation.__proto__ || Object.getPrototypeOf(FileAttachmentAnnotation)).call(this, parameters));\n\n    var file = new _obj.FileSpec(parameters.dict.get('FS'), parameters.xref);\n    _this19.data.annotationType = _util.AnnotationType.FILEATTACHMENT;\n    _this19.data.file = file.serializable;\n    _this19._preparePopup(parameters.dict);\n    return _this19;\n  }\n\n  return FileAttachmentAnnotation;\n}(Annotation);\n\nexports.Annotation = Annotation;\nexports.AnnotationBorderStyle = AnnotationBorderStyle;\nexports.AnnotationFactory = AnnotationFactory;\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PartialEvaluator = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cmap = __w_pdfjs_require__(141);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _fonts = __w_pdfjs_require__(142);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _unicode = __w_pdfjs_require__(71);\n\nvar _standard_fonts = __w_pdfjs_require__(70);\n\nvar _pattern = __w_pdfjs_require__(146);\n\nvar _parser = __w_pdfjs_require__(27);\n\nvar _bidi = __w_pdfjs_require__(147);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _glyphlist = __w_pdfjs_require__(43);\n\nvar _metrics = __w_pdfjs_require__(148);\n\nvar _function = __w_pdfjs_require__(72);\n\nvar _jpeg_stream = __w_pdfjs_require__(41);\n\nvar _murmurhash = __w_pdfjs_require__(150);\n\nvar _operator_list = __w_pdfjs_require__(42);\n\nvar _image = __w_pdfjs_require__(151);\n\nvar PartialEvaluator = function PartialEvaluatorClosure() {\n  var DefaultPartialEvaluatorOptions = {\n    forceDataSchema: false,\n    maxImageSize: -1,\n    disableFontFace: false,\n    nativeImageDecoderSupport: _util.NativeImageDecoding.DECODE,\n    ignoreErrors: false,\n    isEvalSupported: true\n  };\n  function NativeImageDecoder(_ref) {\n    var xref = _ref.xref,\n        resources = _ref.resources,\n        handler = _ref.handler,\n        _ref$forceDataSchema = _ref.forceDataSchema,\n        forceDataSchema = _ref$forceDataSchema === undefined ? false : _ref$forceDataSchema,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.xref = xref;\n    this.resources = resources;\n    this.handler = handler;\n    this.forceDataSchema = forceDataSchema;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n  }\n  NativeImageDecoder.prototype = {\n    canDecode: function canDecode(image) {\n      return image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources, this.pdfFunctionFactory);\n    },\n    decode: function decode(image) {\n      var dict = image.dict;\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      colorSpace = _colorspace.ColorSpace.parse(colorSpace, this.xref, this.resources, this.pdfFunctionFactory);\n      return this.handler.sendWithPromise('JpegDecode', [image.getIR(this.forceDataSchema), colorSpace.numComps]).then(function (_ref2) {\n        var data = _ref2.data,\n            width = _ref2.width,\n            height = _ref2.height;\n\n        return new _stream.Stream(data, 0, data.length, image.dict);\n      });\n    }\n  };\n  NativeImageDecoder.isSupported = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  NativeImageDecoder.isDecodable = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  function PartialEvaluator(_ref3) {\n    var _this = this;\n\n    var pdfManager = _ref3.pdfManager,\n        xref = _ref3.xref,\n        handler = _ref3.handler,\n        pageIndex = _ref3.pageIndex,\n        idFactory = _ref3.idFactory,\n        fontCache = _ref3.fontCache,\n        builtInCMapCache = _ref3.builtInCMapCache,\n        _ref3$options = _ref3.options,\n        options = _ref3$options === undefined ? null : _ref3$options,\n        pdfFunctionFactory = _ref3.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.handler = handler;\n    this.pageIndex = pageIndex;\n    this.idFactory = idFactory;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.options = options || DefaultPartialEvaluatorOptions;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.fetchBuiltInCMap = function (name) {\n      var cachedCMap = _this.builtInCMapCache[name];\n      if (cachedCMap) {\n        return Promise.resolve(cachedCMap);\n      }\n      return _this.handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\n        if (data.compressionType !== _util.CMapCompressionType.NONE) {\n          _this.builtInCMapCache[name] = data;\n        }\n        return data;\n      });\n    };\n  }\n  var TIME_SLOT_DURATION_MS = 20;\n  var CHECK_TIME_EVERY = 100;\n  function TimeSlotManager() {\n    this.reset();\n  }\n  TimeSlotManager.prototype = {\n    check: function TimeSlotManager_check() {\n      if (++this.checked < CHECK_TIME_EVERY) {\n        return false;\n      }\n      this.checked = 0;\n      return this.endTime <= Date.now();\n    },\n    reset: function TimeSlotManager_reset() {\n      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n      this.checked = 0;\n    }\n  };\n  function normalizeBlendMode(value) {\n    if (!(0, _primitives.isName)(value)) {\n      return 'source-over';\n    }\n    switch (value.name) {\n      case 'Normal':\n      case 'Compatible':\n        return 'source-over';\n      case 'Multiply':\n        return 'multiply';\n      case 'Screen':\n        return 'screen';\n      case 'Overlay':\n        return 'overlay';\n      case 'Darken':\n        return 'darken';\n      case 'Lighten':\n        return 'lighten';\n      case 'ColorDodge':\n        return 'color-dodge';\n      case 'ColorBurn':\n        return 'color-burn';\n      case 'HardLight':\n        return 'hard-light';\n      case 'SoftLight':\n        return 'soft-light';\n      case 'Difference':\n        return 'difference';\n      case 'Exclusion':\n        return 'exclusion';\n      case 'Hue':\n        return 'hue';\n      case 'Saturation':\n        return 'saturation';\n      case 'Color':\n        return 'color';\n      case 'Luminosity':\n        return 'luminosity';\n    }\n    (0, _util.warn)('Unsupported blend mode: ' + value.name);\n    return 'source-over';\n  }\n  var deferred = Promise.resolve();\n  var TILING_PATTERN = 1,\n      SHADING_PATTERN = 2;\n  PartialEvaluator.prototype = {\n    clone: function clone() {\n      var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultPartialEvaluatorOptions;\n\n      var newEvaluator = Object.create(this);\n      newEvaluator.options = newOptions;\n      return newEvaluator;\n    },\n\n    hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n      if (!(0, _primitives.isDict)(resources)) {\n        return false;\n      }\n      var processed = Object.create(null);\n      if (resources.objId) {\n        processed[resources.objId] = true;\n      }\n      var nodes = [resources],\n          xref = this.xref;\n      while (nodes.length) {\n        var key, i, ii;\n        var node = nodes.shift();\n        var graphicStates = node.get('ExtGState');\n        if ((0, _primitives.isDict)(graphicStates)) {\n          var graphicStatesKeys = graphicStates.getKeys();\n          for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n            key = graphicStatesKeys[i];\n            var graphicState = graphicStates.get(key);\n            var bm = graphicState.get('BM');\n            if ((0, _primitives.isName)(bm) && bm.name !== 'Normal') {\n              return true;\n            }\n          }\n        }\n        var xObjects = node.get('XObject');\n        if (!(0, _primitives.isDict)(xObjects)) {\n          continue;\n        }\n        var xObjectsKeys = xObjects.getKeys();\n        for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n          key = xObjectsKeys[i];\n          var xObject = xObjects.getRaw(key);\n          if ((0, _primitives.isRef)(xObject)) {\n            if (processed[xObject.toString()]) {\n              continue;\n            }\n            xObject = xref.fetch(xObject);\n          }\n          if (!(0, _primitives.isStream)(xObject)) {\n            continue;\n          }\n          if (xObject.dict.objId) {\n            if (processed[xObject.dict.objId]) {\n              continue;\n            }\n            processed[xObject.dict.objId] = true;\n          }\n          var xResources = xObject.dict.get('Resources');\n          if ((0, _primitives.isDict)(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n            nodes.push(xResources);\n            if (xResources.objId) {\n              processed[xResources.objId] = true;\n            }\n          }\n        }\n      }\n      return false;\n    },\n    buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n      var dict = xobj.dict;\n      var matrix = dict.getArray('Matrix');\n      var bbox = dict.getArray('BBox');\n      var group = dict.get('Group');\n      if (group) {\n        var groupOptions = {\n          matrix: matrix,\n          bbox: bbox,\n          smask: smask,\n          isolated: false,\n          knockout: false\n        };\n        var groupSubtype = group.get('S');\n        var colorSpace = null;\n        if ((0, _primitives.isName)(groupSubtype, 'Transparency')) {\n          groupOptions.isolated = group.get('I') || false;\n          groupOptions.knockout = group.get('K') || false;\n          if (group.has('CS')) {\n            colorSpace = _colorspace.ColorSpace.parse(group.get('CS'), this.xref, resources, this.pdfFunctionFactory);\n          }\n        }\n        if (smask && smask.backdrop) {\n          colorSpace = colorSpace || _colorspace.ColorSpace.singletons.rgb;\n          smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n        }\n        operatorList.addOp(_util.OPS.beginGroup, [groupOptions]);\n      }\n      operatorList.addOp(_util.OPS.paintFormXObjectBegin, [matrix, bbox]);\n      return this.getOperatorList({\n        stream: xobj,\n        task: task,\n        resources: dict.get('Resources') || resources,\n        operatorList: operatorList,\n        initialState: initialState\n      }).then(function () {\n        operatorList.addOp(_util.OPS.paintFormXObjectEnd, []);\n        if (group) {\n          operatorList.addOp(_util.OPS.endGroup, [groupOptions]);\n        }\n      });\n    },\n    buildPaintImageXObject: function buildPaintImageXObject(_ref4) {\n      var _this2 = this;\n\n      var resources = _ref4.resources,\n          image = _ref4.image,\n          _ref4$isInline = _ref4.isInline,\n          isInline = _ref4$isInline === undefined ? false : _ref4$isInline,\n          operatorList = _ref4.operatorList,\n          cacheKey = _ref4.cacheKey,\n          imageCache = _ref4.imageCache,\n          _ref4$forceDisableNat = _ref4.forceDisableNativeImageDecoder,\n          forceDisableNativeImageDecoder = _ref4$forceDisableNat === undefined ? false : _ref4$forceDisableNat;\n\n      var dict = image.dict;\n      var w = dict.get('Width', 'W');\n      var h = dict.get('Height', 'H');\n      if (!(w && (0, _util.isNum)(w)) || !(h && (0, _util.isNum)(h))) {\n        (0, _util.warn)('Image dimensions are missing, or not numbers.');\n        return Promise.resolve();\n      }\n      var maxImageSize = this.options.maxImageSize;\n      if (maxImageSize !== -1 && w * h > maxImageSize) {\n        (0, _util.warn)('Image exceeded maximum allowed size and was removed.');\n        return Promise.resolve();\n      }\n      var imageMask = dict.get('ImageMask', 'IM') || false;\n      var imgData, args;\n      if (imageMask) {\n        var width = dict.get('Width', 'W');\n        var height = dict.get('Height', 'H');\n        var bitStrideLength = width + 7 >> 3;\n        var imgArray = image.getBytes(bitStrideLength * height);\n        var decode = dict.getArray('Decode', 'D');\n        imgData = _image.PDFImage.createMask({\n          imgArray: imgArray,\n          width: width,\n          height: height,\n          imageIsFromDecodeStream: image instanceof _stream.DecodeStream,\n          inverseDecode: !!decode && decode[0] > 0\n        });\n        imgData.cached = true;\n        args = [imgData];\n        operatorList.addOp(_util.OPS.paintImageMaskXObject, args);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintImageMaskXObject,\n            args: args\n          };\n        }\n        return Promise.resolve();\n      }\n      var softMask = dict.get('SMask', 'SM') || false;\n      var mask = dict.get('Mask') || false;\n      var SMALL_IMAGE_DIMENSIONS = 200;\n      if (isInline && !softMask && !mask && !(image instanceof _jpeg_stream.JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n        var imageObj = new _image.PDFImage({\n          xref: this.xref,\n          res: resources,\n          image: image,\n          isInline: isInline,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n        imgData = imageObj.createImageData(true);\n        operatorList.addOp(_util.OPS.paintInlineImageXObject, [imgData]);\n        return Promise.resolve();\n      }\n      var nativeImageDecoderSupport = forceDisableNativeImageDecoder ? _util.NativeImageDecoding.NONE : this.options.nativeImageDecoderSupport;\n      var objId = 'img_' + this.idFactory.createObjId();\n      if (nativeImageDecoderSupport !== _util.NativeImageDecoding.NONE && !softMask && !mask && image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources, this.pdfFunctionFactory)) {\n        return this.handler.sendWithPromise('obj', [objId, this.pageIndex, 'JpegStream', image.getIR(this.options.forceDataSchema)]).then(function () {\n          operatorList.addDependency(objId);\n          args = [objId, w, h];\n          operatorList.addOp(_util.OPS.paintJpegXObject, args);\n          if (cacheKey) {\n            imageCache[cacheKey] = {\n              fn: _util.OPS.paintJpegXObject,\n              args: args\n            };\n          }\n        }, function (reason) {\n          (0, _util.warn)('Native JPEG decoding failed -- trying to recover: ' + (reason && reason.message));\n          return _this2.buildPaintImageXObject({\n            resources: resources,\n            image: image,\n            isInline: isInline,\n            operatorList: operatorList,\n            cacheKey: cacheKey,\n            imageCache: imageCache,\n            forceDisableNativeImageDecoder: true\n          });\n        });\n      }\n      var nativeImageDecoder = null;\n      if (nativeImageDecoderSupport === _util.NativeImageDecoding.DECODE && (image instanceof _jpeg_stream.JpegStream || mask instanceof _jpeg_stream.JpegStream || softMask instanceof _jpeg_stream.JpegStream)) {\n        nativeImageDecoder = new NativeImageDecoder({\n          xref: this.xref,\n          resources: resources,\n          handler: this.handler,\n          forceDataSchema: this.options.forceDataSchema,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n      }\n      operatorList.addDependency(objId);\n      args = [objId, w, h];\n      _image.PDFImage.buildImage({\n        handler: this.handler,\n        xref: this.xref,\n        res: resources,\n        image: image,\n        isInline: isInline,\n        nativeDecoder: nativeImageDecoder,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      }).then(function (imageObj) {\n        var imgData = imageObj.createImageData(false);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', imgData], [imgData.data.buffer]);\n      }).catch(function (reason) {\n        (0, _util.warn)('Unable to decode image: ' + reason);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', null]);\n      });\n      operatorList.addOp(_util.OPS.paintImageXObject, args);\n      if (cacheKey) {\n        imageCache[cacheKey] = {\n          fn: _util.OPS.paintImageXObject,\n          args: args\n        };\n      }\n      return Promise.resolve();\n    },\n\n    handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n      var smaskContent = smask.get('G');\n      var smaskOptions = {\n        subtype: smask.get('S').name,\n        backdrop: smask.get('BC')\n      };\n      var transferObj = smask.get('TR');\n      if ((0, _function.isPDFFunction)(transferObj)) {\n        var transferFn = this.pdfFunctionFactory.create(transferObj);\n        var transferMap = new Uint8Array(256);\n        var tmp = new Float32Array(1);\n        for (var i = 0; i < 256; i++) {\n          tmp[0] = i / 255;\n          transferFn(tmp, 0, tmp, 0);\n          transferMap[i] = tmp[0] * 255 | 0;\n        }\n        smaskOptions.transferMap = transferMap;\n      }\n      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n    },\n    handleTilingType: function handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n      var _this3 = this;\n\n      var tilingOpList = new _operator_list.OperatorList();\n      var resourcesArray = [patternDict.get('Resources'), resources];\n      var patternResources = _primitives.Dict.merge(this.xref, resourcesArray);\n      return this.getOperatorList({\n        stream: pattern,\n        task: task,\n        resources: patternResources,\n        operatorList: tilingOpList\n      }).then(function () {\n        return (0, _pattern.getTilingPatternIR)({\n          fnArray: tilingOpList.fnArray,\n          argsArray: tilingOpList.argsArray\n        }, patternDict, args);\n      }).then(function (tilingPatternIR) {\n        operatorList.addDependencies(tilingOpList.dependencies);\n        operatorList.addOp(fn, tilingPatternIR);\n      }, function (reason) {\n        if (_this3.options.ignoreErrors) {\n          _this3.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('handleTilingType - ignoring pattern: \"' + reason + '\".');\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n      var _this4 = this;\n\n      var fontName;\n      if (fontArgs) {\n        fontArgs = fontArgs.slice();\n        fontName = fontArgs[0].name;\n      }\n      return this.loadFont(fontName, fontRef, resources).then(function (translated) {\n        if (!translated.font.isType3Font) {\n          return translated;\n        }\n        return translated.loadType3Data(_this4, resources, operatorList, task).then(function () {\n          return translated;\n        }).catch(function (reason) {\n          _this4.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n          return new TranslatedFont('g_font_error', new _fonts.ErrorFont('Type3 font load error: ' + reason), translated.font);\n        });\n      }).then(function (translated) {\n        state.font = translated.font;\n        translated.send(_this4.handler);\n        return translated.loadedName;\n      });\n    },\n    handleText: function PartialEvaluator_handleText(chars, state) {\n      var _this5 = this;\n\n      var font = state.font;\n      var glyphs = font.charsToGlyphs(chars);\n      var isAddToPathSet = !!(state.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n      if (font.data && (isAddToPathSet || this.options.disableFontFace || state.fillColorSpace.name === 'Pattern')) {\n        var buildPath = function buildPath(fontChar) {\n          if (!font.renderer.hasBuiltPath(fontChar)) {\n            var path = font.renderer.getPathJs(fontChar);\n            _this5.handler.send('commonobj', [font.loadedName + '_path_' + fontChar, 'FontPath', path]);\n          }\n        };\n        for (var i = 0, ii = glyphs.length; i < ii; i++) {\n          var glyph = glyphs[i];\n          buildPath(glyph.fontChar);\n          var accent = glyph.accent;\n          if (accent && accent.fontChar) {\n            buildPath(accent.fontChar);\n          }\n        }\n      }\n      return glyphs;\n    },\n    setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, stateManager) {\n      var _this6 = this;\n\n      var gStateObj = [];\n      var gStateKeys = gState.getKeys();\n      var promise = Promise.resolve();\n\n      var _loop = function _loop() {\n        var key = gStateKeys[i];\n        var value = gState.get(key);\n        switch (key) {\n          case 'Type':\n            break;\n          case 'LW':\n          case 'LC':\n          case 'LJ':\n          case 'ML':\n          case 'D':\n          case 'RI':\n          case 'FL':\n          case 'CA':\n          case 'ca':\n            gStateObj.push([key, value]);\n            break;\n          case 'Font':\n            promise = promise.then(function () {\n              return _this6.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                gStateObj.push([key, [loadedName, value[1]]]);\n              });\n            });\n            break;\n          case 'BM':\n            gStateObj.push([key, normalizeBlendMode(value)]);\n            break;\n          case 'SMask':\n            if ((0, _primitives.isName)(value, 'None')) {\n              gStateObj.push([key, false]);\n              break;\n            }\n            if ((0, _primitives.isDict)(value)) {\n              promise = promise.then(function () {\n                return _this6.handleSMask(value, resources, operatorList, task, stateManager);\n              });\n              gStateObj.push([key, true]);\n            } else {\n              (0, _util.warn)('Unsupported SMask type');\n            }\n            break;\n          case 'OP':\n          case 'op':\n          case 'OPM':\n          case 'BG':\n          case 'BG2':\n          case 'UCR':\n          case 'UCR2':\n          case 'TR':\n          case 'TR2':\n          case 'HT':\n          case 'SM':\n          case 'SA':\n          case 'AIS':\n          case 'TK':\n            (0, _util.info)('graphic state operator ' + key);\n            break;\n          default:\n            (0, _util.info)('Unknown graphic state operator ' + key);\n            break;\n        }\n      };\n\n      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n        _loop();\n      }\n      return promise.then(function () {\n        if (gStateObj.length > 0) {\n          operatorList.addOp(_util.OPS.setGState, [gStateObj]);\n        }\n      });\n    },\n    loadFont: function PartialEvaluator_loadFont(fontName, font, resources) {\n      var _this7 = this;\n\n      function errorFont() {\n        return Promise.resolve(new TranslatedFont('g_font_error', new _fonts.ErrorFont('Font ' + fontName + ' is not available'), font));\n      }\n      var fontRef,\n          xref = this.xref;\n      if (font) {\n        if (!(0, _primitives.isRef)(font)) {\n          throw new Error('The \"font\" object should be a reference.');\n        }\n        fontRef = font;\n      } else {\n        var fontRes = resources.get('Font');\n        if (fontRes) {\n          fontRef = fontRes.getRaw(fontName);\n        } else {\n          (0, _util.warn)('fontRes not available');\n          return errorFont();\n        }\n      }\n      if (!fontRef) {\n        (0, _util.warn)('fontRef not available');\n        return errorFont();\n      }\n      if (this.fontCache.has(fontRef)) {\n        return this.fontCache.get(fontRef);\n      }\n      font = xref.fetchIfRef(fontRef);\n      if (!(0, _primitives.isDict)(font)) {\n        return errorFont();\n      }\n      if (font.translated) {\n        return font.translated;\n      }\n      var fontCapability = (0, _util.createPromiseCapability)();\n      var preEvaluatedFont = this.preEvaluateFont(font);\n      var descriptor = preEvaluatedFont.descriptor;\n      var fontRefIsRef = (0, _primitives.isRef)(fontRef),\n          fontID;\n      if (fontRefIsRef) {\n        fontID = fontRef.toString();\n      }\n      if ((0, _primitives.isDict)(descriptor)) {\n        if (!descriptor.fontAliases) {\n          descriptor.fontAliases = Object.create(null);\n        }\n        var fontAliases = descriptor.fontAliases;\n        var hash = preEvaluatedFont.hash;\n        if (fontAliases[hash]) {\n          var aliasFontRef = fontAliases[hash].aliasRef;\n          if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n            this.fontCache.putAlias(fontRef, aliasFontRef);\n            return this.fontCache.get(fontRef);\n          }\n        } else {\n          fontAliases[hash] = { fontID: _fonts.Font.getFontID() };\n        }\n        if (fontRefIsRef) {\n          fontAliases[hash].aliasRef = fontRef;\n        }\n        fontID = fontAliases[hash].fontID;\n      }\n      if (fontRefIsRef) {\n        this.fontCache.put(fontRef, fontCapability.promise);\n      } else {\n        if (!fontID) {\n          fontID = this.idFactory.createObjId();\n        }\n        this.fontCache.put('id_' + fontID, fontCapability.promise);\n      }\n      (0, _util.assert)(fontID, 'The \"fontID\" must be defined.');\n      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n      font.translated = fontCapability.promise;\n      var translatedPromise;\n      try {\n        translatedPromise = this.translateFont(preEvaluatedFont);\n      } catch (e) {\n        translatedPromise = Promise.reject(e);\n      }\n      translatedPromise.then(function (translatedFont) {\n        if (translatedFont.fontType !== undefined) {\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[translatedFont.fontType] = true;\n        }\n        fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n      }).catch(function (reason) {\n        _this7.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n        try {\n          var descriptor = preEvaluatedFont.descriptor;\n          var fontFile3 = descriptor && descriptor.get('FontFile3');\n          var subtype = fontFile3 && fontFile3.get('Subtype');\n          var fontType = (0, _fonts.getFontType)(preEvaluatedFont.type, subtype && subtype.name);\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[fontType] = true;\n        } catch (ex) {}\n        fontCapability.resolve(new TranslatedFont(font.loadedName, new _fonts.ErrorFont(reason instanceof Error ? reason.message : reason), font));\n      });\n      return fontCapability.promise;\n    },\n    buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n      var lastIndex = operatorList.length - 1;\n      if (!args) {\n        args = [];\n      }\n      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== _util.OPS.constructPath) {\n        operatorList.addOp(_util.OPS.constructPath, [[fn], args]);\n      } else {\n        var opArgs = operatorList.argsArray[lastIndex];\n        opArgs[0].push(fn);\n        Array.prototype.push.apply(opArgs[1], args);\n      }\n    },\n    handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task) {\n      var patternName = args[args.length - 1];\n      var pattern;\n      if ((0, _primitives.isName)(patternName) && (pattern = patterns.get(patternName.name))) {\n        var dict = (0, _primitives.isStream)(pattern) ? pattern.dict : pattern;\n        var typeNum = dict.get('PatternType');\n        if (typeNum === TILING_PATTERN) {\n          var color = cs.base ? cs.base.getRgb(args, 0) : null;\n          return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n        } else if (typeNum === SHADING_PATTERN) {\n          var shading = dict.get('Shading');\n          var matrix = dict.getArray('Matrix');\n          pattern = _pattern.Pattern.parseShading(shading, matrix, this.xref, resources, this.handler, this.pdfFunctionFactory);\n          operatorList.addOp(fn, pattern.getIR());\n          return Promise.resolve();\n        }\n        return Promise.reject(new Error('Unknown PatternType: ' + typeNum));\n      }\n      operatorList.addOp(fn, args);\n      return Promise.resolve();\n    },\n    getOperatorList: function getOperatorList(_ref5) {\n      var _this8 = this;\n\n      var stream = _ref5.stream,\n          task = _ref5.task,\n          resources = _ref5.resources,\n          operatorList = _ref5.operatorList,\n          _ref5$initialState = _ref5.initialState,\n          initialState = _ref5$initialState === undefined ? null : _ref5$initialState;\n\n      resources = resources || _primitives.Dict.empty;\n      initialState = initialState || new EvalState();\n      if (!operatorList) {\n        throw new Error('getOperatorList: missing \"operatorList\" parameter');\n      }\n      var self = this;\n      var xref = this.xref;\n      var imageCache = Object.create(null);\n      var xobjs = resources.get('XObject') || _primitives.Dict.empty;\n      var patterns = resources.get('Pattern') || _primitives.Dict.empty;\n      var stateManager = new StateManager(initialState);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var timeSlotManager = new TimeSlotManager();\n      function closePendingRestoreOPS(argument) {\n        for (var i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n          operatorList.addOp(_util.OPS.restore, []);\n        }\n      }\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          promise.then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            i,\n            ii,\n            cs;\n        while (!(stop = timeSlotManager.check())) {\n          operation.args = null;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          var args = operation.args;\n          var fn = operation.fn;\n          switch (fn | 0) {\n            case _util.OPS.paintXObject:\n              var name = args[0].name;\n              if (name && imageCache[name] !== undefined) {\n                operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n                args = null;\n                continue;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  operatorList.addOp(fn, args);\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name === 'Form') {\n                  stateManager.save();\n                  self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n                    stateManager.restore();\n                    resolveXObject();\n                  }, rejectXObject);\n                  return;\n                } else if (type.name === 'Image') {\n                  self.buildPaintImageXObject({\n                    resources: resources,\n                    image: xobj,\n                    operatorList: operatorList,\n                    cacheKey: name,\n                    imageCache: imageCache\n                  }).then(resolveXObject, rejectXObject);\n                  return;\n                } else if (type.name === 'PS') {\n                  (0, _util.info)('Ignored XObject subtype PS');\n                } else {\n                  throw new _util.FormatError('Unhandled XObject subtype ' + type.name);\n                }\n                resolveXObject();\n              }).catch(function (reason) {\n                if (self.options.ignoreErrors) {\n                  self.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n                  (0, _util.warn)('getOperatorList - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setFont:\n              var fontSize = args[1];\n              next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                operatorList.addOp(_util.OPS.setFont, [loadedName, fontSize]);\n              }));\n              return;\n            case _util.OPS.endInlineImage:\n              var cacheKey = args[0].cacheKey;\n              if (cacheKey) {\n                var cacheEntry = imageCache[cacheKey];\n                if (cacheEntry !== undefined) {\n                  operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n                  args = null;\n                  continue;\n                }\n              }\n              next(self.buildPaintImageXObject({\n                resources: resources,\n                image: args[0],\n                isInline: true,\n                operatorList: operatorList,\n                cacheKey: cacheKey,\n                imageCache: imageCache\n              }));\n              return;\n            case _util.OPS.showText:\n              args[0] = self.handleText(args[0], stateManager.state);\n              break;\n            case _util.OPS.showSpacedText:\n              var arr = args[0];\n              var combinedGlyphs = [];\n              var arrLength = arr.length;\n              var state = stateManager.state;\n              for (i = 0; i < arrLength; ++i) {\n                var arrItem = arr[i];\n                if ((0, _util.isString)(arrItem)) {\n                  Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n                } else if ((0, _util.isNum)(arrItem)) {\n                  combinedGlyphs.push(arrItem);\n                }\n              }\n              args[0] = combinedGlyphs;\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              operatorList.addOp(_util.OPS.setWordSpacing, [args.shift()]);\n              operatorList.addOp(_util.OPS.setCharSpacing, [args.shift()]);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.setTextRenderingMode:\n              stateManager.state.textRenderingMode = args[0];\n              break;\n            case _util.OPS.setFillColorSpace:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setStrokeColorSpace:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setFillColor:\n              cs = stateManager.state.fillColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColor:\n              cs = stateManager.state.strokeColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillGray:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeGray:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillCMYKColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeCMYKColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillRGBColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setStrokeRGBColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setFillColorN:\n              cs = stateManager.state.fillColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setFillColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColorN:\n              cs = stateManager.state.strokeColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setStrokeColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.shadingFill:\n              var shadingRes = resources.get('Shading');\n              if (!shadingRes) {\n                throw new _util.FormatError('No shading resource found');\n              }\n              var shading = shadingRes.get(args[0].name);\n              if (!shading) {\n                throw new _util.FormatError('No shading object found');\n              }\n              var shadingFill = _pattern.Pattern.parseShading(shading, null, xref, resources, self.handler, self.pdfFunctionFactory);\n              var patternIR = shadingFill.getIR();\n              args = [patternIR];\n              fn = _util.OPS.shadingFill;\n              break;\n            case _util.OPS.setGState:\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !extGState.has(dictName.name)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              next(self.setGState(resources, gState, operatorList, task, stateManager));\n              return;\n            case _util.OPS.moveTo:\n            case _util.OPS.lineTo:\n            case _util.OPS.curveTo:\n            case _util.OPS.curveTo2:\n            case _util.OPS.curveTo3:\n            case _util.OPS.closePath:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.rectangle:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.markPoint:\n            case _util.OPS.markPointProps:\n            case _util.OPS.beginMarkedContent:\n            case _util.OPS.beginMarkedContentProps:\n            case _util.OPS.endMarkedContent:\n            case _util.OPS.beginCompat:\n            case _util.OPS.endCompat:\n              continue;\n            default:\n              if (args !== null) {\n                for (i = 0, ii = args.length; i < ii; i++) {\n                  if (args[i] instanceof _primitives.Dict) {\n                    break;\n                  }\n                }\n                if (i < ii) {\n                  (0, _util.warn)('getOperatorList - ignoring operator: ' + fn);\n                  continue;\n                }\n              }\n          }\n          operatorList.addOp(fn, args);\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        closePendingRestoreOPS();\n        resolve();\n      }).catch(function (reason) {\n        if (_this8.options.ignoreErrors) {\n          _this8.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('getOperatorList - ignoring errors during task: ' + task.name);\n          closePendingRestoreOPS();\n          return;\n        }\n        throw reason;\n      });\n    },\n    getTextContent: function getTextContent(_ref6) {\n      var _this9 = this;\n\n      var stream = _ref6.stream,\n          task = _ref6.task,\n          resources = _ref6.resources,\n          _ref6$stateManager = _ref6.stateManager,\n          stateManager = _ref6$stateManager === undefined ? null : _ref6$stateManager,\n          _ref6$normalizeWhites = _ref6.normalizeWhitespace,\n          normalizeWhitespace = _ref6$normalizeWhites === undefined ? false : _ref6$normalizeWhites,\n          _ref6$combineTextItem = _ref6.combineTextItems,\n          combineTextItems = _ref6$combineTextItem === undefined ? false : _ref6$combineTextItem,\n          sink = _ref6.sink,\n          _ref6$seenStyles = _ref6.seenStyles,\n          seenStyles = _ref6$seenStyles === undefined ? Object.create(null) : _ref6$seenStyles;\n\n      resources = resources || _primitives.Dict.empty;\n      stateManager = stateManager || new StateManager(new TextState());\n      var WhitespaceRegexp = /\\s/g;\n      var textContent = {\n        items: [],\n        styles: Object.create(null)\n      };\n      var textContentItem = {\n        initialized: false,\n        str: [],\n        width: 0,\n        height: 0,\n        vertical: false,\n        lastAdvanceWidth: 0,\n        lastAdvanceHeight: 0,\n        textAdvanceScale: 0,\n        spaceWidth: 0,\n        fakeSpaceMin: Infinity,\n        fakeMultiSpaceMin: Infinity,\n        fakeMultiSpaceMax: -0,\n        textRunBreakAllowed: false,\n        transform: null,\n        fontName: null\n      };\n      var SPACE_FACTOR = 0.3;\n      var MULTI_SPACE_FACTOR = 1.5;\n      var MULTI_SPACE_FACTOR_MAX = 4;\n      var self = this;\n      var xref = this.xref;\n      var xobjs = null;\n      var skipEmptyXObjs = Object.create(null);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var textState;\n      function ensureTextContentItem() {\n        if (textContentItem.initialized) {\n          return textContentItem;\n        }\n        var font = textState.font;\n        if (!(font.loadedName in seenStyles)) {\n          seenStyles[font.loadedName] = true;\n          textContent.styles[font.loadedName] = {\n            fontFamily: font.fallbackName,\n            ascent: font.ascent,\n            descent: font.descent,\n            vertical: font.vertical\n          };\n        }\n        textContentItem.fontName = font.loadedName;\n        var tsm = [textState.fontSize * textState.textHScale, 0, 0, textState.fontSize, 0, textState.textRise];\n        if (font.isType3Font && textState.fontMatrix !== _util.FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n          var glyphHeight = font.bbox[3] - font.bbox[1];\n          if (glyphHeight > 0) {\n            glyphHeight = glyphHeight * textState.fontMatrix[3];\n            tsm[3] *= glyphHeight;\n          }\n        }\n        var trm = _util.Util.transform(textState.ctm, _util.Util.transform(textState.textMatrix, tsm));\n        textContentItem.transform = trm;\n        if (!font.vertical) {\n          textContentItem.width = 0;\n          textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n          textContentItem.vertical = false;\n        } else {\n          textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n          textContentItem.height = 0;\n          textContentItem.vertical = true;\n        }\n        var a = textState.textLineMatrix[0];\n        var b = textState.textLineMatrix[1];\n        var scaleLineX = Math.sqrt(a * a + b * b);\n        a = textState.ctm[0];\n        b = textState.ctm[1];\n        var scaleCtmX = Math.sqrt(a * a + b * b);\n        textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n        textContentItem.lastAdvanceWidth = 0;\n        textContentItem.lastAdvanceHeight = 0;\n        var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n        if (spaceWidth) {\n          textContentItem.spaceWidth = spaceWidth;\n          textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n          textContentItem.textRunBreakAllowed = !font.isMonospace;\n        } else {\n          textContentItem.spaceWidth = 0;\n          textContentItem.fakeSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMax = 0;\n          textContentItem.textRunBreakAllowed = false;\n        }\n        textContentItem.initialized = true;\n        return textContentItem;\n      }\n      function replaceWhitespace(str) {\n        var i = 0,\n            ii = str.length,\n            code;\n        while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n          i++;\n        }\n        return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n      }\n      function runBidiTransform(textChunk) {\n        var str = textChunk.str.join('');\n        var bidiResult = (0, _bidi.bidi)(str, -1, textChunk.vertical);\n        return {\n          str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n          dir: bidiResult.dir,\n          width: textChunk.width,\n          height: textChunk.height,\n          transform: textChunk.transform,\n          fontName: textChunk.fontName\n        };\n      }\n      function handleSetFont(fontName, fontRef) {\n        return self.loadFont(fontName, fontRef, resources).then(function (translated) {\n          textState.font = translated.font;\n          textState.fontMatrix = translated.font.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        });\n      }\n      function buildTextContentItem(chars) {\n        var font = textState.font;\n        var textChunk = ensureTextContentItem();\n        var width = 0;\n        var height = 0;\n        var glyphs = font.charsToGlyphs(chars);\n        for (var i = 0; i < glyphs.length; i++) {\n          var glyph = glyphs[i];\n          var glyphWidth = null;\n          if (font.vertical && glyph.vmetric) {\n            glyphWidth = glyph.vmetric[0];\n          } else {\n            glyphWidth = glyph.width;\n          }\n          var glyphUnicode = glyph.unicode;\n          var NormalizedUnicodes = (0, _unicode.getNormalizedUnicodes)();\n          if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n            glyphUnicode = NormalizedUnicodes[glyphUnicode];\n          }\n          glyphUnicode = (0, _unicode.reverseIfRtl)(glyphUnicode);\n          var charSpacing = textState.charSpacing;\n          if (glyph.isSpace) {\n            var wordSpacing = textState.wordSpacing;\n            charSpacing += wordSpacing;\n            if (wordSpacing > 0) {\n              addFakeSpaces(wordSpacing, textChunk.str);\n            }\n          }\n          var tx = 0;\n          var ty = 0;\n          if (!font.vertical) {\n            var w0 = glyphWidth * textState.fontMatrix[0];\n            tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n            width += tx;\n          } else {\n            var w1 = glyphWidth * textState.fontMatrix[0];\n            ty = w1 * textState.fontSize + charSpacing;\n            height += ty;\n          }\n          textState.translateTextMatrix(tx, ty);\n          textChunk.str.push(glyphUnicode);\n        }\n        if (!font.vertical) {\n          textChunk.lastAdvanceWidth = width;\n          textChunk.width += width;\n        } else {\n          textChunk.lastAdvanceHeight = height;\n          textChunk.height += Math.abs(height);\n        }\n        return textChunk;\n      }\n      function addFakeSpaces(width, strBuf) {\n        if (width < textContentItem.fakeSpaceMin) {\n          return;\n        }\n        if (width < textContentItem.fakeMultiSpaceMin) {\n          strBuf.push(' ');\n          return;\n        }\n        var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n        while (fakeSpaces-- > 0) {\n          strBuf.push(' ');\n        }\n      }\n      function flushTextContentItem() {\n        if (!textContentItem.initialized) {\n          return;\n        }\n        textContentItem.width *= textContentItem.textAdvanceScale;\n        textContentItem.height *= textContentItem.textAdvanceScale;\n        textContent.items.push(runBidiTransform(textContentItem));\n        textContentItem.initialized = false;\n        textContentItem.str.length = 0;\n      }\n      function enqueueChunk() {\n        var length = textContent.items.length;\n        if (length > 0) {\n          sink.enqueue(textContent, length);\n          textContent.items = [];\n          textContent.styles = Object.create(null);\n        }\n      }\n      var timeSlotManager = new TimeSlotManager();\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          enqueueChunk();\n          Promise.all([promise, sink.ready]).then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            args = [];\n        while (!(stop = timeSlotManager.check())) {\n          args.length = 0;\n          operation.args = args;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          textState = stateManager.state;\n          var fn = operation.fn;\n          args = operation.args;\n          var advance, diff;\n          switch (fn | 0) {\n            case _util.OPS.setFont:\n              var fontNameArg = args[0].name,\n                  fontSizeArg = args[1];\n              if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n                break;\n              }\n              flushTextContentItem();\n              textState.fontName = fontNameArg;\n              textState.fontSize = fontSizeArg;\n              next(handleSetFont(fontNameArg, null));\n              return;\n            case _util.OPS.setTextRise:\n              flushTextContentItem();\n              textState.textRise = args[0];\n              break;\n            case _util.OPS.setHScale:\n              flushTextContentItem();\n              textState.textHScale = args[0] / 100;\n              break;\n            case _util.OPS.setLeading:\n              flushTextContentItem();\n              textState.leading = args[0];\n              break;\n            case _util.OPS.moveText:\n              var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n              advance = args[0] - args[1];\n              if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(args[0], args[1]);\n                textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n                textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n                diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.setLeadingMoveText:\n              flushTextContentItem();\n              textState.leading = -args[1];\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.nextLine:\n              flushTextContentItem();\n              textState.carriageReturn();\n              break;\n            case _util.OPS.setTextMatrix:\n              advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n              if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(advance.width, advance.height);\n                textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n                textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n                diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              break;\n            case _util.OPS.setCharSpacing:\n              textState.charSpacing = args[0];\n              break;\n            case _util.OPS.setWordSpacing:\n              textState.wordSpacing = args[0];\n              break;\n            case _util.OPS.beginText:\n              flushTextContentItem();\n              textState.textMatrix = _util.IDENTITY_MATRIX.slice();\n              textState.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n              break;\n            case _util.OPS.showSpacedText:\n              var items = args[0];\n              var offset;\n              for (var j = 0, jj = items.length; j < jj; j++) {\n                if (typeof items[j] === 'string') {\n                  buildTextContentItem(items[j]);\n                } else if ((0, _util.isNum)(items[j])) {\n                  ensureTextContentItem();\n                  advance = items[j] * textState.fontSize / 1000;\n                  var breakTextRun = false;\n                  if (textState.font.vertical) {\n                    offset = advance;\n                    textState.translateTextMatrix(0, offset);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.height += offset;\n                    }\n                  } else {\n                    advance = -advance;\n                    offset = advance * textState.textHScale;\n                    textState.translateTextMatrix(offset, 0);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.width += offset;\n                    }\n                  }\n                  if (breakTextRun) {\n                    flushTextContentItem();\n                  } else if (advance > 0) {\n                    addFakeSpaces(advance, textContentItem.str);\n                  }\n                }\n              }\n              break;\n            case _util.OPS.showText:\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineShowText:\n              flushTextContentItem();\n              textState.carriageReturn();\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              flushTextContentItem();\n              textState.wordSpacing = args[0];\n              textState.charSpacing = args[1];\n              textState.carriageReturn();\n              buildTextContentItem(args[2]);\n              break;\n            case _util.OPS.paintXObject:\n              flushTextContentItem();\n              if (!xobjs) {\n                xobjs = resources.get('XObject') || _primitives.Dict.empty;\n              }\n              var name = args[0].name;\n              if (name && skipEmptyXObjs[name] !== undefined) {\n                break;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name !== 'Form') {\n                  skipEmptyXObjs[name] = true;\n                  resolveXObject();\n                  return;\n                }\n                var currentState = stateManager.state.clone();\n                var xObjStateManager = new StateManager(currentState);\n                var matrix = xobj.dict.getArray('Matrix');\n                if (Array.isArray(matrix) && matrix.length === 6) {\n                  xObjStateManager.transform(matrix);\n                }\n                enqueueChunk();\n                var sinkWrapper = {\n                  enqueueInvoked: false,\n                  enqueue: function enqueue(chunk, size) {\n                    this.enqueueInvoked = true;\n                    sink.enqueue(chunk, size);\n                  },\n\n                  get desiredSize() {\n                    return sink.desiredSize;\n                  },\n                  get ready() {\n                    return sink.ready;\n                  }\n                };\n                self.getTextContent({\n                  stream: xobj,\n                  task: task,\n                  resources: xobj.dict.get('Resources') || resources,\n                  stateManager: xObjStateManager,\n                  normalizeWhitespace: normalizeWhitespace,\n                  combineTextItems: combineTextItems,\n                  sink: sinkWrapper,\n                  seenStyles: seenStyles\n                }).then(function () {\n                  if (!sinkWrapper.enqueueInvoked) {\n                    skipEmptyXObjs[name] = true;\n                  }\n                  resolveXObject();\n                }, rejectXObject);\n              }).catch(function (reason) {\n                if (reason instanceof _util.AbortException) {\n                  return;\n                }\n                if (self.options.ignoreErrors) {\n                  (0, _util.warn)('getTextContent - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setGState:\n              flushTextContentItem();\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !(0, _primitives.isName)(dictName)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              if (!(0, _primitives.isDict)(gState)) {\n                break;\n              }\n              var gStateFont = gState.get('Font');\n              if (gStateFont) {\n                textState.fontName = null;\n                textState.fontSize = gStateFont[1];\n                next(handleSetFont(null, gStateFont[0]));\n                return;\n              }\n              break;\n          }\n          if (textContent.items.length >= sink.desiredSize) {\n            stop = true;\n            break;\n          }\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        flushTextContentItem();\n        enqueueChunk();\n        resolve();\n      }).catch(function (reason) {\n        if (reason instanceof _util.AbortException) {\n          return;\n        }\n        if (_this9.options.ignoreErrors) {\n          (0, _util.warn)('getTextContent - ignoring errors during task: ' + task.name);\n          flushTextContentItem();\n          enqueueChunk();\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, properties) {\n      var _this10 = this;\n\n      var xref = this.xref;\n      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n      if (properties.composite) {\n        var cidSystemInfo = dict.get('CIDSystemInfo');\n        if ((0, _primitives.isDict)(cidSystemInfo)) {\n          properties.cidSystemInfo = {\n            registry: cidSystemInfo.get('Registry'),\n            ordering: cidSystemInfo.get('Ordering'),\n            supplement: cidSystemInfo.get('Supplement')\n          };\n        }\n        var cidToGidMap = dict.get('CIDToGIDMap');\n        if ((0, _primitives.isStream)(cidToGidMap)) {\n          properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n        }\n      }\n      var differences = [];\n      var baseEncodingName = null;\n      var encoding;\n      if (dict.has('Encoding')) {\n        encoding = dict.get('Encoding');\n        if ((0, _primitives.isDict)(encoding)) {\n          baseEncodingName = encoding.get('BaseEncoding');\n          baseEncodingName = (0, _primitives.isName)(baseEncodingName) ? baseEncodingName.name : null;\n          if (encoding.has('Differences')) {\n            var diffEncoding = encoding.get('Differences');\n            var index = 0;\n            for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n              var data = xref.fetchIfRef(diffEncoding[j]);\n              if ((0, _util.isNum)(data)) {\n                index = data;\n              } else if ((0, _primitives.isName)(data)) {\n                differences[index++] = data.name;\n              } else {\n                throw new _util.FormatError('Invalid entry in \\'Differences\\' array: ' + data);\n              }\n            }\n          }\n        } else if ((0, _primitives.isName)(encoding)) {\n          baseEncodingName = encoding.name;\n        } else {\n          throw new _util.FormatError('Encoding is not a Name nor a Dict');\n        }\n        if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n          baseEncodingName = null;\n        }\n      }\n      if (baseEncodingName) {\n        properties.defaultEncoding = (0, _encodings.getEncoding)(baseEncodingName).slice();\n      } else {\n        var isSymbolicFont = !!(properties.flags & _fonts.FontFlags.Symbolic);\n        var isNonsymbolicFont = !!(properties.flags & _fonts.FontFlags.Nonsymbolic);\n        encoding = _encodings.StandardEncoding;\n        if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n          encoding = _encodings.WinAnsiEncoding;\n        }\n        if (isSymbolicFont) {\n          encoding = _encodings.MacRomanEncoding;\n          if (!properties.file) {\n            if (/Symbol/i.test(properties.name)) {\n              encoding = _encodings.SymbolSetEncoding;\n            } else if (/Dingbats/i.test(properties.name)) {\n              encoding = _encodings.ZapfDingbatsEncoding;\n            }\n          }\n        }\n        properties.defaultEncoding = encoding;\n      }\n      properties.differences = differences;\n      properties.baseEncodingName = baseEncodingName;\n      properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n      properties.dict = dict;\n      return toUnicodePromise.then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return _this10.buildToUnicode(properties);\n      }).then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return properties;\n      });\n    },\n    _buildSimpleFontToUnicode: function _buildSimpleFontToUnicode(properties) {\n      (0, _util.assert)(!properties.composite, 'Must be a simple font.');\n      var toUnicode = [],\n          charcode = void 0,\n          glyphName = void 0;\n      var encoding = properties.defaultEncoding.slice();\n      var baseEncodingName = properties.baseEncodingName;\n      var differences = properties.differences;\n      for (charcode in differences) {\n        glyphName = differences[charcode];\n        if (glyphName === '.notdef') {\n          continue;\n        }\n        encoding[charcode] = glyphName;\n      }\n      var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n      for (charcode in encoding) {\n        glyphName = encoding[charcode];\n        if (glyphName === '') {\n          continue;\n        } else if (glyphsUnicodeMap[glyphName] === undefined) {\n          var code = 0;\n          switch (glyphName[0]) {\n            case 'G':\n              if (glyphName.length === 3) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'g':\n              if (glyphName.length === 5) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'C':\n            case 'c':\n              if (glyphName.length >= 3) {\n                code = +glyphName.substr(1);\n              }\n              break;\n            default:\n              var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n              if (unicode !== -1) {\n                code = unicode;\n              }\n          }\n          if (code) {\n            if (baseEncodingName && code === +charcode) {\n              var baseEncoding = (0, _encodings.getEncoding)(baseEncodingName);\n              if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n                toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n                continue;\n              }\n            }\n            toUnicode[charcode] = String.fromCharCode(code);\n          }\n          continue;\n        }\n        toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n      }\n      return new _fonts.ToUnicodeMap(toUnicode);\n    },\n    buildToUnicode: function buildToUnicode(properties) {\n      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n      if (properties.hasIncludedToUnicodeMap) {\n        if (!properties.composite && properties.hasEncoding) {\n          properties.fallbackToUnicode = this._buildSimpleFontToUnicode(properties);\n        }\n        return Promise.resolve(properties.toUnicode);\n      }\n      if (!properties.composite) {\n        return Promise.resolve(this._buildSimpleFontToUnicode(properties));\n      }\n      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof _cmap.IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n        var registry = properties.cidSystemInfo.registry;\n        var ordering = properties.cidSystemInfo.ordering;\n        var ucs2CMapName = _primitives.Name.get(registry + '-' + ordering + '-UCS2');\n        return _cmap.CMapFactory.create({\n          encoding: ucs2CMapName,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (ucs2CMap) {\n          var cMap = properties.cMap;\n          var toUnicode = [];\n          cMap.forEach(function (charcode, cid) {\n            if (cid > 0xffff) {\n              throw new _util.FormatError('Max size of CID is 65,535');\n            }\n            var ucs2 = ucs2CMap.lookup(cid);\n            if (ucs2) {\n              toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n            }\n          });\n          return new _fonts.ToUnicodeMap(toUnicode);\n        });\n      }\n      return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n    },\n\n    readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n      var cmapObj = toUnicode;\n      if ((0, _primitives.isName)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          return new _fonts.ToUnicodeMap(cmap.getMap());\n        });\n      } else if ((0, _primitives.isStream)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          var map = new Array(cmap.length);\n          cmap.forEach(function (charCode, token) {\n            var str = [];\n            for (var k = 0; k < token.length; k += 2) {\n              var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              if ((w1 & 0xF800) !== 0xD800) {\n                str.push(w1);\n                continue;\n              }\n              k += 2;\n              var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n            }\n            map[charCode] = String.fromCharCode.apply(String, str);\n          });\n          return new _fonts.ToUnicodeMap(map);\n        });\n      }\n      return Promise.resolve(null);\n    },\n    readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n      var glyphsData = cidToGidStream.getBytes();\n      var result = [];\n      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n        var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n        if (glyphID === 0) {\n          continue;\n        }\n        var code = j >> 1;\n        result[code] = glyphID;\n      }\n      return result;\n    },\n    extractWidths: function PartialEvaluator_extractWidths(dict, descriptor, properties) {\n      var xref = this.xref;\n      var glyphsWidths = [];\n      var defaultWidth = 0;\n      var glyphsVMetrics = [];\n      var defaultVMetrics;\n      var i, ii, j, jj, start, code, widths;\n      if (properties.composite) {\n        defaultWidth = dict.has('DW') ? dict.get('DW') : 1000;\n        widths = dict.get('W');\n        if (widths) {\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            start = xref.fetchIfRef(widths[i++]);\n            code = xref.fetchIfRef(widths[i]);\n            if (Array.isArray(code)) {\n              for (j = 0, jj = code.length; j < jj; j++) {\n                glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n              }\n            } else {\n              var width = xref.fetchIfRef(widths[++i]);\n              for (j = start; j <= code; j++) {\n                glyphsWidths[j] = width;\n              }\n            }\n          }\n        }\n        if (properties.vertical) {\n          var vmetrics = dict.getArray('DW2') || [880, -1000];\n          defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\n          vmetrics = dict.get('W2');\n          if (vmetrics) {\n            for (i = 0, ii = vmetrics.length; i < ii; i++) {\n              start = xref.fetchIfRef(vmetrics[i++]);\n              code = xref.fetchIfRef(vmetrics[i]);\n              if (Array.isArray(code)) {\n                for (j = 0, jj = code.length; j < jj; j++) {\n                  glyphsVMetrics[start++] = [xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j])];\n                }\n              } else {\n                var vmetric = [xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i])];\n                for (j = start; j <= code; j++) {\n                  glyphsVMetrics[j] = vmetric;\n                }\n              }\n            }\n          }\n        }\n      } else {\n        var firstChar = properties.firstChar;\n        widths = dict.get('Widths');\n        if (widths) {\n          j = firstChar;\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n          }\n          defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if ((0, _primitives.isName)(baseFontName)) {\n            var metrics = this.getBaseFontMetrics(baseFontName.name);\n            glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n            defaultWidth = metrics.defaultWidth;\n          }\n        }\n      }\n      var isMonospace = true;\n      var firstWidth = defaultWidth;\n      for (var glyph in glyphsWidths) {\n        var glyphWidth = glyphsWidths[glyph];\n        if (!glyphWidth) {\n          continue;\n        }\n        if (!firstWidth) {\n          firstWidth = glyphWidth;\n          continue;\n        }\n        if (firstWidth !== glyphWidth) {\n          isMonospace = false;\n          break;\n        }\n      }\n      if (isMonospace) {\n        properties.flags |= _fonts.FontFlags.FixedPitch;\n      }\n      properties.defaultWidth = defaultWidth;\n      properties.widths = glyphsWidths;\n      properties.defaultVMetrics = defaultVMetrics;\n      properties.vmetrics = glyphsVMetrics;\n    },\n    isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n      var fontNameWoStyle = baseFontName.split('-')[0];\n      return fontNameWoStyle in (0, _standard_fonts.getSerifFonts)() || fontNameWoStyle.search(/serif/gi) !== -1;\n    },\n    getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n      var defaultWidth = 0;\n      var widths = [];\n      var monospace = false;\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)();\n      var lookupName = stdFontMap[name] || name;\n      var Metrics = (0, _metrics.getMetrics)();\n      if (!(lookupName in Metrics)) {\n        if (this.isSerifFont(name)) {\n          lookupName = 'Times-Roman';\n        } else {\n          lookupName = 'Helvetica';\n        }\n      }\n      var glyphWidths = Metrics[lookupName];\n      if ((0, _util.isNum)(glyphWidths)) {\n        defaultWidth = glyphWidths;\n        monospace = true;\n      } else {\n        widths = glyphWidths();\n      }\n      return {\n        defaultWidth: defaultWidth,\n        monospace: monospace,\n        widths: widths\n      };\n    },\n    buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n      var widths = Object.create(null);\n      var differences = properties.differences;\n      var encoding = properties.defaultEncoding;\n      for (var charCode = 0; charCode < 256; charCode++) {\n        if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n          widths[charCode] = widthsByGlyphName[differences[charCode]];\n          continue;\n        }\n        if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n          widths[charCode] = widthsByGlyphName[encoding[charCode]];\n          continue;\n        }\n      }\n      return widths;\n    },\n    preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict) {\n      var baseDict = dict;\n      var type = dict.get('Subtype');\n      if (!(0, _primitives.isName)(type)) {\n        throw new _util.FormatError('invalid font Subtype');\n      }\n      var composite = false;\n      var uint8array;\n      if (type.name === 'Type0') {\n        var df = dict.get('DescendantFonts');\n        if (!df) {\n          throw new _util.FormatError('Descendant fonts are not specified');\n        }\n        dict = Array.isArray(df) ? this.xref.fetchIfRef(df[0]) : df;\n        type = dict.get('Subtype');\n        if (!(0, _primitives.isName)(type)) {\n          throw new _util.FormatError('invalid font Subtype');\n        }\n        composite = true;\n      }\n      var descriptor = dict.get('FontDescriptor');\n      if (descriptor) {\n        var hash = new _murmurhash.MurmurHash3_64();\n        var encoding = baseDict.getRaw('Encoding');\n        if ((0, _primitives.isName)(encoding)) {\n          hash.update(encoding.name);\n        } else if ((0, _primitives.isRef)(encoding)) {\n          hash.update(encoding.toString());\n        } else if ((0, _primitives.isDict)(encoding)) {\n          var keys = encoding.getKeys();\n          for (var i = 0, ii = keys.length; i < ii; i++) {\n            var entry = encoding.getRaw(keys[i]);\n            if ((0, _primitives.isName)(entry)) {\n              hash.update(entry.name);\n            } else if ((0, _primitives.isRef)(entry)) {\n              hash.update(entry.toString());\n            } else if (Array.isArray(entry)) {\n              var diffLength = entry.length,\n                  diffBuf = new Array(diffLength);\n              for (var j = 0; j < diffLength; j++) {\n                var diffEntry = entry[j];\n                if ((0, _primitives.isName)(diffEntry)) {\n                  diffBuf[j] = diffEntry.name;\n                } else if ((0, _util.isNum)(diffEntry) || (0, _primitives.isRef)(diffEntry)) {\n                  diffBuf[j] = diffEntry.toString();\n                }\n              }\n              hash.update(diffBuf.join());\n            }\n          }\n        }\n        var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n        if ((0, _primitives.isStream)(toUnicode)) {\n          var stream = toUnicode.str || toUnicode;\n          uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n          hash.update(uint8array);\n        } else if ((0, _primitives.isName)(toUnicode)) {\n          hash.update(toUnicode.name);\n        }\n        var widths = dict.get('Widths') || baseDict.get('Widths');\n        if (widths) {\n          uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n          hash.update(uint8array);\n        }\n      }\n      return {\n        descriptor: descriptor,\n        dict: dict,\n        baseDict: baseDict,\n        composite: composite,\n        type: type.name,\n        hash: hash ? hash.hexdigest() : ''\n      };\n    },\n    translateFont: function PartialEvaluator_translateFont(preEvaluatedFont) {\n      var _this11 = this;\n\n      var baseDict = preEvaluatedFont.baseDict;\n      var dict = preEvaluatedFont.dict;\n      var composite = preEvaluatedFont.composite;\n      var descriptor = preEvaluatedFont.descriptor;\n      var type = preEvaluatedFont.type;\n      var maxCharIndex = composite ? 0xFFFF : 0xFF;\n      var properties;\n      if (!descriptor) {\n        if (type === 'Type3') {\n          descriptor = new _primitives.Dict(null);\n          descriptor.set('FontName', _primitives.Name.get(type));\n          descriptor.set('FontBBox', dict.getArray('FontBBox'));\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if (!(0, _primitives.isName)(baseFontName)) {\n            throw new _util.FormatError('Base font is not specified');\n          }\n          baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n          var metrics = this.getBaseFontMetrics(baseFontName);\n          var fontNameWoStyle = baseFontName.split('-')[0];\n          var flags = (this.isSerifFont(fontNameWoStyle) ? _fonts.FontFlags.Serif : 0) | (metrics.monospace ? _fonts.FontFlags.FixedPitch : 0) | ((0, _standard_fonts.getSymbolsFonts)()[fontNameWoStyle] ? _fonts.FontFlags.Symbolic : _fonts.FontFlags.Nonsymbolic);\n          properties = {\n            type: type,\n            name: baseFontName,\n            widths: metrics.widths,\n            defaultWidth: metrics.defaultWidth,\n            flags: flags,\n            firstChar: 0,\n            lastChar: maxCharIndex\n          };\n          return this.extractDataStructures(dict, dict, properties).then(function (properties) {\n            properties.widths = _this11.buildCharCodeToWidth(metrics.widths, properties);\n            return new _fonts.Font(baseFontName, null, properties);\n          });\n        }\n      }\n      var firstChar = dict.get('FirstChar') || 0;\n      var lastChar = dict.get('LastChar') || maxCharIndex;\n      var fontName = descriptor.get('FontName');\n      var baseFont = dict.get('BaseFont');\n      if ((0, _util.isString)(fontName)) {\n        fontName = _primitives.Name.get(fontName);\n      }\n      if ((0, _util.isString)(baseFont)) {\n        baseFont = _primitives.Name.get(baseFont);\n      }\n      if (type !== 'Type3') {\n        var fontNameStr = fontName && fontName.name;\n        var baseFontStr = baseFont && baseFont.name;\n        if (fontNameStr !== baseFontStr) {\n          (0, _util.info)('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n          if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n            fontName = baseFont;\n          }\n        }\n      }\n      fontName = fontName || baseFont;\n      if (!(0, _primitives.isName)(fontName)) {\n        throw new _util.FormatError('invalid font name');\n      }\n      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n      if (fontFile) {\n        if (fontFile.dict) {\n          var subtype = fontFile.dict.get('Subtype');\n          if (subtype) {\n            subtype = subtype.name;\n          }\n          var length1 = fontFile.dict.get('Length1');\n          var length2 = fontFile.dict.get('Length2');\n          var length3 = fontFile.dict.get('Length3');\n        }\n      }\n      properties = {\n        type: type,\n        name: fontName.name,\n        subtype: subtype,\n        file: fontFile,\n        length1: length1,\n        length2: length2,\n        length3: length3,\n        loadedName: baseDict.loadedName,\n        composite: composite,\n        wideChars: composite,\n        fixedPitch: false,\n        fontMatrix: dict.getArray('FontMatrix') || _util.FONT_IDENTITY_MATRIX,\n        firstChar: firstChar || 0,\n        lastChar: lastChar || maxCharIndex,\n        bbox: descriptor.getArray('FontBBox'),\n        ascent: descriptor.get('Ascent'),\n        descent: descriptor.get('Descent'),\n        xHeight: descriptor.get('XHeight'),\n        capHeight: descriptor.get('CapHeight'),\n        flags: descriptor.get('Flags'),\n        italicAngle: descriptor.get('ItalicAngle'),\n        isType3Font: false\n      };\n      var cMapPromise;\n      if (composite) {\n        var cidEncoding = baseDict.get('Encoding');\n        if ((0, _primitives.isName)(cidEncoding)) {\n          properties.cidEncoding = cidEncoding.name;\n        }\n        cMapPromise = _cmap.CMapFactory.create({\n          encoding: cidEncoding,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cMap) {\n          properties.cMap = cMap;\n          properties.vertical = properties.cMap.vertical;\n        });\n      } else {\n        cMapPromise = Promise.resolve(undefined);\n      }\n      return cMapPromise.then(function () {\n        return _this11.extractDataStructures(dict, baseDict, properties);\n      }).then(function (properties) {\n        _this11.extractWidths(dict, descriptor, properties);\n        if (type === 'Type3') {\n          properties.isType3Font = true;\n        }\n        return new _fonts.Font(fontName.name, fontFile, properties);\n      });\n    }\n  };\n  return PartialEvaluator;\n}();\nvar TranslatedFont = function TranslatedFontClosure() {\n  function TranslatedFont(loadedName, font, dict) {\n    this.loadedName = loadedName;\n    this.font = font;\n    this.dict = dict;\n    this.type3Loaded = null;\n    this.sent = false;\n  }\n  TranslatedFont.prototype = {\n    send: function send(handler) {\n      if (this.sent) {\n        return;\n      }\n      var fontData = this.font.exportData();\n      handler.send('commonobj', [this.loadedName, 'Font', fontData]);\n      this.sent = true;\n    },\n    loadType3Data: function loadType3Data(evaluator, resources, parentOperatorList, task) {\n      if (!this.font.isType3Font) {\n        throw new Error('Must be a Type3 font.');\n      }\n      if (this.type3Loaded) {\n        return this.type3Loaded;\n      }\n      var type3Options = Object.create(evaluator.options);\n      type3Options.ignoreErrors = false;\n      var type3Evaluator = evaluator.clone(type3Options);\n      var translatedFont = this.font;\n      var loadCharProcsPromise = Promise.resolve();\n      var charProcs = this.dict.get('CharProcs');\n      var fontResources = this.dict.get('Resources') || resources;\n      var charProcKeys = charProcs.getKeys();\n      var charProcOperatorList = Object.create(null);\n\n      var _loop2 = function _loop2() {\n        var key = charProcKeys[i];\n        loadCharProcsPromise = loadCharProcsPromise.then(function () {\n          var glyphStream = charProcs.get(key);\n          var operatorList = new _operator_list.OperatorList();\n          return type3Evaluator.getOperatorList({\n            stream: glyphStream,\n            task: task,\n            resources: fontResources,\n            operatorList: operatorList\n          }).then(function () {\n            charProcOperatorList[key] = operatorList.getIR();\n            parentOperatorList.addDependencies(operatorList.dependencies);\n          }).catch(function (reason) {\n            (0, _util.warn)('Type3 font resource \"' + key + '\" is not available.');\n            var operatorList = new _operator_list.OperatorList();\n            charProcOperatorList[key] = operatorList.getIR();\n          });\n        });\n      };\n\n      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n        _loop2();\n      }\n      this.type3Loaded = loadCharProcsPromise.then(function () {\n        translatedFont.charProcOperatorList = charProcOperatorList;\n      });\n      return this.type3Loaded;\n    }\n  };\n  return TranslatedFont;\n}();\nvar StateManager = function StateManagerClosure() {\n  function StateManager(initialState) {\n    this.state = initialState;\n    this.stateStack = [];\n  }\n  StateManager.prototype = {\n    save: function save() {\n      var old = this.state;\n      this.stateStack.push(this.state);\n      this.state = old.clone();\n    },\n    restore: function restore() {\n      var prev = this.stateStack.pop();\n      if (prev) {\n        this.state = prev;\n      }\n    },\n    transform: function transform(args) {\n      this.state.ctm = _util.Util.transform(this.state.ctm, args);\n    }\n  };\n  return StateManager;\n}();\nvar TextState = function TextStateClosure() {\n  function TextState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.fontName = null;\n    this.fontSize = 0;\n    this.font = null;\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n    this.textMatrix = _util.IDENTITY_MATRIX.slice();\n    this.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.leading = 0;\n    this.textHScale = 1;\n    this.textRise = 0;\n  }\n  TextState.prototype = {\n    setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textLineMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textLineMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n      var font = this.font;\n      if (!font) {\n        return null;\n      }\n      var m = this.textLineMatrix;\n      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n        return null;\n      }\n      var txDiff = e - m[4],\n          tyDiff = f - m[5];\n      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n        return null;\n      }\n      var tx,\n          ty,\n          denominator = a * d - b * c;\n      if (font.vertical) {\n        tx = -tyDiff * c / denominator;\n        ty = tyDiff * a / denominator;\n      } else {\n        tx = txDiff * d / denominator;\n        ty = -txDiff * b / denominator;\n      }\n      return {\n        width: tx,\n        height: ty,\n        value: font.vertical ? ty : tx\n      };\n    },\n    calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n      var tsm = [this.fontSize * this.textHScale, 0, 0, this.fontSize, 0, this.textRise];\n      return _util.Util.transform(ctm, _util.Util.transform(this.textMatrix, tsm));\n    },\n    carriageReturn: function TextState_carriageReturn() {\n      this.translateTextLineMatrix(0, -this.leading);\n      this.textMatrix = this.textLineMatrix.slice();\n    },\n    clone: function TextState_clone() {\n      var clone = Object.create(this);\n      clone.textMatrix = this.textMatrix.slice();\n      clone.textLineMatrix = this.textLineMatrix.slice();\n      clone.fontMatrix = this.fontMatrix.slice();\n      return clone;\n    }\n  };\n  return TextState;\n}();\nvar EvalState = function EvalStateClosure() {\n  function EvalState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.font = null;\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\n    this.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n    this.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n  }\n  EvalState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    }\n  };\n  return EvalState;\n}();\nvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n  var getOPMap = (0, _util.getLookupTableFactory)(function (t) {\n    t['w'] = {\n      id: _util.OPS.setLineWidth,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['J'] = {\n      id: _util.OPS.setLineCap,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['j'] = {\n      id: _util.OPS.setLineJoin,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['M'] = {\n      id: _util.OPS.setMiterLimit,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['d'] = {\n      id: _util.OPS.setDash,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['ri'] = {\n      id: _util.OPS.setRenderingIntent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['i'] = {\n      id: _util.OPS.setFlatness,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['gs'] = {\n      id: _util.OPS.setGState,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['q'] = {\n      id: _util.OPS.save,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Q'] = {\n      id: _util.OPS.restore,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['cm'] = {\n      id: _util.OPS.transform,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['m'] = {\n      id: _util.OPS.moveTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['l'] = {\n      id: _util.OPS.lineTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['c'] = {\n      id: _util.OPS.curveTo,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['v'] = {\n      id: _util.OPS.curveTo2,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['y'] = {\n      id: _util.OPS.curveTo3,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['h'] = {\n      id: _util.OPS.closePath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['re'] = {\n      id: _util.OPS.rectangle,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['S'] = {\n      id: _util.OPS.stroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['s'] = {\n      id: _util.OPS.closeStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['F'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f*'] = {\n      id: _util.OPS.eoFill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B'] = {\n      id: _util.OPS.fillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B*'] = {\n      id: _util.OPS.eoFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b'] = {\n      id: _util.OPS.closeFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b*'] = {\n      id: _util.OPS.closeEOFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['n'] = {\n      id: _util.OPS.endPath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W'] = {\n      id: _util.OPS.clip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W*'] = {\n      id: _util.OPS.eoClip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BT'] = {\n      id: _util.OPS.beginText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ET'] = {\n      id: _util.OPS.endText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tc'] = {\n      id: _util.OPS.setCharSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tw'] = {\n      id: _util.OPS.setWordSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tz'] = {\n      id: _util.OPS.setHScale,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TL'] = {\n      id: _util.OPS.setLeading,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tf'] = {\n      id: _util.OPS.setFont,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tr'] = {\n      id: _util.OPS.setTextRenderingMode,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Ts'] = {\n      id: _util.OPS.setTextRise,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Td'] = {\n      id: _util.OPS.moveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['TD'] = {\n      id: _util.OPS.setLeadingMoveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tm'] = {\n      id: _util.OPS.setTextMatrix,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['T*'] = {\n      id: _util.OPS.nextLine,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tj'] = {\n      id: _util.OPS.showText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TJ'] = {\n      id: _util.OPS.showSpacedText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\\''] = {\n      id: _util.OPS.nextLineShowText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\"'] = {\n      id: _util.OPS.nextLineSetSpacingShowText,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['d0'] = {\n      id: _util.OPS.setCharWidth,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['d1'] = {\n      id: _util.OPS.setCharWidthAndBounds,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['CS'] = {\n      id: _util.OPS.setStrokeColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['cs'] = {\n      id: _util.OPS.setFillColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['SC'] = {\n      id: _util.OPS.setStrokeColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['SCN'] = {\n      id: _util.OPS.setStrokeColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['sc'] = {\n      id: _util.OPS.setFillColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['scn'] = {\n      id: _util.OPS.setFillColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['G'] = {\n      id: _util.OPS.setStrokeGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['g'] = {\n      id: _util.OPS.setFillGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['RG'] = {\n      id: _util.OPS.setStrokeRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['rg'] = {\n      id: _util.OPS.setFillRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['K'] = {\n      id: _util.OPS.setStrokeCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['k'] = {\n      id: _util.OPS.setFillCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['sh'] = {\n      id: _util.OPS.shadingFill,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BI'] = {\n      id: _util.OPS.beginInlineImage,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ID'] = {\n      id: _util.OPS.beginImageData,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EI'] = {\n      id: _util.OPS.endInlineImage,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Do'] = {\n      id: _util.OPS.paintXObject,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['MP'] = {\n      id: _util.OPS.markPoint,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['DP'] = {\n      id: _util.OPS.markPointProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['BMC'] = {\n      id: _util.OPS.beginMarkedContent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BDC'] = {\n      id: _util.OPS.beginMarkedContentProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['EMC'] = {\n      id: _util.OPS.endMarkedContent,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BX'] = {\n      id: _util.OPS.beginCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EX'] = {\n      id: _util.OPS.endCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BM'] = null;\n    t['BD'] = null;\n    t['true'] = null;\n    t['fa'] = null;\n    t['fal'] = null;\n    t['fals'] = null;\n    t['false'] = null;\n    t['nu'] = null;\n    t['nul'] = null;\n    t['null'] = null;\n  });\n  function EvaluatorPreprocessor(stream, xref, stateManager) {\n    this.opMap = getOPMap();\n    this.parser = new _parser.Parser(new _parser.Lexer(stream, this.opMap), false, xref);\n    this.stateManager = stateManager;\n    this.nonProcessedArgs = [];\n  }\n  EvaluatorPreprocessor.prototype = {\n    get savedStatesDepth() {\n      return this.stateManager.stateStack.length;\n    },\n    read: function EvaluatorPreprocessor_read(operation) {\n      var args = operation.args;\n      while (true) {\n        var obj = this.parser.getObj();\n        if ((0, _primitives.isCmd)(obj)) {\n          var cmd = obj.cmd;\n          var opSpec = this.opMap[cmd];\n          if (!opSpec) {\n            (0, _util.warn)('Unknown command \"' + cmd + '\"');\n            continue;\n          }\n          var fn = opSpec.id;\n          var numArgs = opSpec.numArgs;\n          var argsLength = args !== null ? args.length : 0;\n          if (!opSpec.variableArgs) {\n            if (argsLength !== numArgs) {\n              var nonProcessedArgs = this.nonProcessedArgs;\n              while (argsLength > numArgs) {\n                nonProcessedArgs.push(args.shift());\n                argsLength--;\n              }\n              while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n                if (args === null) {\n                  args = [];\n                }\n                args.unshift(nonProcessedArgs.pop());\n                argsLength++;\n              }\n            }\n            if (argsLength < numArgs) {\n              (0, _util.warn)('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n              if (args !== null) {\n                args.length = 0;\n              }\n              continue;\n            }\n          } else if (argsLength > numArgs) {\n            (0, _util.info)('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n          }\n          this.preprocessCommand(fn, args);\n          operation.fn = fn;\n          operation.args = args;\n          return true;\n        }\n        if ((0, _primitives.isEOF)(obj)) {\n          return false;\n        }\n        if (obj !== null) {\n          if (args === null) {\n            args = [];\n          }\n          args.push(obj);\n          if (args.length > 33) {\n            throw new _util.FormatError('Too many arguments');\n          }\n        }\n      }\n    },\n    preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n      switch (fn | 0) {\n        case _util.OPS.save:\n          this.stateManager.save();\n          break;\n        case _util.OPS.restore:\n          this.stateManager.restore();\n          break;\n        case _util.OPS.transform:\n          this.stateManager.transform(args);\n          break;\n      }\n    }\n  };\n  return EvaluatorPreprocessor;\n}();\nexports.PartialEvaluator = PartialEvaluator;\n\n/***/ }),\n/* 141 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CMapFactory = exports.IdentityCMap = exports.CMap = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _parser = __w_pdfjs_require__(27);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar BUILT_IN_CMAPS = ['Adobe-GB1-UCS2', 'Adobe-CNS1-UCS2', 'Adobe-Japan1-UCS2', 'Adobe-Korea1-UCS2', '78-EUC-H', '78-EUC-V', '78-H', '78-RKSJ-H', '78-RKSJ-V', '78-V', '78ms-RKSJ-H', '78ms-RKSJ-V', '83pv-RKSJ-H', '90ms-RKSJ-H', '90ms-RKSJ-V', '90msp-RKSJ-H', '90msp-RKSJ-V', '90pv-RKSJ-H', '90pv-RKSJ-V', 'Add-H', 'Add-RKSJ-H', 'Add-RKSJ-V', 'Add-V', 'Adobe-CNS1-0', 'Adobe-CNS1-1', 'Adobe-CNS1-2', 'Adobe-CNS1-3', 'Adobe-CNS1-4', 'Adobe-CNS1-5', 'Adobe-CNS1-6', 'Adobe-GB1-0', 'Adobe-GB1-1', 'Adobe-GB1-2', 'Adobe-GB1-3', 'Adobe-GB1-4', 'Adobe-GB1-5', 'Adobe-Japan1-0', 'Adobe-Japan1-1', 'Adobe-Japan1-2', 'Adobe-Japan1-3', 'Adobe-Japan1-4', 'Adobe-Japan1-5', 'Adobe-Japan1-6', 'Adobe-Korea1-0', 'Adobe-Korea1-1', 'Adobe-Korea1-2', 'B5-H', 'B5-V', 'B5pc-H', 'B5pc-V', 'CNS-EUC-H', 'CNS-EUC-V', 'CNS1-H', 'CNS1-V', 'CNS2-H', 'CNS2-V', 'ETHK-B5-H', 'ETHK-B5-V', 'ETen-B5-H', 'ETen-B5-V', 'ETenms-B5-H', 'ETenms-B5-V', 'EUC-H', 'EUC-V', 'Ext-H', 'Ext-RKSJ-H', 'Ext-RKSJ-V', 'Ext-V', 'GB-EUC-H', 'GB-EUC-V', 'GB-H', 'GB-V', 'GBK-EUC-H', 'GBK-EUC-V', 'GBK2K-H', 'GBK2K-V', 'GBKp-EUC-H', 'GBKp-EUC-V', 'GBT-EUC-H', 'GBT-EUC-V', 'GBT-H', 'GBT-V', 'GBTpc-EUC-H', 'GBTpc-EUC-V', 'GBpc-EUC-H', 'GBpc-EUC-V', 'H', 'HKdla-B5-H', 'HKdla-B5-V', 'HKdlb-B5-H', 'HKdlb-B5-V', 'HKgccs-B5-H', 'HKgccs-B5-V', 'HKm314-B5-H', 'HKm314-B5-V', 'HKm471-B5-H', 'HKm471-B5-V', 'HKscs-B5-H', 'HKscs-B5-V', 'Hankaku', 'Hiragana', 'KSC-EUC-H', 'KSC-EUC-V', 'KSC-H', 'KSC-Johab-H', 'KSC-Johab-V', 'KSC-V', 'KSCms-UHC-H', 'KSCms-UHC-HW-H', 'KSCms-UHC-HW-V', 'KSCms-UHC-V', 'KSCpc-EUC-H', 'KSCpc-EUC-V', 'Katakana', 'NWP-H', 'NWP-V', 'RKSJ-H', 'RKSJ-V', 'Roman', 'UniCNS-UCS2-H', 'UniCNS-UCS2-V', 'UniCNS-UTF16-H', 'UniCNS-UTF16-V', 'UniCNS-UTF32-H', 'UniCNS-UTF32-V', 'UniCNS-UTF8-H', 'UniCNS-UTF8-V', 'UniGB-UCS2-H', 'UniGB-UCS2-V', 'UniGB-UTF16-H', 'UniGB-UTF16-V', 'UniGB-UTF32-H', 'UniGB-UTF32-V', 'UniGB-UTF8-H', 'UniGB-UTF8-V', 'UniJIS-UCS2-H', 'UniJIS-UCS2-HW-H', 'UniJIS-UCS2-HW-V', 'UniJIS-UCS2-V', 'UniJIS-UTF16-H', 'UniJIS-UTF16-V', 'UniJIS-UTF32-H', 'UniJIS-UTF32-V', 'UniJIS-UTF8-H', 'UniJIS-UTF8-V', 'UniJIS2004-UTF16-H', 'UniJIS2004-UTF16-V', 'UniJIS2004-UTF32-H', 'UniJIS2004-UTF32-V', 'UniJIS2004-UTF8-H', 'UniJIS2004-UTF8-V', 'UniJISPro-UCS2-HW-V', 'UniJISPro-UCS2-V', 'UniJISPro-UTF8-V', 'UniJISX0213-UTF32-H', 'UniJISX0213-UTF32-V', 'UniJISX02132004-UTF32-H', 'UniJISX02132004-UTF32-V', 'UniKS-UCS2-H', 'UniKS-UCS2-V', 'UniKS-UTF16-H', 'UniKS-UTF16-V', 'UniKS-UTF32-H', 'UniKS-UTF32-V', 'UniKS-UTF8-H', 'UniKS-UTF8-V', 'V', 'WP-Symbol'];\nvar CMap = function CMapClosure() {\n  function CMap(builtInCMap) {\n    this.codespaceRanges = [[], [], [], []];\n    this.numCodespaceRanges = 0;\n    this._map = [];\n    this.name = '';\n    this.vertical = false;\n    this.useCMap = null;\n    this.builtInCMap = builtInCMap;\n  }\n  CMap.prototype = {\n    addCodespaceRange: function addCodespaceRange(n, low, high) {\n      this.codespaceRanges[n - 1].push(low, high);\n      this.numCodespaceRanges++;\n    },\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      while (low <= high) {\n        this._map[low++] = dstLow++;\n      }\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      var lastByte = dstLow.length - 1;\n      while (low <= high) {\n        this._map[low++] = dstLow;\n        dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n      }\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      var i = 0,\n          ii = array.length;\n      while (low <= high && i < ii) {\n        this._map[low] = array[i++];\n        ++low;\n      }\n    },\n    mapOne: function mapOne(src, dst) {\n      this._map[src] = dst;\n    },\n    lookup: function lookup(code) {\n      return this._map[code];\n    },\n    contains: function contains(code) {\n      return this._map[code] !== undefined;\n    },\n    forEach: function forEach(callback) {\n      var map = this._map;\n      var length = map.length;\n      if (length <= 0x10000) {\n        for (var i = 0; i < length; i++) {\n          if (map[i] !== undefined) {\n            callback(i, map[i]);\n          }\n        }\n      } else {\n        for (var _i in map) {\n          callback(_i, map[_i]);\n        }\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    getMap: function getMap() {\n      return this._map;\n    },\n    readCharCode: function readCharCode(str, offset, out) {\n      var c = 0;\n      var codespaceRanges = this.codespaceRanges;\n      var codespaceRangesLen = this.codespaceRanges.length;\n      for (var n = 0; n < codespaceRangesLen; n++) {\n        c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n        var codespaceRange = codespaceRanges[n];\n        for (var k = 0, kk = codespaceRange.length; k < kk;) {\n          var low = codespaceRange[k++];\n          var high = codespaceRange[k++];\n          if (c >= low && c <= high) {\n            out.charcode = c;\n            out.length = n + 1;\n            return;\n          }\n        }\n      }\n      out.charcode = 0;\n      out.length = 1;\n    },\n\n    get length() {\n      return this._map.length;\n    },\n    get isIdentityCMap() {\n      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n        return false;\n      }\n      if (this._map.length !== 0x10000) {\n        return false;\n      }\n      for (var i = 0; i < 0x10000; i++) {\n        if (this._map[i] !== i) {\n          return false;\n        }\n      }\n      return true;\n    }\n  };\n  return CMap;\n}();\nvar IdentityCMap = function IdentityCMapClosure() {\n  function IdentityCMap(vertical, n) {\n    CMap.call(this);\n    this.vertical = vertical;\n    this.addCodespaceRange(n, 0, 0xffff);\n  }\n  _util.Util.inherit(IdentityCMap, CMap, {});\n  IdentityCMap.prototype = {\n    addCodespaceRange: CMap.prototype.addCodespaceRange,\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapCidRange');\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapBfRange');\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      (0, _util.unreachable)('should not call mapBfRangeToArray');\n    },\n    mapOne: function mapOne(src, dst) {\n      (0, _util.unreachable)('should not call mapCidOne');\n    },\n    lookup: function lookup(code) {\n      return Number.isInteger(code) && code <= 0xffff ? code : undefined;\n    },\n    contains: function contains(code) {\n      return Number.isInteger(code) && code <= 0xffff;\n    },\n    forEach: function forEach(callback) {\n      for (var i = 0; i <= 0xffff; i++) {\n        callback(i, i);\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      return Number.isInteger(value) && value <= 0xffff ? value : -1;\n    },\n    getMap: function getMap() {\n      var map = new Array(0x10000);\n      for (var i = 0; i <= 0xffff; i++) {\n        map[i] = i;\n      }\n      return map;\n    },\n\n    readCharCode: CMap.prototype.readCharCode,\n    get length() {\n      return 0x10000;\n    },\n    get isIdentityCMap() {\n      (0, _util.unreachable)('should not access .isIdentityCMap');\n    }\n  };\n  return IdentityCMap;\n}();\nvar BinaryCMapReader = function BinaryCMapReaderClosure() {\n  function hexToInt(a, size) {\n    var n = 0;\n    for (var i = 0; i <= size; i++) {\n      n = n << 8 | a[i];\n    }\n    return n >>> 0;\n  }\n  function hexToStr(a, size) {\n    if (size === 1) {\n      return String.fromCharCode(a[0], a[1]);\n    }\n    if (size === 3) {\n      return String.fromCharCode(a[0], a[1], a[2], a[3]);\n    }\n    return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n  }\n  function addHex(a, b, size) {\n    var c = 0;\n    for (var i = size; i >= 0; i--) {\n      c += a[i] + b[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  function incHex(a, size) {\n    var c = 1;\n    for (var i = size; i >= 0 && c > 0; i--) {\n      c += a[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  var MAX_NUM_SIZE = 16;\n  var MAX_ENCODED_NUM_SIZE = 19;\n  function BinaryCMapStream(data) {\n    this.buffer = data;\n    this.pos = 0;\n    this.end = data.length;\n    this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n  }\n  BinaryCMapStream.prototype = {\n    readByte: function readByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.buffer[this.pos++];\n    },\n    readNumber: function readNumber() {\n      var n = 0;\n      var last;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        n = n << 7 | b & 0x7F;\n      } while (!last);\n      return n;\n    },\n    readSigned: function readSigned() {\n      var n = this.readNumber();\n      return n & 1 ? ~(n >>> 1) : n >>> 1;\n    },\n    readHex: function readHex(num, size) {\n      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n      this.pos += size + 1;\n    },\n    readHexNumber: function readHexNumber(num, size) {\n      var last;\n      var stack = this.tmpBuf,\n          sp = 0;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        stack[sp++] = b & 0x7F;\n      } while (!last);\n      var i = size,\n          buffer = 0,\n          bufferSize = 0;\n      while (i >= 0) {\n        while (bufferSize < 8 && stack.length > 0) {\n          buffer = stack[--sp] << bufferSize | buffer;\n          bufferSize += 7;\n        }\n        num[i] = buffer & 255;\n        i--;\n        buffer >>= 8;\n        bufferSize -= 8;\n      }\n    },\n    readHexSigned: function readHexSigned(num, size) {\n      this.readHexNumber(num, size);\n      var sign = num[size] & 1 ? 255 : 0;\n      var c = 0;\n      for (var i = 0; i <= size; i++) {\n        c = (c & 1) << 8 | num[i];\n        num[i] = c >> 1 ^ sign;\n      }\n    },\n    readString: function readString() {\n      var len = this.readNumber();\n      var s = '';\n      for (var i = 0; i < len; i++) {\n        s += String.fromCharCode(this.readNumber());\n      }\n      return s;\n    }\n  };\n  function processBinaryCMap(data, cMap, extend) {\n    return new Promise(function (resolve, reject) {\n      var stream = new BinaryCMapStream(data);\n      var header = stream.readByte();\n      cMap.vertical = !!(header & 1);\n      var useCMap = null;\n      var start = new Uint8Array(MAX_NUM_SIZE);\n      var end = new Uint8Array(MAX_NUM_SIZE);\n      var char = new Uint8Array(MAX_NUM_SIZE);\n      var charCode = new Uint8Array(MAX_NUM_SIZE);\n      var tmp = new Uint8Array(MAX_NUM_SIZE);\n      var code;\n      var b;\n      while ((b = stream.readByte()) >= 0) {\n        var type = b >> 5;\n        if (type === 7) {\n          switch (b & 0x1F) {\n            case 0:\n              stream.readString();\n              break;\n            case 1:\n              useCMap = stream.readString();\n              break;\n          }\n          continue;\n        }\n        var sequence = !!(b & 0x10);\n        var dataSize = b & 15;\n        if (dataSize + 1 > MAX_NUM_SIZE) {\n          throw new Error('processBinaryCMap: Invalid dataSize.');\n        }\n        var ucs2DataSize = 1;\n        var subitemsCount = stream.readNumber();\n        var i;\n        switch (type) {\n          case 0:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            }\n            break;\n          case 1:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            stream.readNumber();\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              stream.readNumber();\n            }\n            break;\n          case 2:\n            stream.readHex(char, dataSize);\n            code = stream.readNumber();\n            cMap.mapOne(hexToInt(char, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, dataSize);\n                addHex(char, tmp, dataSize);\n              }\n              code = stream.readSigned() + (code + 1);\n              cMap.mapOne(hexToInt(char, dataSize), code);\n            }\n            break;\n          case 3:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            code = stream.readNumber();\n            cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, dataSize);\n                addHex(start, end, dataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              code = stream.readNumber();\n              cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            }\n            break;\n          case 4:\n            stream.readHex(char, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, ucs2DataSize);\n                addHex(char, tmp, ucs2DataSize);\n              }\n              incHex(charCode, dataSize);\n              stream.readHexSigned(tmp, dataSize);\n              addHex(charCode, tmp, dataSize);\n              cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          case 5:\n            stream.readHex(start, ucs2DataSize);\n            stream.readHexNumber(end, ucs2DataSize);\n            addHex(end, start, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, ucs2DataSize);\n                addHex(start, end, ucs2DataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, ucs2DataSize);\n              addHex(end, start, ucs2DataSize);\n              stream.readHex(charCode, dataSize);\n              cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          default:\n            reject(new Error('processBinaryCMap: Unknown type: ' + type));\n            return;\n        }\n      }\n      if (useCMap) {\n        resolve(extend(useCMap));\n        return;\n      }\n      resolve(cMap);\n    });\n  }\n  function BinaryCMapReader() {}\n  BinaryCMapReader.prototype = { process: processBinaryCMap };\n  return BinaryCMapReader;\n}();\nvar CMapFactory = function CMapFactoryClosure() {\n  function strToInt(str) {\n    var a = 0;\n    for (var i = 0; i < str.length; i++) {\n      a = a << 8 | str.charCodeAt(i);\n    }\n    return a >>> 0;\n  }\n  function expectString(obj) {\n    if (!(0, _util.isString)(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected string.');\n    }\n  }\n  function expectInt(obj) {\n    if (!Number.isInteger(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected int.');\n    }\n  }\n  function parseBfChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseBfRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      if (Number.isInteger(obj) || (0, _util.isString)(obj)) {\n        var dstLow = Number.isInteger(obj) ? String.fromCharCode(obj) : obj;\n        cMap.mapBfRange(low, high, dstLow);\n      } else if ((0, _primitives.isCmd)(obj, '[')) {\n        obj = lexer.getObj();\n        var array = [];\n        while (!(0, _primitives.isCmd)(obj, ']') && !(0, _primitives.isEOF)(obj)) {\n          array.push(obj);\n          obj = lexer.getObj();\n        }\n        cMap.mapBfRangeToArray(low, high, array);\n      } else {\n        break;\n      }\n    }\n    throw new _util.FormatError('Invalid bf range.');\n  }\n  function parseCidChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseCidRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dstLow = obj;\n      cMap.mapCidRange(low, high, dstLow);\n    }\n  }\n  function parseCodespaceRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcodespacerange')) {\n        return;\n      }\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var high = strToInt(obj);\n      cMap.addCodespaceRange(obj.length, low, high);\n    }\n    throw new _util.FormatError('Invalid codespace range.');\n  }\n  function parseWMode(cMap, lexer) {\n    var obj = lexer.getObj();\n    if (Number.isInteger(obj)) {\n      cMap.vertical = !!obj;\n    }\n  }\n  function parseCMapName(cMap, lexer) {\n    var obj = lexer.getObj();\n    if ((0, _primitives.isName)(obj) && (0, _util.isString)(obj.name)) {\n      cMap.name = obj.name;\n    }\n  }\n  function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\n    var previous;\n    var embeddedUseCMap;\n    objLoop: while (true) {\n      try {\n        var obj = lexer.getObj();\n        if ((0, _primitives.isEOF)(obj)) {\n          break;\n        } else if ((0, _primitives.isName)(obj)) {\n          if (obj.name === 'WMode') {\n            parseWMode(cMap, lexer);\n          } else if (obj.name === 'CMapName') {\n            parseCMapName(cMap, lexer);\n          }\n          previous = obj;\n        } else if ((0, _primitives.isCmd)(obj)) {\n          switch (obj.cmd) {\n            case 'endcmap':\n              break objLoop;\n            case 'usecmap':\n              if ((0, _primitives.isName)(previous)) {\n                embeddedUseCMap = previous.name;\n              }\n              break;\n            case 'begincodespacerange':\n              parseCodespaceRange(cMap, lexer);\n              break;\n            case 'beginbfchar':\n              parseBfChar(cMap, lexer);\n              break;\n            case 'begincidchar':\n              parseCidChar(cMap, lexer);\n              break;\n            case 'beginbfrange':\n              parseBfRange(cMap, lexer);\n              break;\n            case 'begincidrange':\n              parseCidRange(cMap, lexer);\n              break;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid cMap data: ' + ex);\n        continue;\n      }\n    }\n    if (!useCMap && embeddedUseCMap) {\n      useCMap = embeddedUseCMap;\n    }\n    if (useCMap) {\n      return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n    }\n    return Promise.resolve(cMap);\n  }\n  function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\n    return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\n      cMap.useCMap = newCMap;\n      if (cMap.numCodespaceRanges === 0) {\n        var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n        for (var i = 0; i < useCodespaceRanges.length; i++) {\n          cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n        }\n        cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n      }\n      cMap.useCMap.forEach(function (key, value) {\n        if (!cMap.contains(key)) {\n          cMap.mapOne(key, cMap.useCMap.lookup(key));\n        }\n      });\n      return cMap;\n    });\n  }\n  function createBuiltInCMap(name, fetchBuiltInCMap) {\n    if (name === 'Identity-H') {\n      return Promise.resolve(new IdentityCMap(false, 2));\n    } else if (name === 'Identity-V') {\n      return Promise.resolve(new IdentityCMap(true, 2));\n    }\n    if (!BUILT_IN_CMAPS.includes(name)) {\n      return Promise.reject(new Error('Unknown CMap name: ' + name));\n    }\n    if (!fetchBuiltInCMap) {\n      return Promise.reject(new Error('Built-in CMap parameters are not provided.'));\n    }\n    return fetchBuiltInCMap(name).then(function (data) {\n      var cMapData = data.cMapData,\n          compressionType = data.compressionType;\n      var cMap = new CMap(true);\n      if (compressionType === _util.CMapCompressionType.BINARY) {\n        return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\n          return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n        });\n      }\n      if (compressionType === _util.CMapCompressionType.NONE) {\n        var lexer = new _parser.Lexer(new _stream.Stream(cMapData));\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\n      }\n      return Promise.reject(new Error('TODO: Only BINARY/NONE CMap compression is currently supported.'));\n    });\n  }\n  return {\n    create: function create(params) {\n      var encoding = params.encoding;\n      var fetchBuiltInCMap = params.fetchBuiltInCMap;\n      var useCMap = params.useCMap;\n      if ((0, _primitives.isName)(encoding)) {\n        return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\n      } else if ((0, _primitives.isStream)(encoding)) {\n        var cMap = new CMap();\n        var lexer = new _parser.Lexer(encoding);\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\n          if (parsedCMap.isIdentityCMap) {\n            return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\n          }\n          return parsedCMap;\n        });\n      }\n      return Promise.reject(new Error('Encoding required.'));\n    }\n  };\n}();\nexports.CMap = CMap;\nexports.IdentityCMap = IdentityCMap;\nexports.CMapFactory = CMapFactory;\n\n/***/ }),\n/* 142 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFontType = exports.ProblematicCharRanges = exports.IdentityToUnicodeMap = exports.ToUnicodeMap = exports.FontFlags = exports.Font = exports.ErrorFont = exports.PRIVATE_USE_OFFSET_END = exports.PRIVATE_USE_OFFSET_START = exports.SEAC_ANALYSIS_ENABLED = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cff_parser = __w_pdfjs_require__(69);\n\nvar _glyphlist = __w_pdfjs_require__(43);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _standard_fonts = __w_pdfjs_require__(70);\n\nvar _unicode = __w_pdfjs_require__(71);\n\nvar _font_renderer = __w_pdfjs_require__(144);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _type1_parser = __w_pdfjs_require__(145);\n\nvar PRIVATE_USE_OFFSET_START = 0xE000;\nvar PRIVATE_USE_OFFSET_END = 0xF8FF;\nvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\nvar PDF_GLYPH_SPACE_UNITS = 1000;\nvar SEAC_ANALYSIS_ENABLED = false;\nvar FontFlags = {\n  FixedPitch: 1,\n  Serif: 2,\n  Symbolic: 4,\n  Script: 8,\n  Nonsymbolic: 32,\n  Italic: 64,\n  AllCap: 65536,\n  SmallCap: 131072,\n  ForceBold: 262144\n};\nvar MacStandardGlyphOrdering = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\nfunction adjustWidths(properties) {\n  if (!properties.fontMatrix) {\n    return;\n  }\n  if (properties.fontMatrix[0] === _util.FONT_IDENTITY_MATRIX[0]) {\n    return;\n  }\n  var scale = 0.001 / properties.fontMatrix[0];\n  var glyphsWidths = properties.widths;\n  for (var glyph in glyphsWidths) {\n    glyphsWidths[glyph] *= scale;\n  }\n  properties.defaultWidth *= scale;\n}\nfunction adjustToUnicode(properties, builtInEncoding) {\n  if (properties.hasIncludedToUnicodeMap) {\n    return;\n  }\n  if (properties.hasEncoding) {\n    return;\n  }\n  if (builtInEncoding === properties.defaultEncoding) {\n    return;\n  }\n  if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n    return;\n  }\n  var toUnicode = [],\n      glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n  for (var charCode in builtInEncoding) {\n    var glyphName = builtInEncoding[charCode];\n    var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n    if (unicode !== -1) {\n      toUnicode[charCode] = String.fromCharCode(unicode);\n    }\n  }\n  properties.toUnicode.amend(toUnicode);\n}\nfunction getFontType(type, subtype) {\n  switch (type) {\n    case 'Type1':\n      return subtype === 'Type1C' ? _util.FontType.TYPE1C : _util.FontType.TYPE1;\n    case 'CIDFontType0':\n      return subtype === 'CIDFontType0C' ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0;\n    case 'OpenType':\n      return _util.FontType.OPENTYPE;\n    case 'TrueType':\n      return _util.FontType.TRUETYPE;\n    case 'CIDFontType2':\n      return _util.FontType.CIDFONTTYPE2;\n    case 'MMType1':\n      return _util.FontType.MMTYPE1;\n    case 'Type0':\n      return _util.FontType.TYPE0;\n    default:\n      return _util.FontType.UNKNOWN;\n  }\n}\nfunction recoverGlyphName(name, glyphsUnicodeMap) {\n  if (glyphsUnicodeMap[name] !== undefined) {\n    return name;\n  }\n  var unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap);\n  if (unicode !== -1) {\n    for (var key in glyphsUnicodeMap) {\n      if (glyphsUnicodeMap[key] === unicode) {\n        return key;\n      }\n    }\n  }\n  (0, _util.info)('Unable to recover a standard glyph name for: ' + name);\n  return name;\n}\nvar Glyph = function GlyphClosure() {\n  function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    this.fontChar = fontChar;\n    this.unicode = unicode;\n    this.accent = accent;\n    this.width = width;\n    this.vmetric = vmetric;\n    this.operatorListId = operatorListId;\n    this.isSpace = isSpace;\n    this.isInFont = isInFont;\n  }\n  Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n  };\n  return Glyph;\n}();\nvar ToUnicodeMap = function ToUnicodeMapClosure() {\n  function ToUnicodeMap() {\n    var cmap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    this._map = cmap;\n  }\n  ToUnicodeMap.prototype = {\n    get length() {\n      return this._map.length;\n    },\n    forEach: function forEach(callback) {\n      for (var charCode in this._map) {\n        callback(charCode, this._map[charCode].charCodeAt(0));\n      }\n    },\n    has: function has(i) {\n      return this._map[i] !== undefined;\n    },\n    get: function get(i) {\n      return this._map[i];\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    amend: function amend(map) {\n      for (var charCode in map) {\n        this._map[charCode] = map[charCode];\n      }\n    }\n  };\n  return ToUnicodeMap;\n}();\nvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n  function IdentityToUnicodeMap(firstChar, lastChar) {\n    this.firstChar = firstChar;\n    this.lastChar = lastChar;\n  }\n  IdentityToUnicodeMap.prototype = {\n    get length() {\n      return this.lastChar + 1 - this.firstChar;\n    },\n    forEach: function forEach(callback) {\n      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n        callback(i, i);\n      }\n    },\n    has: function has(i) {\n      return this.firstChar <= i && i <= this.lastChar;\n    },\n    get: function get(i) {\n      if (this.firstChar <= i && i <= this.lastChar) {\n        return String.fromCharCode(i);\n      }\n      return undefined;\n    },\n    charCodeOf: function charCodeOf(v) {\n      return Number.isInteger(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n    },\n    amend: function amend(map) {\n      (0, _util.unreachable)('Should not call amend()');\n    }\n  };\n  return IdentityToUnicodeMap;\n}();\nvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n  function writeInt16(dest, offset, num) {\n    dest[offset] = num >> 8 & 0xFF;\n    dest[offset + 1] = num & 0xFF;\n  }\n  function writeInt32(dest, offset, num) {\n    dest[offset] = num >> 24 & 0xFF;\n    dest[offset + 1] = num >> 16 & 0xFF;\n    dest[offset + 2] = num >> 8 & 0xFF;\n    dest[offset + 3] = num & 0xFF;\n  }\n  function writeData(dest, offset, data) {\n    var i, ii;\n    if (data instanceof Uint8Array) {\n      dest.set(data, offset);\n    } else if (typeof data === 'string') {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data.charCodeAt(i) & 0xFF;\n      }\n    } else {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data[i] & 0xFF;\n      }\n    }\n  }\n  function OpenTypeFileBuilder(sfnt) {\n    this.sfnt = sfnt;\n    this.tables = Object.create(null);\n  }\n  OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n    var maxPower2 = 1,\n        log2 = 0;\n    while ((maxPower2 ^ entriesCount) > maxPower2) {\n      maxPower2 <<= 1;\n      log2++;\n    }\n    var searchRange = maxPower2 * entrySize;\n    return {\n      range: searchRange,\n      entry: log2,\n      rangeShift: entrySize * entriesCount - searchRange\n    };\n  };\n  var OTF_HEADER_SIZE = 12;\n  var OTF_TABLE_ENTRY_SIZE = 16;\n  OpenTypeFileBuilder.prototype = {\n    toArray: function OpenTypeFileBuilder_toArray() {\n      var sfnt = this.sfnt;\n      var tables = this.tables;\n      var tablesNames = Object.keys(tables);\n      tablesNames.sort();\n      var numTables = tablesNames.length;\n      var i, j, jj, table, tableName;\n      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n      var tableOffsets = [offset];\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        var paddedLength = (table.length + 3 & ~3) >>> 0;\n        offset += paddedLength;\n        tableOffsets.push(offset);\n      }\n      var file = new Uint8Array(offset);\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        writeData(file, tableOffsets[i], table);\n      }\n      if (sfnt === 'true') {\n        sfnt = (0, _util.string32)(0x00010000);\n      }\n      file[0] = sfnt.charCodeAt(0) & 0xFF;\n      file[1] = sfnt.charCodeAt(1) & 0xFF;\n      file[2] = sfnt.charCodeAt(2) & 0xFF;\n      file[3] = sfnt.charCodeAt(3) & 0xFF;\n      writeInt16(file, 4, numTables);\n      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n      writeInt16(file, 6, searchParams.range);\n      writeInt16(file, 8, searchParams.entry);\n      writeInt16(file, 10, searchParams.rangeShift);\n      offset = OTF_HEADER_SIZE;\n      for (i = 0; i < numTables; i++) {\n        tableName = tablesNames[i];\n        file[offset] = tableName.charCodeAt(0) & 0xFF;\n        file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n        file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n        file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n        var checksum = 0;\n        for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n          var quad = (0, _util.readUint32)(file, j);\n          checksum = checksum + quad >>> 0;\n        }\n        writeInt32(file, offset + 4, checksum);\n        writeInt32(file, offset + 8, tableOffsets[i]);\n        writeInt32(file, offset + 12, tables[tableName].length);\n        offset += OTF_TABLE_ENTRY_SIZE;\n      }\n      return file;\n    },\n    addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n      if (tag in this.tables) {\n        throw new Error('Table ' + tag + ' already exists');\n      }\n      this.tables[tag] = data;\n    }\n  };\n  return OpenTypeFileBuilder;\n}();\nvar ProblematicCharRanges = new Int32Array([0x0000, 0x0020, 0x007F, 0x00A1, 0x00AD, 0x00AE, 0x0600, 0x0780, 0x08A0, 0x10A0, 0x1780, 0x1800, 0x1C00, 0x1C50, 0x2000, 0x2010, 0x2011, 0x2012, 0x2028, 0x2030, 0x205F, 0x2070, 0x25CC, 0x25CD, 0x3000, 0x3001, 0x3164, 0x3165, 0xAA60, 0xAA80, 0xD800, 0xE000, 0xFFF0, 0x10000]);\nvar Font = function FontClosure() {\n  function Font(name, file, properties) {\n    var charCode;\n    this.name = name;\n    this.loadedName = properties.loadedName;\n    this.isType3Font = properties.isType3Font;\n    this.sizes = [];\n    this.missingFile = false;\n    this.glyphCache = Object.create(null);\n    this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n    this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n    this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n    var type = properties.type;\n    var subtype = properties.subtype;\n    this.type = type;\n    this.subtype = subtype;\n    this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n    this.differences = properties.differences;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.composite = properties.composite;\n    this.wideChars = properties.wideChars;\n    this.cMap = properties.cMap;\n    this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n    this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n    this.fontMatrix = properties.fontMatrix;\n    this.bbox = properties.bbox;\n    this.defaultEncoding = properties.defaultEncoding;\n    this.toUnicode = properties.toUnicode;\n    this.fallbackToUnicode = properties.fallbackToUnicode || new ToUnicodeMap();\n    this.toFontChar = [];\n    if (properties.type === 'Type3') {\n      for (charCode = 0; charCode < 256; charCode++) {\n        this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n      }\n      this.fontType = _util.FontType.TYPE3;\n      return;\n    }\n    this.cidEncoding = properties.cidEncoding;\n    this.vertical = properties.vertical;\n    if (this.vertical) {\n      this.vmetrics = properties.vmetrics;\n      this.defaultVMetrics = properties.defaultVMetrics;\n    }\n    if (!file || file.isEmpty) {\n      if (file) {\n        (0, _util.warn)('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n      }\n      this.fallbackToSystemFont();\n      return;\n    }\n    if (subtype === 'Type1C') {\n      if (type !== 'Type1' && type !== 'MMType1') {\n        if (isTrueTypeFile(file)) {\n          subtype = 'TrueType';\n        } else {\n          type = 'Type1';\n        }\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      }\n    }\n    if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n      type = 'CIDFontType0';\n    }\n    if (type === 'CIDFontType0') {\n      if (isType1File(file)) {\n        subtype = 'CIDFontType0';\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      } else {\n        subtype = 'CIDFontType0C';\n      }\n    }\n    if (subtype === 'OpenType' && type !== 'OpenType') {\n      type = 'OpenType';\n    }\n    try {\n      var data;\n      switch (type) {\n        case 'MMType1':\n          (0, _util.info)('MMType1 font (' + name + '), falling back to Type1.');\n        case 'Type1':\n        case 'CIDFontType0':\n          this.mimetype = 'font/opentype';\n          var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n          adjustWidths(properties);\n          data = this.convert(name, cff, properties);\n          break;\n        case 'OpenType':\n        case 'TrueType':\n        case 'CIDFontType2':\n          this.mimetype = 'font/opentype';\n          data = this.checkAndRepair(name, file, properties);\n          if (this.isOpenType) {\n            adjustWidths(properties);\n            type = 'OpenType';\n          }\n          break;\n        default:\n          throw new _util.FormatError('Font ' + type + ' is not supported');\n      }\n    } catch (e) {\n      if (!(e instanceof _util.FormatError)) {\n        throw e;\n      }\n      (0, _util.warn)(e);\n      this.fallbackToSystemFont();\n      return;\n    }\n    this.data = data;\n    this.fontType = getFontType(type, subtype);\n    this.fontMatrix = properties.fontMatrix;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.toUnicode = properties.toUnicode;\n    this.encoding = properties.baseEncoding;\n    this.seacMap = properties.seacMap;\n    this.loading = true;\n  }\n  Font.getFontID = function () {\n    var ID = 1;\n    return function Font_getFontID() {\n      return String(ID++);\n    };\n  }();\n  function int16(b0, b1) {\n    return (b0 << 8) + b1;\n  }\n  function writeSignedInt16(bytes, index, value) {\n    bytes[index + 1] = value;\n    bytes[index] = value >>> 8;\n  }\n  function signedInt16(b0, b1) {\n    var value = (b0 << 8) + b1;\n    return value & 1 << 15 ? value - 0x10000 : value;\n  }\n  function int32(b0, b1, b2, b3) {\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  }\n  function string16(value) {\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function safeString16(value) {\n    value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function isTrueTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.readUint32)(header, 0) === 0x00010000;\n  }\n  function isTrueTypeCollectionFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'ttcf';\n  }\n  function isOpenTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'OTTO';\n  }\n  function isType1File(file) {\n    var header = file.peekBytes(2);\n    if (header[0] === 0x25 && header[1] === 0x21) {\n      return true;\n    }\n    if (header[0] === 0x80 && header[1] === 0x01) {\n      return true;\n    }\n    return false;\n  }\n  function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n    var toFontChar = [],\n        unicode;\n    for (var i = 0, ii = encoding.length; i < ii; i++) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(encoding[i], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[i] = unicode;\n      }\n    }\n    for (var charCode in differences) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(differences[charCode], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[+charCode] = unicode;\n      }\n    }\n    return toFontChar;\n  }\n  function isProblematicUnicodeLocation(code) {\n    var i = 0,\n        j = ProblematicCharRanges.length - 1;\n    while (i < j) {\n      var c = i + j + 1 >> 1;\n      if (code < ProblematicCharRanges[c]) {\n        j = c - 1;\n      } else {\n        i = c;\n      }\n    }\n    return !(i & 1);\n  }\n  function adjustMapping(charCodeToGlyphId, properties, missingGlyphs) {\n    var toUnicode = properties.toUnicode;\n    var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n    var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n    var newMap = Object.create(null);\n    var toFontChar = [];\n    var usedFontCharCodes = [];\n    var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n    for (var originalCharCode in charCodeToGlyphId) {\n      originalCharCode |= 0;\n      var glyphId = charCodeToGlyphId[originalCharCode];\n      if (missingGlyphs[glyphId]) {\n        continue;\n      }\n      var fontCharCode = originalCharCode;\n      var hasUnicodeValue = false;\n      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n        hasUnicodeValue = true;\n        var unicode = toUnicode.get(fontCharCode);\n        if (unicode.length === 1) {\n          fontCharCode = unicode.charCodeAt(0);\n        }\n      }\n      if (usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) {\n        do {\n          if (nextAvailableFontCharCode > PRIVATE_USE_OFFSET_END) {\n            (0, _util.warn)('Ran out of space in font private use area.');\n            break;\n          }\n          fontCharCode = nextAvailableFontCharCode++;\n          if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n            fontCharCode = 0xF020;\n            nextAvailableFontCharCode = fontCharCode + 1;\n          }\n        } while (usedFontCharCodes[fontCharCode] !== undefined);\n      }\n      newMap[fontCharCode] = glyphId;\n      toFontChar[originalCharCode] = fontCharCode;\n      usedFontCharCodes[fontCharCode] = true;\n    }\n    return {\n      toFontChar: toFontChar,\n      charCodeToGlyphId: newMap,\n      nextAvailableFontCharCode: nextAvailableFontCharCode\n    };\n  }\n  function getRanges(glyphs, numGlyphs) {\n    var codes = [];\n    for (var charCode in glyphs) {\n      if (glyphs[charCode] >= numGlyphs) {\n        continue;\n      }\n      codes.push({\n        fontCharCode: charCode | 0,\n        glyphId: glyphs[charCode]\n      });\n    }\n    if (codes.length === 0) {\n      codes.push({\n        fontCharCode: 0,\n        glyphId: 0\n      });\n    }\n    codes.sort(function fontGetRangesSort(a, b) {\n      return a.fontCharCode - b.fontCharCode;\n    });\n    var ranges = [];\n    var length = codes.length;\n    for (var n = 0; n < length;) {\n      var start = codes[n].fontCharCode;\n      var codeIndices = [codes[n].glyphId];\n      ++n;\n      var end = start;\n      while (n < length && end + 1 === codes[n].fontCharCode) {\n        codeIndices.push(codes[n].glyphId);\n        ++end;\n        ++n;\n        if (end === 0xFFFF) {\n          break;\n        }\n      }\n      ranges.push([start, end, codeIndices]);\n    }\n    return ranges;\n  }\n  function createCmapTable(glyphs, numGlyphs) {\n    var ranges = getRanges(glyphs, numGlyphs);\n    var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n    var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + (0, _util.string32)(4 + numTables * 8);\n    var i, ii, j, jj;\n    for (i = ranges.length - 1; i >= 0; --i) {\n      if (ranges[i][0] <= 0xFFFF) {\n        break;\n      }\n    }\n    var bmpLength = i + 1;\n    if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n      ranges[i][1] = 0xFFFE;\n    }\n    var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n    var segCount = bmpLength + trailingRangesCount;\n    var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n    var startCount = '';\n    var endCount = '';\n    var idDeltas = '';\n    var idRangeOffsets = '';\n    var glyphsIds = '';\n    var bias = 0;\n    var range, start, end, codes;\n    for (i = 0, ii = bmpLength; i < ii; i++) {\n      range = ranges[i];\n      start = range[0];\n      end = range[1];\n      startCount += string16(start);\n      endCount += string16(end);\n      codes = range[2];\n      var contiguous = true;\n      for (j = 1, jj = codes.length; j < jj; ++j) {\n        if (codes[j] !== codes[j - 1] + 1) {\n          contiguous = false;\n          break;\n        }\n      }\n      if (!contiguous) {\n        var offset = (segCount - i) * 2 + bias * 2;\n        bias += end - start + 1;\n        idDeltas += string16(0);\n        idRangeOffsets += string16(offset);\n        for (j = 0, jj = codes.length; j < jj; ++j) {\n          glyphsIds += string16(codes[j]);\n        }\n      } else {\n        var startCode = codes[0];\n        idDeltas += string16(startCode - start & 0xFFFF);\n        idRangeOffsets += string16(0);\n      }\n    }\n    if (trailingRangesCount > 0) {\n      endCount += '\\xFF\\xFF';\n      startCount += '\\xFF\\xFF';\n      idDeltas += '\\x00\\x01';\n      idRangeOffsets += '\\x00\\x00';\n    }\n    var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n    var format31012 = '';\n    var header31012 = '';\n    if (numTables > 1) {\n      cmap += '\\x00\\x03' + '\\x00\\x0A' + (0, _util.string32)(4 + numTables * 8 + 4 + format314.length);\n      format31012 = '';\n      for (i = 0, ii = ranges.length; i < ii; i++) {\n        range = ranges[i];\n        start = range[0];\n        codes = range[2];\n        var code = codes[0];\n        for (j = 1, jj = codes.length; j < jj; ++j) {\n          if (codes[j] !== codes[j - 1] + 1) {\n            end = range[0] + j - 1;\n            format31012 += (0, _util.string32)(start) + (0, _util.string32)(end) + (0, _util.string32)(code);\n            start = end + 1;\n            code = codes[j];\n          }\n        }\n        format31012 += (0, _util.string32)(start) + (0, _util.string32)(range[1]) + (0, _util.string32)(code);\n      }\n      header31012 = '\\x00\\x0C' + '\\x00\\x00' + (0, _util.string32)(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + (0, _util.string32)(format31012.length / 12);\n    }\n    return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n  }\n  function validateOS2Table(os2) {\n    var stream = new _stream.Stream(os2.data);\n    var version = stream.getUint16();\n    stream.getBytes(60);\n    var selection = stream.getUint16();\n    if (version < 4 && selection & 0x0300) {\n      return false;\n    }\n    var firstChar = stream.getUint16();\n    var lastChar = stream.getUint16();\n    if (firstChar > lastChar) {\n      return false;\n    }\n    stream.getBytes(6);\n    var usWinAscent = stream.getUint16();\n    if (usWinAscent === 0) {\n      return false;\n    }\n    os2.data[8] = os2.data[9] = 0;\n    return true;\n  }\n  function createOS2Table(properties, charstrings, override) {\n    override = override || {\n      unitsPerEm: 0,\n      yMax: 0,\n      yMin: 0,\n      ascent: 0,\n      descent: 0\n    };\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    if (charstrings) {\n      for (var code in charstrings) {\n        code |= 0;\n        if (firstCharIndex > code || !firstCharIndex) {\n          firstCharIndex = code;\n        }\n        if (lastCharIndex < code) {\n          lastCharIndex = code;\n        }\n        var position = (0, _unicode.getUnicodeRangeFor)(code);\n        if (position < 32) {\n          ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n          ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n          ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n          ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n          throw new _util.FormatError('Unicode ranges Bits > 123 are reserved for internal usage');\n        }\n      }\n    } else {\n      firstCharIndex = 0;\n      lastCharIndex = 255;\n    }\n    var bbox = properties.bbox || [0, 0, 0, 0];\n    var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n    var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n    var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n    var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n    if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n      typoDescent = -typoDescent;\n    }\n    var winAscent = override.yMax || typoAscent;\n    var winDescent = -override.yMin || -typoDescent;\n    return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + (0, _util.string32)(ulUnicodeRange1) + (0, _util.string32)(ulUnicodeRange2) + (0, _util.string32)(ulUnicodeRange3) + (0, _util.string32)(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n  }\n  function createPostTable(properties) {\n    var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n    return '\\x00\\x03\\x00\\x00' + (0, _util.string32)(angle) + '\\x00\\x00' + '\\x00\\x00' + (0, _util.string32)(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n  }\n  function createNameTable(name, proto) {\n    if (!proto) {\n      proto = [[], []];\n    }\n    var strings = [proto[0][0] || 'Original licence', proto[0][1] || name, proto[0][2] || 'Unknown', proto[0][3] || 'uniqueID', proto[0][4] || name, proto[0][5] || 'Version 0.11', proto[0][6] || '', proto[0][7] || 'Unknown', proto[0][8] || 'Unknown', proto[0][9] || 'Unknown'];\n    var stringsUnicode = [];\n    var i, ii, j, jj, str;\n    for (i = 0, ii = strings.length; i < ii; i++) {\n      str = proto[1][i] || strings[i];\n      var strBufUnicode = [];\n      for (j = 0, jj = str.length; j < jj; j++) {\n        strBufUnicode.push(string16(str.charCodeAt(j)));\n      }\n      stringsUnicode.push(strBufUnicode.join(''));\n    }\n    var names = [strings, stringsUnicode];\n    var platforms = ['\\x00\\x01', '\\x00\\x03'];\n    var encodings = ['\\x00\\x00', '\\x00\\x01'];\n    var languages = ['\\x00\\x00', '\\x04\\x09'];\n    var namesRecordCount = strings.length * platforms.length;\n    var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n    var strOffset = 0;\n    for (i = 0, ii = platforms.length; i < ii; i++) {\n      var strs = names[i];\n      for (j = 0, jj = strs.length; j < jj; j++) {\n        str = strs[j];\n        var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n        nameTable += nameRecord;\n        strOffset += str.length;\n      }\n    }\n    nameTable += strings.join('') + stringsUnicode.join('');\n    return nameTable;\n  }\n  Font.prototype = {\n    name: null,\n    font: null,\n    mimetype: null,\n    encoding: null,\n    get renderer() {\n      var renderer = _font_renderer.FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n      return (0, _util.shadow)(this, 'renderer', renderer);\n    },\n    exportData: function Font_exportData() {\n      var data = {};\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) {\n          data[i] = this[i];\n        }\n      }\n      return data;\n    },\n    fallbackToSystemFont: function Font_fallbackToSystemFont() {\n      var _this = this;\n\n      this.missingFile = true;\n      var charCode, unicode;\n      var name = this.name;\n      var type = this.type;\n      var subtype = this.subtype;\n      var fontName = name.replace(/[,_]/g, '-');\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)(),\n          nonStdFontMap = (0, _standard_fonts.getNonStdFontMap)();\n      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n      this.bold = fontName.search(/bold/gi) !== -1;\n      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n      this.black = name.search(/Black/g) !== -1;\n      this.remeasure = Object.keys(this.widths).length > 0;\n      if (isStandardFont && type === 'CIDFontType2' && this.cidEncoding.indexOf('Identity-') === 0) {\n        var GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\n        var map = [];\n        for (charCode in GlyphMapForStandardFonts) {\n          map[+charCode] = GlyphMapForStandardFonts[charCode];\n        }\n        if (/Arial-?Black/i.test(name)) {\n          var SupplementalGlyphMapForArialBlack = (0, _standard_fonts.getSupplementalGlyphMapForArialBlack)();\n          for (charCode in SupplementalGlyphMapForArialBlack) {\n            map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n          }\n        } else if (/Calibri/i.test(name)) {\n          var SupplementalGlyphMapForCalibri = (0, _standard_fonts.getSupplementalGlyphMapForCalibri)();\n          for (charCode in SupplementalGlyphMapForCalibri) {\n            map[+charCode] = SupplementalGlyphMapForCalibri[charCode];\n          }\n        }\n        var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n        if (!isIdentityUnicode) {\n          this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n            map[+charCode] = unicodeCharCode;\n          });\n        }\n        this.toFontChar = map;\n        this.toUnicode = new ToUnicodeMap(map);\n      } else if (/Symbol/i.test(fontName)) {\n        this.toFontChar = buildToFontChar(_encodings.SymbolSetEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else if (/Dingbats/i.test(fontName)) {\n        if (/Wingdings/i.test(name)) {\n          (0, _util.warn)('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n        }\n        this.toFontChar = buildToFontChar(_encodings.ZapfDingbatsEncoding, (0, _glyphlist.getDingbatsGlyphsUnicode)(), this.differences);\n      } else if (isStandardFont) {\n        this.toFontChar = buildToFontChar(this.defaultEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else {\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n          if (!_this.composite) {\n            var glyphName = _this.differences[charCode] || _this.defaultEncoding[charCode];\n            unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n            if (unicode !== -1) {\n              unicodeCharCode = unicode;\n            }\n          }\n          _this.toFontChar[charCode] = unicodeCharCode;\n        });\n      }\n      this.loadedName = fontName.split('-')[0];\n      this.loading = false;\n      this.fontType = getFontType(type, subtype);\n    },\n    checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n      var VALID_TABLES = ['OS/2', 'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'post', 'loca', 'glyf', 'fpgm', 'prep', 'cvt ', 'CFF '];\n      function readTables(file, numTables) {\n        var tables = Object.create(null);\n        tables['OS/2'] = null;\n        tables['cmap'] = null;\n        tables['head'] = null;\n        tables['hhea'] = null;\n        tables['hmtx'] = null;\n        tables['maxp'] = null;\n        tables['name'] = null;\n        tables['post'] = null;\n        for (var i = 0; i < numTables; i++) {\n          var table = readTableEntry(font);\n          if (!VALID_TABLES.includes(table.tag)) {\n            continue;\n          }\n          if (table.length === 0) {\n            continue;\n          }\n          tables[table.tag] = table;\n        }\n        return tables;\n      }\n      function readTableEntry(file) {\n        var tag = (0, _util.bytesToString)(file.getBytes(4));\n        var checksum = file.getInt32() >>> 0;\n        var offset = file.getInt32() >>> 0;\n        var length = file.getInt32() >>> 0;\n        var previousPosition = file.pos;\n        file.pos = file.start ? file.start : 0;\n        file.skip(offset);\n        var data = file.getBytes(length);\n        file.pos = previousPosition;\n        if (tag === 'head') {\n          data[8] = data[9] = data[10] = data[11] = 0;\n          data[17] |= 0x20;\n        }\n        return {\n          tag: tag,\n          checksum: checksum,\n          length: length,\n          offset: offset,\n          data: data\n        };\n      }\n      function readOpenTypeHeader(ttf) {\n        return {\n          version: (0, _util.bytesToString)(ttf.getBytes(4)),\n          numTables: ttf.getUint16(),\n          searchRange: ttf.getUint16(),\n          entrySelector: ttf.getUint16(),\n          rangeShift: ttf.getUint16()\n        };\n      }\n      function readTrueTypeCollectionHeader(ttc) {\n        var ttcTag = (0, _util.bytesToString)(ttc.getBytes(4));\n        (0, _util.assert)(ttcTag === 'ttcf', 'Must be a TrueType Collection font.');\n        var majorVersion = ttc.getUint16();\n        var minorVersion = ttc.getUint16();\n        var numFonts = ttc.getInt32() >>> 0;\n        var offsetTable = [];\n        for (var i = 0; i < numFonts; i++) {\n          offsetTable.push(ttc.getInt32() >>> 0);\n        }\n        var header = {\n          ttcTag: ttcTag,\n          majorVersion: majorVersion,\n          minorVersion: minorVersion,\n          numFonts: numFonts,\n          offsetTable: offsetTable\n        };\n        switch (majorVersion) {\n          case 1:\n            return header;\n          case 2:\n            header.dsigTag = ttc.getInt32() >>> 0;\n            header.dsigLength = ttc.getInt32() >>> 0;\n            header.dsigOffset = ttc.getInt32() >>> 0;\n            return header;\n        }\n        throw new _util.FormatError('Invalid TrueType Collection majorVersion: ' + majorVersion + '.');\n      }\n      function readTrueTypeCollectionData(ttc, fontName) {\n        var _readTrueTypeCollecti = readTrueTypeCollectionHeader(ttc),\n            numFonts = _readTrueTypeCollecti.numFonts,\n            offsetTable = _readTrueTypeCollecti.offsetTable;\n\n        for (var i = 0; i < numFonts; i++) {\n          ttc.pos = (ttc.start || 0) + offsetTable[i];\n          var potentialHeader = readOpenTypeHeader(ttc);\n          var potentialTables = readTables(ttc, potentialHeader.numTables);\n          if (!potentialTables['name']) {\n            throw new _util.FormatError('TrueType Collection font must contain a \"name\" table.');\n          }\n          var nameTable = readNameTable(potentialTables['name']);\n          for (var j = 0, jj = nameTable.length; j < jj; j++) {\n            for (var k = 0, kk = nameTable[j].length; k < kk; k++) {\n              var nameEntry = nameTable[j][k];\n              if (nameEntry && nameEntry.replace(/\\s/g, '') === fontName) {\n                return {\n                  header: potentialHeader,\n                  tables: potentialTables\n                };\n              }\n            }\n          }\n        }\n        throw new _util.FormatError('TrueType Collection does not contain \"' + fontName + '\" font.');\n      }\n      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n        if (!cmap) {\n          (0, _util.warn)('No cmap table available.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var segment;\n        var start = (font.start ? font.start : 0) + cmap.offset;\n        font.pos = start;\n        font.getUint16();\n        var numTables = font.getUint16();\n        var potentialTable;\n        var canBreak = false;\n        for (var i = 0; i < numTables; i++) {\n          var platformId = font.getUint16();\n          var encodingId = font.getUint16();\n          var offset = font.getInt32() >>> 0;\n          var useTable = false;\n          if (potentialTable && potentialTable.platformId === platformId && potentialTable.encodingId === encodingId) {\n            continue;\n          }\n          if (platformId === 0 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 1 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\n            useTable = true;\n            if (!isSymbolicFont) {\n              canBreak = true;\n            }\n          } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n            useTable = true;\n            canBreak = true;\n          }\n          if (useTable) {\n            potentialTable = {\n              platformId: platformId,\n              encodingId: encodingId,\n              offset: offset\n            };\n          }\n          if (canBreak) {\n            break;\n          }\n        }\n        if (potentialTable) {\n          font.pos = start + potentialTable.offset;\n        }\n        if (!potentialTable || font.peekByte() === -1) {\n          (0, _util.warn)('Could not find a preferred cmap table.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var format = font.getUint16();\n        font.getUint16();\n        font.getUint16();\n        var hasShortCmap = false;\n        var mappings = [];\n        var j, glyphId;\n        if (format === 0) {\n          for (j = 0; j < 256; j++) {\n            var index = font.getByte();\n            if (!index) {\n              continue;\n            }\n            mappings.push({\n              charCode: j,\n              glyphId: index\n            });\n          }\n          hasShortCmap = true;\n        } else if (format === 4) {\n          var segCount = font.getUint16() >> 1;\n          font.getBytes(6);\n          var segIndex,\n              segments = [];\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments.push({ end: font.getUint16() });\n          }\n          font.getUint16();\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].start = font.getUint16();\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].delta = font.getUint16();\n          }\n          var offsetsCount = 0;\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            var rangeOffset = font.getUint16();\n            if (!rangeOffset) {\n              segment.offsetIndex = -1;\n              continue;\n            }\n            var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n            segment.offsetIndex = offsetIndex;\n            offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n          }\n          var offsets = [];\n          for (j = 0; j < offsetsCount; j++) {\n            offsets.push(font.getUint16());\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            start = segment.start;\n            var end = segment.end;\n            var delta = segment.delta;\n            offsetIndex = segment.offsetIndex;\n            for (j = start; j <= end; j++) {\n              if (j === 0xFFFF) {\n                continue;\n              }\n              glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n              glyphId = glyphId + delta & 0xFFFF;\n              mappings.push({\n                charCode: j,\n                glyphId: glyphId\n              });\n            }\n          }\n        } else if (format === 6) {\n          var firstCode = font.getUint16();\n          var entryCount = font.getUint16();\n          for (j = 0; j < entryCount; j++) {\n            glyphId = font.getUint16();\n            var charCode = firstCode + j;\n            mappings.push({\n              charCode: charCode,\n              glyphId: glyphId\n            });\n          }\n        } else {\n          (0, _util.warn)('cmap table has unsupported format: ' + format);\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        mappings.sort(function (a, b) {\n          return a.charCode - b.charCode;\n        });\n        for (i = 1; i < mappings.length; i++) {\n          if (mappings[i - 1].charCode === mappings[i].charCode) {\n            mappings.splice(i, 1);\n            i--;\n          }\n        }\n        return {\n          platformId: potentialTable.platformId,\n          encodingId: potentialTable.encodingId,\n          mappings: mappings,\n          hasShortCmap: hasShortCmap\n        };\n      }\n      function sanitizeMetrics(font, header, metrics, numGlyphs) {\n        if (!header) {\n          if (metrics) {\n            metrics.data = null;\n          }\n          return;\n        }\n        font.pos = (font.start ? font.start : 0) + header.offset;\n        font.pos += header.length - 2;\n        var numOfMetrics = font.getUint16();\n        if (numOfMetrics > numGlyphs) {\n          (0, _util.info)('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n          numOfMetrics = numGlyphs;\n          header.data[34] = (numOfMetrics & 0xff00) >> 8;\n          header.data[35] = numOfMetrics & 0x00ff;\n        }\n        var numOfSidebearings = numGlyphs - numOfMetrics;\n        var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n        if (numMissing > 0) {\n          var entries = new Uint8Array(metrics.length + numMissing * 2);\n          entries.set(metrics.data);\n          metrics.data = entries;\n        }\n      }\n      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n        var glyphProfile = {\n          length: 0,\n          sizeOfInstructions: 0\n        };\n        if (sourceEnd - sourceStart <= 12) {\n          return glyphProfile;\n        }\n        var glyf = source.subarray(sourceStart, sourceEnd);\n        var contoursCount = signedInt16(glyf[0], glyf[1]);\n        if (contoursCount < 0) {\n          contoursCount = -1;\n          writeSignedInt16(glyf, 0, contoursCount);\n          dest.set(glyf, destStart);\n          glyphProfile.length = glyf.length;\n          return glyphProfile;\n        }\n        var i,\n            j = 10,\n            flagsCount = 0;\n        for (i = 0; i < contoursCount; i++) {\n          var endPoint = glyf[j] << 8 | glyf[j + 1];\n          flagsCount = endPoint + 1;\n          j += 2;\n        }\n        var instructionsStart = j;\n        var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n        glyphProfile.sizeOfInstructions = instructionsLength;\n        j += 2 + instructionsLength;\n        var instructionsEnd = j;\n        var coordinatesLength = 0;\n        for (i = 0; i < flagsCount; i++) {\n          var flag = glyf[j++];\n          if (flag & 0xC0) {\n            glyf[j - 1] = flag & 0x3F;\n          }\n          var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n          coordinatesLength += xyLength;\n          if (flag & 8) {\n            var repeat = glyf[j++];\n            i += repeat;\n            coordinatesLength += repeat * xyLength;\n          }\n        }\n        if (coordinatesLength === 0) {\n          return glyphProfile;\n        }\n        var glyphDataLength = j + coordinatesLength;\n        if (glyphDataLength > glyf.length) {\n          return glyphProfile;\n        }\n        if (!hintsValid && instructionsLength > 0) {\n          dest.set(glyf.subarray(0, instructionsStart), destStart);\n          dest.set([0, 0], destStart + instructionsStart);\n          dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n          glyphDataLength -= instructionsLength;\n          if (glyf.length - glyphDataLength > 3) {\n            glyphDataLength = glyphDataLength + 3 & ~3;\n          }\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        if (glyf.length - glyphDataLength > 3) {\n          glyphDataLength = glyphDataLength + 3 & ~3;\n          dest.set(glyf.subarray(0, glyphDataLength), destStart);\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        dest.set(glyf, destStart);\n        glyphProfile.length = glyf.length;\n        return glyphProfile;\n      }\n      function sanitizeHead(head, numGlyphs, locaLength) {\n        var data = head.data;\n        var version = int32(data[0], data[1], data[2], data[3]);\n        if (version >> 16 !== 1) {\n          (0, _util.info)('Attempting to fix invalid version in head table: ' + version);\n          data[0] = 0;\n          data[1] = 1;\n          data[2] = 0;\n          data[3] = 0;\n        }\n        var indexToLocFormat = int16(data[50], data[51]);\n        if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n          (0, _util.info)('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n          var numGlyphsPlusOne = numGlyphs + 1;\n          if (locaLength === numGlyphsPlusOne << 1) {\n            data[50] = 0;\n            data[51] = 0;\n          } else if (locaLength === numGlyphsPlusOne << 2) {\n            data[50] = 0;\n            data[51] = 1;\n          } else {\n            throw new _util.FormatError('Could not fix indexToLocFormat: ' + indexToLocFormat);\n          }\n        }\n      }\n      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions) {\n        var itemSize, itemDecode, itemEncode;\n        if (isGlyphLocationsLong) {\n          itemSize = 4;\n          itemDecode = function fontItemDecodeLong(data, offset) {\n            return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n          };\n          itemEncode = function fontItemEncodeLong(data, offset, value) {\n            data[offset] = value >>> 24 & 0xFF;\n            data[offset + 1] = value >> 16 & 0xFF;\n            data[offset + 2] = value >> 8 & 0xFF;\n            data[offset + 3] = value & 0xFF;\n          };\n        } else {\n          itemSize = 2;\n          itemDecode = function fontItemDecode(data, offset) {\n            return data[offset] << 9 | data[offset + 1] << 1;\n          };\n          itemEncode = function fontItemEncode(data, offset, value) {\n            data[offset] = value >> 9 & 0xFF;\n            data[offset + 1] = value >> 1 & 0xFF;\n          };\n        }\n        var locaData = loca.data;\n        var locaDataSize = itemSize * (1 + numGlyphs);\n        if (locaData.length !== locaDataSize) {\n          locaData = new Uint8Array(locaDataSize);\n          locaData.set(loca.data.subarray(0, locaDataSize));\n          loca.data = locaData;\n        }\n        var oldGlyfData = glyf.data;\n        var oldGlyfDataLength = oldGlyfData.length;\n        var newGlyfData = new Uint8Array(oldGlyfDataLength);\n        var startOffset = itemDecode(locaData, 0);\n        var writeOffset = 0;\n        var missingGlyphs = Object.create(null);\n        itemEncode(locaData, 0, writeOffset);\n        var i, j;\n        var locaCount = dupFirstEntry ? numGlyphs - 1 : numGlyphs;\n        for (i = 0, j = itemSize; i < locaCount; i++, j += itemSize) {\n          var endOffset = itemDecode(locaData, j);\n          if (endOffset === 0) {\n            endOffset = startOffset;\n          }\n          if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n            endOffset = oldGlyfDataLength;\n          }\n          if (endOffset > oldGlyfDataLength) {\n            startOffset = endOffset;\n          }\n          var glyphProfile = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n          var newLength = glyphProfile.length;\n          if (newLength === 0) {\n            missingGlyphs[i] = true;\n          }\n          if (glyphProfile.sizeOfInstructions > maxSizeOfInstructions) {\n            maxSizeOfInstructions = glyphProfile.sizeOfInstructions;\n          }\n          writeOffset += newLength;\n          itemEncode(locaData, j, writeOffset);\n          startOffset = endOffset;\n        }\n        if (writeOffset === 0) {\n          var simpleGlyph = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\n          for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n            itemEncode(locaData, j, simpleGlyph.length);\n          }\n          glyf.data = simpleGlyph;\n        } else if (dupFirstEntry) {\n          var firstEntryLength = itemDecode(locaData, itemSize);\n          if (newGlyfData.length > firstEntryLength + writeOffset) {\n            glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n          } else {\n            glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n            glyf.data.set(newGlyfData.subarray(0, writeOffset));\n          }\n          glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n          itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n        } else {\n          glyf.data = newGlyfData.subarray(0, writeOffset);\n        }\n        return {\n          missingGlyphs: missingGlyphs,\n          maxSizeOfInstructions: maxSizeOfInstructions\n        };\n      }\n      function readPostScriptTable(post, properties, maxpNumGlyphs) {\n        var start = (font.start ? font.start : 0) + post.offset;\n        font.pos = start;\n        var length = post.length,\n            end = start + length;\n        var version = font.getInt32();\n        font.getBytes(28);\n        var glyphNames;\n        var valid = true;\n        var i;\n        switch (version) {\n          case 0x00010000:\n            glyphNames = MacStandardGlyphOrdering;\n            break;\n          case 0x00020000:\n            var numGlyphs = font.getUint16();\n            if (numGlyphs !== maxpNumGlyphs) {\n              valid = false;\n              break;\n            }\n            var glyphNameIndexes = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var index = font.getUint16();\n              if (index >= 32768) {\n                valid = false;\n                break;\n              }\n              glyphNameIndexes.push(index);\n            }\n            if (!valid) {\n              break;\n            }\n            var customNames = [];\n            var strBuf = [];\n            while (font.pos < end) {\n              var stringLength = font.getByte();\n              strBuf.length = stringLength;\n              for (i = 0; i < stringLength; ++i) {\n                strBuf[i] = String.fromCharCode(font.getByte());\n              }\n              customNames.push(strBuf.join(''));\n            }\n            glyphNames = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var j = glyphNameIndexes[i];\n              if (j < 258) {\n                glyphNames.push(MacStandardGlyphOrdering[j]);\n                continue;\n              }\n              glyphNames.push(customNames[j - 258]);\n            }\n            break;\n          case 0x00030000:\n            break;\n          default:\n            (0, _util.warn)('Unknown/unsupported post table version ' + version);\n            valid = false;\n            if (properties.defaultEncoding) {\n              glyphNames = properties.defaultEncoding;\n            }\n            break;\n        }\n        properties.glyphNames = glyphNames;\n        return valid;\n      }\n      function readNameTable(nameTable) {\n        var start = (font.start ? font.start : 0) + nameTable.offset;\n        font.pos = start;\n        var names = [[], []];\n        var length = nameTable.length,\n            end = start + length;\n        var format = font.getUint16();\n        var FORMAT_0_HEADER_LENGTH = 6;\n        if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n          return names;\n        }\n        var numRecords = font.getUint16();\n        var stringsStart = font.getUint16();\n        var records = [];\n        var NAME_RECORD_LENGTH = 12;\n        var i, ii;\n        for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n          var r = {\n            platform: font.getUint16(),\n            encoding: font.getUint16(),\n            language: font.getUint16(),\n            name: font.getUint16(),\n            length: font.getUint16(),\n            offset: font.getUint16()\n          };\n          if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n            records.push(r);\n          }\n        }\n        for (i = 0, ii = records.length; i < ii; i++) {\n          var record = records[i];\n          if (record.length <= 0) {\n            continue;\n          }\n          var pos = start + stringsStart + record.offset;\n          if (pos + record.length > end) {\n            continue;\n          }\n          font.pos = pos;\n          var nameIndex = record.name;\n          if (record.encoding) {\n            var str = '';\n            for (var j = 0, jj = record.length; j < jj; j += 2) {\n              str += String.fromCharCode(font.getUint16());\n            }\n            names[1][nameIndex] = str;\n          } else {\n            names[0][nameIndex] = (0, _util.bytesToString)(font.getBytes(record.length));\n          }\n        }\n        return names;\n      }\n      var TTOpsStackDeltas = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\n      function sanitizeTTProgram(table, ttContext) {\n        var data = table.data;\n        var i = 0,\n            j,\n            n,\n            b,\n            funcId,\n            pc,\n            lastEndf = 0,\n            lastDeff = 0;\n        var stack = [];\n        var callstack = [];\n        var functionsCalled = [];\n        var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n        var inFDEF = false,\n            ifLevel = 0,\n            inELSE = 0;\n        for (var ii = data.length; i < ii;) {\n          var op = data[i++];\n          if (op === 0x40) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if (op === 0x41) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB0) {\n            n = op - 0xB0 + 1;\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB8) {\n            n = op - 0xB8 + 1;\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n            if (!inFDEF && !inELSE) {\n              funcId = stack[stack.length - 1];\n              ttContext.functionsUsed[funcId] = true;\n              if (funcId in ttContext.functionsStackDeltas) {\n                stack.length += ttContext.functionsStackDeltas[funcId];\n              } else if (funcId in ttContext.functionsDefined && !functionsCalled.includes(funcId)) {\n                callstack.push({\n                  data: data,\n                  i: i,\n                  stackTop: stack.length - 1\n                });\n                functionsCalled.push(funcId);\n                pc = ttContext.functionsDefined[funcId];\n                if (!pc) {\n                  (0, _util.warn)('TT: CALL non-existent function');\n                  ttContext.hintsValid = false;\n                  return;\n                }\n                data = pc.data;\n                i = pc.i;\n              }\n            }\n          } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested FDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n            funcId = stack.pop();\n            ttContext.functionsDefined[funcId] = {\n              data: data,\n              i: i\n            };\n          } else if (op === 0x2D) {\n            if (inFDEF) {\n              inFDEF = false;\n              lastEndf = i;\n            } else {\n              pc = callstack.pop();\n              if (!pc) {\n                (0, _util.warn)('TT: ENDF bad stack');\n                ttContext.hintsValid = false;\n                return;\n              }\n              funcId = functionsCalled.pop();\n              data = pc.data;\n              i = pc.i;\n              ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n            }\n          } else if (op === 0x89) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested IDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n          } else if (op === 0x58) {\n            ++ifLevel;\n          } else if (op === 0x1B) {\n            inELSE = ifLevel;\n          } else if (op === 0x59) {\n            if (inELSE === ifLevel) {\n              inELSE = 0;\n            }\n            --ifLevel;\n          } else if (op === 0x1C) {\n            if (!inFDEF && !inELSE) {\n              var offset = stack[stack.length - 1];\n              if (offset > 0) {\n                i += offset - 1;\n              }\n            }\n          }\n          if (!inFDEF && !inELSE) {\n            var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n            if (op >= 0x71 && op <= 0x75) {\n              n = stack.pop();\n              if (!isNaN(n)) {\n                stackDelta = -n * 2;\n              }\n            }\n            while (stackDelta < 0 && stack.length > 0) {\n              stack.pop();\n              stackDelta++;\n            }\n            while (stackDelta > 0) {\n              stack.push(NaN);\n              stackDelta--;\n            }\n          }\n        }\n        ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n        var content = [data];\n        if (i > data.length) {\n          content.push(new Uint8Array(i - data.length));\n        }\n        if (lastDeff > lastEndf) {\n          (0, _util.warn)('TT: complementing a missing function tail');\n          content.push(new Uint8Array([0x22, 0x2D]));\n        }\n        foldTTTable(table, content);\n      }\n      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n        if (ttContext.tooComplexToFollowFunctions) {\n          return;\n        }\n        if (ttContext.functionsDefined.length > maxFunctionDefs) {\n          (0, _util.warn)('TT: more functions defined than expected');\n          ttContext.hintsValid = false;\n          return;\n        }\n        for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n          if (j > maxFunctionDefs) {\n            (0, _util.warn)('TT: invalid function id: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n          if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n            (0, _util.warn)('TT: undefined function: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n        }\n      }\n      function foldTTTable(table, content) {\n        if (content.length > 1) {\n          var newLength = 0;\n          var j, jj;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            newLength += content[j].length;\n          }\n          newLength = newLength + 3 & ~3;\n          var result = new Uint8Array(newLength);\n          var pos = 0;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            result.set(content[j], pos);\n            pos += content[j].length;\n          }\n          table.data = result;\n          table.length = newLength;\n        }\n      }\n      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n        var ttContext = {\n          functionsDefined: [],\n          functionsUsed: [],\n          functionsStackDeltas: [],\n          tooComplexToFollowFunctions: false,\n          hintsValid: true\n        };\n        if (fpgm) {\n          sanitizeTTProgram(fpgm, ttContext);\n        }\n        if (prep) {\n          sanitizeTTProgram(prep, ttContext);\n        }\n        if (fpgm) {\n          checkInvalidFunctions(ttContext, maxFunctionDefs);\n        }\n        if (cvt && cvt.length & 1) {\n          var cvtData = new Uint8Array(cvt.length + 1);\n          cvtData.set(cvt.data);\n          cvt.data = cvtData;\n        }\n        return ttContext.hintsValid;\n      }\n      font = new _stream.Stream(new Uint8Array(font.getBytes()));\n      var header = void 0,\n          tables = void 0;\n      if (isTrueTypeCollectionFile(font)) {\n        var ttcData = readTrueTypeCollectionData(font, this.name);\n        header = ttcData.header;\n        tables = ttcData.tables;\n      } else {\n        header = readOpenTypeHeader(font);\n        tables = readTables(font, header.numTables);\n      }\n      var cff = void 0,\n          cffFile = void 0;\n      var isTrueType = !tables['CFF '];\n      if (!isTrueType) {\n        if (header.version === 'OTTO' && !(properties.composite && properties.cidToGidMap) || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          cff = new CFFFont(cffFile, properties);\n          adjustWidths(properties);\n          return this.convert(name, cff, properties);\n        }\n        delete tables['glyf'];\n        delete tables['loca'];\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n        this.isOpenType = true;\n      } else {\n        if (!tables['loca']) {\n          throw new _util.FormatError('Required \"loca\" table is not found');\n        }\n        if (!tables['glyf']) {\n          (0, _util.warn)('Required \"glyf\" table is not found -- trying to recover.');\n          tables['glyf'] = {\n            tag: 'glyf',\n            data: new Uint8Array(0)\n          };\n        }\n        this.isOpenType = false;\n      }\n      if (!tables['maxp']) {\n        throw new _util.FormatError('Required \"maxp\" table is not found');\n      }\n      font.pos = (font.start || 0) + tables['maxp'].offset;\n      var version = font.getInt32();\n      var numGlyphs = font.getUint16();\n      var maxFunctionDefs = 0;\n      var maxSizeOfInstructions = 0;\n      if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n        font.pos += 8;\n        var maxZones = font.getUint16();\n        if (maxZones > 2) {\n          tables['maxp'].data[14] = 0;\n          tables['maxp'].data[15] = 2;\n        }\n        font.pos += 4;\n        maxFunctionDefs = font.getUint16();\n        font.pos += 4;\n        maxSizeOfInstructions = font.getUint16();\n      }\n      var dupFirstEntry = false;\n      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\0') {\n        dupFirstEntry = true;\n        numGlyphs++;\n        tables['maxp'].data[4] = numGlyphs >> 8;\n        tables['maxp'].data[5] = numGlyphs & 255;\n      }\n      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n      if (!hintsValid) {\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n      }\n      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n      if (!tables['head']) {\n        throw new _util.FormatError('Required \"head\" table is not found');\n      }\n      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n      var missingGlyphs = Object.create(null);\n      if (isTrueType) {\n        var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n        var glyphsInfo = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions);\n        missingGlyphs = glyphsInfo.missingGlyphs;\n        if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n          tables['maxp'].data[26] = glyphsInfo.maxSizeOfInstructions >> 8;\n          tables['maxp'].data[27] = glyphsInfo.maxSizeOfInstructions & 255;\n        }\n      }\n      if (!tables['hhea']) {\n        throw new _util.FormatError('Required \"hhea\" table is not found');\n      }\n      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n        tables['hhea'].data[10] = 0xFF;\n        tables['hhea'].data[11] = 0xFF;\n      }\n      var metricsOverride = {\n        unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n        yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n        yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n        ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n        descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n      };\n      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n      if (tables['post']) {\n        var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n        if (!valid) {\n          tables['post'] = null;\n        }\n      }\n      var charCodeToGlyphId = [],\n          charCode;\n      function hasGlyph(glyphId) {\n        return !missingGlyphs[glyphId];\n      }\n      if (properties.composite) {\n        var cidToGidMap = properties.cidToGidMap || [];\n        var isCidToGidMapEmpty = cidToGidMap.length === 0;\n        properties.cMap.forEach(function (charCode, cid) {\n          if (cid > 0xffff) {\n            throw new _util.FormatError('Max size of CID is 65,535');\n          }\n          var glyphId = -1;\n          if (isCidToGidMapEmpty) {\n            glyphId = cid;\n          } else if (cidToGidMap[cid] !== undefined) {\n            glyphId = cidToGidMap[cid];\n          }\n          if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId)) {\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        });\n        if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n          charCodeToGlyphId[0] = numGlyphs - 1;\n        }\n      } else {\n        var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n        var cmapPlatformId = cmapTable.platformId;\n        var cmapEncodingId = cmapTable.encodingId;\n        var cmapMappings = cmapTable.mappings;\n        var cmapMappingsLength = cmapMappings.length;\n        if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!(0, _encodings.getEncoding)(properties.baseEncodingName)) {\n          var baseEncoding = [];\n          if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n            baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n          }\n          var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n          for (charCode = 0; charCode < 256; charCode++) {\n            var glyphName, standardGlyphName;\n            if (this.differences && charCode in this.differences) {\n              glyphName = this.differences[charCode];\n            } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n              glyphName = baseEncoding[charCode];\n            } else {\n              glyphName = _encodings.StandardEncoding[charCode];\n            }\n            if (!glyphName) {\n              continue;\n            }\n            standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n            var unicodeOrCharCode;\n            if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n              unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n            } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n              unicodeOrCharCode = _encodings.MacRomanEncoding.indexOf(standardGlyphName);\n            }\n            var found = false;\n            for (var i = 0; i < cmapMappingsLength; ++i) {\n              if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n                continue;\n              }\n              charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n              found = true;\n              break;\n            }\n            if (!found && properties.glyphNames) {\n              var glyphId = properties.glyphNames.indexOf(glyphName);\n              if (glyphId === -1 && standardGlyphName !== glyphName) {\n                glyphId = properties.glyphNames.indexOf(standardGlyphName);\n              }\n              if (glyphId > 0 && hasGlyph(glyphId)) {\n                charCodeToGlyphId[charCode] = glyphId;\n              }\n            }\n          }\n        } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n          for (var _i = 0; _i < cmapMappingsLength; ++_i) {\n            charCodeToGlyphId[cmapMappings[_i].charCode] = cmapMappings[_i].glyphId;\n          }\n        } else {\n          for (var _i2 = 0; _i2 < cmapMappingsLength; ++_i2) {\n            charCode = cmapMappings[_i2].charCode;\n            if (cmapPlatformId === 3 && charCode >= 0xF000 && charCode <= 0xF0FF) {\n              charCode &= 0xFF;\n            }\n            charCodeToGlyphId[charCode] = cmapMappings[_i2].glyphId;\n          }\n        }\n      }\n      if (charCodeToGlyphId.length === 0) {\n        charCodeToGlyphId[0] = 0;\n      }\n      var newMapping = adjustMapping(charCodeToGlyphId, properties, missingGlyphs);\n      this.toFontChar = newMapping.toFontChar;\n      tables['cmap'] = {\n        tag: 'cmap',\n        data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n      };\n      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n        tables['OS/2'] = {\n          tag: 'OS/2',\n          data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n        };\n      }\n      if (!tables['post']) {\n        tables['post'] = {\n          tag: 'post',\n          data: createPostTable(properties)\n        };\n      }\n      if (!isTrueType) {\n        try {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          var parser = new _cff_parser.CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n          cff = parser.parse();\n          var compiler = new _cff_parser.CFFCompiler(cff);\n          tables['CFF '].data = compiler.compile();\n        } catch (e) {\n          (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n        }\n      }\n      if (!tables['name']) {\n        tables['name'] = {\n          tag: 'name',\n          data: createNameTable(this.name)\n        };\n      } else {\n        var namePrototype = readNameTable(tables['name']);\n        tables['name'].data = createNameTable(name, namePrototype);\n      }\n      var builder = new OpenTypeFileBuilder(header.version);\n      for (var tableTag in tables) {\n        builder.addTable(tableTag, tables[tableTag].data);\n      }\n      return builder.toArray();\n    },\n    convert: function Font_convert(fontName, font, properties) {\n      properties.fixedPitch = false;\n      if (properties.builtInEncoding) {\n        adjustToUnicode(properties, properties.builtInEncoding);\n      }\n      var mapping = font.getGlyphMapping(properties);\n      var newMapping = adjustMapping(mapping, properties, Object.create(null));\n      this.toFontChar = newMapping.toFontChar;\n      var numGlyphs = font.numGlyphs;\n      function getCharCodes(charCodeToGlyphId, glyphId) {\n        var charCodes = null;\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            if (!charCodes) {\n              charCodes = [];\n            }\n            charCodes.push(charCode | 0);\n          }\n        }\n        return charCodes;\n      }\n      function createCharCode(charCodeToGlyphId, glyphId) {\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            return charCode | 0;\n          }\n        }\n        newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n        return newMapping.nextAvailableFontCharCode++;\n      }\n      var seacs = font.seacs;\n      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n        var matrix = properties.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        var charset = font.getCharset();\n        var seacMap = Object.create(null);\n        for (var glyphId in seacs) {\n          glyphId |= 0;\n          var seac = seacs[glyphId];\n          var baseGlyphName = _encodings.StandardEncoding[seac[2]];\n          var accentGlyphName = _encodings.StandardEncoding[seac[3]];\n          var baseGlyphId = charset.indexOf(baseGlyphName);\n          var accentGlyphId = charset.indexOf(accentGlyphName);\n          if (baseGlyphId < 0 || accentGlyphId < 0) {\n            continue;\n          }\n          var accentOffset = {\n            x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n            y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n          };\n          var charCodes = getCharCodes(mapping, glyphId);\n          if (!charCodes) {\n            continue;\n          }\n          for (var i = 0, ii = charCodes.length; i < ii; i++) {\n            var charCode = charCodes[i];\n            var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n            var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n            var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n            seacMap[charCode] = {\n              baseFontCharCode: baseFontCharCode,\n              accentFontCharCode: accentFontCharCode,\n              accentOffset: accentOffset\n            };\n          }\n        }\n        properties.seacMap = seacMap;\n      }\n      var unitsPerEm = 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n      var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n      builder.addTable('CFF ', font.data);\n      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n      builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n      builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n      builder.addTable('hmtx', function fontFieldsHmtx() {\n        var charstrings = font.charstrings;\n        var cffWidths = font.cff ? font.cff.widths : null;\n        var hmtx = '\\x00\\x00\\x00\\x00';\n        for (var i = 1, ii = numGlyphs; i < ii; i++) {\n          var width = 0;\n          if (charstrings) {\n            var charstring = charstrings[i - 1];\n            width = 'width' in charstring ? charstring.width : 0;\n          } else if (cffWidths) {\n            width = Math.ceil(cffWidths[i] || 0);\n          }\n          hmtx += string16(width) + string16(0);\n        }\n        return hmtx;\n      }());\n      builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n      builder.addTable('name', createNameTable(fontName));\n      builder.addTable('post', createPostTable(properties));\n      return builder.toArray();\n    },\n    get spaceWidth() {\n      if ('_shadowWidth' in this) {\n        return this._shadowWidth;\n      }\n      var possibleSpaceReplacements = ['space', 'minus', 'one', 'i', 'I'];\n      var width;\n      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n        var glyphName = possibleSpaceReplacements[i];\n        if (glyphName in this.widths) {\n          width = this.widths[glyphName];\n          break;\n        }\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        var glyphUnicode = glyphsUnicodeMap[glyphName];\n        var charcode = 0;\n        if (this.composite) {\n          if (this.cMap.contains(glyphUnicode)) {\n            charcode = this.cMap.lookup(glyphUnicode);\n          }\n        }\n        if (!charcode && this.toUnicode) {\n          charcode = this.toUnicode.charCodeOf(glyphUnicode);\n        }\n        if (charcode <= 0) {\n          charcode = glyphUnicode;\n        }\n        width = this.widths[charcode];\n        if (width) {\n          break;\n        }\n      }\n      width = width || this.defaultWidth;\n      this._shadowWidth = width;\n      return width;\n    },\n    charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n      var fontCharCode, width, operatorListId;\n      var widthCode = charcode;\n      if (this.cMap && this.cMap.contains(charcode)) {\n        widthCode = this.cMap.lookup(charcode);\n      }\n      width = this.widths[widthCode];\n      width = (0, _util.isNum)(width) ? width : this.defaultWidth;\n      var vmetric = this.vmetrics && this.vmetrics[widthCode];\n      var unicode = this.toUnicode.get(charcode) || this.fallbackToUnicode.get(charcode) || charcode;\n      if (typeof unicode === 'number') {\n        unicode = String.fromCharCode(unicode);\n      }\n      var isInFont = charcode in this.toFontChar;\n      fontCharCode = this.toFontChar[charcode] || charcode;\n      if (this.missingFile) {\n        fontCharCode = (0, _unicode.mapSpecialUnicodeValues)(fontCharCode);\n      }\n      if (this.isType3Font) {\n        operatorListId = fontCharCode;\n      }\n      var accent = null;\n      if (this.seacMap && this.seacMap[charcode]) {\n        isInFont = true;\n        var seac = this.seacMap[charcode];\n        fontCharCode = seac.baseFontCharCode;\n        accent = {\n          fontChar: String.fromCharCode(seac.accentFontCharCode),\n          offset: seac.accentOffset\n        };\n      }\n      var fontChar = String.fromCharCode(fontCharCode);\n      var glyph = this.glyphCache[charcode];\n      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n        glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n        this.glyphCache[charcode] = glyph;\n      }\n      return glyph;\n    },\n    charsToGlyphs: function Font_charsToGlyphs(chars) {\n      var charsCache = this.charsCache;\n      var glyphs, glyph, charcode;\n      if (charsCache) {\n        glyphs = charsCache[chars];\n        if (glyphs) {\n          return glyphs;\n        }\n      }\n      if (!charsCache) {\n        charsCache = this.charsCache = Object.create(null);\n      }\n      glyphs = [];\n      var charsCacheKey = chars;\n      var i = 0,\n          ii;\n      if (this.cMap) {\n        var c = Object.create(null);\n        while (i < chars.length) {\n          this.cMap.readCharCode(chars, i, c);\n          charcode = c.charcode;\n          var length = c.length;\n          i += length;\n          var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n          glyph = this.charToGlyph(charcode, isSpace);\n          glyphs.push(glyph);\n        }\n      } else {\n        for (i = 0, ii = chars.length; i < ii; ++i) {\n          charcode = chars.charCodeAt(i);\n          glyph = this.charToGlyph(charcode, charcode === 0x20);\n          glyphs.push(glyph);\n        }\n      }\n      return charsCache[charsCacheKey] = glyphs;\n    }\n  };\n  return Font;\n}();\nvar ErrorFont = function ErrorFontClosure() {\n  function ErrorFont(error) {\n    this.error = error;\n    this.loadedName = 'g_font_error';\n    this.loading = false;\n  }\n  ErrorFont.prototype = {\n    charsToGlyphs: function ErrorFont_charsToGlyphs() {\n      return [];\n    },\n    exportData: function ErrorFont_exportData() {\n      return { error: this.error };\n    }\n  };\n  return ErrorFont;\n}();\nfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n  var charCodeToGlyphId = Object.create(null);\n  var glyphId, charCode, baseEncoding;\n  var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n  if (properties.baseEncodingName) {\n    baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  } else if (isSymbolicFont) {\n    for (charCode in builtInEncoding) {\n      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n    }\n  } else {\n    baseEncoding = _encodings.StandardEncoding;\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  var differences = properties.differences,\n      glyphsUnicodeMap;\n  if (differences) {\n    for (charCode in differences) {\n      var glyphName = differences[charCode];\n      glyphId = glyphNames.indexOf(glyphName);\n      if (glyphId === -1) {\n        if (!glyphsUnicodeMap) {\n          glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        }\n        var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n        if (standardGlyphName !== glyphName) {\n          glyphId = glyphNames.indexOf(standardGlyphName);\n        }\n      }\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  return charCodeToGlyphId;\n}\nvar Type1Font = function Type1FontClosure() {\n  function findBlock(streamBytes, signature, startIndex) {\n    var streamBytesLength = streamBytes.length;\n    var signatureLength = signature.length;\n    var scanLength = streamBytesLength - signatureLength;\n    var i = startIndex,\n        j,\n        found = false;\n    while (i < scanLength) {\n      j = 0;\n      while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n        j++;\n      }\n      if (j >= signatureLength) {\n        i += j;\n        while (i < streamBytesLength && (0, _util.isSpace)(streamBytes[i])) {\n          i++;\n        }\n        found = true;\n        break;\n      }\n      i++;\n    }\n    return {\n      found: found,\n      length: i\n    };\n  }\n  function getHeaderBlock(stream, suggestedLength) {\n    var EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];\n    var streamStartPos = stream.pos;\n    var headerBytes, headerBytesLength, block;\n    try {\n      headerBytes = stream.getBytes(suggestedLength);\n      headerBytesLength = headerBytes.length;\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n    }\n    if (headerBytesLength === suggestedLength) {\n      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n      if (block.found && block.length === suggestedLength) {\n        return {\n          stream: new _stream.Stream(headerBytes),\n          length: suggestedLength\n        };\n      }\n    }\n    (0, _util.warn)('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n    stream.pos = streamStartPos;\n    var SCAN_BLOCK_LENGTH = 2048;\n    var actualLength;\n    while (true) {\n      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n      if (block.length === 0) {\n        break;\n      }\n      stream.pos += block.length;\n      if (block.found) {\n        actualLength = stream.pos - streamStartPos;\n        break;\n      }\n    }\n    stream.pos = streamStartPos;\n    if (actualLength) {\n      return {\n        stream: new _stream.Stream(stream.getBytes(actualLength)),\n        length: actualLength\n      };\n    }\n    (0, _util.warn)('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n    return {\n      stream: new _stream.Stream(stream.getBytes(suggestedLength)),\n      length: suggestedLength\n    };\n  }\n  function getEexecBlock(stream, suggestedLength) {\n    var eexecBytes = stream.getBytes();\n    return {\n      stream: new _stream.Stream(eexecBytes),\n      length: eexecBytes.length\n    };\n  }\n  function Type1Font(name, file, properties) {\n    var PFB_HEADER_SIZE = 6;\n    var headerBlockLength = properties.length1;\n    var eexecBlockLength = properties.length2;\n    var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n    var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n    if (pfbHeaderPresent) {\n      file.skip(PFB_HEADER_SIZE);\n      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var headerBlock = getHeaderBlock(file, headerBlockLength);\n    var headerBlockParser = new _type1_parser.Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n    headerBlockParser.extractFontHeader(properties);\n    if (pfbHeaderPresent) {\n      pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var eexecBlock = getEexecBlock(file, eexecBlockLength);\n    var eexecBlockParser = new _type1_parser.Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n    var data = eexecBlockParser.extractFontProgram();\n    for (var info in data.properties) {\n      properties[info] = data.properties[info];\n    }\n    var charstrings = data.charstrings;\n    var type2Charstrings = this.getType2Charstrings(charstrings);\n    var subrs = this.getType2Subrs(data.subrs);\n    this.charstrings = charstrings;\n    this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n    this.seacs = this.getSeacs(data.charstrings);\n  }\n  Type1Font.prototype = {\n    get numGlyphs() {\n      return this.charstrings.length + 1;\n    },\n    getCharset: function Type1Font_getCharset() {\n      var charset = ['.notdef'];\n      var charstrings = this.charstrings;\n      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        charset.push(charstrings[glyphId].glyphName);\n      }\n      return charset;\n    },\n    getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n      var charstrings = this.charstrings;\n      var glyphNames = ['.notdef'],\n          glyphId;\n      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        glyphNames.push(charstrings[glyphId].glyphName);\n      }\n      var encoding = properties.builtInEncoding;\n      if (encoding) {\n        var builtInEncoding = Object.create(null);\n        for (var charCode in encoding) {\n          glyphId = glyphNames.indexOf(encoding[charCode]);\n          if (glyphId >= 0) {\n            builtInEncoding[charCode] = glyphId;\n          }\n        }\n      }\n      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n    },\n    getSeacs: function Type1Font_getSeacs(charstrings) {\n      var i, ii;\n      var seacMap = [];\n      for (i = 0, ii = charstrings.length; i < ii; i++) {\n        var charstring = charstrings[i];\n        if (charstring.seac) {\n          seacMap[i + 1] = charstring.seac;\n        }\n      }\n      return seacMap;\n    },\n    getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n      var type2Charstrings = [];\n      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n        type2Charstrings.push(type1Charstrings[i].charstring);\n      }\n      return type2Charstrings;\n    },\n    getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n      var bias = 0;\n      var count = type1Subrs.length;\n      if (count < 1133) {\n        bias = 107;\n      } else if (count < 33769) {\n        bias = 1131;\n      } else {\n        bias = 32768;\n      }\n      var type2Subrs = [];\n      var i;\n      for (i = 0; i < bias; i++) {\n        type2Subrs.push([0x0B]);\n      }\n      for (i = 0; i < count; i++) {\n        type2Subrs.push(type1Subrs[i]);\n      }\n      return type2Subrs;\n    },\n    wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n      var cff = new _cff_parser.CFF();\n      cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);\n      cff.names = [name];\n      var topDict = new _cff_parser.CFFTopDict();\n      topDict.setByName('version', 391);\n      topDict.setByName('Notice', 392);\n      topDict.setByName('FullName', 393);\n      topDict.setByName('FamilyName', 394);\n      topDict.setByName('Weight', 395);\n      topDict.setByName('Encoding', null);\n      topDict.setByName('FontMatrix', properties.fontMatrix);\n      topDict.setByName('FontBBox', properties.bbox);\n      topDict.setByName('charset', null);\n      topDict.setByName('CharStrings', null);\n      topDict.setByName('Private', null);\n      cff.topDict = topDict;\n      var strings = new _cff_parser.CFFStrings();\n      strings.add('Version 0.11');\n      strings.add('See original notice');\n      strings.add(name);\n      strings.add(name);\n      strings.add('Medium');\n      cff.strings = strings;\n      cff.globalSubrIndex = new _cff_parser.CFFIndex();\n      var count = glyphs.length;\n      var charsetArray = [0];\n      var i, ii;\n      for (i = 0; i < count; i++) {\n        var index = _cff_parser.CFFStandardStrings.indexOf(charstrings[i].glyphName);\n        if (index === -1) {\n          index = 0;\n        }\n        charsetArray.push(index >> 8 & 0xff, index & 0xff);\n      }\n      cff.charset = new _cff_parser.CFFCharset(false, 0, [], charsetArray);\n      var charStringsIndex = new _cff_parser.CFFIndex();\n      charStringsIndex.add([0x8B, 0x0E]);\n      for (i = 0; i < count; i++) {\n        var glyph = glyphs[i];\n        if (glyph.length === 0) {\n          charStringsIndex.add([0x8B, 0x0E]);\n          continue;\n        }\n        charStringsIndex.add(glyph);\n      }\n      cff.charStrings = charStringsIndex;\n      var privateDict = new _cff_parser.CFFPrivateDict();\n      privateDict.setByName('Subrs', null);\n      var fields = ['BlueValues', 'OtherBlues', 'FamilyBlues', 'FamilyOtherBlues', 'StemSnapH', 'StemSnapV', 'BlueShift', 'BlueFuzz', 'BlueScale', 'LanguageGroup', 'ExpansionFactor', 'ForceBold', 'StdHW', 'StdVW'];\n      for (i = 0, ii = fields.length; i < ii; i++) {\n        var field = fields[i];\n        if (!(field in properties.privateData)) {\n          continue;\n        }\n        var value = properties.privateData[field];\n        if (Array.isArray(value)) {\n          for (var j = value.length - 1; j > 0; j--) {\n            value[j] -= value[j - 1];\n          }\n        }\n        privateDict.setByName(field, value);\n      }\n      cff.topDict.privateDict = privateDict;\n      var subrIndex = new _cff_parser.CFFIndex();\n      for (i = 0, ii = subrs.length; i < ii; i++) {\n        subrIndex.add(subrs[i]);\n      }\n      privateDict.subrsIndex = subrIndex;\n      var compiler = new _cff_parser.CFFCompiler(cff);\n      return compiler.compile();\n    }\n  };\n  return Type1Font;\n}();\nvar CFFFont = function CFFFontClosure() {\n  function CFFFont(file, properties) {\n    this.properties = properties;\n    var parser = new _cff_parser.CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n    this.cff = parser.parse();\n    var compiler = new _cff_parser.CFFCompiler(this.cff);\n    this.seacs = this.cff.seacs;\n    try {\n      this.data = compiler.compile();\n    } catch (e) {\n      (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n      this.data = file;\n    }\n  }\n  CFFFont.prototype = {\n    get numGlyphs() {\n      return this.cff.charStrings.count;\n    },\n    getCharset: function CFFFont_getCharset() {\n      return this.cff.charset.charset;\n    },\n    getGlyphMapping: function CFFFont_getGlyphMapping() {\n      var cff = this.cff;\n      var properties = this.properties;\n      var charsets = cff.charset.charset;\n      var charCodeToGlyphId;\n      var glyphId;\n      if (properties.composite) {\n        charCodeToGlyphId = Object.create(null);\n        if (cff.isCIDFont) {\n          for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n            var cid = charsets[glyphId];\n            var charCode = properties.cMap.charCodeOf(cid);\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        } else {\n          for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n            charCodeToGlyphId[glyphId] = glyphId;\n          }\n        }\n        return charCodeToGlyphId;\n      }\n      var encoding = cff.encoding ? cff.encoding.encoding : null;\n      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n      return charCodeToGlyphId;\n    }\n  };\n  return CFFFont;\n}();\n(function checkSeacSupport() {\n  if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n    exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED = true;\n  }\n})();\n(function checkChromeWindows() {\n  if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n    SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n  }\n})();\nexports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\nexports.PRIVATE_USE_OFFSET_START = PRIVATE_USE_OFFSET_START;\nexports.PRIVATE_USE_OFFSET_END = PRIVATE_USE_OFFSET_END;\nexports.ErrorFont = ErrorFont;\nexports.Font = Font;\nexports.FontFlags = FontFlags;\nexports.ToUnicodeMap = ToUnicodeMap;\nexports.IdentityToUnicodeMap = IdentityToUnicodeMap;\nexports.ProblematicCharRanges = ProblematicCharRanges;\nexports.getFontType = getFontType;\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\nexports.ISOAdobeCharset = ISOAdobeCharset;\nexports.ExpertCharset = ExpertCharset;\nexports.ExpertSubsetCharset = ExpertSubsetCharset;\n\n/***/ }),\n/* 144 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FontRendererFactory = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cff_parser = __w_pdfjs_require__(69);\n\nvar _glyphlist = __w_pdfjs_require__(43);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar FontRendererFactory = function FontRendererFactoryClosure() {\n  function getLong(data, offset) {\n    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n  }\n  function getUshort(data, offset) {\n    return data[offset] << 8 | data[offset + 1];\n  }\n  function parseCmap(data, start, end) {\n    var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n    var format = getUshort(data, start + offset);\n    var ranges, p, i;\n    if (format === 4) {\n      getUshort(data, start + offset + 2);\n      var segCount = getUshort(data, start + offset + 6) >> 1;\n      p = start + offset + 14;\n      ranges = [];\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i] = { end: getUshort(data, p) };\n      }\n      p += 2;\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].start = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].idDelta = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        var idOffset = getUshort(data, p);\n        if (idOffset === 0) {\n          continue;\n        }\n        ranges[i].ids = [];\n        for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n          ranges[i].ids[j] = getUshort(data, p + idOffset);\n          idOffset += 2;\n        }\n      }\n      return ranges;\n    } else if (format === 12) {\n      getLong(data, start + offset + 4);\n      var groups = getLong(data, start + offset + 12);\n      p = start + offset + 16;\n      ranges = [];\n      for (i = 0; i < groups; i++) {\n        ranges.push({\n          start: getLong(data, p),\n          end: getLong(data, p + 4),\n          idDelta: getLong(data, p + 8) - getLong(data, p)\n        });\n        p += 12;\n      }\n      return ranges;\n    }\n    throw new _util.FormatError('unsupported cmap: ' + format);\n  }\n  function parseCff(data, start, end, seacAnalysisEnabled) {\n    var properties = {};\n    var parser = new _cff_parser.CFFParser(new _stream.Stream(data, start, end - start), properties, seacAnalysisEnabled);\n    var cff = parser.parse();\n    return {\n      glyphs: cff.charStrings.objects,\n      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects,\n      isCFFCIDFont: cff.isCIDFont,\n      fdSelect: cff.fdSelect,\n      fdArray: cff.fdArray\n    };\n  }\n  function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n    var itemSize, itemDecode;\n    if (isGlyphLocationsLong) {\n      itemSize = 4;\n      itemDecode = function fontItemDecodeLong(data, offset) {\n        return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n      };\n    } else {\n      itemSize = 2;\n      itemDecode = function fontItemDecode(data, offset) {\n        return data[offset] << 9 | data[offset + 1] << 1;\n      };\n    }\n    var glyphs = [];\n    var startOffset = itemDecode(loca, 0);\n    for (var j = itemSize; j < loca.length; j += itemSize) {\n      var endOffset = itemDecode(loca, j);\n      glyphs.push(glyf.subarray(startOffset, endOffset));\n      startOffset = endOffset;\n    }\n    return glyphs;\n  }\n  function lookupCmap(ranges, unicode) {\n    var code = unicode.charCodeAt(0),\n        gid = 0;\n    var l = 0,\n        r = ranges.length - 1;\n    while (l < r) {\n      var c = l + r + 1 >> 1;\n      if (code < ranges[c].start) {\n        r = c - 1;\n      } else {\n        l = c;\n      }\n    }\n    if (ranges[l].start <= code && code <= ranges[l].end) {\n      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n    }\n    return {\n      charCode: code,\n      glyphId: gid\n    };\n  }\n  function compileGlyf(code, cmds, font) {\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function quadraticCurveTo(xa, ya, x, y) {\n      cmds.push({\n        cmd: 'quadraticCurveTo',\n        args: [xa, ya, x, y]\n      });\n    }\n    var i = 0;\n    var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n    var flags;\n    var x = 0,\n        y = 0;\n    i += 10;\n    if (numberOfContours < 0) {\n      do {\n        flags = code[i] << 8 | code[i + 1];\n        var glyphIndex = code[i + 2] << 8 | code[i + 3];\n        i += 4;\n        var arg1, arg2;\n        if (flags & 0x01) {\n          arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n          arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n          i += 4;\n        } else {\n          arg1 = code[i++];\n          arg2 = code[i++];\n        }\n        if (flags & 0x02) {\n          x = arg1;\n          y = arg2;\n        } else {\n          x = 0;\n          y = 0;\n        }\n        var scaleX = 1,\n            scaleY = 1,\n            scale01 = 0,\n            scale10 = 0;\n        if (flags & 0x08) {\n          scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          i += 2;\n        } else if (flags & 0x40) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          i += 4;\n        } else if (flags & 0x80) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n          scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n          i += 8;\n        }\n        var subglyph = font.glyphs[glyphIndex];\n        if (subglyph) {\n          cmds.push({ cmd: 'save' });\n          cmds.push({\n            cmd: 'transform',\n            args: [scaleX, scale01, scale10, scaleY, x, y]\n          });\n          compileGlyf(subglyph, cmds, font);\n          cmds.push({ cmd: 'restore' });\n        }\n      } while (flags & 0x20);\n    } else {\n      var endPtsOfContours = [];\n      var j, jj;\n      for (j = 0; j < numberOfContours; j++) {\n        endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n        i += 2;\n      }\n      var instructionLength = code[i] << 8 | code[i + 1];\n      i += 2 + instructionLength;\n      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n      var points = [];\n      while (points.length < numberOfPoints) {\n        flags = code[i++];\n        var repeat = 1;\n        if (flags & 0x08) {\n          repeat += code[i++];\n        }\n        while (repeat-- > 0) {\n          points.push({ flags: flags });\n        }\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x12) {\n          case 0x00:\n            x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x02:\n            x -= code[i++];\n            break;\n          case 0x12:\n            x += code[i++];\n            break;\n        }\n        points[j].x = x;\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x24) {\n          case 0x00:\n            y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x04:\n            y -= code[i++];\n            break;\n          case 0x24:\n            y += code[i++];\n            break;\n        }\n        points[j].y = y;\n      }\n      var startPoint = 0;\n      for (i = 0; i < numberOfContours; i++) {\n        var endPoint = endPtsOfContours[i];\n        var contour = points.slice(startPoint, endPoint + 1);\n        if (contour[0].flags & 1) {\n          contour.push(contour[0]);\n        } else if (contour[contour.length - 1].flags & 1) {\n          contour.unshift(contour[contour.length - 1]);\n        } else {\n          var p = {\n            flags: 1,\n            x: (contour[0].x + contour[contour.length - 1].x) / 2,\n            y: (contour[0].y + contour[contour.length - 1].y) / 2\n          };\n          contour.unshift(p);\n          contour.push(p);\n        }\n        moveTo(contour[0].x, contour[0].y);\n        for (j = 1, jj = contour.length; j < jj; j++) {\n          if (contour[j].flags & 1) {\n            lineTo(contour[j].x, contour[j].y);\n          } else if (contour[j + 1].flags & 1) {\n            quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n            j++;\n          } else {\n            quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n          }\n        }\n        startPoint = endPoint + 1;\n      }\n    }\n  }\n  function compileCharString(code, cmds, font, glyphId) {\n    var stack = [];\n    var x = 0,\n        y = 0;\n    var stems = 0;\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function bezierCurveTo(x1, y1, x2, y2, x, y) {\n      cmds.push({\n        cmd: 'bezierCurveTo',\n        args: [x1, y1, x2, y2, x, y]\n      });\n    }\n    function parse(code) {\n      var i = 0;\n      while (i < code.length) {\n        var stackClean = false;\n        var v = code[i++];\n        var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n        switch (v) {\n          case 1:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 3:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 4:\n            y += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 5:\n            while (stack.length > 0) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 6:\n            while (stack.length > 0) {\n              x += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 7:\n            while (stack.length > 0) {\n              y += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              x += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 8:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 10:\n            n = stack.pop();\n            subrCode = null;\n            if (font.isCFFCIDFont) {\n              var fdIndex = font.fdSelect.getFDIndex(glyphId);\n              if (fdIndex >= 0 && fdIndex < font.fdArray.length) {\n                var fontDict = font.fdArray[fdIndex],\n                    subrs = void 0;\n                if (fontDict.privateDict && fontDict.privateDict.subrsIndex) {\n                  subrs = fontDict.privateDict.subrsIndex.objects;\n                }\n                if (subrs) {\n                  var numSubrs = subrs.length;\n                  n += numSubrs < 1240 ? 107 : numSubrs < 33900 ? 1131 : 32768;\n                  subrCode = subrs[n];\n                }\n              } else {\n                (0, _util.warn)('Invalid fd index for glyph index.');\n              }\n            } else {\n              subrCode = font.subrs[n + font.subrsBias];\n            }\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 11:\n            return;\n          case 12:\n            v = code[i++];\n            switch (v) {\n              case 34:\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y1 = y + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y, xb, y1, x, y1);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y, x, y);\n                break;\n              case 35:\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                stack.pop();\n                break;\n              case 36:\n                xa = x + stack.shift();\n                y1 = y + stack.shift();\n                xb = xa + stack.shift();\n                y2 = y1 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y2, x, y2);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y3 = y2 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y2, xb, y3, x, y);\n                break;\n              case 37:\n                var x0 = x,\n                    y0 = y;\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb;\n                y = yb;\n                if (Math.abs(x - x0) > Math.abs(y - y0)) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                break;\n              default:\n                throw new _util.FormatError('unknown operator: 12 ' + v);\n            }\n            break;\n          case 14:\n            if (stack.length >= 4) {\n              var achar = stack.pop();\n              var bchar = stack.pop();\n              y = stack.pop();\n              x = stack.pop();\n              cmds.push({ cmd: 'save' });\n              cmds.push({\n                cmd: 'translate',\n                args: [x, y]\n              });\n              var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font, cmap.glyphId);\n              cmds.push({ cmd: 'restore' });\n              cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font, cmap.glyphId);\n            }\n            return;\n          case 18:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 19:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 20:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 21:\n            y += stack.pop();\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 22:\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 23:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 24:\n            while (stack.length > 2) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            x += stack.shift();\n            y += stack.shift();\n            lineTo(x, y);\n            break;\n          case 25:\n            while (stack.length > 6) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            xa = x + stack.shift();\n            ya = y + stack.shift();\n            xb = xa + stack.shift();\n            yb = ya + stack.shift();\n            x = xb + stack.shift();\n            y = yb + stack.shift();\n            bezierCurveTo(xa, ya, xb, yb, x, y);\n            break;\n          case 26:\n            if (stack.length % 2) {\n              x += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb;\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 27:\n            if (stack.length % 2) {\n              y += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb;\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 28:\n            stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n            i += 2;\n            break;\n          case 29:\n            n = stack.pop() + font.gsubrsBias;\n            subrCode = font.gsubrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 30:\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 31:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          default:\n            if (v < 32) {\n              throw new _util.FormatError('unknown operator: ' + v);\n            }\n            if (v < 247) {\n              stack.push(v - 139);\n            } else if (v < 251) {\n              stack.push((v - 247) * 256 + code[i++] + 108);\n            } else if (v < 255) {\n              stack.push(-(v - 251) * 256 - code[i++] - 108);\n            } else {\n              stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n              i += 4;\n            }\n            break;\n        }\n        if (stackClean) {\n          stack.length = 0;\n        }\n      }\n    }\n    parse(code);\n  }\n  var noop = '';\n  function CompiledFont(fontMatrix) {\n    this.compiledGlyphs = Object.create(null);\n    this.compiledCharCodeToGlyphId = Object.create(null);\n    this.fontMatrix = fontMatrix;\n  }\n  CompiledFont.prototype = {\n    getPathJs: function getPathJs(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      var fn = this.compiledGlyphs[cmap.glyphId];\n      if (!fn) {\n        fn = this.compileGlyph(this.glyphs[cmap.glyphId], cmap.glyphId);\n        this.compiledGlyphs[cmap.glyphId] = fn;\n      }\n      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n        this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n      }\n      return fn;\n    },\n    compileGlyph: function compileGlyph(code, glyphId) {\n      if (!code || code.length === 0 || code[0] === 14) {\n        return noop;\n      }\n      var fontMatrix = this.fontMatrix;\n      if (this.isCFFCIDFont) {\n        var fdIndex = this.fdSelect.getFDIndex(glyphId);\n        if (fdIndex >= 0 && fdIndex < this.fdArray.length) {\n          var fontDict = this.fdArray[fdIndex];\n          fontMatrix = fontDict.getByName('FontMatrix') || _util.FONT_IDENTITY_MATRIX;\n        } else {\n          (0, _util.warn)('Invalid fd index for glyph index.');\n        }\n      }\n      var cmds = [];\n      cmds.push({ cmd: 'save' });\n      cmds.push({\n        cmd: 'transform',\n        args: fontMatrix.slice()\n      });\n      cmds.push({\n        cmd: 'scale',\n        args: ['size', '-size']\n      });\n      this.compileGlyphImpl(code, cmds, glyphId);\n      cmds.push({ cmd: 'restore' });\n      return cmds;\n    },\n    compileGlyphImpl: function compileGlyphImpl() {\n      (0, _util.unreachable)('Children classes should implement this.');\n    },\n    hasBuiltPath: function hasBuiltPath(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n    }\n  };\n  function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n    fontMatrix = fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = glyphs;\n    this.cmap = cmap;\n  }\n  _util.Util.inherit(TrueTypeCompiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileGlyf(code, cmds, this);\n    }\n  });\n  function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n    fontMatrix = fontMatrix || [0.001, 0, 0, 0.001, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = cffInfo.glyphs;\n    this.gsubrs = cffInfo.gsubrs || [];\n    this.subrs = cffInfo.subrs || [];\n    this.cmap = cmap;\n    this.glyphNameMap = glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();\n    this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n    this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n    this.isCFFCIDFont = cffInfo.isCFFCIDFont;\n    this.fdSelect = cffInfo.fdSelect;\n    this.fdArray = cffInfo.fdArray;\n  }\n  _util.Util.inherit(Type2Compiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds, glyphId) {\n      compileCharString(code, cmds, this, glyphId);\n    }\n  });\n  return {\n    create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n      var data = new Uint8Array(font.data);\n      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n      var numTables = getUshort(data, 4);\n      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n        var tag = (0, _util.bytesToString)(data.subarray(p, p + 4));\n        var offset = getLong(data, p + 8);\n        var length = getLong(data, p + 12);\n        switch (tag) {\n          case 'cmap':\n            cmap = parseCmap(data, offset, offset + length);\n            break;\n          case 'glyf':\n            glyf = data.subarray(offset, offset + length);\n            break;\n          case 'loca':\n            loca = data.subarray(offset, offset + length);\n            break;\n          case 'head':\n            unitsPerEm = getUshort(data, offset + 18);\n            indexToLocFormat = getUshort(data, offset + 50);\n            break;\n          case 'CFF ':\n            cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n            break;\n        }\n      }\n      if (glyf) {\n        var fontMatrix = !unitsPerEm ? font.fontMatrix : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];\n        return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n      }\n      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n    }\n  };\n}();\nexports.FontRendererFactory = FontRendererFactory;\n\n/***/ }),\n/* 145 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Type1Parser = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar HINTING_ENABLED = false;\nvar Type1CharString = function Type1CharStringClosure() {\n  var COMMAND_MAP = {\n    'hstem': [1],\n    'vstem': [3],\n    'vmoveto': [4],\n    'rlineto': [5],\n    'hlineto': [6],\n    'vlineto': [7],\n    'rrcurveto': [8],\n    'callsubr': [10],\n    'flex': [12, 35],\n    'drop': [12, 18],\n    'endchar': [14],\n    'rmoveto': [21],\n    'hmoveto': [22],\n    'vhcurveto': [30],\n    'hvcurveto': [31]\n  };\n  function Type1CharString() {\n    this.width = 0;\n    this.lsb = 0;\n    this.flexing = false;\n    this.output = [];\n    this.stack = [];\n  }\n  Type1CharString.prototype = {\n    convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n      var count = encoded.length;\n      var error = false;\n      var wx, sbx, subrNumber;\n      for (var i = 0; i < count; i++) {\n        var value = encoded[i];\n        if (value < 32) {\n          if (value === 12) {\n            value = (value << 8) + encoded[++i];\n          }\n          switch (value) {\n            case 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case 3:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case 4:\n              if (this.flexing) {\n                if (this.stack.length < 1) {\n                  error = true;\n                  break;\n                }\n                var dy = this.stack.pop();\n                this.stack.push(0, dy);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n              break;\n            case 5:\n              error = this.executeCommand(2, COMMAND_MAP.rlineto);\n              break;\n            case 6:\n              error = this.executeCommand(1, COMMAND_MAP.hlineto);\n              break;\n            case 7:\n              error = this.executeCommand(1, COMMAND_MAP.vlineto);\n              break;\n            case 8:\n              error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n              break;\n            case 9:\n              this.stack = [];\n              break;\n            case 10:\n              if (this.stack.length < 1) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              if (!subrs[subrNumber]) {\n                error = true;\n                break;\n              }\n              error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n              break;\n            case 11:\n              return error;\n            case 13:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              wx = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx);\n              error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n              break;\n            case 14:\n              this.output.push(COMMAND_MAP.endchar[0]);\n              break;\n            case 21:\n              if (this.flexing) {\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n              break;\n            case 22:\n              if (this.flexing) {\n                this.stack.push(0);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n              break;\n            case 30:\n              error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n              break;\n            case 31:\n              error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n              break;\n            case (12 << 8) + 0:\n              this.stack = [];\n              break;\n            case (12 << 8) + 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case (12 << 8) + 2:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case (12 << 8) + 6:\n              if (seacAnalysisEnabled) {\n                this.seac = this.stack.splice(-4, 4);\n                error = this.executeCommand(0, COMMAND_MAP.endchar);\n              } else {\n                error = this.executeCommand(4, COMMAND_MAP.endchar);\n              }\n              break;\n            case (12 << 8) + 7:\n              if (this.stack.length < 4) {\n                error = true;\n                break;\n              }\n              this.stack.pop();\n              wx = this.stack.pop();\n              var sby = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx, sby);\n              error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n              break;\n            case (12 << 8) + 12:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              var num2 = this.stack.pop();\n              var num1 = this.stack.pop();\n              this.stack.push(num1 / num2);\n              break;\n            case (12 << 8) + 16:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              var numArgs = this.stack.pop();\n              if (subrNumber === 0 && numArgs === 3) {\n                var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n                this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n                error = this.executeCommand(13, COMMAND_MAP.flex, true);\n                this.flexing = false;\n                this.stack.push(flexArgs[15], flexArgs[16]);\n              } else if (subrNumber === 1 && numArgs === 0) {\n                this.flexing = true;\n              }\n              break;\n            case (12 << 8) + 17:\n              break;\n            case (12 << 8) + 33:\n              this.stack = [];\n              break;\n            default:\n              (0, _util.warn)('Unknown type 1 charstring command of \"' + value + '\"');\n              break;\n          }\n          if (error) {\n            break;\n          }\n          continue;\n        } else if (value <= 246) {\n          value = value - 139;\n        } else if (value <= 250) {\n          value = (value - 247) * 256 + encoded[++i] + 108;\n        } else if (value <= 254) {\n          value = -((value - 251) * 256) - encoded[++i] - 108;\n        } else {\n          value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n        }\n        this.stack.push(value);\n      }\n      return error;\n    },\n    executeCommand: function executeCommand(howManyArgs, command, keepStack) {\n      var stackLength = this.stack.length;\n      if (howManyArgs > stackLength) {\n        return true;\n      }\n      var start = stackLength - howManyArgs;\n      for (var i = start; i < stackLength; i++) {\n        var value = this.stack[i];\n        if (Number.isInteger(value)) {\n          this.output.push(28, value >> 8 & 0xff, value & 0xff);\n        } else {\n          value = 65536 * value | 0;\n          this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n        }\n      }\n      this.output.push.apply(this.output, command);\n      if (keepStack) {\n        this.stack.splice(start, howManyArgs);\n      } else {\n        this.stack.length = 0;\n      }\n      return false;\n    }\n  };\n  return Type1CharString;\n}();\nvar Type1Parser = function Type1ParserClosure() {\n  var EEXEC_ENCRYPT_KEY = 55665;\n  var CHAR_STRS_ENCRYPT_KEY = 4330;\n  function isHexDigit(code) {\n    return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n  }\n  function decrypt(data, key, discardNumber) {\n    if (discardNumber >= data.length) {\n      return new Uint8Array(0);\n    }\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719,\n        i,\n        j;\n    for (i = 0; i < discardNumber; i++) {\n      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    var count = data.length - discardNumber;\n    var decrypted = new Uint8Array(count);\n    for (i = discardNumber, j = 0; j < count; i++, j++) {\n      var value = data[i];\n      decrypted[j] = value ^ r >> 8;\n      r = (value + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    return decrypted;\n  }\n  function decryptAscii(data, key, discardNumber) {\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719;\n    var count = data.length,\n        maybeLength = count >>> 1;\n    var decrypted = new Uint8Array(maybeLength);\n    var i, j;\n    for (i = 0, j = 0; i < count; i++) {\n      var digit1 = data[i];\n      if (!isHexDigit(digit1)) {\n        continue;\n      }\n      i++;\n      var digit2;\n      while (i < count && !isHexDigit(digit2 = data[i])) {\n        i++;\n      }\n      if (i < count) {\n        var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n        decrypted[j++] = value ^ r >> 8;\n        r = (value + r) * c1 + c2 & (1 << 16) - 1;\n      }\n    }\n    return Array.prototype.slice.call(decrypted, discardNumber, j);\n  }\n  function isSpecial(c) {\n    return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n  }\n  function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n    if (encrypted) {\n      var data = stream.getBytes();\n      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n      stream = new _stream.Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n    }\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n    this.stream = stream;\n    this.nextChar();\n  }\n  Type1Parser.prototype = {\n    readNumberArray: function Type1Parser_readNumberArray() {\n      this.getToken();\n      var array = [];\n      while (true) {\n        var token = this.getToken();\n        if (token === null || token === ']' || token === '}') {\n          break;\n        }\n        array.push(parseFloat(token || 0));\n      }\n      return array;\n    },\n    readNumber: function Type1Parser_readNumber() {\n      var token = this.getToken();\n      return parseFloat(token || 0);\n    },\n    readInt: function Type1Parser_readInt() {\n      var token = this.getToken();\n      return parseInt(token || 0, 10) | 0;\n    },\n    readBoolean: function Type1Parser_readBoolean() {\n      var token = this.getToken();\n      return token === 'true' ? 1 : 0;\n    },\n    nextChar: function Type1_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function Type1Parser_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch === -1) {\n          return null;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      if (isSpecial(ch)) {\n        this.nextChar();\n        return String.fromCharCode(ch);\n      }\n      var token = '';\n      do {\n        token += String.fromCharCode(ch);\n        ch = this.nextChar();\n      } while (ch >= 0 && !(0, _util.isSpace)(ch) && !isSpecial(ch));\n      return token;\n    },\n    readCharStrings: function Type1Parser_readCharStrings(bytes, lenIV) {\n      if (lenIV === -1) {\n        return bytes;\n      }\n      return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);\n    },\n    extractFontProgram: function Type1Parser_extractFontProgram() {\n      var stream = this.stream;\n      var subrs = [],\n          charstrings = [];\n      var privateData = Object.create(null);\n      privateData['lenIV'] = 4;\n      var program = {\n        subrs: [],\n        charstrings: [],\n        properties: { 'privateData': privateData }\n      };\n      var token, length, data, lenIV, encoded;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'CharStrings':\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            while (true) {\n              token = this.getToken();\n              if (token === null || token === 'end') {\n                break;\n              }\n              if (token !== '/') {\n                continue;\n              }\n              var glyph = this.getToken();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              charstrings.push({\n                glyph: glyph,\n                encoded: encoded\n              });\n            }\n            break;\n          case 'Subrs':\n            this.readInt();\n            this.getToken();\n            while (this.getToken() === 'dup') {\n              var index = this.readInt();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              subrs[index] = encoded;\n            }\n            break;\n          case 'BlueValues':\n          case 'OtherBlues':\n          case 'FamilyBlues':\n          case 'FamilyOtherBlues':\n            var blueArray = this.readNumberArray();\n            if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n              program.properties.privateData[token] = blueArray;\n            }\n            break;\n          case 'StemSnapH':\n          case 'StemSnapV':\n            program.properties.privateData[token] = this.readNumberArray();\n            break;\n          case 'StdHW':\n          case 'StdVW':\n            program.properties.privateData[token] = this.readNumberArray()[0];\n            break;\n          case 'BlueShift':\n          case 'lenIV':\n          case 'BlueFuzz':\n          case 'BlueScale':\n          case 'LanguageGroup':\n          case 'ExpansionFactor':\n            program.properties.privateData[token] = this.readNumber();\n            break;\n          case 'ForceBold':\n            program.properties.privateData[token] = this.readBoolean();\n            break;\n        }\n      }\n      for (var i = 0; i < charstrings.length; i++) {\n        glyph = charstrings[i].glyph;\n        encoded = charstrings[i].encoded;\n        var charString = new Type1CharString();\n        var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n        var output = charString.output;\n        if (error) {\n          output = [14];\n        }\n        program.charstrings.push({\n          glyphName: glyph,\n          charstring: output,\n          width: charString.width,\n          lsb: charString.lsb,\n          seac: charString.seac\n        });\n      }\n      return program;\n    },\n    extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n      var token;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'FontMatrix':\n            var matrix = this.readNumberArray();\n            properties.fontMatrix = matrix;\n            break;\n          case 'Encoding':\n            var encodingArg = this.getToken();\n            var encoding;\n            if (!/^\\d+$/.test(encodingArg)) {\n              encoding = (0, _encodings.getEncoding)(encodingArg);\n            } else {\n              encoding = [];\n              var size = parseInt(encodingArg, 10) | 0;\n              this.getToken();\n              for (var j = 0; j < size; j++) {\n                token = this.getToken();\n                while (token !== 'dup' && token !== 'def') {\n                  token = this.getToken();\n                  if (token === null) {\n                    return;\n                  }\n                }\n                if (token === 'def') {\n                  break;\n                }\n                var index = this.readInt();\n                this.getToken();\n                var glyph = this.getToken();\n                encoding[index] = glyph;\n                this.getToken();\n              }\n            }\n            properties.builtInEncoding = encoding;\n            break;\n          case 'FontBBox':\n            var fontBBox = this.readNumberArray();\n            properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n            properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n            properties.ascentScaled = true;\n            break;\n        }\n      }\n    }\n  };\n  return Type1Parser;\n}();\nexports.Type1Parser = Type1Parser;\n\n/***/ }),\n/* 146 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTilingPatternIR = exports.Pattern = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar ShadingType = {\n  FUNCTION_BASED: 1,\n  AXIAL: 2,\n  RADIAL: 3,\n  FREE_FORM_MESH: 4,\n  LATTICE_FORM_MESH: 5,\n  COONS_PATCH_MESH: 6,\n  TENSOR_PATCH_MESH: 7\n};\nvar Pattern = function PatternClosure() {\n  function Pattern() {\n    (0, _util.unreachable)('should not call Pattern constructor');\n  }\n  Pattern.prototype = {\n    getPattern: function Pattern_getPattern(ctx) {\n      (0, _util.unreachable)('Should not call Pattern.getStyle: ' + ctx);\n    }\n  };\n  Pattern.parseShading = function (shading, matrix, xref, res, handler, pdfFunctionFactory) {\n    var dict = (0, _primitives.isStream)(shading) ? shading.dict : shading;\n    var type = dict.get('ShadingType');\n    try {\n      switch (type) {\n        case ShadingType.AXIAL:\n        case ShadingType.RADIAL:\n          return new Shadings.RadialAxial(dict, matrix, xref, res, pdfFunctionFactory);\n        case ShadingType.FREE_FORM_MESH:\n        case ShadingType.LATTICE_FORM_MESH:\n        case ShadingType.COONS_PATCH_MESH:\n        case ShadingType.TENSOR_PATCH_MESH:\n          return new Shadings.Mesh(shading, matrix, xref, res, pdfFunctionFactory);\n        default:\n          throw new _util.FormatError('Unsupported ShadingType: ' + type);\n      }\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n      handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.shadingPattern });\n      (0, _util.warn)(ex);\n      return new Shadings.Dummy();\n    }\n  };\n  return Pattern;\n}();\nvar Shadings = {};\nShadings.SMALL_NUMBER = 1e-6;\nShadings.RadialAxial = function RadialAxialClosure() {\n  function RadialAxial(dict, matrix, xref, res, pdfFunctionFactory) {\n    this.matrix = matrix;\n    this.coordsArr = dict.getArray('Coords');\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    var t0 = 0.0,\n        t1 = 1.0;\n    if (dict.has('Domain')) {\n      var domainArr = dict.getArray('Domain');\n      t0 = domainArr[0];\n      t1 = domainArr[1];\n    }\n    var extendStart = false,\n        extendEnd = false;\n    if (dict.has('Extend')) {\n      var extendArr = dict.getArray('Extend');\n      extendStart = extendArr[0];\n      extendEnd = extendArr[1];\n    }\n    if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n      var x1 = this.coordsArr[0];\n      var y1 = this.coordsArr[1];\n      var r1 = this.coordsArr[2];\n      var x2 = this.coordsArr[3];\n      var y2 = this.coordsArr[4];\n      var r2 = this.coordsArr[5];\n      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n      if (r1 <= r2 + distance && r2 <= r1 + distance) {\n        (0, _util.warn)('Unsupported radial gradient.');\n      }\n    }\n    this.extendStart = extendStart;\n    this.extendEnd = extendEnd;\n    var fnObj = dict.get('Function');\n    var fn = pdfFunctionFactory.createFromArray(fnObj);\n    var diff = t1 - t0;\n    var step = diff / 10;\n    var colorStops = this.colorStops = [];\n    if (t0 >= t1 || step <= 0) {\n      (0, _util.info)('Bad shading domain.');\n      return;\n    }\n    var color = new Float32Array(cs.numComps),\n        ratio = new Float32Array(1);\n    var rgbColor;\n    for (var i = t0; i <= t1; i += step) {\n      ratio[0] = i;\n      fn(ratio, 0, color, 0);\n      rgbColor = cs.getRgb(color, 0);\n      var cssColor = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n      colorStops.push([(i - t0) / diff, cssColor]);\n    }\n    var background = 'transparent';\n    if (dict.has('Background')) {\n      rgbColor = cs.getRgb(dict.get('Background'), 0);\n      background = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n    }\n    if (!extendStart) {\n      colorStops.unshift([0, background]);\n      colorStops[1][0] += Shadings.SMALL_NUMBER;\n    }\n    if (!extendEnd) {\n      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n      colorStops.push([1, background]);\n    }\n    this.colorStops = colorStops;\n  }\n  RadialAxial.prototype = {\n    getIR: function RadialAxial_getIR() {\n      var coordsArr = this.coordsArr;\n      var shadingType = this.shadingType;\n      var type, p0, p1, r0, r1;\n      if (shadingType === ShadingType.AXIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[2], coordsArr[3]];\n        r0 = null;\n        r1 = null;\n        type = 'axial';\n      } else if (shadingType === ShadingType.RADIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[3], coordsArr[4]];\n        r0 = coordsArr[2];\n        r1 = coordsArr[5];\n        type = 'radial';\n      } else {\n        (0, _util.unreachable)('getPattern type unknown: ' + shadingType);\n      }\n      var matrix = this.matrix;\n      if (matrix) {\n        p0 = _util.Util.applyTransform(p0, matrix);\n        p1 = _util.Util.applyTransform(p1, matrix);\n        if (shadingType === ShadingType.RADIAL) {\n          var scale = _util.Util.singularValueDecompose2dScale(matrix);\n          r0 *= scale[0];\n          r1 *= scale[1];\n        }\n      }\n      return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\n    }\n  };\n  return RadialAxial;\n}();\nShadings.Mesh = function MeshClosure() {\n  function MeshStreamReader(stream, context) {\n    this.stream = stream;\n    this.context = context;\n    this.buffer = 0;\n    this.bufferLength = 0;\n    var numComps = context.numComps;\n    this.tmpCompsBuf = new Float32Array(numComps);\n    var csNumComps = context.colorSpace.numComps;\n    this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n  }\n  MeshStreamReader.prototype = {\n    get hasData() {\n      if (this.stream.end) {\n        return this.stream.pos < this.stream.end;\n      }\n      if (this.bufferLength > 0) {\n        return true;\n      }\n      var nextByte = this.stream.getByte();\n      if (nextByte < 0) {\n        return false;\n      }\n      this.buffer = nextByte;\n      this.bufferLength = 8;\n      return true;\n    },\n    readBits: function MeshStreamReader_readBits(n) {\n      var buffer = this.buffer;\n      var bufferLength = this.bufferLength;\n      if (n === 32) {\n        if (bufferLength === 0) {\n          return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n        }\n        buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n        var nextByte = this.stream.getByte();\n        this.buffer = nextByte & (1 << bufferLength) - 1;\n        return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n      }\n      if (n === 8 && bufferLength === 0) {\n        return this.stream.getByte();\n      }\n      while (bufferLength < n) {\n        buffer = buffer << 8 | this.stream.getByte();\n        bufferLength += 8;\n      }\n      bufferLength -= n;\n      this.bufferLength = bufferLength;\n      this.buffer = buffer & (1 << bufferLength) - 1;\n      return buffer >> bufferLength;\n    },\n    align: function MeshStreamReader_align() {\n      this.buffer = 0;\n      this.bufferLength = 0;\n    },\n    readFlag: function MeshStreamReader_readFlag() {\n      return this.readBits(this.context.bitsPerFlag);\n    },\n    readCoordinate: function MeshStreamReader_readCoordinate() {\n      var bitsPerCoordinate = this.context.bitsPerCoordinate;\n      var xi = this.readBits(bitsPerCoordinate);\n      var yi = this.readBits(bitsPerCoordinate);\n      var decode = this.context.decode;\n      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n      return [xi * scale * (decode[1] - decode[0]) + decode[0], yi * scale * (decode[3] - decode[2]) + decode[2]];\n    },\n    readComponents: function MeshStreamReader_readComponents() {\n      var numComps = this.context.numComps;\n      var bitsPerComponent = this.context.bitsPerComponent;\n      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n      var decode = this.context.decode;\n      var components = this.tmpCompsBuf;\n      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n        var ci = this.readBits(bitsPerComponent);\n        components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n      }\n      var color = this.tmpCsCompsBuf;\n      if (this.context.colorFn) {\n        this.context.colorFn(components, 0, color, 0);\n      }\n      return this.context.colorSpace.getRgb(color, 0);\n    }\n  };\n  function decodeType4Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var operators = [];\n    var ps = [];\n    var verticesLeft = 0;\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      if (verticesLeft === 0) {\n        if (!(0 <= f && f <= 2)) {\n          throw new _util.FormatError('Unknown type4 flag');\n        }\n        switch (f) {\n          case 0:\n            verticesLeft = 3;\n            break;\n          case 1:\n            ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n          case 2:\n            ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n        }\n        operators.push(f);\n      }\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n      verticesLeft--;\n      reader.align();\n    }\n    mesh.figures.push({\n      type: 'triangles',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps)\n    });\n  }\n  function decodeType5Shading(mesh, reader, verticesPerRow) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = [];\n    while (reader.hasData) {\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n    }\n    mesh.figures.push({\n      type: 'lattice',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps),\n      verticesPerRow: verticesPerRow\n    });\n  }\n  var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n  var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n  var TRIANGLE_DENSITY = 20;\n  var getB = function getBClosure() {\n    function buildB(count) {\n      var lut = [];\n      for (var i = 0; i <= count; i++) {\n        var t = i / count,\n            t_ = 1 - t;\n        lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_, 3 * t * t * t_, t * t * t]));\n      }\n      return lut;\n    }\n    var cache = [];\n    return function getB(count) {\n      if (!cache[count]) {\n        cache[count] = buildB(count);\n      }\n      return cache[count];\n    };\n  }();\n  function buildFigureFromPatch(mesh, index) {\n    var figure = mesh.figures[index];\n    (0, _util.assert)(figure.type === 'patch', 'Unexpected patch mesh figure');\n    var coords = mesh.coords,\n        colors = mesh.colors;\n    var pi = figure.coords;\n    var ci = figure.colors;\n    var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n    splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n    var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n    splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n    var verticesPerRow = splitXBy + 1;\n    var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var k = 0;\n    var cl = new Uint8Array(3),\n        cr = new Uint8Array(3);\n    var c0 = colors[ci[0]],\n        c1 = colors[ci[1]],\n        c2 = colors[ci[2]],\n        c3 = colors[ci[3]];\n    var bRow = getB(splitYBy),\n        bCol = getB(splitXBy);\n    for (var row = 0; row <= splitYBy; row++) {\n      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n      for (var col = 0; col <= splitXBy; col++, k++) {\n        if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n          continue;\n        }\n        var x = 0,\n            y = 0;\n        var q = 0;\n        for (var i = 0; i <= 3; i++) {\n          for (var j = 0; j <= 3; j++, q++) {\n            var m = bRow[row][i] * bCol[col][j];\n            x += coords[pi[q]][0] * m;\n            y += coords[pi[q]][1] * m;\n          }\n        }\n        figureCoords[k] = coords.length;\n        coords.push([x, y]);\n        figureColors[k] = colors.length;\n        var newColor = new Uint8Array(3);\n        newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n        newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n        newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n        colors.push(newColor);\n      }\n    }\n    figureCoords[0] = pi[0];\n    figureColors[0] = ci[0];\n    figureCoords[splitXBy] = pi[3];\n    figureColors[splitXBy] = ci[1];\n    figureCoords[verticesPerRow * splitYBy] = pi[12];\n    figureColors[verticesPerRow * splitYBy] = ci[2];\n    figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n    figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n    mesh.figures[index] = {\n      type: 'lattice',\n      coords: figureCoords,\n      colors: figureColors,\n      verticesPerRow: verticesPerRow\n    };\n  }\n  function decodeType6Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type6 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      ps[5] = coords.length;\n      coords.push([(-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9, (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9]);\n      ps[6] = coords.length;\n      coords.push([(-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9, (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9]);\n      ps[9] = coords.length;\n      coords.push([(-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9, (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9]);\n      ps[10] = coords.length;\n      coords.push([(-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9, (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9]);\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function decodeType7Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type7 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[9] = pi + 13;\n          ps[10] = pi + 14;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[5] = pi + 12;\n          ps[6] = pi + 15;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function updateBounds(mesh) {\n    var minX = mesh.coords[0][0],\n        minY = mesh.coords[0][1],\n        maxX = minX,\n        maxY = minY;\n    for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n      var x = mesh.coords[i][0],\n          y = mesh.coords[i][1];\n      minX = minX > x ? x : minX;\n      minY = minY > y ? y : minY;\n      maxX = maxX < x ? x : maxX;\n      maxY = maxY < y ? y : maxY;\n    }\n    mesh.bounds = [minX, minY, maxX, maxY];\n  }\n  function packData(mesh) {\n    var i, ii, j, jj;\n    var coords = mesh.coords;\n    var coordsPacked = new Float32Array(coords.length * 2);\n    for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n      var xy = coords[i];\n      coordsPacked[j++] = xy[0];\n      coordsPacked[j++] = xy[1];\n    }\n    mesh.coords = coordsPacked;\n    var colors = mesh.colors;\n    var colorsPacked = new Uint8Array(colors.length * 3);\n    for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n      var c = colors[i];\n      colorsPacked[j++] = c[0];\n      colorsPacked[j++] = c[1];\n      colorsPacked[j++] = c[2];\n    }\n    mesh.colors = colorsPacked;\n    var figures = mesh.figures;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n          ps = figure.coords,\n          cs = figure.colors;\n      for (j = 0, jj = ps.length; j < jj; j++) {\n        ps[j] *= 2;\n        cs[j] *= 3;\n      }\n    }\n  }\n  function Mesh(stream, matrix, xref, res, pdfFunctionFactory) {\n    if (!(0, _primitives.isStream)(stream)) {\n      throw new _util.FormatError('Mesh data is not a stream');\n    }\n    var dict = stream.dict;\n    this.matrix = matrix;\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    this.bbox = dict.getArray('BBox');\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n    var fnObj = dict.get('Function');\n    var fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;\n    this.coords = [];\n    this.colors = [];\n    this.figures = [];\n    var decodeContext = {\n      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n      bitsPerComponent: dict.get('BitsPerComponent'),\n      bitsPerFlag: dict.get('BitsPerFlag'),\n      decode: dict.getArray('Decode'),\n      colorFn: fn,\n      colorSpace: cs,\n      numComps: fn ? 1 : cs.numComps\n    };\n    var reader = new MeshStreamReader(stream, decodeContext);\n    var patchMesh = false;\n    switch (this.shadingType) {\n      case ShadingType.FREE_FORM_MESH:\n        decodeType4Shading(this, reader);\n        break;\n      case ShadingType.LATTICE_FORM_MESH:\n        var verticesPerRow = dict.get('VerticesPerRow') | 0;\n        if (verticesPerRow < 2) {\n          throw new _util.FormatError('Invalid VerticesPerRow');\n        }\n        decodeType5Shading(this, reader, verticesPerRow);\n        break;\n      case ShadingType.COONS_PATCH_MESH:\n        decodeType6Shading(this, reader);\n        patchMesh = true;\n        break;\n      case ShadingType.TENSOR_PATCH_MESH:\n        decodeType7Shading(this, reader);\n        patchMesh = true;\n        break;\n      default:\n        (0, _util.unreachable)('Unsupported mesh type.');\n        break;\n    }\n    if (patchMesh) {\n      updateBounds(this);\n      for (var i = 0, ii = this.figures.length; i < ii; i++) {\n        buildFigureFromPatch(this, i);\n      }\n    }\n    updateBounds(this);\n    packData(this);\n  }\n  Mesh.prototype = {\n    getIR: function Mesh_getIR() {\n      return ['Mesh', this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.matrix, this.bbox, this.background];\n    }\n  };\n  return Mesh;\n}();\nShadings.Dummy = function DummyClosure() {\n  function Dummy() {\n    this.type = 'Pattern';\n  }\n  Dummy.prototype = {\n    getIR: function Dummy_getIR() {\n      return ['Dummy'];\n    }\n  };\n  return Dummy;\n}();\nfunction getTilingPatternIR(operatorList, dict, args) {\n  var matrix = dict.getArray('Matrix');\n  var bbox = _util.Util.normalizeRect(dict.getArray('BBox'));\n  var xstep = dict.get('XStep');\n  var ystep = dict.get('YStep');\n  var paintType = dict.get('PaintType');\n  var tilingType = dict.get('TilingType');\n  if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {\n    throw new _util.FormatError('Invalid getTilingPatternIR /BBox array: [' + bbox + '].');\n  }\n  return ['TilingPattern', args, operatorList, matrix, bbox, xstep, ystep, paintType, tilingType];\n}\nexports.Pattern = Pattern;\nexports.getTilingPatternIR = getTilingPatternIR;\n\n/***/ }),\n/* 147 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bidi = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar baseTypes = ['BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S', 'WS', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'ON', 'ES', 'CS', 'ES', 'CS', 'CS', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'CS', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'CS', 'ON', 'ET', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON', 'ON', 'BN', 'ON', 'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON', 'EN', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'];\nvar arabicTypes = ['AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ON', 'ON', 'AL', 'ET', 'ET', 'AL', 'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', '', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'NSM', 'NSM', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'];\nfunction isOdd(i) {\n  return (i & 1) !== 0;\n}\nfunction isEven(i) {\n  return (i & 1) === 0;\n}\nfunction findUnequal(arr, start, value) {\n  for (var j = start, jj = arr.length; j < jj; ++j) {\n    if (arr[j] !== value) {\n      return j;\n    }\n  }\n  return j;\n}\nfunction setValues(arr, start, end, value) {\n  for (var j = start; j < end; ++j) {\n    arr[j] = value;\n  }\n}\nfunction reverseValues(arr, start, end) {\n  for (var i = start, j = end - 1; i < j; ++i, --j) {\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n}\nfunction createBidiText(str, isLTR, vertical) {\n  return {\n    str: str,\n    dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n  };\n}\nvar chars = [];\nvar types = [];\nfunction bidi(str, startLevel, vertical) {\n  var isLTR = true;\n  var strLength = str.length;\n  if (strLength === 0 || vertical) {\n    return createBidiText(str, isLTR, vertical);\n  }\n  chars.length = strLength;\n  types.length = strLength;\n  var numBidi = 0;\n  var i, ii;\n  for (i = 0; i < strLength; ++i) {\n    chars[i] = str.charAt(i);\n    var charCode = str.charCodeAt(i);\n    var charType = 'L';\n    if (charCode <= 0x00ff) {\n      charType = baseTypes[charCode];\n    } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n      charType = 'R';\n    } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n      charType = arabicTypes[charCode & 0xff];\n      if (!charType) {\n        (0, _util.warn)('Bidi: invalid Unicode character ' + charCode.toString(16));\n      }\n    } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n      charType = 'AL';\n    }\n    if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n      numBidi++;\n    }\n    types[i] = charType;\n  }\n  if (numBidi === 0) {\n    isLTR = true;\n    return createBidiText(str, isLTR);\n  }\n  if (startLevel === -1) {\n    if (numBidi / strLength < 0.3) {\n      isLTR = true;\n      startLevel = 0;\n    } else {\n      isLTR = false;\n      startLevel = 1;\n    }\n  }\n  var levels = [];\n  for (i = 0; i < strLength; ++i) {\n    levels[i] = startLevel;\n  }\n  var e = isOdd(startLevel) ? 'R' : 'L';\n  var sor = e;\n  var eor = sor;\n  var lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'NSM') {\n      types[i] = lastType;\n    } else {\n      lastType = types[i];\n    }\n  }\n  lastType = sor;\n  var t;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'AL' ? 'AN' : 'EN';\n    } else if (t === 'R' || t === 'L' || t === 'AL') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'AL') {\n      types[i] = 'R';\n    }\n  }\n  for (i = 1; i < strLength - 1; ++i) {\n    if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n      types[i] = 'EN';\n    }\n    if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n      types[i] = types[i - 1];\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'EN') {\n      var j;\n      for (j = i - 1; j >= 0; --j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n      for (j = i + 1; j < strLength; ++j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n      types[i] = 'ON';\n    }\n  }\n  lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'L' ? 'L' : 'EN';\n    } else if (t === 'R' || t === 'L') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      var end = findUnequal(types, i + 1, 'ON');\n      var before = sor;\n      if (i > 0) {\n        before = types[i - 1];\n      }\n      var after = eor;\n      if (end + 1 < strLength) {\n        after = types[end + 1];\n      }\n      if (before !== 'L') {\n        before = 'R';\n      }\n      if (after !== 'L') {\n        after = 'R';\n      }\n      if (before === after) {\n        setValues(types, i, end, before);\n      }\n      i = end - 1;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      types[i] = e;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (isEven(levels[i])) {\n      if (t === 'R') {\n        levels[i] += 1;\n      } else if (t === 'AN' || t === 'EN') {\n        levels[i] += 2;\n      }\n    } else {\n      if (t === 'L' || t === 'AN' || t === 'EN') {\n        levels[i] += 1;\n      }\n    }\n  }\n  var highestLevel = -1;\n  var lowestOddLevel = 99;\n  var level;\n  for (i = 0, ii = levels.length; i < ii; ++i) {\n    level = levels[i];\n    if (highestLevel < level) {\n      highestLevel = level;\n    }\n    if (lowestOddLevel > level && isOdd(level)) {\n      lowestOddLevel = level;\n    }\n  }\n  for (level = highestLevel; level >= lowestOddLevel; --level) {\n    var start = -1;\n    for (i = 0, ii = levels.length; i < ii; ++i) {\n      if (levels[i] < level) {\n        if (start >= 0) {\n          reverseValues(chars, start, i);\n          start = -1;\n        }\n      } else if (start < 0) {\n        start = i;\n      }\n    }\n    if (start >= 0) {\n      reverseValues(chars, start, levels.length);\n    }\n  }\n  for (i = 0, ii = chars.length; i < ii; ++i) {\n    var ch = chars[i];\n    if (ch === '<' || ch === '>') {\n      chars[i] = '';\n    }\n  }\n  return createBidiText(chars.join(''), isLTR);\n}\nexports.bidi = bidi;\n\n/***/ }),\n/* 148 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMetrics = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar getMetrics = (0, _util.getLookupTableFactory)(function (t) {\n  t['Courier'] = 600;\n  t['Courier-Bold'] = 600;\n  t['Courier-BoldOblique'] = 600;\n  t['Courier-Oblique'] = 600;\n  t['Helvetica'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-BoldOblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Oblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Symbol'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['universal'] = 713;\n    t['numbersign'] = 500;\n    t['existential'] = 549;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['suchthat'] = 439;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asteriskmath'] = 500;\n    t['plus'] = 549;\n    t['comma'] = 250;\n    t['minus'] = 549;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 549;\n    t['equal'] = 549;\n    t['greater'] = 549;\n    t['question'] = 444;\n    t['congruent'] = 549;\n    t['Alpha'] = 722;\n    t['Beta'] = 667;\n    t['Chi'] = 722;\n    t['Delta'] = 612;\n    t['Epsilon'] = 611;\n    t['Phi'] = 763;\n    t['Gamma'] = 603;\n    t['Eta'] = 722;\n    t['Iota'] = 333;\n    t['theta1'] = 631;\n    t['Kappa'] = 722;\n    t['Lambda'] = 686;\n    t['Mu'] = 889;\n    t['Nu'] = 722;\n    t['Omicron'] = 722;\n    t['Pi'] = 768;\n    t['Theta'] = 741;\n    t['Rho'] = 556;\n    t['Sigma'] = 592;\n    t['Tau'] = 611;\n    t['Upsilon'] = 690;\n    t['sigma1'] = 439;\n    t['Omega'] = 768;\n    t['Xi'] = 645;\n    t['Psi'] = 795;\n    t['Zeta'] = 611;\n    t['bracketleft'] = 333;\n    t['therefore'] = 863;\n    t['bracketright'] = 333;\n    t['perpendicular'] = 658;\n    t['underscore'] = 500;\n    t['radicalex'] = 500;\n    t['alpha'] = 631;\n    t['beta'] = 549;\n    t['chi'] = 549;\n    t['delta'] = 494;\n    t['epsilon'] = 439;\n    t['phi'] = 521;\n    t['gamma'] = 411;\n    t['eta'] = 603;\n    t['iota'] = 329;\n    t['phi1'] = 603;\n    t['kappa'] = 549;\n    t['lambda'] = 549;\n    t['mu'] = 576;\n    t['nu'] = 521;\n    t['omicron'] = 549;\n    t['pi'] = 549;\n    t['theta'] = 521;\n    t['rho'] = 549;\n    t['sigma'] = 603;\n    t['tau'] = 439;\n    t['upsilon'] = 576;\n    t['omega1'] = 713;\n    t['omega'] = 686;\n    t['xi'] = 493;\n    t['psi'] = 686;\n    t['zeta'] = 494;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['similar'] = 549;\n    t['Euro'] = 750;\n    t['Upsilon1'] = 620;\n    t['minute'] = 247;\n    t['lessequal'] = 549;\n    t['fraction'] = 167;\n    t['infinity'] = 713;\n    t['florin'] = 500;\n    t['club'] = 753;\n    t['diamond'] = 753;\n    t['heart'] = 753;\n    t['spade'] = 753;\n    t['arrowboth'] = 1042;\n    t['arrowleft'] = 987;\n    t['arrowup'] = 603;\n    t['arrowright'] = 987;\n    t['arrowdown'] = 603;\n    t['degree'] = 400;\n    t['plusminus'] = 549;\n    t['second'] = 411;\n    t['greaterequal'] = 549;\n    t['multiply'] = 549;\n    t['proportional'] = 713;\n    t['partialdiff'] = 494;\n    t['bullet'] = 460;\n    t['divide'] = 549;\n    t['notequal'] = 549;\n    t['equivalence'] = 549;\n    t['approxequal'] = 549;\n    t['ellipsis'] = 1000;\n    t['arrowvertex'] = 603;\n    t['arrowhorizex'] = 1000;\n    t['carriagereturn'] = 658;\n    t['aleph'] = 823;\n    t['Ifraktur'] = 686;\n    t['Rfraktur'] = 795;\n    t['weierstrass'] = 987;\n    t['circlemultiply'] = 768;\n    t['circleplus'] = 768;\n    t['emptyset'] = 823;\n    t['intersection'] = 768;\n    t['union'] = 768;\n    t['propersuperset'] = 713;\n    t['reflexsuperset'] = 713;\n    t['notsubset'] = 713;\n    t['propersubset'] = 713;\n    t['reflexsubset'] = 713;\n    t['element'] = 713;\n    t['notelement'] = 713;\n    t['angle'] = 768;\n    t['gradient'] = 713;\n    t['registerserif'] = 790;\n    t['copyrightserif'] = 790;\n    t['trademarkserif'] = 890;\n    t['product'] = 823;\n    t['radical'] = 549;\n    t['dotmath'] = 250;\n    t['logicalnot'] = 713;\n    t['logicaland'] = 603;\n    t['logicalor'] = 603;\n    t['arrowdblboth'] = 1042;\n    t['arrowdblleft'] = 987;\n    t['arrowdblup'] = 603;\n    t['arrowdblright'] = 987;\n    t['arrowdbldown'] = 603;\n    t['lozenge'] = 494;\n    t['angleleft'] = 329;\n    t['registersans'] = 790;\n    t['copyrightsans'] = 790;\n    t['trademarksans'] = 786;\n    t['summation'] = 713;\n    t['parenlefttp'] = 384;\n    t['parenleftex'] = 384;\n    t['parenleftbt'] = 384;\n    t['bracketlefttp'] = 384;\n    t['bracketleftex'] = 384;\n    t['bracketleftbt'] = 384;\n    t['bracelefttp'] = 494;\n    t['braceleftmid'] = 494;\n    t['braceleftbt'] = 494;\n    t['braceex'] = 494;\n    t['angleright'] = 329;\n    t['integral'] = 274;\n    t['integraltp'] = 686;\n    t['integralex'] = 686;\n    t['integralbt'] = 686;\n    t['parenrighttp'] = 384;\n    t['parenrightex'] = 384;\n    t['parenrightbt'] = 384;\n    t['bracketrighttp'] = 384;\n    t['bracketrightex'] = 384;\n    t['bracketrightbt'] = 384;\n    t['bracerighttp'] = 494;\n    t['bracerightmid'] = 494;\n    t['bracerightbt'] = 494;\n    t['apple'] = 790;\n  });\n  t['Times-Roman'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 408;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 564;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 564;\n    t['equal'] = 564;\n    t['greater'] = 564;\n    t['question'] = 444;\n    t['at'] = 921;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 556;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 389;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 556;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 944;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 469;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 444;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 333;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 180;\n    t['quotedblleft'] = 444;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 453;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 444;\n    t['quotedblright'] = 444;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 444;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 889;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 444;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 564;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 444;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 444;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 444;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 444;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 444;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 444;\n    t['Amacron'] = 722;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 556;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 588;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 564;\n    t['uacute'] = 500;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 444;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 333;\n    t['plusminus'] = 564;\n    t['brokenbar'] = 200;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 333;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 326;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 444;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 344;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 564;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 564;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 1000;\n    t['ampersand'] = 833;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 930;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 778;\n    t['L'] = 667;\n    t['M'] = 944;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 611;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 556;\n    t['T'] = 667;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 1000;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 667;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 581;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 556;\n    t['c'] = 444;\n    t['d'] = 556;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 333;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 444;\n    t['s'] = 389;\n    t['t'] = 333;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 394;\n    t['bar'] = 220;\n    t['braceright'] = 394;\n    t['asciitilde'] = 520;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 540;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 300;\n    t['Lslash'] = 667;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 330;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 556;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 570;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 667;\n    t['Cacute'] = 722;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 722;\n    t['rcaron'] = 444;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 667;\n    t['Thorn'] = 611;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 556;\n    t['dcaron'] = 672;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 667;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 444;\n    t['omacron'] = 500;\n    t['Zacute'] = 667;\n    t['Zcaron'] = 667;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 416;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 394;\n    t['Kcommaaccent'] = 778;\n    t['Lacute'] = 667;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 667;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 444;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 667;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 570;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 570;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-BoldItalic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 389;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 832;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 667;\n    t['G'] = 722;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 889;\n    t['X'] = 667;\n    t['Y'] = 611;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 570;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 500;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 348;\n    t['bar'] = 220;\n    t['braceright'] = 348;\n    t['asciitilde'] = 570;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 500;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 944;\n    t['ordfeminine'] = 266;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 300;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 611;\n    t['divide'] = 570;\n    t['Yacute'] = 611;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 667;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 608;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 366;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 576;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 382;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 606;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 606;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Italic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 420;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 675;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 675;\n    t['equal'] = 675;\n    t['greater'] = 675;\n    t['question'] = 500;\n    t['at'] = 920;\n    t['A'] = 611;\n    t['B'] = 611;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 611;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 444;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 667;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 611;\n    t['S'] = 500;\n    t['T'] = 556;\n    t['U'] = 722;\n    t['V'] = 611;\n    t['W'] = 833;\n    t['X'] = 611;\n    t['Y'] = 556;\n    t['Z'] = 556;\n    t['bracketleft'] = 389;\n    t['backslash'] = 278;\n    t['bracketright'] = 389;\n    t['asciicircum'] = 422;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 278;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 444;\n    t['l'] = 278;\n    t['m'] = 722;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 444;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 400;\n    t['bar'] = 275;\n    t['braceright'] = 400;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 214;\n    t['quotedblleft'] = 556;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 523;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 556;\n    t['quotedblright'] = 556;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 889;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 889;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 556;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 667;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 556;\n    t['divide'] = 675;\n    t['Yacute'] = 556;\n    t['Acircumflex'] = 611;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 667;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 556;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 611;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 611;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 556;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 611;\n    t['Sacute'] = 500;\n    t['dcaron'] = 544;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 611;\n    t['Abreve'] = 611;\n    t['multiply'] = 675;\n    t['uacute'] = 500;\n    t['Tcaron'] = 556;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 667;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 667;\n    t['Iacute'] = 333;\n    t['plusminus'] = 675;\n    t['brokenbar'] = 275;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 556;\n    t['Zcaron'] = 556;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 300;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 611;\n    t['Adieresis'] = 611;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 500;\n    t['lcaron'] = 300;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 500;\n    t['Scommaaccent'] = 500;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 667;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 611;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 611;\n    t['Aogonek'] = 611;\n    t['Aring'] = 611;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 444;\n    t['minus'] = 675;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 675;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['ZapfDingbats'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['a1'] = 974;\n    t['a2'] = 961;\n    t['a202'] = 974;\n    t['a3'] = 980;\n    t['a4'] = 719;\n    t['a5'] = 789;\n    t['a119'] = 790;\n    t['a118'] = 791;\n    t['a117'] = 690;\n    t['a11'] = 960;\n    t['a12'] = 939;\n    t['a13'] = 549;\n    t['a14'] = 855;\n    t['a15'] = 911;\n    t['a16'] = 933;\n    t['a105'] = 911;\n    t['a17'] = 945;\n    t['a18'] = 974;\n    t['a19'] = 755;\n    t['a20'] = 846;\n    t['a21'] = 762;\n    t['a22'] = 761;\n    t['a23'] = 571;\n    t['a24'] = 677;\n    t['a25'] = 763;\n    t['a26'] = 760;\n    t['a27'] = 759;\n    t['a28'] = 754;\n    t['a6'] = 494;\n    t['a7'] = 552;\n    t['a8'] = 537;\n    t['a9'] = 577;\n    t['a10'] = 692;\n    t['a29'] = 786;\n    t['a30'] = 788;\n    t['a31'] = 788;\n    t['a32'] = 790;\n    t['a33'] = 793;\n    t['a34'] = 794;\n    t['a35'] = 816;\n    t['a36'] = 823;\n    t['a37'] = 789;\n    t['a38'] = 841;\n    t['a39'] = 823;\n    t['a40'] = 833;\n    t['a41'] = 816;\n    t['a42'] = 831;\n    t['a43'] = 923;\n    t['a44'] = 744;\n    t['a45'] = 723;\n    t['a46'] = 749;\n    t['a47'] = 790;\n    t['a48'] = 792;\n    t['a49'] = 695;\n    t['a50'] = 776;\n    t['a51'] = 768;\n    t['a52'] = 792;\n    t['a53'] = 759;\n    t['a54'] = 707;\n    t['a55'] = 708;\n    t['a56'] = 682;\n    t['a57'] = 701;\n    t['a58'] = 826;\n    t['a59'] = 815;\n    t['a60'] = 789;\n    t['a61'] = 789;\n    t['a62'] = 707;\n    t['a63'] = 687;\n    t['a64'] = 696;\n    t['a65'] = 689;\n    t['a66'] = 786;\n    t['a67'] = 787;\n    t['a68'] = 713;\n    t['a69'] = 791;\n    t['a70'] = 785;\n    t['a71'] = 791;\n    t['a72'] = 873;\n    t['a73'] = 761;\n    t['a74'] = 762;\n    t['a203'] = 762;\n    t['a75'] = 759;\n    t['a204'] = 759;\n    t['a76'] = 892;\n    t['a77'] = 892;\n    t['a78'] = 788;\n    t['a79'] = 784;\n    t['a81'] = 438;\n    t['a82'] = 138;\n    t['a83'] = 277;\n    t['a84'] = 415;\n    t['a97'] = 392;\n    t['a98'] = 392;\n    t['a99'] = 668;\n    t['a100'] = 668;\n    t['a89'] = 390;\n    t['a90'] = 390;\n    t['a93'] = 317;\n    t['a94'] = 317;\n    t['a91'] = 276;\n    t['a92'] = 276;\n    t['a205'] = 509;\n    t['a85'] = 509;\n    t['a206'] = 410;\n    t['a86'] = 410;\n    t['a87'] = 234;\n    t['a88'] = 234;\n    t['a95'] = 334;\n    t['a96'] = 334;\n    t['a101'] = 732;\n    t['a102'] = 544;\n    t['a103'] = 544;\n    t['a104'] = 910;\n    t['a106'] = 667;\n    t['a107'] = 760;\n    t['a108'] = 760;\n    t['a112'] = 776;\n    t['a111'] = 595;\n    t['a110'] = 694;\n    t['a109'] = 626;\n    t['a120'] = 788;\n    t['a121'] = 788;\n    t['a122'] = 788;\n    t['a123'] = 788;\n    t['a124'] = 788;\n    t['a125'] = 788;\n    t['a126'] = 788;\n    t['a127'] = 788;\n    t['a128'] = 788;\n    t['a129'] = 788;\n    t['a130'] = 788;\n    t['a131'] = 788;\n    t['a132'] = 788;\n    t['a133'] = 788;\n    t['a134'] = 788;\n    t['a135'] = 788;\n    t['a136'] = 788;\n    t['a137'] = 788;\n    t['a138'] = 788;\n    t['a139'] = 788;\n    t['a140'] = 788;\n    t['a141'] = 788;\n    t['a142'] = 788;\n    t['a143'] = 788;\n    t['a144'] = 788;\n    t['a145'] = 788;\n    t['a146'] = 788;\n    t['a147'] = 788;\n    t['a148'] = 788;\n    t['a149'] = 788;\n    t['a150'] = 788;\n    t['a151'] = 788;\n    t['a152'] = 788;\n    t['a153'] = 788;\n    t['a154'] = 788;\n    t['a155'] = 788;\n    t['a156'] = 788;\n    t['a157'] = 788;\n    t['a158'] = 788;\n    t['a159'] = 788;\n    t['a160'] = 894;\n    t['a161'] = 838;\n    t['a163'] = 1016;\n    t['a164'] = 458;\n    t['a196'] = 748;\n    t['a165'] = 924;\n    t['a192'] = 748;\n    t['a166'] = 918;\n    t['a167'] = 927;\n    t['a168'] = 928;\n    t['a169'] = 928;\n    t['a170'] = 834;\n    t['a171'] = 873;\n    t['a172'] = 828;\n    t['a173'] = 924;\n    t['a162'] = 924;\n    t['a174'] = 917;\n    t['a175'] = 930;\n    t['a176'] = 931;\n    t['a177'] = 463;\n    t['a178'] = 883;\n    t['a179'] = 836;\n    t['a193'] = 836;\n    t['a180'] = 867;\n    t['a199'] = 867;\n    t['a181'] = 696;\n    t['a200'] = 696;\n    t['a182'] = 874;\n    t['a201'] = 874;\n    t['a183'] = 760;\n    t['a184'] = 946;\n    t['a197'] = 771;\n    t['a185'] = 865;\n    t['a194'] = 771;\n    t['a198'] = 888;\n    t['a186'] = 967;\n    t['a195'] = 888;\n    t['a187'] = 831;\n    t['a188'] = 873;\n    t['a189'] = 927;\n    t['a190'] = 970;\n    t['a191'] = 918;\n  });\n});\nexports.getMetrics = getMetrics;\n\n/***/ }),\n/* 149 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptParser = exports.PostScriptLexer = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar PostScriptParser = function PostScriptParserClosure() {\n  function PostScriptParser(lexer) {\n    this.lexer = lexer;\n    this.operators = [];\n    this.token = null;\n    this.prev = null;\n  }\n  PostScriptParser.prototype = {\n    nextToken: function PostScriptParser_nextToken() {\n      this.prev = this.token;\n      this.token = this.lexer.getToken();\n    },\n    accept: function PostScriptParser_accept(type) {\n      if (this.token.type === type) {\n        this.nextToken();\n        return true;\n      }\n      return false;\n    },\n    expect: function PostScriptParser_expect(type) {\n      if (this.accept(type)) {\n        return true;\n      }\n      throw new _util.FormatError('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n    },\n    parse: function PostScriptParser_parse() {\n      this.nextToken();\n      this.expect(PostScriptTokenTypes.LBRACE);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      return this.operators;\n    },\n    parseBlock: function PostScriptParser_parseBlock() {\n      while (true) {\n        if (this.accept(PostScriptTokenTypes.NUMBER)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n          this.parseCondition();\n        } else {\n          return;\n        }\n      }\n    },\n    parseCondition: function PostScriptParser_parseCondition() {\n      var conditionLocation = this.operators.length;\n      this.operators.push(null, null);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      if (this.accept(PostScriptTokenTypes.IF)) {\n        this.operators[conditionLocation] = this.operators.length;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n        var jumpLocation = this.operators.length;\n        this.operators.push(null, null);\n        var endOfTrue = this.operators.length;\n        this.parseBlock();\n        this.expect(PostScriptTokenTypes.RBRACE);\n        this.expect(PostScriptTokenTypes.IFELSE);\n        this.operators[jumpLocation] = this.operators.length;\n        this.operators[jumpLocation + 1] = 'j';\n        this.operators[conditionLocation] = endOfTrue;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else {\n        throw new _util.FormatError('PS Function: error parsing conditional.');\n      }\n    }\n  };\n  return PostScriptParser;\n}();\nvar PostScriptTokenTypes = {\n  LBRACE: 0,\n  RBRACE: 1,\n  NUMBER: 2,\n  OPERATOR: 3,\n  IF: 4,\n  IFELSE: 5\n};\nvar PostScriptToken = function PostScriptTokenClosure() {\n  function PostScriptToken(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n  var opCache = Object.create(null);\n  PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n    var opValue = opCache[op];\n    if (opValue) {\n      return opValue;\n    }\n    return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n  };\n  PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n  PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n  PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n  PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n  return PostScriptToken;\n}();\nvar PostScriptLexer = function PostScriptLexerClosure() {\n  function PostScriptLexer(stream) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n  }\n  PostScriptLexer.prototype = {\n    nextChar: function PostScriptLexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function PostScriptLexer_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n        case 0x7B:\n          this.nextChar();\n          return PostScriptToken.LBRACE;\n        case 0x7D:\n          this.nextChar();\n          return PostScriptToken.RBRACE;\n      }\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n        strBuf.push(String.fromCharCode(ch));\n      }\n      var str = strBuf.join('');\n      switch (str.toLowerCase()) {\n        case 'if':\n          return PostScriptToken.IF;\n        case 'ifelse':\n          return PostScriptToken.IFELSE;\n        default:\n          return PostScriptToken.getOperator(str);\n      }\n    },\n    getNumber: function PostScriptLexer_getNumber() {\n      var ch = this.currentChar;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0) {\n        if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n          strBuf.push(String.fromCharCode(ch));\n        } else {\n          break;\n        }\n      }\n      var value = parseFloat(strBuf.join(''));\n      if (isNaN(value)) {\n        throw new _util.FormatError('Invalid floating point number: ' + value);\n      }\n      return value;\n    }\n  };\n  return PostScriptLexer;\n}();\nexports.PostScriptLexer = PostScriptLexer;\nexports.PostScriptParser = PostScriptParser;\n\n/***/ }),\n/* 150 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MurmurHash3_64 = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n  var MASK_HIGH = 0xffff0000;\n  var MASK_LOW = 0xffff;\n  function MurmurHash3_64(seed) {\n    var SEED = 0xc3d2e1f0;\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n  MurmurHash3_64.prototype = {\n    update: function MurmurHash3_64_update(input) {\n      var data = void 0,\n          length = void 0;\n      if ((0, _util.isString)(input)) {\n        data = new Uint8Array(input.length * 2);\n        length = 0;\n        for (var i = 0, ii = input.length; i < ii; i++) {\n          var code = input.charCodeAt(i);\n          if (code <= 0xff) {\n            data[length++] = code;\n          } else {\n            data[length++] = code >>> 8;\n            data[length++] = code & 0xff;\n          }\n        }\n      } else if ((0, _util.isArrayBuffer)(input)) {\n        data = input;\n        length = data.byteLength;\n      } else {\n        throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n      }\n      var blockCounts = length >> 2;\n      var tailLength = length - blockCounts * 4;\n      var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n      var k1 = 0;\n      var k2 = 0;\n      var h1 = this.h1;\n      var h2 = this.h2;\n      var C1 = 0xcc9e2d51;\n      var C2 = 0x1b873593;\n      var C1_LOW = C1 & MASK_LOW;\n      var C2_LOW = C2 & MASK_LOW;\n      for (var _i = 0; _i < blockCounts; _i++) {\n        if (_i & 1) {\n          k1 = dataUint32[_i];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          h1 ^= k1;\n          h1 = h1 << 13 | h1 >>> 19;\n          h1 = h1 * 5 + 0xe6546b64;\n        } else {\n          k2 = dataUint32[_i];\n          k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n          k2 = k2 << 15 | k2 >>> 17;\n          k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n          h2 ^= k2;\n          h2 = h2 << 13 | h2 >>> 19;\n          h2 = h2 * 5 + 0xe6546b64;\n        }\n      }\n      k1 = 0;\n      switch (tailLength) {\n        case 3:\n          k1 ^= data[blockCounts * 4 + 2] << 16;\n        case 2:\n          k1 ^= data[blockCounts * 4 + 1] << 8;\n        case 1:\n          k1 ^= data[blockCounts * 4];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          if (blockCounts & 1) {\n            h1 ^= k1;\n          } else {\n            h2 ^= k1;\n          }\n      }\n      this.h1 = h1;\n      this.h2 = h2;\n      return this;\n    },\n    hexdigest: function MurmurHash3_64_hexdigest() {\n      var h1 = this.h1;\n      var h2 = this.h2;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      for (var i = 0, arr = [h1, h2], str = ''; i < arr.length; i++) {\n        var hex = (arr[i] >>> 0).toString(16);\n        while (hex.length < 8) {\n          hex = '0' + hex;\n        }\n        str += hex;\n      }\n      return str;\n    }\n  };\n  return MurmurHash3_64;\n}();\nexports.MurmurHash3_64 = MurmurHash3_64;\n\n/***/ }),\n/* 151 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFImage = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _jpeg_stream = __w_pdfjs_require__(41);\n\nvar _jpx = __w_pdfjs_require__(67);\n\nvar PDFImage = function PDFImageClosure() {\n  function handleImageData(image, nativeDecoder) {\n    if (nativeDecoder && nativeDecoder.canDecode(image)) {\n      return nativeDecoder.decode(image).catch(function (reason) {\n        (0, _util.warn)('Native image decoding failed -- trying to recover: ' + (reason && reason.message));\n        return image;\n      });\n    }\n    return Promise.resolve(image);\n  }\n  function decodeAndClamp(value, addend, coefficient, max) {\n    value = addend + value * coefficient;\n    return value < 0 ? 0 : value > max ? max : value;\n  }\n  function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n    var length = w2 * h2;\n    var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio);\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex];\n      }\n    }\n    return dest;\n  }\n  function PDFImage(_ref) {\n    var xref = _ref.xref,\n        res = _ref.res,\n        image = _ref.image,\n        _ref$isInline = _ref.isInline,\n        isInline = _ref$isInline === undefined ? false : _ref$isInline,\n        _ref$smask = _ref.smask,\n        smask = _ref$smask === undefined ? null : _ref$smask,\n        _ref$mask = _ref.mask,\n        mask = _ref$mask === undefined ? null : _ref$mask,\n        _ref$isMask = _ref.isMask,\n        isMask = _ref$isMask === undefined ? false : _ref$isMask,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.image = image;\n    var dict = image.dict;\n    if (dict.has('Filter')) {\n      var filter = dict.get('Filter').name;\n      if (filter === 'JPXDecode') {\n        var jpxImage = new _jpx.JpxImage();\n        jpxImage.parseImageProperties(image.stream);\n        image.stream.reset();\n        image.bitsPerComponent = jpxImage.bitsPerComponent;\n        image.numComps = jpxImage.componentsCount;\n      } else if (filter === 'JBIG2Decode') {\n        image.bitsPerComponent = 1;\n        image.numComps = 1;\n      }\n    }\n    this.width = dict.get('Width', 'W');\n    this.height = dict.get('Height', 'H');\n    if (this.width < 1 || this.height < 1) {\n      throw new _util.FormatError('Invalid image width: ' + this.width + ' or ' + ('height: ' + this.height));\n    }\n    this.interpolate = dict.get('Interpolate', 'I') || false;\n    this.imageMask = dict.get('ImageMask', 'IM') || false;\n    this.matte = dict.get('Matte') || false;\n    var bitsPerComponent = image.bitsPerComponent;\n    if (!bitsPerComponent) {\n      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n      if (!bitsPerComponent) {\n        if (this.imageMask) {\n          bitsPerComponent = 1;\n        } else {\n          throw new _util.FormatError('Bits per component missing in image: ' + this.imageMask);\n        }\n      }\n    }\n    this.bpc = bitsPerComponent;\n    if (!this.imageMask) {\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      if (!colorSpace) {\n        (0, _util.info)('JPX images (which do not require color spaces)');\n        switch (image.numComps) {\n          case 1:\n            colorSpace = _primitives.Name.get('DeviceGray');\n            break;\n          case 3:\n            colorSpace = _primitives.Name.get('DeviceRGB');\n            break;\n          case 4:\n            colorSpace = _primitives.Name.get('DeviceCMYK');\n            break;\n          default:\n            throw new Error('JPX images with ' + this.numComps + ' ' + 'color components not supported.');\n        }\n      }\n      var resources = isInline ? res : null;\n      this.colorSpace = _colorspace.ColorSpace.parse(colorSpace, xref, resources, pdfFunctionFactory);\n      this.numComps = this.colorSpace.numComps;\n    }\n    this.decode = dict.getArray('Decode', 'D');\n    this.needsDecode = false;\n    if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1))) {\n      this.needsDecode = true;\n      var max = (1 << bitsPerComponent) - 1;\n      this.decodeCoefficients = [];\n      this.decodeAddends = [];\n      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n        var dmin = this.decode[i];\n        var dmax = this.decode[i + 1];\n        this.decodeCoefficients[j] = dmax - dmin;\n        this.decodeAddends[j] = max * dmin;\n      }\n    }\n    if (smask) {\n      this.smask = new PDFImage({\n        xref: xref,\n        res: res,\n        image: smask,\n        isInline: isInline,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    } else if (mask) {\n      if ((0, _primitives.isStream)(mask)) {\n        var maskDict = mask.dict,\n            imageMask = maskDict.get('ImageMask', 'IM');\n        if (!imageMask) {\n          (0, _util.warn)('Ignoring /Mask in image without /ImageMask.');\n        } else {\n          this.mask = new PDFImage({\n            xref: xref,\n            res: res,\n            image: mask,\n            isInline: isInline,\n            isMask: true,\n            pdfFunctionFactory: pdfFunctionFactory\n          });\n        }\n      } else {\n        this.mask = mask;\n      }\n    }\n  }\n  PDFImage.buildImage = function (_ref2) {\n    var handler = _ref2.handler,\n        xref = _ref2.xref,\n        res = _ref2.res,\n        image = _ref2.image,\n        _ref2$isInline = _ref2.isInline,\n        isInline = _ref2$isInline === undefined ? false : _ref2$isInline,\n        _ref2$nativeDecoder = _ref2.nativeDecoder,\n        nativeDecoder = _ref2$nativeDecoder === undefined ? null : _ref2$nativeDecoder,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    var imagePromise = handleImageData(image, nativeDecoder);\n    var smaskPromise;\n    var maskPromise;\n    var smask = image.dict.get('SMask');\n    var mask = image.dict.get('Mask');\n    if (smask) {\n      smaskPromise = handleImageData(smask, nativeDecoder);\n      maskPromise = Promise.resolve(null);\n    } else {\n      smaskPromise = Promise.resolve(null);\n      if (mask) {\n        if ((0, _primitives.isStream)(mask)) {\n          maskPromise = handleImageData(mask, nativeDecoder);\n        } else if (Array.isArray(mask)) {\n          maskPromise = Promise.resolve(mask);\n        } else {\n          (0, _util.warn)('Unsupported mask format.');\n          maskPromise = Promise.resolve(null);\n        }\n      } else {\n        maskPromise = Promise.resolve(null);\n      }\n    }\n    return Promise.all([imagePromise, smaskPromise, maskPromise]).then(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 3),\n          imageData = _ref4[0],\n          smaskData = _ref4[1],\n          maskData = _ref4[2];\n\n      return new PDFImage({\n        xref: xref,\n        res: res,\n        image: imageData,\n        isInline: isInline,\n        smask: smaskData,\n        mask: maskData,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    });\n  };\n  PDFImage.createMask = function (_ref5) {\n    var imgArray = _ref5.imgArray,\n        width = _ref5.width,\n        height = _ref5.height,\n        imageIsFromDecodeStream = _ref5.imageIsFromDecodeStream,\n        inverseDecode = _ref5.inverseDecode;\n\n    var computedLength = (width + 7 >> 3) * height;\n    var actualLength = imgArray.byteLength;\n    var haveFullData = computedLength === actualLength;\n    var data, i;\n    if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n      data = imgArray;\n    } else if (!inverseDecode) {\n      data = new Uint8Array(actualLength);\n      data.set(imgArray);\n    } else {\n      data = new Uint8Array(computedLength);\n      data.set(imgArray);\n      for (i = actualLength; i < computedLength; i++) {\n        data[i] = 0xff;\n      }\n    }\n    if (inverseDecode) {\n      for (i = 0; i < actualLength; i++) {\n        data[i] ^= 0xFF;\n      }\n    }\n    return {\n      data: data,\n      width: width,\n      height: height\n    };\n  };\n  PDFImage.prototype = {\n    get drawWidth() {\n      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n    },\n    get drawHeight() {\n      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n    },\n    decodeBuffer: function decodeBuffer(buffer) {\n      var bpc = this.bpc;\n      var numComps = this.numComps;\n      var decodeAddends = this.decodeAddends;\n      var decodeCoefficients = this.decodeCoefficients;\n      var max = (1 << bpc) - 1;\n      var i, ii;\n      if (bpc === 1) {\n        for (i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = +!buffer[i];\n        }\n        return;\n      }\n      var index = 0;\n      for (i = 0, ii = this.width * this.height; i < ii; i++) {\n        for (var j = 0; j < numComps; j++) {\n          buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n          index++;\n        }\n      }\n    },\n    getComponents: function getComponents(buffer) {\n      var bpc = this.bpc;\n      if (bpc === 8) {\n        return buffer;\n      }\n      var width = this.width;\n      var height = this.height;\n      var numComps = this.numComps;\n      var length = width * height * numComps;\n      var bufferPos = 0;\n      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n      var rowComps = width * numComps;\n      var max = (1 << bpc) - 1;\n      var i = 0,\n          ii,\n          buf;\n      if (bpc === 1) {\n        var mask, loop1End, loop2End;\n        for (var j = 0; j < height; j++) {\n          loop1End = i + (rowComps & ~7);\n          loop2End = i + rowComps;\n          while (i < loop1End) {\n            buf = buffer[bufferPos++];\n            output[i] = buf >> 7 & 1;\n            output[i + 1] = buf >> 6 & 1;\n            output[i + 2] = buf >> 5 & 1;\n            output[i + 3] = buf >> 4 & 1;\n            output[i + 4] = buf >> 3 & 1;\n            output[i + 5] = buf >> 2 & 1;\n            output[i + 6] = buf >> 1 & 1;\n            output[i + 7] = buf & 1;\n            i += 8;\n          }\n          if (i < loop2End) {\n            buf = buffer[bufferPos++];\n            mask = 128;\n            while (i < loop2End) {\n              output[i++] = +!!(buf & mask);\n              mask >>= 1;\n            }\n          }\n        }\n      } else {\n        var bits = 0;\n        buf = 0;\n        for (i = 0, ii = length; i < ii; ++i) {\n          if (i % rowComps === 0) {\n            buf = 0;\n            bits = 0;\n          }\n          while (bits < bpc) {\n            buf = buf << 8 | buffer[bufferPos++];\n            bits += 8;\n          }\n          var remainingBits = bits - bpc;\n          var value = buf >> remainingBits;\n          output[i] = value < 0 ? 0 : value > max ? max : value;\n          buf = buf & (1 << remainingBits) - 1;\n          bits = remainingBits;\n        }\n      }\n      return output;\n    },\n    fillOpacity: function fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n      var smask = this.smask;\n      var mask = this.mask;\n      var alphaBuf, sw, sh, i, ii, j;\n      if (smask) {\n        sw = smask.width;\n        sh = smask.height;\n        alphaBuf = new Uint8Array(sw * sh);\n        smask.fillGrayBuffer(alphaBuf);\n        if (sw !== width || sh !== height) {\n          alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n        }\n      } else if (mask) {\n        if (mask instanceof PDFImage) {\n          sw = mask.width;\n          sh = mask.height;\n          alphaBuf = new Uint8Array(sw * sh);\n          mask.numComps = 1;\n          mask.fillGrayBuffer(alphaBuf);\n          for (i = 0, ii = sw * sh; i < ii; ++i) {\n            alphaBuf[i] = 255 - alphaBuf[i];\n          }\n          if (sw !== width || sh !== height) {\n            alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n          }\n        } else if (Array.isArray(mask)) {\n          alphaBuf = new Uint8Array(width * height);\n          var numComps = this.numComps;\n          for (i = 0, ii = width * height; i < ii; ++i) {\n            var opacity = 0;\n            var imageOffset = i * numComps;\n            for (j = 0; j < numComps; ++j) {\n              var color = image[imageOffset + j];\n              var maskOffset = j * 2;\n              if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n                opacity = 255;\n                break;\n              }\n            }\n            alphaBuf[i] = opacity;\n          }\n        } else {\n          throw new _util.FormatError('Unknown mask format.');\n        }\n      }\n      if (alphaBuf) {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = alphaBuf[i];\n        }\n      } else {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = 255;\n        }\n      }\n    },\n    undoPreblend: function undoPreblend(buffer, width, height) {\n      var matte = this.smask && this.smask.matte;\n      if (!matte) {\n        return;\n      }\n      var matteRgb = this.colorSpace.getRgb(matte, 0);\n      var matteR = matteRgb[0];\n      var matteG = matteRgb[1];\n      var matteB = matteRgb[2];\n      var length = width * height * 4;\n      var r, g, b;\n      for (var i = 0; i < length; i += 4) {\n        var alpha = buffer[i + 3];\n        if (alpha === 0) {\n          buffer[i] = 255;\n          buffer[i + 1] = 255;\n          buffer[i + 2] = 255;\n          continue;\n        }\n        var k = 255 / alpha;\n        r = (buffer[i] - matteR) * k + matteR;\n        g = (buffer[i + 1] - matteG) * k + matteG;\n        b = (buffer[i + 2] - matteB) * k + matteB;\n        buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n        buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n        buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n      }\n    },\n    createImageData: function createImageData() {\n      var forceRGBA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var drawWidth = this.drawWidth;\n      var drawHeight = this.drawHeight;\n      var imgData = {\n        width: drawWidth,\n        height: drawHeight\n      };\n      var numComps = this.numComps;\n      var originalWidth = this.width;\n      var originalHeight = this.height;\n      var bpc = this.bpc;\n      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n      var imgArray;\n      if (!forceRGBA) {\n        var kind;\n        if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n          kind = _util.ImageKind.GRAYSCALE_1BPP;\n        } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n          kind = _util.ImageKind.RGB_24BPP;\n        }\n        if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n          imgData.kind = kind;\n          imgArray = this.getImageBytes(originalHeight * rowBytes);\n          if (this.image instanceof _stream.DecodeStream) {\n            imgData.data = imgArray;\n          } else {\n            var newArray = new Uint8Array(imgArray.length);\n            newArray.set(imgArray);\n            imgData.data = newArray;\n          }\n          if (this.needsDecode) {\n            (0, _util.assert)(kind === _util.ImageKind.GRAYSCALE_1BPP);\n            var buffer = imgData.data;\n            for (var i = 0, ii = buffer.length; i < ii; i++) {\n              buffer[i] ^= 0xff;\n            }\n          }\n          return imgData;\n        }\n        if (this.image instanceof _jpeg_stream.JpegStream && !this.smask && !this.mask) {\n          var imageLength = originalHeight * rowBytes;\n          switch (this.colorSpace.name) {\n            case 'DeviceGray':\n              imageLength *= 3;\n            case 'DeviceRGB':\n            case 'DeviceCMYK':\n              imgData.kind = _util.ImageKind.RGB_24BPP;\n              imgData.data = this.getImageBytes(imageLength, drawWidth, drawHeight, true);\n              return imgData;\n          }\n        }\n      }\n      imgArray = this.getImageBytes(originalHeight * rowBytes);\n      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n      var comps = this.getComponents(imgArray);\n      var alpha01, maybeUndoPreblend;\n      if (!forceRGBA && !this.smask && !this.mask) {\n        imgData.kind = _util.ImageKind.RGB_24BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n        alpha01 = 0;\n        maybeUndoPreblend = false;\n      } else {\n        imgData.kind = _util.ImageKind.RGBA_32BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n        alpha01 = 1;\n        maybeUndoPreblend = true;\n        this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n      if (maybeUndoPreblend) {\n        this.undoPreblend(imgData.data, drawWidth, actualHeight);\n      }\n      return imgData;\n    },\n    fillGrayBuffer: function fillGrayBuffer(buffer) {\n      var numComps = this.numComps;\n      if (numComps !== 1) {\n        throw new _util.FormatError('Reading gray scale from a color image: ' + numComps);\n      }\n      var width = this.width;\n      var height = this.height;\n      var bpc = this.bpc;\n      var rowBytes = width * numComps * bpc + 7 >> 3;\n      var imgArray = this.getImageBytes(height * rowBytes);\n      var comps = this.getComponents(imgArray);\n      var i, length;\n      if (bpc === 1) {\n        length = width * height;\n        if (this.needsDecode) {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = comps[i] - 1 & 255;\n          }\n        } else {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = -comps[i] & 255;\n          }\n        }\n        return;\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      length = width * height;\n      var scale = 255 / ((1 << bpc) - 1);\n      for (i = 0; i < length; ++i) {\n        buffer[i] = scale * comps[i] | 0;\n      }\n    },\n    getImageBytes: function getImageBytes(length, drawWidth, drawHeight) {\n      var forceRGB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      this.image.reset();\n      this.image.drawWidth = drawWidth || this.width;\n      this.image.drawHeight = drawHeight || this.height;\n      this.image.forceRGB = !!forceRGB;\n      return this.image.getBytes(length);\n    }\n  };\n  return PDFImage;\n}();\nexports.PDFImage = PDFImage;\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=pdf.worker.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/build/pdf.worker.js\n// module id = wk5V\n// module chunks = 204"],"sourceRoot":""}