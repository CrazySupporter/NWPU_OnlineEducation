{"version":3,"sources":["webpack:///./node_modules/pdfjs-dist/lib/core/bidi.js","webpack:///./node_modules/pdfjs-dist/lib/core/crypto.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpx.js","webpack:///./node_modules/pdfjs-dist/lib/core/pattern.js","webpack:///./node_modules/pdfjs-dist/lib/core/operator_list.js","webpack:///./node_modules/pdfjs-dist/lib/core/charsets.js","webpack:///./node_modules/pdfjs-dist/lib/core/worker.js","webpack:///./node_modules/pdfjs-dist/lib/core/chunked_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/pdf_manager.js","webpack:///./node_modules/pdfjs-dist/lib/core/ps_parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/jbig2_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/unicode.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpx_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/metrics.js","webpack:///./node_modules/pdfjs-dist/lib/core/fonts.js","webpack:///./node_modules/pdfjs-dist/lib/core/murmurhash3.js","webpack:///./node_modules/pdfjs-dist/lib/core/arithmetic_decoder.js","webpack:///./node_modules/pdfjs-dist/lib/core/font_renderer.js","webpack:///./node_modules/pdfjs-dist/lib/pdf.worker.js","webpack:///./node_modules/pdfjs-dist/lib/core/function.js","webpack:///./node_modules/pdfjs-dist/lib/core/image.js","webpack:///./node_modules/pdfjs-dist/lib/core/colorspace.js","webpack:///./node_modules/pdfjs-dist/lib/core/jbig2.js","webpack:///./node_modules/pdfjs-dist/lib/core/type1_parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/cff_parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/annotation.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpg.js","webpack:///./node_modules/pdfjs-dist/lib/core/encodings.js","webpack:///./node_modules/pdfjs-dist/lib/core/primitives.js","webpack:///./node_modules/pdfjs-dist/lib/core/parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/glyphlist.js","webpack:///./node_modules/pdfjs-dist/lib/core/obj.js","webpack:///./node_modules/pdfjs-dist/lib/core/cmap.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpeg_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/ccitt_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/ccitt.js","webpack:///./node_modules/pdfjs-dist/lib/core/evaluator.js","webpack:///./node_modules/pdfjs-dist/lib/core/document.js","webpack:///./node_modules/pdfjs-dist/lib/core/standard_fonts.js"],"names":["Object","defineProperty","exports","value","bidi","undefined","_util","__webpack_require__","baseTypes","arabicTypes","isOdd","i","isEven","findUnequal","arr","start","j","jj","length","setValues","end","reverseValues","temp","createBidiText","str","isLTR","vertical","dir","chars","types","startLevel","strLength","ii","numBidi","charAt","charCode","charCodeAt","charType","warn","toString","levels","t","e","sor","eor","lastType","before","after","level","highestLevel","lowestOddLevel","ch","join","calculateSHA512","calculateSHA384","calculateSHA256","calculateMD5","PDF20","PDF17","CipherTransformFactory","ARCFourCipher","AES256Cipher","AES128Cipher","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_primitives","_stream","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","TypeError","create","constructor","setPrototypeOf","__proto__","_classCallCheck","instance","this","a","b","tmp","s","Uint8Array","keyLength","encryptBlock","data","tmp2","n","output","decryptBlock","r","k","Int32Array","offset","h0","h1","h2","h3","paddedLength","padded","w","f","g","c","d","rotateArg","rotate","Word64","highInteger","lowInteger","high","low","and","word","xor","or","shiftRight","places","shiftLeft","rotateRight","not","add","lowAdd","highAdd","copyTo","bytes","assign","rotr","x","y","z","maj","sigma","sigmaPrime","littleSigma","h4","h5","h6","h7","Math","ceil","Uint32Array","t1","t2","h","result","littleSigmaPrime","mode384","Array","tmp3","tmp1","NullCipher","AESBaseCipher","unreachable","_s","_inv_s","_mix","_mixCol","buffer","bufferPosition","cipherKey","input","u","v","state","set","_keySize","_cyclesOfRepetition","_j","_j2","_k","_j3","s0","s1","s2","s3","_j4","_j5","_j6","_j7","_j8","_j9","_k2","finalize","sourceLength","bufferLength","iv","plain","_decrypt","_key","push","outputLength","lastBlock","psLen","_i","subarray","_i2","_j10","_ii","arguments","_decryptBlock2","cipher","_encrypt","_i3","_j11","_AESBaseCipher","_this","getPrototypeOf","_rcon","_expandKey","rcon","t3","t4","_AESBaseCipher2","_this2","compareByteArrays","array1","array2","checkOwnerPassword","password","ownerValidationSalt","userBytes","ownerPassword","hashData","checkUserPassword","userValidationSalt","userPassword","getOwnerKey","ownerKeySalt","ownerEncryption","getUserKey","userKeySalt","userEncryption","concatArrays","calculatePDF20Hash","arrayLength","k1","array","pos","encrypt","remainder","hash","concatBytes","CipherTransform","stringCipherConstructor","streamCipherConstructor","StringCipherConstructor","StreamCipherConstructor","createStream","stream","DecryptStream","decryptString","stringToBytes","bytesToString","defaultPasswordBytes","prepareKeyData","fileId","flags","revision","encryptMetadata","hashDataSize","min","keyLengthInBytes","checkData","encryptionKey","derivedKey","identityName","Name","get","dict","filter","isName","FormatError","algorithm","Number","isInteger","cfDict","streamCryptoName","isDict","suppressEncryption","handlerDict","name","passwordBytes","fileIdBytes","utf8StringToString","ex","uBytes","perms","passwordLength","pdfAlgorithm","createEncryptionKey20","PasswordException","PasswordResponses","NEED_PASSWORD","decodeUserPassword","INCORRECT_PASSWORD","cf","stmf","strf","eff","buildObjectKey","num","gen","isAes","buildCipherConstructor","cfm","cryptFilter","createCipherTransform","cipherConstructor","JpxImage","_arithmetic_decoder","JpxError","msg","message","Error","SubbandsGainLog2","LL","LH","HL","HH","failOnCorruptedImage","calculateComponentDimensions","component","siz","x0","XOsiz","XRsiz","x1","Xsiz","y0","YOsiz","YRsiz","y1","Ysiz","width","height","calculateTileGrids","context","components","tile","SIZ","tiles","numXtiles","XTOsiz","XTsiz","numYtiles","YTOsiz","YTsiz","q","p","tx0","max","ty0","tx1","ty1","Csiz","tileComponent","tcx0","tcy0","tcx1","tcy1","getBlocksDimensions","codOrCoc","codingStyleParameters","entropyCoderWithCustomPrecincts","PPx","precinctsSizes","PPy","xcb_","xcb","ycb_","ycb","buildPrecincts","resolution","dimensions","precinctWidth","precinctHeight","isZeroRes","resLevel","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","trx1","trx0","floor","numprecinctshigh","try1","try0","numprecincts","precinctParameters","buildCodeblocks","subband","codeblock","precinctNumber","codeblockWidth","codeblockHeight","cbx0","tbx0","cby0","tby0","cbx1","tbx1","cby1","tby1","codeblocks","precincts","cbx","cby","tbx0_","tby0_","tbx1_","tby1_","subbandType","type","Lblock","precinct","cbxMin","cbxMax","cbyMin","cbyMax","codeblockParameters","numcodeblockwide","numcodeblockhigh","createPacket","layerNumber","precinctCodeblocks","subbands","getPrecinctIndexIfExist","pxIndex","pyIndex","sizeInImageScale","precinctIterationSizes","posX","minWidth","posY","minHeight","startPrecinctRowIndex","getPrecinctSizesInImageScale","componentsCount","MAX_VALUE","maxNumWide","maxNumHigh","sizePerComponent","decompositionLevelsCount","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","scale","resolutions","widthCurrentResolution","heightCurrentResolution","buildPackets","tileIndex","currentTile","index","blocksDimensions","bscale","resolutionSubbands","progressionOrder","codingStyleDefaultParameters","packetsIterator","layersCount","maxDecompositionLevelsCount","l","nextPacket","packet","maxNumPrecinctsInLevel","maxNumPrecincts","precinctsIterationSizes","px","py","parseTilePackets","dataLength","position","bufferSize","skipNextBit","readBits","count","skipMarkerIfEqual","skipBytes","alignToByte","readCodingpasses","sopMarkerUsed","COD","ephMarkerUsed","queue","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","inclusionTree","zeroBitPlanesTree","InclusionTree","TagTree","reset","incrementValue","nextLevel","included","zeroBitPlanes","codingpasses","codingpassesLog2","log2","codedDataLength","packetItem","shift","copyCoefficients","coefficients","levelWidth","levelHeight","delta","mb","reversible","segmentationSymbolUsed","right","bottom","blockWidth","blockHeight","bitModel","currentCodingpassType","BitModel","dataItem","totalLength","encodedData","chunk","decoder","ArithmeticDecoder","setDecoder","runSignificancePropagationPass","runMagnitudeRefinementPass","runCleanupPass","checkSegmentationSymbol","nb","sign","coefficentsSign","magnitude","coefficentsMagnitude","bitsDecoded","magnitudeCorrection","interleave","levelOffset","transformTile","quantizationParameters","spqcds","SPqcds","scalarExpounded","guardBits","precision","reversibleTransformation","transform","ReversibleTransform","IrreversibleTransform","subbandCoefficients","Float32Array","mu","epsilon","gainLog2","pow","items","calculate","left","top","initializeTile","qcdOrQcc","QCC","QCD","COC","parse","readUint16","headerSize","lbox","readUint32","tbox","jumpDataLength","method","colorspace","info","parseCodestream","headerType","String","fromCharCode","parseImageProperties","newByte","getByte","skip","getInt32","getUint16","bitsPerComponent","doNotRecover","code","sqcd","spqcdSize","mainHeader","isSigned","qcd","noQuantization","spqcd","cqcc","qcc","cod","scod","multipleComponentTransform","blockStyle","selectiveArithmeticCodingBypass","resetContextProbabilities","terminationOnEachCodingPass","verticallyStripe","predictableTermination","precinctsSize","unsupported","dataEnd","partIndex","partsCount","slice","resultImages","transformedTiles","y2","tile0","out","Uint8ClampedArray","fourComponents","y0items","y1items","y2items","y3items","component0","alpha01","transformComponents","levelsLength","currentLevel","defaultValue","stopValue","propagateValues","levelIndex","currentValue","LLAndLHContextsLabel","HLContextLabel","HHContextLabel","contextLabelTable","coefficientCount","neighborsSignificance","Uint16Array","processingFlags","contexts","Int8Array","setNeighborsSignificance","row","column","labels","i0","i1","contextLabel","readBit","decodeSignBit","contribution","sign0","sign1","significance1","decoded","horizontalContribution","indexNext","width4","index0","bit","iNext","oneRowDown","twoRowsDown","threeRowsDown","indexBase","checkAllEmpty","i2","Transform","u0","v0","ll","iterate","extend","size","j1","j2","hl_lh_hh","llWidth","llHeight","llItems","rowBuffer","numBuffers","colBuffers","currentBuffer","current","next","len","alpha","beta","gamma","K","getTilingPatternIR","Pattern","_colorspace","ShadingType","FUNCTION_BASED","AXIAL","RADIAL","FREE_FORM_MESH","LATTICE_FORM_MESH","COONS_PATCH_MESH","TENSOR_PATCH_MESH","getPattern","ctx","parseShading","shading","matrix","xref","res","handler","pdfFunctionFactory","isStream","Shadings","RadialAxial","Mesh","MissingDataException","send","featureId","UNSUPPORTED_FEATURES","shadingPattern","Dummy","SMALL_NUMBER","coordsArr","getArray","shadingType","cs","ColorSpace","t0","has","domainArr","extendStart","extendEnd","extendArr","r1","x2","r2","distance","sqrt","fnObj","fn","createFromArray","diff","step","colorStops","rgbColor","color","numComps","ratio","getRgb","cssColor","Util","makeCssRgb","background","unshift","getIR","p0","p1","r0","applyTransform","singularValueDecompose2dScale","MeshStreamReader","tmpCompsBuf","csNumComps","colorSpace","tmpCsCompsBuf","colorFn","hasData","nextByte","align","readFlag","bitsPerFlag","readCoordinate","bitsPerCoordinate","xi","yi","decode","readComponents","ci","MIN_SPLIT_PATCH_CHUNKS_AMOUNT","MAX_SPLIT_PATCH_CHUNKS_AMOUNT","TRIANGLE_DENSITY","getB","cache","lut","t_","buildB","buildFigureFromPatch","mesh","figure","figures","assert","coords","colors","pi","figureMinX","figureMinY","figureMaxX","figureMaxY","splitXBy","bounds","splitYBy","verticesPerRow","figureCoords","figureColors","cl","cr","c0","c1","c2","c3","bRow","bCol","col","m","newColor","updateBounds","minX","minY","maxX","maxY","bbox","reader","patchMesh","operators","ps","verticesLeft","coord","decodeType4Shading","decodeType5Shading","tmp4","decodeType6Shading","decodeType7Shading","coordsPacked","xy","colorsPacked","packData","operatorList","args","normalizeRect","xstep","ystep","paintType","tilingType","OperatorList","QueueOptimizer","addState","parentState","pattern","checkFn","iterateFn","processFn","item","InitialState","iCurr","fnArray","argsArray","match","lastProcessed","OPS","save","paintInlineImageXObject","restore","curr","iFirstSave","iFirstTransform","iFirstPIIXO","map","maxLineHeight","currentX","currentY","img","imgWidth","imgHeight","imgData","imgRowSize","rowSize","dataOffset","kk","splice","paintInlineImageXObjectGroup","kind","ImageKind","RGBA_32BPP","paintImageMaskXObject","iFirstPIMXO","arg","imageMask","paintSolidColorImageMask","handlePaintSolidColorImageMask","iTransform","transformArgs","isSameImage","firstPIMXOArg0","firstTransformArg0","firstTransformArg3","iPIMXO","positions","paintImageMaskXObjectRepeat","images","maskParams","paintImageMaskXObjectGroup","paintImageXObject","firstPIXOArg0","paintImageXObjectRepeat","beginText","setFont","setTextMatrix","showText","endText","iFirstSetFont","firstSetFontArg0","firstSetFontArg1","iFirstBeginText","iFirstSetTextMatrix","iFirstShowText","iFirstEndText","iFirst","iEndText","_optimize","isArray","flush","NullOptimizer","intent","messageHandler","pageIndex","optimizer","dependencies","_totalLength","weight","addOp","CHUNK_SIZE","addDependency","dependency","addDependencies","addOpList","opList","extendObj","lastChunk","transfers","cached","getTransfers","ISOAdobeCharset","ExpertCharset","ExpertSubsetCharset","WorkerMessageHandler","WorkerTask","obj","_typeof","Symbol","iterator","_slicedToArray","_arr","_n","_d","_e","done","err","sliceIterator","_pdf_manager","_is_node","_is_node2","__esModule","default","maybePort","terminated","_capability","createPromiseCapability","finished","promise","finish","resolve","terminate","ensureNotTerminated","PDFWorkerStream","msgHandler","_msgHandler","_contentLength","_fullRequestReader","_rangeRequestReaders","PDFWorkerStreamReader","_isRangeSupported","_isStreamingSupported","readableStream","sendWithStream","_reader","getReader","_headersReady","sendWithPromise","then","isStreamingSupported","isRangeSupported","contentLength","PDFWorkerStreamRangeReader","begin","onProgress","getFullReader","getRangeReader","cancelAllRequests","reason","cancel","forEach","headersReady","read","_ref","_ref2","setup","port","testMessageProcessed","on","supportTransfers","postMessageTransfers","xhr","XMLHttpRequest","responseExists","responseType","supportTypedArray","setVerbosityLevel","verbosity","createDocumentHandler","docParams","pdfManager","cancelXHRs","WorkerTasks","apiVersion","docId","docBaseUrl","workerHandlerName","MessageHandler","startWorkerTask","task","finishWorkerTask","indexOf","loadDocument","recoveryMode","loadDocumentCapability","parseSuccess","Promise","all","ensureDoc","_ref3","_ref4","numPages","fingerprint","parseFailure","reject","getPdfManager","evaluatorOptions","pdfManagerCapability","source","LocalPdfManager","pdfStream","cachedChunks","fullRequest","disableAutoFetch","NetworkPdfManager","url","rangeChunkSize","sendProgressiveData","catch","loaded","readChunk","pdfFile","arraysToBytes","flushChunks","arrayByteLength","total","getPage","page","rotatePromise","ensure","refPromise","userUnitPromise","viewPromise","results","ref","userUnit","view","Ref","pdfDocument","catalog","getPageIndex","ensureCatalog","id","requestLoadedStream","onLoadedStream","stats","pageNum","Date","now","getOperatorList","renderInteractiveForms","unknown","wrappedException","minimumStackMessage","stack","error","sink","onPull","desiredSize","onCancel","extractTextContent","normalizeWhitespace","combineTextItems","close","cleanup","waitOn","destroy","onSuccess","doc","pdfInfo","onFailure","updatePassword","pdfManagerReady","bind","InvalidPDFException","MissingPDFException","UnexpectedResponseException","UnknownErrorException","XRefParseException","forceDataSchema","disableCreateObjectURL","maxImageSize","disableFontFace","nativeImageDecoderSupport","ignoreErrors","isEvalSupported","newPdfManager","byteLength","setupDoc","initializeFromPort","window","postMessage","ChunkedStreamManager","ChunkedStream","chunkSize","manager","loadedChunks","numChunksLoaded","numChunks","progressiveDataLength","lastSuccessfulEnsureByteChunk","getMissingChunks","chunks","getBaseStreams","allChunksLoaded","onReceiveData","curChunk","beginChunk","endChunk","onReceiveProgressiveData","ensureByte","ensureRange","nextEmptyChunk","hasChunk","isEmpty","b0","b1","getBytes","strEnd","peekByte","peekedByte","peekBytes","getByteRange","moveStart","makeSubStream","ChunkedStreamSubstream","missingChunks","subStream","pdfNetworkStream","currRequestId","chunksNeededByRequest","requestsByChunk","promisesByRequest","aborted","_loadedStreamCapability","sendRequest","rangeReader","chunkData","requestAllChunks","_requestChunks","requestId","chunksNeeded","isEmptyObj","capability","chunksToRequest","groupedChunksToRequest","groupChunks","groupedChunk","getStream","requestRange","getBeginChunk","getEndChunk","requestRanges","ranges","includes","sort","groupedChunks","prevChunk","bytesLoaded","isProgressive","loadedRequests","requestIds","onError","abort","_chunked_stream","_document","BasePdfManager","_docId","_password","_docBaseUrl","absoluteUrl","createValidAbsoluteUrl","href","shadow","NotImplementedException","prop","ensureXRef","Stream","PDFDocument","inherit","apply","params","streamManager","ensureHelper","PostScriptParser","PostScriptLexer","lexer","token","prev","nextToken","getToken","accept","expect","PostScriptTokenTypes","LBRACE","parseBlock","RBRACE","NUMBER","OPERATOR","parseCondition","conditionLocation","IF","jumpLocation","endOfTrue","IFELSE","PostScriptToken","opCache","getOperator","op","opValue","nextChar","strBuf","currentChar","comment","EOF","isSpace","getNumber","toLowerCase","parseFloat","isNaN","Jbig2Stream","_jbig","maybeLength","DecodeStream","ensureBuffer","requested","readBlock","eof","jbig2Image","Jbig2Image","globalsStream","globals","parseChunks","getLookupTableFactory","getSpecialPUASymbols","UnicodeRanges","getNormalizedUnicodes","mapSpecialUnicodeValues","reverseIfRtl","range","charsLength","getUnicodeRangeFor","getUnicodeForGlyph","glyphsUnicodeMap","unicode","hexStr","nameLen","substr","toUpperCase","parseInt","JpxStream","_jpx","jpxImage","tileCount","tileComponents","tileWidth","tileHeight","tileLeft","tileTop","src","srcPosition","dataPosition","tileRowSize","rowBytes","getMetrics","getFontType","ProblematicCharRanges","IdentityToUnicodeMap","ToUnicodeMap","FontFlags","Font","ErrorFont","PRIVATE_USE_OFFSET_END","PRIVATE_USE_OFFSET_START","SEAC_ANALYSIS_ENABLED","_cff_parser","_glyphlist","_encodings","_standard_fonts","_unicode","_font_renderer","_type1_parser","SKIP_PRIVATE_USE_RANGE_F000_TO_F01F","PDF_GLYPH_SPACE_UNITS","FixedPitch","Serif","Symbolic","Script","Nonsymbolic","Italic","AllCap","SmallCap","ForceBold","MacStandardGlyphOrdering","adjustWidths","properties","fontMatrix","FONT_IDENTITY_MATRIX","glyphsWidths","widths","glyph","defaultWidth","subtype","FontType","TYPE1C","TYPE1","CIDFONTTYPE0C","CIDFONTTYPE0","OPENTYPE","TRUETYPE","CIDFONTTYPE2","MMTYPE1","TYPE0","UNKNOWN","recoverGlyphName","Glyph","fontChar","accent","vmetric","operatorListId","isInFont","matchesForCache","cmap","_map","callback","charCodeOf","amend","firstChar","lastChar","OpenTypeFileBuilder","writeInt16","dest","writeInt32","writeData","sfnt","tables","getSearchParams","entriesCount","entrySize","maxPower2","searchRange","entry","rangeShift","toArray","tablesNames","keys","table","tableName","numTables","tableOffsets","file","string32","searchParams","checksum","addTable","tag","loadedName","isType3Font","sizes","missingFile","glyphCache","isSerifFont","isSymbolicFont","isMonospace","fallbackName","differences","composite","wideChars","cMap","ascent","descent","defaultEncoding","toUnicode","fallbackToUnicode","toFontChar","cidEncoding","vmetrics","defaultVMetrics","fallbackToSystemFont","header","isTrueTypeFile","isOpenTypeFile","isType1File","mimetype","cff","CFFFont","Type1Font","convert","checkAndRepair","isOpenType","fontType","encoding","baseEncoding","seacMap","loading","TYPE3","ID","int16","signedInt16","string16","safeString16","buildToFontChar","isProblematicUnicodeLocation","adjustMapping","charCodeToGlyphId","missingGlyphs","isSymbolic","isIdentityUnicode","newMap","usedFontCharCodes","nextAvailableFontCharCode","originalCharCode","glyphId","fontCharCode","hasUnicodeValue","createCmapTable","glyphs","numGlyphs","codes","codeIndices","getRanges","bmpLength","trailingRangesCount","segCount","startCount","endCount","idDeltas","idRangeOffsets","glyphsIds","bias","contiguous","format314","format31012","header31012","createOS2Table","charstrings","override","unitsPerEm","yMax","yMin","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","firstCharIndex","lastCharIndex","ascentScaled","typoAscent","round","typoDescent","winAscent","winDescent","fixedPitch","italicAngle","xHeight","capHeight","createPostTable","angle","createNameTable","proto","strings","stringsUnicode","strBufUnicode","names","platforms","encodings","languages","namesRecordCount","nameTable","strOffset","strs","getFontID","font","renderer","FontRendererFactory","exportData","hasOwnProperty","fontName","replace","stdFontMap","getStdFontMap","nonStdFontMap","getNonStdFontMap","isStandardFont","bold","search","italic","black","remeasure","GlyphMapForStandardFonts","getGlyphMapForStandardFonts","test","SupplementalGlyphMapForArialBlack","getSupplementalGlyphMapForArialBlack","SupplementalGlyphMapForCalibri","getSupplementalGlyphMapForCalibri","unicodeCharCode","SymbolSetEncoding","getGlyphsUnicode","ZapfDingbatsEncoding","getDingbatsGlyphsUnicode","glyphName","split","VALID_TABLES","readTables","readTableEntry","previousPosition","readOpenTypeHeader","ttf","version","entrySelector","sanitizeGlyph","sourceStart","sourceEnd","destStart","hintsValid","glyphProfile","sizeOfInstructions","glyf","contoursCount","flagsCount","instructionsStart","instructionsLength","instructionsEnd","coordinatesLength","flag","xyLength","repeat","glyphDataLength","readNameTable","numRecords","stringsStart","records","platform","language","record","nameIndex","TTOpsStackDeltas","sanitizeTTProgram","ttContext","funcId","pc","lastEndf","lastDeff","callstack","functionsCalled","tooComplexToFollowFunctions","inFDEF","ifLevel","inELSE","pop","functionsStackDeltas","stackTop","functionsDefined","functionsUsed","stackDelta","NaN","content","newLength","foldTTTable","isTrueTypeCollectionFile","ttcData","ttc","_readTrueTypeCollecti","ttcTag","majorVersion","minorVersion","numFonts","offsetTable","dsigTag","dsigLength","dsigOffset","readTrueTypeCollectionHeader","potentialHeader","potentialTables","nameEntry","readTrueTypeCollectionData","cffFile","isTrueType","cidToGidMap","maxFunctionDefs","maxSizeOfInstructions","dupFirstEntry","fpgm","prep","cvt","checkInvalidFunctions","cvtData","sanitizeTTPrograms","metrics","numOfMetrics","numMissing","entries","sanitizeMetrics","head","locaLength","b2","b3","indexToLocFormat","numGlyphsPlusOne","sanitizeHead","isGlyphLocationsLong","glyphsInfo","loca","itemSize","itemDecode","itemEncode","locaData","locaDataSize","oldGlyfData","oldGlyfDataLength","newGlyfData","startOffset","writeOffset","locaCount","endOffset","simpleGlyph","firstEntryLength","sanitizeGlyphLocations","metricsOverride","post","maxpNumGlyphs","glyphNames","valid","glyphNameIndexes","customNames","stringLength","readPostScriptTable","hasGlyph","isCidToGidMapEmpty","cid","cmapTable","hasEncoding","platformId","encodingId","mappings","hasShortCmap","segment","potentialTable","canBreak","useTable","format","segIndex","segments","offsetsCount","rangeOffset","offsetIndex","offsets","firstCode","entryCount","readCmapTable","cmapPlatformId","cmapEncodingId","cmapMappings","cmapMappingsLength","getEncoding","baseEncodingName","standardGlyphName","StandardEncoding","unicodeOrCharCode","MacRomanEncoding","found","newMapping","os2","selection","validateOS2Table","CFFParser","compiler","CFFCompiler","compile","namePrototype","builder","tableTag","builtInEncoding","hasIncludedToUnicodeMap","adjustToUnicode","mapping","getGlyphMapping","getCharCodes","charCodes","createCharCode","seacs","charset","getCharset","seac","baseGlyphName","accentGlyphName","baseGlyphId","accentGlyphId","accentOffset","baseFontCharCode","accentFontCharCode","tan","cffWidths","hmtx","charstring","spaceWidth","_shadowWidth","possibleSpaceReplacements","glyphUnicode","charcode","contains","lookup","charToGlyph","widthCode","isNum","charsToGlyphs","charsCache","charsCacheKey","readCharCode","type1FontGlyphMapping","findBlock","streamBytes","signature","startIndex","streamBytesLength","signatureLength","scanLength","headerBlockLength","length1","pfbHeader","length2","pfbHeaderPresent","headerBlock","suggestedLength","headerBytes","headerBytesLength","block","actualLength","EEXEC_SIGNATURE","streamStartPos","getHeaderBlock","Type1Parser","extractFontHeader","eexecBytes","eexecBlock","extractFontProgram","type2Charstrings","getType2Charstrings","subrs","getType2Subrs","wrap","getSeacs","type1Charstrings","type1Subrs","type2Subrs","CFF","CFFHeader","topDict","CFFTopDict","setByName","CFFStrings","globalSubrIndex","CFFIndex","charsetArray","CFFStandardStrings","CFFCharset","charStringsIndex","charStrings","privateDict","CFFPrivateDict","fields","field","privateData","subrIndex","subrsIndex","parser","charsets","isCIDFont","navigator","userAgent","MurmurHash3_64","seed","update","isString","isArrayBuffer","blockCounts","tailLength","dataUint32","k2","C1","C2","hexdigest","hex","QeTable","qe","nmps","nlps","switchFlag","bp","chigh","clow","byteIn","ct","cx_index","cx_mps","qeTableIcx","qeIcx","getLong","getUshort","parseCmap","idDelta","idOffset","ids","groups","parseCff","seacAnalysisEnabled","objects","gsubrs","isCFFCIDFont","fdSelect","fdArray","lookupCmap","gid","CompiledFont","compiledGlyphs","compiledCharCodeToGlyphId","TrueTypeCompiled","Type2Compiled","cffInfo","glyphNameMap","gsubrsBias","subrsBias","getPathJs","compileGlyph","fdIndex","getFDIndex","getByName","cmds","cmd","compileGlyphImpl","hasBuiltPath","compileGlyf","moveTo","lineTo","quadraticCurveTo","xa","ya","numberOfContours","arg1","arg2","glyphIndex","scaleX","scaleY","scale01","scale10","subglyph","endPtsOfContours","numberOfPoints","points","startPoint","endPoint","contour","compileCharString","stems","bezierCurveTo","xb","yb","subrCode","stackClean","fontDict","numSubrs","abs","achar","bchar","parseGlyfTable","pdfjsCoreWorker","PostScriptCompiler","PostScriptEvaluator","PDFFunctionFactory","isPDFFunction","_ps_parser","IsEvalSupportedCached","_ref$isEvalSupported","PDFFunction","parseArray","IR","fromIR","getSampleArray","outputSize","bps","codeSize","codeBuf","sampleMul","strBytes","strIdx","typeFn","constructSampled","constructInterpolated","constructStiched","constructPostScript","constructSampledFromIR","constructInterpolatedFromIR","constructStichedFromIR","constructPostScriptFromIR","_ref5","fetchIfRef","srcOffset","destOffset","_ref6","toMultiArray","inputLength","domain","inputSize","order","encode","_ref7","interpolate","xmin","xmax","ymin","ymax","samples","cubeVertices","cubeN","Float64Array","cubeVertex","domain_2i","domain_2i_1","size_i","e0","n0","n1","offset0","offset1","rj","_ref8","_ref9","_ref10","fnRefs","fns","_ref11","fnsIR","tmpBuf","clip","dmin","dmax","rmin","rmax","_ref12","_ref13","compiled","Function","numOutputs","numInputs","evaluator","cache_available","cachedValue","execute","stackIndex","bound","PostScriptStack","initialStack","copy","roll","operator","counter","isBool","atan","cos","log","LN10","sin","AstNode","AstArgument","AstLiteral","number","AstBinaryOperation","AstMin","AstVariable","AstVariableDefinition","variable","ExpressionBuilderVisitor","parts","buildAddOperation","num1","num2","buildMulOperation","buildSubOperation","buildMinOperation","visit","visitor","visitArgument","visitLiteral","visitBinaryOperation","visitMin","visitVariable","visitVariableDefinition","literal","operation","definition","ast1","ast2","tmpVar","instructions","lastRegister","instruction","statementBuilder","expr","fnDict","PDFImage","_jpeg_stream","handleImageData","image","nativeDecoder","canDecode","decodeAndClamp","addend","coefficient","resizeImageMask","bpc","w1","w2","oldIndex","xRatio","yRatio","newIndex","xScaled","w1Scanline","_ref$isInline","isInline","_ref$smask","smask","_ref$mask","mask","_ref$isMask","isMask","matte","resources","needsDecode","isDefaultDecode","decodeCoefficients","decodeAddends","buildImage","smaskPromise","maskPromise","_ref2$isInline","_ref2$nativeDecoder","imagePromise","imageData","smaskData","maskData","createMask","imgArray","imageIsFromDecodeStream","inverseDecode","computedLength","drawWidth","drawHeight","decodeBuffer","getComponents","buf","bufferPos","rowComps","loop1End","loop2End","bits","remainingBits","fillOpacity","rgbaBuf","actualHeight","alphaBuf","sw","sh","fillGrayBuffer","opacity","imageOffset","maskOffset","undoPreblend","matteRgb","matteR","matteG","matteB","createImageData","forceRGBA","originalWidth","originalHeight","GRAYSCALE_1BPP","RGB_24BPP","getImageBytes","newArray","JpegStream","imageLength","maybeUndoPreblend","comps","fillRgb","forceRGB","rgb","getRgbItem","getRgbBuffer","getOutputLength","isPassthrough","rgbBuf","numComponentColors","needsResizing","allColors","destPos","rgbPos","colorMap","resizeRgbImage","usesZeroToOneRange","parseToIR","whitePoint","blackPoint","singletons","gray","cmyk","CalGrayCS","CalRGBCS","basePatternCS","PatternCS","baseIndexedCS","hiVal","IndexedCS","alt","tintFnIR","AlternateCS","createFromIR","LabCS","colorSpaces","resCS","mode","altIR","createIR","DeviceGrayCS","DeviceRgbCS","DeviceCmykCS","base","tintFn","defaultColor","baseNumComps","baseBuf","scaled","tinted","decodeMap","baseCS","highVal","outputDelta","lookupPos","convertToRgb","srcScale","XW","YW","ZW","XB","YB","ZB","G","A","AG","L","val","BRADFORD_SCALE_MATRIX","BRADFORD_SCALE_INVERSE_MATRIX","SRGB_D65_XYZ_TO_RGB_MATRIX","FLAT_WHITEPOINT_MATRIX","tempNormalizeMatrix","tempConvertMatrix1","tempConvertMatrix2","DECODE_L_CONSTANT","GR","GG","GB","MXA","MYA","MZA","MXB","MYB","MZB","MXC","MYC","MZC","matrixProduct","sRGBTransferFunction","adjustToRange","decodeL","B","C","AGR","BGG","CGB","X","Y","Z","XYZ","XYZ_Flat","sourceWhitePoint","XYZ_In","LMS","LMS_Flat","convertToFlat","normalizeWhitePointToFlat","XYZ_Black","sourceBlackPoint","zeroDecodeL","X_Scale","X_Offset","Y_Scale","Y_Offset","Z_Scale","Z_Offset","compensateBlackPoint","XYZ_D65","LMS_D65","convertToD65","normalizeWhitePointToD65","SRGB","sR","sG","sB","amin","amax","bmin","bmax","fn_g","high1","low2","high2","maxVal","Ls","as","bs","M","N","_ccitt","Jbig2Error","ContextCache","DecodingContext","decodeInteger","contextCache","procedure","getContexts","decodeIAID","codeLength","SegmentTypes","CodingTemplates","RefinementTemplates","coding","reference","ReusedContexts","RefinementReusedContexts","decodeBitmap","mmr","templateIndex","prediction","at","decodingContext","decodeMMRBitmap","Reader","pixel","row1","row2","bitmap","decodeBitmapTemplate0","useskip","template","concat","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","j0","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ltp","decodeRefinement","referenceBitmap","offsetX","offsetY","codingTemplate","codingTemplateLength","codingTemplateX","codingTemplateY","referenceTemplate","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","decodeTextRegion","huffman","refinement","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","symbolCodeLength","transposed","dsOffset","referenceCorner","combinationOperator","huffmanTables","refinementTemplateIndex","refinementAt","logStripSize","huffmanInput","stripT","tableDeltaT","firstS","currentS","tableFirstS","currentT","symbolId","symbolIDTable","applyRefinement","symbolBitmap","symbolWidth","symbolHeight","rdw","rdh","symbolRow","offsetT","offsetS","maxWidth","deltaS","tableDeltaS","readSegmentHeader","segmentHeader","segmentType","typeName","deferredNonRetain","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","referredToSegmentNumberSize","referredTo","pageAssociation","genericRegionInfo","readRegionSegmentInformation","genericRegionMmr","RegionSegmentInformationFieldLength","searchPattern","headerEnd","readSegments","randomAccess","processSegment","atLength","dictionary","dictionaryFlags","huffmanDHSelector","huffmanDWSelector","bitmapSizeSelector","aggregationInstancesSelector","bitmapCodingContextUsed","bitmapCodingContextRetained","refinementTemplate","readInt8","numberOfExportedSymbols","numberOfNewSymbols","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","huffmanFS","huffmanDS","huffmanDT","huffmanRefinementDW","huffmanRefinementDH","huffmanRefinementDX","huffmanRefinementDY","huffmanRefinementSizeSelector","patternDictionary","patternDictionaryFlags","patternWidth","patternHeight","maxPatternIndex","halftoneRegion","halftoneRegionFlags","enableSkip","gridWidth","gridHeight","gridOffsetX","gridOffsetY","gridVectorX","gridVectorY","genericRegion","genericRegionSegmentFlags","pageInfo","resolutionX","resolutionY","pageSegmentFlags","lossless","requiresBuffer","combinationOperatorOverride","callbackName","processSegments","SimpleSegmentVisitor","HuffmanLine","lineData","isOOB","rangeLow","prefixLength","rangeLength","prefixCode","isLowerRange","HuffmanTreeNode","line","children","isLeaf","HuffmanTable","lines","prefixCodesDone","assignPrefixCodes","rootNode","buildTree","onPageInformation","currentPageInfo","drawBitmap","regionInfo","mask0","onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","onSymbolDictionary","currentSegment","referredSegments","customTables","customIndex","tableDeltaHeight","tableDeltaWidth","getStandardTable","getCustomHuffmanTable","tableBitmapSize","tableAggregateInstances","getSymbolDictionaryHuffmanTables","symbols","referredSymbols","newSymbols","currentHeight","tableB1","symbolWidths","currentWidth","totalWidth","firstSymbol","deltaWidth","numberOfInstances","rdx","rdy","bitmapSize","byteAlign","collectiveBitmap","readUncompressedBitmap","originalEnd","bitmapEnd","numberOfSymbolsDecoded","xMin","xMax","exportedSymbols","currentFlag","totalSymbolsLength","runLength","decodeSymbolDictionary","onImmediateTextRegion","numberOfSymbols","runCodesTable","repeatedLength","numberOfRepeats","getTextRegionHuffmanTables","onImmediateLosslessTextRegion","onPatternDictionary","patterns","patternBitmap","decodePatternDictionary","onImmediateHalftoneRegion","regionWidth","regionHeight","regionBitmap","numberOfPatterns","pattern0","bitsPerValue","grayScaleBitPlanes","mmrInput","mg","ng","patternIndex","patternRow","regionRow","regionX","regionY","decodeHalftoneRegion","onImmediateLosslessHalftoneRegion","onTables","lowestValue","highestValue","prefixSizeBits","rangeSizeBits","currentRangeLow","decodeTablesSegment","node","decodeNode","htOffset","linesLength","prefixLengthMax","histogram","currentLength","currentCode","currentTemp","standardTablesCache","currentByte","currentIndex","endOfBlock","Columns","Rows","BlackIs1","EndOfBlock","CCITTFaxDecoder","readNextChar","numBits","parseJbig2Chunks","Type1CharString","COMMAND_MAP","lsb","flexing","encoded","wx","sbx","subrNumber","dy","executeCommand","sby","numArgs","flexArgs","howManyArgs","command","keepStack","stackLength","EEXEC_ENCRYPT_KEY","isHexDigit","decrypt","discardNumber","decrypted","isSpecial","encrypted","isBinary","digit1","digit2","decryptAscii","readNumberArray","readNumber","readInt","readBoolean","readCharStrings","lenIV","program","blueArray","charString","encodingArg","fontBBox","_charsets","CharstringValidationData","stackClearing","stem","resetStack","undefStack","CharstringValidationData12","stackFn","parseHeader","parseIndex","endPos","topDictIndex","stringIndex","topDictParsed","parseDict","createDict","parseNameIndex","parseStringIndex","parsePrivateDict","hasName","charStringOffset","charStringIndex","fdArrayIndex","dictRaw","parseCharsets","parseFDSelect","parseEncoding","charStringsAndSeacs","parseCharStrings","localSubrIndex","bytesLength","major","minor","hdrSize","offSize","parseOperand","parseFloatOperand","operands","cffIndex","offsetSize","startPos","offsetStart","offsetEnd","Type","cffDict","pair","setByKey","parseCharString","callDepth","stackSize","validationCommand","hints","firstStackClearing","localSubrToUse","privateDictToUse","nominalWidth","emptyPrivateDictionary","parentDict","privateOffset","privateDictEnd","dictData","subrsOffset","relativeOffset","removeByName","CFFCharsetPredefinedTypes","ISO_ADOBE","EXPERT","EXPERT_SUBSET","raw","predefined","ExpertEncoding","dataStart","glyphsCount","rangesCount","supplementsCount","sid","readSupplement","CFFEncoding","rawBytes","invalidFirstGID","first","CFFFDSelect","CFFDict","keyToNameMap","nameToKeyMap","defaults","opcodes","values","valueLength","createTables","layout","CFFOffsetTracker","isTracking","track","location","setEntryLocation","offset2","offset3","offset4","compileHeader","compileNameIndex","subDict","compileTopDicts","topDictTracker","trackers","compileStringIndex","compileIndex","compileEncoding","compileCharset","compileCharStrings","compileFDSelect","fontDictTrackers","compilePrivateDicts","encodeNumber","encodeFloat","encodeInteger","exec","nibbles","sanitizedName","char","dicts","removeCidKeys","fontDictTracker","fontDictData","compileDict","privateDictTracker","privateDictData","offsetTracker","compileGlobalSubrIndex","writeByteArray","compileTypedArray","lastOffset","LZWStream","StringStream","StreamsSequenceStream","RunLengthStream","PredictorStream","NullStream","FlateStream","AsciiHexStream","Ascii85Stream","arrayBuffer","emptyBuffer","maybeMinBufferLength","minBufferLength","buffer2","bufEnd","streams","baseStreams","appendToArray","codeLenCodeMap","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","cmf","flg","getBits","getCode","maxLen","codeLen","codeVal","generateHuffmanTable","lengths","code2","hdr","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","bitsLength","bitsOffset","what","codeLengths","repeatLength","limit","code1","dist","blockLen","check","predictor","readBlockTiff","readBlockPng","columns","pixBytes","inbuf","outbuf","inbits","outbits","bytesPerPixel","sum","compArray","bitMask","prevRow","up","upLeft","pa","pb","nextChunk","initialized","hasMoreData","firstDigit","maxDecodeLength","digit","repeatHeader","earlyChange","cachedData","bitsCached","lzwState","nextCode","dictionaryValues","dictionaryLengths","dictionaryPrevCodes","currentSequence","currentSequenceLength","lastCode","estimatedDecodedSize","blockSize","prevCode","decodedLength","currentBufferLength","hasPrev","AnnotationFactory","AnnotationBorderStyle","Annotation","_get","object","property","receiver","desc","getOwnPropertyDescriptor","parent","getter","_obj","_operator_list","idFactory","isRef","createObjId","parameters","LinkAnnotation","TextAnnotation","fieldType","getInheritableProperty","TextWidgetAnnotation","ButtonWidgetAnnotation","ChoiceWidgetAnnotation","WidgetAnnotation","PopupAnnotation","LineAnnotation","SquareAnnotation","CircleAnnotation","PolylineAnnotation","PolygonAnnotation","HighlightAnnotation","UnderlineAnnotation","SquigglyAnnotation","StrikeOutAnnotation","StampAnnotation","FileAttachmentAnnotation","setFlags","setRectangle","setColor","setBorderStyle","setAppearance","annotationFlags","borderStyle","hasAppearance","appearance","rect","rectangle","_hasFlag","AnnotationFlag","INVISIBLE","HIDDEN","NOVIEW","PRINT","dictType","setWidth","setStyle","setDashArray","setHorizontalCornerRadius","setVerticalCornerRadius","appearanceStates","normalAppearanceState","hasPopup","title","stringToPDFString","contents","getAsync","ObjectLoader","load","renderForms","appearanceDict","resourcesPromise","loadResources","getAxialAlignedBoundingBox","getTransformMatrix","beginAnnotation","endAnnotation","_isViewable","_isPrintable","style","AnnotationBorderStyleType","SOLID","dashArray","horizontalCornerRadius","verticalCornerRadius","DASHED","BEVELED","INSET","UNDERLINE","isValid","allZeros","element","radius","_Annotation","annotationType","AnnotationType","WIDGET","fieldName","_constructFieldName","fieldValue","alternativeText","defaultAppearance","fieldResources","Dict","empty","fieldFlags","readOnly","hasFieldFlag","AnnotationFieldFlag","READONLY","loopDict","_WidgetAnnotation","_this3","alignment","textAlignment","maximumLength","multiLine","MULTILINE","comb","COMB","PASSWORD","FILESELECT","_WidgetAnnotation2","_this4","checkBox","RADIO","PUSHBUTTON","radioButton","pushButton","_processCheckBox","_processRadioButton","_processPushButton","buttonValue","fieldParent","fieldParentValue","getKeys","Catalog","parseDestDictionary","destDict","resultObj","_WidgetAnnotation3","_this5","options","option","isOptionArray","exportValue","displayValue","combo","COMBO","multiSelect","MULTISELECT","_Annotation2","_this6","TEXT","_preparePopup","_Annotation3","_this7","LINK","_Annotation4","_this8","POPUP","parentItem","parentSubtype","parentType","parentId","getRaw","viewable","parentFlags","_Annotation5","_this9","LINE","lineCoordinates","_Annotation6","_this10","SQUARE","_Annotation7","_this11","CIRCLE","_Annotation8","_this12","POLYLINE","rawVertices","vertices","_PolylineAnnotation","_this13","POLYGON","_Annotation9","_this14","HIGHLIGHT","_Annotation10","_this15","_Annotation11","_this16","SQUIGGLY","_Annotation12","_this17","STRIKEOUT","_Annotation13","_this18","STAMP","_Annotation14","_this19","FileSpec","FILEATTACHMENT","serializable","JpegImage","JpegError","DNLMarkerError","scanLines","dctZigZag","dctCos1","dctSin1","dctCos3","dctSin3","dctCos6","dctSin6","dctSqrt2","dctSqrt1d2","decodeTransform","colorTransform","buildHuffmanTable","getBlockBufferOffset","blocksPerLine","decodeScan","frame","resetInterval","spectralStart","spectralEnd","successivePrev","successive","parseDNLMarker","mcusPerLine","progressive","bitsData","bitsCount","decodeHuffman","tree","receive","receiveAndExtend","eobrun","successiveACNextValue","successiveACState","decodeMcu","mcu","mcuCol","decodeBlock","decodeFn","componentsLength","huffmanTableDC","blockData","pred","rs","huffmanTableAC","offsetZ","fileMarker","mcuExpected","blocksPerColumn","mcusPerColumn","mcuToRead","findNextFileMarker","invalid","marker","quantizeAndInverse","blockBufferOffset","v1","v2","v3","v4","v5","v6","v7","p2","p3","p4","p5","p6","p7","qt","quantizationTable","buildComponentData","computationBuffer","Int16Array","blockRow","blockCol","currentPos","peekUint16","maxPos","newPos","currentMarker","newMarker","_ref$dnlScanLines","dnlScanLines","readDataBlock","prepareComponents","samplesPerLine","maxH","maxV","blocksPerLineForMcu","blocksBufferSize","jfif","adobe","numSOSMarkers","quantizationTables","huffmanTablesAC","huffmanTablesDC","appData","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesEnd","quantizationTableSpec","tableData","extended","sofScanLines","componentIds","componentId","qId","quantizationId","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","componentIndex","tableSpec","successiveApproximation","processed","nextFileMarker","numComponents","_getLinearizedBlockData","componentScaleX","componentScaleY","blocksPerScanline","xScaleBlockOffset","_isColorConversionNeeded","_convertYccToRgb","Cb","Cr","_convertYcckToRgb","_convertYcckToCmyk","_convertCmykToRgb","getData","forceRGBoutput","rgbData","grayColor","MacExpertEncoding","WinAnsiEncoding","encodingName","nameCache","nameValue","Cmd","cmdCache","cmdValue","nonSerializable","objId","__nonSerializable__","assignXref","newXref","key1","key2","key3","fetchIfRefAsync","fetch","merge","dictArray","mergedDict","keyName","RefSet","put","remove","RefSetCache","putAlias","aliasRef","thisArg","clear","isEOF","isCmd","isRefsEqual","Parser","Linearization","Lexer","_ccitt_stream","_jbig2_stream","_jpx_stream","MAX_ADLER32_LENGTH","computeAdler32","allowStreams","imageCache","refill","buf1","getObj","buf2","tryShift","cipherTransform","makeInlineImage","makeStream","findDefaultInlineStreamEnd","maybeEIPos","followingBytes","findDCTDecodeInlineStreamEnd","markerLength","foundEOI","inlineStreamSkipEI","findASCII85DecodeInlineStreamEnd","findASCIIHexDecodeInlineStreamEnd","dictLength","beginInlineImagePos","filterName","filterZero","imageStream","cacheKey","imageBytes","initialStreamPos","dictBytes","cacheEntry","skipToNextLine","ENDSTREAM_SIGNATURE","skipped","scanBytes","makeFilter","filterArray","paramsArray","xrefStreamStats","streamTypes","StreamType","FLATE","LZW","DCT","JPX","A85","AHX","CCF","CCITTFaxStream","RL","JBIG","knownCommands","specialChars","toHexDigit","peekChar","eNotation","divideBy","baseValue","powerValue","powerValueSign","currentDigit","getString","numParen","charBuffered","getName","previousCh","getHexString","secondDigit","isFirstHex","knownCommandFound","possibleCommand","getInt","allowZeroValue","linDict","obj1","obj2","obj3","hintsLength","getHints","objectNumberFirst","endFirst","mainXRefEntriesOffset","pageFirst","XRef","_parser","_crypto","pageFactory","catDict","getCatalogObj","fontCache","builtInCMapCache","pageKidsCountCache","pagePromises","metadata","streamRef","stringToUTF8String","toplevelPagesDict","pagesObj","documentOutline","readDocumentOutline","root","blackColor","outlineDict","outlineItem","unsafeUrl","newWindow","destinations","fetchDestination","nameTreeRef","nameDictionaryRef","dests","NameTree","getAll","getDestination","destinationId","pageLabels","readPageLabels","prefix","nums","NumberTree","currentLabel","labelDict","st","toRoman","baseCharCode","letterIndex","character","charBuf","pageMode","attachments","fs","javaScript","appendIfJavaScriptDict","jsDict","js","openactionDict","actionType","action","promises","translatedFonts","translated","getPageDict","createPage","nodesToVisit","currentPageIndex","currentNode","fetchAsync","kids","last","pageRef","kidRef","parentRef","kidPromises","kid","pagesBeforeRef","actionName","addDefaultProtocolToUrl","urlDict","remoteDest","baseUrl","JSON","stringify","namedAction","jsAction","jsUrl","RegExp","tryConvertUrlEncoding","xrefstms","fontTypes","setStartXRef","startXRef","startXRefQueue","trailerDict","indexObjects","readXRef","trailer","processXRefTable","tableState","entryNum","streamPos","parserBuf1","parserBuf2","readXRefTable","firstEntryNum","free","uncompressed","processXRefStream","streamParameters","byteWidths","streamState","entryRanges","readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","LF","CR","LT","readToken","skipUntil","objRegExp","endobjRegExp","nestedObjRegExp","trailerBytes","startxrefBytes","objBytes","xrefBytes","trailers","xrefStms","checkPos","tokenStr","objToken","xrefTagOffset","startXRefParsedCache","getEntry","xrefEntry","fetchUncompressed","fetchCompressed","substring","tableOffset","tryFetch","NameOrNumberTree","_type","kidsOrEntries","loopCount","limits","currentKey","description","contentAvailable","pickPlatformItem","filename","_filename","contentRef","fileObj","mayHaveChildren","addChildren","dictKeys","rawValue","refSet","_walk","nodesToRevisit","pendingRequests","foundMissingData","_ii2","CMapFactory","IdentityCMap","CMap","BUILT_IN_CMAPS","builtInCMap","codespaceRanges","numCodespaceRanges","useCMap","addCodespaceRange","mapCidRange","dstLow","mapBfRange","lastByte","mapBfRangeToArray","mapOne","dst","getMap","codespaceRangesLen","codespaceRange","isIdentityCMap","BinaryCMapReader","hexToInt","hexToStr","addHex","incHex","MAX_NUM_SIZE","MAX_ENCODED_NUM_SIZE","BinaryCMapStream","readByte","readSigned","readHex","readHexNumber","sp","readHexSigned","readString","process","sequence","dataSize","subitemsCount","strToInt","expectString","expectInt","parseBfChar","parseBfRange","parseCidChar","parseCidRange","parseCodespaceRange","parseWMode","parseCMapName","parseCMap","fetchBuiltInCMap","previous","embeddedUseCMap","objLoop","extendCMap","createBuiltInCMap","newCMap","useCodespaceRanges","cMapData","compressionType","CMapCompressionType","BINARY","NONE","parsedCMap","_jpg","jpegImage","decodeArr","decodeArrLength","transformNeeded","maxValue","createObjectURL","ccittFaxDecoder","EndOfLine","EncodedByteAlign","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","eoline","rows","eoblock","codingLine","refLine","codingPos","nextLine2D","inputBits","inputBuf","outputBits","rowsDone","_lookBits","_eatBits","refPos","blackPixels","code3","_getTwoDimCode","_addPixels","_getBlackCode","_getWhiteCode","_addPixelsNeg","gotEOL","a1","_findTableCode","limitValue","PartialEvaluator","_cmap","_fonts","_pattern","_bidi","_metrics","_function","_murmurhash","_image","DefaultPartialEvaluatorOptions","NativeImageDecoding","DECODE","NativeImageDecoder","_ref$forceDataSchema","_ref3$options","cachedCMap","isDecodable","isSupported","TimeSlotManager","checked","endTime","deferred","clone","newOptions","newEvaluator","hasBlendModes","nodes","graphicStates","graphicStatesKeys","bm","xObjects","xObjectsKeys","xObject","xResources","buildFormXObject","xobj","initialState","group","groupOptions","isolated","knockout","groupSubtype","backdrop","beginGroup","paintFormXObjectBegin","paintFormXObjectEnd","endGroup","buildPaintImageXObject","_ref4$isInline","_ref4$forceDisableNat","forceDisableNativeImageDecoder","bitStrideLength","softMask","paintJpegXObject","nativeImageDecoder","imageObj","handleSMask","stateManager","smaskContent","smaskOptions","transferObj","transferFn","transferMap","handleTilingType","patternDict","tilingOpList","resourcesArray","patternResources","tilingPatternIR","handleSetFont","fontArgs","fontRef","loadFont","loadType3Data","TranslatedFont","handleText","isAddToPathSet","textRenderingMode","TextRenderingMode","ADD_TO_PATH_FLAG","fillColorSpace","buildPath","path","setGState","gState","gStateObj","gStateKeys","_loop","normalizeBlendMode","errorFont","fontRes","fontID","translatedPromise","fontCapability","preEvaluatedFont","preEvaluateFont","fontRefIsRef","fontAliases","aliasFontRef","translateFont","translatedFont","fontFile3","lastIndex","constructPath","opArgs","handleColorN","patternName","typeNum","_ref5$initialState","EvalState","xobjs","StateManager","preprocessor","EvaluatorPreprocessor","timeSlotManager","closePendingRestoreOPS","argument","savedStatesDepth","promiseBody","stop","paintXObject","resolveXObject","rejectXObject","fontSize","endInlineImage","showSpacedText","combinedGlyphs","arrLength","arrItem","nextLineShowText","nextLine","nextLineSetSpacingShowText","setWordSpacing","setCharSpacing","setTextRenderingMode","setFillColorSpace","setStrokeColorSpace","strokeColorSpace","setFillColor","setFillRGBColor","setStrokeColor","setStrokeRGBColor","setFillGray","setStrokeGray","setFillCMYKColor","setStrokeCMYKColor","setFillColorN","setStrokeColorN","shadingFill","shadingRes","patternIR","dictName","extGState","curveTo","curveTo2","curveTo3","closePath","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","getTextContent","_ref6$stateManager","_ref6$normalizeWhites","_ref6$combineTextItem","_ref6$seenStyles","seenStyles","TextState","textState","WhitespaceRegexp","textContent","styles","textContentItem","lastAdvanceWidth","lastAdvanceHeight","textAdvanceScale","fakeSpaceMin","Infinity","fakeMultiSpaceMin","fakeMultiSpaceMax","textRunBreakAllowed","SPACE_FACTOR","MULTI_SPACE_FACTOR","MULTI_SPACE_FACTOR_MAX","skipEmptyXObjs","ensureTextContentItem","fontFamily","tsm","textHScale","textRise","glyphHeight","trm","ctm","textMatrix","textLineMatrix","scaleLineX","scaleCtmX","runBidiTransform","textChunk","bidiResult","replaceWhitespace","buildTextContentItem","glyphWidth","NormalizedUnicodes","charSpacing","wordSpacing","addFakeSpaces","tx","ty","translateTextMatrix","fakeSpaces","flushTextContentItem","enqueueChunk","enqueue","ready","advance","fontNameArg","fontSizeArg","setTextRise","setHScale","setLeading","leading","moveText","isSameTextLine","translateTextLineMatrix","setLeadingMoveText","carriageReturn","calcTextLineMatrixAdvance","setTextLineMatrix","IDENTITY_MATRIX","breakTextRun","currentState","xObjStateManager","sinkWrapper","enqueueInvoked","AbortException","gStateFont","extractDataStructures","baseDict","toUnicodePromise","readToUnicode","cidSystemInfo","registry","ordering","supplement","readCidToGidMap","diffEncoding","isNonsymbolicFont","buildToUnicode","_buildSimpleFontToUnicode","ucs2CMapName","ucs2CMap","ucs2","cmapObj","cidToGidStream","glyphsData","glyphID","extractWidths","glyphsVMetrics","baseFontName","getBaseFontMetrics","buildCharCodeToWidth","firstWidth","fontNameWoStyle","getSerifFonts","monospace","lookupName","Metrics","glyphWidths","widthsByGlyphName","uint8array","df","diffLength","diffBuf","diffEntry","maxCharIndex","getSymbolsFonts","baseFont","fontNameStr","baseFontStr","cMapPromise","fontFile","length3","type3Loaded","sent","fontData","parentOperatorList","type3Options","type3Evaluator","loadCharProcsPromise","charProcs","fontResources","charProcKeys","charProcOperatorList","_loop2","glyphStream","stateStack","old","txDiff","tyDiff","denominator","calcRenderMatrix","FILL","getOPMap","setLineWidth","variableArgs","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","eoClip","setCharWidth","setCharWidthAndBounds","beginInlineImage","beginImageData","opMap","nonProcessedArgs","opSpec","argsLength","preprocessCommand","Page","_annotation","_evaluator","LETTER_SIZE_MEDIABOX","isAnnotationRenderable","annotation","printable","pageDict","uniquePrefix","idCounters","_getInheritableProperty","stopWhenFound","mediaBox","cropBox","intersection","intersect","getContentStream","contentStreamPromise","partialEvaluator","pageListPromise","contentStream","transparency","annotationsPromise","pageOpList","annotations","opListPromises","opLists","beginAnnotations","endAnnotations","getAnnotationsData","annotationsData","annotationRefs","annotationRef","find","needle","backwards","lastIndexOf","DocumentInfoValidators","Title","Author","Subject","Keywords","Creator","Producer","CreationDate","ModDate","Trapped","pdfFormatVersion","acroForm","xfa","linearization","checkHeader","parseStartXRef","documentInfo","infoDict","docInfo","PDFFormatVersion","IsAcroFormPresent","IsXFAPresent","validEntries","fileID","idArray"],"mappings":"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AEAi+B,MAAA,KACAj+B,IAAA,OAEAi+B,MAAA,KACAj+B,IAAA,OAEAi+B,MAAA,KACAj+B,IAAA,OAEAi+B,MAAA,KACAj+B,IAAA,QAEAi+B,MAAA,MACAj+B,IAAA,QAEAi+B,MAAA,MACAj+B,IAAA,QAEAi+B,MAAA,MACAj+B,IAAA,QAEAi+B,MAAA,MACAj+B,IAAA,QAEAi+B,MAAA,MACAj+B,IAAA,QAEAi+B,MAAA,MACAj+B,IAAA,QAEAi+B,MAAA,MACAj+B,IAAA,QAEAi+B,MAAA,MACAj+B,IAAA,QAEAi+B,MAAA,MACAj+B,IAAA,QAEAi+B,MAAA,MACAj+B,IAAA,QAEAi+B,MAAA,MACAj+B,IAAA,QAEAi+B,MAAA,MACAj+B,IAAA,QAEAi+B,MAAA,MACAj+B,IAAA,QAEAi+B,MAAA,MACAj+B,IAAA,QAEAi+B,MAAA,MACAj+B,IAAA,QAEAi+B,MAAA,MACAj+B,IAAA,QAEAi+B,MAAA,MACAj+B,IAAA,QAEAi+B,MAAA,MACAj+B,IAAA,QAEAi+B,MAAA,MACAj+B,IAAA,QAEAi+B,MAAA,MACAj+B,IAAA,QAEAi+B,MAAA,MACAj+B,IAAA,QAEAi+B,MAAA,MACAj+B,IAAA,QAEAi+B,MAAA,KACAj+B,IAAA,OAEAi+B,MAAA,KACAj+B,IAAA,OAEAi+B,MAAA,KACAj+B,IAAA,OAEAi+B,MAAA,KACAj+B,IAAA,OAEAi+B,MAAA,KACAj+B,IAAA,OAEAi+B,MAAA,KACAj+B,IAAA,OAEAi+B,MAAA,KACAj+B,IAAA,OAEAi+B,MAAA,KACAj+B,IAAA,OAEAi+B,MAAA,KACAj+B,IAAA,OAEAi+B,MAAA,KACAj+B,IAAA,OAEAi+B,MAAA,KACAj+B,IAAA,OAEAi+B,MAAA,KACAj+B,IAAA,OAEAi+B,MAAA,MACAj+B,IAAA,QAEAi+B,MAAA,MACAj+B,IAAA,QAEAi+B,MAAA,KACAj+B,IAAA,OAEAi+B,MAAA,MACAj+B,IAAA,QAEAi+B,MAAA,MACAj+B,IAAA,QAEAi+B,MAAA,MACAj+B,IAAA,QAEAi+B,MAAA,OACAj+B,IAAA,SAEAi+B,MAAA,OACAj+B,IAAA,SAEAi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,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,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AAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KA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AAA,eACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA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","file":"static/js/35.2c5c5b1b5c9032a2b890.js","sourcesContent":["/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bidi = undefined;\n\nvar _util = require('../shared/util');\n\nvar baseTypes = ['BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S', 'WS', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'ON', 'ES', 'CS', 'ES', 'CS', 'CS', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'CS', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'CS', 'ON', 'ET', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON', 'ON', 'BN', 'ON', 'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON', 'EN', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'];\nvar arabicTypes = ['AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ON', 'ON', 'AL', 'ET', 'ET', 'AL', 'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', '', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'NSM', 'NSM', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'];\nfunction isOdd(i) {\n  return (i & 1) !== 0;\n}\nfunction isEven(i) {\n  return (i & 1) === 0;\n}\nfunction findUnequal(arr, start, value) {\n  for (var j = start, jj = arr.length; j < jj; ++j) {\n    if (arr[j] !== value) {\n      return j;\n    }\n  }\n  return j;\n}\nfunction setValues(arr, start, end, value) {\n  for (var j = start; j < end; ++j) {\n    arr[j] = value;\n  }\n}\nfunction reverseValues(arr, start, end) {\n  for (var i = start, j = end - 1; i < j; ++i, --j) {\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n}\nfunction createBidiText(str, isLTR, vertical) {\n  return {\n    str: str,\n    dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n  };\n}\nvar chars = [];\nvar types = [];\nfunction bidi(str, startLevel, vertical) {\n  var isLTR = true;\n  var strLength = str.length;\n  if (strLength === 0 || vertical) {\n    return createBidiText(str, isLTR, vertical);\n  }\n  chars.length = strLength;\n  types.length = strLength;\n  var numBidi = 0;\n  var i, ii;\n  for (i = 0; i < strLength; ++i) {\n    chars[i] = str.charAt(i);\n    var charCode = str.charCodeAt(i);\n    var charType = 'L';\n    if (charCode <= 0x00ff) {\n      charType = baseTypes[charCode];\n    } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n      charType = 'R';\n    } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n      charType = arabicTypes[charCode & 0xff];\n      if (!charType) {\n        (0, _util.warn)('Bidi: invalid Unicode character ' + charCode.toString(16));\n      }\n    } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n      charType = 'AL';\n    }\n    if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n      numBidi++;\n    }\n    types[i] = charType;\n  }\n  if (numBidi === 0) {\n    isLTR = true;\n    return createBidiText(str, isLTR);\n  }\n  if (startLevel === -1) {\n    if (numBidi / strLength < 0.3) {\n      isLTR = true;\n      startLevel = 0;\n    } else {\n      isLTR = false;\n      startLevel = 1;\n    }\n  }\n  var levels = [];\n  for (i = 0; i < strLength; ++i) {\n    levels[i] = startLevel;\n  }\n  var e = isOdd(startLevel) ? 'R' : 'L';\n  var sor = e;\n  var eor = sor;\n  var lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'NSM') {\n      types[i] = lastType;\n    } else {\n      lastType = types[i];\n    }\n  }\n  lastType = sor;\n  var t;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'AL' ? 'AN' : 'EN';\n    } else if (t === 'R' || t === 'L' || t === 'AL') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'AL') {\n      types[i] = 'R';\n    }\n  }\n  for (i = 1; i < strLength - 1; ++i) {\n    if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n      types[i] = 'EN';\n    }\n    if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n      types[i] = types[i - 1];\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'EN') {\n      var j;\n      for (j = i - 1; j >= 0; --j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n      for (j = i + 1; j < strLength; ++j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n      types[i] = 'ON';\n    }\n  }\n  lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'L' ? 'L' : 'EN';\n    } else if (t === 'R' || t === 'L') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      var end = findUnequal(types, i + 1, 'ON');\n      var before = sor;\n      if (i > 0) {\n        before = types[i - 1];\n      }\n      var after = eor;\n      if (end + 1 < strLength) {\n        after = types[end + 1];\n      }\n      if (before !== 'L') {\n        before = 'R';\n      }\n      if (after !== 'L') {\n        after = 'R';\n      }\n      if (before === after) {\n        setValues(types, i, end, before);\n      }\n      i = end - 1;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      types[i] = e;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (isEven(levels[i])) {\n      if (t === 'R') {\n        levels[i] += 1;\n      } else if (t === 'AN' || t === 'EN') {\n        levels[i] += 2;\n      }\n    } else {\n      if (t === 'L' || t === 'AN' || t === 'EN') {\n        levels[i] += 1;\n      }\n    }\n  }\n  var highestLevel = -1;\n  var lowestOddLevel = 99;\n  var level;\n  for (i = 0, ii = levels.length; i < ii; ++i) {\n    level = levels[i];\n    if (highestLevel < level) {\n      highestLevel = level;\n    }\n    if (lowestOddLevel > level && isOdd(level)) {\n      lowestOddLevel = level;\n    }\n  }\n  for (level = highestLevel; level >= lowestOddLevel; --level) {\n    var start = -1;\n    for (i = 0, ii = levels.length; i < ii; ++i) {\n      if (levels[i] < level) {\n        if (start >= 0) {\n          reverseValues(chars, start, i);\n          start = -1;\n        }\n      } else if (start < 0) {\n        start = i;\n      }\n    }\n    if (start >= 0) {\n      reverseValues(chars, start, levels.length);\n    }\n  }\n  for (i = 0, ii = chars.length; i < ii; ++i) {\n    var ch = chars[i];\n    if (ch === '<' || ch === '>') {\n      chars[i] = '';\n    }\n  }\n  return createBidiText(chars.join(''), isLTR);\n}\nexports.bidi = bidi;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/bidi.js\n// module id = /x83\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateSHA512 = exports.calculateSHA384 = exports.calculateSHA256 = exports.calculateMD5 = exports.PDF20 = exports.PDF17 = exports.CipherTransformFactory = exports.ARCFourCipher = exports.AES256Cipher = exports.AES128Cipher = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _stream = require('./stream');\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ARCFourCipher = function ARCFourCipherClosure() {\n  function ARCFourCipher(key) {\n    this.a = 0;\n    this.b = 0;\n    var s = new Uint8Array(256);\n    var i,\n        j = 0,\n        tmp,\n        keyLength = key.length;\n    for (i = 0; i < 256; ++i) {\n      s[i] = i;\n    }\n    for (i = 0; i < 256; ++i) {\n      tmp = s[i];\n      j = j + tmp + key[i % keyLength] & 0xFF;\n      s[i] = s[j];\n      s[j] = tmp;\n    }\n    this.s = s;\n  }\n  ARCFourCipher.prototype = {\n    encryptBlock: function ARCFourCipher_encryptBlock(data) {\n      var i,\n          n = data.length,\n          tmp,\n          tmp2;\n      var a = this.a,\n          b = this.b,\n          s = this.s;\n      var output = new Uint8Array(n);\n      for (i = 0; i < n; ++i) {\n        a = a + 1 & 0xFF;\n        tmp = s[a];\n        b = b + tmp & 0xFF;\n        tmp2 = s[b];\n        s[a] = tmp2;\n        s[b] = tmp;\n        output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n      }\n      this.a = a;\n      this.b = b;\n      return output;\n    }\n  };\n  ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n  return ARCFourCipher;\n}();\nvar calculateMD5 = function calculateMD5Closure() {\n  var r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n  var k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n  function hash(data, offset, length) {\n    var h0 = 1732584193,\n        h1 = -271733879,\n        h2 = -1732584194,\n        h3 = 271733878;\n    var paddedLength = length + 72 & ~63;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = length << 3 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    var w = new Int32Array(16);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j, i += 4) {\n        w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          f,\n          g;\n      for (j = 0; j < 64; ++j) {\n        if (j < 16) {\n          f = b & c | ~b & d;\n          g = j;\n        } else if (j < 32) {\n          f = d & b | ~d & c;\n          g = 5 * j + 1 & 15;\n        } else if (j < 48) {\n          f = b ^ c ^ d;\n          g = 3 * j + 5 & 15;\n        } else {\n          f = c ^ (b | ~d);\n          g = 7 * j & 15;\n        }\n        var tmp = d,\n            rotateArg = a + f + k[j] + w[g] | 0,\n            rotate = r[j];\n        d = c;\n        c = b;\n        b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n        a = tmp;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n    }\n    return new Uint8Array([h0 & 0xFF, h0 >> 8 & 0xFF, h0 >> 16 & 0xFF, h0 >>> 24 & 0xFF, h1 & 0xFF, h1 >> 8 & 0xFF, h1 >> 16 & 0xFF, h1 >>> 24 & 0xFF, h2 & 0xFF, h2 >> 8 & 0xFF, h2 >> 16 & 0xFF, h2 >>> 24 & 0xFF, h3 & 0xFF, h3 >> 8 & 0xFF, h3 >> 16 & 0xFF, h3 >>> 24 & 0xFF]);\n  }\n  return hash;\n}();\nvar Word64 = function Word64Closure() {\n  function Word64(highInteger, lowInteger) {\n    this.high = highInteger | 0;\n    this.low = lowInteger | 0;\n  }\n  Word64.prototype = {\n    and: function Word64_and(word) {\n      this.high &= word.high;\n      this.low &= word.low;\n    },\n    xor: function Word64_xor(word) {\n      this.high ^= word.high;\n      this.low ^= word.low;\n    },\n    or: function Word64_or(word) {\n      this.high |= word.high;\n      this.low |= word.low;\n    },\n    shiftRight: function Word64_shiftRight(places) {\n      if (places >= 32) {\n        this.low = this.high >>> places - 32 | 0;\n        this.high = 0;\n      } else {\n        this.low = this.low >>> places | this.high << 32 - places;\n        this.high = this.high >>> places | 0;\n      }\n    },\n    shiftLeft: function Word64_shiftLeft(places) {\n      if (places >= 32) {\n        this.high = this.low << places - 32;\n        this.low = 0;\n      } else {\n        this.high = this.high << places | this.low >>> 32 - places;\n        this.low = this.low << places;\n      }\n    },\n    rotateRight: function Word64_rotateRight(places) {\n      var low, high;\n      if (places & 32) {\n        high = this.low;\n        low = this.high;\n      } else {\n        low = this.low;\n        high = this.high;\n      }\n      places &= 31;\n      this.low = low >>> places | high << 32 - places;\n      this.high = high >>> places | low << 32 - places;\n    },\n    not: function Word64_not() {\n      this.high = ~this.high;\n      this.low = ~this.low;\n    },\n    add: function Word64_add(word) {\n      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n      var highAdd = (this.high >>> 0) + (word.high >>> 0);\n      if (lowAdd > 0xFFFFFFFF) {\n        highAdd += 1;\n      }\n      this.low = lowAdd | 0;\n      this.high = highAdd | 0;\n    },\n    copyTo: function Word64_copyTo(bytes, offset) {\n      bytes[offset] = this.high >>> 24 & 0xFF;\n      bytes[offset + 1] = this.high >> 16 & 0xFF;\n      bytes[offset + 2] = this.high >> 8 & 0xFF;\n      bytes[offset + 3] = this.high & 0xFF;\n      bytes[offset + 4] = this.low >>> 24 & 0xFF;\n      bytes[offset + 5] = this.low >> 16 & 0xFF;\n      bytes[offset + 6] = this.low >> 8 & 0xFF;\n      bytes[offset + 7] = this.low & 0xFF;\n    },\n    assign: function Word64_assign(word) {\n      this.high = word.high;\n      this.low = word.low;\n    }\n  };\n  return Word64;\n}();\nvar calculateSHA256 = function calculateSHA256Closure() {\n  function rotr(x, n) {\n    return x >>> n | x << 32 - n;\n  }\n  function ch(x, y, z) {\n    return x & y ^ ~x & z;\n  }\n  function maj(x, y, z) {\n    return x & y ^ x & z ^ y & z;\n  }\n  function sigma(x) {\n    return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n  }\n  function sigmaPrime(x) {\n    return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n  }\n  function littleSigma(x) {\n    return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n  }\n  function littleSigmaPrime(x) {\n    return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n  }\n  var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n  function hash(data, offset, length) {\n    var h0 = 0x6a09e667,\n        h1 = 0xbb67ae85,\n        h2 = 0x3c6ef372,\n        h3 = 0xa54ff53a,\n        h4 = 0x510e527f,\n        h5 = 0x9b05688c,\n        h6 = 0x1f83d9ab,\n        h7 = 0x5be0cd19;\n    var paddedLength = Math.ceil((length + 9) / 64) * 64;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Uint32Array(64);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        i += 4;\n      }\n      for (j = 16; j < 64; ++j) {\n        w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          e = h4,\n          f = h5,\n          g = h6,\n          h = h7,\n          t1,\n          t2;\n      for (j = 0; j < 64; ++j) {\n        t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n        t2 = sigma(a) + maj(a, b, c);\n        h = g;\n        g = f;\n        f = e;\n        e = d + t1 | 0;\n        d = c;\n        c = b;\n        b = a;\n        a = t1 + t2 | 0;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n      h4 = h4 + e | 0;\n      h5 = h5 + f | 0;\n      h6 = h6 + g | 0;\n      h7 = h7 + h | 0;\n    }\n    return new Uint8Array([h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF, h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF]);\n  }\n  return hash;\n}();\nvar calculateSHA512 = function calculateSHA512Closure() {\n  function ch(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.not();\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function maj(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.and(z);\n    result.xor(tmp);\n    tmp.assign(y);\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function sigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(28);\n    tmp.assign(x);\n    tmp.rotateRight(34);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(39);\n    result.xor(tmp);\n  }\n  function sigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(14);\n    tmp.assign(x);\n    tmp.rotateRight(18);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(41);\n    result.xor(tmp);\n  }\n  function littleSigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(1);\n    tmp.assign(x);\n    tmp.rotateRight(8);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(7);\n    result.xor(tmp);\n  }\n  function littleSigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(19);\n    tmp.assign(x);\n    tmp.rotateRight(61);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(6);\n    result.xor(tmp);\n  }\n  var k = [new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd), new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc), new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019), new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118), new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe), new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2), new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1), new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694), new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3), new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65), new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483), new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5), new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210), new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4), new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725), new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70), new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926), new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df), new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8), new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b), new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001), new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30), new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910), new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8), new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53), new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8), new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb), new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3), new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60), new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec), new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9), new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b), new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207), new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178), new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6), new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b), new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493), new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c), new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a), new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\n  function hash(data, offset, length, mode384) {\n    mode384 = !!mode384;\n    var h0, h1, h2, h3, h4, h5, h6, h7;\n    if (!mode384) {\n      h0 = new Word64(0x6a09e667, 0xf3bcc908);\n      h1 = new Word64(0xbb67ae85, 0x84caa73b);\n      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n      h4 = new Word64(0x510e527f, 0xade682d1);\n      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n      h7 = new Word64(0x5be0cd19, 0x137e2179);\n    } else {\n      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n      h1 = new Word64(0x629a292a, 0x367cd507);\n      h2 = new Word64(0x9159015a, 0x3070dd17);\n      h3 = new Word64(0x152fecd8, 0xf70e5939);\n      h4 = new Word64(0x67332667, 0xffc00b31);\n      h5 = new Word64(0x8eb44a87, 0x68581511);\n      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n    }\n    var paddedLength = Math.ceil((length + 17) / 128) * 128;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 16;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Array(80);\n    for (i = 0; i < 80; i++) {\n      w[i] = new Word64(0, 0);\n    }\n    var a = new Word64(0, 0),\n        b = new Word64(0, 0),\n        c = new Word64(0, 0);\n    var d = new Word64(0, 0),\n        e = new Word64(0, 0),\n        f = new Word64(0, 0);\n    var g = new Word64(0, 0),\n        h = new Word64(0, 0);\n    var t1 = new Word64(0, 0),\n        t2 = new Word64(0, 0);\n    var tmp1 = new Word64(0, 0),\n        tmp2 = new Word64(0, 0),\n        tmp3;\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n        i += 8;\n      }\n      for (j = 16; j < 80; ++j) {\n        tmp3 = w[j];\n        littleSigmaPrime(tmp3, w[j - 2], tmp2);\n        tmp3.add(w[j - 7]);\n        littleSigma(tmp1, w[j - 15], tmp2);\n        tmp3.add(tmp1);\n        tmp3.add(w[j - 16]);\n      }\n      a.assign(h0);\n      b.assign(h1);\n      c.assign(h2);\n      d.assign(h3);\n      e.assign(h4);\n      f.assign(h5);\n      g.assign(h6);\n      h.assign(h7);\n      for (j = 0; j < 80; ++j) {\n        t1.assign(h);\n        sigmaPrime(tmp1, e, tmp2);\n        t1.add(tmp1);\n        ch(tmp1, e, f, g, tmp2);\n        t1.add(tmp1);\n        t1.add(k[j]);\n        t1.add(w[j]);\n        sigma(t2, a, tmp2);\n        maj(tmp1, a, b, c, tmp2);\n        t2.add(tmp1);\n        tmp3 = h;\n        h = g;\n        g = f;\n        f = e;\n        d.add(t1);\n        e = d;\n        d = c;\n        c = b;\n        b = a;\n        tmp3.assign(t1);\n        tmp3.add(t2);\n        a = tmp3;\n      }\n      h0.add(a);\n      h1.add(b);\n      h2.add(c);\n      h3.add(d);\n      h4.add(e);\n      h5.add(f);\n      h6.add(g);\n      h7.add(h);\n    }\n    var result;\n    if (!mode384) {\n      result = new Uint8Array(64);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n      h6.copyTo(result, 48);\n      h7.copyTo(result, 56);\n    } else {\n      result = new Uint8Array(48);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n    }\n    return result;\n  }\n  return hash;\n}();\nvar calculateSHA384 = function calculateSHA384Closure() {\n  function hash(data, offset, length) {\n    return calculateSHA512(data, offset, length, true);\n  }\n  return hash;\n}();\nvar NullCipher = function NullCipherClosure() {\n  function NullCipher() {}\n  NullCipher.prototype = {\n    decryptBlock: function NullCipher_decryptBlock(data) {\n      return data;\n    }\n  };\n  return NullCipher;\n}();\n\nvar AESBaseCipher = function () {\n  function AESBaseCipher() {\n    _classCallCheck(this, AESBaseCipher);\n\n    if (this.constructor === AESBaseCipher) {\n      (0, _util.unreachable)('Cannot initialize AESBaseCipher.');\n    }\n    this._s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n    this._inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n    this._mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n    this._mixCol = new Uint8Array(256);\n    for (var i = 0; i < 256; i++) {\n      if (i < 128) {\n        this._mixCol[i] = i << 1;\n      } else {\n        this._mixCol[i] = i << 1 ^ 0x1b;\n      }\n    }\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n\n  _createClass(AESBaseCipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      (0, _util.unreachable)('Cannot call `_expandKey` on the base class');\n    }\n  }, {\n    key: '_decrypt',\n    value: function _decrypt(input, key) {\n      var t = void 0,\n          u = void 0,\n          v = void 0;\n      var state = new Uint8Array(16);\n      state.set(input);\n      for (var j = 0, k = this._keySize; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (var i = this._cyclesOfRepetition - 1; i >= 1; --i) {\n        t = state[13];\n        state[13] = state[9];\n        state[9] = state[5];\n        state[5] = state[1];\n        state[1] = t;\n        t = state[14];\n        u = state[10];\n        state[14] = state[6];\n        state[10] = state[2];\n        state[6] = t;\n        state[2] = u;\n        t = state[15];\n        u = state[11];\n        v = state[7];\n        state[15] = state[3];\n        state[11] = t;\n        state[7] = u;\n        state[3] = v;\n        for (var _j = 0; _j < 16; ++_j) {\n          state[_j] = this._inv_s[state[_j]];\n        }\n        for (var _j2 = 0, _k = i * 16; _j2 < 16; ++_j2, ++_k) {\n          state[_j2] ^= key[_k];\n        }\n        for (var _j3 = 0; _j3 < 16; _j3 += 4) {\n          var s0 = this._mix[state[_j3]];\n          var s1 = this._mix[state[_j3 + 1]];\n          var s2 = this._mix[state[_j3 + 2]];\n          var s3 = this._mix[state[_j3 + 3]];\n          t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n          state[_j3] = t >>> 24 & 0xFF;\n          state[_j3 + 1] = t >> 16 & 0xFF;\n          state[_j3 + 2] = t >> 8 & 0xFF;\n          state[_j3 + 3] = t & 0xFF;\n        }\n      }\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (var _j4 = 0; _j4 < 16; ++_j4) {\n        state[_j4] = this._inv_s[state[_j4]];\n        state[_j4] ^= key[_j4];\n      }\n      return state;\n    }\n  }, {\n    key: '_encrypt',\n    value: function _encrypt(input, key) {\n      var s = this._s;\n      var t = void 0,\n          u = void 0,\n          v = void 0;\n      var state = new Uint8Array(16);\n      state.set(input);\n      for (var j = 0; j < 16; ++j) {\n        state[j] ^= key[j];\n      }\n      for (var i = 1; i < this._cyclesOfRepetition; i++) {\n        for (var _j5 = 0; _j5 < 16; ++_j5) {\n          state[_j5] = s[state[_j5]];\n        }\n        v = state[1];\n        state[1] = state[5];\n        state[5] = state[9];\n        state[9] = state[13];\n        state[13] = v;\n        v = state[2];\n        u = state[6];\n        state[2] = state[10];\n        state[6] = state[14];\n        state[10] = v;\n        state[14] = u;\n        v = state[3];\n        u = state[7];\n        t = state[11];\n        state[3] = state[15];\n        state[7] = v;\n        state[11] = u;\n        state[15] = t;\n        for (var _j6 = 0; _j6 < 16; _j6 += 4) {\n          var s0 = state[_j6 + 0];\n          var s1 = state[_j6 + 1];\n          var s2 = state[_j6 + 2];\n          var s3 = state[_j6 + 3];\n          t = s0 ^ s1 ^ s2 ^ s3;\n          state[_j6 + 0] ^= t ^ this._mixCol[s0 ^ s1];\n          state[_j6 + 1] ^= t ^ this._mixCol[s1 ^ s2];\n          state[_j6 + 2] ^= t ^ this._mixCol[s2 ^ s3];\n          state[_j6 + 3] ^= t ^ this._mixCol[s3 ^ s0];\n        }\n        for (var _j7 = 0, k = i * 16; _j7 < 16; ++_j7, ++k) {\n          state[_j7] ^= key[k];\n        }\n      }\n      for (var _j8 = 0; _j8 < 16; ++_j8) {\n        state[_j8] = s[state[_j8]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (var _j9 = 0, _k2 = this._keySize; _j9 < 16; ++_j9, ++_k2) {\n        state[_j9] ^= key[_k2];\n      }\n      return state;\n    }\n  }, {\n    key: '_decryptBlock2',\n    value: function _decryptBlock2(data, finalize) {\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      var result = [],\n          iv = this.iv;\n      for (var i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        var plain = this._decrypt(buffer, this._key);\n        for (var j = 0; j < 16; ++j) {\n          plain[j] ^= iv[j];\n        }\n        iv = buffer;\n        result.push(plain);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array(0);\n      }\n      var outputLength = 16 * result.length;\n      if (finalize) {\n        var lastBlock = result[result.length - 1];\n        var psLen = lastBlock[15];\n        if (psLen <= 16) {\n          for (var _i = 15, ii = 16 - psLen; _i >= ii; --_i) {\n            if (lastBlock[_i] !== psLen) {\n              psLen = 0;\n              break;\n            }\n          }\n          outputLength -= psLen;\n          result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n        }\n      }\n      var output = new Uint8Array(outputLength);\n      for (var _i2 = 0, _j10 = 0, _ii = result.length; _i2 < _ii; ++_i2, _j10 += 16) {\n        output.set(result[_i2], _j10);\n      }\n      return output;\n    }\n  }, {\n    key: 'decryptBlock',\n    value: function decryptBlock(data, finalize) {\n      var iv = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      if (iv) {\n        this.iv = iv;\n      } else {\n        for (var i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n          buffer[bufferLength] = data[i];\n        }\n        if (bufferLength < 16) {\n          this.bufferLength = bufferLength;\n          return new Uint8Array(0);\n        }\n        this.iv = buffer;\n        data = data.subarray(16);\n      }\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = this._decryptBlock2;\n      return this.decryptBlock(data, finalize);\n    }\n  }, {\n    key: 'encrypt',\n    value: function encrypt(data, iv) {\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      var result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (var i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (var j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = this._encrypt(buffer, this._key);\n        iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array(0);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (var _i3 = 0, _j11 = 0, ii = result.length; _i3 < ii; ++_i3, _j11 += 16) {\n        output.set(result[_i3], _j11);\n      }\n      return output;\n    }\n  }]);\n\n  return AESBaseCipher;\n}();\n\nvar AES128Cipher = function (_AESBaseCipher) {\n  _inherits(AES128Cipher, _AESBaseCipher);\n\n  function AES128Cipher(key) {\n    _classCallCheck(this, AES128Cipher);\n\n    var _this = _possibleConstructorReturn(this, (AES128Cipher.__proto__ || Object.getPrototypeOf(AES128Cipher)).call(this));\n\n    _this._cyclesOfRepetition = 10;\n    _this._keySize = 160;\n    _this._rcon = new Uint8Array([0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d]);\n    _this._key = _this._expandKey(key);\n    return _this;\n  }\n\n  _createClass(AES128Cipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      var b = 176;\n      var s = this._s;\n      var rcon = this._rcon;\n      var result = new Uint8Array(b);\n      result.set(cipherKey);\n      for (var j = 16, i = 1; j < b; ++i) {\n        var t1 = result[j - 3];\n        var t2 = result[j - 2];\n        var t3 = result[j - 1];\n        var t4 = result[j - 4];\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n        t1 = t1 ^ rcon[i];\n        for (var n = 0; n < 4; ++n) {\n          result[j] = t1 ^= result[j - 16];\n          j++;\n          result[j] = t2 ^= result[j - 16];\n          j++;\n          result[j] = t3 ^= result[j - 16];\n          j++;\n          result[j] = t4 ^= result[j - 16];\n          j++;\n        }\n      }\n      return result;\n    }\n  }]);\n\n  return AES128Cipher;\n}(AESBaseCipher);\n\nvar AES256Cipher = function (_AESBaseCipher2) {\n  _inherits(AES256Cipher, _AESBaseCipher2);\n\n  function AES256Cipher(key) {\n    _classCallCheck(this, AES256Cipher);\n\n    var _this2 = _possibleConstructorReturn(this, (AES256Cipher.__proto__ || Object.getPrototypeOf(AES256Cipher)).call(this));\n\n    _this2._cyclesOfRepetition = 14;\n    _this2._keySize = 224;\n    _this2._key = _this2._expandKey(key);\n    return _this2;\n  }\n\n  _createClass(AES256Cipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      var b = 240;\n      var s = this._s;\n      var result = new Uint8Array(b);\n      result.set(cipherKey);\n      var r = 1;\n      var t1 = void 0,\n          t2 = void 0,\n          t3 = void 0,\n          t4 = void 0;\n      for (var j = 32, i = 1; j < b; ++i) {\n        if (j % 32 === 16) {\n          t1 = s[t1];\n          t2 = s[t2];\n          t3 = s[t3];\n          t4 = s[t4];\n        } else if (j % 32 === 0) {\n          t1 = result[j - 3];\n          t2 = result[j - 2];\n          t3 = result[j - 1];\n          t4 = result[j - 4];\n          t1 = s[t1];\n          t2 = s[t2];\n          t3 = s[t3];\n          t4 = s[t4];\n          t1 = t1 ^ r;\n          if ((r <<= 1) >= 256) {\n            r = (r ^ 0x1b) & 0xFF;\n          }\n        }\n        for (var n = 0; n < 4; ++n) {\n          result[j] = t1 ^= result[j - 32];\n          j++;\n          result[j] = t2 ^= result[j - 32];\n          j++;\n          result[j] = t3 ^= result[j - 32];\n          j++;\n          result[j] = t4 ^= result[j - 32];\n          j++;\n        }\n      }\n      return result;\n    }\n  }]);\n\n  return AES256Cipher;\n}(AESBaseCipher);\n\nvar PDF17 = function PDF17Closure() {\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function PDF17() {}\n  PDF17.prototype = {\n    checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF17;\n}();\nvar PDF20 = function PDF20Closure() {\n  function concatArrays(array1, array2) {\n    var t = new Uint8Array(array1.length + array2.length);\n    t.set(array1, 0);\n    t.set(array2, array1.length);\n    return t;\n  }\n  function calculatePDF20Hash(password, input, userBytes) {\n    var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n    var e = [0];\n    var i = 0;\n    while (i < 64 || e[e.length - 1] > i - 32) {\n      var arrayLength = password.length + k.length + userBytes.length;\n      var k1 = new Uint8Array(arrayLength * 64);\n      var array = concatArrays(password, k);\n      array = concatArrays(array, userBytes);\n      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n        k1.set(array, pos);\n      }\n      var cipher = new AES128Cipher(k.subarray(0, 16));\n      e = cipher.encrypt(k1, k.subarray(16, 32));\n      var remainder = 0;\n      for (var z = 0; z < 16; z++) {\n        remainder *= 256 % 3;\n        remainder %= 3;\n        remainder += (e[z] >>> 0) % 3;\n        remainder %= 3;\n      }\n      if (remainder === 0) {\n        k = calculateSHA256(e, 0, e.length);\n      } else if (remainder === 1) {\n        k = calculateSHA384(e, 0, e.length);\n      } else if (remainder === 2) {\n        k = calculateSHA512(e, 0, e.length);\n      }\n      i++;\n    }\n    return k.subarray(0, 32);\n  }\n  function PDF20() {}\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  PDF20.prototype = {\n    hash: function PDF20_hash(password, concatBytes, userBytes) {\n      return calculatePDF20Hash(password, concatBytes, userBytes);\n    },\n    checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculatePDF20Hash(password, hashData, userBytes);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculatePDF20Hash(password, hashData, []);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculatePDF20Hash(password, hashData, userBytes);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculatePDF20Hash(password, hashData, []);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF20;\n}();\nvar CipherTransform = function CipherTransformClosure() {\n  function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n    this.StringCipherConstructor = stringCipherConstructor;\n    this.StreamCipherConstructor = streamCipherConstructor;\n  }\n  CipherTransform.prototype = {\n    createStream: function CipherTransform_createStream(stream, length) {\n      var cipher = new this.StreamCipherConstructor();\n      return new _stream.DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n        return cipher.decryptBlock(data, finalize);\n      });\n    },\n    decryptString: function CipherTransform_decryptString(s) {\n      var cipher = new this.StringCipherConstructor();\n      var data = (0, _util.stringToBytes)(s);\n      data = cipher.decryptBlock(data, true);\n      return (0, _util.bytesToString)(data);\n    }\n  };\n  return CipherTransform;\n}();\nvar CipherTransformFactory = function CipherTransformFactoryClosure() {\n  var defaultPasswordBytes = new Uint8Array([0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41, 0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08, 0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80, 0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\n  function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n    if (password) {\n      var passwordLength = Math.min(127, password.length);\n      password = password.subarray(0, passwordLength);\n    } else {\n      password = [];\n    }\n    var pdfAlgorithm;\n    if (revision === 6) {\n      pdfAlgorithm = new PDF20();\n    } else {\n      pdfAlgorithm = new PDF17();\n    }\n    if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n    } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n    }\n    return null;\n  }\n  function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n    var hashDataSize = 40 + ownerPassword.length + fileId.length;\n    var hashData = new Uint8Array(hashDataSize),\n        i = 0,\n        j,\n        n;\n    if (password) {\n      n = Math.min(32, password.length);\n      for (; i < n; ++i) {\n        hashData[i] = password[i];\n      }\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    for (j = 0, n = ownerPassword.length; j < n; ++j) {\n      hashData[i++] = ownerPassword[j];\n    }\n    hashData[i++] = flags & 0xFF;\n    hashData[i++] = flags >> 8 & 0xFF;\n    hashData[i++] = flags >> 16 & 0xFF;\n    hashData[i++] = flags >>> 24 & 0xFF;\n    for (j = 0, n = fileId.length; j < n; ++j) {\n      hashData[i++] = fileId[j];\n    }\n    if (revision >= 4 && !encryptMetadata) {\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, keyLengthInBytes);\n      }\n    }\n    var encryptionKey = hash.subarray(0, keyLengthInBytes);\n    var cipher, checkData;\n    if (revision >= 3) {\n      for (i = 0; i < 32; ++i) {\n        hashData[i] = defaultPasswordBytes[i];\n      }\n      for (j = 0, n = fileId.length; j < n; ++j) {\n        hashData[i++] = fileId[j];\n      }\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n      n = encryptionKey.length;\n      var derivedKey = new Uint8Array(n),\n          k;\n      for (j = 1; j <= 19; ++j) {\n        for (k = 0; k < n; ++k) {\n          derivedKey[k] = encryptionKey[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        checkData = cipher.encryptBlock(checkData);\n      }\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    } else {\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(defaultPasswordBytes);\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    }\n    return encryptionKey;\n  }\n  function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n    var hashData = new Uint8Array(32),\n        i = 0,\n        j,\n        n;\n    n = Math.min(32, password.length);\n    for (; i < n; ++i) {\n      hashData[i] = password[i];\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, hash.length);\n      }\n    }\n    var cipher, userPassword;\n    if (revision >= 3) {\n      userPassword = ownerPassword;\n      var derivedKey = new Uint8Array(keyLengthInBytes),\n          k;\n      for (j = 19; j >= 0; j--) {\n        for (k = 0; k < keyLengthInBytes; ++k) {\n          derivedKey[k] = hash[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        userPassword = cipher.encryptBlock(userPassword);\n      }\n    } else {\n      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n      userPassword = cipher.encryptBlock(ownerPassword);\n    }\n    return userPassword;\n  }\n  var identityName = _primitives.Name.get('Identity');\n  function CipherTransformFactory(dict, fileId, password) {\n    var filter = dict.get('Filter');\n    if (!(0, _primitives.isName)(filter, 'Standard')) {\n      throw new _util.FormatError('unknown encryption method');\n    }\n    this.dict = dict;\n    var algorithm = dict.get('V');\n    if (!Number.isInteger(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n      throw new _util.FormatError('unsupported encryption algorithm');\n    }\n    this.algorithm = algorithm;\n    var keyLength = dict.get('Length');\n    if (!keyLength) {\n      if (algorithm <= 3) {\n        keyLength = 40;\n      } else {\n        var cfDict = dict.get('CF');\n        var streamCryptoName = dict.get('StmF');\n        if ((0, _primitives.isDict)(cfDict) && (0, _primitives.isName)(streamCryptoName)) {\n          cfDict.suppressEncryption = true;\n          var handlerDict = cfDict.get(streamCryptoName.name);\n          keyLength = handlerDict && handlerDict.get('Length') || 128;\n          if (keyLength < 40) {\n            keyLength <<= 3;\n          }\n        }\n      }\n    }\n    if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n      throw new _util.FormatError('invalid key length');\n    }\n    var ownerPassword = (0, _util.stringToBytes)(dict.get('O')).subarray(0, 32);\n    var userPassword = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 32);\n    var flags = dict.get('P');\n    var revision = dict.get('R');\n    var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n    this.encryptMetadata = encryptMetadata;\n    var fileIdBytes = (0, _util.stringToBytes)(fileId);\n    var passwordBytes;\n    if (password) {\n      if (revision === 6) {\n        try {\n          password = (0, _util.utf8StringToString)(password);\n        } catch (ex) {\n          (0, _util.warn)('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n        }\n      }\n      passwordBytes = (0, _util.stringToBytes)(password);\n    }\n    var encryptionKey;\n    if (algorithm !== 5) {\n      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    } else {\n      var ownerValidationSalt = (0, _util.stringToBytes)(dict.get('O')).subarray(32, 40);\n      var ownerKeySalt = (0, _util.stringToBytes)(dict.get('O')).subarray(40, 48);\n      var uBytes = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 48);\n      var userValidationSalt = (0, _util.stringToBytes)(dict.get('U')).subarray(32, 40);\n      var userKeySalt = (0, _util.stringToBytes)(dict.get('U')).subarray(40, 48);\n      var ownerEncryption = (0, _util.stringToBytes)(dict.get('OE'));\n      var userEncryption = (0, _util.stringToBytes)(dict.get('UE'));\n      var perms = (0, _util.stringToBytes)(dict.get('Perms'));\n      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n    }\n    if (!encryptionKey && !password) {\n      throw new _util.PasswordException('No password given', _util.PasswordResponses.NEED_PASSWORD);\n    } else if (!encryptionKey && password) {\n      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    }\n    if (!encryptionKey) {\n      throw new _util.PasswordException('Incorrect Password', _util.PasswordResponses.INCORRECT_PASSWORD);\n    }\n    this.encryptionKey = encryptionKey;\n    if (algorithm >= 4) {\n      var cf = dict.get('CF');\n      if ((0, _primitives.isDict)(cf)) {\n        cf.suppressEncryption = true;\n      }\n      this.cf = cf;\n      this.stmf = dict.get('StmF') || identityName;\n      this.strf = dict.get('StrF') || identityName;\n      this.eff = dict.get('EFF') || this.stmf;\n    }\n  }\n  function buildObjectKey(num, gen, encryptionKey, isAes) {\n    var key = new Uint8Array(encryptionKey.length + 9),\n        i,\n        n;\n    for (i = 0, n = encryptionKey.length; i < n; ++i) {\n      key[i] = encryptionKey[i];\n    }\n    key[i++] = num & 0xFF;\n    key[i++] = num >> 8 & 0xFF;\n    key[i++] = num >> 16 & 0xFF;\n    key[i++] = gen & 0xFF;\n    key[i++] = gen >> 8 & 0xFF;\n    if (isAes) {\n      key[i++] = 0x73;\n      key[i++] = 0x41;\n      key[i++] = 0x6C;\n      key[i++] = 0x54;\n    }\n    var hash = calculateMD5(key, 0, i);\n    return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n  }\n  function buildCipherConstructor(cf, name, num, gen, key) {\n    if (!(0, _primitives.isName)(name)) {\n      throw new _util.FormatError('Invalid crypt filter name.');\n    }\n    var cryptFilter = cf.get(name.name);\n    var cfm;\n    if (cryptFilter !== null && cryptFilter !== undefined) {\n      cfm = cryptFilter.get('CFM');\n    }\n    if (!cfm || cfm.name === 'None') {\n      return function cipherTransformFactoryBuildCipherConstructorNone() {\n        return new NullCipher();\n      };\n    }\n    if (cfm.name === 'V2') {\n      return function cipherTransformFactoryBuildCipherConstructorV2() {\n        return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n      };\n    }\n    if (cfm.name === 'AESV2') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n        return new AES128Cipher(buildObjectKey(num, gen, key, true));\n      };\n    }\n    if (cfm.name === 'AESV3') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n        return new AES256Cipher(key);\n      };\n    }\n    throw new _util.FormatError('Unknown crypto method');\n  }\n  CipherTransformFactory.prototype = {\n    createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n      if (this.algorithm === 4 || this.algorithm === 5) {\n        return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n      }\n      var key = buildObjectKey(num, gen, this.encryptionKey, false);\n      var cipherConstructor = function buildCipherCipherConstructor() {\n        return new ARCFourCipher(key);\n      };\n      return new CipherTransform(cipherConstructor, cipherConstructor);\n    }\n  };\n  return CipherTransformFactory;\n}();\nexports.AES128Cipher = AES128Cipher;\nexports.AES256Cipher = AES256Cipher;\nexports.ARCFourCipher = ARCFourCipher;\nexports.CipherTransformFactory = CipherTransformFactory;\nexports.PDF17 = PDF17;\nexports.PDF20 = PDF20;\nexports.calculateMD5 = calculateMD5;\nexports.calculateSHA256 = calculateSHA256;\nexports.calculateSHA384 = calculateSHA384;\nexports.calculateSHA512 = calculateSHA512;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/crypto.js\n// module id = 0GQw\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxImage = undefined;\n\nvar _util = require('../shared/util');\n\nvar _arithmetic_decoder = require('./arithmetic_decoder');\n\nvar JpxError = function JpxErrorClosure() {\n  function JpxError(msg) {\n    this.message = 'JPX error: ' + msg;\n  }\n  JpxError.prototype = new Error();\n  JpxError.prototype.name = 'JpxError';\n  JpxError.constructor = JpxError;\n  return JpxError;\n}();\nvar JpxImage = function JpxImageClosure() {\n  var SubbandsGainLog2 = {\n    'LL': 0,\n    'LH': 1,\n    'HL': 1,\n    'HH': 2\n  };\n  function JpxImage() {\n    this.failOnCorruptedImage = false;\n  }\n  JpxImage.prototype = {\n    parse: function JpxImage_parse(data) {\n      var head = (0, _util.readUint16)(data, 0);\n      if (head === 0xFF4F) {\n        this.parseCodestream(data, 0, data.length);\n        return;\n      }\n      var position = 0,\n          length = data.length;\n      while (position < length) {\n        var headerSize = 8;\n        var lbox = (0, _util.readUint32)(data, position);\n        var tbox = (0, _util.readUint32)(data, position + 4);\n        position += headerSize;\n        if (lbox === 1) {\n          lbox = (0, _util.readUint32)(data, position) * 4294967296 + (0, _util.readUint32)(data, position + 4);\n          position += 8;\n          headerSize += 8;\n        }\n        if (lbox === 0) {\n          lbox = length - position + headerSize;\n        }\n        if (lbox < headerSize) {\n          throw new JpxError('Invalid box field size');\n        }\n        var dataLength = lbox - headerSize;\n        var jumpDataLength = true;\n        switch (tbox) {\n          case 0x6A703268:\n            jumpDataLength = false;\n            break;\n          case 0x636F6C72:\n            var method = data[position];\n            if (method === 1) {\n              var colorspace = (0, _util.readUint32)(data, position + 3);\n              switch (colorspace) {\n                case 16:\n                case 17:\n                case 18:\n                  break;\n                default:\n                  (0, _util.warn)('Unknown colorspace ' + colorspace);\n                  break;\n              }\n            } else if (method === 2) {\n              (0, _util.info)('ICC profile not supported');\n            }\n            break;\n          case 0x6A703263:\n            this.parseCodestream(data, position, position + dataLength);\n            break;\n          case 0x6A502020:\n            if ((0, _util.readUint32)(data, position) !== 0x0d0a870a) {\n              (0, _util.warn)('Invalid JP2 signature');\n            }\n            break;\n          case 0x6A501A1A:\n          case 0x66747970:\n          case 0x72726571:\n          case 0x72657320:\n          case 0x69686472:\n            break;\n          default:\n            var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n            (0, _util.warn)('Unsupported header type ' + tbox + ' (' + headerType + ')');\n            break;\n        }\n        if (jumpDataLength) {\n          position += dataLength;\n        }\n      }\n    },\n    parseImageProperties: function JpxImage_parseImageProperties(stream) {\n      var newByte = stream.getByte();\n      while (newByte >= 0) {\n        var oldByte = newByte;\n        newByte = stream.getByte();\n        var code = oldByte << 8 | newByte;\n        if (code === 0xFF51) {\n          stream.skip(4);\n          var Xsiz = stream.getInt32() >>> 0;\n          var Ysiz = stream.getInt32() >>> 0;\n          var XOsiz = stream.getInt32() >>> 0;\n          var YOsiz = stream.getInt32() >>> 0;\n          stream.skip(16);\n          var Csiz = stream.getUint16();\n          this.width = Xsiz - XOsiz;\n          this.height = Ysiz - YOsiz;\n          this.componentsCount = Csiz;\n          this.bitsPerComponent = 8;\n          return;\n        }\n      }\n      throw new JpxError('No size marker found in JPX stream');\n    },\n    parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n      var context = {};\n      var doNotRecover = false;\n      try {\n        var position = start;\n        while (position + 1 < end) {\n          var code = (0, _util.readUint16)(data, position);\n          position += 2;\n          var length = 0,\n              j,\n              sqcd,\n              spqcds,\n              spqcdSize,\n              scalarExpounded,\n              tile;\n          switch (code) {\n            case 0xFF4F:\n              context.mainHeader = true;\n              break;\n            case 0xFFD9:\n              break;\n            case 0xFF51:\n              length = (0, _util.readUint16)(data, position);\n              var siz = {};\n              siz.Xsiz = (0, _util.readUint32)(data, position + 4);\n              siz.Ysiz = (0, _util.readUint32)(data, position + 8);\n              siz.XOsiz = (0, _util.readUint32)(data, position + 12);\n              siz.YOsiz = (0, _util.readUint32)(data, position + 16);\n              siz.XTsiz = (0, _util.readUint32)(data, position + 20);\n              siz.YTsiz = (0, _util.readUint32)(data, position + 24);\n              siz.XTOsiz = (0, _util.readUint32)(data, position + 28);\n              siz.YTOsiz = (0, _util.readUint32)(data, position + 32);\n              var componentsCount = (0, _util.readUint16)(data, position + 36);\n              siz.Csiz = componentsCount;\n              var components = [];\n              j = position + 38;\n              for (var i = 0; i < componentsCount; i++) {\n                var component = {\n                  precision: (data[j] & 0x7F) + 1,\n                  isSigned: !!(data[j] & 0x80),\n                  XRsiz: data[j + 1],\n                  YRsiz: data[j + 2]\n                };\n                j += 3;\n                calculateComponentDimensions(component, siz);\n                components.push(component);\n              }\n              context.SIZ = siz;\n              context.components = components;\n              calculateTileGrids(context, components);\n              context.QCC = [];\n              context.COC = [];\n              break;\n            case 0xFF5C:\n              length = (0, _util.readUint16)(data, position);\n              var qcd = {};\n              j = position + 2;\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcd.noQuantization = spqcdSize === 8;\n              qcd.scalarExpounded = scalarExpounded;\n              qcd.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                var spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcd.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCD = qcd;\n              } else {\n                context.currentTile.QCD = qcd;\n                context.currentTile.QCC = [];\n              }\n              break;\n            case 0xFF5D:\n              length = (0, _util.readUint16)(data, position);\n              var qcc = {};\n              j = position + 2;\n              var cqcc;\n              if (context.SIZ.Csiz < 257) {\n                cqcc = data[j++];\n              } else {\n                cqcc = (0, _util.readUint16)(data, j);\n                j += 2;\n              }\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcc.noQuantization = spqcdSize === 8;\n              qcc.scalarExpounded = scalarExpounded;\n              qcc.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcc.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCC[cqcc] = qcc;\n              } else {\n                context.currentTile.QCC[cqcc] = qcc;\n              }\n              break;\n            case 0xFF52:\n              length = (0, _util.readUint16)(data, position);\n              var cod = {};\n              j = position + 2;\n              var scod = data[j++];\n              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n              cod.sopMarkerUsed = !!(scod & 2);\n              cod.ephMarkerUsed = !!(scod & 4);\n              cod.progressionOrder = data[j++];\n              cod.layersCount = (0, _util.readUint16)(data, j);\n              j += 2;\n              cod.multipleComponentTransform = data[j++];\n              cod.decompositionLevelsCount = data[j++];\n              cod.xcb = (data[j++] & 0xF) + 2;\n              cod.ycb = (data[j++] & 0xF) + 2;\n              var blockStyle = data[j++];\n              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n              cod.resetContextProbabilities = !!(blockStyle & 2);\n              cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n              cod.verticallyStripe = !!(blockStyle & 8);\n              cod.predictableTermination = !!(blockStyle & 16);\n              cod.segmentationSymbolUsed = !!(blockStyle & 32);\n              cod.reversibleTransformation = data[j++];\n              if (cod.entropyCoderWithCustomPrecincts) {\n                var precinctsSizes = [];\n                while (j < length + position) {\n                  var precinctsSize = data[j++];\n                  precinctsSizes.push({\n                    PPx: precinctsSize & 0xF,\n                    PPy: precinctsSize >> 4\n                  });\n                }\n                cod.precinctsSizes = precinctsSizes;\n              }\n              var unsupported = [];\n              if (cod.selectiveArithmeticCodingBypass) {\n                unsupported.push('selectiveArithmeticCodingBypass');\n              }\n              if (cod.resetContextProbabilities) {\n                unsupported.push('resetContextProbabilities');\n              }\n              if (cod.terminationOnEachCodingPass) {\n                unsupported.push('terminationOnEachCodingPass');\n              }\n              if (cod.verticallyStripe) {\n                unsupported.push('verticallyStripe');\n              }\n              if (cod.predictableTermination) {\n                unsupported.push('predictableTermination');\n              }\n              if (unsupported.length > 0) {\n                doNotRecover = true;\n                throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n              }\n              if (context.mainHeader) {\n                context.COD = cod;\n              } else {\n                context.currentTile.COD = cod;\n                context.currentTile.COC = [];\n              }\n              break;\n            case 0xFF90:\n              length = (0, _util.readUint16)(data, position);\n              tile = {};\n              tile.index = (0, _util.readUint16)(data, position + 2);\n              tile.length = (0, _util.readUint32)(data, position + 4);\n              tile.dataEnd = tile.length + position - 2;\n              tile.partIndex = data[position + 8];\n              tile.partsCount = data[position + 9];\n              context.mainHeader = false;\n              if (tile.partIndex === 0) {\n                tile.COD = context.COD;\n                tile.COC = context.COC.slice(0);\n                tile.QCD = context.QCD;\n                tile.QCC = context.QCC.slice(0);\n              }\n              context.currentTile = tile;\n              break;\n            case 0xFF93:\n              tile = context.currentTile;\n              if (tile.partIndex === 0) {\n                initializeTile(context, tile.index);\n                buildPackets(context);\n              }\n              length = tile.dataEnd - position;\n              parseTilePackets(context, data, position, length);\n              break;\n            case 0xFF55:\n            case 0xFF57:\n            case 0xFF58:\n            case 0xFF64:\n              length = (0, _util.readUint16)(data, position);\n              break;\n            case 0xFF53:\n              throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n            default:\n              throw new Error('Unknown codestream code: ' + code.toString(16));\n          }\n          position += length;\n        }\n      } catch (e) {\n        if (doNotRecover || this.failOnCorruptedImage) {\n          throw new JpxError(e.message);\n        } else {\n          (0, _util.warn)('JPX: Trying to recover from: ' + e.message);\n        }\n      }\n      this.tiles = transformComponents(context);\n      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n      this.componentsCount = context.SIZ.Csiz;\n    }\n  };\n  function calculateComponentDimensions(component, siz) {\n    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n    component.width = component.x1 - component.x0;\n    component.height = component.y1 - component.y0;\n  }\n  function calculateTileGrids(context, components) {\n    var siz = context.SIZ;\n    var tile,\n        tiles = [];\n    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n    for (var q = 0; q < numYtiles; q++) {\n      for (var p = 0; p < numXtiles; p++) {\n        tile = {};\n        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n        tile.width = tile.tx1 - tile.tx0;\n        tile.height = tile.ty1 - tile.ty0;\n        tile.components = [];\n        tiles.push(tile);\n      }\n    }\n    context.tiles = tiles;\n    var componentsCount = siz.Csiz;\n    for (var i = 0, ii = componentsCount; i < ii; i++) {\n      var component = components[i];\n      for (var j = 0, jj = tiles.length; j < jj; j++) {\n        var tileComponent = {};\n        tile = tiles[j];\n        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n        tile.components[i] = tileComponent;\n      }\n    }\n  }\n  function getBlocksDimensions(context, component, r) {\n    var codOrCoc = component.codingStyleParameters;\n    var result = {};\n    if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n      result.PPx = 15;\n      result.PPy = 15;\n    } else {\n      result.PPx = codOrCoc.precinctsSizes[r].PPx;\n      result.PPy = codOrCoc.precinctsSizes[r].PPy;\n    }\n    result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n    result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n    return result;\n  }\n  function buildPrecincts(context, resolution, dimensions) {\n    var precinctWidth = 1 << dimensions.PPx;\n    var precinctHeight = 1 << dimensions.PPy;\n    var isZeroRes = resolution.resLevel === 0;\n    var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n    var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n    var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n    var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n    var numprecincts = numprecinctswide * numprecinctshigh;\n    resolution.precinctParameters = {\n      precinctWidth: precinctWidth,\n      precinctHeight: precinctHeight,\n      numprecinctswide: numprecinctswide,\n      numprecinctshigh: numprecinctshigh,\n      numprecincts: numprecincts,\n      precinctWidthInSubband: precinctWidthInSubband,\n      precinctHeightInSubband: precinctHeightInSubband\n    };\n  }\n  function buildCodeblocks(context, subband, dimensions) {\n    var xcb_ = dimensions.xcb_;\n    var ycb_ = dimensions.ycb_;\n    var codeblockWidth = 1 << xcb_;\n    var codeblockHeight = 1 << ycb_;\n    var cbx0 = subband.tbx0 >> xcb_;\n    var cby0 = subband.tby0 >> ycb_;\n    var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n    var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n    var precinctParameters = subband.resolution.precinctParameters;\n    var codeblocks = [];\n    var precincts = [];\n    var i, j, codeblock, precinctNumber;\n    for (j = cby0; j < cby1; j++) {\n      for (i = cbx0; i < cbx1; i++) {\n        codeblock = {\n          cbx: i,\n          cby: j,\n          tbx0: codeblockWidth * i,\n          tby0: codeblockHeight * j,\n          tbx1: codeblockWidth * (i + 1),\n          tby1: codeblockHeight * (j + 1)\n        };\n        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n        var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n        var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n        precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n        codeblock.precinctNumber = precinctNumber;\n        codeblock.subbandType = subband.type;\n        codeblock.Lblock = 3;\n        if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n          continue;\n        }\n        codeblocks.push(codeblock);\n        var precinct = precincts[precinctNumber];\n        if (precinct !== undefined) {\n          if (i < precinct.cbxMin) {\n            precinct.cbxMin = i;\n          } else if (i > precinct.cbxMax) {\n            precinct.cbxMax = i;\n          }\n          if (j < precinct.cbyMin) {\n            precinct.cbxMin = j;\n          } else if (j > precinct.cbyMax) {\n            precinct.cbyMax = j;\n          }\n        } else {\n          precincts[precinctNumber] = precinct = {\n            cbxMin: i,\n            cbyMin: j,\n            cbxMax: i,\n            cbyMax: j\n          };\n        }\n        codeblock.precinct = precinct;\n      }\n    }\n    subband.codeblockParameters = {\n      codeblockWidth: xcb_,\n      codeblockHeight: ycb_,\n      numcodeblockwide: cbx1 - cbx0 + 1,\n      numcodeblockhigh: cby1 - cby0 + 1\n    };\n    subband.codeblocks = codeblocks;\n    subband.precincts = precincts;\n  }\n  function createPacket(resolution, precinctNumber, layerNumber) {\n    var precinctCodeblocks = [];\n    var subbands = resolution.subbands;\n    for (var i = 0, ii = subbands.length; i < ii; i++) {\n      var subband = subbands[i];\n      var codeblocks = subband.codeblocks;\n      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n        var codeblock = codeblocks[j];\n        if (codeblock.precinctNumber !== precinctNumber) {\n          continue;\n        }\n        precinctCodeblocks.push(codeblock);\n      }\n    }\n    return {\n      layerNumber: layerNumber,\n      codeblocks: precinctCodeblocks\n    };\n  }\n  function LayerResolutionComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var l = 0,\n        r = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; l < layersCount; l++) {\n        for (; r <= maxDecompositionLevelsCount; r++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        r = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionLayerComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var r = 0,\n        l = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; l < layersCount; l++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        l = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionPositionComponentLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var l, r, c, p;\n    var maxDecompositionLevelsCount = 0;\n    for (c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n    }\n    var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n      var maxNumPrecincts = 0;\n      for (c = 0; c < componentsCount; ++c) {\n        var resolutions = tile.components[c].resolutions;\n        if (r < resolutions.length) {\n          maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n        }\n      }\n      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n    }\n    l = 0;\n    r = 0;\n    c = 0;\n    p = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; p < maxNumPrecinctsInLevel[r]; p++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            if (p >= numprecincts) {\n              continue;\n            }\n            for (; l < layersCount;) {\n              var packet = createPacket(resolution, p, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          c = 0;\n        }\n        p = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function PositionComponentResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var precinctsIterationSizes = precinctsSizes;\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          c = 0;\n        }\n        px = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ComponentPositionResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; c < componentsCount; ++c) {\n        var component = tile.components[c];\n        var precinctsIterationSizes = precinctsSizes.components[c];\n        var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n          for (; px < precinctsIterationSizes.maxNumWide; px++) {\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          px = 0;\n        }\n        py = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n    var posX = pxIndex * precinctIterationSizes.minWidth;\n    var posY = pyIndex * precinctIterationSizes.minHeight;\n    if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n      return null;\n    }\n    var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n    return posX / sizeInImageScale.height + startPrecinctRowIndex;\n  }\n  function getPrecinctSizesInImageScale(tile) {\n    var componentsCount = tile.components.length;\n    var minWidth = Number.MAX_VALUE;\n    var minHeight = Number.MAX_VALUE;\n    var maxNumWide = 0;\n    var maxNumHigh = 0;\n    var sizePerComponent = new Array(componentsCount);\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var sizePerResolution = new Array(decompositionLevelsCount + 1);\n      var minWidthCurrentComponent = Number.MAX_VALUE;\n      var minHeightCurrentComponent = Number.MAX_VALUE;\n      var maxNumWideCurrentComponent = 0;\n      var maxNumHighCurrentComponent = 0;\n      var scale = 1;\n      for (var r = decompositionLevelsCount; r >= 0; --r) {\n        var resolution = component.resolutions[r];\n        var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n        var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n        minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n        minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n        maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n        maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n        sizePerResolution[r] = {\n          width: widthCurrentResolution,\n          height: heightCurrentResolution\n        };\n        scale <<= 1;\n      }\n      minWidth = Math.min(minWidth, minWidthCurrentComponent);\n      minHeight = Math.min(minHeight, minHeightCurrentComponent);\n      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n      sizePerComponent[c] = {\n        resolutions: sizePerResolution,\n        minWidth: minWidthCurrentComponent,\n        minHeight: minHeightCurrentComponent,\n        maxNumWide: maxNumWideCurrentComponent,\n        maxNumHigh: maxNumHighCurrentComponent\n      };\n    }\n    return {\n      components: sizePerComponent,\n      minWidth: minWidth,\n      minHeight: minHeight,\n      maxNumWide: maxNumWide,\n      maxNumHigh: maxNumHigh\n    };\n  }\n  function buildPackets(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var componentsCount = siz.Csiz;\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var resolutions = [];\n      var subbands = [];\n      for (var r = 0; r <= decompositionLevelsCount; r++) {\n        var blocksDimensions = getBlocksDimensions(context, component, r);\n        var resolution = {};\n        var scale = 1 << decompositionLevelsCount - r;\n        resolution.trx0 = Math.ceil(component.tcx0 / scale);\n        resolution.try0 = Math.ceil(component.tcy0 / scale);\n        resolution.trx1 = Math.ceil(component.tcx1 / scale);\n        resolution.try1 = Math.ceil(component.tcy1 / scale);\n        resolution.resLevel = r;\n        buildPrecincts(context, resolution, blocksDimensions);\n        resolutions.push(resolution);\n        var subband;\n        if (r === 0) {\n          subband = {};\n          subband.type = 'LL';\n          subband.tbx0 = Math.ceil(component.tcx0 / scale);\n          subband.tby0 = Math.ceil(component.tcy0 / scale);\n          subband.tbx1 = Math.ceil(component.tcx1 / scale);\n          subband.tby1 = Math.ceil(component.tcy1 / scale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolution.subbands = [subband];\n        } else {\n          var bscale = 1 << decompositionLevelsCount - r + 1;\n          var resolutionSubbands = [];\n          subband = {};\n          subband.type = 'HL';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'LH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'HH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          resolution.subbands = resolutionSubbands;\n        }\n      }\n      component.resolutions = resolutions;\n      component.subbands = subbands;\n    }\n    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n    switch (progressionOrder) {\n      case 0:\n        tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n        break;\n      case 1:\n        tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n        break;\n      case 2:\n        tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n        break;\n      case 3:\n        tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n        break;\n      case 4:\n        tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n        break;\n      default:\n        throw new JpxError('Unsupported progression order ' + progressionOrder);\n    }\n  }\n  function parseTilePackets(context, data, offset, dataLength) {\n    var position = 0;\n    var buffer,\n        bufferSize = 0,\n        skipNextBit = false;\n    function readBits(count) {\n      while (bufferSize < count) {\n        var b = data[offset + position];\n        position++;\n        if (skipNextBit) {\n          buffer = buffer << 7 | b;\n          bufferSize += 7;\n          skipNextBit = false;\n        } else {\n          buffer = buffer << 8 | b;\n          bufferSize += 8;\n        }\n        if (b === 0xFF) {\n          skipNextBit = true;\n        }\n      }\n      bufferSize -= count;\n      return buffer >>> bufferSize & (1 << count) - 1;\n    }\n    function skipMarkerIfEqual(value) {\n      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n        skipBytes(1);\n        return true;\n      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n        skipBytes(2);\n        return true;\n      }\n      return false;\n    }\n    function skipBytes(count) {\n      position += count;\n    }\n    function alignToByte() {\n      bufferSize = 0;\n      if (skipNextBit) {\n        position++;\n        skipNextBit = false;\n      }\n    }\n    function readCodingpasses() {\n      if (readBits(1) === 0) {\n        return 1;\n      }\n      if (readBits(1) === 0) {\n        return 2;\n      }\n      var value = readBits(2);\n      if (value < 3) {\n        return value + 3;\n      }\n      value = readBits(5);\n      if (value < 31) {\n        return value + 6;\n      }\n      value = readBits(7);\n      return value + 37;\n    }\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var sopMarkerUsed = context.COD.sopMarkerUsed;\n    var ephMarkerUsed = context.COD.ephMarkerUsed;\n    var packetsIterator = tile.packetsIterator;\n    while (position < dataLength) {\n      alignToByte();\n      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n        skipBytes(4);\n      }\n      var packet = packetsIterator.nextPacket();\n      if (!readBits(1)) {\n        continue;\n      }\n      var layerNumber = packet.layerNumber;\n      var queue = [],\n          codeblock;\n      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n        codeblock = packet.codeblocks[i];\n        var precinct = codeblock.precinct;\n        var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n        var codeblockRow = codeblock.cby - precinct.cbyMin;\n        var codeblockIncluded = false;\n        var firstTimeInclusion = false;\n        var valueReady;\n        if (codeblock['included'] !== undefined) {\n          codeblockIncluded = !!readBits(1);\n        } else {\n          precinct = codeblock.precinct;\n          var inclusionTree, zeroBitPlanesTree;\n          if (precinct['inclusionTree'] !== undefined) {\n            inclusionTree = precinct.inclusionTree;\n          } else {\n            var width = precinct.cbxMax - precinct.cbxMin + 1;\n            var height = precinct.cbyMax - precinct.cbyMin + 1;\n            inclusionTree = new InclusionTree(width, height, layerNumber);\n            zeroBitPlanesTree = new TagTree(width, height);\n            precinct.inclusionTree = inclusionTree;\n            precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n          }\n          if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n            while (true) {\n              if (readBits(1)) {\n                valueReady = !inclusionTree.nextLevel();\n                if (valueReady) {\n                  codeblock.included = true;\n                  codeblockIncluded = firstTimeInclusion = true;\n                  break;\n                }\n              } else {\n                inclusionTree.incrementValue(layerNumber);\n                break;\n              }\n            }\n          }\n        }\n        if (!codeblockIncluded) {\n          continue;\n        }\n        if (firstTimeInclusion) {\n          zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n          zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n          while (true) {\n            if (readBits(1)) {\n              valueReady = !zeroBitPlanesTree.nextLevel();\n              if (valueReady) {\n                break;\n              }\n            } else {\n              zeroBitPlanesTree.incrementValue();\n            }\n          }\n          codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n        }\n        var codingpasses = readCodingpasses();\n        while (readBits(1)) {\n          codeblock.Lblock++;\n        }\n        var codingpassesLog2 = (0, _util.log2)(codingpasses);\n        var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n        var codedDataLength = readBits(bits);\n        queue.push({\n          codeblock: codeblock,\n          codingpasses: codingpasses,\n          dataLength: codedDataLength\n        });\n      }\n      alignToByte();\n      if (ephMarkerUsed) {\n        skipMarkerIfEqual(0x92);\n      }\n      while (queue.length > 0) {\n        var packetItem = queue.shift();\n        codeblock = packetItem.codeblock;\n        if (codeblock['data'] === undefined) {\n          codeblock.data = [];\n        }\n        codeblock.data.push({\n          data: data,\n          start: offset + position,\n          end: offset + position + packetItem.dataLength,\n          codingpasses: packetItem.codingpasses\n        });\n        position += packetItem.dataLength;\n      }\n    }\n    return position;\n  }\n  function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n    var x0 = subband.tbx0;\n    var y0 = subband.tby0;\n    var width = subband.tbx1 - subband.tbx0;\n    var codeblocks = subband.codeblocks;\n    var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n    var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n      var codeblock = codeblocks[i];\n      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n      if (blockWidth === 0 || blockHeight === 0) {\n        continue;\n      }\n      if (codeblock['data'] === undefined) {\n        continue;\n      }\n      var bitModel, currentCodingpassType;\n      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n      currentCodingpassType = 2;\n      var data = codeblock.data,\n          totalLength = 0,\n          codingpasses = 0;\n      var j, jj, dataItem;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        totalLength += dataItem.end - dataItem.start;\n        codingpasses += dataItem.codingpasses;\n      }\n      var encodedData = new Uint8Array(totalLength);\n      var position = 0;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n        encodedData.set(chunk, position);\n        position += chunk.length;\n      }\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(encodedData, 0, totalLength);\n      bitModel.setDecoder(decoder);\n      for (j = 0; j < codingpasses; j++) {\n        switch (currentCodingpassType) {\n          case 0:\n            bitModel.runSignificancePropagationPass();\n            break;\n          case 1:\n            bitModel.runMagnitudeRefinementPass();\n            break;\n          case 2:\n            bitModel.runCleanupPass();\n            if (segmentationSymbolUsed) {\n              bitModel.checkSegmentationSymbol();\n            }\n            break;\n        }\n        currentCodingpassType = (currentCodingpassType + 1) % 3;\n      }\n      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n      var sign = bitModel.coefficentsSign;\n      var magnitude = bitModel.coefficentsMagnitude;\n      var bitsDecoded = bitModel.bitsDecoded;\n      var magnitudeCorrection = reversible ? 0 : 0.5;\n      var k, n, nb;\n      position = 0;\n      var interleave = subband.type !== 'LL';\n      for (j = 0; j < blockHeight; j++) {\n        var row = offset / width | 0;\n        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n        for (k = 0; k < blockWidth; k++) {\n          n = magnitude[position];\n          if (n !== 0) {\n            n = (n + magnitudeCorrection) * delta;\n            if (sign[position] !== 0) {\n              n = -n;\n            }\n            nb = bitsDecoded[position];\n            var pos = interleave ? levelOffset + (offset << 1) : offset;\n            if (reversible && nb >= mb) {\n              coefficients[pos] = n;\n            } else {\n              coefficients[pos] = n * (1 << mb - nb);\n            }\n          }\n          offset++;\n          position++;\n        }\n        offset += width - blockWidth;\n      }\n    }\n  }\n  function transformTile(context, tile, c) {\n    var component = tile.components[c];\n    var codingStyleParameters = component.codingStyleParameters;\n    var quantizationParameters = component.quantizationParameters;\n    var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n    var spqcds = quantizationParameters.SPqcds;\n    var scalarExpounded = quantizationParameters.scalarExpounded;\n    var guardBits = quantizationParameters.guardBits;\n    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n    var precision = context.components[c].precision;\n    var reversible = codingStyleParameters.reversibleTransformation;\n    var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n    var subbandCoefficients = [];\n    var b = 0;\n    for (var i = 0; i <= decompositionLevelsCount; i++) {\n      var resolution = component.resolutions[i];\n      var width = resolution.trx1 - resolution.trx0;\n      var height = resolution.try1 - resolution.try0;\n      var coefficients = new Float32Array(width * height);\n      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n        var mu, epsilon;\n        if (!scalarExpounded) {\n          mu = spqcds[0].mu;\n          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n        } else {\n          mu = spqcds[b].mu;\n          epsilon = spqcds[b].epsilon;\n          b++;\n        }\n        var subband = resolution.subbands[j];\n        var gainLog2 = SubbandsGainLog2[subband.type];\n        var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n        var mb = guardBits + epsilon - 1;\n        copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n      }\n      subbandCoefficients.push({\n        width: width,\n        height: height,\n        items: coefficients\n      });\n    }\n    var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n    return {\n      left: component.tcx0,\n      top: component.tcy0,\n      width: result.width,\n      height: result.height,\n      items: result.items\n    };\n  }\n  function transformComponents(context) {\n    var siz = context.SIZ;\n    var components = context.components;\n    var componentsCount = siz.Csiz;\n    var resultImages = [];\n    for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n      var tile = context.tiles[i];\n      var transformedTiles = [];\n      var c;\n      for (c = 0; c < componentsCount; c++) {\n        transformedTiles[c] = transformTile(context, tile, c);\n      }\n      var tile0 = transformedTiles[0];\n      var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n      var result = {\n        left: tile0.left,\n        top: tile0.top,\n        width: tile0.width,\n        height: tile0.height,\n        items: out\n      };\n      var shift, offset;\n      var pos = 0,\n          j,\n          jj,\n          y0,\n          y1,\n          y2;\n      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n        var fourComponents = componentsCount === 4;\n        var y0items = transformedTiles[0].items;\n        var y1items = transformedTiles[1].items;\n        var y2items = transformedTiles[2].items;\n        var y3items = fourComponents ? transformedTiles[3].items : null;\n        shift = components[0].precision - 8;\n        offset = (128 << shift) + 0.5;\n        var component0 = tile.components[0];\n        var alpha01 = componentsCount - 3;\n        jj = y0items.length;\n        if (!component0.codingStyleParameters.reversibleTransformation) {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            out[pos++] = y0 + 1.402 * y2 >> shift;\n            out[pos++] = y0 - 0.34413 * y1 - 0.71414 * y2 >> shift;\n            out[pos++] = y0 + 1.772 * y1 >> shift;\n          }\n        } else {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            var g = y0 - (y2 + y1 >> 2);\n            out[pos++] = g + y2 >> shift;\n            out[pos++] = g >> shift;\n            out[pos++] = g + y1 >> shift;\n          }\n        }\n        if (fourComponents) {\n          for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n            out[pos] = y3items[j] + offset >> shift;\n          }\n        }\n      } else {\n        for (c = 0; c < componentsCount; c++) {\n          var items = transformedTiles[c].items;\n          shift = components[c].precision - 8;\n          offset = (128 << shift) + 0.5;\n          for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n            out[pos] = items[j] + offset >> shift;\n            pos += componentsCount;\n          }\n        }\n      }\n      resultImages.push(result);\n    }\n    return resultImages;\n  }\n  function initializeTile(context, tileIndex) {\n    var siz = context.SIZ;\n    var componentsCount = siz.Csiz;\n    var tile = context.tiles[tileIndex];\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n      component.quantizationParameters = qcdOrQcc;\n      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n      component.codingStyleParameters = codOrCoc;\n    }\n    tile.codingStyleDefaultParameters = context.currentTile.COD;\n  }\n  var TagTree = function TagTreeClosure() {\n    function TagTree(width, height) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var level = {\n          width: width,\n          height: height,\n          items: []\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    TagTree.prototype = {\n      reset: function TagTree_reset(i, j) {\n        var currentLevel = 0,\n            value = 0,\n            level;\n        while (currentLevel < this.levels.length) {\n          level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          if (level.items[index] !== undefined) {\n            value = level.items[index];\n            break;\n          }\n          level.index = index;\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        currentLevel--;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        this.currentLevel = currentLevel;\n        delete this.value;\n      },\n      incrementValue: function TagTree_incrementValue() {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index]++;\n      },\n      nextLevel: function TagTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        currentLevel--;\n        if (currentLevel < 0) {\n          this.value = value;\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return TagTree;\n  }();\n  var InclusionTree = function InclusionTreeClosure() {\n    function InclusionTree(width, height, defaultValue) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var items = new Uint8Array(width * height);\n        for (var j = 0, jj = items.length; j < jj; j++) {\n          items[j] = defaultValue;\n        }\n        var level = {\n          width: width,\n          height: height,\n          items: items\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    InclusionTree.prototype = {\n      reset: function InclusionTree_reset(i, j, stopValue) {\n        var currentLevel = 0;\n        while (currentLevel < this.levels.length) {\n          var level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          level.index = index;\n          var value = level.items[index];\n          if (value === 0xFF) {\n            break;\n          }\n          if (value > stopValue) {\n            this.currentLevel = currentLevel;\n            this.propagateValues();\n            return false;\n          }\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        this.currentLevel = currentLevel - 1;\n        return true;\n      },\n      incrementValue: function InclusionTree_incrementValue(stopValue) {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index] = stopValue + 1;\n        this.propagateValues();\n      },\n      propagateValues: function InclusionTree_propagateValues() {\n        var levelIndex = this.currentLevel;\n        var level = this.levels[levelIndex];\n        var currentValue = level.items[level.index];\n        while (--levelIndex >= 0) {\n          level = this.levels[levelIndex];\n          level.items[level.index] = currentValue;\n        }\n      },\n      nextLevel: function InclusionTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        level.items[level.index] = 0xFF;\n        currentLevel--;\n        if (currentLevel < 0) {\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return InclusionTree;\n  }();\n  var BitModel = function BitModelClosure() {\n    var UNIFORM_CONTEXT = 17;\n    var RUNLENGTH_CONTEXT = 18;\n    var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]);\n    var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);\n    var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);\n    function BitModel(width, height, subband, zeroBitPlanes, mb) {\n      this.width = width;\n      this.height = height;\n      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n      var coefficientCount = width * height;\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\n      this.coefficentsSign = new Uint8Array(coefficientCount);\n      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n      this.processingFlags = new Uint8Array(coefficientCount);\n      var bitsDecoded = new Uint8Array(coefficientCount);\n      if (zeroBitPlanes !== 0) {\n        for (var i = 0; i < coefficientCount; i++) {\n          bitsDecoded[i] = zeroBitPlanes;\n        }\n      }\n      this.bitsDecoded = bitsDecoded;\n      this.reset();\n    }\n    BitModel.prototype = {\n      setDecoder: function BitModel_setDecoder(decoder) {\n        this.decoder = decoder;\n      },\n      reset: function BitModel_reset() {\n        this.contexts = new Int8Array(19);\n        this.contexts[0] = 4 << 1 | 0;\n        this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n        this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n      },\n      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n        var neighborsSignificance = this.neighborsSignificance;\n        var width = this.width,\n            height = this.height;\n        var left = column > 0;\n        var right = column + 1 < width;\n        var i;\n        if (row > 0) {\n          i = index - width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (row + 1 < height) {\n          i = index + width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (left) {\n          neighborsSignificance[index - 1] += 0x01;\n        }\n        if (right) {\n          neighborsSignificance[index + 1] += 0x01;\n        }\n        neighborsSignificance[index] |= 0x80;\n      },\n      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var neighborsSignificance = this.neighborsSignificance;\n        var processingFlags = this.processingFlags;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processedInverseMask = ~1;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        for (var i0 = 0; i0 < height; i0 += 4) {\n          for (var j = 0; j < width; j++) {\n            var index = i0 * width + j;\n            for (var i1 = 0; i1 < 4; i1++, index += width) {\n              var i = i0 + i1;\n              if (i >= height) {\n                break;\n              }\n              processingFlags[index] &= processedInverseMask;\n              if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision) {\n                var sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contribution, sign0, sign1, significance1;\n        var contextLabel, decoded;\n        significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n          sign1 = coefficentsSign[index + 1];\n          if (significance1) {\n            sign0 = coefficentsSign[index - 1];\n            contribution = 1 - sign1 - sign0;\n          } else {\n            contribution = 1 - sign1 - sign1;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - 1];\n          contribution = 1 - sign0 - sign0;\n        } else {\n          contribution = 0;\n        }\n        var horizontalContribution = 3 * contribution;\n        significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n          sign1 = coefficentsSign[index + width];\n          if (significance1) {\n            sign0 = coefficentsSign[index - width];\n            contribution = 1 - sign1 - sign0 + horizontalContribution;\n          } else {\n            contribution = 1 - sign1 - sign1 + horizontalContribution;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - width];\n          contribution = 1 - sign0 - sign0 + horizontalContribution;\n        } else {\n          contribution = horizontalContribution;\n        }\n        if (contribution >= 0) {\n          contextLabel = 9 + contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel);\n        } else {\n          contextLabel = 9 - contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n        }\n        return decoded;\n      },\n      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var neighborsSignificance = this.neighborsSignificance;\n        var contexts = this.contexts;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var length = width * height;\n        var width4 = width * 4;\n        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n          indexNext = Math.min(length, index0 + width4);\n          for (var j = 0; j < width; j++) {\n            for (var index = index0 + j; index < indexNext; index += width) {\n              if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = 16;\n              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n                processingFlags[index] ^= firstMagnitudeBitMask;\n                var significance = neighborsSignificance[index] & 127;\n                contextLabel = significance === 0 ? 15 : 14;\n              }\n              var bit = decoder.readBit(contexts, contextLabel);\n              coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      runCleanupPass: function BitModel_runCleanupPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var neighborsSignificance = this.neighborsSignificance;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var oneRowDown = width;\n        var twoRowsDown = width * 2;\n        var threeRowsDown = width * 3;\n        var iNext;\n        for (var i0 = 0; i0 < height; i0 = iNext) {\n          iNext = Math.min(i0 + 4, height);\n          var indexBase = i0 * width;\n          var checkAllEmpty = i0 + 3 < height;\n          for (var j = 0; j < width; j++) {\n            var index0 = indexBase + j;\n            var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n            var i1 = 0,\n                index = index0;\n            var i = i0,\n                sign;\n            if (allEmpty) {\n              var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n              if (!hasSignificantCoefficent) {\n                bitsDecoded[index0]++;\n                bitsDecoded[index0 + oneRowDown]++;\n                bitsDecoded[index0 + twoRowsDown]++;\n                bitsDecoded[index0 + threeRowsDown]++;\n                continue;\n              }\n              i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n              if (i1 !== 0) {\n                i = i0 + i1;\n                index += i1 * width;\n              }\n              sign = this.decodeSignBit(i, j, index);\n              coefficentsSign[index] = sign;\n              coefficentsMagnitude[index] = 1;\n              this.setNeighborsSignificance(i, j, index);\n              processingFlags[index] |= firstMagnitudeBitMask;\n              index = index0;\n              for (var i2 = i0; i2 <= i; i2++, index += width) {\n                bitsDecoded[index]++;\n              }\n              i1++;\n            }\n            for (i = i0 + i1; i < iNext; i++, index += width) {\n              if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision === 1) {\n                sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n            }\n          }\n        }\n      },\n      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n        var decoder = this.decoder;\n        var contexts = this.contexts;\n        var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n        if (symbol !== 0xA) {\n          throw new JpxError('Invalid segmentation symbol');\n        }\n      }\n    };\n    return BitModel;\n  }();\n  var Transform = function TransformClosure() {\n    function Transform() {}\n    Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n      var ll = subbands[0];\n      for (var i = 1, ii = subbands.length; i < ii; i++) {\n        ll = this.iterate(ll, subbands[i], u0, v0);\n      }\n      return ll;\n    };\n    Transform.prototype.extend = function extend(buffer, offset, size) {\n      var i1 = offset - 1,\n          j1 = offset + 1;\n      var i2 = offset + size - 2,\n          j2 = offset + size;\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1] = buffer[j1];\n      buffer[j2] = buffer[i2];\n    };\n    Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n      var llWidth = ll.width,\n          llHeight = ll.height,\n          llItems = ll.items;\n      var width = hl_lh_hh.width;\n      var height = hl_lh_hh.height;\n      var items = hl_lh_hh.items;\n      var i, j, k, l, u, v;\n      for (k = 0, i = 0; i < llHeight; i++) {\n        l = i * 2 * width;\n        for (j = 0; j < llWidth; j++, k++, l += 2) {\n          items[l] = llItems[k];\n        }\n      }\n      llItems = ll.items = null;\n      var bufferPadding = 4;\n      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n      if (width === 1) {\n        if ((u0 & 1) !== 0) {\n          for (v = 0, k = 0; v < height; v++, k += width) {\n            items[k] *= 0.5;\n          }\n        }\n      } else {\n        for (v = 0, k = 0; v < height; v++, k += width) {\n          rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n          this.extend(rowBuffer, bufferPadding, width);\n          this.filter(rowBuffer, bufferPadding, width);\n          items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n        }\n      }\n      var numBuffers = 16;\n      var colBuffers = [];\n      for (i = 0; i < numBuffers; i++) {\n        colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n      }\n      var b,\n          currentBuffer = 0;\n      ll = bufferPadding + height;\n      if (height === 1) {\n        if ((v0 & 1) !== 0) {\n          for (u = 0; u < width; u++) {\n            items[u] *= 0.5;\n          }\n        }\n      } else {\n        for (u = 0; u < width; u++) {\n          if (currentBuffer === 0) {\n            numBuffers = Math.min(width - u, numBuffers);\n            for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                colBuffers[b][l] = items[k + b];\n              }\n            }\n            currentBuffer = numBuffers;\n          }\n          currentBuffer--;\n          var buffer = colBuffers[currentBuffer];\n          this.extend(buffer, bufferPadding, height);\n          this.filter(buffer, bufferPadding, height);\n          if (currentBuffer === 0) {\n            k = u - numBuffers + 1;\n            for (l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                items[k + b] = colBuffers[b][l];\n              }\n            }\n          }\n        }\n      }\n      return {\n        width: width,\n        height: height,\n        items: items\n      };\n    };\n    return Transform;\n  }();\n  var IrreversibleTransform = function IrreversibleTransformClosure() {\n    function IrreversibleTransform() {\n      Transform.call(this);\n    }\n    IrreversibleTransform.prototype = Object.create(Transform.prototype);\n    IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n, current, next;\n      var alpha = -1.586134342059924;\n      var beta = -0.052980118572961;\n      var gamma = 0.882911075530934;\n      var delta = 0.443506852043971;\n      var K = 1.230174104914001;\n      var K_ = 1 / K;\n      j = offset - 3;\n      for (n = len + 4; n--; j += 2) {\n        x[j] *= K_;\n      }\n      j = offset - 2;\n      current = delta * x[j - 1];\n      for (n = len + 3; n--; j += 2) {\n        next = delta * x[j + 1];\n        x[j] = K * x[j] - current - next;\n        if (n--) {\n          j += 2;\n          current = delta * x[j + 1];\n          x[j] = K * x[j] - current - next;\n        } else {\n          break;\n        }\n      }\n      j = offset - 1;\n      current = gamma * x[j - 1];\n      for (n = len + 2; n--; j += 2) {\n        next = gamma * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = gamma * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      j = offset;\n      current = beta * x[j - 1];\n      for (n = len + 1; n--; j += 2) {\n        next = beta * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = beta * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      if (len !== 0) {\n        j = offset + 1;\n        current = alpha * x[j - 1];\n        for (n = len; n--; j += 2) {\n          next = alpha * x[j + 1];\n          x[j] -= current + next;\n          if (n--) {\n            j += 2;\n            current = alpha * x[j + 1];\n            x[j] -= current + next;\n          } else {\n            break;\n          }\n        }\n      }\n    };\n    return IrreversibleTransform;\n  }();\n  var ReversibleTransform = function ReversibleTransformClosure() {\n    function ReversibleTransform() {\n      Transform.call(this);\n    }\n    ReversibleTransform.prototype = Object.create(Transform.prototype);\n    ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n;\n      for (j = offset, n = len + 1; n--; j += 2) {\n        x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n      }\n      for (j = offset + 1, n = len; n--; j += 2) {\n        x[j] += x[j - 1] + x[j + 1] >> 1;\n      }\n    };\n    return ReversibleTransform;\n  }();\n  return JpxImage;\n}();\nexports.JpxImage = JpxImage;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/jpx.js\n// module id = 12M1\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTilingPatternIR = exports.Pattern = undefined;\n\nvar _util = require('../shared/util');\n\nvar _colorspace = require('./colorspace');\n\nvar _primitives = require('./primitives');\n\nvar ShadingType = {\n  FUNCTION_BASED: 1,\n  AXIAL: 2,\n  RADIAL: 3,\n  FREE_FORM_MESH: 4,\n  LATTICE_FORM_MESH: 5,\n  COONS_PATCH_MESH: 6,\n  TENSOR_PATCH_MESH: 7\n};\nvar Pattern = function PatternClosure() {\n  function Pattern() {\n    (0, _util.unreachable)('should not call Pattern constructor');\n  }\n  Pattern.prototype = {\n    getPattern: function Pattern_getPattern(ctx) {\n      (0, _util.unreachable)('Should not call Pattern.getStyle: ' + ctx);\n    }\n  };\n  Pattern.parseShading = function (shading, matrix, xref, res, handler, pdfFunctionFactory) {\n    var dict = (0, _primitives.isStream)(shading) ? shading.dict : shading;\n    var type = dict.get('ShadingType');\n    try {\n      switch (type) {\n        case ShadingType.AXIAL:\n        case ShadingType.RADIAL:\n          return new Shadings.RadialAxial(dict, matrix, xref, res, pdfFunctionFactory);\n        case ShadingType.FREE_FORM_MESH:\n        case ShadingType.LATTICE_FORM_MESH:\n        case ShadingType.COONS_PATCH_MESH:\n        case ShadingType.TENSOR_PATCH_MESH:\n          return new Shadings.Mesh(shading, matrix, xref, res, pdfFunctionFactory);\n        default:\n          throw new _util.FormatError('Unsupported ShadingType: ' + type);\n      }\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n      handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.shadingPattern });\n      (0, _util.warn)(ex);\n      return new Shadings.Dummy();\n    }\n  };\n  return Pattern;\n}();\nvar Shadings = {};\nShadings.SMALL_NUMBER = 1e-6;\nShadings.RadialAxial = function RadialAxialClosure() {\n  function RadialAxial(dict, matrix, xref, res, pdfFunctionFactory) {\n    this.matrix = matrix;\n    this.coordsArr = dict.getArray('Coords');\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    var t0 = 0.0,\n        t1 = 1.0;\n    if (dict.has('Domain')) {\n      var domainArr = dict.getArray('Domain');\n      t0 = domainArr[0];\n      t1 = domainArr[1];\n    }\n    var extendStart = false,\n        extendEnd = false;\n    if (dict.has('Extend')) {\n      var extendArr = dict.getArray('Extend');\n      extendStart = extendArr[0];\n      extendEnd = extendArr[1];\n    }\n    if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n      var x1 = this.coordsArr[0];\n      var y1 = this.coordsArr[1];\n      var r1 = this.coordsArr[2];\n      var x2 = this.coordsArr[3];\n      var y2 = this.coordsArr[4];\n      var r2 = this.coordsArr[5];\n      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n      if (r1 <= r2 + distance && r2 <= r1 + distance) {\n        (0, _util.warn)('Unsupported radial gradient.');\n      }\n    }\n    this.extendStart = extendStart;\n    this.extendEnd = extendEnd;\n    var fnObj = dict.get('Function');\n    var fn = pdfFunctionFactory.createFromArray(fnObj);\n    var diff = t1 - t0;\n    var step = diff / 10;\n    var colorStops = this.colorStops = [];\n    if (t0 >= t1 || step <= 0) {\n      (0, _util.info)('Bad shading domain.');\n      return;\n    }\n    var color = new Float32Array(cs.numComps),\n        ratio = new Float32Array(1);\n    var rgbColor;\n    for (var i = t0; i <= t1; i += step) {\n      ratio[0] = i;\n      fn(ratio, 0, color, 0);\n      rgbColor = cs.getRgb(color, 0);\n      var cssColor = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n      colorStops.push([(i - t0) / diff, cssColor]);\n    }\n    var background = 'transparent';\n    if (dict.has('Background')) {\n      rgbColor = cs.getRgb(dict.get('Background'), 0);\n      background = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n    }\n    if (!extendStart) {\n      colorStops.unshift([0, background]);\n      colorStops[1][0] += Shadings.SMALL_NUMBER;\n    }\n    if (!extendEnd) {\n      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n      colorStops.push([1, background]);\n    }\n    this.colorStops = colorStops;\n  }\n  RadialAxial.prototype = {\n    getIR: function RadialAxial_getIR() {\n      var coordsArr = this.coordsArr;\n      var shadingType = this.shadingType;\n      var type, p0, p1, r0, r1;\n      if (shadingType === ShadingType.AXIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[2], coordsArr[3]];\n        r0 = null;\n        r1 = null;\n        type = 'axial';\n      } else if (shadingType === ShadingType.RADIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[3], coordsArr[4]];\n        r0 = coordsArr[2];\n        r1 = coordsArr[5];\n        type = 'radial';\n      } else {\n        (0, _util.unreachable)('getPattern type unknown: ' + shadingType);\n      }\n      var matrix = this.matrix;\n      if (matrix) {\n        p0 = _util.Util.applyTransform(p0, matrix);\n        p1 = _util.Util.applyTransform(p1, matrix);\n        if (shadingType === ShadingType.RADIAL) {\n          var scale = _util.Util.singularValueDecompose2dScale(matrix);\n          r0 *= scale[0];\n          r1 *= scale[1];\n        }\n      }\n      return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\n    }\n  };\n  return RadialAxial;\n}();\nShadings.Mesh = function MeshClosure() {\n  function MeshStreamReader(stream, context) {\n    this.stream = stream;\n    this.context = context;\n    this.buffer = 0;\n    this.bufferLength = 0;\n    var numComps = context.numComps;\n    this.tmpCompsBuf = new Float32Array(numComps);\n    var csNumComps = context.colorSpace.numComps;\n    this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n  }\n  MeshStreamReader.prototype = {\n    get hasData() {\n      if (this.stream.end) {\n        return this.stream.pos < this.stream.end;\n      }\n      if (this.bufferLength > 0) {\n        return true;\n      }\n      var nextByte = this.stream.getByte();\n      if (nextByte < 0) {\n        return false;\n      }\n      this.buffer = nextByte;\n      this.bufferLength = 8;\n      return true;\n    },\n    readBits: function MeshStreamReader_readBits(n) {\n      var buffer = this.buffer;\n      var bufferLength = this.bufferLength;\n      if (n === 32) {\n        if (bufferLength === 0) {\n          return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n        }\n        buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n        var nextByte = this.stream.getByte();\n        this.buffer = nextByte & (1 << bufferLength) - 1;\n        return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n      }\n      if (n === 8 && bufferLength === 0) {\n        return this.stream.getByte();\n      }\n      while (bufferLength < n) {\n        buffer = buffer << 8 | this.stream.getByte();\n        bufferLength += 8;\n      }\n      bufferLength -= n;\n      this.bufferLength = bufferLength;\n      this.buffer = buffer & (1 << bufferLength) - 1;\n      return buffer >> bufferLength;\n    },\n    align: function MeshStreamReader_align() {\n      this.buffer = 0;\n      this.bufferLength = 0;\n    },\n    readFlag: function MeshStreamReader_readFlag() {\n      return this.readBits(this.context.bitsPerFlag);\n    },\n    readCoordinate: function MeshStreamReader_readCoordinate() {\n      var bitsPerCoordinate = this.context.bitsPerCoordinate;\n      var xi = this.readBits(bitsPerCoordinate);\n      var yi = this.readBits(bitsPerCoordinate);\n      var decode = this.context.decode;\n      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n      return [xi * scale * (decode[1] - decode[0]) + decode[0], yi * scale * (decode[3] - decode[2]) + decode[2]];\n    },\n    readComponents: function MeshStreamReader_readComponents() {\n      var numComps = this.context.numComps;\n      var bitsPerComponent = this.context.bitsPerComponent;\n      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n      var decode = this.context.decode;\n      var components = this.tmpCompsBuf;\n      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n        var ci = this.readBits(bitsPerComponent);\n        components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n      }\n      var color = this.tmpCsCompsBuf;\n      if (this.context.colorFn) {\n        this.context.colorFn(components, 0, color, 0);\n      }\n      return this.context.colorSpace.getRgb(color, 0);\n    }\n  };\n  function decodeType4Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var operators = [];\n    var ps = [];\n    var verticesLeft = 0;\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      if (verticesLeft === 0) {\n        if (!(0 <= f && f <= 2)) {\n          throw new _util.FormatError('Unknown type4 flag');\n        }\n        switch (f) {\n          case 0:\n            verticesLeft = 3;\n            break;\n          case 1:\n            ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n          case 2:\n            ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n        }\n        operators.push(f);\n      }\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n      verticesLeft--;\n      reader.align();\n    }\n    mesh.figures.push({\n      type: 'triangles',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps)\n    });\n  }\n  function decodeType5Shading(mesh, reader, verticesPerRow) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = [];\n    while (reader.hasData) {\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n    }\n    mesh.figures.push({\n      type: 'lattice',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps),\n      verticesPerRow: verticesPerRow\n    });\n  }\n  var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n  var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n  var TRIANGLE_DENSITY = 20;\n  var getB = function getBClosure() {\n    function buildB(count) {\n      var lut = [];\n      for (var i = 0; i <= count; i++) {\n        var t = i / count,\n            t_ = 1 - t;\n        lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_, 3 * t * t * t_, t * t * t]));\n      }\n      return lut;\n    }\n    var cache = [];\n    return function getB(count) {\n      if (!cache[count]) {\n        cache[count] = buildB(count);\n      }\n      return cache[count];\n    };\n  }();\n  function buildFigureFromPatch(mesh, index) {\n    var figure = mesh.figures[index];\n    (0, _util.assert)(figure.type === 'patch', 'Unexpected patch mesh figure');\n    var coords = mesh.coords,\n        colors = mesh.colors;\n    var pi = figure.coords;\n    var ci = figure.colors;\n    var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n    splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n    var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n    splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n    var verticesPerRow = splitXBy + 1;\n    var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var k = 0;\n    var cl = new Uint8Array(3),\n        cr = new Uint8Array(3);\n    var c0 = colors[ci[0]],\n        c1 = colors[ci[1]],\n        c2 = colors[ci[2]],\n        c3 = colors[ci[3]];\n    var bRow = getB(splitYBy),\n        bCol = getB(splitXBy);\n    for (var row = 0; row <= splitYBy; row++) {\n      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n      for (var col = 0; col <= splitXBy; col++, k++) {\n        if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n          continue;\n        }\n        var x = 0,\n            y = 0;\n        var q = 0;\n        for (var i = 0; i <= 3; i++) {\n          for (var j = 0; j <= 3; j++, q++) {\n            var m = bRow[row][i] * bCol[col][j];\n            x += coords[pi[q]][0] * m;\n            y += coords[pi[q]][1] * m;\n          }\n        }\n        figureCoords[k] = coords.length;\n        coords.push([x, y]);\n        figureColors[k] = colors.length;\n        var newColor = new Uint8Array(3);\n        newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n        newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n        newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n        colors.push(newColor);\n      }\n    }\n    figureCoords[0] = pi[0];\n    figureColors[0] = ci[0];\n    figureCoords[splitXBy] = pi[3];\n    figureColors[splitXBy] = ci[1];\n    figureCoords[verticesPerRow * splitYBy] = pi[12];\n    figureColors[verticesPerRow * splitYBy] = ci[2];\n    figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n    figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n    mesh.figures[index] = {\n      type: 'lattice',\n      coords: figureCoords,\n      colors: figureColors,\n      verticesPerRow: verticesPerRow\n    };\n  }\n  function decodeType6Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type6 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      ps[5] = coords.length;\n      coords.push([(-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9, (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9]);\n      ps[6] = coords.length;\n      coords.push([(-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9, (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9]);\n      ps[9] = coords.length;\n      coords.push([(-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9, (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9]);\n      ps[10] = coords.length;\n      coords.push([(-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9, (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9]);\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function decodeType7Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type7 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[9] = pi + 13;\n          ps[10] = pi + 14;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[5] = pi + 12;\n          ps[6] = pi + 15;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function updateBounds(mesh) {\n    var minX = mesh.coords[0][0],\n        minY = mesh.coords[0][1],\n        maxX = minX,\n        maxY = minY;\n    for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n      var x = mesh.coords[i][0],\n          y = mesh.coords[i][1];\n      minX = minX > x ? x : minX;\n      minY = minY > y ? y : minY;\n      maxX = maxX < x ? x : maxX;\n      maxY = maxY < y ? y : maxY;\n    }\n    mesh.bounds = [minX, minY, maxX, maxY];\n  }\n  function packData(mesh) {\n    var i, ii, j, jj;\n    var coords = mesh.coords;\n    var coordsPacked = new Float32Array(coords.length * 2);\n    for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n      var xy = coords[i];\n      coordsPacked[j++] = xy[0];\n      coordsPacked[j++] = xy[1];\n    }\n    mesh.coords = coordsPacked;\n    var colors = mesh.colors;\n    var colorsPacked = new Uint8Array(colors.length * 3);\n    for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n      var c = colors[i];\n      colorsPacked[j++] = c[0];\n      colorsPacked[j++] = c[1];\n      colorsPacked[j++] = c[2];\n    }\n    mesh.colors = colorsPacked;\n    var figures = mesh.figures;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n          ps = figure.coords,\n          cs = figure.colors;\n      for (j = 0, jj = ps.length; j < jj; j++) {\n        ps[j] *= 2;\n        cs[j] *= 3;\n      }\n    }\n  }\n  function Mesh(stream, matrix, xref, res, pdfFunctionFactory) {\n    if (!(0, _primitives.isStream)(stream)) {\n      throw new _util.FormatError('Mesh data is not a stream');\n    }\n    var dict = stream.dict;\n    this.matrix = matrix;\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    this.bbox = dict.getArray('BBox');\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n    var fnObj = dict.get('Function');\n    var fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;\n    this.coords = [];\n    this.colors = [];\n    this.figures = [];\n    var decodeContext = {\n      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n      bitsPerComponent: dict.get('BitsPerComponent'),\n      bitsPerFlag: dict.get('BitsPerFlag'),\n      decode: dict.getArray('Decode'),\n      colorFn: fn,\n      colorSpace: cs,\n      numComps: fn ? 1 : cs.numComps\n    };\n    var reader = new MeshStreamReader(stream, decodeContext);\n    var patchMesh = false;\n    switch (this.shadingType) {\n      case ShadingType.FREE_FORM_MESH:\n        decodeType4Shading(this, reader);\n        break;\n      case ShadingType.LATTICE_FORM_MESH:\n        var verticesPerRow = dict.get('VerticesPerRow') | 0;\n        if (verticesPerRow < 2) {\n          throw new _util.FormatError('Invalid VerticesPerRow');\n        }\n        decodeType5Shading(this, reader, verticesPerRow);\n        break;\n      case ShadingType.COONS_PATCH_MESH:\n        decodeType6Shading(this, reader);\n        patchMesh = true;\n        break;\n      case ShadingType.TENSOR_PATCH_MESH:\n        decodeType7Shading(this, reader);\n        patchMesh = true;\n        break;\n      default:\n        (0, _util.unreachable)('Unsupported mesh type.');\n        break;\n    }\n    if (patchMesh) {\n      updateBounds(this);\n      for (var i = 0, ii = this.figures.length; i < ii; i++) {\n        buildFigureFromPatch(this, i);\n      }\n    }\n    updateBounds(this);\n    packData(this);\n  }\n  Mesh.prototype = {\n    getIR: function Mesh_getIR() {\n      return ['Mesh', this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.matrix, this.bbox, this.background];\n    }\n  };\n  return Mesh;\n}();\nShadings.Dummy = function DummyClosure() {\n  function Dummy() {\n    this.type = 'Pattern';\n  }\n  Dummy.prototype = {\n    getIR: function Dummy_getIR() {\n      return ['Dummy'];\n    }\n  };\n  return Dummy;\n}();\nfunction getTilingPatternIR(operatorList, dict, args) {\n  var matrix = dict.getArray('Matrix');\n  var bbox = _util.Util.normalizeRect(dict.getArray('BBox'));\n  var xstep = dict.get('XStep');\n  var ystep = dict.get('YStep');\n  var paintType = dict.get('PaintType');\n  var tilingType = dict.get('TilingType');\n  if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {\n    throw new _util.FormatError('Invalid getTilingPatternIR /BBox array: [' + bbox + '].');\n  }\n  return ['TilingPattern', args, operatorList, matrix, bbox, xstep, ystep, paintType, tilingType];\n}\nexports.Pattern = Pattern;\nexports.getTilingPatternIR = getTilingPatternIR;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/pattern.js\n// module id = 37AA\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OperatorList = undefined;\n\nvar _util = require('../shared/util');\n\nvar QueueOptimizer = function QueueOptimizerClosure() {\n  function addState(parentState, pattern, checkFn, iterateFn, processFn) {\n    var state = parentState;\n    for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n      var item = pattern[i];\n      state = state[item] || (state[item] = []);\n    }\n    state[pattern[pattern.length - 1]] = {\n      checkFn: checkFn,\n      iterateFn: iterateFn,\n      processFn: processFn\n    };\n  }\n  function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n    var iFirstPIMXO = iFirstSave + 2;\n    for (var i = 0; i < count; i++) {\n      var arg = argsArray[iFirstPIMXO + 4 * i];\n      var imageMask = arg.length === 1 && arg[0];\n      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n        fnArray[iFirstPIMXO + 4 * i] = _util.OPS.paintSolidColorImageMask;\n        continue;\n      }\n      break;\n    }\n    return count - i;\n  }\n  var InitialState = [];\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintInlineImageXObject, _util.OPS.restore], null, function iterateInlineImageGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintInlineImageXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundInlineImageGroup(context, i) {\n    var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n    var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n    var MAX_WIDTH = 1000;\n    var IMAGE_PADDING = 1;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIIXO = curr - 1;\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n    if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var maxX = 0;\n    var map = [],\n        maxLineHeight = 0;\n    var currentX = IMAGE_PADDING,\n        currentY = IMAGE_PADDING;\n    var q;\n    for (q = 0; q < count; q++) {\n      var transform = argsArray[iFirstTransform + (q << 2)];\n      var img = argsArray[iFirstPIIXO + (q << 2)][0];\n      if (currentX + img.width > MAX_WIDTH) {\n        maxX = Math.max(maxX, currentX);\n        currentY += maxLineHeight + 2 * IMAGE_PADDING;\n        currentX = 0;\n        maxLineHeight = 0;\n      }\n      map.push({\n        transform: transform,\n        x: currentX,\n        y: currentY,\n        w: img.width,\n        h: img.height\n      });\n      currentX += img.width + 2 * IMAGE_PADDING;\n      maxLineHeight = Math.max(maxLineHeight, img.height);\n    }\n    var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n    var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n    var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n    var imgRowSize = imgWidth << 2;\n    for (q = 0; q < count; q++) {\n      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n      var rowSize = map[q].w << 2;\n      var dataOffset = 0;\n      var offset = map[q].x + map[q].y * imgWidth << 2;\n      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n      for (var k = 0, kk = map[q].h; k < kk; k++) {\n        imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n        dataOffset += rowSize;\n        offset += imgRowSize;\n      }\n      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n      while (offset >= 0) {\n        data[offset - 4] = data[offset];\n        data[offset - 3] = data[offset + 1];\n        data[offset - 2] = data[offset + 2];\n        data[offset - 1] = data[offset + 3];\n        data[offset + rowSize] = data[offset + rowSize - 4];\n        data[offset + rowSize + 1] = data[offset + rowSize - 3];\n        data[offset + rowSize + 2] = data[offset + rowSize - 2];\n        data[offset + rowSize + 3] = data[offset + rowSize - 1];\n        offset -= imgRowSize;\n      }\n    }\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintInlineImageXObjectGroup);\n    argsArray.splice(iFirstSave, count * 4, [{\n      width: imgWidth,\n      height: imgHeight,\n      kind: _util.ImageKind.RGBA_32BPP,\n      data: imgData\n    }, map]);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageMaskXObject, _util.OPS.restore], null, function iterateImageMaskGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintImageMaskXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundImageMaskGroup(context, i) {\n    var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n    var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n    var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIMXO = curr - 1;\n    var count = Math.floor((i - iFirstSave) / 4);\n    count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n    if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var q;\n    var isSameImage = false;\n    var iTransform, transformArgs;\n    var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n    if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n      isSameImage = true;\n      var firstTransformArg0 = argsArray[iFirstTransform][0];\n      var firstTransformArg3 = argsArray[iFirstTransform][3];\n      iTransform = iFirstTransform + 4;\n      var iPIMXO = iFirstPIMXO + 4;\n      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n        transformArgs = argsArray[iTransform];\n        if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n          if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n            isSameImage = false;\n          } else {\n            count = q;\n          }\n          break;\n        }\n      }\n    }\n    if (isSameImage) {\n      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n      var positions = new Float32Array(count * 2);\n      iTransform = iFirstTransform;\n      for (q = 0; q < count; q++, iTransform += 4) {\n        transformArgs = argsArray[iTransform];\n        positions[q << 1] = transformArgs[4];\n        positions[(q << 1) + 1] = transformArgs[5];\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectRepeat);\n      argsArray.splice(iFirstSave, count * 4, [firstPIMXOArg0, firstTransformArg0, firstTransformArg3, positions]);\n    } else {\n      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n      var images = [];\n      for (q = 0; q < count; q++) {\n        transformArgs = argsArray[iFirstTransform + (q << 2)];\n        var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n        images.push({\n          data: maskParams.data,\n          width: maskParams.width,\n          height: maskParams.height,\n          transform: transformArgs\n        });\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectGroup);\n      argsArray.splice(iFirstSave, count * 4, [images]);\n    }\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageXObject, _util.OPS.restore], function (context) {\n    var argsArray = context.argsArray;\n    var iFirstTransform = context.iCurr - 2;\n    return argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0;\n  }, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        if (fnArray[i] !== _util.OPS.transform) {\n          return false;\n        }\n        var iFirstTransform = context.iCurr - 2;\n        var firstTransformArg0 = argsArray[iFirstTransform][0];\n        var firstTransformArg3 = argsArray[iFirstTransform][3];\n        if (argsArray[i][0] !== firstTransformArg0 || argsArray[i][1] !== 0 || argsArray[i][2] !== 0 || argsArray[i][3] !== firstTransformArg3) {\n          return false;\n        }\n        return true;\n      case 2:\n        if (fnArray[i] !== _util.OPS.paintImageXObject) {\n          return false;\n        }\n        var iFirstPIXO = context.iCurr - 1;\n        var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n        if (argsArray[i][0] !== firstPIXOArg0) {\n          return false;\n        }\n        return true;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function (context, i) {\n    var MIN_IMAGES_IN_BLOCK = 3;\n    var MAX_IMAGES_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIXO = curr - 1;\n    var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n    var firstTransformArg0 = argsArray[iFirstTransform][0];\n    var firstTransformArg3 = argsArray[iFirstTransform][3];\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_BLOCK);\n    if (count < MIN_IMAGES_IN_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var positions = new Float32Array(count * 2);\n    var iTransform = iFirstTransform;\n    for (var q = 0; q < count; q++, iTransform += 4) {\n      var transformArgs = argsArray[iTransform];\n      positions[q << 1] = transformArgs[4];\n      positions[(q << 1) + 1] = transformArgs[5];\n    }\n    var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3, positions];\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageXObjectRepeat);\n    argsArray.splice(iFirstSave, count * 4, args);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.beginText, _util.OPS.setFont, _util.OPS.setTextMatrix, _util.OPS.showText, _util.OPS.endText], null, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 4;\n    var pos = (i - iFirstSave) % 5;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.beginText;\n      case 1:\n        return fnArray[i] === _util.OPS.setFont;\n      case 2:\n        return fnArray[i] === _util.OPS.setTextMatrix;\n      case 3:\n        if (fnArray[i] !== _util.OPS.showText) {\n          return false;\n        }\n        var iFirstSetFont = context.iCurr - 3;\n        var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n        var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n        if (argsArray[i][0] !== firstSetFontArg0 || argsArray[i][1] !== firstSetFontArg1) {\n          return false;\n        }\n        return true;\n      case 4:\n        return fnArray[i] === _util.OPS.endText;\n    }\n  }, function (context, i) {\n    var MIN_CHARS_IN_BLOCK = 3;\n    var MAX_CHARS_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstBeginText = curr - 4;\n    var iFirstSetFont = curr - 3;\n    var iFirstSetTextMatrix = curr - 2;\n    var iFirstShowText = curr - 1;\n    var iFirstEndText = curr;\n    var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n    var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n    var count = Math.min(Math.floor((i - iFirstBeginText) / 5), MAX_CHARS_IN_BLOCK);\n    if (count < MIN_CHARS_IN_BLOCK) {\n      return i - (i - iFirstBeginText) % 5;\n    }\n    var iFirst = iFirstBeginText;\n    if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n      count++;\n      iFirst -= 5;\n    }\n    var iEndText = iFirst + 4;\n    for (var q = 1; q < count; q++) {\n      fnArray.splice(iEndText, 3);\n      argsArray.splice(iEndText, 3);\n      iEndText += 2;\n    }\n    return iEndText + 1;\n  });\n  function QueueOptimizer(queue) {\n    this.queue = queue;\n    this.state = null;\n    this.context = {\n      iCurr: 0,\n      fnArray: queue.fnArray,\n      argsArray: queue.argsArray\n    };\n    this.match = null;\n    this.lastProcessed = 0;\n  }\n  QueueOptimizer.prototype = {\n    _optimize: function _optimize() {\n      var fnArray = this.queue.fnArray;\n      var i = this.lastProcessed,\n          ii = fnArray.length;\n      var state = this.state;\n      var match = this.match;\n      if (!state && !match && i + 1 === ii && !InitialState[fnArray[i]]) {\n        this.lastProcessed = ii;\n        return;\n      }\n      var context = this.context;\n      while (i < ii) {\n        if (match) {\n          var iterate = (0, match.iterateFn)(context, i);\n          if (iterate) {\n            i++;\n            continue;\n          }\n          i = (0, match.processFn)(context, i + 1);\n          ii = fnArray.length;\n          match = null;\n          state = null;\n          if (i >= ii) {\n            break;\n          }\n        }\n        state = (state || InitialState)[fnArray[i]];\n        if (!state || Array.isArray(state)) {\n          i++;\n          continue;\n        }\n        context.iCurr = i;\n        i++;\n        if (state.checkFn && !(0, state.checkFn)(context)) {\n          state = null;\n          continue;\n        }\n        match = state;\n        state = null;\n      }\n      this.state = state;\n      this.match = match;\n      this.lastProcessed = i;\n    },\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n      this._optimize();\n    },\n    flush: function flush() {\n      while (this.match) {\n        var length = this.queue.fnArray.length;\n        this.lastProcessed = (0, this.match.processFn)(this.context, length);\n        this.match = null;\n        this.state = null;\n        this._optimize();\n      }\n    },\n    reset: function reset() {\n      this.state = null;\n      this.match = null;\n      this.lastProcessed = 0;\n    }\n  };\n  return QueueOptimizer;\n}();\nvar NullOptimizer = function NullOptimizerClosure() {\n  function NullOptimizer(queue) {\n    this.queue = queue;\n  }\n  NullOptimizer.prototype = {\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n    },\n    flush: function flush() {}\n  };\n  return NullOptimizer;\n}();\nvar OperatorList = function OperatorListClosure() {\n  var CHUNK_SIZE = 1000;\n  var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n  function getTransfers(queue) {\n    var transfers = [];\n    var fnArray = queue.fnArray,\n        argsArray = queue.argsArray;\n    for (var i = 0, ii = queue.length; i < ii; i++) {\n      switch (fnArray[i]) {\n        case _util.OPS.paintInlineImageXObject:\n        case _util.OPS.paintInlineImageXObjectGroup:\n        case _util.OPS.paintImageMaskXObject:\n          var arg = argsArray[i][0];\n          if (!arg.cached) {\n            transfers.push(arg.data.buffer);\n          }\n          break;\n      }\n    }\n    return transfers;\n  }\n  function OperatorList(intent, messageHandler, pageIndex) {\n    this.messageHandler = messageHandler;\n    this.fnArray = [];\n    this.argsArray = [];\n    if (messageHandler && this.intent !== 'oplist') {\n      this.optimizer = new QueueOptimizer(this);\n    } else {\n      this.optimizer = new NullOptimizer(this);\n    }\n    this.dependencies = Object.create(null);\n    this._totalLength = 0;\n    this.pageIndex = pageIndex;\n    this.intent = intent;\n    this.weight = 0;\n  }\n  OperatorList.prototype = {\n    get length() {\n      return this.argsArray.length;\n    },\n    get totalLength() {\n      return this._totalLength + this.length;\n    },\n    addOp: function addOp(fn, args) {\n      this.optimizer.push(fn, args);\n      this.weight++;\n      if (this.messageHandler) {\n        if (this.weight >= CHUNK_SIZE) {\n          this.flush();\n        } else if (this.weight >= CHUNK_SIZE_ABOUT && (fn === _util.OPS.restore || fn === _util.OPS.endText)) {\n          this.flush();\n        }\n      }\n    },\n    addDependency: function addDependency(dependency) {\n      if (dependency in this.dependencies) {\n        return;\n      }\n      this.dependencies[dependency] = true;\n      this.addOp(_util.OPS.dependency, [dependency]);\n    },\n    addDependencies: function addDependencies(dependencies) {\n      for (var key in dependencies) {\n        this.addDependency(key);\n      }\n    },\n    addOpList: function addOpList(opList) {\n      _util.Util.extendObj(this.dependencies, opList.dependencies);\n      for (var i = 0, ii = opList.length; i < ii; i++) {\n        this.addOp(opList.fnArray[i], opList.argsArray[i]);\n      }\n    },\n    getIR: function getIR() {\n      return {\n        fnArray: this.fnArray,\n        argsArray: this.argsArray,\n        length: this.length\n      };\n    },\n    flush: function flush(lastChunk) {\n      this.optimizer.flush();\n      var transfers = getTransfers(this);\n      var length = this.length;\n      this._totalLength += length;\n      this.messageHandler.send('RenderPageChunk', {\n        operatorList: {\n          fnArray: this.fnArray,\n          argsArray: this.argsArray,\n          lastChunk: lastChunk,\n          length: length\n        },\n        pageIndex: this.pageIndex,\n        intent: this.intent\n      }, transfers);\n      this.dependencies = Object.create(null);\n      this.fnArray.length = 0;\n      this.argsArray.length = 0;\n      this.weight = 0;\n      this.optimizer.reset();\n    }\n  };\n  return OperatorList;\n}();\nexports.OperatorList = OperatorList;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/operator_list.js\n// module id = 3BFl\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\nexports.ISOAdobeCharset = ISOAdobeCharset;\nexports.ExpertCharset = ExpertCharset;\nexports.ExpertSubsetCharset = ExpertSubsetCharset;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/charsets.js\n// module id = 7Cui\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkerMessageHandler = exports.WorkerTask = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _pdf_manager = require('./pdf_manager');\n\nvar _is_node = require('../shared/is_node');\n\nvar _is_node2 = _interopRequireDefault(_is_node);\n\nvar _primitives = require('./primitives');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar WorkerTask = function WorkerTaskClosure() {\n  function WorkerTask(name) {\n    this.name = name;\n    this.terminated = false;\n    this._capability = (0, _util.createPromiseCapability)();\n  }\n  WorkerTask.prototype = {\n    get finished() {\n      return this._capability.promise;\n    },\n    finish: function finish() {\n      this._capability.resolve();\n    },\n    terminate: function terminate() {\n      this.terminated = true;\n    },\n    ensureNotTerminated: function ensureNotTerminated() {\n      if (this.terminated) {\n        throw new Error('Worker task was terminated');\n      }\n    }\n  };\n  return WorkerTask;\n}();\n;\nvar PDFWorkerStream = function PDFWorkerStreamClosure() {\n  function PDFWorkerStream(msgHandler) {\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  PDFWorkerStream.prototype = {\n    getFullReader: function getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader);\n      this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);\n      return this._fullRequestReader;\n    },\n    getRangeReader: function getRangeReader(begin, end) {\n      var reader = new PDFWorkerStreamRangeReader(begin, end, this._msgHandler);\n      this._rangeRequestReaders.push(reader);\n      return reader;\n    },\n    cancelAllRequests: function cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n      var readers = this._rangeRequestReaders.slice(0);\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n  };\n  function PDFWorkerStreamReader(msgHandler) {\n    var _this = this;\n\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._isRangeSupported = false;\n    this._isStreamingSupported = false;\n    var readableStream = this._msgHandler.sendWithStream('GetReader');\n    this._reader = readableStream.getReader();\n    this._headersReady = this._msgHandler.sendWithPromise('ReaderHeadersReady').then(function (data) {\n      _this._isStreamingSupported = data.isStreamingSupported;\n      _this._isRangeSupported = data.isRangeSupported;\n      _this._contentLength = data.contentLength;\n    });\n  }\n  PDFWorkerStreamReader.prototype = {\n    get headersReady() {\n      return this._headersReady;\n    },\n    get contentLength() {\n      return this._contentLength;\n    },\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    },\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref) {\n        var value = _ref.value,\n            done = _ref.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  function PDFWorkerStreamRangeReader(begin, end, msgHandler) {\n    this._msgHandler = msgHandler;\n    this.onProgress = null;\n    var readableStream = this._msgHandler.sendWithStream('GetRangeReader', {\n      begin: begin,\n      end: end\n    });\n    this._reader = readableStream.getReader();\n  }\n  PDFWorkerStreamRangeReader.prototype = {\n    get isStreamingSupported() {\n      return false;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref2) {\n        var value = _ref2.value,\n            done = _ref2.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  return PDFWorkerStream;\n}();\nvar WorkerMessageHandler = {\n  setup: function setup(handler, port) {\n    var testMessageProcessed = false;\n    handler.on('test', function wphSetupTest(data) {\n      if (testMessageProcessed) {\n        return;\n      }\n      testMessageProcessed = true;\n      if (!(data instanceof Uint8Array)) {\n        handler.send('test', 'main', false);\n        return;\n      }\n      var supportTransfers = data[0] === 255;\n      handler.postMessageTransfers = supportTransfers;\n      var xhr = new XMLHttpRequest();\n      var responseExists = 'response' in xhr;\n      try {\n        xhr.responseType;\n      } catch (e) {\n        responseExists = false;\n      }\n      if (!responseExists) {\n        handler.send('test', false);\n        return;\n      }\n      handler.send('test', {\n        supportTypedArray: true,\n        supportTransfers: supportTransfers\n      });\n    });\n    handler.on('configure', function wphConfigure(data) {\n      (0, _util.setVerbosityLevel)(data.verbosity);\n    });\n    handler.on('GetDocRequest', function wphSetupDoc(data) {\n      return WorkerMessageHandler.createDocumentHandler(data, port);\n    });\n  },\n  createDocumentHandler: function createDocumentHandler(docParams, port) {\n    var pdfManager;\n    var terminated = false;\n    var cancelXHRs = null;\n    var WorkerTasks = [];\n    var apiVersion = docParams.apiVersion;\n    var workerVersion = '2.0.489';\n    if (apiVersion !== null && apiVersion !== workerVersion) {\n      throw new Error('The API version \"' + apiVersion + '\" does not match ' + ('the Worker version \"' + workerVersion + '\".'));\n    }\n    var docId = docParams.docId;\n    var docBaseUrl = docParams.docBaseUrl;\n    var workerHandlerName = docParams.docId + '_worker';\n    var handler = new _util.MessageHandler(workerHandlerName, docId, port);\n    handler.postMessageTransfers = docParams.postMessageTransfers;\n    function ensureNotTerminated() {\n      if (terminated) {\n        throw new Error('Worker was terminated');\n      }\n    }\n    function startWorkerTask(task) {\n      WorkerTasks.push(task);\n    }\n    function finishWorkerTask(task) {\n      task.finish();\n      var i = WorkerTasks.indexOf(task);\n      WorkerTasks.splice(i, 1);\n    }\n    function loadDocument(recoveryMode) {\n      var loadDocumentCapability = (0, _util.createPromiseCapability)();\n      var parseSuccess = function parseSuccess() {\n        Promise.all([pdfManager.ensureDoc('numPages'), pdfManager.ensureDoc('fingerprint')]).then(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 2),\n              numPages = _ref4[0],\n              fingerprint = _ref4[1];\n\n          loadDocumentCapability.resolve({\n            numPages: numPages,\n            fingerprint: fingerprint\n          });\n        }, parseFailure);\n      };\n      var parseFailure = function parseFailure(e) {\n        loadDocumentCapability.reject(e);\n      };\n      pdfManager.ensureDoc('checkHeader', []).then(function () {\n        pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n          pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n        }, parseFailure);\n      }, parseFailure);\n      return loadDocumentCapability.promise;\n    }\n    function getPdfManager(data, evaluatorOptions) {\n      var pdfManagerCapability = (0, _util.createPromiseCapability)();\n      var pdfManager;\n      var source = data.source;\n      if (source.data) {\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        return pdfManagerCapability.promise;\n      }\n      var pdfStream,\n          cachedChunks = [];\n      try {\n        pdfStream = new PDFWorkerStream(handler);\n      } catch (ex) {\n        pdfManagerCapability.reject(ex);\n        return pdfManagerCapability.promise;\n      }\n      var fullRequest = pdfStream.getFullReader();\n      fullRequest.headersReady.then(function () {\n        if (!fullRequest.isRangeSupported) {\n          return;\n        }\n        var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n        pdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, {\n          msgHandler: handler,\n          url: source.url,\n          password: source.password,\n          length: fullRequest.contentLength,\n          disableAutoFetch: disableAutoFetch,\n          rangeChunkSize: source.rangeChunkSize\n        }, evaluatorOptions, docBaseUrl);\n        for (var i = 0; i < cachedChunks.length; i++) {\n          pdfManager.sendProgressiveData(cachedChunks[i]);\n        }\n        cachedChunks = [];\n        pdfManagerCapability.resolve(pdfManager);\n        cancelXHRs = null;\n      }).catch(function (reason) {\n        pdfManagerCapability.reject(reason);\n        cancelXHRs = null;\n      });\n      var loaded = 0;\n      var flushChunks = function flushChunks() {\n        var pdfFile = (0, _util.arraysToBytes)(cachedChunks);\n        if (source.length && pdfFile.length !== source.length) {\n          (0, _util.warn)('reported HTTP length is different from actual');\n        }\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        cachedChunks = [];\n      };\n      var readPromise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            ensureNotTerminated();\n            if (chunk.done) {\n              if (!pdfManager) {\n                flushChunks();\n              }\n              cancelXHRs = null;\n              return;\n            }\n            var data = chunk.value;\n            loaded += (0, _util.arrayByteLength)(data);\n            if (!fullRequest.isStreamingSupported) {\n              handler.send('DocProgress', {\n                loaded: loaded,\n                total: Math.max(loaded, fullRequest.contentLength || 0)\n              });\n            }\n            if (pdfManager) {\n              pdfManager.sendProgressiveData(data);\n            } else {\n              cachedChunks.push(data);\n            }\n            fullRequest.read().then(readChunk, reject);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        fullRequest.read().then(readChunk, reject);\n      });\n      readPromise.catch(function (e) {\n        pdfManagerCapability.reject(e);\n        cancelXHRs = null;\n      });\n      cancelXHRs = function cancelXHRs() {\n        pdfStream.cancelAllRequests('abort');\n      };\n      return pdfManagerCapability.promise;\n    }\n    function setupDoc(data) {\n      function onSuccess(doc) {\n        ensureNotTerminated();\n        handler.send('GetDoc', { pdfInfo: doc });\n      }\n      function onFailure(e) {\n        ensureNotTerminated();\n        if (e instanceof _util.PasswordException) {\n          var task = new WorkerTask('PasswordException: response ' + e.code);\n          startWorkerTask(task);\n          handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n            finishWorkerTask(task);\n            pdfManager.updatePassword(data.password);\n            pdfManagerReady();\n          }).catch(function (ex) {\n            finishWorkerTask(task);\n            handler.send('PasswordException', ex);\n          }.bind(null, e));\n        } else if (e instanceof _util.InvalidPDFException) {\n          handler.send('InvalidPDF', e);\n        } else if (e instanceof _util.MissingPDFException) {\n          handler.send('MissingPDF', e);\n        } else if (e instanceof _util.UnexpectedResponseException) {\n          handler.send('UnexpectedResponse', e);\n        } else {\n          handler.send('UnknownError', new _util.UnknownErrorException(e.message, e.toString()));\n        }\n      }\n      function pdfManagerReady() {\n        ensureNotTerminated();\n        loadDocument(false).then(onSuccess, function loadFailure(ex) {\n          ensureNotTerminated();\n          if (!(ex instanceof _util.XRefParseException)) {\n            onFailure(ex);\n            return;\n          }\n          pdfManager.requestLoadedStream();\n          pdfManager.onLoadedStream().then(function () {\n            ensureNotTerminated();\n            loadDocument(true).then(onSuccess, onFailure);\n          });\n        }, onFailure);\n      }\n      ensureNotTerminated();\n      var evaluatorOptions = {\n        forceDataSchema: data.disableCreateObjectURL,\n        maxImageSize: data.maxImageSize,\n        disableFontFace: data.disableFontFace,\n        nativeImageDecoderSupport: data.nativeImageDecoderSupport,\n        ignoreErrors: data.ignoreErrors,\n        isEvalSupported: data.isEvalSupported\n      };\n      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n        if (terminated) {\n          newPdfManager.terminate();\n          throw new Error('Worker was terminated');\n        }\n        pdfManager = newPdfManager;\n        handler.send('PDFManagerReady', null);\n        pdfManager.onLoadedStream().then(function (stream) {\n          handler.send('DataLoaded', { length: stream.bytes.byteLength });\n        });\n      }).then(pdfManagerReady, onFailure);\n    }\n    handler.on('GetPage', function wphSetupGetPage(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        var rotatePromise = pdfManager.ensure(page, 'rotate');\n        var refPromise = pdfManager.ensure(page, 'ref');\n        var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n        var viewPromise = pdfManager.ensure(page, 'view');\n        return Promise.all([rotatePromise, refPromise, userUnitPromise, viewPromise]).then(function (results) {\n          return {\n            rotate: results[0],\n            ref: results[1],\n            userUnit: results[2],\n            view: results[3]\n          };\n        });\n      });\n    });\n    handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n      var ref = new _primitives.Ref(data.ref.num, data.ref.gen);\n      var catalog = pdfManager.pdfDocument.catalog;\n      return catalog.getPageIndex(ref);\n    });\n    handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n      return pdfManager.ensureCatalog('destinations');\n    });\n    handler.on('GetDestination', function wphSetupGetDestination(data) {\n      return pdfManager.ensureCatalog('getDestination', [data.id]);\n    });\n    handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n      return pdfManager.ensureCatalog('pageLabels');\n    });\n    handler.on('GetPageMode', function wphSetupGetPageMode(data) {\n      return pdfManager.ensureCatalog('pageMode');\n    });\n    handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n      return pdfManager.ensureCatalog('attachments');\n    });\n    handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n      return pdfManager.ensureCatalog('javaScript');\n    });\n    handler.on('GetOutline', function wphSetupGetOutline(data) {\n      return pdfManager.ensureCatalog('documentOutline');\n    });\n    handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n      return Promise.all([pdfManager.ensureDoc('documentInfo'), pdfManager.ensureCatalog('metadata')]);\n    });\n    handler.on('GetData', function wphSetupGetData(data) {\n      pdfManager.requestLoadedStream();\n      return pdfManager.onLoadedStream().then(function (stream) {\n        return stream.bytes;\n      });\n    });\n    handler.on('GetStats', function wphSetupGetStats(data) {\n      return pdfManager.pdfDocument.xref.stats;\n    });\n    handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n      });\n    });\n    handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n      var pageIndex = data.pageIndex;\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.getOperatorList({\n          handler: handler,\n          task: task,\n          intent: data.intent,\n          renderInteractiveForms: data.renderInteractiveForms\n        }).then(function (operatorList) {\n          finishWorkerTask(task);\n          (0, _util.info)('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n        }, function (e) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n          var wrappedException;\n          if (typeof e === 'string') {\n            wrappedException = {\n              message: e,\n              stack: minimumStackMessage\n            };\n          } else if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') {\n            wrappedException = {\n              message: e.message || e.toString(),\n              stack: e.stack || minimumStackMessage\n            };\n          } else {\n            wrappedException = {\n              message: 'Unknown exception type: ' + (typeof e === 'undefined' ? 'undefined' : _typeof(e)),\n              stack: minimumStackMessage\n            };\n          }\n          handler.send('PageError', {\n            pageNum: pageNum,\n            error: wrappedException,\n            intent: data.intent\n          });\n        });\n      });\n    }, this);\n    handler.on('GetTextContent', function wphExtractText(data, sink) {\n      var pageIndex = data.pageIndex;\n      sink.onPull = function (desiredSize) {};\n      sink.onCancel = function (reason) {};\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.extractTextContent({\n          handler: handler,\n          task: task,\n          sink: sink,\n          normalizeWhitespace: data.normalizeWhitespace,\n          combineTextItems: data.combineTextItems\n        }).then(function () {\n          finishWorkerTask(task);\n          (0, _util.info)('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n          sink.close();\n        }, function (reason) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          sink.error(reason);\n          throw reason;\n        });\n      });\n    });\n    handler.on('Cleanup', function wphCleanup(data) {\n      return pdfManager.cleanup();\n    });\n    handler.on('Terminate', function wphTerminate(data) {\n      terminated = true;\n      if (pdfManager) {\n        pdfManager.terminate();\n        pdfManager = null;\n      }\n      if (cancelXHRs) {\n        cancelXHRs();\n      }\n      var waitOn = [];\n      WorkerTasks.forEach(function (task) {\n        waitOn.push(task.finished);\n        task.terminate();\n      });\n      return Promise.all(waitOn).then(function () {\n        handler.destroy();\n        handler = null;\n      });\n    });\n    handler.on('Ready', function wphReady(data) {\n      setupDoc(docParams);\n      docParams = null;\n    });\n    return workerHandlerName;\n  },\n  initializeFromPort: function initializeFromPort(port) {\n    var handler = new _util.MessageHandler('worker', 'main', port);\n    WorkerMessageHandler.setup(handler, port);\n    handler.send('ready', null);\n  }\n};\nfunction isMessagePort(maybePort) {\n  return typeof maybePort.postMessage === 'function' && 'onmessage' in maybePort;\n}\nif (typeof window === 'undefined' && !(0, _is_node2.default)() && typeof self !== 'undefined' && isMessagePort(self)) {\n  WorkerMessageHandler.initializeFromPort(self);\n}\nexports.WorkerTask = WorkerTask;\nexports.WorkerMessageHandler = WorkerMessageHandler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/worker.js\n// module id = B80z\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChunkedStreamManager = exports.ChunkedStream = undefined;\n\nvar _util = require('../shared/util');\n\nvar ChunkedStream = function ChunkedStreamClosure() {\n  function ChunkedStream(length, chunkSize, manager) {\n    this.bytes = new Uint8Array(length);\n    this.start = 0;\n    this.pos = 0;\n    this.end = length;\n    this.chunkSize = chunkSize;\n    this.loadedChunks = [];\n    this.numChunksLoaded = 0;\n    this.numChunks = Math.ceil(length / chunkSize);\n    this.manager = manager;\n    this.progressiveDataLength = 0;\n    this.lastSuccessfulEnsureByteChunk = -1;\n  }\n  ChunkedStream.prototype = {\n    getMissingChunks: function ChunkedStream_getMissingChunks() {\n      var chunks = [];\n      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          chunks.push(chunk);\n        }\n      }\n      return chunks;\n    },\n    getBaseStreams: function ChunkedStream_getBaseStreams() {\n      return [this];\n    },\n    allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n      return this.numChunksLoaded === this.numChunks;\n    },\n    onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n      var end = begin + chunk.byteLength;\n      if (begin % this.chunkSize !== 0) {\n        throw new Error('Bad begin offset: ' + begin);\n      }\n      var length = this.bytes.length;\n      if (end % this.chunkSize !== 0 && end !== length) {\n        throw new Error('Bad end offset: ' + end);\n      }\n      this.bytes.set(new Uint8Array(chunk), begin);\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n      var position = this.progressiveDataLength;\n      var beginChunk = Math.floor(position / this.chunkSize);\n      this.bytes.set(new Uint8Array(data), position);\n      position += data.byteLength;\n      this.progressiveDataLength = position;\n      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    ensureByte: function ChunkedStream_ensureByte(pos) {\n      var chunk = Math.floor(pos / this.chunkSize);\n      if (chunk === this.lastSuccessfulEnsureByteChunk) {\n        return;\n      }\n      if (!this.loadedChunks[chunk]) {\n        throw new _util.MissingDataException(pos, pos + 1);\n      }\n      this.lastSuccessfulEnsureByteChunk = chunk;\n    },\n    ensureRange: function ChunkedStream_ensureRange(begin, end) {\n      if (begin >= end) {\n        return;\n      }\n      if (end <= this.progressiveDataLength) {\n        return;\n      }\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          throw new _util.MissingDataException(begin, end);\n        }\n      }\n    },\n    nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n      var chunk,\n          numChunks = this.numChunks;\n      for (var i = 0; i < numChunks; ++i) {\n        chunk = (beginChunk + i) % numChunks;\n        if (!this.loadedChunks[chunk]) {\n          return chunk;\n        }\n      }\n      return null;\n    },\n    hasChunk: function ChunkedStream_hasChunk(chunk) {\n      return !!this.loadedChunks[chunk];\n    },\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function ChunkedStream_getByte() {\n      var pos = this.pos;\n      if (pos >= this.end) {\n        return -1;\n      }\n      this.ensureByte(pos);\n      return this.bytes[this.pos++];\n    },\n    getUint16: function ChunkedStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function ChunkedStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function ChunkedStream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        this.ensureRange(pos, strEnd);\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.ensureRange(pos, end);\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function ChunkedStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function ChunkedStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    getByteRange: function ChunkedStream_getBytes(begin, end) {\n      this.ensureRange(begin, end);\n      return this.bytes.subarray(begin, end);\n    },\n    skip: function ChunkedStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function ChunkedStream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function ChunkedStream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n      this.ensureRange(start, start + length);\n      function ChunkedStreamSubstream() {}\n      ChunkedStreamSubstream.prototype = Object.create(this);\n      ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n        var chunkSize = this.chunkSize;\n        var beginChunk = Math.floor(this.start / chunkSize);\n        var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n        var missingChunks = [];\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!this.loadedChunks[chunk]) {\n            missingChunks.push(chunk);\n          }\n        }\n        return missingChunks;\n      };\n      var subStream = new ChunkedStreamSubstream();\n      subStream.pos = subStream.start = start;\n      subStream.end = start + length || this.end;\n      subStream.dict = dict;\n      return subStream;\n    }\n  };\n  return ChunkedStream;\n}();\nvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n  function ChunkedStreamManager(pdfNetworkStream, args) {\n    var chunkSize = args.rangeChunkSize;\n    var length = args.length;\n    this.stream = new ChunkedStream(length, chunkSize, this);\n    this.length = length;\n    this.chunkSize = chunkSize;\n    this.pdfNetworkStream = pdfNetworkStream;\n    this.url = args.url;\n    this.disableAutoFetch = args.disableAutoFetch;\n    this.msgHandler = args.msgHandler;\n    this.currRequestId = 0;\n    this.chunksNeededByRequest = Object.create(null);\n    this.requestsByChunk = Object.create(null);\n    this.promisesByRequest = Object.create(null);\n    this.progressiveDataLength = 0;\n    this.aborted = false;\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n  }\n  ChunkedStreamManager.prototype = {\n    onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n      var _this = this;\n\n      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n      if (!rangeReader.isStreamingSupported) {\n        rangeReader.onProgress = this.onProgress.bind(this);\n      }\n      var chunks = [],\n          loaded = 0;\n      var manager = this;\n      var promise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            if (!chunk.done) {\n              var data = chunk.value;\n              chunks.push(data);\n              loaded += (0, _util.arrayByteLength)(data);\n              if (rangeReader.isStreamingSupported) {\n                manager.onProgress({ loaded: loaded });\n              }\n              rangeReader.read().then(readChunk, reject);\n              return;\n            }\n            var chunkData = (0, _util.arraysToBytes)(chunks);\n            chunks = null;\n            resolve(chunkData);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        rangeReader.read().then(readChunk, reject);\n      });\n      promise.then(function (data) {\n        if (_this.aborted) {\n          return;\n        }\n        _this.onReceiveData({\n          chunk: data,\n          begin: begin\n        });\n      });\n    },\n    requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n      var missingChunks = this.stream.getMissingChunks();\n      this._requestChunks(missingChunks);\n      return this._loadedStreamCapability.promise;\n    },\n    _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n      var requestId = this.currRequestId++;\n      var i, ii;\n      var chunksNeeded = Object.create(null);\n      this.chunksNeededByRequest[requestId] = chunksNeeded;\n      for (i = 0, ii = chunks.length; i < ii; i++) {\n        if (!this.stream.hasChunk(chunks[i])) {\n          chunksNeeded[chunks[i]] = true;\n        }\n      }\n      if ((0, _util.isEmptyObj)(chunksNeeded)) {\n        return Promise.resolve();\n      }\n      var capability = (0, _util.createPromiseCapability)();\n      this.promisesByRequest[requestId] = capability;\n      var chunksToRequest = [];\n      for (var chunk in chunksNeeded) {\n        chunk = chunk | 0;\n        if (!(chunk in this.requestsByChunk)) {\n          this.requestsByChunk[chunk] = [];\n          chunksToRequest.push(chunk);\n        }\n        this.requestsByChunk[chunk].push(requestId);\n      }\n      if (!chunksToRequest.length) {\n        return capability.promise;\n      }\n      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n      for (i = 0; i < groupedChunksToRequest.length; ++i) {\n        var groupedChunk = groupedChunksToRequest[i];\n        var begin = groupedChunk.beginChunk * this.chunkSize;\n        var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n        this.sendRequest(begin, end);\n      }\n      return capability.promise;\n    },\n    getStream: function ChunkedStreamManager_getStream() {\n      return this.stream;\n    },\n    requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n      end = Math.min(end, this.length);\n      var beginChunk = this.getBeginChunk(begin);\n      var endChunk = this.getEndChunk(end);\n      var chunks = [];\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        chunks.push(chunk);\n      }\n      return this._requestChunks(chunks);\n    },\n    requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n      ranges = ranges || [];\n      var chunksToRequest = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var beginChunk = this.getBeginChunk(ranges[i].begin);\n        var endChunk = this.getEndChunk(ranges[i].end);\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!chunksToRequest.includes(chunk)) {\n            chunksToRequest.push(chunk);\n          }\n        }\n      }\n      chunksToRequest.sort(function (a, b) {\n        return a - b;\n      });\n      return this._requestChunks(chunksToRequest);\n    },\n    groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n      var groupedChunks = [];\n      var beginChunk = -1;\n      var prevChunk = -1;\n      for (var i = 0; i < chunks.length; ++i) {\n        var chunk = chunks[i];\n        if (beginChunk < 0) {\n          beginChunk = chunk;\n        }\n        if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: prevChunk + 1\n          });\n          beginChunk = chunk;\n        }\n        if (i + 1 === chunks.length) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: chunk + 1\n          });\n        }\n        prevChunk = chunk;\n      }\n      return groupedChunks;\n    },\n    onProgress: function ChunkedStreamManager_onProgress(args) {\n      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n      this.msgHandler.send('DocProgress', {\n        loaded: bytesLoaded,\n        total: this.length\n      });\n    },\n    onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n      var chunk = args.chunk;\n      var isProgressive = args.begin === undefined;\n      var begin = isProgressive ? this.progressiveDataLength : args.begin;\n      var end = begin + chunk.byteLength;\n      var beginChunk = Math.floor(begin / this.chunkSize);\n      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n      if (isProgressive) {\n        this.stream.onReceiveProgressiveData(chunk);\n        this.progressiveDataLength = end;\n      } else {\n        this.stream.onReceiveData(begin, chunk);\n      }\n      if (this.stream.allChunksLoaded()) {\n        this._loadedStreamCapability.resolve(this.stream);\n      }\n      var loadedRequests = [];\n      var i, requestId;\n      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n        var requestIds = this.requestsByChunk[chunk] || [];\n        delete this.requestsByChunk[chunk];\n        for (i = 0; i < requestIds.length; ++i) {\n          requestId = requestIds[i];\n          var chunksNeeded = this.chunksNeededByRequest[requestId];\n          if (chunk in chunksNeeded) {\n            delete chunksNeeded[chunk];\n          }\n          if (!(0, _util.isEmptyObj)(chunksNeeded)) {\n            continue;\n          }\n          loadedRequests.push(requestId);\n        }\n      }\n      if (!this.disableAutoFetch && (0, _util.isEmptyObj)(this.requestsByChunk)) {\n        var nextEmptyChunk;\n        if (this.stream.numChunksLoaded === 1) {\n          var lastChunk = this.stream.numChunks - 1;\n          if (!this.stream.hasChunk(lastChunk)) {\n            nextEmptyChunk = lastChunk;\n          }\n        } else {\n          nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n        }\n        if (Number.isInteger(nextEmptyChunk)) {\n          this._requestChunks([nextEmptyChunk]);\n        }\n      }\n      for (i = 0; i < loadedRequests.length; ++i) {\n        requestId = loadedRequests[i];\n        var capability = this.promisesByRequest[requestId];\n        delete this.promisesByRequest[requestId];\n        capability.resolve();\n      }\n      this.msgHandler.send('DocProgress', {\n        loaded: this.stream.numChunksLoaded * this.chunkSize,\n        total: this.length\n      });\n    },\n    onError: function ChunkedStreamManager_onError(err) {\n      this._loadedStreamCapability.reject(err);\n    },\n    getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n      var chunk = Math.floor(begin / this.chunkSize);\n      return chunk;\n    },\n    getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n      return chunk;\n    },\n    abort: function ChunkedStreamManager_abort() {\n      this.aborted = true;\n      if (this.pdfNetworkStream) {\n        this.pdfNetworkStream.cancelAllRequests('abort');\n      }\n      for (var requestId in this.promisesByRequest) {\n        var capability = this.promisesByRequest[requestId];\n        capability.reject(new Error('Request was aborted'));\n      }\n    }\n  };\n  return ChunkedStreamManager;\n}();\nexports.ChunkedStream = ChunkedStream;\nexports.ChunkedStreamManager = ChunkedStreamManager;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/chunked_stream.js\n// module id = DUn2\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkPdfManager = exports.LocalPdfManager = undefined;\n\nvar _util = require('../shared/util');\n\nvar _chunked_stream = require('./chunked_stream');\n\nvar _document = require('./document');\n\nvar _stream = require('./stream');\n\nvar BasePdfManager = function BasePdfManagerClosure() {\n  function BasePdfManager() {\n    (0, _util.unreachable)('Cannot initialize BaseManagerManager');\n  }\n  BasePdfManager.prototype = {\n    get docId() {\n      return this._docId;\n    },\n    get password() {\n      return this._password;\n    },\n    get docBaseUrl() {\n      var docBaseUrl = null;\n      if (this._docBaseUrl) {\n        var absoluteUrl = (0, _util.createValidAbsoluteUrl)(this._docBaseUrl);\n        if (absoluteUrl) {\n          docBaseUrl = absoluteUrl.href;\n        } else {\n          (0, _util.warn)('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n        }\n      }\n      return (0, _util.shadow)(this, 'docBaseUrl', docBaseUrl);\n    },\n    onLoadedStream: function BasePdfManager_onLoadedStream() {\n      throw new _util.NotImplementedException();\n    },\n    ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n      return this.ensure(this.pdfDocument, prop, args);\n    },\n    ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n      return this.ensure(this.pdfDocument.xref, prop, args);\n    },\n    ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n      return this.ensure(this.pdfDocument.catalog, prop, args);\n    },\n    getPage: function BasePdfManager_getPage(pageIndex) {\n      return this.pdfDocument.getPage(pageIndex);\n    },\n    cleanup: function BasePdfManager_cleanup() {\n      return this.pdfDocument.cleanup();\n    },\n    ensure: function BasePdfManager_ensure(obj, prop, args) {\n      return new _util.NotImplementedException();\n    },\n    requestRange: function BasePdfManager_requestRange(begin, end) {\n      return new _util.NotImplementedException();\n    },\n    requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n      return new _util.NotImplementedException();\n    },\n    sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n      return new _util.NotImplementedException();\n    },\n    updatePassword: function BasePdfManager_updatePassword(password) {\n      this._password = password;\n    },\n    terminate: function BasePdfManager_terminate() {\n      return new _util.NotImplementedException();\n    }\n  };\n  return BasePdfManager;\n}();\nvar LocalPdfManager = function LocalPdfManagerClosure() {\n  function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = password;\n    this._docBaseUrl = docBaseUrl;\n    this.evaluatorOptions = evaluatorOptions;\n    var stream = new _stream.Stream(data);\n    this.pdfDocument = new _document.PDFDocument(this, stream);\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n    this._loadedStreamCapability.resolve(stream);\n  }\n  _util.Util.inherit(LocalPdfManager, BasePdfManager, {\n    ensure: function LocalPdfManager_ensure(obj, prop, args) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var value = obj[prop];\n          var result;\n          if (typeof value === 'function') {\n            result = value.apply(obj, args);\n          } else {\n            result = value;\n          }\n          resolve(result);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    },\n    requestRange: function LocalPdfManager_requestRange(begin, end) {\n      return Promise.resolve();\n    },\n    requestLoadedStream: function LocalPdfManager_requestLoadedStream() {},\n    onLoadedStream: function LocalPdfManager_onLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    terminate: function LocalPdfManager_terminate() {}\n  });\n  return LocalPdfManager;\n}();\nvar NetworkPdfManager = function NetworkPdfManagerClosure() {\n  function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = args.password;\n    this._docBaseUrl = docBaseUrl;\n    this.msgHandler = args.msgHandler;\n    this.evaluatorOptions = evaluatorOptions;\n    var params = {\n      msgHandler: args.msgHandler,\n      url: args.url,\n      length: args.length,\n      disableAutoFetch: args.disableAutoFetch,\n      rangeChunkSize: args.rangeChunkSize\n    };\n    this.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, params);\n    this.pdfDocument = new _document.PDFDocument(this, this.streamManager.getStream());\n  }\n  _util.Util.inherit(NetworkPdfManager, BasePdfManager, {\n    ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n      var pdfManager = this;\n      return new Promise(function (resolve, reject) {\n        function ensureHelper() {\n          try {\n            var result;\n            var value = obj[prop];\n            if (typeof value === 'function') {\n              result = value.apply(obj, args);\n            } else {\n              result = value;\n            }\n            resolve(result);\n          } catch (e) {\n            if (!(e instanceof _util.MissingDataException)) {\n              reject(e);\n              return;\n            }\n            pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n          }\n        }\n        ensureHelper();\n      });\n    },\n    requestRange: function NetworkPdfManager_requestRange(begin, end) {\n      return this.streamManager.requestRange(begin, end);\n    },\n    requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n      this.streamManager.requestAllChunks();\n    },\n    sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n      this.streamManager.onReceiveData({ chunk: chunk });\n    },\n    onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n      return this.streamManager.onLoadedStream();\n    },\n    terminate: function NetworkPdfManager_terminate() {\n      this.streamManager.abort();\n    }\n  });\n  return NetworkPdfManager;\n}();\nexports.LocalPdfManager = LocalPdfManager;\nexports.NetworkPdfManager = NetworkPdfManager;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/pdf_manager.js\n// module id = GB0i\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptParser = exports.PostScriptLexer = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar PostScriptParser = function PostScriptParserClosure() {\n  function PostScriptParser(lexer) {\n    this.lexer = lexer;\n    this.operators = [];\n    this.token = null;\n    this.prev = null;\n  }\n  PostScriptParser.prototype = {\n    nextToken: function PostScriptParser_nextToken() {\n      this.prev = this.token;\n      this.token = this.lexer.getToken();\n    },\n    accept: function PostScriptParser_accept(type) {\n      if (this.token.type === type) {\n        this.nextToken();\n        return true;\n      }\n      return false;\n    },\n    expect: function PostScriptParser_expect(type) {\n      if (this.accept(type)) {\n        return true;\n      }\n      throw new _util.FormatError('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n    },\n    parse: function PostScriptParser_parse() {\n      this.nextToken();\n      this.expect(PostScriptTokenTypes.LBRACE);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      return this.operators;\n    },\n    parseBlock: function PostScriptParser_parseBlock() {\n      while (true) {\n        if (this.accept(PostScriptTokenTypes.NUMBER)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n          this.parseCondition();\n        } else {\n          return;\n        }\n      }\n    },\n    parseCondition: function PostScriptParser_parseCondition() {\n      var conditionLocation = this.operators.length;\n      this.operators.push(null, null);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      if (this.accept(PostScriptTokenTypes.IF)) {\n        this.operators[conditionLocation] = this.operators.length;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n        var jumpLocation = this.operators.length;\n        this.operators.push(null, null);\n        var endOfTrue = this.operators.length;\n        this.parseBlock();\n        this.expect(PostScriptTokenTypes.RBRACE);\n        this.expect(PostScriptTokenTypes.IFELSE);\n        this.operators[jumpLocation] = this.operators.length;\n        this.operators[jumpLocation + 1] = 'j';\n        this.operators[conditionLocation] = endOfTrue;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else {\n        throw new _util.FormatError('PS Function: error parsing conditional.');\n      }\n    }\n  };\n  return PostScriptParser;\n}();\nvar PostScriptTokenTypes = {\n  LBRACE: 0,\n  RBRACE: 1,\n  NUMBER: 2,\n  OPERATOR: 3,\n  IF: 4,\n  IFELSE: 5\n};\nvar PostScriptToken = function PostScriptTokenClosure() {\n  function PostScriptToken(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n  var opCache = Object.create(null);\n  PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n    var opValue = opCache[op];\n    if (opValue) {\n      return opValue;\n    }\n    return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n  };\n  PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n  PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n  PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n  PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n  return PostScriptToken;\n}();\nvar PostScriptLexer = function PostScriptLexerClosure() {\n  function PostScriptLexer(stream) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n  }\n  PostScriptLexer.prototype = {\n    nextChar: function PostScriptLexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function PostScriptLexer_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n        case 0x7B:\n          this.nextChar();\n          return PostScriptToken.LBRACE;\n        case 0x7D:\n          this.nextChar();\n          return PostScriptToken.RBRACE;\n      }\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n        strBuf.push(String.fromCharCode(ch));\n      }\n      var str = strBuf.join('');\n      switch (str.toLowerCase()) {\n        case 'if':\n          return PostScriptToken.IF;\n        case 'ifelse':\n          return PostScriptToken.IFELSE;\n        default:\n          return PostScriptToken.getOperator(str);\n      }\n    },\n    getNumber: function PostScriptLexer_getNumber() {\n      var ch = this.currentChar;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0) {\n        if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n          strBuf.push(String.fromCharCode(ch));\n        } else {\n          break;\n        }\n      }\n      var value = parseFloat(strBuf.join(''));\n      if (isNaN(value)) {\n        throw new _util.FormatError('Invalid floating point number: ' + value);\n      }\n      return value;\n    }\n  };\n  return PostScriptLexer;\n}();\nexports.PostScriptLexer = PostScriptLexer;\nexports.PostScriptParser = PostScriptParser;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/ps_parser.js\n// module id = Gd2J\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Stream = undefined;\n\nvar _primitives = require('./primitives');\n\nvar _stream = require('./stream');\n\nvar _jbig = require('./jbig2');\n\nvar _util = require('../shared/util');\n\nvar Jbig2Stream = function Jbig2StreamClosure() {\n  function Jbig2Stream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  Jbig2Stream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n    get: function get() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n\n    configurable: true\n  });\n  Jbig2Stream.prototype.ensureBuffer = function (requested) {};\n  Jbig2Stream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jbig2Image = new _jbig.Jbig2Image();\n    var chunks = [];\n    if ((0, _primitives.isDict)(this.params)) {\n      var globalsStream = this.params.get('JBIG2Globals');\n      if ((0, _primitives.isStream)(globalsStream)) {\n        var globals = globalsStream.getBytes();\n        chunks.push({\n          data: globals,\n          start: 0,\n          end: globals.length\n        });\n      }\n    }\n    chunks.push({\n      data: this.bytes,\n      start: 0,\n      end: this.bytes.length\n    });\n    var data = jbig2Image.parseChunks(chunks);\n    var dataLength = data.length;\n    for (var i = 0; i < dataLength; i++) {\n      data[i] ^= 0xFF;\n    }\n    this.buffer = data;\n    this.bufferLength = dataLength;\n    this.eof = true;\n  };\n  return Jbig2Stream;\n}();\nexports.Jbig2Stream = Jbig2Stream;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/jbig2_stream.js\n// module id = KiE+\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar getLookupTableFactory = require('../shared/util').getLookupTableFactory;\nvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\n  t[63721] = 0x00A9;\n  t[63193] = 0x00A9;\n  t[63720] = 0x00AE;\n  t[63194] = 0x00AE;\n  t[63722] = 0x2122;\n  t[63195] = 0x2122;\n  t[63729] = 0x23A7;\n  t[63730] = 0x23A8;\n  t[63731] = 0x23A9;\n  t[63740] = 0x23AB;\n  t[63741] = 0x23AC;\n  t[63742] = 0x23AD;\n  t[63726] = 0x23A1;\n  t[63727] = 0x23A2;\n  t[63728] = 0x23A3;\n  t[63737] = 0x23A4;\n  t[63738] = 0x23A5;\n  t[63739] = 0x23A6;\n  t[63723] = 0x239B;\n  t[63724] = 0x239C;\n  t[63725] = 0x239D;\n  t[63734] = 0x239E;\n  t[63735] = 0x239F;\n  t[63736] = 0x23A0;\n});\nfunction mapSpecialUnicodeValues(code) {\n  if (code >= 0xFFF0 && code <= 0xFFFF) {\n    return 0;\n  } else if (code >= 0xF600 && code <= 0xF8FF) {\n    return getSpecialPUASymbols()[code] || code;\n  } else if (code === 0x00AD) {\n    return 0x002D;\n  }\n  return code;\n}\nfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\n  var unicode = glyphsUnicodeMap[name];\n  if (unicode !== undefined) {\n    return unicode;\n  }\n  if (!name) {\n    return -1;\n  }\n  if (name[0] === 'u') {\n    var nameLen = name.length,\n        hexStr;\n    if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n      hexStr = name.substr(3);\n    } else if (nameLen >= 5 && nameLen <= 7) {\n      hexStr = name.substr(1);\n    } else {\n      return -1;\n    }\n    if (hexStr === hexStr.toUpperCase()) {\n      unicode = parseInt(hexStr, 16);\n      if (unicode >= 0) {\n        return unicode;\n      }\n    }\n  }\n  return -1;\n}\nvar UnicodeRanges = [{\n  'begin': 0x0000,\n  'end': 0x007F\n}, {\n  'begin': 0x0080,\n  'end': 0x00FF\n}, {\n  'begin': 0x0100,\n  'end': 0x017F\n}, {\n  'begin': 0x0180,\n  'end': 0x024F\n}, {\n  'begin': 0x0250,\n  'end': 0x02AF\n}, {\n  'begin': 0x02B0,\n  'end': 0x02FF\n}, {\n  'begin': 0x0300,\n  'end': 0x036F\n}, {\n  'begin': 0x0370,\n  'end': 0x03FF\n}, {\n  'begin': 0x2C80,\n  'end': 0x2CFF\n}, {\n  'begin': 0x0400,\n  'end': 0x04FF\n}, {\n  'begin': 0x0530,\n  'end': 0x058F\n}, {\n  'begin': 0x0590,\n  'end': 0x05FF\n}, {\n  'begin': 0xA500,\n  'end': 0xA63F\n}, {\n  'begin': 0x0600,\n  'end': 0x06FF\n}, {\n  'begin': 0x07C0,\n  'end': 0x07FF\n}, {\n  'begin': 0x0900,\n  'end': 0x097F\n}, {\n  'begin': 0x0980,\n  'end': 0x09FF\n}, {\n  'begin': 0x0A00,\n  'end': 0x0A7F\n}, {\n  'begin': 0x0A80,\n  'end': 0x0AFF\n}, {\n  'begin': 0x0B00,\n  'end': 0x0B7F\n}, {\n  'begin': 0x0B80,\n  'end': 0x0BFF\n}, {\n  'begin': 0x0C00,\n  'end': 0x0C7F\n}, {\n  'begin': 0x0C80,\n  'end': 0x0CFF\n}, {\n  'begin': 0x0D00,\n  'end': 0x0D7F\n}, {\n  'begin': 0x0E00,\n  'end': 0x0E7F\n}, {\n  'begin': 0x0E80,\n  'end': 0x0EFF\n}, {\n  'begin': 0x10A0,\n  'end': 0x10FF\n}, {\n  'begin': 0x1B00,\n  'end': 0x1B7F\n}, {\n  'begin': 0x1100,\n  'end': 0x11FF\n}, {\n  'begin': 0x1E00,\n  'end': 0x1EFF\n}, {\n  'begin': 0x1F00,\n  'end': 0x1FFF\n}, {\n  'begin': 0x2000,\n  'end': 0x206F\n}, {\n  'begin': 0x2070,\n  'end': 0x209F\n}, {\n  'begin': 0x20A0,\n  'end': 0x20CF\n}, {\n  'begin': 0x20D0,\n  'end': 0x20FF\n}, {\n  'begin': 0x2100,\n  'end': 0x214F\n}, {\n  'begin': 0x2150,\n  'end': 0x218F\n}, {\n  'begin': 0x2190,\n  'end': 0x21FF\n}, {\n  'begin': 0x2200,\n  'end': 0x22FF\n}, {\n  'begin': 0x2300,\n  'end': 0x23FF\n}, {\n  'begin': 0x2400,\n  'end': 0x243F\n}, {\n  'begin': 0x2440,\n  'end': 0x245F\n}, {\n  'begin': 0x2460,\n  'end': 0x24FF\n}, {\n  'begin': 0x2500,\n  'end': 0x257F\n}, {\n  'begin': 0x2580,\n  'end': 0x259F\n}, {\n  'begin': 0x25A0,\n  'end': 0x25FF\n}, {\n  'begin': 0x2600,\n  'end': 0x26FF\n}, {\n  'begin': 0x2700,\n  'end': 0x27BF\n}, {\n  'begin': 0x3000,\n  'end': 0x303F\n}, {\n  'begin': 0x3040,\n  'end': 0x309F\n}, {\n  'begin': 0x30A0,\n  'end': 0x30FF\n}, {\n  'begin': 0x3100,\n  'end': 0x312F\n}, {\n  'begin': 0x3130,\n  'end': 0x318F\n}, {\n  'begin': 0xA840,\n  'end': 0xA87F\n}, {\n  'begin': 0x3200,\n  'end': 0x32FF\n}, {\n  'begin': 0x3300,\n  'end': 0x33FF\n}, {\n  'begin': 0xAC00,\n  'end': 0xD7AF\n}, {\n  'begin': 0xD800,\n  'end': 0xDFFF\n}, {\n  'begin': 0x10900,\n  'end': 0x1091F\n}, {\n  'begin': 0x4E00,\n  'end': 0x9FFF\n}, {\n  'begin': 0xE000,\n  'end': 0xF8FF\n}, {\n  'begin': 0x31C0,\n  'end': 0x31EF\n}, {\n  'begin': 0xFB00,\n  'end': 0xFB4F\n}, {\n  'begin': 0xFB50,\n  'end': 0xFDFF\n}, {\n  'begin': 0xFE20,\n  'end': 0xFE2F\n}, {\n  'begin': 0xFE10,\n  'end': 0xFE1F\n}, {\n  'begin': 0xFE50,\n  'end': 0xFE6F\n}, {\n  'begin': 0xFE70,\n  'end': 0xFEFF\n}, {\n  'begin': 0xFF00,\n  'end': 0xFFEF\n}, {\n  'begin': 0xFFF0,\n  'end': 0xFFFF\n}, {\n  'begin': 0x0F00,\n  'end': 0x0FFF\n}, {\n  'begin': 0x0700,\n  'end': 0x074F\n}, {\n  'begin': 0x0780,\n  'end': 0x07BF\n}, {\n  'begin': 0x0D80,\n  'end': 0x0DFF\n}, {\n  'begin': 0x1000,\n  'end': 0x109F\n}, {\n  'begin': 0x1200,\n  'end': 0x137F\n}, {\n  'begin': 0x13A0,\n  'end': 0x13FF\n}, {\n  'begin': 0x1400,\n  'end': 0x167F\n}, {\n  'begin': 0x1680,\n  'end': 0x169F\n}, {\n  'begin': 0x16A0,\n  'end': 0x16FF\n}, {\n  'begin': 0x1780,\n  'end': 0x17FF\n}, {\n  'begin': 0x1800,\n  'end': 0x18AF\n}, {\n  'begin': 0x2800,\n  'end': 0x28FF\n}, {\n  'begin': 0xA000,\n  'end': 0xA48F\n}, {\n  'begin': 0x1700,\n  'end': 0x171F\n}, {\n  'begin': 0x10300,\n  'end': 0x1032F\n}, {\n  'begin': 0x10330,\n  'end': 0x1034F\n}, {\n  'begin': 0x10400,\n  'end': 0x1044F\n}, {\n  'begin': 0x1D000,\n  'end': 0x1D0FF\n}, {\n  'begin': 0x1D400,\n  'end': 0x1D7FF\n}, {\n  'begin': 0xFF000,\n  'end': 0xFFFFD\n}, {\n  'begin': 0xFE00,\n  'end': 0xFE0F\n}, {\n  'begin': 0xE0000,\n  'end': 0xE007F\n}, {\n  'begin': 0x1900,\n  'end': 0x194F\n}, {\n  'begin': 0x1950,\n  'end': 0x197F\n}, {\n  'begin': 0x1980,\n  'end': 0x19DF\n}, {\n  'begin': 0x1A00,\n  'end': 0x1A1F\n}, {\n  'begin': 0x2C00,\n  'end': 0x2C5F\n}, {\n  'begin': 0x2D30,\n  'end': 0x2D7F\n}, {\n  'begin': 0x4DC0,\n  'end': 0x4DFF\n}, {\n  'begin': 0xA800,\n  'end': 0xA82F\n}, {\n  'begin': 0x10000,\n  'end': 0x1007F\n}, {\n  'begin': 0x10140,\n  'end': 0x1018F\n}, {\n  'begin': 0x10380,\n  'end': 0x1039F\n}, {\n  'begin': 0x103A0,\n  'end': 0x103DF\n}, {\n  'begin': 0x10450,\n  'end': 0x1047F\n}, {\n  'begin': 0x10480,\n  'end': 0x104AF\n}, {\n  'begin': 0x10800,\n  'end': 0x1083F\n}, {\n  'begin': 0x10A00,\n  'end': 0x10A5F\n}, {\n  'begin': 0x1D300,\n  'end': 0x1D35F\n}, {\n  'begin': 0x12000,\n  'end': 0x123FF\n}, {\n  'begin': 0x1D360,\n  'end': 0x1D37F\n}, {\n  'begin': 0x1B80,\n  'end': 0x1BBF\n}, {\n  'begin': 0x1C00,\n  'end': 0x1C4F\n}, {\n  'begin': 0x1C50,\n  'end': 0x1C7F\n}, {\n  'begin': 0xA880,\n  'end': 0xA8DF\n}, {\n  'begin': 0xA900,\n  'end': 0xA92F\n}, {\n  'begin': 0xA930,\n  'end': 0xA95F\n}, {\n  'begin': 0xAA00,\n  'end': 0xAA5F\n}, {\n  'begin': 0x10190,\n  'end': 0x101CF\n}, {\n  'begin': 0x101D0,\n  'end': 0x101FF\n}, {\n  'begin': 0x102A0,\n  'end': 0x102DF\n}, {\n  'begin': 0x1F030,\n  'end': 0x1F09F\n}];\nfunction getUnicodeRangeFor(value) {\n  for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n    var range = UnicodeRanges[i];\n    if (value >= range.begin && value < range.end) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction isRTLRangeFor(value) {\n  var range = UnicodeRanges[13];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  range = UnicodeRanges[11];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  return false;\n}\nvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\n  t['\\u00A8'] = '\\u0020\\u0308';\n  t['\\u00AF'] = '\\u0020\\u0304';\n  t['\\u00B4'] = '\\u0020\\u0301';\n  t['\\u00B5'] = '\\u03BC';\n  t['\\u00B8'] = '\\u0020\\u0327';\n  t['\\u0132'] = '\\u0049\\u004A';\n  t['\\u0133'] = '\\u0069\\u006A';\n  t['\\u013F'] = '\\u004C\\u00B7';\n  t['\\u0140'] = '\\u006C\\u00B7';\n  t['\\u0149'] = '\\u02BC\\u006E';\n  t['\\u017F'] = '\\u0073';\n  t['\\u01C4'] = '\\u0044\\u017D';\n  t['\\u01C5'] = '\\u0044\\u017E';\n  t['\\u01C6'] = '\\u0064\\u017E';\n  t['\\u01C7'] = '\\u004C\\u004A';\n  t['\\u01C8'] = '\\u004C\\u006A';\n  t['\\u01C9'] = '\\u006C\\u006A';\n  t['\\u01CA'] = '\\u004E\\u004A';\n  t['\\u01CB'] = '\\u004E\\u006A';\n  t['\\u01CC'] = '\\u006E\\u006A';\n  t['\\u01F1'] = '\\u0044\\u005A';\n  t['\\u01F2'] = '\\u0044\\u007A';\n  t['\\u01F3'] = '\\u0064\\u007A';\n  t['\\u02D8'] = '\\u0020\\u0306';\n  t['\\u02D9'] = '\\u0020\\u0307';\n  t['\\u02DA'] = '\\u0020\\u030A';\n  t['\\u02DB'] = '\\u0020\\u0328';\n  t['\\u02DC'] = '\\u0020\\u0303';\n  t['\\u02DD'] = '\\u0020\\u030B';\n  t['\\u037A'] = '\\u0020\\u0345';\n  t['\\u0384'] = '\\u0020\\u0301';\n  t['\\u03D0'] = '\\u03B2';\n  t['\\u03D1'] = '\\u03B8';\n  t['\\u03D2'] = '\\u03A5';\n  t['\\u03D5'] = '\\u03C6';\n  t['\\u03D6'] = '\\u03C0';\n  t['\\u03F0'] = '\\u03BA';\n  t['\\u03F1'] = '\\u03C1';\n  t['\\u03F2'] = '\\u03C2';\n  t['\\u03F4'] = '\\u0398';\n  t['\\u03F5'] = '\\u03B5';\n  t['\\u03F9'] = '\\u03A3';\n  t['\\u0587'] = '\\u0565\\u0582';\n  t['\\u0675'] = '\\u0627\\u0674';\n  t['\\u0676'] = '\\u0648\\u0674';\n  t['\\u0677'] = '\\u06C7\\u0674';\n  t['\\u0678'] = '\\u064A\\u0674';\n  t['\\u0E33'] = '\\u0E4D\\u0E32';\n  t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n  t['\\u0EDC'] = '\\u0EAB\\u0E99';\n  t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n  t['\\u0F77'] = '\\u0FB2\\u0F81';\n  t['\\u0F79'] = '\\u0FB3\\u0F81';\n  t['\\u1E9A'] = '\\u0061\\u02BE';\n  t['\\u1FBD'] = '\\u0020\\u0313';\n  t['\\u1FBF'] = '\\u0020\\u0313';\n  t['\\u1FC0'] = '\\u0020\\u0342';\n  t['\\u1FFE'] = '\\u0020\\u0314';\n  t['\\u2002'] = '\\u0020';\n  t['\\u2003'] = '\\u0020';\n  t['\\u2004'] = '\\u0020';\n  t['\\u2005'] = '\\u0020';\n  t['\\u2006'] = '\\u0020';\n  t['\\u2008'] = '\\u0020';\n  t['\\u2009'] = '\\u0020';\n  t['\\u200A'] = '\\u0020';\n  t['\\u2017'] = '\\u0020\\u0333';\n  t['\\u2024'] = '\\u002E';\n  t['\\u2025'] = '\\u002E\\u002E';\n  t['\\u2026'] = '\\u002E\\u002E\\u002E';\n  t['\\u2033'] = '\\u2032\\u2032';\n  t['\\u2034'] = '\\u2032\\u2032\\u2032';\n  t['\\u2036'] = '\\u2035\\u2035';\n  t['\\u2037'] = '\\u2035\\u2035\\u2035';\n  t['\\u203C'] = '\\u0021\\u0021';\n  t['\\u203E'] = '\\u0020\\u0305';\n  t['\\u2047'] = '\\u003F\\u003F';\n  t['\\u2048'] = '\\u003F\\u0021';\n  t['\\u2049'] = '\\u0021\\u003F';\n  t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n  t['\\u205F'] = '\\u0020';\n  t['\\u20A8'] = '\\u0052\\u0073';\n  t['\\u2100'] = '\\u0061\\u002F\\u0063';\n  t['\\u2101'] = '\\u0061\\u002F\\u0073';\n  t['\\u2103'] = '\\u00B0\\u0043';\n  t['\\u2105'] = '\\u0063\\u002F\\u006F';\n  t['\\u2106'] = '\\u0063\\u002F\\u0075';\n  t['\\u2107'] = '\\u0190';\n  t['\\u2109'] = '\\u00B0\\u0046';\n  t['\\u2116'] = '\\u004E\\u006F';\n  t['\\u2121'] = '\\u0054\\u0045\\u004C';\n  t['\\u2135'] = '\\u05D0';\n  t['\\u2136'] = '\\u05D1';\n  t['\\u2137'] = '\\u05D2';\n  t['\\u2138'] = '\\u05D3';\n  t['\\u213B'] = '\\u0046\\u0041\\u0058';\n  t['\\u2160'] = '\\u0049';\n  t['\\u2161'] = '\\u0049\\u0049';\n  t['\\u2162'] = '\\u0049\\u0049\\u0049';\n  t['\\u2163'] = '\\u0049\\u0056';\n  t['\\u2164'] = '\\u0056';\n  t['\\u2165'] = '\\u0056\\u0049';\n  t['\\u2166'] = '\\u0056\\u0049\\u0049';\n  t['\\u2167'] = '\\u0056\\u0049\\u0049\\u0049';\n  t['\\u2168'] = '\\u0049\\u0058';\n  t['\\u2169'] = '\\u0058';\n  t['\\u216A'] = '\\u0058\\u0049';\n  t['\\u216B'] = '\\u0058\\u0049\\u0049';\n  t['\\u216C'] = '\\u004C';\n  t['\\u216D'] = '\\u0043';\n  t['\\u216E'] = '\\u0044';\n  t['\\u216F'] = '\\u004D';\n  t['\\u2170'] = '\\u0069';\n  t['\\u2171'] = '\\u0069\\u0069';\n  t['\\u2172'] = '\\u0069\\u0069\\u0069';\n  t['\\u2173'] = '\\u0069\\u0076';\n  t['\\u2174'] = '\\u0076';\n  t['\\u2175'] = '\\u0076\\u0069';\n  t['\\u2176'] = '\\u0076\\u0069\\u0069';\n  t['\\u2177'] = '\\u0076\\u0069\\u0069\\u0069';\n  t['\\u2178'] = '\\u0069\\u0078';\n  t['\\u2179'] = '\\u0078';\n  t['\\u217A'] = '\\u0078\\u0069';\n  t['\\u217B'] = '\\u0078\\u0069\\u0069';\n  t['\\u217C'] = '\\u006C';\n  t['\\u217D'] = '\\u0063';\n  t['\\u217E'] = '\\u0064';\n  t['\\u217F'] = '\\u006D';\n  t['\\u222C'] = '\\u222B\\u222B';\n  t['\\u222D'] = '\\u222B\\u222B\\u222B';\n  t['\\u222F'] = '\\u222E\\u222E';\n  t['\\u2230'] = '\\u222E\\u222E\\u222E';\n  t['\\u2474'] = '\\u0028\\u0031\\u0029';\n  t['\\u2475'] = '\\u0028\\u0032\\u0029';\n  t['\\u2476'] = '\\u0028\\u0033\\u0029';\n  t['\\u2477'] = '\\u0028\\u0034\\u0029';\n  t['\\u2478'] = '\\u0028\\u0035\\u0029';\n  t['\\u2479'] = '\\u0028\\u0036\\u0029';\n  t['\\u247A'] = '\\u0028\\u0037\\u0029';\n  t['\\u247B'] = '\\u0028\\u0038\\u0029';\n  t['\\u247C'] = '\\u0028\\u0039\\u0029';\n  t['\\u247D'] = '\\u0028\\u0031\\u0030\\u0029';\n  t['\\u247E'] = '\\u0028\\u0031\\u0031\\u0029';\n  t['\\u247F'] = '\\u0028\\u0031\\u0032\\u0029';\n  t['\\u2480'] = '\\u0028\\u0031\\u0033\\u0029';\n  t['\\u2481'] = '\\u0028\\u0031\\u0034\\u0029';\n  t['\\u2482'] = '\\u0028\\u0031\\u0035\\u0029';\n  t['\\u2483'] = '\\u0028\\u0031\\u0036\\u0029';\n  t['\\u2484'] = '\\u0028\\u0031\\u0037\\u0029';\n  t['\\u2485'] = '\\u0028\\u0031\\u0038\\u0029';\n  t['\\u2486'] = '\\u0028\\u0031\\u0039\\u0029';\n  t['\\u2487'] = '\\u0028\\u0032\\u0030\\u0029';\n  t['\\u2488'] = '\\u0031\\u002E';\n  t['\\u2489'] = '\\u0032\\u002E';\n  t['\\u248A'] = '\\u0033\\u002E';\n  t['\\u248B'] = '\\u0034\\u002E';\n  t['\\u248C'] = '\\u0035\\u002E';\n  t['\\u248D'] = '\\u0036\\u002E';\n  t['\\u248E'] = '\\u0037\\u002E';\n  t['\\u248F'] = '\\u0038\\u002E';\n  t['\\u2490'] = '\\u0039\\u002E';\n  t['\\u2491'] = '\\u0031\\u0030\\u002E';\n  t['\\u2492'] = '\\u0031\\u0031\\u002E';\n  t['\\u2493'] = '\\u0031\\u0032\\u002E';\n  t['\\u2494'] = '\\u0031\\u0033\\u002E';\n  t['\\u2495'] = '\\u0031\\u0034\\u002E';\n  t['\\u2496'] = '\\u0031\\u0035\\u002E';\n  t['\\u2497'] = '\\u0031\\u0036\\u002E';\n  t['\\u2498'] = '\\u0031\\u0037\\u002E';\n  t['\\u2499'] = '\\u0031\\u0038\\u002E';\n  t['\\u249A'] = '\\u0031\\u0039\\u002E';\n  t['\\u249B'] = '\\u0032\\u0030\\u002E';\n  t['\\u249C'] = '\\u0028\\u0061\\u0029';\n  t['\\u249D'] = '\\u0028\\u0062\\u0029';\n  t['\\u249E'] = '\\u0028\\u0063\\u0029';\n  t['\\u249F'] = '\\u0028\\u0064\\u0029';\n  t['\\u24A0'] = '\\u0028\\u0065\\u0029';\n  t['\\u24A1'] = '\\u0028\\u0066\\u0029';\n  t['\\u24A2'] = '\\u0028\\u0067\\u0029';\n  t['\\u24A3'] = '\\u0028\\u0068\\u0029';\n  t['\\u24A4'] = '\\u0028\\u0069\\u0029';\n  t['\\u24A5'] = '\\u0028\\u006A\\u0029';\n  t['\\u24A6'] = '\\u0028\\u006B\\u0029';\n  t['\\u24A7'] = '\\u0028\\u006C\\u0029';\n  t['\\u24A8'] = '\\u0028\\u006D\\u0029';\n  t['\\u24A9'] = '\\u0028\\u006E\\u0029';\n  t['\\u24AA'] = '\\u0028\\u006F\\u0029';\n  t['\\u24AB'] = '\\u0028\\u0070\\u0029';\n  t['\\u24AC'] = '\\u0028\\u0071\\u0029';\n  t['\\u24AD'] = '\\u0028\\u0072\\u0029';\n  t['\\u24AE'] = '\\u0028\\u0073\\u0029';\n  t['\\u24AF'] = '\\u0028\\u0074\\u0029';\n  t['\\u24B0'] = '\\u0028\\u0075\\u0029';\n  t['\\u24B1'] = '\\u0028\\u0076\\u0029';\n  t['\\u24B2'] = '\\u0028\\u0077\\u0029';\n  t['\\u24B3'] = '\\u0028\\u0078\\u0029';\n  t['\\u24B4'] = '\\u0028\\u0079\\u0029';\n  t['\\u24B5'] = '\\u0028\\u007A\\u0029';\n  t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n  t['\\u2A74'] = '\\u003A\\u003A\\u003D';\n  t['\\u2A75'] = '\\u003D\\u003D';\n  t['\\u2A76'] = '\\u003D\\u003D\\u003D';\n  t['\\u2E9F'] = '\\u6BCD';\n  t['\\u2EF3'] = '\\u9F9F';\n  t['\\u2F00'] = '\\u4E00';\n  t['\\u2F01'] = '\\u4E28';\n  t['\\u2F02'] = '\\u4E36';\n  t['\\u2F03'] = '\\u4E3F';\n  t['\\u2F04'] = '\\u4E59';\n  t['\\u2F05'] = '\\u4E85';\n  t['\\u2F06'] = '\\u4E8C';\n  t['\\u2F07'] = '\\u4EA0';\n  t['\\u2F08'] = '\\u4EBA';\n  t['\\u2F09'] = '\\u513F';\n  t['\\u2F0A'] = '\\u5165';\n  t['\\u2F0B'] = '\\u516B';\n  t['\\u2F0C'] = '\\u5182';\n  t['\\u2F0D'] = '\\u5196';\n  t['\\u2F0E'] = '\\u51AB';\n  t['\\u2F0F'] = '\\u51E0';\n  t['\\u2F10'] = '\\u51F5';\n  t['\\u2F11'] = '\\u5200';\n  t['\\u2F12'] = '\\u529B';\n  t['\\u2F13'] = '\\u52F9';\n  t['\\u2F14'] = '\\u5315';\n  t['\\u2F15'] = '\\u531A';\n  t['\\u2F16'] = '\\u5338';\n  t['\\u2F17'] = '\\u5341';\n  t['\\u2F18'] = '\\u535C';\n  t['\\u2F19'] = '\\u5369';\n  t['\\u2F1A'] = '\\u5382';\n  t['\\u2F1B'] = '\\u53B6';\n  t['\\u2F1C'] = '\\u53C8';\n  t['\\u2F1D'] = '\\u53E3';\n  t['\\u2F1E'] = '\\u56D7';\n  t['\\u2F1F'] = '\\u571F';\n  t['\\u2F20'] = '\\u58EB';\n  t['\\u2F21'] = '\\u5902';\n  t['\\u2F22'] = '\\u590A';\n  t['\\u2F23'] = '\\u5915';\n  t['\\u2F24'] = '\\u5927';\n  t['\\u2F25'] = '\\u5973';\n  t['\\u2F26'] = '\\u5B50';\n  t['\\u2F27'] = '\\u5B80';\n  t['\\u2F28'] = '\\u5BF8';\n  t['\\u2F29'] = '\\u5C0F';\n  t['\\u2F2A'] = '\\u5C22';\n  t['\\u2F2B'] = '\\u5C38';\n  t['\\u2F2C'] = '\\u5C6E';\n  t['\\u2F2D'] = '\\u5C71';\n  t['\\u2F2E'] = '\\u5DDB';\n  t['\\u2F2F'] = '\\u5DE5';\n  t['\\u2F30'] = '\\u5DF1';\n  t['\\u2F31'] = '\\u5DFE';\n  t['\\u2F32'] = '\\u5E72';\n  t['\\u2F33'] = '\\u5E7A';\n  t['\\u2F34'] = '\\u5E7F';\n  t['\\u2F35'] = '\\u5EF4';\n  t['\\u2F36'] = '\\u5EFE';\n  t['\\u2F37'] = '\\u5F0B';\n  t['\\u2F38'] = '\\u5F13';\n  t['\\u2F39'] = '\\u5F50';\n  t['\\u2F3A'] = '\\u5F61';\n  t['\\u2F3B'] = '\\u5F73';\n  t['\\u2F3C'] = '\\u5FC3';\n  t['\\u2F3D'] = '\\u6208';\n  t['\\u2F3E'] = '\\u6236';\n  t['\\u2F3F'] = '\\u624B';\n  t['\\u2F40'] = '\\u652F';\n  t['\\u2F41'] = '\\u6534';\n  t['\\u2F42'] = '\\u6587';\n  t['\\u2F43'] = '\\u6597';\n  t['\\u2F44'] = '\\u65A4';\n  t['\\u2F45'] = '\\u65B9';\n  t['\\u2F46'] = '\\u65E0';\n  t['\\u2F47'] = '\\u65E5';\n  t['\\u2F48'] = '\\u66F0';\n  t['\\u2F49'] = '\\u6708';\n  t['\\u2F4A'] = '\\u6728';\n  t['\\u2F4B'] = '\\u6B20';\n  t['\\u2F4C'] = '\\u6B62';\n  t['\\u2F4D'] = '\\u6B79';\n  t['\\u2F4E'] = '\\u6BB3';\n  t['\\u2F4F'] = '\\u6BCB';\n  t['\\u2F50'] = '\\u6BD4';\n  t['\\u2F51'] = '\\u6BDB';\n  t['\\u2F52'] = '\\u6C0F';\n  t['\\u2F53'] = '\\u6C14';\n  t['\\u2F54'] = '\\u6C34';\n  t['\\u2F55'] = '\\u706B';\n  t['\\u2F56'] = '\\u722A';\n  t['\\u2F57'] = '\\u7236';\n  t['\\u2F58'] = '\\u723B';\n  t['\\u2F59'] = '\\u723F';\n  t['\\u2F5A'] = '\\u7247';\n  t['\\u2F5B'] = '\\u7259';\n  t['\\u2F5C'] = '\\u725B';\n  t['\\u2F5D'] = '\\u72AC';\n  t['\\u2F5E'] = '\\u7384';\n  t['\\u2F5F'] = '\\u7389';\n  t['\\u2F60'] = '\\u74DC';\n  t['\\u2F61'] = '\\u74E6';\n  t['\\u2F62'] = '\\u7518';\n  t['\\u2F63'] = '\\u751F';\n  t['\\u2F64'] = '\\u7528';\n  t['\\u2F65'] = '\\u7530';\n  t['\\u2F66'] = '\\u758B';\n  t['\\u2F67'] = '\\u7592';\n  t['\\u2F68'] = '\\u7676';\n  t['\\u2F69'] = '\\u767D';\n  t['\\u2F6A'] = '\\u76AE';\n  t['\\u2F6B'] = '\\u76BF';\n  t['\\u2F6C'] = '\\u76EE';\n  t['\\u2F6D'] = '\\u77DB';\n  t['\\u2F6E'] = '\\u77E2';\n  t['\\u2F6F'] = '\\u77F3';\n  t['\\u2F70'] = '\\u793A';\n  t['\\u2F71'] = '\\u79B8';\n  t['\\u2F72'] = '\\u79BE';\n  t['\\u2F73'] = '\\u7A74';\n  t['\\u2F74'] = '\\u7ACB';\n  t['\\u2F75'] = '\\u7AF9';\n  t['\\u2F76'] = '\\u7C73';\n  t['\\u2F77'] = '\\u7CF8';\n  t['\\u2F78'] = '\\u7F36';\n  t['\\u2F79'] = '\\u7F51';\n  t['\\u2F7A'] = '\\u7F8A';\n  t['\\u2F7B'] = '\\u7FBD';\n  t['\\u2F7C'] = '\\u8001';\n  t['\\u2F7D'] = '\\u800C';\n  t['\\u2F7E'] = '\\u8012';\n  t['\\u2F7F'] = '\\u8033';\n  t['\\u2F80'] = '\\u807F';\n  t['\\u2F81'] = '\\u8089';\n  t['\\u2F82'] = '\\u81E3';\n  t['\\u2F83'] = '\\u81EA';\n  t['\\u2F84'] = '\\u81F3';\n  t['\\u2F85'] = '\\u81FC';\n  t['\\u2F86'] = '\\u820C';\n  t['\\u2F87'] = '\\u821B';\n  t['\\u2F88'] = '\\u821F';\n  t['\\u2F89'] = '\\u826E';\n  t['\\u2F8A'] = '\\u8272';\n  t['\\u2F8B'] = '\\u8278';\n  t['\\u2F8C'] = '\\u864D';\n  t['\\u2F8D'] = '\\u866B';\n  t['\\u2F8E'] = '\\u8840';\n  t['\\u2F8F'] = '\\u884C';\n  t['\\u2F90'] = '\\u8863';\n  t['\\u2F91'] = '\\u897E';\n  t['\\u2F92'] = '\\u898B';\n  t['\\u2F93'] = '\\u89D2';\n  t['\\u2F94'] = '\\u8A00';\n  t['\\u2F95'] = '\\u8C37';\n  t['\\u2F96'] = '\\u8C46';\n  t['\\u2F97'] = '\\u8C55';\n  t['\\u2F98'] = '\\u8C78';\n  t['\\u2F99'] = '\\u8C9D';\n  t['\\u2F9A'] = '\\u8D64';\n  t['\\u2F9B'] = '\\u8D70';\n  t['\\u2F9C'] = '\\u8DB3';\n  t['\\u2F9D'] = '\\u8EAB';\n  t['\\u2F9E'] = '\\u8ECA';\n  t['\\u2F9F'] = '\\u8F9B';\n  t['\\u2FA0'] = '\\u8FB0';\n  t['\\u2FA1'] = '\\u8FB5';\n  t['\\u2FA2'] = '\\u9091';\n  t['\\u2FA3'] = '\\u9149';\n  t['\\u2FA4'] = '\\u91C6';\n  t['\\u2FA5'] = '\\u91CC';\n  t['\\u2FA6'] = '\\u91D1';\n  t['\\u2FA7'] = '\\u9577';\n  t['\\u2FA8'] = '\\u9580';\n  t['\\u2FA9'] = '\\u961C';\n  t['\\u2FAA'] = '\\u96B6';\n  t['\\u2FAB'] = '\\u96B9';\n  t['\\u2FAC'] = '\\u96E8';\n  t['\\u2FAD'] = '\\u9751';\n  t['\\u2FAE'] = '\\u975E';\n  t['\\u2FAF'] = '\\u9762';\n  t['\\u2FB0'] = '\\u9769';\n  t['\\u2FB1'] = '\\u97CB';\n  t['\\u2FB2'] = '\\u97ED';\n  t['\\u2FB3'] = '\\u97F3';\n  t['\\u2FB4'] = '\\u9801';\n  t['\\u2FB5'] = '\\u98A8';\n  t['\\u2FB6'] = '\\u98DB';\n  t['\\u2FB7'] = '\\u98DF';\n  t['\\u2FB8'] = '\\u9996';\n  t['\\u2FB9'] = '\\u9999';\n  t['\\u2FBA'] = '\\u99AC';\n  t['\\u2FBB'] = '\\u9AA8';\n  t['\\u2FBC'] = '\\u9AD8';\n  t['\\u2FBD'] = '\\u9ADF';\n  t['\\u2FBE'] = '\\u9B25';\n  t['\\u2FBF'] = '\\u9B2F';\n  t['\\u2FC0'] = '\\u9B32';\n  t['\\u2FC1'] = '\\u9B3C';\n  t['\\u2FC2'] = '\\u9B5A';\n  t['\\u2FC3'] = '\\u9CE5';\n  t['\\u2FC4'] = '\\u9E75';\n  t['\\u2FC5'] = '\\u9E7F';\n  t['\\u2FC6'] = '\\u9EA5';\n  t['\\u2FC7'] = '\\u9EBB';\n  t['\\u2FC8'] = '\\u9EC3';\n  t['\\u2FC9'] = '\\u9ECD';\n  t['\\u2FCA'] = '\\u9ED1';\n  t['\\u2FCB'] = '\\u9EF9';\n  t['\\u2FCC'] = '\\u9EFD';\n  t['\\u2FCD'] = '\\u9F0E';\n  t['\\u2FCE'] = '\\u9F13';\n  t['\\u2FCF'] = '\\u9F20';\n  t['\\u2FD0'] = '\\u9F3B';\n  t['\\u2FD1'] = '\\u9F4A';\n  t['\\u2FD2'] = '\\u9F52';\n  t['\\u2FD3'] = '\\u9F8D';\n  t['\\u2FD4'] = '\\u9F9C';\n  t['\\u2FD5'] = '\\u9FA0';\n  t['\\u3036'] = '\\u3012';\n  t['\\u3038'] = '\\u5341';\n  t['\\u3039'] = '\\u5344';\n  t['\\u303A'] = '\\u5345';\n  t['\\u309B'] = '\\u0020\\u3099';\n  t['\\u309C'] = '\\u0020\\u309A';\n  t['\\u3131'] = '\\u1100';\n  t['\\u3132'] = '\\u1101';\n  t['\\u3133'] = '\\u11AA';\n  t['\\u3134'] = '\\u1102';\n  t['\\u3135'] = '\\u11AC';\n  t['\\u3136'] = '\\u11AD';\n  t['\\u3137'] = '\\u1103';\n  t['\\u3138'] = '\\u1104';\n  t['\\u3139'] = '\\u1105';\n  t['\\u313A'] = '\\u11B0';\n  t['\\u313B'] = '\\u11B1';\n  t['\\u313C'] = '\\u11B2';\n  t['\\u313D'] = '\\u11B3';\n  t['\\u313E'] = '\\u11B4';\n  t['\\u313F'] = '\\u11B5';\n  t['\\u3140'] = '\\u111A';\n  t['\\u3141'] = '\\u1106';\n  t['\\u3142'] = '\\u1107';\n  t['\\u3143'] = '\\u1108';\n  t['\\u3144'] = '\\u1121';\n  t['\\u3145'] = '\\u1109';\n  t['\\u3146'] = '\\u110A';\n  t['\\u3147'] = '\\u110B';\n  t['\\u3148'] = '\\u110C';\n  t['\\u3149'] = '\\u110D';\n  t['\\u314A'] = '\\u110E';\n  t['\\u314B'] = '\\u110F';\n  t['\\u314C'] = '\\u1110';\n  t['\\u314D'] = '\\u1111';\n  t['\\u314E'] = '\\u1112';\n  t['\\u314F'] = '\\u1161';\n  t['\\u3150'] = '\\u1162';\n  t['\\u3151'] = '\\u1163';\n  t['\\u3152'] = '\\u1164';\n  t['\\u3153'] = '\\u1165';\n  t['\\u3154'] = '\\u1166';\n  t['\\u3155'] = '\\u1167';\n  t['\\u3156'] = '\\u1168';\n  t['\\u3157'] = '\\u1169';\n  t['\\u3158'] = '\\u116A';\n  t['\\u3159'] = '\\u116B';\n  t['\\u315A'] = '\\u116C';\n  t['\\u315B'] = '\\u116D';\n  t['\\u315C'] = '\\u116E';\n  t['\\u315D'] = '\\u116F';\n  t['\\u315E'] = '\\u1170';\n  t['\\u315F'] = '\\u1171';\n  t['\\u3160'] = '\\u1172';\n  t['\\u3161'] = '\\u1173';\n  t['\\u3162'] = '\\u1174';\n  t['\\u3163'] = '\\u1175';\n  t['\\u3164'] = '\\u1160';\n  t['\\u3165'] = '\\u1114';\n  t['\\u3166'] = '\\u1115';\n  t['\\u3167'] = '\\u11C7';\n  t['\\u3168'] = '\\u11C8';\n  t['\\u3169'] = '\\u11CC';\n  t['\\u316A'] = '\\u11CE';\n  t['\\u316B'] = '\\u11D3';\n  t['\\u316C'] = '\\u11D7';\n  t['\\u316D'] = '\\u11D9';\n  t['\\u316E'] = '\\u111C';\n  t['\\u316F'] = '\\u11DD';\n  t['\\u3170'] = '\\u11DF';\n  t['\\u3171'] = '\\u111D';\n  t['\\u3172'] = '\\u111E';\n  t['\\u3173'] = '\\u1120';\n  t['\\u3174'] = '\\u1122';\n  t['\\u3175'] = '\\u1123';\n  t['\\u3176'] = '\\u1127';\n  t['\\u3177'] = '\\u1129';\n  t['\\u3178'] = '\\u112B';\n  t['\\u3179'] = '\\u112C';\n  t['\\u317A'] = '\\u112D';\n  t['\\u317B'] = '\\u112E';\n  t['\\u317C'] = '\\u112F';\n  t['\\u317D'] = '\\u1132';\n  t['\\u317E'] = '\\u1136';\n  t['\\u317F'] = '\\u1140';\n  t['\\u3180'] = '\\u1147';\n  t['\\u3181'] = '\\u114C';\n  t['\\u3182'] = '\\u11F1';\n  t['\\u3183'] = '\\u11F2';\n  t['\\u3184'] = '\\u1157';\n  t['\\u3185'] = '\\u1158';\n  t['\\u3186'] = '\\u1159';\n  t['\\u3187'] = '\\u1184';\n  t['\\u3188'] = '\\u1185';\n  t['\\u3189'] = '\\u1188';\n  t['\\u318A'] = '\\u1191';\n  t['\\u318B'] = '\\u1192';\n  t['\\u318C'] = '\\u1194';\n  t['\\u318D'] = '\\u119E';\n  t['\\u318E'] = '\\u11A1';\n  t['\\u3200'] = '\\u0028\\u1100\\u0029';\n  t['\\u3201'] = '\\u0028\\u1102\\u0029';\n  t['\\u3202'] = '\\u0028\\u1103\\u0029';\n  t['\\u3203'] = '\\u0028\\u1105\\u0029';\n  t['\\u3204'] = '\\u0028\\u1106\\u0029';\n  t['\\u3205'] = '\\u0028\\u1107\\u0029';\n  t['\\u3206'] = '\\u0028\\u1109\\u0029';\n  t['\\u3207'] = '\\u0028\\u110B\\u0029';\n  t['\\u3208'] = '\\u0028\\u110C\\u0029';\n  t['\\u3209'] = '\\u0028\\u110E\\u0029';\n  t['\\u320A'] = '\\u0028\\u110F\\u0029';\n  t['\\u320B'] = '\\u0028\\u1110\\u0029';\n  t['\\u320C'] = '\\u0028\\u1111\\u0029';\n  t['\\u320D'] = '\\u0028\\u1112\\u0029';\n  t['\\u320E'] = '\\u0028\\u1100\\u1161\\u0029';\n  t['\\u320F'] = '\\u0028\\u1102\\u1161\\u0029';\n  t['\\u3210'] = '\\u0028\\u1103\\u1161\\u0029';\n  t['\\u3211'] = '\\u0028\\u1105\\u1161\\u0029';\n  t['\\u3212'] = '\\u0028\\u1106\\u1161\\u0029';\n  t['\\u3213'] = '\\u0028\\u1107\\u1161\\u0029';\n  t['\\u3214'] = '\\u0028\\u1109\\u1161\\u0029';\n  t['\\u3215'] = '\\u0028\\u110B\\u1161\\u0029';\n  t['\\u3216'] = '\\u0028\\u110C\\u1161\\u0029';\n  t['\\u3217'] = '\\u0028\\u110E\\u1161\\u0029';\n  t['\\u3218'] = '\\u0028\\u110F\\u1161\\u0029';\n  t['\\u3219'] = '\\u0028\\u1110\\u1161\\u0029';\n  t['\\u321A'] = '\\u0028\\u1111\\u1161\\u0029';\n  t['\\u321B'] = '\\u0028\\u1112\\u1161\\u0029';\n  t['\\u321C'] = '\\u0028\\u110C\\u116E\\u0029';\n  t['\\u321D'] = '\\u0028\\u110B\\u1169\\u110C\\u1165\\u11AB\\u0029';\n  t['\\u321E'] = '\\u0028\\u110B\\u1169\\u1112\\u116E\\u0029';\n  t['\\u3220'] = '\\u0028\\u4E00\\u0029';\n  t['\\u3221'] = '\\u0028\\u4E8C\\u0029';\n  t['\\u3222'] = '\\u0028\\u4E09\\u0029';\n  t['\\u3223'] = '\\u0028\\u56DB\\u0029';\n  t['\\u3224'] = '\\u0028\\u4E94\\u0029';\n  t['\\u3225'] = '\\u0028\\u516D\\u0029';\n  t['\\u3226'] = '\\u0028\\u4E03\\u0029';\n  t['\\u3227'] = '\\u0028\\u516B\\u0029';\n  t['\\u3228'] = '\\u0028\\u4E5D\\u0029';\n  t['\\u3229'] = '\\u0028\\u5341\\u0029';\n  t['\\u322A'] = '\\u0028\\u6708\\u0029';\n  t['\\u322B'] = '\\u0028\\u706B\\u0029';\n  t['\\u322C'] = '\\u0028\\u6C34\\u0029';\n  t['\\u322D'] = '\\u0028\\u6728\\u0029';\n  t['\\u322E'] = '\\u0028\\u91D1\\u0029';\n  t['\\u322F'] = '\\u0028\\u571F\\u0029';\n  t['\\u3230'] = '\\u0028\\u65E5\\u0029';\n  t['\\u3231'] = '\\u0028\\u682A\\u0029';\n  t['\\u3232'] = '\\u0028\\u6709\\u0029';\n  t['\\u3233'] = '\\u0028\\u793E\\u0029';\n  t['\\u3234'] = '\\u0028\\u540D\\u0029';\n  t['\\u3235'] = '\\u0028\\u7279\\u0029';\n  t['\\u3236'] = '\\u0028\\u8CA1\\u0029';\n  t['\\u3237'] = '\\u0028\\u795D\\u0029';\n  t['\\u3238'] = '\\u0028\\u52B4\\u0029';\n  t['\\u3239'] = '\\u0028\\u4EE3\\u0029';\n  t['\\u323A'] = '\\u0028\\u547C\\u0029';\n  t['\\u323B'] = '\\u0028\\u5B66\\u0029';\n  t['\\u323C'] = '\\u0028\\u76E3\\u0029';\n  t['\\u323D'] = '\\u0028\\u4F01\\u0029';\n  t['\\u323E'] = '\\u0028\\u8CC7\\u0029';\n  t['\\u323F'] = '\\u0028\\u5354\\u0029';\n  t['\\u3240'] = '\\u0028\\u796D\\u0029';\n  t['\\u3241'] = '\\u0028\\u4F11\\u0029';\n  t['\\u3242'] = '\\u0028\\u81EA\\u0029';\n  t['\\u3243'] = '\\u0028\\u81F3\\u0029';\n  t['\\u32C0'] = '\\u0031\\u6708';\n  t['\\u32C1'] = '\\u0032\\u6708';\n  t['\\u32C2'] = '\\u0033\\u6708';\n  t['\\u32C3'] = '\\u0034\\u6708';\n  t['\\u32C4'] = '\\u0035\\u6708';\n  t['\\u32C5'] = '\\u0036\\u6708';\n  t['\\u32C6'] = '\\u0037\\u6708';\n  t['\\u32C7'] = '\\u0038\\u6708';\n  t['\\u32C8'] = '\\u0039\\u6708';\n  t['\\u32C9'] = '\\u0031\\u0030\\u6708';\n  t['\\u32CA'] = '\\u0031\\u0031\\u6708';\n  t['\\u32CB'] = '\\u0031\\u0032\\u6708';\n  t['\\u3358'] = '\\u0030\\u70B9';\n  t['\\u3359'] = '\\u0031\\u70B9';\n  t['\\u335A'] = '\\u0032\\u70B9';\n  t['\\u335B'] = '\\u0033\\u70B9';\n  t['\\u335C'] = '\\u0034\\u70B9';\n  t['\\u335D'] = '\\u0035\\u70B9';\n  t['\\u335E'] = '\\u0036\\u70B9';\n  t['\\u335F'] = '\\u0037\\u70B9';\n  t['\\u3360'] = '\\u0038\\u70B9';\n  t['\\u3361'] = '\\u0039\\u70B9';\n  t['\\u3362'] = '\\u0031\\u0030\\u70B9';\n  t['\\u3363'] = '\\u0031\\u0031\\u70B9';\n  t['\\u3364'] = '\\u0031\\u0032\\u70B9';\n  t['\\u3365'] = '\\u0031\\u0033\\u70B9';\n  t['\\u3366'] = '\\u0031\\u0034\\u70B9';\n  t['\\u3367'] = '\\u0031\\u0035\\u70B9';\n  t['\\u3368'] = '\\u0031\\u0036\\u70B9';\n  t['\\u3369'] = '\\u0031\\u0037\\u70B9';\n  t['\\u336A'] = '\\u0031\\u0038\\u70B9';\n  t['\\u336B'] = '\\u0031\\u0039\\u70B9';\n  t['\\u336C'] = '\\u0032\\u0030\\u70B9';\n  t['\\u336D'] = '\\u0032\\u0031\\u70B9';\n  t['\\u336E'] = '\\u0032\\u0032\\u70B9';\n  t['\\u336F'] = '\\u0032\\u0033\\u70B9';\n  t['\\u3370'] = '\\u0032\\u0034\\u70B9';\n  t['\\u33E0'] = '\\u0031\\u65E5';\n  t['\\u33E1'] = '\\u0032\\u65E5';\n  t['\\u33E2'] = '\\u0033\\u65E5';\n  t['\\u33E3'] = '\\u0034\\u65E5';\n  t['\\u33E4'] = '\\u0035\\u65E5';\n  t['\\u33E5'] = '\\u0036\\u65E5';\n  t['\\u33E6'] = '\\u0037\\u65E5';\n  t['\\u33E7'] = '\\u0038\\u65E5';\n  t['\\u33E8'] = '\\u0039\\u65E5';\n  t['\\u33E9'] = '\\u0031\\u0030\\u65E5';\n  t['\\u33EA'] = '\\u0031\\u0031\\u65E5';\n  t['\\u33EB'] = '\\u0031\\u0032\\u65E5';\n  t['\\u33EC'] = '\\u0031\\u0033\\u65E5';\n  t['\\u33ED'] = '\\u0031\\u0034\\u65E5';\n  t['\\u33EE'] = '\\u0031\\u0035\\u65E5';\n  t['\\u33EF'] = '\\u0031\\u0036\\u65E5';\n  t['\\u33F0'] = '\\u0031\\u0037\\u65E5';\n  t['\\u33F1'] = '\\u0031\\u0038\\u65E5';\n  t['\\u33F2'] = '\\u0031\\u0039\\u65E5';\n  t['\\u33F3'] = '\\u0032\\u0030\\u65E5';\n  t['\\u33F4'] = '\\u0032\\u0031\\u65E5';\n  t['\\u33F5'] = '\\u0032\\u0032\\u65E5';\n  t['\\u33F6'] = '\\u0032\\u0033\\u65E5';\n  t['\\u33F7'] = '\\u0032\\u0034\\u65E5';\n  t['\\u33F8'] = '\\u0032\\u0035\\u65E5';\n  t['\\u33F9'] = '\\u0032\\u0036\\u65E5';\n  t['\\u33FA'] = '\\u0032\\u0037\\u65E5';\n  t['\\u33FB'] = '\\u0032\\u0038\\u65E5';\n  t['\\u33FC'] = '\\u0032\\u0039\\u65E5';\n  t['\\u33FD'] = '\\u0033\\u0030\\u65E5';\n  t['\\u33FE'] = '\\u0033\\u0031\\u65E5';\n  t['\\uFB00'] = '\\u0066\\u0066';\n  t['\\uFB01'] = '\\u0066\\u0069';\n  t['\\uFB02'] = '\\u0066\\u006C';\n  t['\\uFB03'] = '\\u0066\\u0066\\u0069';\n  t['\\uFB04'] = '\\u0066\\u0066\\u006C';\n  t['\\uFB05'] = '\\u017F\\u0074';\n  t['\\uFB06'] = '\\u0073\\u0074';\n  t['\\uFB13'] = '\\u0574\\u0576';\n  t['\\uFB14'] = '\\u0574\\u0565';\n  t['\\uFB15'] = '\\u0574\\u056B';\n  t['\\uFB16'] = '\\u057E\\u0576';\n  t['\\uFB17'] = '\\u0574\\u056D';\n  t['\\uFB4F'] = '\\u05D0\\u05DC';\n  t['\\uFB50'] = '\\u0671';\n  t['\\uFB51'] = '\\u0671';\n  t['\\uFB52'] = '\\u067B';\n  t['\\uFB53'] = '\\u067B';\n  t['\\uFB54'] = '\\u067B';\n  t['\\uFB55'] = '\\u067B';\n  t['\\uFB56'] = '\\u067E';\n  t['\\uFB57'] = '\\u067E';\n  t['\\uFB58'] = '\\u067E';\n  t['\\uFB59'] = '\\u067E';\n  t['\\uFB5A'] = '\\u0680';\n  t['\\uFB5B'] = '\\u0680';\n  t['\\uFB5C'] = '\\u0680';\n  t['\\uFB5D'] = '\\u0680';\n  t['\\uFB5E'] = '\\u067A';\n  t['\\uFB5F'] = '\\u067A';\n  t['\\uFB60'] = '\\u067A';\n  t['\\uFB61'] = '\\u067A';\n  t['\\uFB62'] = '\\u067F';\n  t['\\uFB63'] = '\\u067F';\n  t['\\uFB64'] = '\\u067F';\n  t['\\uFB65'] = '\\u067F';\n  t['\\uFB66'] = '\\u0679';\n  t['\\uFB67'] = '\\u0679';\n  t['\\uFB68'] = '\\u0679';\n  t['\\uFB69'] = '\\u0679';\n  t['\\uFB6A'] = '\\u06A4';\n  t['\\uFB6B'] = '\\u06A4';\n  t['\\uFB6C'] = '\\u06A4';\n  t['\\uFB6D'] = '\\u06A4';\n  t['\\uFB6E'] = '\\u06A6';\n  t['\\uFB6F'] = '\\u06A6';\n  t['\\uFB70'] = '\\u06A6';\n  t['\\uFB71'] = '\\u06A6';\n  t['\\uFB72'] = '\\u0684';\n  t['\\uFB73'] = '\\u0684';\n  t['\\uFB74'] = '\\u0684';\n  t['\\uFB75'] = '\\u0684';\n  t['\\uFB76'] = '\\u0683';\n  t['\\uFB77'] = '\\u0683';\n  t['\\uFB78'] = '\\u0683';\n  t['\\uFB79'] = '\\u0683';\n  t['\\uFB7A'] = '\\u0686';\n  t['\\uFB7B'] = '\\u0686';\n  t['\\uFB7C'] = '\\u0686';\n  t['\\uFB7D'] = '\\u0686';\n  t['\\uFB7E'] = '\\u0687';\n  t['\\uFB7F'] = '\\u0687';\n  t['\\uFB80'] = '\\u0687';\n  t['\\uFB81'] = '\\u0687';\n  t['\\uFB82'] = '\\u068D';\n  t['\\uFB83'] = '\\u068D';\n  t['\\uFB84'] = '\\u068C';\n  t['\\uFB85'] = '\\u068C';\n  t['\\uFB86'] = '\\u068E';\n  t['\\uFB87'] = '\\u068E';\n  t['\\uFB88'] = '\\u0688';\n  t['\\uFB89'] = '\\u0688';\n  t['\\uFB8A'] = '\\u0698';\n  t['\\uFB8B'] = '\\u0698';\n  t['\\uFB8C'] = '\\u0691';\n  t['\\uFB8D'] = '\\u0691';\n  t['\\uFB8E'] = '\\u06A9';\n  t['\\uFB8F'] = '\\u06A9';\n  t['\\uFB90'] = '\\u06A9';\n  t['\\uFB91'] = '\\u06A9';\n  t['\\uFB92'] = '\\u06AF';\n  t['\\uFB93'] = '\\u06AF';\n  t['\\uFB94'] = '\\u06AF';\n  t['\\uFB95'] = '\\u06AF';\n  t['\\uFB96'] = '\\u06B3';\n  t['\\uFB97'] = '\\u06B3';\n  t['\\uFB98'] = '\\u06B3';\n  t['\\uFB99'] = '\\u06B3';\n  t['\\uFB9A'] = '\\u06B1';\n  t['\\uFB9B'] = '\\u06B1';\n  t['\\uFB9C'] = '\\u06B1';\n  t['\\uFB9D'] = '\\u06B1';\n  t['\\uFB9E'] = '\\u06BA';\n  t['\\uFB9F'] = '\\u06BA';\n  t['\\uFBA0'] = '\\u06BB';\n  t['\\uFBA1'] = '\\u06BB';\n  t['\\uFBA2'] = '\\u06BB';\n  t['\\uFBA3'] = '\\u06BB';\n  t['\\uFBA4'] = '\\u06C0';\n  t['\\uFBA5'] = '\\u06C0';\n  t['\\uFBA6'] = '\\u06C1';\n  t['\\uFBA7'] = '\\u06C1';\n  t['\\uFBA8'] = '\\u06C1';\n  t['\\uFBA9'] = '\\u06C1';\n  t['\\uFBAA'] = '\\u06BE';\n  t['\\uFBAB'] = '\\u06BE';\n  t['\\uFBAC'] = '\\u06BE';\n  t['\\uFBAD'] = '\\u06BE';\n  t['\\uFBAE'] = '\\u06D2';\n  t['\\uFBAF'] = '\\u06D2';\n  t['\\uFBB0'] = '\\u06D3';\n  t['\\uFBB1'] = '\\u06D3';\n  t['\\uFBD3'] = '\\u06AD';\n  t['\\uFBD4'] = '\\u06AD';\n  t['\\uFBD5'] = '\\u06AD';\n  t['\\uFBD6'] = '\\u06AD';\n  t['\\uFBD7'] = '\\u06C7';\n  t['\\uFBD8'] = '\\u06C7';\n  t['\\uFBD9'] = '\\u06C6';\n  t['\\uFBDA'] = '\\u06C6';\n  t['\\uFBDB'] = '\\u06C8';\n  t['\\uFBDC'] = '\\u06C8';\n  t['\\uFBDD'] = '\\u0677';\n  t['\\uFBDE'] = '\\u06CB';\n  t['\\uFBDF'] = '\\u06CB';\n  t['\\uFBE0'] = '\\u06C5';\n  t['\\uFBE1'] = '\\u06C5';\n  t['\\uFBE2'] = '\\u06C9';\n  t['\\uFBE3'] = '\\u06C9';\n  t['\\uFBE4'] = '\\u06D0';\n  t['\\uFBE5'] = '\\u06D0';\n  t['\\uFBE6'] = '\\u06D0';\n  t['\\uFBE7'] = '\\u06D0';\n  t['\\uFBE8'] = '\\u0649';\n  t['\\uFBE9'] = '\\u0649';\n  t['\\uFBEA'] = '\\u0626\\u0627';\n  t['\\uFBEB'] = '\\u0626\\u0627';\n  t['\\uFBEC'] = '\\u0626\\u06D5';\n  t['\\uFBED'] = '\\u0626\\u06D5';\n  t['\\uFBEE'] = '\\u0626\\u0648';\n  t['\\uFBEF'] = '\\u0626\\u0648';\n  t['\\uFBF0'] = '\\u0626\\u06C7';\n  t['\\uFBF1'] = '\\u0626\\u06C7';\n  t['\\uFBF2'] = '\\u0626\\u06C6';\n  t['\\uFBF3'] = '\\u0626\\u06C6';\n  t['\\uFBF4'] = '\\u0626\\u06C8';\n  t['\\uFBF5'] = '\\u0626\\u06C8';\n  t['\\uFBF6'] = '\\u0626\\u06D0';\n  t['\\uFBF7'] = '\\u0626\\u06D0';\n  t['\\uFBF8'] = '\\u0626\\u06D0';\n  t['\\uFBF9'] = '\\u0626\\u0649';\n  t['\\uFBFA'] = '\\u0626\\u0649';\n  t['\\uFBFB'] = '\\u0626\\u0649';\n  t['\\uFBFC'] = '\\u06CC';\n  t['\\uFBFD'] = '\\u06CC';\n  t['\\uFBFE'] = '\\u06CC';\n  t['\\uFBFF'] = '\\u06CC';\n  t['\\uFC00'] = '\\u0626\\u062C';\n  t['\\uFC01'] = '\\u0626\\u062D';\n  t['\\uFC02'] = '\\u0626\\u0645';\n  t['\\uFC03'] = '\\u0626\\u0649';\n  t['\\uFC04'] = '\\u0626\\u064A';\n  t['\\uFC05'] = '\\u0628\\u062C';\n  t['\\uFC06'] = '\\u0628\\u062D';\n  t['\\uFC07'] = '\\u0628\\u062E';\n  t['\\uFC08'] = '\\u0628\\u0645';\n  t['\\uFC09'] = '\\u0628\\u0649';\n  t['\\uFC0A'] = '\\u0628\\u064A';\n  t['\\uFC0B'] = '\\u062A\\u062C';\n  t['\\uFC0C'] = '\\u062A\\u062D';\n  t['\\uFC0D'] = '\\u062A\\u062E';\n  t['\\uFC0E'] = '\\u062A\\u0645';\n  t['\\uFC0F'] = '\\u062A\\u0649';\n  t['\\uFC10'] = '\\u062A\\u064A';\n  t['\\uFC11'] = '\\u062B\\u062C';\n  t['\\uFC12'] = '\\u062B\\u0645';\n  t['\\uFC13'] = '\\u062B\\u0649';\n  t['\\uFC14'] = '\\u062B\\u064A';\n  t['\\uFC15'] = '\\u062C\\u062D';\n  t['\\uFC16'] = '\\u062C\\u0645';\n  t['\\uFC17'] = '\\u062D\\u062C';\n  t['\\uFC18'] = '\\u062D\\u0645';\n  t['\\uFC19'] = '\\u062E\\u062C';\n  t['\\uFC1A'] = '\\u062E\\u062D';\n  t['\\uFC1B'] = '\\u062E\\u0645';\n  t['\\uFC1C'] = '\\u0633\\u062C';\n  t['\\uFC1D'] = '\\u0633\\u062D';\n  t['\\uFC1E'] = '\\u0633\\u062E';\n  t['\\uFC1F'] = '\\u0633\\u0645';\n  t['\\uFC20'] = '\\u0635\\u062D';\n  t['\\uFC21'] = '\\u0635\\u0645';\n  t['\\uFC22'] = '\\u0636\\u062C';\n  t['\\uFC23'] = '\\u0636\\u062D';\n  t['\\uFC24'] = '\\u0636\\u062E';\n  t['\\uFC25'] = '\\u0636\\u0645';\n  t['\\uFC26'] = '\\u0637\\u062D';\n  t['\\uFC27'] = '\\u0637\\u0645';\n  t['\\uFC28'] = '\\u0638\\u0645';\n  t['\\uFC29'] = '\\u0639\\u062C';\n  t['\\uFC2A'] = '\\u0639\\u0645';\n  t['\\uFC2B'] = '\\u063A\\u062C';\n  t['\\uFC2C'] = '\\u063A\\u0645';\n  t['\\uFC2D'] = '\\u0641\\u062C';\n  t['\\uFC2E'] = '\\u0641\\u062D';\n  t['\\uFC2F'] = '\\u0641\\u062E';\n  t['\\uFC30'] = '\\u0641\\u0645';\n  t['\\uFC31'] = '\\u0641\\u0649';\n  t['\\uFC32'] = '\\u0641\\u064A';\n  t['\\uFC33'] = '\\u0642\\u062D';\n  t['\\uFC34'] = '\\u0642\\u0645';\n  t['\\uFC35'] = '\\u0642\\u0649';\n  t['\\uFC36'] = '\\u0642\\u064A';\n  t['\\uFC37'] = '\\u0643\\u0627';\n  t['\\uFC38'] = '\\u0643\\u062C';\n  t['\\uFC39'] = '\\u0643\\u062D';\n  t['\\uFC3A'] = '\\u0643\\u062E';\n  t['\\uFC3B'] = '\\u0643\\u0644';\n  t['\\uFC3C'] = '\\u0643\\u0645';\n  t['\\uFC3D'] = '\\u0643\\u0649';\n  t['\\uFC3E'] = '\\u0643\\u064A';\n  t['\\uFC3F'] = '\\u0644\\u062C';\n  t['\\uFC40'] = '\\u0644\\u062D';\n  t['\\uFC41'] = '\\u0644\\u062E';\n  t['\\uFC42'] = '\\u0644\\u0645';\n  t['\\uFC43'] = '\\u0644\\u0649';\n  t['\\uFC44'] = '\\u0644\\u064A';\n  t['\\uFC45'] = '\\u0645\\u062C';\n  t['\\uFC46'] = '\\u0645\\u062D';\n  t['\\uFC47'] = '\\u0645\\u062E';\n  t['\\uFC48'] = '\\u0645\\u0645';\n  t['\\uFC49'] = '\\u0645\\u0649';\n  t['\\uFC4A'] = '\\u0645\\u064A';\n  t['\\uFC4B'] = '\\u0646\\u062C';\n  t['\\uFC4C'] = '\\u0646\\u062D';\n  t['\\uFC4D'] = '\\u0646\\u062E';\n  t['\\uFC4E'] = '\\u0646\\u0645';\n  t['\\uFC4F'] = '\\u0646\\u0649';\n  t['\\uFC50'] = '\\u0646\\u064A';\n  t['\\uFC51'] = '\\u0647\\u062C';\n  t['\\uFC52'] = '\\u0647\\u0645';\n  t['\\uFC53'] = '\\u0647\\u0649';\n  t['\\uFC54'] = '\\u0647\\u064A';\n  t['\\uFC55'] = '\\u064A\\u062C';\n  t['\\uFC56'] = '\\u064A\\u062D';\n  t['\\uFC57'] = '\\u064A\\u062E';\n  t['\\uFC58'] = '\\u064A\\u0645';\n  t['\\uFC59'] = '\\u064A\\u0649';\n  t['\\uFC5A'] = '\\u064A\\u064A';\n  t['\\uFC5B'] = '\\u0630\\u0670';\n  t['\\uFC5C'] = '\\u0631\\u0670';\n  t['\\uFC5D'] = '\\u0649\\u0670';\n  t['\\uFC5E'] = '\\u0020\\u064C\\u0651';\n  t['\\uFC5F'] = '\\u0020\\u064D\\u0651';\n  t['\\uFC60'] = '\\u0020\\u064E\\u0651';\n  t['\\uFC61'] = '\\u0020\\u064F\\u0651';\n  t['\\uFC62'] = '\\u0020\\u0650\\u0651';\n  t['\\uFC63'] = '\\u0020\\u0651\\u0670';\n  t['\\uFC64'] = '\\u0626\\u0631';\n  t['\\uFC65'] = '\\u0626\\u0632';\n  t['\\uFC66'] = '\\u0626\\u0645';\n  t['\\uFC67'] = '\\u0626\\u0646';\n  t['\\uFC68'] = '\\u0626\\u0649';\n  t['\\uFC69'] = '\\u0626\\u064A';\n  t['\\uFC6A'] = '\\u0628\\u0631';\n  t['\\uFC6B'] = '\\u0628\\u0632';\n  t['\\uFC6C'] = '\\u0628\\u0645';\n  t['\\uFC6D'] = '\\u0628\\u0646';\n  t['\\uFC6E'] = '\\u0628\\u0649';\n  t['\\uFC6F'] = '\\u0628\\u064A';\n  t['\\uFC70'] = '\\u062A\\u0631';\n  t['\\uFC71'] = '\\u062A\\u0632';\n  t['\\uFC72'] = '\\u062A\\u0645';\n  t['\\uFC73'] = '\\u062A\\u0646';\n  t['\\uFC74'] = '\\u062A\\u0649';\n  t['\\uFC75'] = '\\u062A\\u064A';\n  t['\\uFC76'] = '\\u062B\\u0631';\n  t['\\uFC77'] = '\\u062B\\u0632';\n  t['\\uFC78'] = '\\u062B\\u0645';\n  t['\\uFC79'] = '\\u062B\\u0646';\n  t['\\uFC7A'] = '\\u062B\\u0649';\n  t['\\uFC7B'] = '\\u062B\\u064A';\n  t['\\uFC7C'] = '\\u0641\\u0649';\n  t['\\uFC7D'] = '\\u0641\\u064A';\n  t['\\uFC7E'] = '\\u0642\\u0649';\n  t['\\uFC7F'] = '\\u0642\\u064A';\n  t['\\uFC80'] = '\\u0643\\u0627';\n  t['\\uFC81'] = '\\u0643\\u0644';\n  t['\\uFC82'] = '\\u0643\\u0645';\n  t['\\uFC83'] = '\\u0643\\u0649';\n  t['\\uFC84'] = '\\u0643\\u064A';\n  t['\\uFC85'] = '\\u0644\\u0645';\n  t['\\uFC86'] = '\\u0644\\u0649';\n  t['\\uFC87'] = '\\u0644\\u064A';\n  t['\\uFC88'] = '\\u0645\\u0627';\n  t['\\uFC89'] = '\\u0645\\u0645';\n  t['\\uFC8A'] = '\\u0646\\u0631';\n  t['\\uFC8B'] = '\\u0646\\u0632';\n  t['\\uFC8C'] = '\\u0646\\u0645';\n  t['\\uFC8D'] = '\\u0646\\u0646';\n  t['\\uFC8E'] = '\\u0646\\u0649';\n  t['\\uFC8F'] = '\\u0646\\u064A';\n  t['\\uFC90'] = '\\u0649\\u0670';\n  t['\\uFC91'] = '\\u064A\\u0631';\n  t['\\uFC92'] = '\\u064A\\u0632';\n  t['\\uFC93'] = '\\u064A\\u0645';\n  t['\\uFC94'] = '\\u064A\\u0646';\n  t['\\uFC95'] = '\\u064A\\u0649';\n  t['\\uFC96'] = '\\u064A\\u064A';\n  t['\\uFC97'] = '\\u0626\\u062C';\n  t['\\uFC98'] = '\\u0626\\u062D';\n  t['\\uFC99'] = '\\u0626\\u062E';\n  t['\\uFC9A'] = '\\u0626\\u0645';\n  t['\\uFC9B'] = '\\u0626\\u0647';\n  t['\\uFC9C'] = '\\u0628\\u062C';\n  t['\\uFC9D'] = '\\u0628\\u062D';\n  t['\\uFC9E'] = '\\u0628\\u062E';\n  t['\\uFC9F'] = '\\u0628\\u0645';\n  t['\\uFCA0'] = '\\u0628\\u0647';\n  t['\\uFCA1'] = '\\u062A\\u062C';\n  t['\\uFCA2'] = '\\u062A\\u062D';\n  t['\\uFCA3'] = '\\u062A\\u062E';\n  t['\\uFCA4'] = '\\u062A\\u0645';\n  t['\\uFCA5'] = '\\u062A\\u0647';\n  t['\\uFCA6'] = '\\u062B\\u0645';\n  t['\\uFCA7'] = '\\u062C\\u062D';\n  t['\\uFCA8'] = '\\u062C\\u0645';\n  t['\\uFCA9'] = '\\u062D\\u062C';\n  t['\\uFCAA'] = '\\u062D\\u0645';\n  t['\\uFCAB'] = '\\u062E\\u062C';\n  t['\\uFCAC'] = '\\u062E\\u0645';\n  t['\\uFCAD'] = '\\u0633\\u062C';\n  t['\\uFCAE'] = '\\u0633\\u062D';\n  t['\\uFCAF'] = '\\u0633\\u062E';\n  t['\\uFCB0'] = '\\u0633\\u0645';\n  t['\\uFCB1'] = '\\u0635\\u062D';\n  t['\\uFCB2'] = '\\u0635\\u062E';\n  t['\\uFCB3'] = '\\u0635\\u0645';\n  t['\\uFCB4'] = '\\u0636\\u062C';\n  t['\\uFCB5'] = '\\u0636\\u062D';\n  t['\\uFCB6'] = '\\u0636\\u062E';\n  t['\\uFCB7'] = '\\u0636\\u0645';\n  t['\\uFCB8'] = '\\u0637\\u062D';\n  t['\\uFCB9'] = '\\u0638\\u0645';\n  t['\\uFCBA'] = '\\u0639\\u062C';\n  t['\\uFCBB'] = '\\u0639\\u0645';\n  t['\\uFCBC'] = '\\u063A\\u062C';\n  t['\\uFCBD'] = '\\u063A\\u0645';\n  t['\\uFCBE'] = '\\u0641\\u062C';\n  t['\\uFCBF'] = '\\u0641\\u062D';\n  t['\\uFCC0'] = '\\u0641\\u062E';\n  t['\\uFCC1'] = '\\u0641\\u0645';\n  t['\\uFCC2'] = '\\u0642\\u062D';\n  t['\\uFCC3'] = '\\u0642\\u0645';\n  t['\\uFCC4'] = '\\u0643\\u062C';\n  t['\\uFCC5'] = '\\u0643\\u062D';\n  t['\\uFCC6'] = '\\u0643\\u062E';\n  t['\\uFCC7'] = '\\u0643\\u0644';\n  t['\\uFCC8'] = '\\u0643\\u0645';\n  t['\\uFCC9'] = '\\u0644\\u062C';\n  t['\\uFCCA'] = '\\u0644\\u062D';\n  t['\\uFCCB'] = '\\u0644\\u062E';\n  t['\\uFCCC'] = '\\u0644\\u0645';\n  t['\\uFCCD'] = '\\u0644\\u0647';\n  t['\\uFCCE'] = '\\u0645\\u062C';\n  t['\\uFCCF'] = '\\u0645\\u062D';\n  t['\\uFCD0'] = '\\u0645\\u062E';\n  t['\\uFCD1'] = '\\u0645\\u0645';\n  t['\\uFCD2'] = '\\u0646\\u062C';\n  t['\\uFCD3'] = '\\u0646\\u062D';\n  t['\\uFCD4'] = '\\u0646\\u062E';\n  t['\\uFCD5'] = '\\u0646\\u0645';\n  t['\\uFCD6'] = '\\u0646\\u0647';\n  t['\\uFCD7'] = '\\u0647\\u062C';\n  t['\\uFCD8'] = '\\u0647\\u0645';\n  t['\\uFCD9'] = '\\u0647\\u0670';\n  t['\\uFCDA'] = '\\u064A\\u062C';\n  t['\\uFCDB'] = '\\u064A\\u062D';\n  t['\\uFCDC'] = '\\u064A\\u062E';\n  t['\\uFCDD'] = '\\u064A\\u0645';\n  t['\\uFCDE'] = '\\u064A\\u0647';\n  t['\\uFCDF'] = '\\u0626\\u0645';\n  t['\\uFCE0'] = '\\u0626\\u0647';\n  t['\\uFCE1'] = '\\u0628\\u0645';\n  t['\\uFCE2'] = '\\u0628\\u0647';\n  t['\\uFCE3'] = '\\u062A\\u0645';\n  t['\\uFCE4'] = '\\u062A\\u0647';\n  t['\\uFCE5'] = '\\u062B\\u0645';\n  t['\\uFCE6'] = '\\u062B\\u0647';\n  t['\\uFCE7'] = '\\u0633\\u0645';\n  t['\\uFCE8'] = '\\u0633\\u0647';\n  t['\\uFCE9'] = '\\u0634\\u0645';\n  t['\\uFCEA'] = '\\u0634\\u0647';\n  t['\\uFCEB'] = '\\u0643\\u0644';\n  t['\\uFCEC'] = '\\u0643\\u0645';\n  t['\\uFCED'] = '\\u0644\\u0645';\n  t['\\uFCEE'] = '\\u0646\\u0645';\n  t['\\uFCEF'] = '\\u0646\\u0647';\n  t['\\uFCF0'] = '\\u064A\\u0645';\n  t['\\uFCF1'] = '\\u064A\\u0647';\n  t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n  t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n  t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n  t['\\uFCF5'] = '\\u0637\\u0649';\n  t['\\uFCF6'] = '\\u0637\\u064A';\n  t['\\uFCF7'] = '\\u0639\\u0649';\n  t['\\uFCF8'] = '\\u0639\\u064A';\n  t['\\uFCF9'] = '\\u063A\\u0649';\n  t['\\uFCFA'] = '\\u063A\\u064A';\n  t['\\uFCFB'] = '\\u0633\\u0649';\n  t['\\uFCFC'] = '\\u0633\\u064A';\n  t['\\uFCFD'] = '\\u0634\\u0649';\n  t['\\uFCFE'] = '\\u0634\\u064A';\n  t['\\uFCFF'] = '\\u062D\\u0649';\n  t['\\uFD00'] = '\\u062D\\u064A';\n  t['\\uFD01'] = '\\u062C\\u0649';\n  t['\\uFD02'] = '\\u062C\\u064A';\n  t['\\uFD03'] = '\\u062E\\u0649';\n  t['\\uFD04'] = '\\u062E\\u064A';\n  t['\\uFD05'] = '\\u0635\\u0649';\n  t['\\uFD06'] = '\\u0635\\u064A';\n  t['\\uFD07'] = '\\u0636\\u0649';\n  t['\\uFD08'] = '\\u0636\\u064A';\n  t['\\uFD09'] = '\\u0634\\u062C';\n  t['\\uFD0A'] = '\\u0634\\u062D';\n  t['\\uFD0B'] = '\\u0634\\u062E';\n  t['\\uFD0C'] = '\\u0634\\u0645';\n  t['\\uFD0D'] = '\\u0634\\u0631';\n  t['\\uFD0E'] = '\\u0633\\u0631';\n  t['\\uFD0F'] = '\\u0635\\u0631';\n  t['\\uFD10'] = '\\u0636\\u0631';\n  t['\\uFD11'] = '\\u0637\\u0649';\n  t['\\uFD12'] = '\\u0637\\u064A';\n  t['\\uFD13'] = '\\u0639\\u0649';\n  t['\\uFD14'] = '\\u0639\\u064A';\n  t['\\uFD15'] = '\\u063A\\u0649';\n  t['\\uFD16'] = '\\u063A\\u064A';\n  t['\\uFD17'] = '\\u0633\\u0649';\n  t['\\uFD18'] = '\\u0633\\u064A';\n  t['\\uFD19'] = '\\u0634\\u0649';\n  t['\\uFD1A'] = '\\u0634\\u064A';\n  t['\\uFD1B'] = '\\u062D\\u0649';\n  t['\\uFD1C'] = '\\u062D\\u064A';\n  t['\\uFD1D'] = '\\u062C\\u0649';\n  t['\\uFD1E'] = '\\u062C\\u064A';\n  t['\\uFD1F'] = '\\u062E\\u0649';\n  t['\\uFD20'] = '\\u062E\\u064A';\n  t['\\uFD21'] = '\\u0635\\u0649';\n  t['\\uFD22'] = '\\u0635\\u064A';\n  t['\\uFD23'] = '\\u0636\\u0649';\n  t['\\uFD24'] = '\\u0636\\u064A';\n  t['\\uFD25'] = '\\u0634\\u062C';\n  t['\\uFD26'] = '\\u0634\\u062D';\n  t['\\uFD27'] = '\\u0634\\u062E';\n  t['\\uFD28'] = '\\u0634\\u0645';\n  t['\\uFD29'] = '\\u0634\\u0631';\n  t['\\uFD2A'] = '\\u0633\\u0631';\n  t['\\uFD2B'] = '\\u0635\\u0631';\n  t['\\uFD2C'] = '\\u0636\\u0631';\n  t['\\uFD2D'] = '\\u0634\\u062C';\n  t['\\uFD2E'] = '\\u0634\\u062D';\n  t['\\uFD2F'] = '\\u0634\\u062E';\n  t['\\uFD30'] = '\\u0634\\u0645';\n  t['\\uFD31'] = '\\u0633\\u0647';\n  t['\\uFD32'] = '\\u0634\\u0647';\n  t['\\uFD33'] = '\\u0637\\u0645';\n  t['\\uFD34'] = '\\u0633\\u062C';\n  t['\\uFD35'] = '\\u0633\\u062D';\n  t['\\uFD36'] = '\\u0633\\u062E';\n  t['\\uFD37'] = '\\u0634\\u062C';\n  t['\\uFD38'] = '\\u0634\\u062D';\n  t['\\uFD39'] = '\\u0634\\u062E';\n  t['\\uFD3A'] = '\\u0637\\u0645';\n  t['\\uFD3B'] = '\\u0638\\u0645';\n  t['\\uFD3C'] = '\\u0627\\u064B';\n  t['\\uFD3D'] = '\\u0627\\u064B';\n  t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n  t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n  t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n  t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n  t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n  t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n  t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n  t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n  t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n  t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n  t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n  t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n  t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n  t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n  t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n  t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n  t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n  t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n  t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n  t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n  t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n  t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n  t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n  t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n  t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n  t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n  t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n  t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n  t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n  t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n  t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n  t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n  t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n  t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n  t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n  t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n  t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n  t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n  t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n  t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n  t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n  t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n  t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n  t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n  t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n  t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n  t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n  t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n  t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n  t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n  t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n  t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n  t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n  t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n  t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n  t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n  t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n  t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n  t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n  t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n  t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n  t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n  t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n  t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n  t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n  t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n  t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n  t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n  t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n  t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n  t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n  t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n  t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n  t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n  t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n  t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n  t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n  t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n  t['\\uFE49'] = '\\u203E';\n  t['\\uFE4A'] = '\\u203E';\n  t['\\uFE4B'] = '\\u203E';\n  t['\\uFE4C'] = '\\u203E';\n  t['\\uFE4D'] = '\\u005F';\n  t['\\uFE4E'] = '\\u005F';\n  t['\\uFE4F'] = '\\u005F';\n  t['\\uFE80'] = '\\u0621';\n  t['\\uFE81'] = '\\u0622';\n  t['\\uFE82'] = '\\u0622';\n  t['\\uFE83'] = '\\u0623';\n  t['\\uFE84'] = '\\u0623';\n  t['\\uFE85'] = '\\u0624';\n  t['\\uFE86'] = '\\u0624';\n  t['\\uFE87'] = '\\u0625';\n  t['\\uFE88'] = '\\u0625';\n  t['\\uFE89'] = '\\u0626';\n  t['\\uFE8A'] = '\\u0626';\n  t['\\uFE8B'] = '\\u0626';\n  t['\\uFE8C'] = '\\u0626';\n  t['\\uFE8D'] = '\\u0627';\n  t['\\uFE8E'] = '\\u0627';\n  t['\\uFE8F'] = '\\u0628';\n  t['\\uFE90'] = '\\u0628';\n  t['\\uFE91'] = '\\u0628';\n  t['\\uFE92'] = '\\u0628';\n  t['\\uFE93'] = '\\u0629';\n  t['\\uFE94'] = '\\u0629';\n  t['\\uFE95'] = '\\u062A';\n  t['\\uFE96'] = '\\u062A';\n  t['\\uFE97'] = '\\u062A';\n  t['\\uFE98'] = '\\u062A';\n  t['\\uFE99'] = '\\u062B';\n  t['\\uFE9A'] = '\\u062B';\n  t['\\uFE9B'] = '\\u062B';\n  t['\\uFE9C'] = '\\u062B';\n  t['\\uFE9D'] = '\\u062C';\n  t['\\uFE9E'] = '\\u062C';\n  t['\\uFE9F'] = '\\u062C';\n  t['\\uFEA0'] = '\\u062C';\n  t['\\uFEA1'] = '\\u062D';\n  t['\\uFEA2'] = '\\u062D';\n  t['\\uFEA3'] = '\\u062D';\n  t['\\uFEA4'] = '\\u062D';\n  t['\\uFEA5'] = '\\u062E';\n  t['\\uFEA6'] = '\\u062E';\n  t['\\uFEA7'] = '\\u062E';\n  t['\\uFEA8'] = '\\u062E';\n  t['\\uFEA9'] = '\\u062F';\n  t['\\uFEAA'] = '\\u062F';\n  t['\\uFEAB'] = '\\u0630';\n  t['\\uFEAC'] = '\\u0630';\n  t['\\uFEAD'] = '\\u0631';\n  t['\\uFEAE'] = '\\u0631';\n  t['\\uFEAF'] = '\\u0632';\n  t['\\uFEB0'] = '\\u0632';\n  t['\\uFEB1'] = '\\u0633';\n  t['\\uFEB2'] = '\\u0633';\n  t['\\uFEB3'] = '\\u0633';\n  t['\\uFEB4'] = '\\u0633';\n  t['\\uFEB5'] = '\\u0634';\n  t['\\uFEB6'] = '\\u0634';\n  t['\\uFEB7'] = '\\u0634';\n  t['\\uFEB8'] = '\\u0634';\n  t['\\uFEB9'] = '\\u0635';\n  t['\\uFEBA'] = '\\u0635';\n  t['\\uFEBB'] = '\\u0635';\n  t['\\uFEBC'] = '\\u0635';\n  t['\\uFEBD'] = '\\u0636';\n  t['\\uFEBE'] = '\\u0636';\n  t['\\uFEBF'] = '\\u0636';\n  t['\\uFEC0'] = '\\u0636';\n  t['\\uFEC1'] = '\\u0637';\n  t['\\uFEC2'] = '\\u0637';\n  t['\\uFEC3'] = '\\u0637';\n  t['\\uFEC4'] = '\\u0637';\n  t['\\uFEC5'] = '\\u0638';\n  t['\\uFEC6'] = '\\u0638';\n  t['\\uFEC7'] = '\\u0638';\n  t['\\uFEC8'] = '\\u0638';\n  t['\\uFEC9'] = '\\u0639';\n  t['\\uFECA'] = '\\u0639';\n  t['\\uFECB'] = '\\u0639';\n  t['\\uFECC'] = '\\u0639';\n  t['\\uFECD'] = '\\u063A';\n  t['\\uFECE'] = '\\u063A';\n  t['\\uFECF'] = '\\u063A';\n  t['\\uFED0'] = '\\u063A';\n  t['\\uFED1'] = '\\u0641';\n  t['\\uFED2'] = '\\u0641';\n  t['\\uFED3'] = '\\u0641';\n  t['\\uFED4'] = '\\u0641';\n  t['\\uFED5'] = '\\u0642';\n  t['\\uFED6'] = '\\u0642';\n  t['\\uFED7'] = '\\u0642';\n  t['\\uFED8'] = '\\u0642';\n  t['\\uFED9'] = '\\u0643';\n  t['\\uFEDA'] = '\\u0643';\n  t['\\uFEDB'] = '\\u0643';\n  t['\\uFEDC'] = '\\u0643';\n  t['\\uFEDD'] = '\\u0644';\n  t['\\uFEDE'] = '\\u0644';\n  t['\\uFEDF'] = '\\u0644';\n  t['\\uFEE0'] = '\\u0644';\n  t['\\uFEE1'] = '\\u0645';\n  t['\\uFEE2'] = '\\u0645';\n  t['\\uFEE3'] = '\\u0645';\n  t['\\uFEE4'] = '\\u0645';\n  t['\\uFEE5'] = '\\u0646';\n  t['\\uFEE6'] = '\\u0646';\n  t['\\uFEE7'] = '\\u0646';\n  t['\\uFEE8'] = '\\u0646';\n  t['\\uFEE9'] = '\\u0647';\n  t['\\uFEEA'] = '\\u0647';\n  t['\\uFEEB'] = '\\u0647';\n  t['\\uFEEC'] = '\\u0647';\n  t['\\uFEED'] = '\\u0648';\n  t['\\uFEEE'] = '\\u0648';\n  t['\\uFEEF'] = '\\u0649';\n  t['\\uFEF0'] = '\\u0649';\n  t['\\uFEF1'] = '\\u064A';\n  t['\\uFEF2'] = '\\u064A';\n  t['\\uFEF3'] = '\\u064A';\n  t['\\uFEF4'] = '\\u064A';\n  t['\\uFEF5'] = '\\u0644\\u0622';\n  t['\\uFEF6'] = '\\u0644\\u0622';\n  t['\\uFEF7'] = '\\u0644\\u0623';\n  t['\\uFEF8'] = '\\u0644\\u0623';\n  t['\\uFEF9'] = '\\u0644\\u0625';\n  t['\\uFEFA'] = '\\u0644\\u0625';\n  t['\\uFEFB'] = '\\u0644\\u0627';\n  t['\\uFEFC'] = '\\u0644\\u0627';\n});\nfunction reverseIfRtl(chars) {\n  var charsLength = chars.length;\n  if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n    return chars;\n  }\n  var s = '';\n  for (var ii = charsLength - 1; ii >= 0; ii--) {\n    s += chars[ii];\n  }\n  return s;\n}\nexports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\nexports.reverseIfRtl = reverseIfRtl;\nexports.getUnicodeRangeFor = getUnicodeRangeFor;\nexports.getNormalizedUnicodes = getNormalizedUnicodes;\nexports.getUnicodeForGlyph = getUnicodeForGlyph;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/unicode.js\n// module id = M965\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxStream = undefined;\n\nvar _stream = require('./stream');\n\nvar _jpx = require('./jpx');\n\nvar _util = require('../shared/util');\n\nvar JpxStream = function JpxStreamClosure() {\n  function JpxStream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpxStream.prototype, 'bytes', {\n    get: function JpxStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpxStream.prototype.ensureBuffer = function (requested) {};\n  JpxStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpxImage = new _jpx.JpxImage();\n    jpxImage.parse(this.bytes);\n    var width = jpxImage.width;\n    var height = jpxImage.height;\n    var componentsCount = jpxImage.componentsCount;\n    var tileCount = jpxImage.tiles.length;\n    if (tileCount === 1) {\n      this.buffer = jpxImage.tiles[0].items;\n    } else {\n      var data = new Uint8ClampedArray(width * height * componentsCount);\n      for (var k = 0; k < tileCount; k++) {\n        var tileComponents = jpxImage.tiles[k];\n        var tileWidth = tileComponents.width;\n        var tileHeight = tileComponents.height;\n        var tileLeft = tileComponents.left;\n        var tileTop = tileComponents.top;\n        var src = tileComponents.items;\n        var srcPosition = 0;\n        var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n        var imgRowSize = width * componentsCount;\n        var tileRowSize = tileWidth * componentsCount;\n        for (var j = 0; j < tileHeight; j++) {\n          var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n          data.set(rowBytes, dataPosition);\n          srcPosition += tileRowSize;\n          dataPosition += imgRowSize;\n        }\n      }\n      this.buffer = data;\n    }\n    this.bufferLength = this.buffer.length;\n    this.eof = true;\n  };\n  return JpxStream;\n}();\nexports.JpxStream = JpxStream;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/jpx_stream.js\n// module id = Svxq\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMetrics = undefined;\n\nvar _util = require('../shared/util');\n\nvar getMetrics = (0, _util.getLookupTableFactory)(function (t) {\n  t['Courier'] = 600;\n  t['Courier-Bold'] = 600;\n  t['Courier-BoldOblique'] = 600;\n  t['Courier-Oblique'] = 600;\n  t['Helvetica'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-BoldOblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Oblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Symbol'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['universal'] = 713;\n    t['numbersign'] = 500;\n    t['existential'] = 549;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['suchthat'] = 439;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asteriskmath'] = 500;\n    t['plus'] = 549;\n    t['comma'] = 250;\n    t['minus'] = 549;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 549;\n    t['equal'] = 549;\n    t['greater'] = 549;\n    t['question'] = 444;\n    t['congruent'] = 549;\n    t['Alpha'] = 722;\n    t['Beta'] = 667;\n    t['Chi'] = 722;\n    t['Delta'] = 612;\n    t['Epsilon'] = 611;\n    t['Phi'] = 763;\n    t['Gamma'] = 603;\n    t['Eta'] = 722;\n    t['Iota'] = 333;\n    t['theta1'] = 631;\n    t['Kappa'] = 722;\n    t['Lambda'] = 686;\n    t['Mu'] = 889;\n    t['Nu'] = 722;\n    t['Omicron'] = 722;\n    t['Pi'] = 768;\n    t['Theta'] = 741;\n    t['Rho'] = 556;\n    t['Sigma'] = 592;\n    t['Tau'] = 611;\n    t['Upsilon'] = 690;\n    t['sigma1'] = 439;\n    t['Omega'] = 768;\n    t['Xi'] = 645;\n    t['Psi'] = 795;\n    t['Zeta'] = 611;\n    t['bracketleft'] = 333;\n    t['therefore'] = 863;\n    t['bracketright'] = 333;\n    t['perpendicular'] = 658;\n    t['underscore'] = 500;\n    t['radicalex'] = 500;\n    t['alpha'] = 631;\n    t['beta'] = 549;\n    t['chi'] = 549;\n    t['delta'] = 494;\n    t['epsilon'] = 439;\n    t['phi'] = 521;\n    t['gamma'] = 411;\n    t['eta'] = 603;\n    t['iota'] = 329;\n    t['phi1'] = 603;\n    t['kappa'] = 549;\n    t['lambda'] = 549;\n    t['mu'] = 576;\n    t['nu'] = 521;\n    t['omicron'] = 549;\n    t['pi'] = 549;\n    t['theta'] = 521;\n    t['rho'] = 549;\n    t['sigma'] = 603;\n    t['tau'] = 439;\n    t['upsilon'] = 576;\n    t['omega1'] = 713;\n    t['omega'] = 686;\n    t['xi'] = 493;\n    t['psi'] = 686;\n    t['zeta'] = 494;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['similar'] = 549;\n    t['Euro'] = 750;\n    t['Upsilon1'] = 620;\n    t['minute'] = 247;\n    t['lessequal'] = 549;\n    t['fraction'] = 167;\n    t['infinity'] = 713;\n    t['florin'] = 500;\n    t['club'] = 753;\n    t['diamond'] = 753;\n    t['heart'] = 753;\n    t['spade'] = 753;\n    t['arrowboth'] = 1042;\n    t['arrowleft'] = 987;\n    t['arrowup'] = 603;\n    t['arrowright'] = 987;\n    t['arrowdown'] = 603;\n    t['degree'] = 400;\n    t['plusminus'] = 549;\n    t['second'] = 411;\n    t['greaterequal'] = 549;\n    t['multiply'] = 549;\n    t['proportional'] = 713;\n    t['partialdiff'] = 494;\n    t['bullet'] = 460;\n    t['divide'] = 549;\n    t['notequal'] = 549;\n    t['equivalence'] = 549;\n    t['approxequal'] = 549;\n    t['ellipsis'] = 1000;\n    t['arrowvertex'] = 603;\n    t['arrowhorizex'] = 1000;\n    t['carriagereturn'] = 658;\n    t['aleph'] = 823;\n    t['Ifraktur'] = 686;\n    t['Rfraktur'] = 795;\n    t['weierstrass'] = 987;\n    t['circlemultiply'] = 768;\n    t['circleplus'] = 768;\n    t['emptyset'] = 823;\n    t['intersection'] = 768;\n    t['union'] = 768;\n    t['propersuperset'] = 713;\n    t['reflexsuperset'] = 713;\n    t['notsubset'] = 713;\n    t['propersubset'] = 713;\n    t['reflexsubset'] = 713;\n    t['element'] = 713;\n    t['notelement'] = 713;\n    t['angle'] = 768;\n    t['gradient'] = 713;\n    t['registerserif'] = 790;\n    t['copyrightserif'] = 790;\n    t['trademarkserif'] = 890;\n    t['product'] = 823;\n    t['radical'] = 549;\n    t['dotmath'] = 250;\n    t['logicalnot'] = 713;\n    t['logicaland'] = 603;\n    t['logicalor'] = 603;\n    t['arrowdblboth'] = 1042;\n    t['arrowdblleft'] = 987;\n    t['arrowdblup'] = 603;\n    t['arrowdblright'] = 987;\n    t['arrowdbldown'] = 603;\n    t['lozenge'] = 494;\n    t['angleleft'] = 329;\n    t['registersans'] = 790;\n    t['copyrightsans'] = 790;\n    t['trademarksans'] = 786;\n    t['summation'] = 713;\n    t['parenlefttp'] = 384;\n    t['parenleftex'] = 384;\n    t['parenleftbt'] = 384;\n    t['bracketlefttp'] = 384;\n    t['bracketleftex'] = 384;\n    t['bracketleftbt'] = 384;\n    t['bracelefttp'] = 494;\n    t['braceleftmid'] = 494;\n    t['braceleftbt'] = 494;\n    t['braceex'] = 494;\n    t['angleright'] = 329;\n    t['integral'] = 274;\n    t['integraltp'] = 686;\n    t['integralex'] = 686;\n    t['integralbt'] = 686;\n    t['parenrighttp'] = 384;\n    t['parenrightex'] = 384;\n    t['parenrightbt'] = 384;\n    t['bracketrighttp'] = 384;\n    t['bracketrightex'] = 384;\n    t['bracketrightbt'] = 384;\n    t['bracerighttp'] = 494;\n    t['bracerightmid'] = 494;\n    t['bracerightbt'] = 494;\n    t['apple'] = 790;\n  });\n  t['Times-Roman'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 408;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 564;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 564;\n    t['equal'] = 564;\n    t['greater'] = 564;\n    t['question'] = 444;\n    t['at'] = 921;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 556;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 389;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 556;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 944;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 469;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 444;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 333;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 180;\n    t['quotedblleft'] = 444;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 453;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 444;\n    t['quotedblright'] = 444;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 444;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 889;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 444;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 564;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 444;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 444;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 444;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 444;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 444;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 444;\n    t['Amacron'] = 722;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 556;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 588;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 564;\n    t['uacute'] = 500;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 444;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 333;\n    t['plusminus'] = 564;\n    t['brokenbar'] = 200;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 333;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 326;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 444;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 344;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 564;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 564;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 1000;\n    t['ampersand'] = 833;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 930;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 778;\n    t['L'] = 667;\n    t['M'] = 944;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 611;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 556;\n    t['T'] = 667;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 1000;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 667;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 581;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 556;\n    t['c'] = 444;\n    t['d'] = 556;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 333;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 444;\n    t['s'] = 389;\n    t['t'] = 333;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 394;\n    t['bar'] = 220;\n    t['braceright'] = 394;\n    t['asciitilde'] = 520;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 540;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 300;\n    t['Lslash'] = 667;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 330;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 556;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 570;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 667;\n    t['Cacute'] = 722;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 722;\n    t['rcaron'] = 444;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 667;\n    t['Thorn'] = 611;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 556;\n    t['dcaron'] = 672;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 667;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 444;\n    t['omacron'] = 500;\n    t['Zacute'] = 667;\n    t['Zcaron'] = 667;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 416;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 394;\n    t['Kcommaaccent'] = 778;\n    t['Lacute'] = 667;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 667;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 444;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 667;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 570;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 570;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-BoldItalic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 389;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 832;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 667;\n    t['G'] = 722;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 889;\n    t['X'] = 667;\n    t['Y'] = 611;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 570;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 500;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 348;\n    t['bar'] = 220;\n    t['braceright'] = 348;\n    t['asciitilde'] = 570;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 500;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 944;\n    t['ordfeminine'] = 266;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 300;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 611;\n    t['divide'] = 570;\n    t['Yacute'] = 611;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 667;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 608;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 366;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 576;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 382;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 606;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 606;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Italic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 420;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 675;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 675;\n    t['equal'] = 675;\n    t['greater'] = 675;\n    t['question'] = 500;\n    t['at'] = 920;\n    t['A'] = 611;\n    t['B'] = 611;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 611;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 444;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 667;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 611;\n    t['S'] = 500;\n    t['T'] = 556;\n    t['U'] = 722;\n    t['V'] = 611;\n    t['W'] = 833;\n    t['X'] = 611;\n    t['Y'] = 556;\n    t['Z'] = 556;\n    t['bracketleft'] = 389;\n    t['backslash'] = 278;\n    t['bracketright'] = 389;\n    t['asciicircum'] = 422;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 278;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 444;\n    t['l'] = 278;\n    t['m'] = 722;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 444;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 400;\n    t['bar'] = 275;\n    t['braceright'] = 400;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 214;\n    t['quotedblleft'] = 556;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 523;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 556;\n    t['quotedblright'] = 556;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 889;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 889;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 556;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 667;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 556;\n    t['divide'] = 675;\n    t['Yacute'] = 556;\n    t['Acircumflex'] = 611;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 667;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 556;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 611;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 611;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 556;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 611;\n    t['Sacute'] = 500;\n    t['dcaron'] = 544;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 611;\n    t['Abreve'] = 611;\n    t['multiply'] = 675;\n    t['uacute'] = 500;\n    t['Tcaron'] = 556;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 667;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 667;\n    t['Iacute'] = 333;\n    t['plusminus'] = 675;\n    t['brokenbar'] = 275;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 556;\n    t['Zcaron'] = 556;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 300;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 611;\n    t['Adieresis'] = 611;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 500;\n    t['lcaron'] = 300;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 500;\n    t['Scommaaccent'] = 500;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 667;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 611;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 611;\n    t['Aogonek'] = 611;\n    t['Aring'] = 611;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 444;\n    t['minus'] = 675;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 675;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['ZapfDingbats'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['a1'] = 974;\n    t['a2'] = 961;\n    t['a202'] = 974;\n    t['a3'] = 980;\n    t['a4'] = 719;\n    t['a5'] = 789;\n    t['a119'] = 790;\n    t['a118'] = 791;\n    t['a117'] = 690;\n    t['a11'] = 960;\n    t['a12'] = 939;\n    t['a13'] = 549;\n    t['a14'] = 855;\n    t['a15'] = 911;\n    t['a16'] = 933;\n    t['a105'] = 911;\n    t['a17'] = 945;\n    t['a18'] = 974;\n    t['a19'] = 755;\n    t['a20'] = 846;\n    t['a21'] = 762;\n    t['a22'] = 761;\n    t['a23'] = 571;\n    t['a24'] = 677;\n    t['a25'] = 763;\n    t['a26'] = 760;\n    t['a27'] = 759;\n    t['a28'] = 754;\n    t['a6'] = 494;\n    t['a7'] = 552;\n    t['a8'] = 537;\n    t['a9'] = 577;\n    t['a10'] = 692;\n    t['a29'] = 786;\n    t['a30'] = 788;\n    t['a31'] = 788;\n    t['a32'] = 790;\n    t['a33'] = 793;\n    t['a34'] = 794;\n    t['a35'] = 816;\n    t['a36'] = 823;\n    t['a37'] = 789;\n    t['a38'] = 841;\n    t['a39'] = 823;\n    t['a40'] = 833;\n    t['a41'] = 816;\n    t['a42'] = 831;\n    t['a43'] = 923;\n    t['a44'] = 744;\n    t['a45'] = 723;\n    t['a46'] = 749;\n    t['a47'] = 790;\n    t['a48'] = 792;\n    t['a49'] = 695;\n    t['a50'] = 776;\n    t['a51'] = 768;\n    t['a52'] = 792;\n    t['a53'] = 759;\n    t['a54'] = 707;\n    t['a55'] = 708;\n    t['a56'] = 682;\n    t['a57'] = 701;\n    t['a58'] = 826;\n    t['a59'] = 815;\n    t['a60'] = 789;\n    t['a61'] = 789;\n    t['a62'] = 707;\n    t['a63'] = 687;\n    t['a64'] = 696;\n    t['a65'] = 689;\n    t['a66'] = 786;\n    t['a67'] = 787;\n    t['a68'] = 713;\n    t['a69'] = 791;\n    t['a70'] = 785;\n    t['a71'] = 791;\n    t['a72'] = 873;\n    t['a73'] = 761;\n    t['a74'] = 762;\n    t['a203'] = 762;\n    t['a75'] = 759;\n    t['a204'] = 759;\n    t['a76'] = 892;\n    t['a77'] = 892;\n    t['a78'] = 788;\n    t['a79'] = 784;\n    t['a81'] = 438;\n    t['a82'] = 138;\n    t['a83'] = 277;\n    t['a84'] = 415;\n    t['a97'] = 392;\n    t['a98'] = 392;\n    t['a99'] = 668;\n    t['a100'] = 668;\n    t['a89'] = 390;\n    t['a90'] = 390;\n    t['a93'] = 317;\n    t['a94'] = 317;\n    t['a91'] = 276;\n    t['a92'] = 276;\n    t['a205'] = 509;\n    t['a85'] = 509;\n    t['a206'] = 410;\n    t['a86'] = 410;\n    t['a87'] = 234;\n    t['a88'] = 234;\n    t['a95'] = 334;\n    t['a96'] = 334;\n    t['a101'] = 732;\n    t['a102'] = 544;\n    t['a103'] = 544;\n    t['a104'] = 910;\n    t['a106'] = 667;\n    t['a107'] = 760;\n    t['a108'] = 760;\n    t['a112'] = 776;\n    t['a111'] = 595;\n    t['a110'] = 694;\n    t['a109'] = 626;\n    t['a120'] = 788;\n    t['a121'] = 788;\n    t['a122'] = 788;\n    t['a123'] = 788;\n    t['a124'] = 788;\n    t['a125'] = 788;\n    t['a126'] = 788;\n    t['a127'] = 788;\n    t['a128'] = 788;\n    t['a129'] = 788;\n    t['a130'] = 788;\n    t['a131'] = 788;\n    t['a132'] = 788;\n    t['a133'] = 788;\n    t['a134'] = 788;\n    t['a135'] = 788;\n    t['a136'] = 788;\n    t['a137'] = 788;\n    t['a138'] = 788;\n    t['a139'] = 788;\n    t['a140'] = 788;\n    t['a141'] = 788;\n    t['a142'] = 788;\n    t['a143'] = 788;\n    t['a144'] = 788;\n    t['a145'] = 788;\n    t['a146'] = 788;\n    t['a147'] = 788;\n    t['a148'] = 788;\n    t['a149'] = 788;\n    t['a150'] = 788;\n    t['a151'] = 788;\n    t['a152'] = 788;\n    t['a153'] = 788;\n    t['a154'] = 788;\n    t['a155'] = 788;\n    t['a156'] = 788;\n    t['a157'] = 788;\n    t['a158'] = 788;\n    t['a159'] = 788;\n    t['a160'] = 894;\n    t['a161'] = 838;\n    t['a163'] = 1016;\n    t['a164'] = 458;\n    t['a196'] = 748;\n    t['a165'] = 924;\n    t['a192'] = 748;\n    t['a166'] = 918;\n    t['a167'] = 927;\n    t['a168'] = 928;\n    t['a169'] = 928;\n    t['a170'] = 834;\n    t['a171'] = 873;\n    t['a172'] = 828;\n    t['a173'] = 924;\n    t['a162'] = 924;\n    t['a174'] = 917;\n    t['a175'] = 930;\n    t['a176'] = 931;\n    t['a177'] = 463;\n    t['a178'] = 883;\n    t['a179'] = 836;\n    t['a193'] = 836;\n    t['a180'] = 867;\n    t['a199'] = 867;\n    t['a181'] = 696;\n    t['a200'] = 696;\n    t['a182'] = 874;\n    t['a201'] = 874;\n    t['a183'] = 760;\n    t['a184'] = 946;\n    t['a197'] = 771;\n    t['a185'] = 865;\n    t['a194'] = 771;\n    t['a198'] = 888;\n    t['a186'] = 967;\n    t['a195'] = 888;\n    t['a187'] = 831;\n    t['a188'] = 873;\n    t['a189'] = 927;\n    t['a190'] = 970;\n    t['a191'] = 918;\n  });\n});\nexports.getMetrics = getMetrics;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/metrics.js\n// module id = Y7xw\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFontType = exports.ProblematicCharRanges = exports.IdentityToUnicodeMap = exports.ToUnicodeMap = exports.FontFlags = exports.Font = exports.ErrorFont = exports.PRIVATE_USE_OFFSET_END = exports.PRIVATE_USE_OFFSET_START = exports.SEAC_ANALYSIS_ENABLED = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cff_parser = require('./cff_parser');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _encodings = require('./encodings');\n\nvar _standard_fonts = require('./standard_fonts');\n\nvar _unicode = require('./unicode');\n\nvar _font_renderer = require('./font_renderer');\n\nvar _stream = require('./stream');\n\nvar _type1_parser = require('./type1_parser');\n\nvar PRIVATE_USE_OFFSET_START = 0xE000;\nvar PRIVATE_USE_OFFSET_END = 0xF8FF;\nvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\nvar PDF_GLYPH_SPACE_UNITS = 1000;\nvar SEAC_ANALYSIS_ENABLED = false;\nvar FontFlags = {\n  FixedPitch: 1,\n  Serif: 2,\n  Symbolic: 4,\n  Script: 8,\n  Nonsymbolic: 32,\n  Italic: 64,\n  AllCap: 65536,\n  SmallCap: 131072,\n  ForceBold: 262144\n};\nvar MacStandardGlyphOrdering = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\nfunction adjustWidths(properties) {\n  if (!properties.fontMatrix) {\n    return;\n  }\n  if (properties.fontMatrix[0] === _util.FONT_IDENTITY_MATRIX[0]) {\n    return;\n  }\n  var scale = 0.001 / properties.fontMatrix[0];\n  var glyphsWidths = properties.widths;\n  for (var glyph in glyphsWidths) {\n    glyphsWidths[glyph] *= scale;\n  }\n  properties.defaultWidth *= scale;\n}\nfunction adjustToUnicode(properties, builtInEncoding) {\n  if (properties.hasIncludedToUnicodeMap) {\n    return;\n  }\n  if (properties.hasEncoding) {\n    return;\n  }\n  if (builtInEncoding === properties.defaultEncoding) {\n    return;\n  }\n  if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n    return;\n  }\n  var toUnicode = [],\n      glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n  for (var charCode in builtInEncoding) {\n    var glyphName = builtInEncoding[charCode];\n    var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n    if (unicode !== -1) {\n      toUnicode[charCode] = String.fromCharCode(unicode);\n    }\n  }\n  properties.toUnicode.amend(toUnicode);\n}\nfunction getFontType(type, subtype) {\n  switch (type) {\n    case 'Type1':\n      return subtype === 'Type1C' ? _util.FontType.TYPE1C : _util.FontType.TYPE1;\n    case 'CIDFontType0':\n      return subtype === 'CIDFontType0C' ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0;\n    case 'OpenType':\n      return _util.FontType.OPENTYPE;\n    case 'TrueType':\n      return _util.FontType.TRUETYPE;\n    case 'CIDFontType2':\n      return _util.FontType.CIDFONTTYPE2;\n    case 'MMType1':\n      return _util.FontType.MMTYPE1;\n    case 'Type0':\n      return _util.FontType.TYPE0;\n    default:\n      return _util.FontType.UNKNOWN;\n  }\n}\nfunction recoverGlyphName(name, glyphsUnicodeMap) {\n  if (glyphsUnicodeMap[name] !== undefined) {\n    return name;\n  }\n  var unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap);\n  if (unicode !== -1) {\n    for (var key in glyphsUnicodeMap) {\n      if (glyphsUnicodeMap[key] === unicode) {\n        return key;\n      }\n    }\n  }\n  (0, _util.info)('Unable to recover a standard glyph name for: ' + name);\n  return name;\n}\nvar Glyph = function GlyphClosure() {\n  function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    this.fontChar = fontChar;\n    this.unicode = unicode;\n    this.accent = accent;\n    this.width = width;\n    this.vmetric = vmetric;\n    this.operatorListId = operatorListId;\n    this.isSpace = isSpace;\n    this.isInFont = isInFont;\n  }\n  Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n  };\n  return Glyph;\n}();\nvar ToUnicodeMap = function ToUnicodeMapClosure() {\n  function ToUnicodeMap() {\n    var cmap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    this._map = cmap;\n  }\n  ToUnicodeMap.prototype = {\n    get length() {\n      return this._map.length;\n    },\n    forEach: function forEach(callback) {\n      for (var charCode in this._map) {\n        callback(charCode, this._map[charCode].charCodeAt(0));\n      }\n    },\n    has: function has(i) {\n      return this._map[i] !== undefined;\n    },\n    get: function get(i) {\n      return this._map[i];\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    amend: function amend(map) {\n      for (var charCode in map) {\n        this._map[charCode] = map[charCode];\n      }\n    }\n  };\n  return ToUnicodeMap;\n}();\nvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n  function IdentityToUnicodeMap(firstChar, lastChar) {\n    this.firstChar = firstChar;\n    this.lastChar = lastChar;\n  }\n  IdentityToUnicodeMap.prototype = {\n    get length() {\n      return this.lastChar + 1 - this.firstChar;\n    },\n    forEach: function forEach(callback) {\n      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n        callback(i, i);\n      }\n    },\n    has: function has(i) {\n      return this.firstChar <= i && i <= this.lastChar;\n    },\n    get: function get(i) {\n      if (this.firstChar <= i && i <= this.lastChar) {\n        return String.fromCharCode(i);\n      }\n      return undefined;\n    },\n    charCodeOf: function charCodeOf(v) {\n      return Number.isInteger(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n    },\n    amend: function amend(map) {\n      (0, _util.unreachable)('Should not call amend()');\n    }\n  };\n  return IdentityToUnicodeMap;\n}();\nvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n  function writeInt16(dest, offset, num) {\n    dest[offset] = num >> 8 & 0xFF;\n    dest[offset + 1] = num & 0xFF;\n  }\n  function writeInt32(dest, offset, num) {\n    dest[offset] = num >> 24 & 0xFF;\n    dest[offset + 1] = num >> 16 & 0xFF;\n    dest[offset + 2] = num >> 8 & 0xFF;\n    dest[offset + 3] = num & 0xFF;\n  }\n  function writeData(dest, offset, data) {\n    var i, ii;\n    if (data instanceof Uint8Array) {\n      dest.set(data, offset);\n    } else if (typeof data === 'string') {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data.charCodeAt(i) & 0xFF;\n      }\n    } else {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data[i] & 0xFF;\n      }\n    }\n  }\n  function OpenTypeFileBuilder(sfnt) {\n    this.sfnt = sfnt;\n    this.tables = Object.create(null);\n  }\n  OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n    var maxPower2 = 1,\n        log2 = 0;\n    while ((maxPower2 ^ entriesCount) > maxPower2) {\n      maxPower2 <<= 1;\n      log2++;\n    }\n    var searchRange = maxPower2 * entrySize;\n    return {\n      range: searchRange,\n      entry: log2,\n      rangeShift: entrySize * entriesCount - searchRange\n    };\n  };\n  var OTF_HEADER_SIZE = 12;\n  var OTF_TABLE_ENTRY_SIZE = 16;\n  OpenTypeFileBuilder.prototype = {\n    toArray: function OpenTypeFileBuilder_toArray() {\n      var sfnt = this.sfnt;\n      var tables = this.tables;\n      var tablesNames = Object.keys(tables);\n      tablesNames.sort();\n      var numTables = tablesNames.length;\n      var i, j, jj, table, tableName;\n      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n      var tableOffsets = [offset];\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        var paddedLength = (table.length + 3 & ~3) >>> 0;\n        offset += paddedLength;\n        tableOffsets.push(offset);\n      }\n      var file = new Uint8Array(offset);\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        writeData(file, tableOffsets[i], table);\n      }\n      if (sfnt === 'true') {\n        sfnt = (0, _util.string32)(0x00010000);\n      }\n      file[0] = sfnt.charCodeAt(0) & 0xFF;\n      file[1] = sfnt.charCodeAt(1) & 0xFF;\n      file[2] = sfnt.charCodeAt(2) & 0xFF;\n      file[3] = sfnt.charCodeAt(3) & 0xFF;\n      writeInt16(file, 4, numTables);\n      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n      writeInt16(file, 6, searchParams.range);\n      writeInt16(file, 8, searchParams.entry);\n      writeInt16(file, 10, searchParams.rangeShift);\n      offset = OTF_HEADER_SIZE;\n      for (i = 0; i < numTables; i++) {\n        tableName = tablesNames[i];\n        file[offset] = tableName.charCodeAt(0) & 0xFF;\n        file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n        file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n        file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n        var checksum = 0;\n        for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n          var quad = (0, _util.readUint32)(file, j);\n          checksum = checksum + quad >>> 0;\n        }\n        writeInt32(file, offset + 4, checksum);\n        writeInt32(file, offset + 8, tableOffsets[i]);\n        writeInt32(file, offset + 12, tables[tableName].length);\n        offset += OTF_TABLE_ENTRY_SIZE;\n      }\n      return file;\n    },\n    addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n      if (tag in this.tables) {\n        throw new Error('Table ' + tag + ' already exists');\n      }\n      this.tables[tag] = data;\n    }\n  };\n  return OpenTypeFileBuilder;\n}();\nvar ProblematicCharRanges = new Int32Array([0x0000, 0x0020, 0x007F, 0x00A1, 0x00AD, 0x00AE, 0x0600, 0x0780, 0x08A0, 0x10A0, 0x1780, 0x1800, 0x1C00, 0x1C50, 0x2000, 0x2010, 0x2011, 0x2012, 0x2028, 0x2030, 0x205F, 0x2070, 0x25CC, 0x25CD, 0x3000, 0x3001, 0x3164, 0x3165, 0xAA60, 0xAA80, 0xD800, 0xE000, 0xFFF0, 0x10000]);\nvar Font = function FontClosure() {\n  function Font(name, file, properties) {\n    var charCode;\n    this.name = name;\n    this.loadedName = properties.loadedName;\n    this.isType3Font = properties.isType3Font;\n    this.sizes = [];\n    this.missingFile = false;\n    this.glyphCache = Object.create(null);\n    this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n    this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n    this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n    var type = properties.type;\n    var subtype = properties.subtype;\n    this.type = type;\n    this.subtype = subtype;\n    this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n    this.differences = properties.differences;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.composite = properties.composite;\n    this.wideChars = properties.wideChars;\n    this.cMap = properties.cMap;\n    this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n    this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n    this.fontMatrix = properties.fontMatrix;\n    this.bbox = properties.bbox;\n    this.defaultEncoding = properties.defaultEncoding;\n    this.toUnicode = properties.toUnicode;\n    this.fallbackToUnicode = properties.fallbackToUnicode || new ToUnicodeMap();\n    this.toFontChar = [];\n    if (properties.type === 'Type3') {\n      for (charCode = 0; charCode < 256; charCode++) {\n        this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n      }\n      this.fontType = _util.FontType.TYPE3;\n      return;\n    }\n    this.cidEncoding = properties.cidEncoding;\n    this.vertical = properties.vertical;\n    if (this.vertical) {\n      this.vmetrics = properties.vmetrics;\n      this.defaultVMetrics = properties.defaultVMetrics;\n    }\n    if (!file || file.isEmpty) {\n      if (file) {\n        (0, _util.warn)('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n      }\n      this.fallbackToSystemFont();\n      return;\n    }\n    if (subtype === 'Type1C') {\n      if (type !== 'Type1' && type !== 'MMType1') {\n        if (isTrueTypeFile(file)) {\n          subtype = 'TrueType';\n        } else {\n          type = 'Type1';\n        }\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      }\n    }\n    if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n      type = 'CIDFontType0';\n    }\n    if (type === 'CIDFontType0') {\n      if (isType1File(file)) {\n        subtype = 'CIDFontType0';\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      } else {\n        subtype = 'CIDFontType0C';\n      }\n    }\n    if (subtype === 'OpenType' && type !== 'OpenType') {\n      type = 'OpenType';\n    }\n    try {\n      var data;\n      switch (type) {\n        case 'MMType1':\n          (0, _util.info)('MMType1 font (' + name + '), falling back to Type1.');\n        case 'Type1':\n        case 'CIDFontType0':\n          this.mimetype = 'font/opentype';\n          var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n          adjustWidths(properties);\n          data = this.convert(name, cff, properties);\n          break;\n        case 'OpenType':\n        case 'TrueType':\n        case 'CIDFontType2':\n          this.mimetype = 'font/opentype';\n          data = this.checkAndRepair(name, file, properties);\n          if (this.isOpenType) {\n            adjustWidths(properties);\n            type = 'OpenType';\n          }\n          break;\n        default:\n          throw new _util.FormatError('Font ' + type + ' is not supported');\n      }\n    } catch (e) {\n      if (!(e instanceof _util.FormatError)) {\n        throw e;\n      }\n      (0, _util.warn)(e);\n      this.fallbackToSystemFont();\n      return;\n    }\n    this.data = data;\n    this.fontType = getFontType(type, subtype);\n    this.fontMatrix = properties.fontMatrix;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.toUnicode = properties.toUnicode;\n    this.encoding = properties.baseEncoding;\n    this.seacMap = properties.seacMap;\n    this.loading = true;\n  }\n  Font.getFontID = function () {\n    var ID = 1;\n    return function Font_getFontID() {\n      return String(ID++);\n    };\n  }();\n  function int16(b0, b1) {\n    return (b0 << 8) + b1;\n  }\n  function writeSignedInt16(bytes, index, value) {\n    bytes[index + 1] = value;\n    bytes[index] = value >>> 8;\n  }\n  function signedInt16(b0, b1) {\n    var value = (b0 << 8) + b1;\n    return value & 1 << 15 ? value - 0x10000 : value;\n  }\n  function int32(b0, b1, b2, b3) {\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  }\n  function string16(value) {\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function safeString16(value) {\n    value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function isTrueTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.readUint32)(header, 0) === 0x00010000;\n  }\n  function isTrueTypeCollectionFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'ttcf';\n  }\n  function isOpenTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'OTTO';\n  }\n  function isType1File(file) {\n    var header = file.peekBytes(2);\n    if (header[0] === 0x25 && header[1] === 0x21) {\n      return true;\n    }\n    if (header[0] === 0x80 && header[1] === 0x01) {\n      return true;\n    }\n    return false;\n  }\n  function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n    var toFontChar = [],\n        unicode;\n    for (var i = 0, ii = encoding.length; i < ii; i++) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(encoding[i], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[i] = unicode;\n      }\n    }\n    for (var charCode in differences) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(differences[charCode], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[+charCode] = unicode;\n      }\n    }\n    return toFontChar;\n  }\n  function isProblematicUnicodeLocation(code) {\n    var i = 0,\n        j = ProblematicCharRanges.length - 1;\n    while (i < j) {\n      var c = i + j + 1 >> 1;\n      if (code < ProblematicCharRanges[c]) {\n        j = c - 1;\n      } else {\n        i = c;\n      }\n    }\n    return !(i & 1);\n  }\n  function adjustMapping(charCodeToGlyphId, properties, missingGlyphs) {\n    var toUnicode = properties.toUnicode;\n    var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n    var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n    var newMap = Object.create(null);\n    var toFontChar = [];\n    var usedFontCharCodes = [];\n    var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n    for (var originalCharCode in charCodeToGlyphId) {\n      originalCharCode |= 0;\n      var glyphId = charCodeToGlyphId[originalCharCode];\n      if (missingGlyphs[glyphId]) {\n        continue;\n      }\n      var fontCharCode = originalCharCode;\n      var hasUnicodeValue = false;\n      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n        hasUnicodeValue = true;\n        var unicode = toUnicode.get(fontCharCode);\n        if (unicode.length === 1) {\n          fontCharCode = unicode.charCodeAt(0);\n        }\n      }\n      if (usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) {\n        do {\n          if (nextAvailableFontCharCode > PRIVATE_USE_OFFSET_END) {\n            (0, _util.warn)('Ran out of space in font private use area.');\n            break;\n          }\n          fontCharCode = nextAvailableFontCharCode++;\n          if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n            fontCharCode = 0xF020;\n            nextAvailableFontCharCode = fontCharCode + 1;\n          }\n        } while (usedFontCharCodes[fontCharCode] !== undefined);\n      }\n      newMap[fontCharCode] = glyphId;\n      toFontChar[originalCharCode] = fontCharCode;\n      usedFontCharCodes[fontCharCode] = true;\n    }\n    return {\n      toFontChar: toFontChar,\n      charCodeToGlyphId: newMap,\n      nextAvailableFontCharCode: nextAvailableFontCharCode\n    };\n  }\n  function getRanges(glyphs, numGlyphs) {\n    var codes = [];\n    for (var charCode in glyphs) {\n      if (glyphs[charCode] >= numGlyphs) {\n        continue;\n      }\n      codes.push({\n        fontCharCode: charCode | 0,\n        glyphId: glyphs[charCode]\n      });\n    }\n    if (codes.length === 0) {\n      codes.push({\n        fontCharCode: 0,\n        glyphId: 0\n      });\n    }\n    codes.sort(function fontGetRangesSort(a, b) {\n      return a.fontCharCode - b.fontCharCode;\n    });\n    var ranges = [];\n    var length = codes.length;\n    for (var n = 0; n < length;) {\n      var start = codes[n].fontCharCode;\n      var codeIndices = [codes[n].glyphId];\n      ++n;\n      var end = start;\n      while (n < length && end + 1 === codes[n].fontCharCode) {\n        codeIndices.push(codes[n].glyphId);\n        ++end;\n        ++n;\n        if (end === 0xFFFF) {\n          break;\n        }\n      }\n      ranges.push([start, end, codeIndices]);\n    }\n    return ranges;\n  }\n  function createCmapTable(glyphs, numGlyphs) {\n    var ranges = getRanges(glyphs, numGlyphs);\n    var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n    var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + (0, _util.string32)(4 + numTables * 8);\n    var i, ii, j, jj;\n    for (i = ranges.length - 1; i >= 0; --i) {\n      if (ranges[i][0] <= 0xFFFF) {\n        break;\n      }\n    }\n    var bmpLength = i + 1;\n    if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n      ranges[i][1] = 0xFFFE;\n    }\n    var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n    var segCount = bmpLength + trailingRangesCount;\n    var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n    var startCount = '';\n    var endCount = '';\n    var idDeltas = '';\n    var idRangeOffsets = '';\n    var glyphsIds = '';\n    var bias = 0;\n    var range, start, end, codes;\n    for (i = 0, ii = bmpLength; i < ii; i++) {\n      range = ranges[i];\n      start = range[0];\n      end = range[1];\n      startCount += string16(start);\n      endCount += string16(end);\n      codes = range[2];\n      var contiguous = true;\n      for (j = 1, jj = codes.length; j < jj; ++j) {\n        if (codes[j] !== codes[j - 1] + 1) {\n          contiguous = false;\n          break;\n        }\n      }\n      if (!contiguous) {\n        var offset = (segCount - i) * 2 + bias * 2;\n        bias += end - start + 1;\n        idDeltas += string16(0);\n        idRangeOffsets += string16(offset);\n        for (j = 0, jj = codes.length; j < jj; ++j) {\n          glyphsIds += string16(codes[j]);\n        }\n      } else {\n        var startCode = codes[0];\n        idDeltas += string16(startCode - start & 0xFFFF);\n        idRangeOffsets += string16(0);\n      }\n    }\n    if (trailingRangesCount > 0) {\n      endCount += '\\xFF\\xFF';\n      startCount += '\\xFF\\xFF';\n      idDeltas += '\\x00\\x01';\n      idRangeOffsets += '\\x00\\x00';\n    }\n    var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n    var format31012 = '';\n    var header31012 = '';\n    if (numTables > 1) {\n      cmap += '\\x00\\x03' + '\\x00\\x0A' + (0, _util.string32)(4 + numTables * 8 + 4 + format314.length);\n      format31012 = '';\n      for (i = 0, ii = ranges.length; i < ii; i++) {\n        range = ranges[i];\n        start = range[0];\n        codes = range[2];\n        var code = codes[0];\n        for (j = 1, jj = codes.length; j < jj; ++j) {\n          if (codes[j] !== codes[j - 1] + 1) {\n            end = range[0] + j - 1;\n            format31012 += (0, _util.string32)(start) + (0, _util.string32)(end) + (0, _util.string32)(code);\n            start = end + 1;\n            code = codes[j];\n          }\n        }\n        format31012 += (0, _util.string32)(start) + (0, _util.string32)(range[1]) + (0, _util.string32)(code);\n      }\n      header31012 = '\\x00\\x0C' + '\\x00\\x00' + (0, _util.string32)(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + (0, _util.string32)(format31012.length / 12);\n    }\n    return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n  }\n  function validateOS2Table(os2) {\n    var stream = new _stream.Stream(os2.data);\n    var version = stream.getUint16();\n    stream.getBytes(60);\n    var selection = stream.getUint16();\n    if (version < 4 && selection & 0x0300) {\n      return false;\n    }\n    var firstChar = stream.getUint16();\n    var lastChar = stream.getUint16();\n    if (firstChar > lastChar) {\n      return false;\n    }\n    stream.getBytes(6);\n    var usWinAscent = stream.getUint16();\n    if (usWinAscent === 0) {\n      return false;\n    }\n    os2.data[8] = os2.data[9] = 0;\n    return true;\n  }\n  function createOS2Table(properties, charstrings, override) {\n    override = override || {\n      unitsPerEm: 0,\n      yMax: 0,\n      yMin: 0,\n      ascent: 0,\n      descent: 0\n    };\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    if (charstrings) {\n      for (var code in charstrings) {\n        code |= 0;\n        if (firstCharIndex > code || !firstCharIndex) {\n          firstCharIndex = code;\n        }\n        if (lastCharIndex < code) {\n          lastCharIndex = code;\n        }\n        var position = (0, _unicode.getUnicodeRangeFor)(code);\n        if (position < 32) {\n          ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n          ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n          ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n          ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n          throw new _util.FormatError('Unicode ranges Bits > 123 are reserved for internal usage');\n        }\n      }\n    } else {\n      firstCharIndex = 0;\n      lastCharIndex = 255;\n    }\n    var bbox = properties.bbox || [0, 0, 0, 0];\n    var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n    var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n    var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n    var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n    if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n      typoDescent = -typoDescent;\n    }\n    var winAscent = override.yMax || typoAscent;\n    var winDescent = -override.yMin || -typoDescent;\n    return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + (0, _util.string32)(ulUnicodeRange1) + (0, _util.string32)(ulUnicodeRange2) + (0, _util.string32)(ulUnicodeRange3) + (0, _util.string32)(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n  }\n  function createPostTable(properties) {\n    var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n    return '\\x00\\x03\\x00\\x00' + (0, _util.string32)(angle) + '\\x00\\x00' + '\\x00\\x00' + (0, _util.string32)(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n  }\n  function createNameTable(name, proto) {\n    if (!proto) {\n      proto = [[], []];\n    }\n    var strings = [proto[0][0] || 'Original licence', proto[0][1] || name, proto[0][2] || 'Unknown', proto[0][3] || 'uniqueID', proto[0][4] || name, proto[0][5] || 'Version 0.11', proto[0][6] || '', proto[0][7] || 'Unknown', proto[0][8] || 'Unknown', proto[0][9] || 'Unknown'];\n    var stringsUnicode = [];\n    var i, ii, j, jj, str;\n    for (i = 0, ii = strings.length; i < ii; i++) {\n      str = proto[1][i] || strings[i];\n      var strBufUnicode = [];\n      for (j = 0, jj = str.length; j < jj; j++) {\n        strBufUnicode.push(string16(str.charCodeAt(j)));\n      }\n      stringsUnicode.push(strBufUnicode.join(''));\n    }\n    var names = [strings, stringsUnicode];\n    var platforms = ['\\x00\\x01', '\\x00\\x03'];\n    var encodings = ['\\x00\\x00', '\\x00\\x01'];\n    var languages = ['\\x00\\x00', '\\x04\\x09'];\n    var namesRecordCount = strings.length * platforms.length;\n    var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n    var strOffset = 0;\n    for (i = 0, ii = platforms.length; i < ii; i++) {\n      var strs = names[i];\n      for (j = 0, jj = strs.length; j < jj; j++) {\n        str = strs[j];\n        var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n        nameTable += nameRecord;\n        strOffset += str.length;\n      }\n    }\n    nameTable += strings.join('') + stringsUnicode.join('');\n    return nameTable;\n  }\n  Font.prototype = {\n    name: null,\n    font: null,\n    mimetype: null,\n    encoding: null,\n    get renderer() {\n      var renderer = _font_renderer.FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n      return (0, _util.shadow)(this, 'renderer', renderer);\n    },\n    exportData: function Font_exportData() {\n      var data = {};\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) {\n          data[i] = this[i];\n        }\n      }\n      return data;\n    },\n    fallbackToSystemFont: function Font_fallbackToSystemFont() {\n      var _this = this;\n\n      this.missingFile = true;\n      var charCode, unicode;\n      var name = this.name;\n      var type = this.type;\n      var subtype = this.subtype;\n      var fontName = name.replace(/[,_]/g, '-');\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)(),\n          nonStdFontMap = (0, _standard_fonts.getNonStdFontMap)();\n      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n      this.bold = fontName.search(/bold/gi) !== -1;\n      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n      this.black = name.search(/Black/g) !== -1;\n      this.remeasure = Object.keys(this.widths).length > 0;\n      if (isStandardFont && type === 'CIDFontType2' && this.cidEncoding.indexOf('Identity-') === 0) {\n        var GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\n        var map = [];\n        for (charCode in GlyphMapForStandardFonts) {\n          map[+charCode] = GlyphMapForStandardFonts[charCode];\n        }\n        if (/Arial-?Black/i.test(name)) {\n          var SupplementalGlyphMapForArialBlack = (0, _standard_fonts.getSupplementalGlyphMapForArialBlack)();\n          for (charCode in SupplementalGlyphMapForArialBlack) {\n            map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n          }\n        } else if (/Calibri/i.test(name)) {\n          var SupplementalGlyphMapForCalibri = (0, _standard_fonts.getSupplementalGlyphMapForCalibri)();\n          for (charCode in SupplementalGlyphMapForCalibri) {\n            map[+charCode] = SupplementalGlyphMapForCalibri[charCode];\n          }\n        }\n        var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n        if (!isIdentityUnicode) {\n          this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n            map[+charCode] = unicodeCharCode;\n          });\n        }\n        this.toFontChar = map;\n        this.toUnicode = new ToUnicodeMap(map);\n      } else if (/Symbol/i.test(fontName)) {\n        this.toFontChar = buildToFontChar(_encodings.SymbolSetEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else if (/Dingbats/i.test(fontName)) {\n        if (/Wingdings/i.test(name)) {\n          (0, _util.warn)('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n        }\n        this.toFontChar = buildToFontChar(_encodings.ZapfDingbatsEncoding, (0, _glyphlist.getDingbatsGlyphsUnicode)(), this.differences);\n      } else if (isStandardFont) {\n        this.toFontChar = buildToFontChar(this.defaultEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else {\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n          if (!_this.composite) {\n            var glyphName = _this.differences[charCode] || _this.defaultEncoding[charCode];\n            unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n            if (unicode !== -1) {\n              unicodeCharCode = unicode;\n            }\n          }\n          _this.toFontChar[charCode] = unicodeCharCode;\n        });\n      }\n      this.loadedName = fontName.split('-')[0];\n      this.loading = false;\n      this.fontType = getFontType(type, subtype);\n    },\n    checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n      var VALID_TABLES = ['OS/2', 'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'post', 'loca', 'glyf', 'fpgm', 'prep', 'cvt ', 'CFF '];\n      function readTables(file, numTables) {\n        var tables = Object.create(null);\n        tables['OS/2'] = null;\n        tables['cmap'] = null;\n        tables['head'] = null;\n        tables['hhea'] = null;\n        tables['hmtx'] = null;\n        tables['maxp'] = null;\n        tables['name'] = null;\n        tables['post'] = null;\n        for (var i = 0; i < numTables; i++) {\n          var table = readTableEntry(font);\n          if (!VALID_TABLES.includes(table.tag)) {\n            continue;\n          }\n          if (table.length === 0) {\n            continue;\n          }\n          tables[table.tag] = table;\n        }\n        return tables;\n      }\n      function readTableEntry(file) {\n        var tag = (0, _util.bytesToString)(file.getBytes(4));\n        var checksum = file.getInt32() >>> 0;\n        var offset = file.getInt32() >>> 0;\n        var length = file.getInt32() >>> 0;\n        var previousPosition = file.pos;\n        file.pos = file.start ? file.start : 0;\n        file.skip(offset);\n        var data = file.getBytes(length);\n        file.pos = previousPosition;\n        if (tag === 'head') {\n          data[8] = data[9] = data[10] = data[11] = 0;\n          data[17] |= 0x20;\n        }\n        return {\n          tag: tag,\n          checksum: checksum,\n          length: length,\n          offset: offset,\n          data: data\n        };\n      }\n      function readOpenTypeHeader(ttf) {\n        return {\n          version: (0, _util.bytesToString)(ttf.getBytes(4)),\n          numTables: ttf.getUint16(),\n          searchRange: ttf.getUint16(),\n          entrySelector: ttf.getUint16(),\n          rangeShift: ttf.getUint16()\n        };\n      }\n      function readTrueTypeCollectionHeader(ttc) {\n        var ttcTag = (0, _util.bytesToString)(ttc.getBytes(4));\n        (0, _util.assert)(ttcTag === 'ttcf', 'Must be a TrueType Collection font.');\n        var majorVersion = ttc.getUint16();\n        var minorVersion = ttc.getUint16();\n        var numFonts = ttc.getInt32() >>> 0;\n        var offsetTable = [];\n        for (var i = 0; i < numFonts; i++) {\n          offsetTable.push(ttc.getInt32() >>> 0);\n        }\n        var header = {\n          ttcTag: ttcTag,\n          majorVersion: majorVersion,\n          minorVersion: minorVersion,\n          numFonts: numFonts,\n          offsetTable: offsetTable\n        };\n        switch (majorVersion) {\n          case 1:\n            return header;\n          case 2:\n            header.dsigTag = ttc.getInt32() >>> 0;\n            header.dsigLength = ttc.getInt32() >>> 0;\n            header.dsigOffset = ttc.getInt32() >>> 0;\n            return header;\n        }\n        throw new _util.FormatError('Invalid TrueType Collection majorVersion: ' + majorVersion + '.');\n      }\n      function readTrueTypeCollectionData(ttc, fontName) {\n        var _readTrueTypeCollecti = readTrueTypeCollectionHeader(ttc),\n            numFonts = _readTrueTypeCollecti.numFonts,\n            offsetTable = _readTrueTypeCollecti.offsetTable;\n\n        for (var i = 0; i < numFonts; i++) {\n          ttc.pos = (ttc.start || 0) + offsetTable[i];\n          var potentialHeader = readOpenTypeHeader(ttc);\n          var potentialTables = readTables(ttc, potentialHeader.numTables);\n          if (!potentialTables['name']) {\n            throw new _util.FormatError('TrueType Collection font must contain a \"name\" table.');\n          }\n          var nameTable = readNameTable(potentialTables['name']);\n          for (var j = 0, jj = nameTable.length; j < jj; j++) {\n            for (var k = 0, kk = nameTable[j].length; k < kk; k++) {\n              var nameEntry = nameTable[j][k];\n              if (nameEntry && nameEntry.replace(/\\s/g, '') === fontName) {\n                return {\n                  header: potentialHeader,\n                  tables: potentialTables\n                };\n              }\n            }\n          }\n        }\n        throw new _util.FormatError('TrueType Collection does not contain \"' + fontName + '\" font.');\n      }\n      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n        if (!cmap) {\n          (0, _util.warn)('No cmap table available.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var segment;\n        var start = (font.start ? font.start : 0) + cmap.offset;\n        font.pos = start;\n        font.getUint16();\n        var numTables = font.getUint16();\n        var potentialTable;\n        var canBreak = false;\n        for (var i = 0; i < numTables; i++) {\n          var platformId = font.getUint16();\n          var encodingId = font.getUint16();\n          var offset = font.getInt32() >>> 0;\n          var useTable = false;\n          if (potentialTable && potentialTable.platformId === platformId && potentialTable.encodingId === encodingId) {\n            continue;\n          }\n          if (platformId === 0 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 1 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\n            useTable = true;\n            if (!isSymbolicFont) {\n              canBreak = true;\n            }\n          } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n            useTable = true;\n            canBreak = true;\n          }\n          if (useTable) {\n            potentialTable = {\n              platformId: platformId,\n              encodingId: encodingId,\n              offset: offset\n            };\n          }\n          if (canBreak) {\n            break;\n          }\n        }\n        if (potentialTable) {\n          font.pos = start + potentialTable.offset;\n        }\n        if (!potentialTable || font.peekByte() === -1) {\n          (0, _util.warn)('Could not find a preferred cmap table.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var format = font.getUint16();\n        font.getUint16();\n        font.getUint16();\n        var hasShortCmap = false;\n        var mappings = [];\n        var j, glyphId;\n        if (format === 0) {\n          for (j = 0; j < 256; j++) {\n            var index = font.getByte();\n            if (!index) {\n              continue;\n            }\n            mappings.push({\n              charCode: j,\n              glyphId: index\n            });\n          }\n          hasShortCmap = true;\n        } else if (format === 4) {\n          var segCount = font.getUint16() >> 1;\n          font.getBytes(6);\n          var segIndex,\n              segments = [];\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments.push({ end: font.getUint16() });\n          }\n          font.getUint16();\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].start = font.getUint16();\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].delta = font.getUint16();\n          }\n          var offsetsCount = 0;\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            var rangeOffset = font.getUint16();\n            if (!rangeOffset) {\n              segment.offsetIndex = -1;\n              continue;\n            }\n            var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n            segment.offsetIndex = offsetIndex;\n            offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n          }\n          var offsets = [];\n          for (j = 0; j < offsetsCount; j++) {\n            offsets.push(font.getUint16());\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            start = segment.start;\n            var end = segment.end;\n            var delta = segment.delta;\n            offsetIndex = segment.offsetIndex;\n            for (j = start; j <= end; j++) {\n              if (j === 0xFFFF) {\n                continue;\n              }\n              glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n              glyphId = glyphId + delta & 0xFFFF;\n              mappings.push({\n                charCode: j,\n                glyphId: glyphId\n              });\n            }\n          }\n        } else if (format === 6) {\n          var firstCode = font.getUint16();\n          var entryCount = font.getUint16();\n          for (j = 0; j < entryCount; j++) {\n            glyphId = font.getUint16();\n            var charCode = firstCode + j;\n            mappings.push({\n              charCode: charCode,\n              glyphId: glyphId\n            });\n          }\n        } else {\n          (0, _util.warn)('cmap table has unsupported format: ' + format);\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        mappings.sort(function (a, b) {\n          return a.charCode - b.charCode;\n        });\n        for (i = 1; i < mappings.length; i++) {\n          if (mappings[i - 1].charCode === mappings[i].charCode) {\n            mappings.splice(i, 1);\n            i--;\n          }\n        }\n        return {\n          platformId: potentialTable.platformId,\n          encodingId: potentialTable.encodingId,\n          mappings: mappings,\n          hasShortCmap: hasShortCmap\n        };\n      }\n      function sanitizeMetrics(font, header, metrics, numGlyphs) {\n        if (!header) {\n          if (metrics) {\n            metrics.data = null;\n          }\n          return;\n        }\n        font.pos = (font.start ? font.start : 0) + header.offset;\n        font.pos += header.length - 2;\n        var numOfMetrics = font.getUint16();\n        if (numOfMetrics > numGlyphs) {\n          (0, _util.info)('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n          numOfMetrics = numGlyphs;\n          header.data[34] = (numOfMetrics & 0xff00) >> 8;\n          header.data[35] = numOfMetrics & 0x00ff;\n        }\n        var numOfSidebearings = numGlyphs - numOfMetrics;\n        var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n        if (numMissing > 0) {\n          var entries = new Uint8Array(metrics.length + numMissing * 2);\n          entries.set(metrics.data);\n          metrics.data = entries;\n        }\n      }\n      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n        var glyphProfile = {\n          length: 0,\n          sizeOfInstructions: 0\n        };\n        if (sourceEnd - sourceStart <= 12) {\n          return glyphProfile;\n        }\n        var glyf = source.subarray(sourceStart, sourceEnd);\n        var contoursCount = signedInt16(glyf[0], glyf[1]);\n        if (contoursCount < 0) {\n          contoursCount = -1;\n          writeSignedInt16(glyf, 0, contoursCount);\n          dest.set(glyf, destStart);\n          glyphProfile.length = glyf.length;\n          return glyphProfile;\n        }\n        var i,\n            j = 10,\n            flagsCount = 0;\n        for (i = 0; i < contoursCount; i++) {\n          var endPoint = glyf[j] << 8 | glyf[j + 1];\n          flagsCount = endPoint + 1;\n          j += 2;\n        }\n        var instructionsStart = j;\n        var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n        glyphProfile.sizeOfInstructions = instructionsLength;\n        j += 2 + instructionsLength;\n        var instructionsEnd = j;\n        var coordinatesLength = 0;\n        for (i = 0; i < flagsCount; i++) {\n          var flag = glyf[j++];\n          if (flag & 0xC0) {\n            glyf[j - 1] = flag & 0x3F;\n          }\n          var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n          coordinatesLength += xyLength;\n          if (flag & 8) {\n            var repeat = glyf[j++];\n            i += repeat;\n            coordinatesLength += repeat * xyLength;\n          }\n        }\n        if (coordinatesLength === 0) {\n          return glyphProfile;\n        }\n        var glyphDataLength = j + coordinatesLength;\n        if (glyphDataLength > glyf.length) {\n          return glyphProfile;\n        }\n        if (!hintsValid && instructionsLength > 0) {\n          dest.set(glyf.subarray(0, instructionsStart), destStart);\n          dest.set([0, 0], destStart + instructionsStart);\n          dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n          glyphDataLength -= instructionsLength;\n          if (glyf.length - glyphDataLength > 3) {\n            glyphDataLength = glyphDataLength + 3 & ~3;\n          }\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        if (glyf.length - glyphDataLength > 3) {\n          glyphDataLength = glyphDataLength + 3 & ~3;\n          dest.set(glyf.subarray(0, glyphDataLength), destStart);\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        dest.set(glyf, destStart);\n        glyphProfile.length = glyf.length;\n        return glyphProfile;\n      }\n      function sanitizeHead(head, numGlyphs, locaLength) {\n        var data = head.data;\n        var version = int32(data[0], data[1], data[2], data[3]);\n        if (version >> 16 !== 1) {\n          (0, _util.info)('Attempting to fix invalid version in head table: ' + version);\n          data[0] = 0;\n          data[1] = 1;\n          data[2] = 0;\n          data[3] = 0;\n        }\n        var indexToLocFormat = int16(data[50], data[51]);\n        if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n          (0, _util.info)('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n          var numGlyphsPlusOne = numGlyphs + 1;\n          if (locaLength === numGlyphsPlusOne << 1) {\n            data[50] = 0;\n            data[51] = 0;\n          } else if (locaLength === numGlyphsPlusOne << 2) {\n            data[50] = 0;\n            data[51] = 1;\n          } else {\n            throw new _util.FormatError('Could not fix indexToLocFormat: ' + indexToLocFormat);\n          }\n        }\n      }\n      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions) {\n        var itemSize, itemDecode, itemEncode;\n        if (isGlyphLocationsLong) {\n          itemSize = 4;\n          itemDecode = function fontItemDecodeLong(data, offset) {\n            return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n          };\n          itemEncode = function fontItemEncodeLong(data, offset, value) {\n            data[offset] = value >>> 24 & 0xFF;\n            data[offset + 1] = value >> 16 & 0xFF;\n            data[offset + 2] = value >> 8 & 0xFF;\n            data[offset + 3] = value & 0xFF;\n          };\n        } else {\n          itemSize = 2;\n          itemDecode = function fontItemDecode(data, offset) {\n            return data[offset] << 9 | data[offset + 1] << 1;\n          };\n          itemEncode = function fontItemEncode(data, offset, value) {\n            data[offset] = value >> 9 & 0xFF;\n            data[offset + 1] = value >> 1 & 0xFF;\n          };\n        }\n        var locaData = loca.data;\n        var locaDataSize = itemSize * (1 + numGlyphs);\n        if (locaData.length !== locaDataSize) {\n          locaData = new Uint8Array(locaDataSize);\n          locaData.set(loca.data.subarray(0, locaDataSize));\n          loca.data = locaData;\n        }\n        var oldGlyfData = glyf.data;\n        var oldGlyfDataLength = oldGlyfData.length;\n        var newGlyfData = new Uint8Array(oldGlyfDataLength);\n        var startOffset = itemDecode(locaData, 0);\n        var writeOffset = 0;\n        var missingGlyphs = Object.create(null);\n        itemEncode(locaData, 0, writeOffset);\n        var i, j;\n        var locaCount = dupFirstEntry ? numGlyphs - 1 : numGlyphs;\n        for (i = 0, j = itemSize; i < locaCount; i++, j += itemSize) {\n          var endOffset = itemDecode(locaData, j);\n          if (endOffset === 0) {\n            endOffset = startOffset;\n          }\n          if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n            endOffset = oldGlyfDataLength;\n          }\n          if (endOffset > oldGlyfDataLength) {\n            startOffset = endOffset;\n          }\n          var glyphProfile = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n          var newLength = glyphProfile.length;\n          if (newLength === 0) {\n            missingGlyphs[i] = true;\n          }\n          if (glyphProfile.sizeOfInstructions > maxSizeOfInstructions) {\n            maxSizeOfInstructions = glyphProfile.sizeOfInstructions;\n          }\n          writeOffset += newLength;\n          itemEncode(locaData, j, writeOffset);\n          startOffset = endOffset;\n        }\n        if (writeOffset === 0) {\n          var simpleGlyph = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\n          for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n            itemEncode(locaData, j, simpleGlyph.length);\n          }\n          glyf.data = simpleGlyph;\n        } else if (dupFirstEntry) {\n          var firstEntryLength = itemDecode(locaData, itemSize);\n          if (newGlyfData.length > firstEntryLength + writeOffset) {\n            glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n          } else {\n            glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n            glyf.data.set(newGlyfData.subarray(0, writeOffset));\n          }\n          glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n          itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n        } else {\n          glyf.data = newGlyfData.subarray(0, writeOffset);\n        }\n        return {\n          missingGlyphs: missingGlyphs,\n          maxSizeOfInstructions: maxSizeOfInstructions\n        };\n      }\n      function readPostScriptTable(post, properties, maxpNumGlyphs) {\n        var start = (font.start ? font.start : 0) + post.offset;\n        font.pos = start;\n        var length = post.length,\n            end = start + length;\n        var version = font.getInt32();\n        font.getBytes(28);\n        var glyphNames;\n        var valid = true;\n        var i;\n        switch (version) {\n          case 0x00010000:\n            glyphNames = MacStandardGlyphOrdering;\n            break;\n          case 0x00020000:\n            var numGlyphs = font.getUint16();\n            if (numGlyphs !== maxpNumGlyphs) {\n              valid = false;\n              break;\n            }\n            var glyphNameIndexes = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var index = font.getUint16();\n              if (index >= 32768) {\n                valid = false;\n                break;\n              }\n              glyphNameIndexes.push(index);\n            }\n            if (!valid) {\n              break;\n            }\n            var customNames = [];\n            var strBuf = [];\n            while (font.pos < end) {\n              var stringLength = font.getByte();\n              strBuf.length = stringLength;\n              for (i = 0; i < stringLength; ++i) {\n                strBuf[i] = String.fromCharCode(font.getByte());\n              }\n              customNames.push(strBuf.join(''));\n            }\n            glyphNames = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var j = glyphNameIndexes[i];\n              if (j < 258) {\n                glyphNames.push(MacStandardGlyphOrdering[j]);\n                continue;\n              }\n              glyphNames.push(customNames[j - 258]);\n            }\n            break;\n          case 0x00030000:\n            break;\n          default:\n            (0, _util.warn)('Unknown/unsupported post table version ' + version);\n            valid = false;\n            if (properties.defaultEncoding) {\n              glyphNames = properties.defaultEncoding;\n            }\n            break;\n        }\n        properties.glyphNames = glyphNames;\n        return valid;\n      }\n      function readNameTable(nameTable) {\n        var start = (font.start ? font.start : 0) + nameTable.offset;\n        font.pos = start;\n        var names = [[], []];\n        var length = nameTable.length,\n            end = start + length;\n        var format = font.getUint16();\n        var FORMAT_0_HEADER_LENGTH = 6;\n        if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n          return names;\n        }\n        var numRecords = font.getUint16();\n        var stringsStart = font.getUint16();\n        var records = [];\n        var NAME_RECORD_LENGTH = 12;\n        var i, ii;\n        for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n          var r = {\n            platform: font.getUint16(),\n            encoding: font.getUint16(),\n            language: font.getUint16(),\n            name: font.getUint16(),\n            length: font.getUint16(),\n            offset: font.getUint16()\n          };\n          if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n            records.push(r);\n          }\n        }\n        for (i = 0, ii = records.length; i < ii; i++) {\n          var record = records[i];\n          if (record.length <= 0) {\n            continue;\n          }\n          var pos = start + stringsStart + record.offset;\n          if (pos + record.length > end) {\n            continue;\n          }\n          font.pos = pos;\n          var nameIndex = record.name;\n          if (record.encoding) {\n            var str = '';\n            for (var j = 0, jj = record.length; j < jj; j += 2) {\n              str += String.fromCharCode(font.getUint16());\n            }\n            names[1][nameIndex] = str;\n          } else {\n            names[0][nameIndex] = (0, _util.bytesToString)(font.getBytes(record.length));\n          }\n        }\n        return names;\n      }\n      var TTOpsStackDeltas = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\n      function sanitizeTTProgram(table, ttContext) {\n        var data = table.data;\n        var i = 0,\n            j,\n            n,\n            b,\n            funcId,\n            pc,\n            lastEndf = 0,\n            lastDeff = 0;\n        var stack = [];\n        var callstack = [];\n        var functionsCalled = [];\n        var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n        var inFDEF = false,\n            ifLevel = 0,\n            inELSE = 0;\n        for (var ii = data.length; i < ii;) {\n          var op = data[i++];\n          if (op === 0x40) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if (op === 0x41) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB0) {\n            n = op - 0xB0 + 1;\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB8) {\n            n = op - 0xB8 + 1;\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n            if (!inFDEF && !inELSE) {\n              funcId = stack[stack.length - 1];\n              ttContext.functionsUsed[funcId] = true;\n              if (funcId in ttContext.functionsStackDeltas) {\n                stack.length += ttContext.functionsStackDeltas[funcId];\n              } else if (funcId in ttContext.functionsDefined && !functionsCalled.includes(funcId)) {\n                callstack.push({\n                  data: data,\n                  i: i,\n                  stackTop: stack.length - 1\n                });\n                functionsCalled.push(funcId);\n                pc = ttContext.functionsDefined[funcId];\n                if (!pc) {\n                  (0, _util.warn)('TT: CALL non-existent function');\n                  ttContext.hintsValid = false;\n                  return;\n                }\n                data = pc.data;\n                i = pc.i;\n              }\n            }\n          } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested FDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n            funcId = stack.pop();\n            ttContext.functionsDefined[funcId] = {\n              data: data,\n              i: i\n            };\n          } else if (op === 0x2D) {\n            if (inFDEF) {\n              inFDEF = false;\n              lastEndf = i;\n            } else {\n              pc = callstack.pop();\n              if (!pc) {\n                (0, _util.warn)('TT: ENDF bad stack');\n                ttContext.hintsValid = false;\n                return;\n              }\n              funcId = functionsCalled.pop();\n              data = pc.data;\n              i = pc.i;\n              ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n            }\n          } else if (op === 0x89) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested IDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n          } else if (op === 0x58) {\n            ++ifLevel;\n          } else if (op === 0x1B) {\n            inELSE = ifLevel;\n          } else if (op === 0x59) {\n            if (inELSE === ifLevel) {\n              inELSE = 0;\n            }\n            --ifLevel;\n          } else if (op === 0x1C) {\n            if (!inFDEF && !inELSE) {\n              var offset = stack[stack.length - 1];\n              if (offset > 0) {\n                i += offset - 1;\n              }\n            }\n          }\n          if (!inFDEF && !inELSE) {\n            var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n            if (op >= 0x71 && op <= 0x75) {\n              n = stack.pop();\n              if (!isNaN(n)) {\n                stackDelta = -n * 2;\n              }\n            }\n            while (stackDelta < 0 && stack.length > 0) {\n              stack.pop();\n              stackDelta++;\n            }\n            while (stackDelta > 0) {\n              stack.push(NaN);\n              stackDelta--;\n            }\n          }\n        }\n        ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n        var content = [data];\n        if (i > data.length) {\n          content.push(new Uint8Array(i - data.length));\n        }\n        if (lastDeff > lastEndf) {\n          (0, _util.warn)('TT: complementing a missing function tail');\n          content.push(new Uint8Array([0x22, 0x2D]));\n        }\n        foldTTTable(table, content);\n      }\n      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n        if (ttContext.tooComplexToFollowFunctions) {\n          return;\n        }\n        if (ttContext.functionsDefined.length > maxFunctionDefs) {\n          (0, _util.warn)('TT: more functions defined than expected');\n          ttContext.hintsValid = false;\n          return;\n        }\n        for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n          if (j > maxFunctionDefs) {\n            (0, _util.warn)('TT: invalid function id: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n          if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n            (0, _util.warn)('TT: undefined function: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n        }\n      }\n      function foldTTTable(table, content) {\n        if (content.length > 1) {\n          var newLength = 0;\n          var j, jj;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            newLength += content[j].length;\n          }\n          newLength = newLength + 3 & ~3;\n          var result = new Uint8Array(newLength);\n          var pos = 0;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            result.set(content[j], pos);\n            pos += content[j].length;\n          }\n          table.data = result;\n          table.length = newLength;\n        }\n      }\n      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n        var ttContext = {\n          functionsDefined: [],\n          functionsUsed: [],\n          functionsStackDeltas: [],\n          tooComplexToFollowFunctions: false,\n          hintsValid: true\n        };\n        if (fpgm) {\n          sanitizeTTProgram(fpgm, ttContext);\n        }\n        if (prep) {\n          sanitizeTTProgram(prep, ttContext);\n        }\n        if (fpgm) {\n          checkInvalidFunctions(ttContext, maxFunctionDefs);\n        }\n        if (cvt && cvt.length & 1) {\n          var cvtData = new Uint8Array(cvt.length + 1);\n          cvtData.set(cvt.data);\n          cvt.data = cvtData;\n        }\n        return ttContext.hintsValid;\n      }\n      font = new _stream.Stream(new Uint8Array(font.getBytes()));\n      var header = void 0,\n          tables = void 0;\n      if (isTrueTypeCollectionFile(font)) {\n        var ttcData = readTrueTypeCollectionData(font, this.name);\n        header = ttcData.header;\n        tables = ttcData.tables;\n      } else {\n        header = readOpenTypeHeader(font);\n        tables = readTables(font, header.numTables);\n      }\n      var cff = void 0,\n          cffFile = void 0;\n      var isTrueType = !tables['CFF '];\n      if (!isTrueType) {\n        if (header.version === 'OTTO' && !(properties.composite && properties.cidToGidMap) || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          cff = new CFFFont(cffFile, properties);\n          adjustWidths(properties);\n          return this.convert(name, cff, properties);\n        }\n        delete tables['glyf'];\n        delete tables['loca'];\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n        this.isOpenType = true;\n      } else {\n        if (!tables['loca']) {\n          throw new _util.FormatError('Required \"loca\" table is not found');\n        }\n        if (!tables['glyf']) {\n          (0, _util.warn)('Required \"glyf\" table is not found -- trying to recover.');\n          tables['glyf'] = {\n            tag: 'glyf',\n            data: new Uint8Array(0)\n          };\n        }\n        this.isOpenType = false;\n      }\n      if (!tables['maxp']) {\n        throw new _util.FormatError('Required \"maxp\" table is not found');\n      }\n      font.pos = (font.start || 0) + tables['maxp'].offset;\n      var version = font.getInt32();\n      var numGlyphs = font.getUint16();\n      var maxFunctionDefs = 0;\n      var maxSizeOfInstructions = 0;\n      if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n        font.pos += 8;\n        var maxZones = font.getUint16();\n        if (maxZones > 2) {\n          tables['maxp'].data[14] = 0;\n          tables['maxp'].data[15] = 2;\n        }\n        font.pos += 4;\n        maxFunctionDefs = font.getUint16();\n        font.pos += 4;\n        maxSizeOfInstructions = font.getUint16();\n      }\n      var dupFirstEntry = false;\n      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\0') {\n        dupFirstEntry = true;\n        numGlyphs++;\n        tables['maxp'].data[4] = numGlyphs >> 8;\n        tables['maxp'].data[5] = numGlyphs & 255;\n      }\n      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n      if (!hintsValid) {\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n      }\n      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n      if (!tables['head']) {\n        throw new _util.FormatError('Required \"head\" table is not found');\n      }\n      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n      var missingGlyphs = Object.create(null);\n      if (isTrueType) {\n        var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n        var glyphsInfo = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions);\n        missingGlyphs = glyphsInfo.missingGlyphs;\n        if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n          tables['maxp'].data[26] = glyphsInfo.maxSizeOfInstructions >> 8;\n          tables['maxp'].data[27] = glyphsInfo.maxSizeOfInstructions & 255;\n        }\n      }\n      if (!tables['hhea']) {\n        throw new _util.FormatError('Required \"hhea\" table is not found');\n      }\n      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n        tables['hhea'].data[10] = 0xFF;\n        tables['hhea'].data[11] = 0xFF;\n      }\n      var metricsOverride = {\n        unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n        yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n        yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n        ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n        descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n      };\n      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n      if (tables['post']) {\n        var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n        if (!valid) {\n          tables['post'] = null;\n        }\n      }\n      var charCodeToGlyphId = [],\n          charCode;\n      function hasGlyph(glyphId) {\n        return !missingGlyphs[glyphId];\n      }\n      if (properties.composite) {\n        var cidToGidMap = properties.cidToGidMap || [];\n        var isCidToGidMapEmpty = cidToGidMap.length === 0;\n        properties.cMap.forEach(function (charCode, cid) {\n          if (cid > 0xffff) {\n            throw new _util.FormatError('Max size of CID is 65,535');\n          }\n          var glyphId = -1;\n          if (isCidToGidMapEmpty) {\n            glyphId = cid;\n          } else if (cidToGidMap[cid] !== undefined) {\n            glyphId = cidToGidMap[cid];\n          }\n          if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId)) {\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        });\n        if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n          charCodeToGlyphId[0] = numGlyphs - 1;\n        }\n      } else {\n        var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n        var cmapPlatformId = cmapTable.platformId;\n        var cmapEncodingId = cmapTable.encodingId;\n        var cmapMappings = cmapTable.mappings;\n        var cmapMappingsLength = cmapMappings.length;\n        if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!(0, _encodings.getEncoding)(properties.baseEncodingName)) {\n          var baseEncoding = [];\n          if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n            baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n          }\n          var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n          for (charCode = 0; charCode < 256; charCode++) {\n            var glyphName, standardGlyphName;\n            if (this.differences && charCode in this.differences) {\n              glyphName = this.differences[charCode];\n            } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n              glyphName = baseEncoding[charCode];\n            } else {\n              glyphName = _encodings.StandardEncoding[charCode];\n            }\n            if (!glyphName) {\n              continue;\n            }\n            standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n            var unicodeOrCharCode;\n            if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n              unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n            } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n              unicodeOrCharCode = _encodings.MacRomanEncoding.indexOf(standardGlyphName);\n            }\n            var found = false;\n            for (var i = 0; i < cmapMappingsLength; ++i) {\n              if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n                continue;\n              }\n              charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n              found = true;\n              break;\n            }\n            if (!found && properties.glyphNames) {\n              var glyphId = properties.glyphNames.indexOf(glyphName);\n              if (glyphId === -1 && standardGlyphName !== glyphName) {\n                glyphId = properties.glyphNames.indexOf(standardGlyphName);\n              }\n              if (glyphId > 0 && hasGlyph(glyphId)) {\n                charCodeToGlyphId[charCode] = glyphId;\n              }\n            }\n          }\n        } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n          for (var _i = 0; _i < cmapMappingsLength; ++_i) {\n            charCodeToGlyphId[cmapMappings[_i].charCode] = cmapMappings[_i].glyphId;\n          }\n        } else {\n          for (var _i2 = 0; _i2 < cmapMappingsLength; ++_i2) {\n            charCode = cmapMappings[_i2].charCode;\n            if (cmapPlatformId === 3 && charCode >= 0xF000 && charCode <= 0xF0FF) {\n              charCode &= 0xFF;\n            }\n            charCodeToGlyphId[charCode] = cmapMappings[_i2].glyphId;\n          }\n        }\n      }\n      if (charCodeToGlyphId.length === 0) {\n        charCodeToGlyphId[0] = 0;\n      }\n      var newMapping = adjustMapping(charCodeToGlyphId, properties, missingGlyphs);\n      this.toFontChar = newMapping.toFontChar;\n      tables['cmap'] = {\n        tag: 'cmap',\n        data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n      };\n      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n        tables['OS/2'] = {\n          tag: 'OS/2',\n          data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n        };\n      }\n      if (!tables['post']) {\n        tables['post'] = {\n          tag: 'post',\n          data: createPostTable(properties)\n        };\n      }\n      if (!isTrueType) {\n        try {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          var parser = new _cff_parser.CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n          cff = parser.parse();\n          var compiler = new _cff_parser.CFFCompiler(cff);\n          tables['CFF '].data = compiler.compile();\n        } catch (e) {\n          (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n        }\n      }\n      if (!tables['name']) {\n        tables['name'] = {\n          tag: 'name',\n          data: createNameTable(this.name)\n        };\n      } else {\n        var namePrototype = readNameTable(tables['name']);\n        tables['name'].data = createNameTable(name, namePrototype);\n      }\n      var builder = new OpenTypeFileBuilder(header.version);\n      for (var tableTag in tables) {\n        builder.addTable(tableTag, tables[tableTag].data);\n      }\n      return builder.toArray();\n    },\n    convert: function Font_convert(fontName, font, properties) {\n      properties.fixedPitch = false;\n      if (properties.builtInEncoding) {\n        adjustToUnicode(properties, properties.builtInEncoding);\n      }\n      var mapping = font.getGlyphMapping(properties);\n      var newMapping = adjustMapping(mapping, properties, Object.create(null));\n      this.toFontChar = newMapping.toFontChar;\n      var numGlyphs = font.numGlyphs;\n      function getCharCodes(charCodeToGlyphId, glyphId) {\n        var charCodes = null;\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            if (!charCodes) {\n              charCodes = [];\n            }\n            charCodes.push(charCode | 0);\n          }\n        }\n        return charCodes;\n      }\n      function createCharCode(charCodeToGlyphId, glyphId) {\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            return charCode | 0;\n          }\n        }\n        newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n        return newMapping.nextAvailableFontCharCode++;\n      }\n      var seacs = font.seacs;\n      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n        var matrix = properties.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        var charset = font.getCharset();\n        var seacMap = Object.create(null);\n        for (var glyphId in seacs) {\n          glyphId |= 0;\n          var seac = seacs[glyphId];\n          var baseGlyphName = _encodings.StandardEncoding[seac[2]];\n          var accentGlyphName = _encodings.StandardEncoding[seac[3]];\n          var baseGlyphId = charset.indexOf(baseGlyphName);\n          var accentGlyphId = charset.indexOf(accentGlyphName);\n          if (baseGlyphId < 0 || accentGlyphId < 0) {\n            continue;\n          }\n          var accentOffset = {\n            x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n            y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n          };\n          var charCodes = getCharCodes(mapping, glyphId);\n          if (!charCodes) {\n            continue;\n          }\n          for (var i = 0, ii = charCodes.length; i < ii; i++) {\n            var charCode = charCodes[i];\n            var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n            var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n            var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n            seacMap[charCode] = {\n              baseFontCharCode: baseFontCharCode,\n              accentFontCharCode: accentFontCharCode,\n              accentOffset: accentOffset\n            };\n          }\n        }\n        properties.seacMap = seacMap;\n      }\n      var unitsPerEm = 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n      var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n      builder.addTable('CFF ', font.data);\n      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n      builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n      builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n      builder.addTable('hmtx', function fontFieldsHmtx() {\n        var charstrings = font.charstrings;\n        var cffWidths = font.cff ? font.cff.widths : null;\n        var hmtx = '\\x00\\x00\\x00\\x00';\n        for (var i = 1, ii = numGlyphs; i < ii; i++) {\n          var width = 0;\n          if (charstrings) {\n            var charstring = charstrings[i - 1];\n            width = 'width' in charstring ? charstring.width : 0;\n          } else if (cffWidths) {\n            width = Math.ceil(cffWidths[i] || 0);\n          }\n          hmtx += string16(width) + string16(0);\n        }\n        return hmtx;\n      }());\n      builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n      builder.addTable('name', createNameTable(fontName));\n      builder.addTable('post', createPostTable(properties));\n      return builder.toArray();\n    },\n    get spaceWidth() {\n      if ('_shadowWidth' in this) {\n        return this._shadowWidth;\n      }\n      var possibleSpaceReplacements = ['space', 'minus', 'one', 'i', 'I'];\n      var width;\n      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n        var glyphName = possibleSpaceReplacements[i];\n        if (glyphName in this.widths) {\n          width = this.widths[glyphName];\n          break;\n        }\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        var glyphUnicode = glyphsUnicodeMap[glyphName];\n        var charcode = 0;\n        if (this.composite) {\n          if (this.cMap.contains(glyphUnicode)) {\n            charcode = this.cMap.lookup(glyphUnicode);\n          }\n        }\n        if (!charcode && this.toUnicode) {\n          charcode = this.toUnicode.charCodeOf(glyphUnicode);\n        }\n        if (charcode <= 0) {\n          charcode = glyphUnicode;\n        }\n        width = this.widths[charcode];\n        if (width) {\n          break;\n        }\n      }\n      width = width || this.defaultWidth;\n      this._shadowWidth = width;\n      return width;\n    },\n    charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n      var fontCharCode, width, operatorListId;\n      var widthCode = charcode;\n      if (this.cMap && this.cMap.contains(charcode)) {\n        widthCode = this.cMap.lookup(charcode);\n      }\n      width = this.widths[widthCode];\n      width = (0, _util.isNum)(width) ? width : this.defaultWidth;\n      var vmetric = this.vmetrics && this.vmetrics[widthCode];\n      var unicode = this.toUnicode.get(charcode) || this.fallbackToUnicode.get(charcode) || charcode;\n      if (typeof unicode === 'number') {\n        unicode = String.fromCharCode(unicode);\n      }\n      var isInFont = charcode in this.toFontChar;\n      fontCharCode = this.toFontChar[charcode] || charcode;\n      if (this.missingFile) {\n        fontCharCode = (0, _unicode.mapSpecialUnicodeValues)(fontCharCode);\n      }\n      if (this.isType3Font) {\n        operatorListId = fontCharCode;\n      }\n      var accent = null;\n      if (this.seacMap && this.seacMap[charcode]) {\n        isInFont = true;\n        var seac = this.seacMap[charcode];\n        fontCharCode = seac.baseFontCharCode;\n        accent = {\n          fontChar: String.fromCharCode(seac.accentFontCharCode),\n          offset: seac.accentOffset\n        };\n      }\n      var fontChar = String.fromCharCode(fontCharCode);\n      var glyph = this.glyphCache[charcode];\n      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n        glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n        this.glyphCache[charcode] = glyph;\n      }\n      return glyph;\n    },\n    charsToGlyphs: function Font_charsToGlyphs(chars) {\n      var charsCache = this.charsCache;\n      var glyphs, glyph, charcode;\n      if (charsCache) {\n        glyphs = charsCache[chars];\n        if (glyphs) {\n          return glyphs;\n        }\n      }\n      if (!charsCache) {\n        charsCache = this.charsCache = Object.create(null);\n      }\n      glyphs = [];\n      var charsCacheKey = chars;\n      var i = 0,\n          ii;\n      if (this.cMap) {\n        var c = Object.create(null);\n        while (i < chars.length) {\n          this.cMap.readCharCode(chars, i, c);\n          charcode = c.charcode;\n          var length = c.length;\n          i += length;\n          var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n          glyph = this.charToGlyph(charcode, isSpace);\n          glyphs.push(glyph);\n        }\n      } else {\n        for (i = 0, ii = chars.length; i < ii; ++i) {\n          charcode = chars.charCodeAt(i);\n          glyph = this.charToGlyph(charcode, charcode === 0x20);\n          glyphs.push(glyph);\n        }\n      }\n      return charsCache[charsCacheKey] = glyphs;\n    }\n  };\n  return Font;\n}();\nvar ErrorFont = function ErrorFontClosure() {\n  function ErrorFont(error) {\n    this.error = error;\n    this.loadedName = 'g_font_error';\n    this.loading = false;\n  }\n  ErrorFont.prototype = {\n    charsToGlyphs: function ErrorFont_charsToGlyphs() {\n      return [];\n    },\n    exportData: function ErrorFont_exportData() {\n      return { error: this.error };\n    }\n  };\n  return ErrorFont;\n}();\nfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n  var charCodeToGlyphId = Object.create(null);\n  var glyphId, charCode, baseEncoding;\n  var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n  if (properties.baseEncodingName) {\n    baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  } else if (isSymbolicFont) {\n    for (charCode in builtInEncoding) {\n      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n    }\n  } else {\n    baseEncoding = _encodings.StandardEncoding;\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  var differences = properties.differences,\n      glyphsUnicodeMap;\n  if (differences) {\n    for (charCode in differences) {\n      var glyphName = differences[charCode];\n      glyphId = glyphNames.indexOf(glyphName);\n      if (glyphId === -1) {\n        if (!glyphsUnicodeMap) {\n          glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        }\n        var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n        if (standardGlyphName !== glyphName) {\n          glyphId = glyphNames.indexOf(standardGlyphName);\n        }\n      }\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  return charCodeToGlyphId;\n}\nvar Type1Font = function Type1FontClosure() {\n  function findBlock(streamBytes, signature, startIndex) {\n    var streamBytesLength = streamBytes.length;\n    var signatureLength = signature.length;\n    var scanLength = streamBytesLength - signatureLength;\n    var i = startIndex,\n        j,\n        found = false;\n    while (i < scanLength) {\n      j = 0;\n      while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n        j++;\n      }\n      if (j >= signatureLength) {\n        i += j;\n        while (i < streamBytesLength && (0, _util.isSpace)(streamBytes[i])) {\n          i++;\n        }\n        found = true;\n        break;\n      }\n      i++;\n    }\n    return {\n      found: found,\n      length: i\n    };\n  }\n  function getHeaderBlock(stream, suggestedLength) {\n    var EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];\n    var streamStartPos = stream.pos;\n    var headerBytes, headerBytesLength, block;\n    try {\n      headerBytes = stream.getBytes(suggestedLength);\n      headerBytesLength = headerBytes.length;\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n    }\n    if (headerBytesLength === suggestedLength) {\n      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n      if (block.found && block.length === suggestedLength) {\n        return {\n          stream: new _stream.Stream(headerBytes),\n          length: suggestedLength\n        };\n      }\n    }\n    (0, _util.warn)('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n    stream.pos = streamStartPos;\n    var SCAN_BLOCK_LENGTH = 2048;\n    var actualLength;\n    while (true) {\n      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n      if (block.length === 0) {\n        break;\n      }\n      stream.pos += block.length;\n      if (block.found) {\n        actualLength = stream.pos - streamStartPos;\n        break;\n      }\n    }\n    stream.pos = streamStartPos;\n    if (actualLength) {\n      return {\n        stream: new _stream.Stream(stream.getBytes(actualLength)),\n        length: actualLength\n      };\n    }\n    (0, _util.warn)('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n    return {\n      stream: new _stream.Stream(stream.getBytes(suggestedLength)),\n      length: suggestedLength\n    };\n  }\n  function getEexecBlock(stream, suggestedLength) {\n    var eexecBytes = stream.getBytes();\n    return {\n      stream: new _stream.Stream(eexecBytes),\n      length: eexecBytes.length\n    };\n  }\n  function Type1Font(name, file, properties) {\n    var PFB_HEADER_SIZE = 6;\n    var headerBlockLength = properties.length1;\n    var eexecBlockLength = properties.length2;\n    var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n    var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n    if (pfbHeaderPresent) {\n      file.skip(PFB_HEADER_SIZE);\n      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var headerBlock = getHeaderBlock(file, headerBlockLength);\n    var headerBlockParser = new _type1_parser.Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n    headerBlockParser.extractFontHeader(properties);\n    if (pfbHeaderPresent) {\n      pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var eexecBlock = getEexecBlock(file, eexecBlockLength);\n    var eexecBlockParser = new _type1_parser.Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n    var data = eexecBlockParser.extractFontProgram();\n    for (var info in data.properties) {\n      properties[info] = data.properties[info];\n    }\n    var charstrings = data.charstrings;\n    var type2Charstrings = this.getType2Charstrings(charstrings);\n    var subrs = this.getType2Subrs(data.subrs);\n    this.charstrings = charstrings;\n    this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n    this.seacs = this.getSeacs(data.charstrings);\n  }\n  Type1Font.prototype = {\n    get numGlyphs() {\n      return this.charstrings.length + 1;\n    },\n    getCharset: function Type1Font_getCharset() {\n      var charset = ['.notdef'];\n      var charstrings = this.charstrings;\n      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        charset.push(charstrings[glyphId].glyphName);\n      }\n      return charset;\n    },\n    getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n      var charstrings = this.charstrings;\n      var glyphNames = ['.notdef'],\n          glyphId;\n      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        glyphNames.push(charstrings[glyphId].glyphName);\n      }\n      var encoding = properties.builtInEncoding;\n      if (encoding) {\n        var builtInEncoding = Object.create(null);\n        for (var charCode in encoding) {\n          glyphId = glyphNames.indexOf(encoding[charCode]);\n          if (glyphId >= 0) {\n            builtInEncoding[charCode] = glyphId;\n          }\n        }\n      }\n      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n    },\n    getSeacs: function Type1Font_getSeacs(charstrings) {\n      var i, ii;\n      var seacMap = [];\n      for (i = 0, ii = charstrings.length; i < ii; i++) {\n        var charstring = charstrings[i];\n        if (charstring.seac) {\n          seacMap[i + 1] = charstring.seac;\n        }\n      }\n      return seacMap;\n    },\n    getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n      var type2Charstrings = [];\n      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n        type2Charstrings.push(type1Charstrings[i].charstring);\n      }\n      return type2Charstrings;\n    },\n    getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n      var bias = 0;\n      var count = type1Subrs.length;\n      if (count < 1133) {\n        bias = 107;\n      } else if (count < 33769) {\n        bias = 1131;\n      } else {\n        bias = 32768;\n      }\n      var type2Subrs = [];\n      var i;\n      for (i = 0; i < bias; i++) {\n        type2Subrs.push([0x0B]);\n      }\n      for (i = 0; i < count; i++) {\n        type2Subrs.push(type1Subrs[i]);\n      }\n      return type2Subrs;\n    },\n    wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n      var cff = new _cff_parser.CFF();\n      cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);\n      cff.names = [name];\n      var topDict = new _cff_parser.CFFTopDict();\n      topDict.setByName('version', 391);\n      topDict.setByName('Notice', 392);\n      topDict.setByName('FullName', 393);\n      topDict.setByName('FamilyName', 394);\n      topDict.setByName('Weight', 395);\n      topDict.setByName('Encoding', null);\n      topDict.setByName('FontMatrix', properties.fontMatrix);\n      topDict.setByName('FontBBox', properties.bbox);\n      topDict.setByName('charset', null);\n      topDict.setByName('CharStrings', null);\n      topDict.setByName('Private', null);\n      cff.topDict = topDict;\n      var strings = new _cff_parser.CFFStrings();\n      strings.add('Version 0.11');\n      strings.add('See original notice');\n      strings.add(name);\n      strings.add(name);\n      strings.add('Medium');\n      cff.strings = strings;\n      cff.globalSubrIndex = new _cff_parser.CFFIndex();\n      var count = glyphs.length;\n      var charsetArray = [0];\n      var i, ii;\n      for (i = 0; i < count; i++) {\n        var index = _cff_parser.CFFStandardStrings.indexOf(charstrings[i].glyphName);\n        if (index === -1) {\n          index = 0;\n        }\n        charsetArray.push(index >> 8 & 0xff, index & 0xff);\n      }\n      cff.charset = new _cff_parser.CFFCharset(false, 0, [], charsetArray);\n      var charStringsIndex = new _cff_parser.CFFIndex();\n      charStringsIndex.add([0x8B, 0x0E]);\n      for (i = 0; i < count; i++) {\n        var glyph = glyphs[i];\n        if (glyph.length === 0) {\n          charStringsIndex.add([0x8B, 0x0E]);\n          continue;\n        }\n        charStringsIndex.add(glyph);\n      }\n      cff.charStrings = charStringsIndex;\n      var privateDict = new _cff_parser.CFFPrivateDict();\n      privateDict.setByName('Subrs', null);\n      var fields = ['BlueValues', 'OtherBlues', 'FamilyBlues', 'FamilyOtherBlues', 'StemSnapH', 'StemSnapV', 'BlueShift', 'BlueFuzz', 'BlueScale', 'LanguageGroup', 'ExpansionFactor', 'ForceBold', 'StdHW', 'StdVW'];\n      for (i = 0, ii = fields.length; i < ii; i++) {\n        var field = fields[i];\n        if (!(field in properties.privateData)) {\n          continue;\n        }\n        var value = properties.privateData[field];\n        if (Array.isArray(value)) {\n          for (var j = value.length - 1; j > 0; j--) {\n            value[j] -= value[j - 1];\n          }\n        }\n        privateDict.setByName(field, value);\n      }\n      cff.topDict.privateDict = privateDict;\n      var subrIndex = new _cff_parser.CFFIndex();\n      for (i = 0, ii = subrs.length; i < ii; i++) {\n        subrIndex.add(subrs[i]);\n      }\n      privateDict.subrsIndex = subrIndex;\n      var compiler = new _cff_parser.CFFCompiler(cff);\n      return compiler.compile();\n    }\n  };\n  return Type1Font;\n}();\nvar CFFFont = function CFFFontClosure() {\n  function CFFFont(file, properties) {\n    this.properties = properties;\n    var parser = new _cff_parser.CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n    this.cff = parser.parse();\n    var compiler = new _cff_parser.CFFCompiler(this.cff);\n    this.seacs = this.cff.seacs;\n    try {\n      this.data = compiler.compile();\n    } catch (e) {\n      (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n      this.data = file;\n    }\n  }\n  CFFFont.prototype = {\n    get numGlyphs() {\n      return this.cff.charStrings.count;\n    },\n    getCharset: function CFFFont_getCharset() {\n      return this.cff.charset.charset;\n    },\n    getGlyphMapping: function CFFFont_getGlyphMapping() {\n      var cff = this.cff;\n      var properties = this.properties;\n      var charsets = cff.charset.charset;\n      var charCodeToGlyphId;\n      var glyphId;\n      if (properties.composite) {\n        charCodeToGlyphId = Object.create(null);\n        if (cff.isCIDFont) {\n          for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n            var cid = charsets[glyphId];\n            var charCode = properties.cMap.charCodeOf(cid);\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        } else {\n          for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n            charCodeToGlyphId[glyphId] = glyphId;\n          }\n        }\n        return charCodeToGlyphId;\n      }\n      var encoding = cff.encoding ? cff.encoding.encoding : null;\n      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n      return charCodeToGlyphId;\n    }\n  };\n  return CFFFont;\n}();\n(function checkSeacSupport() {\n  if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n    exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED = true;\n  }\n})();\n(function checkChromeWindows() {\n  if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n    SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n  }\n})();\nexports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\nexports.PRIVATE_USE_OFFSET_START = PRIVATE_USE_OFFSET_START;\nexports.PRIVATE_USE_OFFSET_END = PRIVATE_USE_OFFSET_END;\nexports.ErrorFont = ErrorFont;\nexports.Font = Font;\nexports.FontFlags = FontFlags;\nexports.ToUnicodeMap = ToUnicodeMap;\nexports.IdentityToUnicodeMap = IdentityToUnicodeMap;\nexports.ProblematicCharRanges = ProblematicCharRanges;\nexports.getFontType = getFontType;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/fonts.js\n// module id = bDKi\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MurmurHash3_64 = undefined;\n\nvar _util = require('../shared/util');\n\nvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n  var MASK_HIGH = 0xffff0000;\n  var MASK_LOW = 0xffff;\n  function MurmurHash3_64(seed) {\n    var SEED = 0xc3d2e1f0;\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n  MurmurHash3_64.prototype = {\n    update: function MurmurHash3_64_update(input) {\n      var data = void 0,\n          length = void 0;\n      if ((0, _util.isString)(input)) {\n        data = new Uint8Array(input.length * 2);\n        length = 0;\n        for (var i = 0, ii = input.length; i < ii; i++) {\n          var code = input.charCodeAt(i);\n          if (code <= 0xff) {\n            data[length++] = code;\n          } else {\n            data[length++] = code >>> 8;\n            data[length++] = code & 0xff;\n          }\n        }\n      } else if ((0, _util.isArrayBuffer)(input)) {\n        data = input;\n        length = data.byteLength;\n      } else {\n        throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n      }\n      var blockCounts = length >> 2;\n      var tailLength = length - blockCounts * 4;\n      var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n      var k1 = 0;\n      var k2 = 0;\n      var h1 = this.h1;\n      var h2 = this.h2;\n      var C1 = 0xcc9e2d51;\n      var C2 = 0x1b873593;\n      var C1_LOW = C1 & MASK_LOW;\n      var C2_LOW = C2 & MASK_LOW;\n      for (var _i = 0; _i < blockCounts; _i++) {\n        if (_i & 1) {\n          k1 = dataUint32[_i];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          h1 ^= k1;\n          h1 = h1 << 13 | h1 >>> 19;\n          h1 = h1 * 5 + 0xe6546b64;\n        } else {\n          k2 = dataUint32[_i];\n          k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n          k2 = k2 << 15 | k2 >>> 17;\n          k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n          h2 ^= k2;\n          h2 = h2 << 13 | h2 >>> 19;\n          h2 = h2 * 5 + 0xe6546b64;\n        }\n      }\n      k1 = 0;\n      switch (tailLength) {\n        case 3:\n          k1 ^= data[blockCounts * 4 + 2] << 16;\n        case 2:\n          k1 ^= data[blockCounts * 4 + 1] << 8;\n        case 1:\n          k1 ^= data[blockCounts * 4];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          if (blockCounts & 1) {\n            h1 ^= k1;\n          } else {\n            h2 ^= k1;\n          }\n      }\n      this.h1 = h1;\n      this.h2 = h2;\n      return this;\n    },\n    hexdigest: function MurmurHash3_64_hexdigest() {\n      var h1 = this.h1;\n      var h2 = this.h2;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      for (var i = 0, arr = [h1, h2], str = ''; i < arr.length; i++) {\n        var hex = (arr[i] >>> 0).toString(16);\n        while (hex.length < 8) {\n          hex = '0' + hex;\n        }\n        str += hex;\n      }\n      return str;\n    }\n  };\n  return MurmurHash3_64;\n}();\nexports.MurmurHash3_64 = MurmurHash3_64;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/murmurhash3.js\n// module id = c8ch\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\n  var QeTable = [{\n    qe: 0x5601,\n    nmps: 1,\n    nlps: 1,\n    switchFlag: 1\n  }, {\n    qe: 0x3401,\n    nmps: 2,\n    nlps: 6,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 3,\n    nlps: 9,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 4,\n    nlps: 12,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 5,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 38,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 7,\n    nlps: 6,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 8,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 9,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 10,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 11,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 12,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 13,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 29,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 15,\n    nlps: 14,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 16,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x5101,\n    nmps: 17,\n    nlps: 15,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 18,\n    nlps: 16,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 19,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x3401,\n    nmps: 20,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 21,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2801,\n    nmps: 22,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 23,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x2201,\n    nmps: 24,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 25,\n    nlps: 22,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 26,\n    nlps: 23,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 27,\n    nlps: 24,\n    switchFlag: 0\n  }, {\n    qe: 0x1401,\n    nmps: 28,\n    nlps: 25,\n    switchFlag: 0\n  }, {\n    qe: 0x1201,\n    nmps: 29,\n    nlps: 26,\n    switchFlag: 0\n  }, {\n    qe: 0x1101,\n    nmps: 30,\n    nlps: 27,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 31,\n    nlps: 28,\n    switchFlag: 0\n  }, {\n    qe: 0x09C1,\n    nmps: 32,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x08A1,\n    nmps: 33,\n    nlps: 30,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 34,\n    nlps: 31,\n    switchFlag: 0\n  }, {\n    qe: 0x0441,\n    nmps: 35,\n    nlps: 32,\n    switchFlag: 0\n  }, {\n    qe: 0x02A1,\n    nmps: 36,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 37,\n    nlps: 34,\n    switchFlag: 0\n  }, {\n    qe: 0x0141,\n    nmps: 38,\n    nlps: 35,\n    switchFlag: 0\n  }, {\n    qe: 0x0111,\n    nmps: 39,\n    nlps: 36,\n    switchFlag: 0\n  }, {\n    qe: 0x0085,\n    nmps: 40,\n    nlps: 37,\n    switchFlag: 0\n  }, {\n    qe: 0x0049,\n    nmps: 41,\n    nlps: 38,\n    switchFlag: 0\n  }, {\n    qe: 0x0025,\n    nmps: 42,\n    nlps: 39,\n    switchFlag: 0\n  }, {\n    qe: 0x0015,\n    nmps: 43,\n    nlps: 40,\n    switchFlag: 0\n  }, {\n    qe: 0x0009,\n    nmps: 44,\n    nlps: 41,\n    switchFlag: 0\n  }, {\n    qe: 0x0005,\n    nmps: 45,\n    nlps: 42,\n    switchFlag: 0\n  }, {\n    qe: 0x0001,\n    nmps: 45,\n    nlps: 43,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 46,\n    nlps: 46,\n    switchFlag: 0\n  }];\n  function ArithmeticDecoder(data, start, end) {\n    this.data = data;\n    this.bp = start;\n    this.dataEnd = end;\n    this.chigh = data[start];\n    this.clow = 0;\n    this.byteIn();\n    this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n    this.clow = this.clow << 7 & 0xFFFF;\n    this.ct -= 7;\n    this.a = 0x8000;\n  }\n  ArithmeticDecoder.prototype = {\n    byteIn: function ArithmeticDecoder_byteIn() {\n      var data = this.data;\n      var bp = this.bp;\n      if (data[bp] === 0xFF) {\n        var b1 = data[bp + 1];\n        if (b1 > 0x8F) {\n          this.clow += 0xFF00;\n          this.ct = 8;\n        } else {\n          bp++;\n          this.clow += data[bp] << 9;\n          this.ct = 7;\n          this.bp = bp;\n        }\n      } else {\n        bp++;\n        this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n        this.ct = 8;\n        this.bp = bp;\n      }\n      if (this.clow > 0xFFFF) {\n        this.chigh += this.clow >> 16;\n        this.clow &= 0xFFFF;\n      }\n    },\n    readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n      var cx_index = contexts[pos] >> 1,\n          cx_mps = contexts[pos] & 1;\n      var qeTableIcx = QeTable[cx_index];\n      var qeIcx = qeTableIcx.qe;\n      var d;\n      var a = this.a - qeIcx;\n      if (this.chigh < qeIcx) {\n        if (a < qeIcx) {\n          a = qeIcx;\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        } else {\n          a = qeIcx;\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        }\n      } else {\n        this.chigh -= qeIcx;\n        if ((a & 0x8000) !== 0) {\n          this.a = a;\n          return cx_mps;\n        }\n        if (a < qeIcx) {\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        } else {\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        }\n      }\n      do {\n        if (this.ct === 0) {\n          this.byteIn();\n        }\n        a <<= 1;\n        this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n        this.clow = this.clow << 1 & 0xFFFF;\n        this.ct--;\n      } while ((a & 0x8000) === 0);\n      this.a = a;\n      contexts[pos] = cx_index << 1 | cx_mps;\n      return d;\n    }\n  };\n  return ArithmeticDecoder;\n}();\nexports.ArithmeticDecoder = ArithmeticDecoder;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/arithmetic_decoder.js\n// module id = cQ9J\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FontRendererFactory = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cff_parser = require('./cff_parser');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _encodings = require('./encodings');\n\nvar _stream = require('./stream');\n\nvar FontRendererFactory = function FontRendererFactoryClosure() {\n  function getLong(data, offset) {\n    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n  }\n  function getUshort(data, offset) {\n    return data[offset] << 8 | data[offset + 1];\n  }\n  function parseCmap(data, start, end) {\n    var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n    var format = getUshort(data, start + offset);\n    var ranges, p, i;\n    if (format === 4) {\n      getUshort(data, start + offset + 2);\n      var segCount = getUshort(data, start + offset + 6) >> 1;\n      p = start + offset + 14;\n      ranges = [];\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i] = { end: getUshort(data, p) };\n      }\n      p += 2;\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].start = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].idDelta = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        var idOffset = getUshort(data, p);\n        if (idOffset === 0) {\n          continue;\n        }\n        ranges[i].ids = [];\n        for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n          ranges[i].ids[j] = getUshort(data, p + idOffset);\n          idOffset += 2;\n        }\n      }\n      return ranges;\n    } else if (format === 12) {\n      getLong(data, start + offset + 4);\n      var groups = getLong(data, start + offset + 12);\n      p = start + offset + 16;\n      ranges = [];\n      for (i = 0; i < groups; i++) {\n        ranges.push({\n          start: getLong(data, p),\n          end: getLong(data, p + 4),\n          idDelta: getLong(data, p + 8) - getLong(data, p)\n        });\n        p += 12;\n      }\n      return ranges;\n    }\n    throw new _util.FormatError('unsupported cmap: ' + format);\n  }\n  function parseCff(data, start, end, seacAnalysisEnabled) {\n    var properties = {};\n    var parser = new _cff_parser.CFFParser(new _stream.Stream(data, start, end - start), properties, seacAnalysisEnabled);\n    var cff = parser.parse();\n    return {\n      glyphs: cff.charStrings.objects,\n      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects,\n      isCFFCIDFont: cff.isCIDFont,\n      fdSelect: cff.fdSelect,\n      fdArray: cff.fdArray\n    };\n  }\n  function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n    var itemSize, itemDecode;\n    if (isGlyphLocationsLong) {\n      itemSize = 4;\n      itemDecode = function fontItemDecodeLong(data, offset) {\n        return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n      };\n    } else {\n      itemSize = 2;\n      itemDecode = function fontItemDecode(data, offset) {\n        return data[offset] << 9 | data[offset + 1] << 1;\n      };\n    }\n    var glyphs = [];\n    var startOffset = itemDecode(loca, 0);\n    for (var j = itemSize; j < loca.length; j += itemSize) {\n      var endOffset = itemDecode(loca, j);\n      glyphs.push(glyf.subarray(startOffset, endOffset));\n      startOffset = endOffset;\n    }\n    return glyphs;\n  }\n  function lookupCmap(ranges, unicode) {\n    var code = unicode.charCodeAt(0),\n        gid = 0;\n    var l = 0,\n        r = ranges.length - 1;\n    while (l < r) {\n      var c = l + r + 1 >> 1;\n      if (code < ranges[c].start) {\n        r = c - 1;\n      } else {\n        l = c;\n      }\n    }\n    if (ranges[l].start <= code && code <= ranges[l].end) {\n      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n    }\n    return {\n      charCode: code,\n      glyphId: gid\n    };\n  }\n  function compileGlyf(code, cmds, font) {\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function quadraticCurveTo(xa, ya, x, y) {\n      cmds.push({\n        cmd: 'quadraticCurveTo',\n        args: [xa, ya, x, y]\n      });\n    }\n    var i = 0;\n    var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n    var flags;\n    var x = 0,\n        y = 0;\n    i += 10;\n    if (numberOfContours < 0) {\n      do {\n        flags = code[i] << 8 | code[i + 1];\n        var glyphIndex = code[i + 2] << 8 | code[i + 3];\n        i += 4;\n        var arg1, arg2;\n        if (flags & 0x01) {\n          arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n          arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n          i += 4;\n        } else {\n          arg1 = code[i++];\n          arg2 = code[i++];\n        }\n        if (flags & 0x02) {\n          x = arg1;\n          y = arg2;\n        } else {\n          x = 0;\n          y = 0;\n        }\n        var scaleX = 1,\n            scaleY = 1,\n            scale01 = 0,\n            scale10 = 0;\n        if (flags & 0x08) {\n          scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          i += 2;\n        } else if (flags & 0x40) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          i += 4;\n        } else if (flags & 0x80) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n          scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n          i += 8;\n        }\n        var subglyph = font.glyphs[glyphIndex];\n        if (subglyph) {\n          cmds.push({ cmd: 'save' });\n          cmds.push({\n            cmd: 'transform',\n            args: [scaleX, scale01, scale10, scaleY, x, y]\n          });\n          compileGlyf(subglyph, cmds, font);\n          cmds.push({ cmd: 'restore' });\n        }\n      } while (flags & 0x20);\n    } else {\n      var endPtsOfContours = [];\n      var j, jj;\n      for (j = 0; j < numberOfContours; j++) {\n        endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n        i += 2;\n      }\n      var instructionLength = code[i] << 8 | code[i + 1];\n      i += 2 + instructionLength;\n      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n      var points = [];\n      while (points.length < numberOfPoints) {\n        flags = code[i++];\n        var repeat = 1;\n        if (flags & 0x08) {\n          repeat += code[i++];\n        }\n        while (repeat-- > 0) {\n          points.push({ flags: flags });\n        }\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x12) {\n          case 0x00:\n            x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x02:\n            x -= code[i++];\n            break;\n          case 0x12:\n            x += code[i++];\n            break;\n        }\n        points[j].x = x;\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x24) {\n          case 0x00:\n            y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x04:\n            y -= code[i++];\n            break;\n          case 0x24:\n            y += code[i++];\n            break;\n        }\n        points[j].y = y;\n      }\n      var startPoint = 0;\n      for (i = 0; i < numberOfContours; i++) {\n        var endPoint = endPtsOfContours[i];\n        var contour = points.slice(startPoint, endPoint + 1);\n        if (contour[0].flags & 1) {\n          contour.push(contour[0]);\n        } else if (contour[contour.length - 1].flags & 1) {\n          contour.unshift(contour[contour.length - 1]);\n        } else {\n          var p = {\n            flags: 1,\n            x: (contour[0].x + contour[contour.length - 1].x) / 2,\n            y: (contour[0].y + contour[contour.length - 1].y) / 2\n          };\n          contour.unshift(p);\n          contour.push(p);\n        }\n        moveTo(contour[0].x, contour[0].y);\n        for (j = 1, jj = contour.length; j < jj; j++) {\n          if (contour[j].flags & 1) {\n            lineTo(contour[j].x, contour[j].y);\n          } else if (contour[j + 1].flags & 1) {\n            quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n            j++;\n          } else {\n            quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n          }\n        }\n        startPoint = endPoint + 1;\n      }\n    }\n  }\n  function compileCharString(code, cmds, font, glyphId) {\n    var stack = [];\n    var x = 0,\n        y = 0;\n    var stems = 0;\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function bezierCurveTo(x1, y1, x2, y2, x, y) {\n      cmds.push({\n        cmd: 'bezierCurveTo',\n        args: [x1, y1, x2, y2, x, y]\n      });\n    }\n    function parse(code) {\n      var i = 0;\n      while (i < code.length) {\n        var stackClean = false;\n        var v = code[i++];\n        var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n        switch (v) {\n          case 1:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 3:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 4:\n            y += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 5:\n            while (stack.length > 0) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 6:\n            while (stack.length > 0) {\n              x += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 7:\n            while (stack.length > 0) {\n              y += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              x += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 8:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 10:\n            n = stack.pop();\n            subrCode = null;\n            if (font.isCFFCIDFont) {\n              var fdIndex = font.fdSelect.getFDIndex(glyphId);\n              if (fdIndex >= 0 && fdIndex < font.fdArray.length) {\n                var fontDict = font.fdArray[fdIndex],\n                    subrs = void 0;\n                if (fontDict.privateDict && fontDict.privateDict.subrsIndex) {\n                  subrs = fontDict.privateDict.subrsIndex.objects;\n                }\n                if (subrs) {\n                  var numSubrs = subrs.length;\n                  n += numSubrs < 1240 ? 107 : numSubrs < 33900 ? 1131 : 32768;\n                  subrCode = subrs[n];\n                }\n              } else {\n                (0, _util.warn)('Invalid fd index for glyph index.');\n              }\n            } else {\n              subrCode = font.subrs[n + font.subrsBias];\n            }\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 11:\n            return;\n          case 12:\n            v = code[i++];\n            switch (v) {\n              case 34:\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y1 = y + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y, xb, y1, x, y1);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y, x, y);\n                break;\n              case 35:\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                stack.pop();\n                break;\n              case 36:\n                xa = x + stack.shift();\n                y1 = y + stack.shift();\n                xb = xa + stack.shift();\n                y2 = y1 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y2, x, y2);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y3 = y2 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y2, xb, y3, x, y);\n                break;\n              case 37:\n                var x0 = x,\n                    y0 = y;\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb;\n                y = yb;\n                if (Math.abs(x - x0) > Math.abs(y - y0)) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                break;\n              default:\n                throw new _util.FormatError('unknown operator: 12 ' + v);\n            }\n            break;\n          case 14:\n            if (stack.length >= 4) {\n              var achar = stack.pop();\n              var bchar = stack.pop();\n              y = stack.pop();\n              x = stack.pop();\n              cmds.push({ cmd: 'save' });\n              cmds.push({\n                cmd: 'translate',\n                args: [x, y]\n              });\n              var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font, cmap.glyphId);\n              cmds.push({ cmd: 'restore' });\n              cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font, cmap.glyphId);\n            }\n            return;\n          case 18:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 19:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 20:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 21:\n            y += stack.pop();\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 22:\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 23:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 24:\n            while (stack.length > 2) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            x += stack.shift();\n            y += stack.shift();\n            lineTo(x, y);\n            break;\n          case 25:\n            while (stack.length > 6) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            xa = x + stack.shift();\n            ya = y + stack.shift();\n            xb = xa + stack.shift();\n            yb = ya + stack.shift();\n            x = xb + stack.shift();\n            y = yb + stack.shift();\n            bezierCurveTo(xa, ya, xb, yb, x, y);\n            break;\n          case 26:\n            if (stack.length % 2) {\n              x += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb;\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 27:\n            if (stack.length % 2) {\n              y += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb;\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 28:\n            stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n            i += 2;\n            break;\n          case 29:\n            n = stack.pop() + font.gsubrsBias;\n            subrCode = font.gsubrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 30:\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 31:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          default:\n            if (v < 32) {\n              throw new _util.FormatError('unknown operator: ' + v);\n            }\n            if (v < 247) {\n              stack.push(v - 139);\n            } else if (v < 251) {\n              stack.push((v - 247) * 256 + code[i++] + 108);\n            } else if (v < 255) {\n              stack.push(-(v - 251) * 256 - code[i++] - 108);\n            } else {\n              stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n              i += 4;\n            }\n            break;\n        }\n        if (stackClean) {\n          stack.length = 0;\n        }\n      }\n    }\n    parse(code);\n  }\n  var noop = '';\n  function CompiledFont(fontMatrix) {\n    this.compiledGlyphs = Object.create(null);\n    this.compiledCharCodeToGlyphId = Object.create(null);\n    this.fontMatrix = fontMatrix;\n  }\n  CompiledFont.prototype = {\n    getPathJs: function getPathJs(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      var fn = this.compiledGlyphs[cmap.glyphId];\n      if (!fn) {\n        fn = this.compileGlyph(this.glyphs[cmap.glyphId], cmap.glyphId);\n        this.compiledGlyphs[cmap.glyphId] = fn;\n      }\n      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n        this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n      }\n      return fn;\n    },\n    compileGlyph: function compileGlyph(code, glyphId) {\n      if (!code || code.length === 0 || code[0] === 14) {\n        return noop;\n      }\n      var fontMatrix = this.fontMatrix;\n      if (this.isCFFCIDFont) {\n        var fdIndex = this.fdSelect.getFDIndex(glyphId);\n        if (fdIndex >= 0 && fdIndex < this.fdArray.length) {\n          var fontDict = this.fdArray[fdIndex];\n          fontMatrix = fontDict.getByName('FontMatrix') || _util.FONT_IDENTITY_MATRIX;\n        } else {\n          (0, _util.warn)('Invalid fd index for glyph index.');\n        }\n      }\n      var cmds = [];\n      cmds.push({ cmd: 'save' });\n      cmds.push({\n        cmd: 'transform',\n        args: fontMatrix.slice()\n      });\n      cmds.push({\n        cmd: 'scale',\n        args: ['size', '-size']\n      });\n      this.compileGlyphImpl(code, cmds, glyphId);\n      cmds.push({ cmd: 'restore' });\n      return cmds;\n    },\n    compileGlyphImpl: function compileGlyphImpl() {\n      (0, _util.unreachable)('Children classes should implement this.');\n    },\n    hasBuiltPath: function hasBuiltPath(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n    }\n  };\n  function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n    fontMatrix = fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = glyphs;\n    this.cmap = cmap;\n  }\n  _util.Util.inherit(TrueTypeCompiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileGlyf(code, cmds, this);\n    }\n  });\n  function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n    fontMatrix = fontMatrix || [0.001, 0, 0, 0.001, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = cffInfo.glyphs;\n    this.gsubrs = cffInfo.gsubrs || [];\n    this.subrs = cffInfo.subrs || [];\n    this.cmap = cmap;\n    this.glyphNameMap = glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();\n    this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n    this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n    this.isCFFCIDFont = cffInfo.isCFFCIDFont;\n    this.fdSelect = cffInfo.fdSelect;\n    this.fdArray = cffInfo.fdArray;\n  }\n  _util.Util.inherit(Type2Compiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds, glyphId) {\n      compileCharString(code, cmds, this, glyphId);\n    }\n  });\n  return {\n    create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n      var data = new Uint8Array(font.data);\n      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n      var numTables = getUshort(data, 4);\n      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n        var tag = (0, _util.bytesToString)(data.subarray(p, p + 4));\n        var offset = getLong(data, p + 8);\n        var length = getLong(data, p + 12);\n        switch (tag) {\n          case 'cmap':\n            cmap = parseCmap(data, offset, offset + length);\n            break;\n          case 'glyf':\n            glyf = data.subarray(offset, offset + length);\n            break;\n          case 'loca':\n            loca = data.subarray(offset, offset + length);\n            break;\n          case 'head':\n            unitsPerEm = getUshort(data, offset + 18);\n            indexToLocFormat = getUshort(data, offset + 50);\n            break;\n          case 'CFF ':\n            cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n            break;\n        }\n      }\n      if (glyf) {\n        var fontMatrix = !unitsPerEm ? font.fontMatrix : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];\n        return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n      }\n      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n    }\n  };\n}();\nexports.FontRendererFactory = FontRendererFactory;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/font_renderer.js\n// module id = eYnR\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar pdfjsVersion = '2.0.489';\nvar pdfjsBuild = '7d7bc80e';\nvar pdfjsCoreWorker = require('./core/worker.js');\nexports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/pdf.worker.js\n// module id = f4Ci\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptCompiler = exports.PostScriptEvaluator = exports.PDFFunctionFactory = exports.isPDFFunction = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _ps_parser = require('./ps_parser');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar IsEvalSupportedCached = {\n  get value() {\n    return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());\n  }\n};\n\nvar PDFFunctionFactory = function () {\n  function PDFFunctionFactory(_ref) {\n    var xref = _ref.xref,\n        _ref$isEvalSupported = _ref.isEvalSupported,\n        isEvalSupported = _ref$isEvalSupported === undefined ? true : _ref$isEvalSupported;\n\n    _classCallCheck(this, PDFFunctionFactory);\n\n    this.xref = xref;\n    this.isEvalSupported = isEvalSupported !== false;\n  }\n\n  _createClass(PDFFunctionFactory, [{\n    key: 'create',\n    value: function create(fn) {\n      return PDFFunction.parse({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }, {\n    key: 'createFromArray',\n    value: function createFromArray(fnObj) {\n      return PDFFunction.parseArray({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fnObj: fnObj\n      });\n    }\n  }, {\n    key: 'createFromIR',\n    value: function createFromIR(IR) {\n      return PDFFunction.fromIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        IR: IR\n      });\n    }\n  }, {\n    key: 'createIR',\n    value: function createIR(fn) {\n      return PDFFunction.getIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }]);\n\n  return PDFFunctionFactory;\n}();\n\nvar PDFFunction = function PDFFunctionClosure() {\n  var CONSTRUCT_SAMPLED = 0;\n  var CONSTRUCT_INTERPOLATED = 2;\n  var CONSTRUCT_STICHED = 3;\n  var CONSTRUCT_POSTSCRIPT = 4;\n  return {\n    getSampleArray: function getSampleArray(size, outputSize, bps, stream) {\n      var i, ii;\n      var length = 1;\n      for (i = 0, ii = size.length; i < ii; i++) {\n        length *= size[i];\n      }\n      length *= outputSize;\n      var array = new Array(length);\n      var codeSize = 0;\n      var codeBuf = 0;\n      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n      var strBytes = stream.getBytes((length * bps + 7) / 8);\n      var strIdx = 0;\n      for (i = 0; i < length; i++) {\n        while (codeSize < bps) {\n          codeBuf <<= 8;\n          codeBuf |= strBytes[strIdx++];\n          codeSize += 8;\n        }\n        codeSize -= bps;\n        array[i] = (codeBuf >> codeSize) * sampleMul;\n        codeBuf &= (1 << codeSize) - 1;\n      }\n      return array;\n    },\n    getIR: function getIR(_ref2) {\n      var xref = _ref2.xref,\n          isEvalSupported = _ref2.isEvalSupported,\n          fn = _ref2.fn;\n\n      var dict = fn.dict;\n      if (!dict) {\n        dict = fn;\n      }\n      var types = [this.constructSampled, null, this.constructInterpolated, this.constructStiched, this.constructPostScript];\n      var typeNum = dict.get('FunctionType');\n      var typeFn = types[typeNum];\n      if (!typeFn) {\n        throw new _util.FormatError('Unknown type of function');\n      }\n      return typeFn.call(this, {\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn,\n        dict: dict\n      });\n    },\n    fromIR: function fromIR(_ref3) {\n      var xref = _ref3.xref,\n          isEvalSupported = _ref3.isEvalSupported,\n          IR = _ref3.IR;\n\n      var type = IR[0];\n      switch (type) {\n        case CONSTRUCT_SAMPLED:\n          return this.constructSampledFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_INTERPOLATED:\n          return this.constructInterpolatedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_STICHED:\n          return this.constructStichedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        default:\n          return this.constructPostScriptFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n      }\n    },\n    parse: function parse(_ref4) {\n      var xref = _ref4.xref,\n          isEvalSupported = _ref4.isEvalSupported,\n          fn = _ref4.fn;\n\n      var IR = this.getIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn\n      });\n      return this.fromIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        IR: IR\n      });\n    },\n    parseArray: function parseArray(_ref5) {\n      var xref = _ref5.xref,\n          isEvalSupported = _ref5.isEvalSupported,\n          fnObj = _ref5.fnObj;\n\n      if (!Array.isArray(fnObj)) {\n        return this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: fnObj\n        });\n      }\n      var fnArray = [];\n      for (var j = 0, jj = fnObj.length; j < jj; j++) {\n        fnArray.push(this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnObj[j])\n        }));\n      }\n      return function (src, srcOffset, dest, destOffset) {\n        for (var i = 0, ii = fnArray.length; i < ii; i++) {\n          fnArray[i](src, srcOffset, dest, destOffset + i);\n        }\n      };\n    },\n    constructSampled: function constructSampled(_ref6) {\n      var xref = _ref6.xref,\n          isEvalSupported = _ref6.isEvalSupported,\n          fn = _ref6.fn,\n          dict = _ref6.dict;\n\n      function toMultiArray(arr) {\n        var inputLength = arr.length;\n        var out = [];\n        var index = 0;\n        for (var i = 0; i < inputLength; i += 2) {\n          out[index] = [arr[i], arr[i + 1]];\n          ++index;\n        }\n        return out;\n      }\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain || !range) {\n        throw new _util.FormatError('No domain or range');\n      }\n      var inputSize = domain.length / 2;\n      var outputSize = range.length / 2;\n      domain = toMultiArray(domain);\n      range = toMultiArray(range);\n      var size = dict.get('Size');\n      var bps = dict.get('BitsPerSample');\n      var order = dict.get('Order') || 1;\n      if (order !== 1) {\n        (0, _util.info)('No support for cubic spline interpolation: ' + order);\n      }\n      var encode = dict.getArray('Encode');\n      if (!encode) {\n        encode = [];\n        for (var i = 0; i < inputSize; ++i) {\n          encode.push(0);\n          encode.push(size[i] - 1);\n        }\n      }\n      encode = toMultiArray(encode);\n      var decode = dict.getArray('Decode');\n      if (!decode) {\n        decode = range;\n      } else {\n        decode = toMultiArray(decode);\n      }\n      var samples = this.getSampleArray(size, outputSize, bps, fn);\n      return [CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size, outputSize, Math.pow(2, bps) - 1, range];\n    },\n    constructSampledFromIR: function constructSampledFromIR(_ref7) {\n      var xref = _ref7.xref,\n          isEvalSupported = _ref7.isEvalSupported,\n          IR = _ref7.IR;\n\n      function interpolate(x, xmin, xmax, ymin, ymax) {\n        return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n      }\n      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n        var m = IR[1];\n        var domain = IR[2];\n        var encode = IR[3];\n        var decode = IR[4];\n        var samples = IR[5];\n        var size = IR[6];\n        var n = IR[7];\n        var range = IR[9];\n        var cubeVertices = 1 << m;\n        var cubeN = new Float64Array(cubeVertices);\n        var cubeVertex = new Uint32Array(cubeVertices);\n        var i, j;\n        for (j = 0; j < cubeVertices; j++) {\n          cubeN[j] = 1;\n        }\n        var k = n,\n            pos = 1;\n        for (i = 0; i < m; ++i) {\n          var domain_2i = domain[i][0];\n          var domain_2i_1 = domain[i][1];\n          var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n          var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n          var size_i = size[i];\n          e = Math.min(Math.max(e, 0), size_i - 1);\n          var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n          var n0 = e0 + 1 - e;\n          var n1 = e - e0;\n          var offset0 = e0 * k;\n          var offset1 = offset0 + k;\n          for (j = 0; j < cubeVertices; j++) {\n            if (j & pos) {\n              cubeN[j] *= n1;\n              cubeVertex[j] += offset1;\n            } else {\n              cubeN[j] *= n0;\n              cubeVertex[j] += offset0;\n            }\n          }\n          k *= size_i;\n          pos <<= 1;\n        }\n        for (j = 0; j < n; ++j) {\n          var rj = 0;\n          for (i = 0; i < cubeVertices; i++) {\n            rj += samples[cubeVertex[i] + j] * cubeN[i];\n          }\n          rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n          dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n        }\n      };\n    },\n    constructInterpolated: function constructInterpolated(_ref8) {\n      var xref = _ref8.xref,\n          isEvalSupported = _ref8.isEvalSupported,\n          fn = _ref8.fn,\n          dict = _ref8.dict;\n\n      var c0 = dict.getArray('C0') || [0];\n      var c1 = dict.getArray('C1') || [1];\n      var n = dict.get('N');\n      if (!Array.isArray(c0) || !Array.isArray(c1)) {\n        throw new _util.FormatError('Illegal dictionary for interpolated function');\n      }\n      var length = c0.length;\n      var diff = [];\n      for (var i = 0; i < length; ++i) {\n        diff.push(c1[i] - c0[i]);\n      }\n      return [CONSTRUCT_INTERPOLATED, c0, diff, n];\n    },\n    constructInterpolatedFromIR: function constructInterpolatedFromIR(_ref9) {\n      var xref = _ref9.xref,\n          isEvalSupported = _ref9.isEvalSupported,\n          IR = _ref9.IR;\n\n      var c0 = IR[1];\n      var diff = IR[2];\n      var n = IR[3];\n      var length = diff.length;\n      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n        var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n        for (var j = 0; j < length; ++j) {\n          dest[destOffset + j] = c0[j] + x * diff[j];\n        }\n      };\n    },\n    constructStiched: function constructStiched(_ref10) {\n      var xref = _ref10.xref,\n          isEvalSupported = _ref10.isEvalSupported,\n          fn = _ref10.fn,\n          dict = _ref10.dict;\n\n      var domain = dict.getArray('Domain');\n      if (!domain) {\n        throw new _util.FormatError('No domain');\n      }\n      var inputSize = domain.length / 2;\n      if (inputSize !== 1) {\n        throw new _util.FormatError('Bad domain for stiched function');\n      }\n      var fnRefs = dict.get('Functions');\n      var fns = [];\n      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n        fns.push(this.getIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnRefs[i])\n        }));\n      }\n      var bounds = dict.getArray('Bounds');\n      var encode = dict.getArray('Encode');\n      return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\n    },\n    constructStichedFromIR: function constructStichedFromIR(_ref11) {\n      var xref = _ref11.xref,\n          isEvalSupported = _ref11.isEvalSupported,\n          IR = _ref11.IR;\n\n      var domain = IR[1];\n      var bounds = IR[2];\n      var encode = IR[3];\n      var fnsIR = IR[4];\n      var fns = [];\n      var tmpBuf = new Float32Array(1);\n      for (var i = 0, ii = fnsIR.length; i < ii; i++) {\n        fns.push(this.fromIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          IR: fnsIR[i]\n        }));\n      }\n      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n        var clip = function constructStichedFromIRClip(v, min, max) {\n          if (v > max) {\n            v = max;\n          } else if (v < min) {\n            v = min;\n          }\n          return v;\n        };\n        var v = clip(src[srcOffset], domain[0], domain[1]);\n        for (var i = 0, ii = bounds.length; i < ii; ++i) {\n          if (v < bounds[i]) {\n            break;\n          }\n        }\n        var dmin = domain[0];\n        if (i > 0) {\n          dmin = bounds[i - 1];\n        }\n        var dmax = domain[1];\n        if (i < bounds.length) {\n          dmax = bounds[i];\n        }\n        var rmin = encode[2 * i];\n        var rmax = encode[2 * i + 1];\n        tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n        fns[i](tmpBuf, 0, dest, destOffset);\n      };\n    },\n    constructPostScript: function constructPostScript(_ref12) {\n      var xref = _ref12.xref,\n          isEvalSupported = _ref12.isEvalSupported,\n          fn = _ref12.fn,\n          dict = _ref12.dict;\n\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain) {\n        throw new _util.FormatError('No domain.');\n      }\n      if (!range) {\n        throw new _util.FormatError('No range.');\n      }\n      var lexer = new _ps_parser.PostScriptLexer(fn);\n      var parser = new _ps_parser.PostScriptParser(lexer);\n      var code = parser.parse();\n      return [CONSTRUCT_POSTSCRIPT, domain, range, code];\n    },\n    constructPostScriptFromIR: function constructPostScriptFromIR(_ref13) {\n      var xref = _ref13.xref,\n          isEvalSupported = _ref13.isEvalSupported,\n          IR = _ref13.IR;\n\n      var domain = IR[1];\n      var range = IR[2];\n      var code = IR[3];\n      if (isEvalSupported && IsEvalSupportedCached.value) {\n        var compiled = new PostScriptCompiler().compile(code, domain, range);\n        if (compiled) {\n          return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n        }\n      }\n      (0, _util.info)('Unable to compile PS function');\n      var numOutputs = range.length >> 1;\n      var numInputs = domain.length >> 1;\n      var evaluator = new PostScriptEvaluator(code);\n      var cache = Object.create(null);\n      var MAX_CACHE_SIZE = 2048 * 4;\n      var cache_available = MAX_CACHE_SIZE;\n      var tmpBuf = new Float32Array(numInputs);\n      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n        var i, value;\n        var key = '';\n        var input = tmpBuf;\n        for (i = 0; i < numInputs; i++) {\n          value = src[srcOffset + i];\n          input[i] = value;\n          key += value + '_';\n        }\n        var cachedValue = cache[key];\n        if (cachedValue !== undefined) {\n          dest.set(cachedValue, destOffset);\n          return;\n        }\n        var output = new Float32Array(numOutputs);\n        var stack = evaluator.execute(input);\n        var stackIndex = stack.length - numOutputs;\n        for (i = 0; i < numOutputs; i++) {\n          value = stack[stackIndex + i];\n          var bound = range[i * 2];\n          if (value < bound) {\n            value = bound;\n          } else {\n            bound = range[i * 2 + 1];\n            if (value > bound) {\n              value = bound;\n            }\n          }\n          output[i] = value;\n        }\n        if (cache_available > 0) {\n          cache_available--;\n          cache[key] = output;\n        }\n        dest.set(output, destOffset);\n      };\n    }\n  };\n}();\nfunction isPDFFunction(v) {\n  var fnDict;\n  if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) !== 'object') {\n    return false;\n  } else if ((0, _primitives.isDict)(v)) {\n    fnDict = v;\n  } else if ((0, _primitives.isStream)(v)) {\n    fnDict = v.dict;\n  } else {\n    return false;\n  }\n  return fnDict.has('FunctionType');\n}\nvar PostScriptStack = function PostScriptStackClosure() {\n  var MAX_STACK_SIZE = 100;\n  function PostScriptStack(initialStack) {\n    this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n  }\n  PostScriptStack.prototype = {\n    push: function PostScriptStack_push(value) {\n      if (this.stack.length >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      this.stack.push(value);\n    },\n    pop: function PostScriptStack_pop() {\n      if (this.stack.length <= 0) {\n        throw new Error('PostScript function stack underflow.');\n      }\n      return this.stack.pop();\n    },\n    copy: function PostScriptStack_copy(n) {\n      if (this.stack.length + n >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      var stack = this.stack;\n      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n        stack.push(stack[i]);\n      }\n    },\n    index: function PostScriptStack_index(n) {\n      this.push(this.stack[this.stack.length - n - 1]);\n    },\n    roll: function PostScriptStack_roll(n, p) {\n      var stack = this.stack;\n      var l = stack.length - n;\n      var r = stack.length - 1,\n          c = l + (p - Math.floor(p / n) * n),\n          i,\n          j,\n          t;\n      for (i = l, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = l, j = c - 1; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = c, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n    }\n  };\n  return PostScriptStack;\n}();\nvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n  function PostScriptEvaluator(operators) {\n    this.operators = operators;\n  }\n  PostScriptEvaluator.prototype = {\n    execute: function PostScriptEvaluator_execute(initialStack) {\n      var stack = new PostScriptStack(initialStack);\n      var counter = 0;\n      var operators = this.operators;\n      var length = operators.length;\n      var operator, a, b;\n      while (counter < length) {\n        operator = operators[counter++];\n        if (typeof operator === 'number') {\n          stack.push(operator);\n          continue;\n        }\n        switch (operator) {\n          case 'jz':\n            b = stack.pop();\n            a = stack.pop();\n            if (!a) {\n              counter = b;\n            }\n            break;\n          case 'j':\n            a = stack.pop();\n            counter = a;\n            break;\n          case 'abs':\n            a = stack.pop();\n            stack.push(Math.abs(a));\n            break;\n          case 'add':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a + b);\n            break;\n          case 'and':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a && b);\n            } else {\n              stack.push(a & b);\n            }\n            break;\n          case 'atan':\n            a = stack.pop();\n            stack.push(Math.atan(a));\n            break;\n          case 'bitshift':\n            b = stack.pop();\n            a = stack.pop();\n            if (a > 0) {\n              stack.push(a << b);\n            } else {\n              stack.push(a >> b);\n            }\n            break;\n          case 'ceiling':\n            a = stack.pop();\n            stack.push(Math.ceil(a));\n            break;\n          case 'copy':\n            a = stack.pop();\n            stack.copy(a);\n            break;\n          case 'cos':\n            a = stack.pop();\n            stack.push(Math.cos(a));\n            break;\n          case 'cvi':\n            a = stack.pop() | 0;\n            stack.push(a);\n            break;\n          case 'cvr':\n            break;\n          case 'div':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b);\n            break;\n          case 'dup':\n            stack.copy(1);\n            break;\n          case 'eq':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a === b);\n            break;\n          case 'exch':\n            stack.roll(2, 1);\n            break;\n          case 'exp':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(Math.pow(a, b));\n            break;\n          case 'false':\n            stack.push(false);\n            break;\n          case 'floor':\n            a = stack.pop();\n            stack.push(Math.floor(a));\n            break;\n          case 'ge':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a >= b);\n            break;\n          case 'gt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a > b);\n            break;\n          case 'idiv':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b | 0);\n            break;\n          case 'index':\n            a = stack.pop();\n            stack.index(a);\n            break;\n          case 'le':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a <= b);\n            break;\n          case 'ln':\n            a = stack.pop();\n            stack.push(Math.log(a));\n            break;\n          case 'log':\n            a = stack.pop();\n            stack.push(Math.log(a) / Math.LN10);\n            break;\n          case 'lt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a < b);\n            break;\n          case 'mod':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a % b);\n            break;\n          case 'mul':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a * b);\n            break;\n          case 'ne':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a !== b);\n            break;\n          case 'neg':\n            a = stack.pop();\n            stack.push(-a);\n            break;\n          case 'not':\n            a = stack.pop();\n            if ((0, _util.isBool)(a)) {\n              stack.push(!a);\n            } else {\n              stack.push(~a);\n            }\n            break;\n          case 'or':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a || b);\n            } else {\n              stack.push(a | b);\n            }\n            break;\n          case 'pop':\n            stack.pop();\n            break;\n          case 'roll':\n            b = stack.pop();\n            a = stack.pop();\n            stack.roll(a, b);\n            break;\n          case 'round':\n            a = stack.pop();\n            stack.push(Math.round(a));\n            break;\n          case 'sin':\n            a = stack.pop();\n            stack.push(Math.sin(a));\n            break;\n          case 'sqrt':\n            a = stack.pop();\n            stack.push(Math.sqrt(a));\n            break;\n          case 'sub':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a - b);\n            break;\n          case 'true':\n            stack.push(true);\n            break;\n          case 'truncate':\n            a = stack.pop();\n            a = a < 0 ? Math.ceil(a) : Math.floor(a);\n            stack.push(a);\n            break;\n          case 'xor':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a !== b);\n            } else {\n              stack.push(a ^ b);\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown operator ' + operator);\n        }\n      }\n      return stack.stack;\n    }\n  };\n  return PostScriptEvaluator;\n}();\nvar PostScriptCompiler = function PostScriptCompilerClosure() {\n  function AstNode(type) {\n    this.type = type;\n  }\n  AstNode.prototype.visit = function (visitor) {\n    (0, _util.unreachable)('abstract method');\n  };\n  function AstArgument(index, min, max) {\n    AstNode.call(this, 'args');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstArgument.prototype = Object.create(AstNode.prototype);\n  AstArgument.prototype.visit = function (visitor) {\n    visitor.visitArgument(this);\n  };\n  function AstLiteral(number) {\n    AstNode.call(this, 'literal');\n    this.number = number;\n    this.min = number;\n    this.max = number;\n  }\n  AstLiteral.prototype = Object.create(AstNode.prototype);\n  AstLiteral.prototype.visit = function (visitor) {\n    visitor.visitLiteral(this);\n  };\n  function AstBinaryOperation(op, arg1, arg2, min, max) {\n    AstNode.call(this, 'binary');\n    this.op = op;\n    this.arg1 = arg1;\n    this.arg2 = arg2;\n    this.min = min;\n    this.max = max;\n  }\n  AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n  AstBinaryOperation.prototype.visit = function (visitor) {\n    visitor.visitBinaryOperation(this);\n  };\n  function AstMin(arg, max) {\n    AstNode.call(this, 'max');\n    this.arg = arg;\n    this.min = arg.min;\n    this.max = max;\n  }\n  AstMin.prototype = Object.create(AstNode.prototype);\n  AstMin.prototype.visit = function (visitor) {\n    visitor.visitMin(this);\n  };\n  function AstVariable(index, min, max) {\n    AstNode.call(this, 'var');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstVariable.prototype = Object.create(AstNode.prototype);\n  AstVariable.prototype.visit = function (visitor) {\n    visitor.visitVariable(this);\n  };\n  function AstVariableDefinition(variable, arg) {\n    AstNode.call(this, 'definition');\n    this.variable = variable;\n    this.arg = arg;\n  }\n  AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n  AstVariableDefinition.prototype.visit = function (visitor) {\n    visitor.visitVariableDefinition(this);\n  };\n  function ExpressionBuilderVisitor() {\n    this.parts = [];\n  }\n  ExpressionBuilderVisitor.prototype = {\n    visitArgument: function visitArgument(arg) {\n      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n    },\n    visitVariable: function visitVariable(variable) {\n      this.parts.push('v', variable.index);\n    },\n    visitLiteral: function visitLiteral(literal) {\n      this.parts.push(literal.number);\n    },\n    visitBinaryOperation: function visitBinaryOperation(operation) {\n      this.parts.push('(');\n      operation.arg1.visit(this);\n      this.parts.push(' ', operation.op, ' ');\n      operation.arg2.visit(this);\n      this.parts.push(')');\n    },\n    visitVariableDefinition: function visitVariableDefinition(definition) {\n      this.parts.push('var ');\n      definition.variable.visit(this);\n      this.parts.push(' = ');\n      definition.arg.visit(this);\n      this.parts.push(';');\n    },\n    visitMin: function visitMin(max) {\n      this.parts.push('Math.min(');\n      max.arg.visit(this);\n      this.parts.push(', ', max.max, ')');\n    },\n    toString: function toString() {\n      return this.parts.join('');\n    }\n  };\n  function buildAddOperation(num1, num2) {\n    if (num2.type === 'literal' && num2.number === 0) {\n      return num1;\n    }\n    if (num1.type === 'literal' && num1.number === 0) {\n      return num2;\n    }\n    if (num2.type === 'literal' && num1.type === 'literal') {\n      return new AstLiteral(num1.number + num2.number);\n    }\n    return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n  }\n  function buildMulOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return new AstLiteral(0);\n      } else if (num2.number === 1) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number * num2.number);\n      }\n    }\n    if (num1.type === 'literal') {\n      if (num1.number === 0) {\n        return new AstLiteral(0);\n      } else if (num1.number === 1) {\n        return num2;\n      }\n    }\n    var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    return new AstBinaryOperation('*', num1, num2, min, max);\n  }\n  function buildSubOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number - num2.number);\n      }\n    }\n    if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n      return num2.arg2;\n    }\n    return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n  }\n  function buildMinOperation(num1, max) {\n    if (num1.min >= max) {\n      return new AstLiteral(max);\n    } else if (num1.max <= max) {\n      return num1;\n    }\n    return new AstMin(num1, max);\n  }\n  function PostScriptCompiler() {}\n  PostScriptCompiler.prototype = {\n    compile: function PostScriptCompiler_compile(code, domain, range) {\n      var stack = [];\n      var i, ii;\n      var instructions = [];\n      var inputSize = domain.length >> 1,\n          outputSize = range.length >> 1;\n      var lastRegister = 0;\n      var n, j;\n      var num1, num2, ast1, ast2, tmpVar, item;\n      for (i = 0; i < inputSize; i++) {\n        stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n      }\n      for (i = 0, ii = code.length; i < ii; i++) {\n        item = code[i];\n        if (typeof item === 'number') {\n          stack.push(new AstLiteral(item));\n          continue;\n        }\n        switch (item) {\n          case 'add':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildAddOperation(num1, num2));\n            break;\n          case 'cvr':\n            if (stack.length < 1) {\n              return null;\n            }\n            break;\n          case 'mul':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildMulOperation(num1, num2));\n            break;\n          case 'sub':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildSubOperation(num1, num2));\n            break;\n          case 'exch':\n            if (stack.length < 2) {\n              return null;\n            }\n            ast1 = stack.pop();\n            ast2 = stack.pop();\n            stack.push(ast1, ast2);\n            break;\n          case 'pop':\n            if (stack.length < 1) {\n              return null;\n            }\n            stack.pop();\n            break;\n          case 'index':\n            if (stack.length < 1) {\n              return null;\n            }\n            num1 = stack.pop();\n            if (num1.type !== 'literal') {\n              return null;\n            }\n            n = num1.number;\n            if (n < 0 || !Number.isInteger(n) || stack.length < n) {\n              return null;\n            }\n            ast1 = stack[stack.length - n - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - n - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'dup':\n            if (stack.length < 1) {\n              return null;\n            }\n            if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n              num1 = stack.pop();\n              stack.push(buildMinOperation(num1, code[i + 1]));\n              i += 6;\n              break;\n            }\n            ast1 = stack[stack.length - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'roll':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            if (num2.type !== 'literal' || num1.type !== 'literal') {\n              return null;\n            }\n            j = num2.number;\n            n = num1.number;\n            if (n <= 0 || !Number.isInteger(n) || !Number.isInteger(j) || stack.length < n) {\n              return null;\n            }\n            j = (j % n + n) % n;\n            if (j === 0) {\n              break;\n            }\n            Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n            break;\n          default:\n            return null;\n        }\n      }\n      if (stack.length !== outputSize) {\n        return null;\n      }\n      var result = [];\n      instructions.forEach(function (instruction) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        instruction.visit(statementBuilder);\n        result.push(statementBuilder.toString());\n      });\n      stack.forEach(function (expr, i) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        expr.visit(statementBuilder);\n        var min = range[i * 2],\n            max = range[i * 2 + 1];\n        var out = [statementBuilder.toString()];\n        if (min > expr.min) {\n          out.unshift('Math.max(', min, ', ');\n          out.push(')');\n        }\n        if (max < expr.max) {\n          out.unshift('Math.min(', max, ', ');\n          out.push(')');\n        }\n        out.unshift('dest[destOffset + ', i, '] = ');\n        out.push(';');\n        result.push(out.join(''));\n      });\n      return result.join('\\n');\n    }\n  };\n  return PostScriptCompiler;\n}();\nexports.isPDFFunction = isPDFFunction;\nexports.PDFFunctionFactory = PDFFunctionFactory;\nexports.PostScriptEvaluator = PostScriptEvaluator;\nexports.PostScriptCompiler = PostScriptCompiler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/function.js\n// module id = hUkn\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFImage = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _colorspace = require('./colorspace');\n\nvar _stream = require('./stream');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _jpx = require('./jpx');\n\nvar PDFImage = function PDFImageClosure() {\n  function handleImageData(image, nativeDecoder) {\n    if (nativeDecoder && nativeDecoder.canDecode(image)) {\n      return nativeDecoder.decode(image).catch(function (reason) {\n        (0, _util.warn)('Native image decoding failed -- trying to recover: ' + (reason && reason.message));\n        return image;\n      });\n    }\n    return Promise.resolve(image);\n  }\n  function decodeAndClamp(value, addend, coefficient, max) {\n    value = addend + value * coefficient;\n    return value < 0 ? 0 : value > max ? max : value;\n  }\n  function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n    var length = w2 * h2;\n    var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio);\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex];\n      }\n    }\n    return dest;\n  }\n  function PDFImage(_ref) {\n    var xref = _ref.xref,\n        res = _ref.res,\n        image = _ref.image,\n        _ref$isInline = _ref.isInline,\n        isInline = _ref$isInline === undefined ? false : _ref$isInline,\n        _ref$smask = _ref.smask,\n        smask = _ref$smask === undefined ? null : _ref$smask,\n        _ref$mask = _ref.mask,\n        mask = _ref$mask === undefined ? null : _ref$mask,\n        _ref$isMask = _ref.isMask,\n        isMask = _ref$isMask === undefined ? false : _ref$isMask,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.image = image;\n    var dict = image.dict;\n    if (dict.has('Filter')) {\n      var filter = dict.get('Filter').name;\n      if (filter === 'JPXDecode') {\n        var jpxImage = new _jpx.JpxImage();\n        jpxImage.parseImageProperties(image.stream);\n        image.stream.reset();\n        image.bitsPerComponent = jpxImage.bitsPerComponent;\n        image.numComps = jpxImage.componentsCount;\n      } else if (filter === 'JBIG2Decode') {\n        image.bitsPerComponent = 1;\n        image.numComps = 1;\n      }\n    }\n    this.width = dict.get('Width', 'W');\n    this.height = dict.get('Height', 'H');\n    if (this.width < 1 || this.height < 1) {\n      throw new _util.FormatError('Invalid image width: ' + this.width + ' or ' + ('height: ' + this.height));\n    }\n    this.interpolate = dict.get('Interpolate', 'I') || false;\n    this.imageMask = dict.get('ImageMask', 'IM') || false;\n    this.matte = dict.get('Matte') || false;\n    var bitsPerComponent = image.bitsPerComponent;\n    if (!bitsPerComponent) {\n      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n      if (!bitsPerComponent) {\n        if (this.imageMask) {\n          bitsPerComponent = 1;\n        } else {\n          throw new _util.FormatError('Bits per component missing in image: ' + this.imageMask);\n        }\n      }\n    }\n    this.bpc = bitsPerComponent;\n    if (!this.imageMask) {\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      if (!colorSpace) {\n        (0, _util.info)('JPX images (which do not require color spaces)');\n        switch (image.numComps) {\n          case 1:\n            colorSpace = _primitives.Name.get('DeviceGray');\n            break;\n          case 3:\n            colorSpace = _primitives.Name.get('DeviceRGB');\n            break;\n          case 4:\n            colorSpace = _primitives.Name.get('DeviceCMYK');\n            break;\n          default:\n            throw new Error('JPX images with ' + this.numComps + ' ' + 'color components not supported.');\n        }\n      }\n      var resources = isInline ? res : null;\n      this.colorSpace = _colorspace.ColorSpace.parse(colorSpace, xref, resources, pdfFunctionFactory);\n      this.numComps = this.colorSpace.numComps;\n    }\n    this.decode = dict.getArray('Decode', 'D');\n    this.needsDecode = false;\n    if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1))) {\n      this.needsDecode = true;\n      var max = (1 << bitsPerComponent) - 1;\n      this.decodeCoefficients = [];\n      this.decodeAddends = [];\n      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n        var dmin = this.decode[i];\n        var dmax = this.decode[i + 1];\n        this.decodeCoefficients[j] = dmax - dmin;\n        this.decodeAddends[j] = max * dmin;\n      }\n    }\n    if (smask) {\n      this.smask = new PDFImage({\n        xref: xref,\n        res: res,\n        image: smask,\n        isInline: isInline,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    } else if (mask) {\n      if ((0, _primitives.isStream)(mask)) {\n        var maskDict = mask.dict,\n            imageMask = maskDict.get('ImageMask', 'IM');\n        if (!imageMask) {\n          (0, _util.warn)('Ignoring /Mask in image without /ImageMask.');\n        } else {\n          this.mask = new PDFImage({\n            xref: xref,\n            res: res,\n            image: mask,\n            isInline: isInline,\n            isMask: true,\n            pdfFunctionFactory: pdfFunctionFactory\n          });\n        }\n      } else {\n        this.mask = mask;\n      }\n    }\n  }\n  PDFImage.buildImage = function (_ref2) {\n    var handler = _ref2.handler,\n        xref = _ref2.xref,\n        res = _ref2.res,\n        image = _ref2.image,\n        _ref2$isInline = _ref2.isInline,\n        isInline = _ref2$isInline === undefined ? false : _ref2$isInline,\n        _ref2$nativeDecoder = _ref2.nativeDecoder,\n        nativeDecoder = _ref2$nativeDecoder === undefined ? null : _ref2$nativeDecoder,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    var imagePromise = handleImageData(image, nativeDecoder);\n    var smaskPromise;\n    var maskPromise;\n    var smask = image.dict.get('SMask');\n    var mask = image.dict.get('Mask');\n    if (smask) {\n      smaskPromise = handleImageData(smask, nativeDecoder);\n      maskPromise = Promise.resolve(null);\n    } else {\n      smaskPromise = Promise.resolve(null);\n      if (mask) {\n        if ((0, _primitives.isStream)(mask)) {\n          maskPromise = handleImageData(mask, nativeDecoder);\n        } else if (Array.isArray(mask)) {\n          maskPromise = Promise.resolve(mask);\n        } else {\n          (0, _util.warn)('Unsupported mask format.');\n          maskPromise = Promise.resolve(null);\n        }\n      } else {\n        maskPromise = Promise.resolve(null);\n      }\n    }\n    return Promise.all([imagePromise, smaskPromise, maskPromise]).then(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 3),\n          imageData = _ref4[0],\n          smaskData = _ref4[1],\n          maskData = _ref4[2];\n\n      return new PDFImage({\n        xref: xref,\n        res: res,\n        image: imageData,\n        isInline: isInline,\n        smask: smaskData,\n        mask: maskData,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    });\n  };\n  PDFImage.createMask = function (_ref5) {\n    var imgArray = _ref5.imgArray,\n        width = _ref5.width,\n        height = _ref5.height,\n        imageIsFromDecodeStream = _ref5.imageIsFromDecodeStream,\n        inverseDecode = _ref5.inverseDecode;\n\n    var computedLength = (width + 7 >> 3) * height;\n    var actualLength = imgArray.byteLength;\n    var haveFullData = computedLength === actualLength;\n    var data, i;\n    if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n      data = imgArray;\n    } else if (!inverseDecode) {\n      data = new Uint8Array(actualLength);\n      data.set(imgArray);\n    } else {\n      data = new Uint8Array(computedLength);\n      data.set(imgArray);\n      for (i = actualLength; i < computedLength; i++) {\n        data[i] = 0xff;\n      }\n    }\n    if (inverseDecode) {\n      for (i = 0; i < actualLength; i++) {\n        data[i] ^= 0xFF;\n      }\n    }\n    return {\n      data: data,\n      width: width,\n      height: height\n    };\n  };\n  PDFImage.prototype = {\n    get drawWidth() {\n      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n    },\n    get drawHeight() {\n      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n    },\n    decodeBuffer: function decodeBuffer(buffer) {\n      var bpc = this.bpc;\n      var numComps = this.numComps;\n      var decodeAddends = this.decodeAddends;\n      var decodeCoefficients = this.decodeCoefficients;\n      var max = (1 << bpc) - 1;\n      var i, ii;\n      if (bpc === 1) {\n        for (i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = +!buffer[i];\n        }\n        return;\n      }\n      var index = 0;\n      for (i = 0, ii = this.width * this.height; i < ii; i++) {\n        for (var j = 0; j < numComps; j++) {\n          buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n          index++;\n        }\n      }\n    },\n    getComponents: function getComponents(buffer) {\n      var bpc = this.bpc;\n      if (bpc === 8) {\n        return buffer;\n      }\n      var width = this.width;\n      var height = this.height;\n      var numComps = this.numComps;\n      var length = width * height * numComps;\n      var bufferPos = 0;\n      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n      var rowComps = width * numComps;\n      var max = (1 << bpc) - 1;\n      var i = 0,\n          ii,\n          buf;\n      if (bpc === 1) {\n        var mask, loop1End, loop2End;\n        for (var j = 0; j < height; j++) {\n          loop1End = i + (rowComps & ~7);\n          loop2End = i + rowComps;\n          while (i < loop1End) {\n            buf = buffer[bufferPos++];\n            output[i] = buf >> 7 & 1;\n            output[i + 1] = buf >> 6 & 1;\n            output[i + 2] = buf >> 5 & 1;\n            output[i + 3] = buf >> 4 & 1;\n            output[i + 4] = buf >> 3 & 1;\n            output[i + 5] = buf >> 2 & 1;\n            output[i + 6] = buf >> 1 & 1;\n            output[i + 7] = buf & 1;\n            i += 8;\n          }\n          if (i < loop2End) {\n            buf = buffer[bufferPos++];\n            mask = 128;\n            while (i < loop2End) {\n              output[i++] = +!!(buf & mask);\n              mask >>= 1;\n            }\n          }\n        }\n      } else {\n        var bits = 0;\n        buf = 0;\n        for (i = 0, ii = length; i < ii; ++i) {\n          if (i % rowComps === 0) {\n            buf = 0;\n            bits = 0;\n          }\n          while (bits < bpc) {\n            buf = buf << 8 | buffer[bufferPos++];\n            bits += 8;\n          }\n          var remainingBits = bits - bpc;\n          var value = buf >> remainingBits;\n          output[i] = value < 0 ? 0 : value > max ? max : value;\n          buf = buf & (1 << remainingBits) - 1;\n          bits = remainingBits;\n        }\n      }\n      return output;\n    },\n    fillOpacity: function fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n      var smask = this.smask;\n      var mask = this.mask;\n      var alphaBuf, sw, sh, i, ii, j;\n      if (smask) {\n        sw = smask.width;\n        sh = smask.height;\n        alphaBuf = new Uint8Array(sw * sh);\n        smask.fillGrayBuffer(alphaBuf);\n        if (sw !== width || sh !== height) {\n          alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n        }\n      } else if (mask) {\n        if (mask instanceof PDFImage) {\n          sw = mask.width;\n          sh = mask.height;\n          alphaBuf = new Uint8Array(sw * sh);\n          mask.numComps = 1;\n          mask.fillGrayBuffer(alphaBuf);\n          for (i = 0, ii = sw * sh; i < ii; ++i) {\n            alphaBuf[i] = 255 - alphaBuf[i];\n          }\n          if (sw !== width || sh !== height) {\n            alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n          }\n        } else if (Array.isArray(mask)) {\n          alphaBuf = new Uint8Array(width * height);\n          var numComps = this.numComps;\n          for (i = 0, ii = width * height; i < ii; ++i) {\n            var opacity = 0;\n            var imageOffset = i * numComps;\n            for (j = 0; j < numComps; ++j) {\n              var color = image[imageOffset + j];\n              var maskOffset = j * 2;\n              if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n                opacity = 255;\n                break;\n              }\n            }\n            alphaBuf[i] = opacity;\n          }\n        } else {\n          throw new _util.FormatError('Unknown mask format.');\n        }\n      }\n      if (alphaBuf) {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = alphaBuf[i];\n        }\n      } else {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = 255;\n        }\n      }\n    },\n    undoPreblend: function undoPreblend(buffer, width, height) {\n      var matte = this.smask && this.smask.matte;\n      if (!matte) {\n        return;\n      }\n      var matteRgb = this.colorSpace.getRgb(matte, 0);\n      var matteR = matteRgb[0];\n      var matteG = matteRgb[1];\n      var matteB = matteRgb[2];\n      var length = width * height * 4;\n      var r, g, b;\n      for (var i = 0; i < length; i += 4) {\n        var alpha = buffer[i + 3];\n        if (alpha === 0) {\n          buffer[i] = 255;\n          buffer[i + 1] = 255;\n          buffer[i + 2] = 255;\n          continue;\n        }\n        var k = 255 / alpha;\n        r = (buffer[i] - matteR) * k + matteR;\n        g = (buffer[i + 1] - matteG) * k + matteG;\n        b = (buffer[i + 2] - matteB) * k + matteB;\n        buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n        buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n        buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n      }\n    },\n    createImageData: function createImageData() {\n      var forceRGBA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var drawWidth = this.drawWidth;\n      var drawHeight = this.drawHeight;\n      var imgData = {\n        width: drawWidth,\n        height: drawHeight\n      };\n      var numComps = this.numComps;\n      var originalWidth = this.width;\n      var originalHeight = this.height;\n      var bpc = this.bpc;\n      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n      var imgArray;\n      if (!forceRGBA) {\n        var kind;\n        if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n          kind = _util.ImageKind.GRAYSCALE_1BPP;\n        } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n          kind = _util.ImageKind.RGB_24BPP;\n        }\n        if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n          imgData.kind = kind;\n          imgArray = this.getImageBytes(originalHeight * rowBytes);\n          if (this.image instanceof _stream.DecodeStream) {\n            imgData.data = imgArray;\n          } else {\n            var newArray = new Uint8Array(imgArray.length);\n            newArray.set(imgArray);\n            imgData.data = newArray;\n          }\n          if (this.needsDecode) {\n            (0, _util.assert)(kind === _util.ImageKind.GRAYSCALE_1BPP);\n            var buffer = imgData.data;\n            for (var i = 0, ii = buffer.length; i < ii; i++) {\n              buffer[i] ^= 0xff;\n            }\n          }\n          return imgData;\n        }\n        if (this.image instanceof _jpeg_stream.JpegStream && !this.smask && !this.mask) {\n          var imageLength = originalHeight * rowBytes;\n          switch (this.colorSpace.name) {\n            case 'DeviceGray':\n              imageLength *= 3;\n            case 'DeviceRGB':\n            case 'DeviceCMYK':\n              imgData.kind = _util.ImageKind.RGB_24BPP;\n              imgData.data = this.getImageBytes(imageLength, drawWidth, drawHeight, true);\n              return imgData;\n          }\n        }\n      }\n      imgArray = this.getImageBytes(originalHeight * rowBytes);\n      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n      var comps = this.getComponents(imgArray);\n      var alpha01, maybeUndoPreblend;\n      if (!forceRGBA && !this.smask && !this.mask) {\n        imgData.kind = _util.ImageKind.RGB_24BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n        alpha01 = 0;\n        maybeUndoPreblend = false;\n      } else {\n        imgData.kind = _util.ImageKind.RGBA_32BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n        alpha01 = 1;\n        maybeUndoPreblend = true;\n        this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n      if (maybeUndoPreblend) {\n        this.undoPreblend(imgData.data, drawWidth, actualHeight);\n      }\n      return imgData;\n    },\n    fillGrayBuffer: function fillGrayBuffer(buffer) {\n      var numComps = this.numComps;\n      if (numComps !== 1) {\n        throw new _util.FormatError('Reading gray scale from a color image: ' + numComps);\n      }\n      var width = this.width;\n      var height = this.height;\n      var bpc = this.bpc;\n      var rowBytes = width * numComps * bpc + 7 >> 3;\n      var imgArray = this.getImageBytes(height * rowBytes);\n      var comps = this.getComponents(imgArray);\n      var i, length;\n      if (bpc === 1) {\n        length = width * height;\n        if (this.needsDecode) {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = comps[i] - 1 & 255;\n          }\n        } else {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = -comps[i] & 255;\n          }\n        }\n        return;\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      length = width * height;\n      var scale = 255 / ((1 << bpc) - 1);\n      for (i = 0; i < length; ++i) {\n        buffer[i] = scale * comps[i] | 0;\n      }\n    },\n    getImageBytes: function getImageBytes(length, drawWidth, drawHeight) {\n      var forceRGB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      this.image.reset();\n      this.image.drawWidth = drawWidth || this.width;\n      this.image.drawHeight = drawHeight || this.height;\n      this.image.forceRGB = !!forceRGB;\n      return this.image.getBytes(length);\n    }\n  };\n  return PDFImage;\n}();\nexports.PDFImage = PDFImage;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/image.js\n// module id = iFyC\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorSpace = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar ColorSpace = function ColorSpaceClosure() {\n  function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n    var COMPONENTS = 3;\n    alpha01 = alpha01 !== 1 ? 0 : alpha01;\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1 * COMPONENTS;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        newIndex += alpha01;\n      }\n    }\n  }\n  function ColorSpace() {\n    (0, _util.unreachable)('should not call ColorSpace constructor');\n  }\n  ColorSpace.prototype = {\n    getRgb: function ColorSpace_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      this.getRgbItem(src, srcOffset, rgb, 0);\n      return rgb;\n    },\n    getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbItem');\n    },\n    getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbBuffer');\n    },\n    getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getOutputLength');\n    },\n    isPassthrough: function ColorSpace_isPassthrough(bits) {\n      return false;\n    },\n    fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n      var count = originalWidth * originalHeight;\n      var rgbBuf = null;\n      var numComponentColors = 1 << bpc;\n      var needsResizing = originalHeight !== height || originalWidth !== width;\n      var i, ii;\n      if (this.isPassthrough(bpc)) {\n        rgbBuf = comps;\n      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n        var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n        var key;\n        for (i = 0; i < numComponentColors; i++) {\n          allColors[i] = i;\n        }\n        var colorMap = new Uint8Array(numComponentColors * 3);\n        this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n        var destPos, rgbPos;\n        if (!needsResizing) {\n          destPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            dest[destPos++] = colorMap[key];\n            dest[destPos++] = colorMap[key + 1];\n            dest[destPos++] = colorMap[key + 2];\n            destPos += alpha01;\n          }\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          rgbPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            rgbBuf[rgbPos++] = colorMap[key];\n            rgbBuf[rgbPos++] = colorMap[key + 1];\n            rgbBuf[rgbPos++] = colorMap[key + 2];\n          }\n        }\n      } else {\n        if (!needsResizing) {\n          this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n        }\n      }\n      if (rgbBuf) {\n        if (needsResizing) {\n          resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n        } else {\n          rgbPos = 0;\n          destPos = 0;\n          for (i = 0, ii = width * actualHeight; i < ii; i++) {\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            destPos += alpha01;\n          }\n        }\n      }\n    },\n    usesZeroToOneRange: true\n  };\n  ColorSpace.parse = function (cs, xref, res, pdfFunctionFactory) {\n    var IR = ColorSpace.parseToIR(cs, xref, res, pdfFunctionFactory);\n    return ColorSpace.fromIR(IR, pdfFunctionFactory);\n  };\n  ColorSpace.fromIR = function (IR, pdfFunctionFactory) {\n    var name = Array.isArray(IR) ? IR[0] : IR;\n    var whitePoint, blackPoint, gamma;\n    switch (name) {\n      case 'DeviceGrayCS':\n        return this.singletons.gray;\n      case 'DeviceRgbCS':\n        return this.singletons.rgb;\n      case 'DeviceCmykCS':\n        return this.singletons.cmyk;\n      case 'CalGrayCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        return new CalGrayCS(whitePoint, blackPoint, gamma);\n      case 'CalRGBCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        var matrix = IR[4];\n        return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n      case 'PatternCS':\n        var basePatternCS = IR[1];\n        if (basePatternCS) {\n          basePatternCS = ColorSpace.fromIR(basePatternCS, pdfFunctionFactory);\n        }\n        return new PatternCS(basePatternCS);\n      case 'IndexedCS':\n        var baseIndexedCS = IR[1];\n        var hiVal = IR[2];\n        var lookup = IR[3];\n        return new IndexedCS(ColorSpace.fromIR(baseIndexedCS, pdfFunctionFactory), hiVal, lookup);\n      case 'AlternateCS':\n        var numComps = IR[1];\n        var alt = IR[2];\n        var tintFnIR = IR[3];\n        return new AlternateCS(numComps, ColorSpace.fromIR(alt, pdfFunctionFactory), pdfFunctionFactory.createFromIR(tintFnIR));\n      case 'LabCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        var range = IR[3];\n        return new LabCS(whitePoint, blackPoint, range);\n      default:\n        throw new _util.FormatError('Unknown colorspace name: ' + name);\n    }\n  };\n  ColorSpace.parseToIR = function (cs, xref) {\n    var res = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var pdfFunctionFactory = arguments[3];\n\n    cs = xref.fetchIfRef(cs);\n    if ((0, _primitives.isName)(cs)) {\n      switch (cs.name) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'Pattern':\n          return ['PatternCS', null];\n        default:\n          if ((0, _primitives.isDict)(res)) {\n            var colorSpaces = res.get('ColorSpace');\n            if ((0, _primitives.isDict)(colorSpaces)) {\n              var resCS = colorSpaces.get(cs.name);\n              if (resCS) {\n                if ((0, _primitives.isName)(resCS)) {\n                  return ColorSpace.parseToIR(resCS, xref, res, pdfFunctionFactory);\n                }\n                cs = resCS;\n                break;\n              }\n            }\n          }\n          throw new _util.FormatError('unrecognized colorspace ' + cs.name);\n      }\n    }\n    if (Array.isArray(cs)) {\n      var mode = xref.fetchIfRef(cs[0]).name;\n      var numComps, params, alt, whitePoint, blackPoint, gamma;\n      switch (mode) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'CalGray':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.get('Gamma');\n          return ['CalGrayCS', whitePoint, blackPoint, gamma];\n        case 'CalRGB':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.getArray('Gamma');\n          var matrix = params.getArray('Matrix');\n          return ['CalRGBCS', whitePoint, blackPoint, gamma, matrix];\n        case 'ICCBased':\n          var stream = xref.fetchIfRef(cs[1]);\n          var dict = stream.dict;\n          numComps = dict.get('N');\n          alt = dict.get('Alternate');\n          if (alt) {\n            var altIR = ColorSpace.parseToIR(alt, xref, res, pdfFunctionFactory);\n            var altCS = ColorSpace.fromIR(altIR, pdfFunctionFactory);\n            if (altCS.numComps === numComps) {\n              return altIR;\n            }\n            (0, _util.warn)('ICCBased color space: Ignoring incorrect /Alternate entry.');\n          }\n          if (numComps === 1) {\n            return 'DeviceGrayCS';\n          } else if (numComps === 3) {\n            return 'DeviceRgbCS';\n          } else if (numComps === 4) {\n            return 'DeviceCmykCS';\n          }\n          break;\n        case 'Pattern':\n          var basePatternCS = cs[1] || null;\n          if (basePatternCS) {\n            basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res, pdfFunctionFactory);\n          }\n          return ['PatternCS', basePatternCS];\n        case 'Indexed':\n        case 'I':\n          var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res, pdfFunctionFactory);\n          var hiVal = xref.fetchIfRef(cs[2]) + 1;\n          var lookup = xref.fetchIfRef(cs[3]);\n          if ((0, _primitives.isStream)(lookup)) {\n            lookup = lookup.getBytes();\n          }\n          return ['IndexedCS', baseIndexedCS, hiVal, lookup];\n        case 'Separation':\n        case 'DeviceN':\n          var name = xref.fetchIfRef(cs[1]);\n          numComps = Array.isArray(name) ? name.length : 1;\n          alt = ColorSpace.parseToIR(cs[2], xref, res, pdfFunctionFactory);\n          var tintFnIR = pdfFunctionFactory.createIR(xref.fetchIfRef(cs[3]));\n          return ['AlternateCS', numComps, alt, tintFnIR];\n        case 'Lab':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          var range = params.getArray('Range');\n          return ['LabCS', whitePoint, blackPoint, range];\n        default:\n          throw new _util.FormatError('unimplemented color space object \"' + mode + '\"');\n      }\n    }\n    throw new _util.FormatError('unrecognized color space object: \"' + cs + '\"');\n  };\n  ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n    if (!Array.isArray(decode)) {\n      return true;\n    }\n    if (n * 2 !== decode.length) {\n      (0, _util.warn)('The decode map is not the correct length');\n      return true;\n    }\n    for (var i = 0, ii = decode.length; i < ii; i += 2) {\n      if (decode[i] !== 0 || decode[i + 1] !== 1) {\n        return false;\n      }\n    }\n    return true;\n  };\n  ColorSpace.singletons = {\n    get gray() {\n      return (0, _util.shadow)(this, 'gray', new DeviceGrayCS());\n    },\n    get rgb() {\n      return (0, _util.shadow)(this, 'rgb', new DeviceRgbCS());\n    },\n    get cmyk() {\n      return (0, _util.shadow)(this, 'cmyk', new DeviceCmykCS());\n    }\n  };\n  return ColorSpace;\n}();\nvar AlternateCS = function AlternateCSClosure() {\n  function AlternateCS(numComps, base, tintFn) {\n    this.name = 'Alternate';\n    this.numComps = numComps;\n    this.defaultColor = new Float32Array(numComps);\n    for (var i = 0; i < numComps; ++i) {\n      this.defaultColor[i] = 1;\n    }\n    this.base = base;\n    this.tintFn = tintFn;\n    this.tmpBuf = new Float32Array(base.numComps);\n  }\n  AlternateCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var tmpBuf = this.tmpBuf;\n      this.tintFn(src, srcOffset, tmpBuf, 0);\n      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n    },\n    getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var tintFn = this.tintFn;\n      var base = this.base;\n      var scale = 1 / ((1 << bits) - 1);\n      var baseNumComps = base.numComps;\n      var usesZeroToOneRange = base.usesZeroToOneRange;\n      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n      var pos = isPassthrough ? destOffset : 0;\n      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n      var numComps = this.numComps;\n      var scaled = new Float32Array(numComps);\n      var tinted = new Float32Array(baseNumComps);\n      var i, j;\n      for (i = 0; i < count; i++) {\n        for (j = 0; j < numComps; j++) {\n          scaled[j] = src[srcOffset++] * scale;\n        }\n        tintFn(scaled, 0, tinted, 0);\n        if (usesZeroToOneRange) {\n          for (j = 0; j < baseNumComps; j++) {\n            baseBuf[pos++] = tinted[j] * 255;\n          }\n        } else {\n          base.getRgbItem(tinted, 0, baseBuf, pos);\n          pos += baseNumComps;\n        }\n      }\n      if (!isPassthrough) {\n        base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n      }\n    },\n    getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return AlternateCS;\n}();\nvar PatternCS = function PatternCSClosure() {\n  function PatternCS(baseCS) {\n    this.name = 'Pattern';\n    this.base = baseCS;\n  }\n  PatternCS.prototype = {};\n  return PatternCS;\n}();\nvar IndexedCS = function IndexedCSClosure() {\n  function IndexedCS(base, highVal, lookup) {\n    this.name = 'Indexed';\n    this.numComps = 1;\n    this.defaultColor = new Uint8Array(this.numComps);\n    this.base = base;\n    this.highVal = highVal;\n    var baseNumComps = base.numComps;\n    var length = baseNumComps * highVal;\n    if ((0, _primitives.isStream)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      var bytes = lookup.getBytes(length);\n      this.lookup.set(bytes);\n    } else if ((0, _util.isString)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      for (var i = 0; i < length; ++i) {\n        this.lookup[i] = lookup.charCodeAt(i);\n      }\n    } else if (lookup instanceof Uint8Array) {\n      this.lookup = lookup;\n    } else {\n      throw new _util.FormatError('Unrecognized lookup table: ' + lookup);\n    }\n  }\n  IndexedCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var numComps = this.base.numComps;\n      var start = src[srcOffset] * numComps;\n      this.base.getRgbBuffer(this.lookup, start, 1, dest, destOffset, 8, 0);\n    },\n    getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var base = this.base;\n      var numComps = base.numComps;\n      var outputDelta = base.getOutputLength(numComps, alpha01);\n      var lookup = this.lookup;\n      for (var i = 0; i < count; ++i) {\n        var lookupPos = src[srcOffset++] * numComps;\n        base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n        destOffset += outputDelta;\n      }\n    },\n    getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: true\n  };\n  return IndexedCS;\n}();\nvar DeviceGrayCS = function DeviceGrayCSClosure() {\n  function DeviceGrayCS() {\n    this.name = 'DeviceGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var c = src[srcOffset] * 255 | 0;\n      c = c < 0 ? 0 : c > 255 ? 255 : c;\n      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n    },\n    getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        var c = scale * src[j++] | 0;\n        dest[q++] = c;\n        dest[q++] = c;\n        dest[q++] = c;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceGrayCS;\n}();\nvar DeviceRgbCS = function DeviceRgbCSClosure() {\n  function DeviceRgbCS() {\n    this.name = 'DeviceRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceRgbCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var r = src[srcOffset] * 255 | 0;\n      var g = src[srcOffset + 1] * 255 | 0;\n      var b = src[srcOffset + 2] * 255 | 0;\n      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n    },\n    getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      if (bits === 8 && alpha01 === 0) {\n        dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n        return;\n      }\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n      return bits === 8;\n    },\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceRgbCS;\n}();\nvar DeviceCmykCS = function DeviceCmykCSClosure() {\n  function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n    var c = src[srcOffset + 0] * srcScale;\n    var m = src[srcOffset + 1] * srcScale;\n    var y = src[srcOffset + 2] * srcScale;\n    var k = src[srcOffset + 3] * srcScale;\n    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n    dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n    dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n    dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n  }\n  function DeviceCmykCS() {\n    this.name = 'DeviceCMYK';\n    this.numComps = 4;\n    this.defaultColor = new Float32Array(this.numComps);\n    this.defaultColor[3] = 1;\n  }\n  DeviceCmykCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(src, srcOffset, 1, dest, destOffset);\n    },\n    getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; i++) {\n        convertToRgb(src, srcOffset, scale, dest, destOffset);\n        srcOffset += 4;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n      return inputLength / 4 * (3 + alpha01) | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceCmykCS;\n}();\nvar CalGrayCS = function CalGrayCSClosure() {\n  function CalGrayCS(whitePoint, blackPoint, gamma) {\n    this.name = 'CalGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalGray');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    gamma = gamma || 1;\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    this.G = gamma;\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ', falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n      (0, _util.warn)(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n    }\n    if (this.G < 1) {\n      (0, _util.info)('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n      this.G = 1;\n    }\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = src[srcOffset] * scale;\n    var AG = Math.pow(A, cs.G);\n    var L = cs.YW * AG;\n    var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n    dest[destOffset] = val;\n    dest[destOffset + 1] = val;\n    dest[destOffset + 2] = val;\n  }\n  CalGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 1;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalGrayCS;\n}();\nvar CalRGBCS = function CalRGBCSClosure() {\n  var BRADFORD_SCALE_MATRIX = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]);\n  var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -0.0085287, 0.0400428, 0.9684867]);\n  var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.9692660, 1.8760108, 0.0415560, 0.0556434, -0.2040259, 1.0572252]);\n  var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\n  var tempNormalizeMatrix = new Float32Array(3);\n  var tempConvertMatrix1 = new Float32Array(3);\n  var tempConvertMatrix2 = new Float32Array(3);\n  var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n  function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n    this.name = 'CalRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalRGB');\n    }\n    blackPoint = blackPoint || new Float32Array(3);\n    gamma = gamma || new Float32Array([1, 1, 1]);\n    matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n    var XW = whitePoint[0];\n    var YW = whitePoint[1];\n    var ZW = whitePoint[2];\n    this.whitePoint = whitePoint;\n    var XB = blackPoint[0];\n    var YB = blackPoint[1];\n    var ZB = blackPoint[2];\n    this.blackPoint = blackPoint;\n    this.GR = gamma[0];\n    this.GG = gamma[1];\n    this.GB = gamma[2];\n    this.MXA = matrix[0];\n    this.MYA = matrix[1];\n    this.MZA = matrix[2];\n    this.MXB = matrix[3];\n    this.MYB = matrix[4];\n    this.MZB = matrix[5];\n    this.MXC = matrix[6];\n    this.MYC = matrix[7];\n    this.MZC = matrix[8];\n    if (XW < 0 || ZW < 0 || YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (XB < 0 || YB < 0 || ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n      this.blackPoint = new Float32Array(3);\n    }\n    if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n      (0, _util.info)('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n      this.GR = this.GG = this.GB = 1;\n    }\n    if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n      (0, _util.info)('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n      this.MXA = this.MYB = this.MZC = 1;\n      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n    }\n  }\n  function matrixProduct(a, b, result) {\n    result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n    result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n    result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n  }\n  function convertToFlat(sourceWhitePoint, LMS, result) {\n    result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n    result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n    result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n  }\n  function convertToD65(sourceWhitePoint, LMS, result) {\n    var D65X = 0.95047;\n    var D65Y = 1;\n    var D65Z = 1.08883;\n    result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n    result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n    result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n  }\n  function sRGBTransferFunction(color) {\n    if (color <= 0.0031308) {\n      return adjustToRange(0, 1, 12.92 * color);\n    }\n    return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n  }\n  function adjustToRange(min, max, value) {\n    return Math.max(min, Math.min(max, value));\n  }\n  function decodeL(L) {\n    if (L < 0) {\n      return -decodeL(-L);\n    }\n    if (L > 8.0) {\n      return Math.pow((L + 16) / 116, 3);\n    }\n    return L * DECODE_L_CONSTANT;\n  }\n  function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n    if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n      result[0] = XYZ_Flat[0];\n      result[1] = XYZ_Flat[1];\n      result[2] = XYZ_Flat[2];\n      return;\n    }\n    var zeroDecodeL = decodeL(0);\n    var X_DST = zeroDecodeL;\n    var X_SRC = decodeL(sourceBlackPoint[0]);\n    var Y_DST = zeroDecodeL;\n    var Y_SRC = decodeL(sourceBlackPoint[1]);\n    var Z_DST = zeroDecodeL;\n    var Z_SRC = decodeL(sourceBlackPoint[2]);\n    var X_Scale = (1 - X_DST) / (1 - X_SRC);\n    var X_Offset = 1 - X_Scale;\n    var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n    var Y_Offset = 1 - Y_Scale;\n    var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n    var Z_Offset = 1 - Z_Scale;\n    result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n    result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n    result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n  }\n  function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n    if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n      result[0] = XYZ_In[0];\n      result[1] = XYZ_In[1];\n      result[2] = XYZ_In[2];\n      return;\n    }\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_Flat = tempNormalizeMatrix;\n    convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n  }\n  function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_D65 = tempNormalizeMatrix;\n    convertToD65(sourceWhitePoint, LMS, LMS_D65);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = adjustToRange(0, 1, src[srcOffset] * scale);\n    var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n    var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n    var AGR = Math.pow(A, cs.GR);\n    var BGG = Math.pow(B, cs.GG);\n    var CGB = Math.pow(C, cs.GB);\n    var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n    var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n    var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n    var XYZ = tempConvertMatrix1;\n    XYZ[0] = X;\n    XYZ[1] = Y;\n    XYZ[2] = Z;\n    var XYZ_Flat = tempConvertMatrix2;\n    normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n    var XYZ_Black = tempConvertMatrix1;\n    compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n    var XYZ_D65 = tempConvertMatrix2;\n    normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n    var SRGB = tempConvertMatrix1;\n    matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n    var sR = sRGBTransferFunction(SRGB[0]);\n    var sG = sRGBTransferFunction(SRGB[1]);\n    var sB = sRGBTransferFunction(SRGB[2]);\n    dest[destOffset] = Math.round(sR * 255);\n    dest[destOffset + 1] = Math.round(sG * 255);\n    dest[destOffset + 2] = Math.round(sB * 255);\n  }\n  CalRGBCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalRGBCS;\n}();\nvar LabCS = function LabCSClosure() {\n  function LabCS(whitePoint, blackPoint, range) {\n    this.name = 'Lab';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space Lab');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    range = range || [-100, 100, -100, 100];\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.amin = range[0];\n    this.amax = range[1];\n    this.bmin = range[2];\n    this.bmax = range[3];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components, no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint, falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.amin > this.amax || this.bmin > this.bmax) {\n      (0, _util.info)('Invalid Range, falling back to defaults');\n      this.amin = -100;\n      this.amax = 100;\n      this.bmin = -100;\n      this.bmax = 100;\n    }\n  }\n  function fn_g(x) {\n    var result;\n    if (x >= 6 / 29) {\n      result = x * x * x;\n    } else {\n      result = 108 / 841 * (x - 4 / 29);\n    }\n    return result;\n  }\n  function decode(value, high1, low2, high2) {\n    return low2 + value * (high2 - low2) / high1;\n  }\n  function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n    var Ls = src[srcOffset];\n    var as = src[srcOffset + 1];\n    var bs = src[srcOffset + 2];\n    if (maxVal !== false) {\n      Ls = decode(Ls, maxVal, 0, 100);\n      as = decode(as, maxVal, cs.amin, cs.amax);\n      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n    }\n    as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n    bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n    var M = (Ls + 16) / 116;\n    var L = M + as / 500;\n    var N = M - bs / 200;\n    var X = cs.XW * fn_g(L);\n    var Y = cs.YW * fn_g(M);\n    var Z = cs.ZW * fn_g(N);\n    var r, g, b;\n    if (cs.ZW < 1) {\n      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n    } else {\n      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n    }\n    dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n    dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n    dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n  }\n  LabCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, false, dest, destOffset);\n    },\n    getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var maxVal = (1 << bits) - 1;\n      for (var i = 0; i < count; i++) {\n        convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: false\n  };\n  return LabCS;\n}();\nexports.ColorSpace = ColorSpace;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/colorspace.js\n// module id = ii0k\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Image = undefined;\n\nvar _util = require('../shared/util');\n\nvar _arithmetic_decoder = require('./arithmetic_decoder');\n\nvar _ccitt = require('./ccitt');\n\nvar Jbig2Error = function Jbig2ErrorClosure() {\n  function Jbig2Error(msg) {\n    this.message = 'JBIG2 error: ' + msg;\n  }\n  Jbig2Error.prototype = new Error();\n  Jbig2Error.prototype.name = 'Jbig2Error';\n  Jbig2Error.constructor = Jbig2Error;\n  return Jbig2Error;\n}();\nvar Jbig2Image = function Jbig2ImageClosure() {\n  function ContextCache() {}\n  ContextCache.prototype = {\n    getContexts: function getContexts(id) {\n      if (id in this) {\n        return this[id];\n      }\n      return this[id] = new Int8Array(1 << 16);\n    }\n  };\n  function DecodingContext(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n  }\n  DecodingContext.prototype = {\n    get decoder() {\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(this.data, this.start, this.end);\n      return (0, _util.shadow)(this, 'decoder', decoder);\n    },\n    get contextCache() {\n      var cache = new ContextCache();\n      return (0, _util.shadow)(this, 'contextCache', cache);\n    }\n  };\n  function decodeInteger(contextCache, procedure, decoder) {\n    var contexts = contextCache.getContexts(procedure);\n    var prev = 1;\n    function readBits(length) {\n      var v = 0;\n      for (var i = 0; i < length; i++) {\n        var bit = decoder.readBit(contexts, prev);\n        prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n        v = v << 1 | bit;\n      }\n      return v >>> 0;\n    }\n    var sign = readBits(1);\n    var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n    return sign === 0 ? value : value > 0 ? -value : null;\n  }\n  function decodeIAID(contextCache, decoder, codeLength) {\n    var contexts = contextCache.getContexts('IAID');\n    var prev = 1;\n    for (var i = 0; i < codeLength; i++) {\n      var bit = decoder.readBit(contexts, prev);\n      prev = prev << 1 | bit;\n    }\n    if (codeLength < 31) {\n      return prev & (1 << codeLength) - 1;\n    }\n    return prev & 0x7FFFFFFF;\n  }\n  var SegmentTypes = ['SymbolDictionary', null, null, null, 'IntermediateTextRegion', null, 'ImmediateTextRegion', 'ImmediateLosslessTextRegion', null, null, null, null, null, null, null, null, 'PatternDictionary', null, null, null, 'IntermediateHalftoneRegion', null, 'ImmediateHalftoneRegion', 'ImmediateLosslessHalftoneRegion', null, null, null, null, null, null, null, null, null, null, null, null, 'IntermediateGenericRegion', null, 'ImmediateGenericRegion', 'ImmediateLosslessGenericRegion', 'IntermediateGenericRefinementRegion', null, 'ImmediateGenericRefinementRegion', 'ImmediateLosslessGenericRefinementRegion', null, null, null, null, 'PageInformation', 'EndOfPage', 'EndOfStripe', 'EndOfFile', 'Profiles', 'Tables', null, null, null, null, null, null, null, null, 'Extension'];\n  var CodingTemplates = [[{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: 2,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -3,\n    y: -1\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }]];\n  var RefinementTemplates = [{\n    coding: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: -1,\n      y: 1\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }, {\n    coding: [{\n      x: -1,\n      y: -1\n    }, {\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }];\n  var ReusedContexts = [0x9B25, 0x0795, 0x00E5, 0x0195];\n  var RefinementReusedContexts = [0x0020, 0x0008];\n  function decodeBitmapTemplate0(width, height, decodingContext) {\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var contextLabel,\n        i,\n        j,\n        pixel,\n        row,\n        row1,\n        row2,\n        bitmap = [];\n    var OLD_PIXEL_MASK = 0x7BF7;\n    for (i = 0; i < height; i++) {\n      row = bitmap[i] = new Uint8Array(width);\n      row1 = i < 1 ? row : bitmap[i - 1];\n      row2 = i < 2 ? row : bitmap[i - 2];\n      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n      for (j = 0; j < width; j++) {\n        row[j] = pixel = decoder.readBit(contexts, contextLabel);\n        contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n    if (mmr) {\n      var input = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n      return decodeMMRBitmap(input, width, height, false);\n    }\n    if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n      return decodeBitmapTemplate0(width, height, decodingContext);\n    }\n    var useskip = !!skip;\n    var template = CodingTemplates[templateIndex].concat(at);\n    template.sort(function (a, b) {\n      return a.y - b.y || a.x - b.x;\n    });\n    var templateLength = template.length;\n    var templateX = new Int8Array(templateLength);\n    var templateY = new Int8Array(templateLength);\n    var changingTemplateEntries = [];\n    var reuseMask = 0,\n        minX = 0,\n        maxX = 0,\n        minY = 0;\n    var c, k;\n    for (k = 0; k < templateLength; k++) {\n      templateX[k] = template[k].x;\n      templateY[k] = template[k].y;\n      minX = Math.min(minX, template[k].x);\n      maxX = Math.max(maxX, template[k].x);\n      minY = Math.min(minY, template[k].y);\n      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n        reuseMask |= 1 << templateLength - 1 - k;\n      } else {\n        changingTemplateEntries.push(k);\n      }\n    }\n    var changingEntriesLength = changingTemplateEntries.length;\n    var changingTemplateX = new Int8Array(changingEntriesLength);\n    var changingTemplateY = new Int8Array(changingEntriesLength);\n    var changingTemplateBit = new Uint16Array(changingEntriesLength);\n    for (c = 0; c < changingEntriesLength; c++) {\n      k = changingTemplateEntries[c];\n      changingTemplateX[c] = template[k].x;\n      changingTemplateY[c] = template[k].y;\n      changingTemplateBit[c] = 1 << templateLength - 1 - k;\n    }\n    var sbb_left = -minX;\n    var sbb_top = -minY;\n    var sbb_right = width - maxX;\n    var pseudoPixelContext = ReusedContexts[templateIndex];\n    var row = new Uint8Array(width);\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var ltp = 0,\n        j,\n        i0,\n        j0,\n        contextLabel = 0,\n        bit,\n        shift;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          bitmap.push(row);\n          continue;\n        }\n      }\n      row = new Uint8Array(row);\n      bitmap.push(row);\n      for (j = 0; j < width; j++) {\n        if (useskip && skip[i][j]) {\n          row[j] = 0;\n          continue;\n        }\n        if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n          contextLabel = contextLabel << 1 & reuseMask;\n          for (k = 0; k < changingEntriesLength; k++) {\n            i0 = i + changingTemplateY[k];\n            j0 = j + changingTemplateX[k];\n            bit = bitmap[i0][j0];\n            if (bit) {\n              bit = changingTemplateBit[k];\n              contextLabel |= bit;\n            }\n          }\n        } else {\n          contextLabel = 0;\n          shift = templateLength - 1;\n          for (k = 0; k < templateLength; k++, shift--) {\n            j0 = j + templateX[k];\n            if (j0 >= 0 && j0 < width) {\n              i0 = i + templateY[k];\n              if (i0 >= 0) {\n                bit = bitmap[i0][j0];\n                if (bit) {\n                  contextLabel |= bit << shift;\n                }\n              }\n            }\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n    var codingTemplate = RefinementTemplates[templateIndex].coding;\n    if (templateIndex === 0) {\n      codingTemplate = codingTemplate.concat([at[0]]);\n    }\n    var codingTemplateLength = codingTemplate.length;\n    var codingTemplateX = new Int32Array(codingTemplateLength);\n    var codingTemplateY = new Int32Array(codingTemplateLength);\n    var k;\n    for (k = 0; k < codingTemplateLength; k++) {\n      codingTemplateX[k] = codingTemplate[k].x;\n      codingTemplateY[k] = codingTemplate[k].y;\n    }\n    var referenceTemplate = RefinementTemplates[templateIndex].reference;\n    if (templateIndex === 0) {\n      referenceTemplate = referenceTemplate.concat([at[1]]);\n    }\n    var referenceTemplateLength = referenceTemplate.length;\n    var referenceTemplateX = new Int32Array(referenceTemplateLength);\n    var referenceTemplateY = new Int32Array(referenceTemplateLength);\n    for (k = 0; k < referenceTemplateLength; k++) {\n      referenceTemplateX[k] = referenceTemplate[k].x;\n      referenceTemplateY[k] = referenceTemplate[k].y;\n    }\n    var referenceWidth = referenceBitmap[0].length;\n    var referenceHeight = referenceBitmap.length;\n    var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GR');\n    var ltp = 0;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          throw new Jbig2Error('prediction is not supported');\n        }\n      }\n      var row = new Uint8Array(width);\n      bitmap.push(row);\n      for (var j = 0; j < width; j++) {\n        var i0, j0;\n        var contextLabel = 0;\n        for (k = 0; k < codingTemplateLength; k++) {\n          i0 = i + codingTemplateY[k];\n          j0 = j + codingTemplateX[k];\n          if (i0 < 0 || j0 < 0 || j0 >= width) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | bitmap[i0][j0];\n          }\n        }\n        for (k = 0; k < referenceTemplateLength; k++) {\n          i0 = i + referenceTemplateY[k] - offsetY;\n          j0 = j + referenceTemplateX[k] - offsetX;\n          if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('symbol refinement with Huffman is not supported');\n    }\n    var newSymbols = [];\n    var currentHeight = 0;\n    var symbolCodeLength = (0, _util.log2)(symbols.length + numberOfNewSymbols);\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var tableB1 = void 0,\n        symbolWidths = void 0;\n    if (huffman) {\n      tableB1 = getStandardTable(1);\n      symbolWidths = [];\n      symbolCodeLength = Math.max(symbolCodeLength, 1);\n    }\n    while (newSymbols.length < numberOfNewSymbols) {\n      var deltaHeight = huffman ? huffmanTables.tableDeltaHeight.decode(huffmanInput) : decodeInteger(contextCache, 'IADH', decoder);\n      currentHeight += deltaHeight;\n      var currentWidth = 0,\n          totalWidth = 0;\n      var firstSymbol = huffman ? symbolWidths.length : 0;\n      while (true) {\n        var deltaWidth = huffman ? huffmanTables.tableDeltaWidth.decode(huffmanInput) : decodeInteger(contextCache, 'IADW', decoder);\n        if (deltaWidth === null) {\n          break;\n        }\n        currentWidth += deltaWidth;\n        totalWidth += currentWidth;\n        var bitmap;\n        if (refinement) {\n          var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n          if (numberOfInstances > 1) {\n            bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, 0, huffmanInput);\n          } else {\n            var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n            var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n            var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n            var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n            bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n          }\n          newSymbols.push(bitmap);\n        } else if (huffman) {\n          symbolWidths.push(currentWidth);\n        } else {\n          bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n          newSymbols.push(bitmap);\n        }\n      }\n      if (huffman && !refinement) {\n        var bitmapSize = huffmanTables.tableBitmapSize.decode(huffmanInput);\n        huffmanInput.byteAlign();\n        var collectiveBitmap = void 0;\n        if (bitmapSize === 0) {\n          collectiveBitmap = readUncompressedBitmap(huffmanInput, totalWidth, currentHeight);\n        } else {\n          var originalEnd = huffmanInput.end;\n          var bitmapEnd = huffmanInput.position + bitmapSize;\n          huffmanInput.end = bitmapEnd;\n          collectiveBitmap = decodeMMRBitmap(huffmanInput, totalWidth, currentHeight, false);\n          huffmanInput.end = originalEnd;\n          huffmanInput.position = bitmapEnd;\n        }\n        var numberOfSymbolsDecoded = symbolWidths.length;\n        if (firstSymbol === numberOfSymbolsDecoded - 1) {\n          newSymbols.push(collectiveBitmap);\n        } else {\n          var _i = void 0,\n              y = void 0,\n              xMin = 0,\n              xMax = void 0,\n              bitmapWidth = void 0,\n              symbolBitmap = void 0;\n          for (_i = firstSymbol; _i < numberOfSymbolsDecoded; _i++) {\n            bitmapWidth = symbolWidths[_i];\n            xMax = xMin + bitmapWidth;\n            symbolBitmap = [];\n            for (y = 0; y < currentHeight; y++) {\n              symbolBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n            }\n            newSymbols.push(symbolBitmap);\n            xMin = xMax;\n          }\n        }\n      }\n    }\n    var exportedSymbols = [];\n    var flags = [],\n        currentFlag = false;\n    var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n    while (flags.length < totalSymbolsLength) {\n      var runLength = huffman ? tableB1.decode(huffmanInput) : decodeInteger(contextCache, 'IAEX', decoder);\n      while (runLength--) {\n        flags.push(currentFlag);\n      }\n      currentFlag = !currentFlag;\n    }\n    for (var i = 0, ii = symbols.length; i < ii; i++) {\n      if (flags[i]) {\n        exportedSymbols.push(symbols[i]);\n      }\n    }\n    for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n      if (flags[i]) {\n        exportedSymbols.push(newSymbols[j]);\n      }\n    }\n    return exportedSymbols;\n  }\n  function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, logStripSize, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    var bitmap = [];\n    var i, row;\n    for (i = 0; i < height; i++) {\n      row = new Uint8Array(width);\n      if (defaultPixelValue) {\n        for (var j = 0; j < width; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      bitmap.push(row);\n    }\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var stripT = huffman ? -huffmanTables.tableDeltaT.decode(huffmanInput) : -decodeInteger(contextCache, 'IADT', decoder);\n    var firstS = 0;\n    i = 0;\n    while (i < numberOfSymbolInstances) {\n      var deltaT = huffman ? huffmanTables.tableDeltaT.decode(huffmanInput) : decodeInteger(contextCache, 'IADT', decoder);\n      stripT += deltaT;\n      var deltaFirstS = huffman ? huffmanTables.tableFirstS.decode(huffmanInput) : decodeInteger(contextCache, 'IAFS', decoder);\n      firstS += deltaFirstS;\n      var currentS = firstS;\n      do {\n        var currentT = 0;\n        if (stripSize > 1) {\n          currentT = huffman ? huffmanInput.readBits(logStripSize) : decodeInteger(contextCache, 'IAIT', decoder);\n        }\n        var t = stripSize * stripT + currentT;\n        var symbolId = huffman ? huffmanTables.symbolIDTable.decode(huffmanInput) : decodeIAID(contextCache, decoder, symbolCodeLength);\n        var applyRefinement = refinement && (huffman ? huffmanInput.readBit() : decodeInteger(contextCache, 'IARI', decoder));\n        var symbolBitmap = inputSymbols[symbolId];\n        var symbolWidth = symbolBitmap[0].length;\n        var symbolHeight = symbolBitmap.length;\n        if (applyRefinement) {\n          var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n          var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n          var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n          var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n          symbolWidth += rdw;\n          symbolHeight += rdh;\n          symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n        }\n        var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n        var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n        var s2, t2, symbolRow;\n        if (transposed) {\n          for (s2 = 0; s2 < symbolHeight; s2++) {\n            row = bitmap[offsetS + s2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[s2];\n            var maxWidth = Math.min(width - offsetT, symbolWidth);\n            switch (combinationOperator) {\n              case 0:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] |= symbolRow[t2];\n                }\n                break;\n              case 2:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] ^= symbolRow[t2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolHeight - 1;\n        } else {\n          for (t2 = 0; t2 < symbolHeight; t2++) {\n            row = bitmap[offsetT + t2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[t2];\n            switch (combinationOperator) {\n              case 0:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] |= symbolRow[s2];\n                }\n                break;\n              case 2:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] ^= symbolRow[s2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolWidth - 1;\n        }\n        i++;\n        var deltaS = huffman ? huffmanTables.tableDeltaS.decode(huffmanInput) : decodeInteger(contextCache, 'IADS', decoder);\n        if (deltaS === null) {\n          break;\n        }\n        currentS += deltaS + dsOffset;\n      } while (true);\n    }\n    return bitmap;\n  }\n  function decodePatternDictionary(mmr, patternWidth, patternHeight, maxPatternIndex, template, decodingContext) {\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: -patternWidth,\n        y: 0\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n    var collectiveBitmap = decodeBitmap(mmr, collectiveWidth, patternHeight, template, false, null, at, decodingContext);\n    var patterns = [],\n        i = 0,\n        patternBitmap = void 0,\n        xMin = void 0,\n        xMax = void 0,\n        y = void 0;\n    while (i <= maxPatternIndex) {\n      patternBitmap = [];\n      xMin = patternWidth * i;\n      xMax = xMin + patternWidth;\n      for (y = 0; y < patternHeight; y++) {\n        patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n      }\n      patterns.push(patternBitmap);\n      i++;\n    }\n    return patterns;\n  }\n  function decodeHalftoneRegion(mmr, patterns, template, regionWidth, regionHeight, defaultPixelValue, enableSkip, combinationOperator, gridWidth, gridHeight, gridOffsetX, gridOffsetY, gridVectorX, gridVectorY, decodingContext) {\n    var skip = null;\n    if (enableSkip) {\n      throw new Jbig2Error('skip is not supported');\n    }\n    if (combinationOperator !== 0) {\n      throw new Jbig2Error('operator ' + combinationOperator + ' is not supported in halftone region');\n    }\n    var regionBitmap = [];\n    var i = void 0,\n        j = void 0,\n        row = void 0;\n    for (i = 0; i < regionHeight; i++) {\n      row = new Uint8Array(regionWidth);\n      if (defaultPixelValue) {\n        for (j = 0; j < regionWidth; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      regionBitmap.push(row);\n    }\n    var numberOfPatterns = patterns.length;\n    var pattern0 = patterns[0];\n    var patternWidth = pattern0[0].length,\n        patternHeight = pattern0.length;\n    var bitsPerValue = (0, _util.log2)(numberOfPatterns);\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: template <= 1 ? 3 : 2,\n        y: -1\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var grayScaleBitPlanes = [],\n        mmrInput = void 0,\n        bitmap = void 0;\n    if (mmr) {\n      mmrInput = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n    }\n    for (i = bitsPerValue - 1; i >= 0; i--) {\n      if (mmr) {\n        bitmap = decodeMMRBitmap(mmrInput, gridWidth, gridHeight, true);\n      } else {\n        bitmap = decodeBitmap(false, gridWidth, gridHeight, template, false, skip, at, decodingContext);\n      }\n      grayScaleBitPlanes[i] = bitmap;\n    }\n    var mg = void 0,\n        ng = void 0,\n        bit = void 0,\n        patternIndex = void 0,\n        patternBitmap = void 0,\n        x = void 0,\n        y = void 0,\n        patternRow = void 0,\n        regionRow = void 0;\n    for (mg = 0; mg < gridHeight; mg++) {\n      for (ng = 0; ng < gridWidth; ng++) {\n        bit = 0;\n        patternIndex = 0;\n        for (j = bitsPerValue - 1; j >= 0; j--) {\n          bit = grayScaleBitPlanes[j][mg][ng] ^ bit;\n          patternIndex |= bit << j;\n        }\n        patternBitmap = patterns[patternIndex];\n        x = gridOffsetX + mg * gridVectorY + ng * gridVectorX >> 8;\n        y = gridOffsetY + mg * gridVectorX - ng * gridVectorY >> 8;\n        if (x >= 0 && x + patternWidth <= regionWidth && y >= 0 && y + patternHeight <= regionHeight) {\n          for (i = 0; i < patternHeight; i++) {\n            regionRow = regionBitmap[y + i];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionRow[x + j] |= patternRow[j];\n            }\n          }\n        } else {\n          var regionX = void 0,\n              regionY = void 0;\n          for (i = 0; i < patternHeight; i++) {\n            regionY = y + i;\n            if (regionY < 0 || regionY >= regionHeight) {\n              continue;\n            }\n            regionRow = regionBitmap[regionY];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionX = x + j;\n              if (regionX >= 0 && regionX < regionWidth) {\n                regionRow[regionX] |= patternRow[j];\n              }\n            }\n          }\n        }\n      }\n    }\n    return regionBitmap;\n  }\n  function readSegmentHeader(data, start) {\n    var segmentHeader = {};\n    segmentHeader.number = (0, _util.readUint32)(data, start);\n    var flags = data[start + 4];\n    var segmentType = flags & 0x3F;\n    if (!SegmentTypes[segmentType]) {\n      throw new Jbig2Error('invalid segment type: ' + segmentType);\n    }\n    segmentHeader.type = segmentType;\n    segmentHeader.typeName = SegmentTypes[segmentType];\n    segmentHeader.deferredNonRetain = !!(flags & 0x80);\n    var pageAssociationFieldSize = !!(flags & 0x40);\n    var referredFlags = data[start + 5];\n    var referredToCount = referredFlags >> 5 & 7;\n    var retainBits = [referredFlags & 31];\n    var position = start + 6;\n    if (referredFlags === 7) {\n      referredToCount = (0, _util.readUint32)(data, position - 1) & 0x1FFFFFFF;\n      position += 3;\n      var bytes = referredToCount + 7 >> 3;\n      retainBits[0] = data[position++];\n      while (--bytes > 0) {\n        retainBits.push(data[position++]);\n      }\n    } else if (referredFlags === 5 || referredFlags === 6) {\n      throw new Jbig2Error('invalid referred-to flags');\n    }\n    segmentHeader.retainBits = retainBits;\n    var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n    var referredTo = [];\n    var i, ii;\n    for (i = 0; i < referredToCount; i++) {\n      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? (0, _util.readUint16)(data, position) : (0, _util.readUint32)(data, position);\n      referredTo.push(number);\n      position += referredToSegmentNumberSize;\n    }\n    segmentHeader.referredTo = referredTo;\n    if (!pageAssociationFieldSize) {\n      segmentHeader.pageAssociation = data[position++];\n    } else {\n      segmentHeader.pageAssociation = (0, _util.readUint32)(data, position);\n      position += 4;\n    }\n    segmentHeader.length = (0, _util.readUint32)(data, position);\n    position += 4;\n    if (segmentHeader.length === 0xFFFFFFFF) {\n      if (segmentType === 38) {\n        var genericRegionInfo = readRegionSegmentInformation(data, position);\n        var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n        var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n        var searchPatternLength = 6;\n        var searchPattern = new Uint8Array(searchPatternLength);\n        if (!genericRegionMmr) {\n          searchPattern[0] = 0xFF;\n          searchPattern[1] = 0xAC;\n        }\n        searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n        searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n        searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n        searchPattern[5] = genericRegionInfo.height & 0xFF;\n        for (i = position, ii = data.length; i < ii; i++) {\n          var j = 0;\n          while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n            j++;\n          }\n          if (j === searchPatternLength) {\n            segmentHeader.length = i + searchPatternLength;\n            break;\n          }\n        }\n        if (segmentHeader.length === 0xFFFFFFFF) {\n          throw new Jbig2Error('segment end was not found');\n        }\n      } else {\n        throw new Jbig2Error('invalid unknown segment length');\n      }\n    }\n    segmentHeader.headerEnd = position;\n    return segmentHeader;\n  }\n  function readSegments(header, data, start, end) {\n    var segments = [];\n    var position = start;\n    while (position < end) {\n      var segmentHeader = readSegmentHeader(data, position);\n      position = segmentHeader.headerEnd;\n      var segment = {\n        header: segmentHeader,\n        data: data\n      };\n      if (!header.randomAccess) {\n        segment.start = position;\n        position += segmentHeader.length;\n        segment.end = position;\n      }\n      segments.push(segment);\n      if (segmentHeader.type === 51) {\n        break;\n      }\n    }\n    if (header.randomAccess) {\n      for (var i = 0, ii = segments.length; i < ii; i++) {\n        segments[i].start = position;\n        position += segments[i].header.length;\n        segments[i].end = position;\n      }\n    }\n    return segments;\n  }\n  function readRegionSegmentInformation(data, start) {\n    return {\n      width: (0, _util.readUint32)(data, start),\n      height: (0, _util.readUint32)(data, start + 4),\n      x: (0, _util.readUint32)(data, start + 8),\n      y: (0, _util.readUint32)(data, start + 12),\n      combinationOperator: data[start + 16] & 7\n    };\n  }\n  var RegionSegmentInformationFieldLength = 17;\n  function processSegment(segment, visitor) {\n    var header = segment.header;\n    var data = segment.data,\n        position = segment.start,\n        end = segment.end;\n    var args, at, i, atLength;\n    switch (header.type) {\n      case 0:\n        var dictionary = {};\n        var dictionaryFlags = (0, _util.readUint16)(data, position);\n        dictionary.huffman = !!(dictionaryFlags & 1);\n        dictionary.refinement = !!(dictionaryFlags & 2);\n        dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n        dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n        dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n        dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n        dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n        dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n        dictionary.template = dictionaryFlags >> 10 & 3;\n        dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n        position += 2;\n        if (!dictionary.huffman) {\n          atLength = dictionary.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.at = at;\n        }\n        if (dictionary.refinement && !dictionary.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.refinementAt = at;\n        }\n        dictionary.numberOfExportedSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        dictionary.numberOfNewSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [dictionary, header.number, header.referredTo, data, position, end];\n        break;\n      case 6:\n      case 7:\n        var textRegion = {};\n        textRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var textRegionSegmentFlags = (0, _util.readUint16)(data, position);\n        position += 2;\n        textRegion.huffman = !!(textRegionSegmentFlags & 1);\n        textRegion.refinement = !!(textRegionSegmentFlags & 2);\n        textRegion.logStripSize = textRegionSegmentFlags >> 2 & 3;\n        textRegion.stripSize = 1 << textRegion.logStripSize;\n        textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n        textRegion.transposed = !!(textRegionSegmentFlags & 64);\n        textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n        textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n        textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n        textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n        if (textRegion.huffman) {\n          var textRegionHuffmanFlags = (0, _util.readUint16)(data, position);\n          position += 2;\n          textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n          textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n          textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n          textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n          textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n          textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n          textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n          textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 0x4000);\n        }\n        if (textRegion.refinement && !textRegion.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          textRegion.refinementAt = at;\n        }\n        textRegion.numberOfSymbolInstances = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [textRegion, header.referredTo, data, position, end];\n        break;\n      case 16:\n        var patternDictionary = {};\n        var patternDictionaryFlags = data[position++];\n        patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n        patternDictionary.template = patternDictionaryFlags >> 1 & 3;\n        patternDictionary.patternWidth = data[position++];\n        patternDictionary.patternHeight = data[position++];\n        patternDictionary.maxPatternIndex = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [patternDictionary, header.number, data, position, end];\n        break;\n      case 22:\n      case 23:\n        var halftoneRegion = {};\n        halftoneRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var halftoneRegionFlags = data[position++];\n        halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n        halftoneRegion.template = halftoneRegionFlags >> 1 & 3;\n        halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n        halftoneRegion.combinationOperator = halftoneRegionFlags >> 4 & 7;\n        halftoneRegion.defaultPixelValue = halftoneRegionFlags >> 7 & 1;\n        halftoneRegion.gridWidth = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridHeight = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridOffsetX = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridOffsetY = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridVectorX = (0, _util.readUint16)(data, position);\n        position += 2;\n        halftoneRegion.gridVectorY = (0, _util.readUint16)(data, position);\n        position += 2;\n        args = [halftoneRegion, header.referredTo, data, position, end];\n        break;\n      case 38:\n      case 39:\n        var genericRegion = {};\n        genericRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var genericRegionSegmentFlags = data[position++];\n        genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n        genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n        genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n        if (!genericRegion.mmr) {\n          atLength = genericRegion.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          genericRegion.at = at;\n        }\n        args = [genericRegion, data, position, end];\n        break;\n      case 48:\n        var pageInfo = {\n          width: (0, _util.readUint32)(data, position),\n          height: (0, _util.readUint32)(data, position + 4),\n          resolutionX: (0, _util.readUint32)(data, position + 8),\n          resolutionY: (0, _util.readUint32)(data, position + 12)\n        };\n        if (pageInfo.height === 0xFFFFFFFF) {\n          delete pageInfo.height;\n        }\n        var pageSegmentFlags = data[position + 16];\n        (0, _util.readUint16)(data, position + 17);\n        pageInfo.lossless = !!(pageSegmentFlags & 1);\n        pageInfo.refinement = !!(pageSegmentFlags & 2);\n        pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n        pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n        pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n        pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n        args = [pageInfo];\n        break;\n      case 49:\n        break;\n      case 50:\n        break;\n      case 51:\n        break;\n      case 53:\n        args = [header.number, data, position, end];\n        break;\n      case 62:\n        break;\n      default:\n        throw new Jbig2Error('segment type ' + header.typeName + '(' + header.type + ')' + ' is not implemented');\n    }\n    var callbackName = 'on' + header.typeName;\n    if (callbackName in visitor) {\n      visitor[callbackName].apply(visitor, args);\n    }\n  }\n  function processSegments(segments, visitor) {\n    for (var i = 0, ii = segments.length; i < ii; i++) {\n      processSegment(segments[i], visitor);\n    }\n  }\n  function parseJbig2Chunks(chunks) {\n    var visitor = new SimpleSegmentVisitor();\n    for (var i = 0, ii = chunks.length; i < ii; i++) {\n      var chunk = chunks[i];\n      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n      processSegments(segments, visitor);\n    }\n    return visitor.buffer;\n  }\n  function SimpleSegmentVisitor() {}\n  SimpleSegmentVisitor.prototype = {\n    onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n      this.currentPageInfo = info;\n      var rowSize = info.width + 7 >> 3;\n      var buffer = new Uint8ClampedArray(rowSize * info.height);\n      if (info.defaultPixelValue) {\n        for (var i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = 0xFF;\n        }\n      }\n      this.buffer = buffer;\n    },\n    drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n      var pageInfo = this.currentPageInfo;\n      var width = regionInfo.width,\n          height = regionInfo.height;\n      var rowSize = pageInfo.width + 7 >> 3;\n      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n      var buffer = this.buffer;\n      var mask0 = 128 >> (regionInfo.x & 7);\n      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n      var i, j, mask, offset;\n      switch (combinationOperator) {\n        case 0:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] |= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        case 2:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] ^= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        default:\n          throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n      }\n    },\n    onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n      this.onImmediateGenericRegion.apply(this, arguments);\n    },\n    onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      if (dictionary.huffman) {\n        huffmanTables = getSymbolDictionaryHuffmanTables(dictionary, referredSegments, this.customTables);\n        huffmanInput = new Reader(data, start, end);\n      }\n      var symbols = this.symbols;\n      if (!symbols) {\n        this.symbols = symbols = {};\n      }\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext, huffmanInput);\n    },\n    onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n      var regionInfo = region.info;\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      var symbols = this.symbols;\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var symbolCodeLength = (0, _util.log2)(inputSymbols.length);\n      if (region.huffman) {\n        huffmanInput = new Reader(data, start, end);\n        huffmanTables = getTextRegionHuffmanTables(region, referredSegments, this.customTables, inputSymbols.length, huffmanInput);\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext, region.logStripSize, huffmanInput);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n      this.onImmediateTextRegion.apply(this, arguments);\n    },\n    onPatternDictionary: function onPatternDictionary(dictionary, currentSegment, data, start, end) {\n      var patterns = this.patterns;\n      if (!patterns) {\n        this.patterns = patterns = {};\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      patterns[currentSegment] = decodePatternDictionary(dictionary.mmr, dictionary.patternWidth, dictionary.patternHeight, dictionary.maxPatternIndex, dictionary.template, decodingContext);\n    },\n    onImmediateHalftoneRegion: function onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n      var patterns = this.patterns[referredSegments[0]];\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeHalftoneRegion(region.mmr, patterns, region.template, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.enableSkip, region.combinationOperator, region.gridWidth, region.gridHeight, region.gridOffsetX, region.gridOffsetY, region.gridVectorX, region.gridVectorY, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessHalftoneRegion: function onImmediateLosslessHalftoneRegion() {\n      this.onImmediateHalftoneRegion.apply(this, arguments);\n    },\n    onTables: function onTables(currentSegment, data, start, end) {\n      var customTables = this.customTables;\n      if (!customTables) {\n        this.customTables = customTables = {};\n      }\n      customTables[currentSegment] = decodeTablesSegment(data, start, end);\n    }\n  };\n  function HuffmanLine(lineData) {\n    if (lineData.length === 2) {\n      this.isOOB = true;\n      this.rangeLow = 0;\n      this.prefixLength = lineData[0];\n      this.rangeLength = 0;\n      this.prefixCode = lineData[1];\n      this.isLowerRange = false;\n    } else {\n      this.isOOB = false;\n      this.rangeLow = lineData[0];\n      this.prefixLength = lineData[1];\n      this.rangeLength = lineData[2];\n      this.prefixCode = lineData[3];\n      this.isLowerRange = lineData[4] === 'lower';\n    }\n  }\n  function HuffmanTreeNode(line) {\n    this.children = [];\n    if (line) {\n      this.isLeaf = true;\n      this.rangeLength = line.rangeLength;\n      this.rangeLow = line.rangeLow;\n      this.isLowerRange = line.isLowerRange;\n      this.isOOB = line.isOOB;\n    } else {\n      this.isLeaf = false;\n    }\n  }\n  HuffmanTreeNode.prototype = {\n    buildTree: function buildTree(line, shift) {\n      var bit = line.prefixCode >> shift & 1;\n      if (shift <= 0) {\n        this.children[bit] = new HuffmanTreeNode(line);\n      } else {\n        var node = this.children[bit];\n        if (!node) {\n          this.children[bit] = node = new HuffmanTreeNode(null);\n        }\n        node.buildTree(line, shift - 1);\n      }\n    },\n    decodeNode: function decodeNode(reader) {\n      if (this.isLeaf) {\n        if (this.isOOB) {\n          return null;\n        }\n        var htOffset = reader.readBits(this.rangeLength);\n        return this.rangeLow + (this.isLowerRange ? -htOffset : htOffset);\n      }\n      var node = this.children[reader.readBit()];\n      if (!node) {\n        throw new Jbig2Error('invalid Huffman data');\n      }\n      return node.decodeNode(reader);\n    }\n  };\n  function HuffmanTable(lines, prefixCodesDone) {\n    if (!prefixCodesDone) {\n      this.assignPrefixCodes(lines);\n    }\n    this.rootNode = new HuffmanTreeNode(null);\n    var i = void 0,\n        ii = lines.length,\n        line = void 0;\n    for (i = 0; i < ii; i++) {\n      line = lines[i];\n      if (line.prefixLength > 0) {\n        this.rootNode.buildTree(line, line.prefixLength - 1);\n      }\n    }\n  }\n  HuffmanTable.prototype = {\n    decode: function decode(reader) {\n      return this.rootNode.decodeNode(reader);\n    },\n    assignPrefixCodes: function assignPrefixCodes(lines) {\n      var linesLength = lines.length,\n          prefixLengthMax = 0,\n          i = void 0;\n      for (i = 0; i < linesLength; i++) {\n        prefixLengthMax = Math.max(prefixLengthMax, lines[i].prefixLength);\n      }\n      var histogram = new Uint32Array(prefixLengthMax + 1);\n      for (i = 0; i < linesLength; i++) {\n        histogram[lines[i].prefixLength]++;\n      }\n      var currentLength = 1,\n          firstCode = 0,\n          currentCode = void 0,\n          currentTemp = void 0,\n          line = void 0;\n      histogram[0] = 0;\n      while (currentLength <= prefixLengthMax) {\n        firstCode = firstCode + histogram[currentLength - 1] << 1;\n        currentCode = firstCode;\n        currentTemp = 0;\n        while (currentTemp < linesLength) {\n          line = lines[currentTemp];\n          if (line.prefixLength === currentLength) {\n            line.prefixCode = currentCode;\n            currentCode++;\n          }\n          currentTemp++;\n        }\n        currentLength++;\n      }\n    }\n  };\n  function decodeTablesSegment(data, start, end) {\n    var flags = data[start];\n    var lowestValue = (0, _util.readUint32)(data, start + 1) & 0xFFFFFFFF;\n    var highestValue = (0, _util.readUint32)(data, start + 5) & 0xFFFFFFFF;\n    var reader = new Reader(data, start + 9, end);\n    var prefixSizeBits = (flags >> 1 & 7) + 1;\n    var rangeSizeBits = (flags >> 4 & 7) + 1;\n    var lines = [];\n    var prefixLength = void 0,\n        rangeLength = void 0,\n        currentRangeLow = lowestValue;\n    do {\n      prefixLength = reader.readBits(prefixSizeBits);\n      rangeLength = reader.readBits(rangeSizeBits);\n      lines.push(new HuffmanLine([currentRangeLow, prefixLength, rangeLength, 0]));\n      currentRangeLow += 1 << rangeLength;\n    } while (currentRangeLow < highestValue);\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([lowestValue - 1, prefixLength, 32, 0, 'lower']));\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([highestValue, prefixLength, 32, 0]));\n    if (flags & 1) {\n      prefixLength = reader.readBits(prefixSizeBits);\n      lines.push(new HuffmanLine([prefixLength, 0]));\n    }\n    return new HuffmanTable(lines, false);\n  }\n  var standardTablesCache = {};\n  function getStandardTable(number) {\n    var table = standardTablesCache[number];\n    if (table) {\n      return table;\n    }\n    var lines = void 0;\n    switch (number) {\n      case 1:\n        lines = [[0, 1, 4, 0x0], [16, 2, 8, 0x2], [272, 3, 16, 0x6], [65808, 3, 32, 0x7]];\n        break;\n      case 2:\n        lines = [[0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [75, 6, 32, 0x3E], [6, 0x3F]];\n        break;\n      case 3:\n        lines = [[-256, 8, 8, 0xFE], [0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [-257, 8, 32, 0xFF, 'lower'], [75, 7, 32, 0x7E], [6, 0x3E]];\n        break;\n      case 4:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [76, 5, 32, 0x1F]];\n        break;\n      case 5:\n        lines = [[-255, 7, 8, 0x7E], [1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [-256, 7, 32, 0x7F, 'lower'], [76, 6, 32, 0x3E]];\n        break;\n      case 6:\n        lines = [[-2048, 5, 10, 0x1C], [-1024, 4, 9, 0x8], [-512, 4, 8, 0x9], [-256, 4, 7, 0xA], [-128, 5, 6, 0x1D], [-64, 5, 5, 0x1E], [-32, 4, 5, 0xB], [0, 2, 7, 0x0], [128, 3, 7, 0x2], [256, 3, 8, 0x3], [512, 4, 9, 0xC], [1024, 4, 10, 0xD], [-2049, 6, 32, 0x3E, 'lower'], [2048, 6, 32, 0x3F]];\n        break;\n      case 7:\n        lines = [[-1024, 4, 9, 0x8], [-512, 3, 8, 0x0], [-256, 4, 7, 0x9], [-128, 5, 6, 0x1A], [-64, 5, 5, 0x1B], [-32, 4, 5, 0xA], [0, 4, 5, 0xB], [32, 5, 5, 0x1C], [64, 5, 6, 0x1D], [128, 4, 7, 0xC], [256, 3, 8, 0x1], [512, 3, 9, 0x2], [1024, 3, 10, 0x3], [-1025, 5, 32, 0x1E, 'lower'], [2048, 5, 32, 0x1F]];\n        break;\n      case 8:\n        lines = [[-15, 8, 3, 0xFC], [-7, 9, 1, 0x1FC], [-5, 8, 1, 0xFD], [-3, 9, 0, 0x1FD], [-2, 7, 0, 0x7C], [-1, 4, 0, 0xA], [0, 2, 1, 0x0], [2, 5, 0, 0x1A], [3, 6, 0, 0x3A], [4, 3, 4, 0x4], [20, 6, 1, 0x3B], [22, 4, 4, 0xB], [38, 4, 5, 0xC], [70, 5, 6, 0x1B], [134, 5, 7, 0x1C], [262, 6, 7, 0x3C], [390, 7, 8, 0x7D], [646, 6, 10, 0x3D], [-16, 9, 32, 0x1FE, 'lower'], [1670, 9, 32, 0x1FF], [2, 0x1]];\n        break;\n      case 9:\n        lines = [[-31, 8, 4, 0xFC], [-15, 9, 2, 0x1FC], [-11, 8, 2, 0xFD], [-7, 9, 1, 0x1FD], [-5, 7, 1, 0x7C], [-3, 4, 1, 0xA], [-1, 3, 1, 0x2], [1, 3, 1, 0x3], [3, 5, 1, 0x1A], [5, 6, 1, 0x3A], [7, 3, 5, 0x4], [39, 6, 2, 0x3B], [43, 4, 5, 0xB], [75, 4, 6, 0xC], [139, 5, 7, 0x1B], [267, 5, 8, 0x1C], [523, 6, 8, 0x3C], [779, 7, 9, 0x7D], [1291, 6, 11, 0x3D], [-32, 9, 32, 0x1FE, 'lower'], [3339, 9, 32, 0x1FF], [2, 0x0]];\n        break;\n      case 10:\n        lines = [[-21, 7, 4, 0x7A], [-5, 8, 0, 0xFC], [-4, 7, 0, 0x7B], [-3, 5, 0, 0x18], [-2, 2, 2, 0x0], [2, 5, 0, 0x19], [3, 6, 0, 0x36], [4, 7, 0, 0x7C], [5, 8, 0, 0xFD], [6, 2, 6, 0x1], [70, 5, 5, 0x1A], [102, 6, 5, 0x37], [134, 6, 6, 0x38], [198, 6, 7, 0x39], [326, 6, 8, 0x3A], [582, 6, 9, 0x3B], [1094, 6, 10, 0x3C], [2118, 7, 11, 0x7D], [-22, 8, 32, 0xFE, 'lower'], [4166, 8, 32, 0xFF], [2, 0x2]];\n        break;\n      case 11:\n        lines = [[1, 1, 0, 0x0], [2, 2, 1, 0x2], [4, 4, 0, 0xC], [5, 4, 1, 0xD], [7, 5, 1, 0x1C], [9, 5, 2, 0x1D], [13, 6, 2, 0x3C], [17, 7, 2, 0x7A], [21, 7, 3, 0x7B], [29, 7, 4, 0x7C], [45, 7, 5, 0x7D], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 12:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 1, 0x6], [5, 5, 0, 0x1C], [6, 5, 1, 0x1D], [8, 6, 1, 0x3C], [10, 7, 0, 0x7A], [11, 7, 1, 0x7B], [13, 7, 2, 0x7C], [17, 7, 3, 0x7D], [25, 7, 4, 0x7E], [41, 8, 5, 0xFE], [73, 8, 32, 0xFF]];\n        break;\n      case 13:\n        lines = [[1, 1, 0, 0x0], [2, 3, 0, 0x4], [3, 4, 0, 0xC], [4, 5, 0, 0x1C], [5, 4, 1, 0xD], [7, 3, 3, 0x5], [15, 6, 1, 0x3A], [17, 6, 2, 0x3B], [21, 6, 3, 0x3C], [29, 6, 4, 0x3D], [45, 6, 5, 0x3E], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 14:\n        lines = [[-2, 3, 0, 0x4], [-1, 3, 0, 0x5], [0, 1, 0, 0x0], [1, 3, 0, 0x6], [2, 3, 0, 0x7]];\n        break;\n      case 15:\n        lines = [[-24, 7, 4, 0x7C], [-8, 6, 2, 0x3C], [-4, 5, 1, 0x1C], [-2, 4, 0, 0xC], [-1, 3, 0, 0x4], [0, 1, 0, 0x0], [1, 3, 0, 0x5], [2, 4, 0, 0xD], [3, 5, 1, 0x1D], [5, 6, 2, 0x3D], [9, 7, 4, 0x7D], [-25, 7, 32, 0x7E, 'lower'], [25, 7, 32, 0x7F]];\n        break;\n      default:\n        throw new Jbig2Error('standard table B.' + number + ' does not exist');\n    }\n    var length = lines.length,\n        i = void 0;\n    for (i = 0; i < length; i++) {\n      lines[i] = new HuffmanLine(lines[i]);\n    }\n    table = new HuffmanTable(lines, true);\n    standardTablesCache[number] = table;\n    return table;\n  }\n  function Reader(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n    this.position = start;\n    this.shift = -1;\n    this.currentByte = 0;\n  }\n  Reader.prototype = {\n    readBit: function readBit() {\n      if (this.shift < 0) {\n        if (this.position >= this.end) {\n          throw new Jbig2Error('end of data while reading bit');\n        }\n        this.currentByte = this.data[this.position++];\n        this.shift = 7;\n      }\n      var bit = this.currentByte >> this.shift & 1;\n      this.shift--;\n      return bit;\n    },\n    readBits: function readBits(numBits) {\n      var result = 0,\n          i = void 0;\n      for (i = numBits - 1; i >= 0; i--) {\n        result |= this.readBit() << i;\n      }\n      return result;\n    },\n    byteAlign: function byteAlign() {\n      this.shift = -1;\n    },\n    next: function next() {\n      if (this.position >= this.end) {\n        return -1;\n      }\n      return this.data[this.position++];\n    }\n  };\n  function getCustomHuffmanTable(index, referredTo, customTables) {\n    var currentIndex = 0,\n        i = void 0,\n        ii = referredTo.length,\n        table = void 0;\n    for (i = 0; i < ii; i++) {\n      table = customTables[referredTo[i]];\n      if (table) {\n        if (index === currentIndex) {\n          return table;\n        }\n        currentIndex++;\n      }\n    }\n    throw new Jbig2Error('can\\'t find custom Huffman table');\n  }\n  function getTextRegionHuffmanTables(textRegion, referredTo, customTables, numberOfSymbols, reader) {\n    var codes = [],\n        i = void 0,\n        codeLength = void 0;\n    for (i = 0; i <= 34; i++) {\n      codeLength = reader.readBits(4);\n      codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n    }\n    var runCodesTable = new HuffmanTable(codes, false);\n    codes.length = 0;\n    for (i = 0; i < numberOfSymbols;) {\n      codeLength = runCodesTable.decode(reader);\n      if (codeLength >= 32) {\n        var repeatedLength = void 0,\n            numberOfRepeats = void 0,\n            j = void 0;\n        switch (codeLength) {\n          case 32:\n            if (i === 0) {\n              throw new Jbig2Error('no previous value in symbol ID table');\n            }\n            numberOfRepeats = reader.readBits(2) + 3;\n            repeatedLength = codes[i - 1].prefixLength;\n            break;\n          case 33:\n            numberOfRepeats = reader.readBits(3) + 3;\n            repeatedLength = 0;\n            break;\n          case 34:\n            numberOfRepeats = reader.readBits(7) + 11;\n            repeatedLength = 0;\n            break;\n          default:\n            throw new Jbig2Error('invalid code length in symbol ID table');\n        }\n        for (j = 0; j < numberOfRepeats; j++) {\n          codes.push(new HuffmanLine([i, repeatedLength, 0, 0]));\n          i++;\n        }\n      } else {\n        codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n        i++;\n      }\n    }\n    reader.byteAlign();\n    var symbolIDTable = new HuffmanTable(codes, false);\n    var customIndex = 0,\n        tableFirstS = void 0,\n        tableDeltaS = void 0,\n        tableDeltaT = void 0;\n    switch (textRegion.huffmanFS) {\n      case 0:\n      case 1:\n        tableFirstS = getStandardTable(textRegion.huffmanFS + 6);\n        break;\n      case 3:\n        tableFirstS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman FS selector');\n    }\n    switch (textRegion.huffmanDS) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaS = getStandardTable(textRegion.huffmanDS + 8);\n        break;\n      case 3:\n        tableDeltaS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DS selector');\n    }\n    switch (textRegion.huffmanDT) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaT = getStandardTable(textRegion.huffmanDT + 11);\n        break;\n      case 3:\n        tableDeltaT = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DT selector');\n    }\n    if (textRegion.refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    return {\n      symbolIDTable: symbolIDTable,\n      tableFirstS: tableFirstS,\n      tableDeltaS: tableDeltaS,\n      tableDeltaT: tableDeltaT\n    };\n  }\n  function getSymbolDictionaryHuffmanTables(dictionary, referredTo, customTables) {\n    var customIndex = 0,\n        tableDeltaHeight = void 0,\n        tableDeltaWidth = void 0;\n    switch (dictionary.huffmanDHSelector) {\n      case 0:\n      case 1:\n        tableDeltaHeight = getStandardTable(dictionary.huffmanDHSelector + 4);\n        break;\n      case 3:\n        tableDeltaHeight = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DH selector');\n    }\n    switch (dictionary.huffmanDWSelector) {\n      case 0:\n      case 1:\n        tableDeltaWidth = getStandardTable(dictionary.huffmanDWSelector + 2);\n        break;\n      case 3:\n        tableDeltaWidth = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DW selector');\n    }\n    var tableBitmapSize = void 0,\n        tableAggregateInstances = void 0;\n    if (dictionary.bitmapSizeSelector) {\n      tableBitmapSize = getCustomHuffmanTable(customIndex, referredTo, customTables);\n      customIndex++;\n    } else {\n      tableBitmapSize = getStandardTable(1);\n    }\n    if (dictionary.aggregationInstancesSelector) {\n      tableAggregateInstances = getCustomHuffmanTable(customIndex, referredTo, customTables);\n    } else {\n      tableAggregateInstances = getStandardTable(1);\n    }\n    return {\n      tableDeltaHeight: tableDeltaHeight,\n      tableDeltaWidth: tableDeltaWidth,\n      tableBitmapSize: tableBitmapSize,\n      tableAggregateInstances: tableAggregateInstances\n    };\n  }\n  function readUncompressedBitmap(reader, width, height) {\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      for (x = 0; x < width; x++) {\n        row[x] = reader.readBit();\n      }\n      reader.byteAlign();\n    }\n    return bitmap;\n  }\n  function decodeMMRBitmap(input, width, height, endOfBlock) {\n    var params = {\n      K: -1,\n      Columns: width,\n      Rows: height,\n      BlackIs1: true,\n      EndOfBlock: endOfBlock\n    };\n    var decoder = new _ccitt.CCITTFaxDecoder(input, params);\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0,\n        currentByte = void 0,\n        shift = void 0,\n        eof = false;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      shift = -1;\n      for (x = 0; x < width; x++) {\n        if (shift < 0) {\n          currentByte = decoder.readNextChar();\n          if (currentByte === -1) {\n            currentByte = 0;\n            eof = true;\n          }\n          shift = 7;\n        }\n        row[x] = currentByte >> shift & 1;\n        shift--;\n      }\n    }\n    if (endOfBlock && !eof) {\n      var lookForEOFLimit = 5;\n      for (var i = 0; i < lookForEOFLimit; i++) {\n        if (decoder.readNextChar() === -1) {\n          break;\n        }\n      }\n    }\n    return bitmap;\n  }\n  function Jbig2Image() {}\n  Jbig2Image.prototype = {\n    parseChunks: function Jbig2Image_parseChunks(chunks) {\n      return parseJbig2Chunks(chunks);\n    }\n  };\n  return Jbig2Image;\n}();\nexports.Jbig2Image = Jbig2Image;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/jbig2.js\n// module id = k/w5\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Type1Parser = undefined;\n\nvar _util = require('../shared/util');\n\nvar _encodings = require('./encodings');\n\nvar _stream = require('./stream');\n\nvar HINTING_ENABLED = false;\nvar Type1CharString = function Type1CharStringClosure() {\n  var COMMAND_MAP = {\n    'hstem': [1],\n    'vstem': [3],\n    'vmoveto': [4],\n    'rlineto': [5],\n    'hlineto': [6],\n    'vlineto': [7],\n    'rrcurveto': [8],\n    'callsubr': [10],\n    'flex': [12, 35],\n    'drop': [12, 18],\n    'endchar': [14],\n    'rmoveto': [21],\n    'hmoveto': [22],\n    'vhcurveto': [30],\n    'hvcurveto': [31]\n  };\n  function Type1CharString() {\n    this.width = 0;\n    this.lsb = 0;\n    this.flexing = false;\n    this.output = [];\n    this.stack = [];\n  }\n  Type1CharString.prototype = {\n    convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n      var count = encoded.length;\n      var error = false;\n      var wx, sbx, subrNumber;\n      for (var i = 0; i < count; i++) {\n        var value = encoded[i];\n        if (value < 32) {\n          if (value === 12) {\n            value = (value << 8) + encoded[++i];\n          }\n          switch (value) {\n            case 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case 3:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case 4:\n              if (this.flexing) {\n                if (this.stack.length < 1) {\n                  error = true;\n                  break;\n                }\n                var dy = this.stack.pop();\n                this.stack.push(0, dy);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n              break;\n            case 5:\n              error = this.executeCommand(2, COMMAND_MAP.rlineto);\n              break;\n            case 6:\n              error = this.executeCommand(1, COMMAND_MAP.hlineto);\n              break;\n            case 7:\n              error = this.executeCommand(1, COMMAND_MAP.vlineto);\n              break;\n            case 8:\n              error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n              break;\n            case 9:\n              this.stack = [];\n              break;\n            case 10:\n              if (this.stack.length < 1) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              if (!subrs[subrNumber]) {\n                error = true;\n                break;\n              }\n              error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n              break;\n            case 11:\n              return error;\n            case 13:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              wx = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx);\n              error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n              break;\n            case 14:\n              this.output.push(COMMAND_MAP.endchar[0]);\n              break;\n            case 21:\n              if (this.flexing) {\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n              break;\n            case 22:\n              if (this.flexing) {\n                this.stack.push(0);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n              break;\n            case 30:\n              error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n              break;\n            case 31:\n              error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n              break;\n            case (12 << 8) + 0:\n              this.stack = [];\n              break;\n            case (12 << 8) + 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case (12 << 8) + 2:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case (12 << 8) + 6:\n              if (seacAnalysisEnabled) {\n                this.seac = this.stack.splice(-4, 4);\n                error = this.executeCommand(0, COMMAND_MAP.endchar);\n              } else {\n                error = this.executeCommand(4, COMMAND_MAP.endchar);\n              }\n              break;\n            case (12 << 8) + 7:\n              if (this.stack.length < 4) {\n                error = true;\n                break;\n              }\n              this.stack.pop();\n              wx = this.stack.pop();\n              var sby = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx, sby);\n              error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n              break;\n            case (12 << 8) + 12:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              var num2 = this.stack.pop();\n              var num1 = this.stack.pop();\n              this.stack.push(num1 / num2);\n              break;\n            case (12 << 8) + 16:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              var numArgs = this.stack.pop();\n              if (subrNumber === 0 && numArgs === 3) {\n                var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n                this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n                error = this.executeCommand(13, COMMAND_MAP.flex, true);\n                this.flexing = false;\n                this.stack.push(flexArgs[15], flexArgs[16]);\n              } else if (subrNumber === 1 && numArgs === 0) {\n                this.flexing = true;\n              }\n              break;\n            case (12 << 8) + 17:\n              break;\n            case (12 << 8) + 33:\n              this.stack = [];\n              break;\n            default:\n              (0, _util.warn)('Unknown type 1 charstring command of \"' + value + '\"');\n              break;\n          }\n          if (error) {\n            break;\n          }\n          continue;\n        } else if (value <= 246) {\n          value = value - 139;\n        } else if (value <= 250) {\n          value = (value - 247) * 256 + encoded[++i] + 108;\n        } else if (value <= 254) {\n          value = -((value - 251) * 256) - encoded[++i] - 108;\n        } else {\n          value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n        }\n        this.stack.push(value);\n      }\n      return error;\n    },\n    executeCommand: function executeCommand(howManyArgs, command, keepStack) {\n      var stackLength = this.stack.length;\n      if (howManyArgs > stackLength) {\n        return true;\n      }\n      var start = stackLength - howManyArgs;\n      for (var i = start; i < stackLength; i++) {\n        var value = this.stack[i];\n        if (Number.isInteger(value)) {\n          this.output.push(28, value >> 8 & 0xff, value & 0xff);\n        } else {\n          value = 65536 * value | 0;\n          this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n        }\n      }\n      this.output.push.apply(this.output, command);\n      if (keepStack) {\n        this.stack.splice(start, howManyArgs);\n      } else {\n        this.stack.length = 0;\n      }\n      return false;\n    }\n  };\n  return Type1CharString;\n}();\nvar Type1Parser = function Type1ParserClosure() {\n  var EEXEC_ENCRYPT_KEY = 55665;\n  var CHAR_STRS_ENCRYPT_KEY = 4330;\n  function isHexDigit(code) {\n    return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n  }\n  function decrypt(data, key, discardNumber) {\n    if (discardNumber >= data.length) {\n      return new Uint8Array(0);\n    }\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719,\n        i,\n        j;\n    for (i = 0; i < discardNumber; i++) {\n      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    var count = data.length - discardNumber;\n    var decrypted = new Uint8Array(count);\n    for (i = discardNumber, j = 0; j < count; i++, j++) {\n      var value = data[i];\n      decrypted[j] = value ^ r >> 8;\n      r = (value + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    return decrypted;\n  }\n  function decryptAscii(data, key, discardNumber) {\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719;\n    var count = data.length,\n        maybeLength = count >>> 1;\n    var decrypted = new Uint8Array(maybeLength);\n    var i, j;\n    for (i = 0, j = 0; i < count; i++) {\n      var digit1 = data[i];\n      if (!isHexDigit(digit1)) {\n        continue;\n      }\n      i++;\n      var digit2;\n      while (i < count && !isHexDigit(digit2 = data[i])) {\n        i++;\n      }\n      if (i < count) {\n        var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n        decrypted[j++] = value ^ r >> 8;\n        r = (value + r) * c1 + c2 & (1 << 16) - 1;\n      }\n    }\n    return Array.prototype.slice.call(decrypted, discardNumber, j);\n  }\n  function isSpecial(c) {\n    return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n  }\n  function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n    if (encrypted) {\n      var data = stream.getBytes();\n      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n      stream = new _stream.Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n    }\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n    this.stream = stream;\n    this.nextChar();\n  }\n  Type1Parser.prototype = {\n    readNumberArray: function Type1Parser_readNumberArray() {\n      this.getToken();\n      var array = [];\n      while (true) {\n        var token = this.getToken();\n        if (token === null || token === ']' || token === '}') {\n          break;\n        }\n        array.push(parseFloat(token || 0));\n      }\n      return array;\n    },\n    readNumber: function Type1Parser_readNumber() {\n      var token = this.getToken();\n      return parseFloat(token || 0);\n    },\n    readInt: function Type1Parser_readInt() {\n      var token = this.getToken();\n      return parseInt(token || 0, 10) | 0;\n    },\n    readBoolean: function Type1Parser_readBoolean() {\n      var token = this.getToken();\n      return token === 'true' ? 1 : 0;\n    },\n    nextChar: function Type1_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function Type1Parser_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch === -1) {\n          return null;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      if (isSpecial(ch)) {\n        this.nextChar();\n        return String.fromCharCode(ch);\n      }\n      var token = '';\n      do {\n        token += String.fromCharCode(ch);\n        ch = this.nextChar();\n      } while (ch >= 0 && !(0, _util.isSpace)(ch) && !isSpecial(ch));\n      return token;\n    },\n    readCharStrings: function Type1Parser_readCharStrings(bytes, lenIV) {\n      if (lenIV === -1) {\n        return bytes;\n      }\n      return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);\n    },\n    extractFontProgram: function Type1Parser_extractFontProgram() {\n      var stream = this.stream;\n      var subrs = [],\n          charstrings = [];\n      var privateData = Object.create(null);\n      privateData['lenIV'] = 4;\n      var program = {\n        subrs: [],\n        charstrings: [],\n        properties: { 'privateData': privateData }\n      };\n      var token, length, data, lenIV, encoded;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'CharStrings':\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            while (true) {\n              token = this.getToken();\n              if (token === null || token === 'end') {\n                break;\n              }\n              if (token !== '/') {\n                continue;\n              }\n              var glyph = this.getToken();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              charstrings.push({\n                glyph: glyph,\n                encoded: encoded\n              });\n            }\n            break;\n          case 'Subrs':\n            this.readInt();\n            this.getToken();\n            while (this.getToken() === 'dup') {\n              var index = this.readInt();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              subrs[index] = encoded;\n            }\n            break;\n          case 'BlueValues':\n          case 'OtherBlues':\n          case 'FamilyBlues':\n          case 'FamilyOtherBlues':\n            var blueArray = this.readNumberArray();\n            if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n              program.properties.privateData[token] = blueArray;\n            }\n            break;\n          case 'StemSnapH':\n          case 'StemSnapV':\n            program.properties.privateData[token] = this.readNumberArray();\n            break;\n          case 'StdHW':\n          case 'StdVW':\n            program.properties.privateData[token] = this.readNumberArray()[0];\n            break;\n          case 'BlueShift':\n          case 'lenIV':\n          case 'BlueFuzz':\n          case 'BlueScale':\n          case 'LanguageGroup':\n          case 'ExpansionFactor':\n            program.properties.privateData[token] = this.readNumber();\n            break;\n          case 'ForceBold':\n            program.properties.privateData[token] = this.readBoolean();\n            break;\n        }\n      }\n      for (var i = 0; i < charstrings.length; i++) {\n        glyph = charstrings[i].glyph;\n        encoded = charstrings[i].encoded;\n        var charString = new Type1CharString();\n        var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n        var output = charString.output;\n        if (error) {\n          output = [14];\n        }\n        program.charstrings.push({\n          glyphName: glyph,\n          charstring: output,\n          width: charString.width,\n          lsb: charString.lsb,\n          seac: charString.seac\n        });\n      }\n      return program;\n    },\n    extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n      var token;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'FontMatrix':\n            var matrix = this.readNumberArray();\n            properties.fontMatrix = matrix;\n            break;\n          case 'Encoding':\n            var encodingArg = this.getToken();\n            var encoding;\n            if (!/^\\d+$/.test(encodingArg)) {\n              encoding = (0, _encodings.getEncoding)(encodingArg);\n            } else {\n              encoding = [];\n              var size = parseInt(encodingArg, 10) | 0;\n              this.getToken();\n              for (var j = 0; j < size; j++) {\n                token = this.getToken();\n                while (token !== 'dup' && token !== 'def') {\n                  token = this.getToken();\n                  if (token === null) {\n                    return;\n                  }\n                }\n                if (token === 'def') {\n                  break;\n                }\n                var index = this.readInt();\n                this.getToken();\n                var glyph = this.getToken();\n                encoding[index] = glyph;\n                this.getToken();\n              }\n            }\n            properties.builtInEncoding = encoding;\n            break;\n          case 'FontBBox':\n            var fontBBox = this.readNumberArray();\n            properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n            properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n            properties.ascentScaled = true;\n            break;\n        }\n      }\n    }\n  };\n  return Type1Parser;\n}();\nexports.Type1Parser = Type1Parser;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/type1_parser.js\n// module id = kFpv\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CFFCompiler = exports.CFFPrivateDict = exports.CFFTopDict = exports.CFFCharset = exports.CFFIndex = exports.CFFStrings = exports.CFFHeader = exports.CFF = exports.CFFParser = exports.CFFStandardStrings = undefined;\n\nvar _util = require('../shared/util');\n\nvar _charsets = require('./charsets');\n\nvar _encodings = require('./encodings');\n\nvar MAX_SUBR_NESTING = 10;\nvar CFFStandardStrings = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000', '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\nvar CFFParser = function CFFParserClosure() {\n  var CharstringValidationData = [null, {\n    id: 'hstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, null, {\n    id: 'vstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'vmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'rlineto',\n    min: 2,\n    resetStack: true\n  }, {\n    id: 'hlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'vlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'rrcurveto',\n    min: 6,\n    resetStack: true\n  }, null, {\n    id: 'callsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'return',\n    min: 0,\n    undefStack: true\n  }, null, null, {\n    id: 'endchar',\n    min: 0,\n    stackClearing: true\n  }, null, null, null, {\n    id: 'hstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'hintmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'cntrmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'rmoveto',\n    min: 2,\n    stackClearing: true\n  }, {\n    id: 'hmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'vstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'rcurveline',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'rlinecurve',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'vvcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hhcurveto',\n    min: 4,\n    resetStack: true\n  }, null, {\n    id: 'callgsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'vhcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hvcurveto',\n    min: 4,\n    resetStack: true\n  }];\n  var CharstringValidationData12 = [null, null, null, {\n    id: 'and',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'or',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'not',\n    min: 1,\n    stackDelta: 0\n  }, null, null, null, {\n    id: 'abs',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'add',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] + stack[index - 1];\n    }\n  }, {\n    id: 'sub',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] - stack[index - 1];\n    }\n  }, {\n    id: 'div',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] / stack[index - 1];\n    }\n  }, null, {\n    id: 'neg',\n    min: 1,\n    stackDelta: 0,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 1] = -stack[index - 1];\n    }\n  }, {\n    id: 'eq',\n    min: 2,\n    stackDelta: -1\n  }, null, null, {\n    id: 'drop',\n    min: 1,\n    stackDelta: -1\n  }, null, {\n    id: 'put',\n    min: 2,\n    stackDelta: -2\n  }, {\n    id: 'get',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'ifelse',\n    min: 4,\n    stackDelta: -3\n  }, {\n    id: 'random',\n    min: 0,\n    stackDelta: 1\n  }, {\n    id: 'mul',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] * stack[index - 1];\n    }\n  }, null, {\n    id: 'sqrt',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'dup',\n    min: 1,\n    stackDelta: 1\n  }, {\n    id: 'exch',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'index',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'roll',\n    min: 3,\n    stackDelta: -2\n  }, null, null, null, {\n    id: 'hflex',\n    min: 7,\n    resetStack: true\n  }, {\n    id: 'flex',\n    min: 13,\n    resetStack: true\n  }, {\n    id: 'hflex1',\n    min: 9,\n    resetStack: true\n  }, {\n    id: 'flex1',\n    min: 11,\n    resetStack: true\n  }];\n  function CFFParser(file, properties, seacAnalysisEnabled) {\n    this.bytes = file.getBytes();\n    this.properties = properties;\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n  }\n  CFFParser.prototype = {\n    parse: function CFFParser_parse() {\n      var properties = this.properties;\n      var cff = new CFF();\n      this.cff = cff;\n      var header = this.parseHeader();\n      var nameIndex = this.parseIndex(header.endPos);\n      var topDictIndex = this.parseIndex(nameIndex.endPos);\n      var stringIndex = this.parseIndex(topDictIndex.endPos);\n      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n      cff.header = header.obj;\n      cff.names = this.parseNameIndex(nameIndex.obj);\n      cff.strings = this.parseStringIndex(stringIndex.obj);\n      cff.topDict = topDict;\n      cff.globalSubrIndex = globalSubrIndex.obj;\n      this.parsePrivateDict(cff.topDict);\n      cff.isCIDFont = topDict.hasName('ROS');\n      var charStringOffset = topDict.getByName('CharStrings');\n      var charStringIndex = this.parseIndex(charStringOffset).obj;\n      var fontMatrix = topDict.getByName('FontMatrix');\n      if (fontMatrix) {\n        properties.fontMatrix = fontMatrix;\n      }\n      var fontBBox = topDict.getByName('FontBBox');\n      if (fontBBox) {\n        properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n        properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n        properties.ascentScaled = true;\n      }\n      var charset, encoding;\n      if (cff.isCIDFont) {\n        var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n        for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n          var dictRaw = fdArrayIndex.get(i);\n          var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n          this.parsePrivateDict(fontDict);\n          cff.fdArray.push(fontDict);\n        }\n        encoding = null;\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n        cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n      } else {\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n        encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n      }\n      cff.charset = charset;\n      cff.encoding = encoding;\n      var charStringsAndSeacs = this.parseCharStrings({\n        charStrings: charStringIndex,\n        localSubrIndex: topDict.privateDict.subrsIndex,\n        globalSubrIndex: globalSubrIndex.obj,\n        fdSelect: cff.fdSelect,\n        fdArray: cff.fdArray,\n        privateDict: topDict.privateDict\n      });\n      cff.charStrings = charStringsAndSeacs.charStrings;\n      cff.seacs = charStringsAndSeacs.seacs;\n      cff.widths = charStringsAndSeacs.widths;\n      return cff;\n    },\n    parseHeader: function CFFParser_parseHeader() {\n      var bytes = this.bytes;\n      var bytesLength = bytes.length;\n      var offset = 0;\n      while (offset < bytesLength && bytes[offset] !== 1) {\n        ++offset;\n      }\n      if (offset >= bytesLength) {\n        throw new _util.FormatError('Invalid CFF header');\n      }\n      if (offset !== 0) {\n        (0, _util.info)('cff data is shifted');\n        bytes = bytes.subarray(offset);\n        this.bytes = bytes;\n      }\n      var major = bytes[0];\n      var minor = bytes[1];\n      var hdrSize = bytes[2];\n      var offSize = bytes[3];\n      var header = new CFFHeader(major, minor, hdrSize, offSize);\n      return {\n        obj: header,\n        endPos: hdrSize\n      };\n    },\n    parseDict: function CFFParser_parseDict(dict) {\n      var pos = 0;\n      function parseOperand() {\n        var value = dict[pos++];\n        if (value === 30) {\n          return parseFloatOperand();\n        } else if (value === 28) {\n          value = dict[pos++];\n          value = (value << 24 | dict[pos++] << 16) >> 16;\n          return value;\n        } else if (value === 29) {\n          value = dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          return value;\n        } else if (value >= 32 && value <= 246) {\n          return value - 139;\n        } else if (value >= 247 && value <= 250) {\n          return (value - 247) * 256 + dict[pos++] + 108;\n        } else if (value >= 251 && value <= 254) {\n          return -((value - 251) * 256) - dict[pos++] - 108;\n        }\n        (0, _util.warn)('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n        return NaN;\n      }\n      function parseFloatOperand() {\n        var str = '';\n        var eof = 15;\n        var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n        var length = dict.length;\n        while (pos < length) {\n          var b = dict[pos++];\n          var b1 = b >> 4;\n          var b2 = b & 15;\n          if (b1 === eof) {\n            break;\n          }\n          str += lookup[b1];\n          if (b2 === eof) {\n            break;\n          }\n          str += lookup[b2];\n        }\n        return parseFloat(str);\n      }\n      var operands = [];\n      var entries = [];\n      pos = 0;\n      var end = dict.length;\n      while (pos < end) {\n        var b = dict[pos];\n        if (b <= 21) {\n          if (b === 12) {\n            b = b << 8 | dict[++pos];\n          }\n          entries.push([b, operands]);\n          operands = [];\n          ++pos;\n        } else {\n          operands.push(parseOperand());\n        }\n      }\n      return entries;\n    },\n    parseIndex: function CFFParser_parseIndex(pos) {\n      var cffIndex = new CFFIndex();\n      var bytes = this.bytes;\n      var count = bytes[pos++] << 8 | bytes[pos++];\n      var offsets = [];\n      var end = pos;\n      var i, ii;\n      if (count !== 0) {\n        var offsetSize = bytes[pos++];\n        var startPos = pos + (count + 1) * offsetSize - 1;\n        for (i = 0, ii = count + 1; i < ii; ++i) {\n          var offset = 0;\n          for (var j = 0; j < offsetSize; ++j) {\n            offset <<= 8;\n            offset += bytes[pos++];\n          }\n          offsets.push(startPos + offset);\n        }\n        end = offsets[count];\n      }\n      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n        var offsetStart = offsets[i];\n        var offsetEnd = offsets[i + 1];\n        cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n      }\n      return {\n        obj: cffIndex,\n        endPos: end\n      };\n    },\n    parseNameIndex: function CFFParser_parseNameIndex(index) {\n      var names = [];\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var name = index.get(i);\n        names.push((0, _util.bytesToString)(name));\n      }\n      return names;\n    },\n    parseStringIndex: function CFFParser_parseStringIndex(index) {\n      var strings = new CFFStrings();\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var data = index.get(i);\n        strings.add((0, _util.bytesToString)(data));\n      }\n      return strings;\n    },\n    createDict: function CFFParser_createDict(Type, dict, strings) {\n      var cffDict = new Type(strings);\n      for (var i = 0, ii = dict.length; i < ii; ++i) {\n        var pair = dict[i];\n        var key = pair[0];\n        var value = pair[1];\n        cffDict.setByKey(key, value);\n      }\n      return cffDict;\n    },\n    parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n      if (!data || state.callDepth > MAX_SUBR_NESTING) {\n        return false;\n      }\n      var stackSize = state.stackSize;\n      var stack = state.stack;\n      var length = data.length;\n      for (var j = 0; j < length;) {\n        var value = data[j++];\n        var validationCommand = null;\n        if (value === 12) {\n          var q = data[j++];\n          if (q === 0) {\n            data[j - 2] = 139;\n            data[j - 1] = 22;\n            stackSize = 0;\n          } else {\n            validationCommand = CharstringValidationData12[q];\n          }\n        } else if (value === 28) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n          j += 2;\n          stackSize++;\n        } else if (value === 14) {\n          if (stackSize >= 4) {\n            stackSize -= 4;\n            if (this.seacAnalysisEnabled) {\n              state.seac = stack.slice(stackSize, stackSize + 4);\n              return false;\n            }\n          }\n          validationCommand = CharstringValidationData[value];\n        } else if (value >= 32 && value <= 246) {\n          stack[stackSize] = value - 139;\n          stackSize++;\n        } else if (value >= 247 && value <= 254) {\n          stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n          j++;\n          stackSize++;\n        } else if (value === 255) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n          j += 4;\n          stackSize++;\n        } else if (value === 19 || value === 20) {\n          state.hints += stackSize >> 1;\n          j += state.hints + 7 >> 3;\n          stackSize %= 2;\n          validationCommand = CharstringValidationData[value];\n        } else if (value === 10 || value === 29) {\n          var subrsIndex;\n          if (value === 10) {\n            subrsIndex = localSubrIndex;\n          } else {\n            subrsIndex = globalSubrIndex;\n          }\n          if (!subrsIndex) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Missing subrsIndex for ' + validationCommand.id);\n            return false;\n          }\n          var bias = 32768;\n          if (subrsIndex.count < 1240) {\n            bias = 107;\n          } else if (subrsIndex.count < 33900) {\n            bias = 1131;\n          }\n          var subrNumber = stack[--stackSize] + bias;\n          if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Out of bounds subrIndex for ' + validationCommand.id);\n            return false;\n          }\n          state.stackSize = stackSize;\n          state.callDepth++;\n          var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n          if (!valid) {\n            return false;\n          }\n          state.callDepth--;\n          stackSize = state.stackSize;\n          continue;\n        } else if (value === 11) {\n          state.stackSize = stackSize;\n          return true;\n        } else {\n          validationCommand = CharstringValidationData[value];\n        }\n        if (validationCommand) {\n          if (validationCommand.stem) {\n            state.hints += stackSize >> 1;\n          }\n          if ('min' in validationCommand) {\n            if (!state.undefStack && stackSize < validationCommand.min) {\n              (0, _util.warn)('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n              return false;\n            }\n          }\n          if (state.firstStackClearing && validationCommand.stackClearing) {\n            state.firstStackClearing = false;\n            stackSize -= validationCommand.min;\n            if (stackSize >= 2 && validationCommand.stem) {\n              stackSize %= 2;\n            } else if (stackSize > 1) {\n              (0, _util.warn)('Found too many parameters for stack-clearing command');\n            }\n            if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n              state.width = stack[stackSize - 1];\n            }\n          }\n          if ('stackDelta' in validationCommand) {\n            if ('stackFn' in validationCommand) {\n              validationCommand.stackFn(stack, stackSize);\n            }\n            stackSize += validationCommand.stackDelta;\n          } else if (validationCommand.stackClearing) {\n            stackSize = 0;\n          } else if (validationCommand.resetStack) {\n            stackSize = 0;\n            state.undefStack = false;\n          } else if (validationCommand.undefStack) {\n            stackSize = 0;\n            state.undefStack = true;\n            state.firstStackClearing = false;\n          }\n        }\n      }\n      state.stackSize = stackSize;\n      return true;\n    },\n    parseCharStrings: function parseCharStrings(_ref) {\n      var charStrings = _ref.charStrings,\n          localSubrIndex = _ref.localSubrIndex,\n          globalSubrIndex = _ref.globalSubrIndex,\n          fdSelect = _ref.fdSelect,\n          fdArray = _ref.fdArray,\n          privateDict = _ref.privateDict;\n\n      var seacs = [];\n      var widths = [];\n      var count = charStrings.count;\n      for (var i = 0; i < count; i++) {\n        var charstring = charStrings.get(i);\n        var state = {\n          callDepth: 0,\n          stackSize: 0,\n          stack: [],\n          undefStack: true,\n          hints: 0,\n          firstStackClearing: true,\n          seac: null,\n          width: null\n        };\n        var valid = true;\n        var localSubrToUse = null;\n        var privateDictToUse = privateDict;\n        if (fdSelect && fdArray.length) {\n          var fdIndex = fdSelect.getFDIndex(i);\n          if (fdIndex === -1) {\n            (0, _util.warn)('Glyph index is not in fd select.');\n            valid = false;\n          }\n          if (fdIndex >= fdArray.length) {\n            (0, _util.warn)('Invalid fd index for glyph index.');\n            valid = false;\n          }\n          if (valid) {\n            privateDictToUse = fdArray[fdIndex].privateDict;\n            localSubrToUse = privateDictToUse.subrsIndex;\n          }\n        } else if (localSubrIndex) {\n          localSubrToUse = localSubrIndex;\n        }\n        if (valid) {\n          valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n        }\n        if (state.width !== null) {\n          var nominalWidth = privateDictToUse.getByName('nominalWidthX');\n          widths[i] = nominalWidth + state.width;\n        } else {\n          var defaultWidth = privateDictToUse.getByName('defaultWidthX');\n          widths[i] = defaultWidth;\n        }\n        if (state.seac !== null) {\n          seacs[i] = state.seac;\n        }\n        if (!valid) {\n          charStrings.set(i, new Uint8Array([14]));\n        }\n      }\n      return {\n        charStrings: charStrings,\n        seacs: seacs,\n        widths: widths\n      };\n    },\n\n    emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n      parentDict.setByKey(18, [0, 0]);\n      parentDict.privateDict = privateDict;\n    },\n    parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n      if (!parentDict.hasName('Private')) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateOffset = parentDict.getByName('Private');\n      if (!Array.isArray(privateOffset) || privateOffset.length !== 2) {\n        parentDict.removeByName('Private');\n        return;\n      }\n      var size = privateOffset[0];\n      var offset = privateOffset[1];\n      if (size === 0 || offset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateDictEnd = offset + size;\n      var dictData = this.bytes.subarray(offset, privateDictEnd);\n      var dict = this.parseDict(dictData);\n      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n      parentDict.privateDict = privateDict;\n      if (!privateDict.getByName('Subrs')) {\n        return;\n      }\n      var subrsOffset = privateDict.getByName('Subrs');\n      var relativeOffset = offset + subrsOffset;\n      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var subrsIndex = this.parseIndex(relativeOffset);\n      privateDict.subrsIndex = subrsIndex.obj;\n    },\n    parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n      if (pos === 0) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, _charsets.ISOAdobeCharset);\n      } else if (pos === 1) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, _charsets.ExpertCharset);\n      } else if (pos === 2) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, _charsets.ExpertSubsetCharset);\n      }\n      var bytes = this.bytes;\n      var start = pos;\n      var format = bytes[pos++];\n      var charset = ['.notdef'];\n      var id, count, i;\n      length -= 1;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; i++) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            charset.push(cid ? id : strings.get(id));\n          }\n          break;\n        case 1:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        case 2:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++] << 8 | bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        default:\n          throw new _util.FormatError('Unknown charset format');\n      }\n      var end = pos;\n      var raw = bytes.subarray(start, end);\n      return new CFFCharset(false, format, charset, raw);\n    },\n    parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n      var encoding = Object.create(null);\n      var bytes = this.bytes;\n      var predefined = false;\n      var format, i, ii;\n      var raw = null;\n      function readSupplement() {\n        var supplementsCount = bytes[pos++];\n        for (i = 0; i < supplementsCount; i++) {\n          var code = bytes[pos++];\n          var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n          encoding[code] = charset.indexOf(strings.get(sid));\n        }\n      }\n      if (pos === 0 || pos === 1) {\n        predefined = true;\n        format = pos;\n        var baseEncoding = pos ? _encodings.ExpertEncoding : _encodings.StandardEncoding;\n        for (i = 0, ii = charset.length; i < ii; i++) {\n          var index = baseEncoding.indexOf(charset[i]);\n          if (index !== -1) {\n            encoding[index] = i;\n          }\n        }\n      } else {\n        var dataStart = pos;\n        format = bytes[pos++];\n        switch (format & 0x7f) {\n          case 0:\n            var glyphsCount = bytes[pos++];\n            for (i = 1; i <= glyphsCount; i++) {\n              encoding[bytes[pos++]] = i;\n            }\n            break;\n          case 1:\n            var rangesCount = bytes[pos++];\n            var gid = 1;\n            for (i = 0; i < rangesCount; i++) {\n              var start = bytes[pos++];\n              var left = bytes[pos++];\n              for (var j = start; j <= start + left; j++) {\n                encoding[j] = gid++;\n              }\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown encoding format: ' + format + ' in CFF');\n        }\n        var dataEnd = pos;\n        if (format & 0x80) {\n          bytes[dataStart] &= 0x7f;\n          readSupplement();\n        }\n        raw = bytes.subarray(dataStart, dataEnd);\n      }\n      format = format & 0x7f;\n      return new CFFEncoding(predefined, format, encoding, raw);\n    },\n    parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n      var start = pos;\n      var bytes = this.bytes;\n      var format = bytes[pos++];\n      var fdSelect = [],\n          rawBytes;\n      var i,\n          invalidFirstGID = false;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; ++i) {\n            var id = bytes[pos++];\n            fdSelect.push(id);\n          }\n          rawBytes = bytes.subarray(start, pos);\n          break;\n        case 3:\n          var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n          for (i = 0; i < rangesCount; ++i) {\n            var first = bytes[pos++] << 8 | bytes[pos++];\n            if (i === 0 && first !== 0) {\n              (0, _util.warn)('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n              invalidFirstGID = true;\n              first = 0;\n            }\n            var fdIndex = bytes[pos++];\n            var next = bytes[pos] << 8 | bytes[pos + 1];\n            for (var j = first; j < next; ++j) {\n              fdSelect.push(fdIndex);\n            }\n          }\n          pos += 2;\n          rawBytes = bytes.subarray(start, pos);\n          if (invalidFirstGID) {\n            rawBytes[3] = rawBytes[4] = 0;\n          }\n          break;\n        default:\n          throw new _util.FormatError('parseFDSelect: Unknown format \"' + format + '\".');\n      }\n      if (fdSelect.length !== length) {\n        throw new _util.FormatError('parseFDSelect: Invalid font data.');\n      }\n      return new CFFFDSelect(fdSelect, rawBytes);\n    }\n  };\n  return CFFParser;\n}();\nvar CFF = function CFFClosure() {\n  function CFF() {\n    this.header = null;\n    this.names = [];\n    this.topDict = null;\n    this.strings = new CFFStrings();\n    this.globalSubrIndex = null;\n    this.encoding = null;\n    this.charset = null;\n    this.charStrings = null;\n    this.fdArray = [];\n    this.fdSelect = null;\n    this.isCIDFont = false;\n  }\n  return CFF;\n}();\nvar CFFHeader = function CFFHeaderClosure() {\n  function CFFHeader(major, minor, hdrSize, offSize) {\n    this.major = major;\n    this.minor = minor;\n    this.hdrSize = hdrSize;\n    this.offSize = offSize;\n  }\n  return CFFHeader;\n}();\nvar CFFStrings = function CFFStringsClosure() {\n  function CFFStrings() {\n    this.strings = [];\n  }\n  CFFStrings.prototype = {\n    get: function CFFStrings_get(index) {\n      if (index >= 0 && index <= 390) {\n        return CFFStandardStrings[index];\n      }\n      if (index - 391 <= this.strings.length) {\n        return this.strings[index - 391];\n      }\n      return CFFStandardStrings[0];\n    },\n    add: function CFFStrings_add(value) {\n      this.strings.push(value);\n    },\n    get count() {\n      return this.strings.length;\n    }\n  };\n  return CFFStrings;\n}();\nvar CFFIndex = function CFFIndexClosure() {\n  function CFFIndex() {\n    this.objects = [];\n    this.length = 0;\n  }\n  CFFIndex.prototype = {\n    add: function CFFIndex_add(data) {\n      this.length += data.length;\n      this.objects.push(data);\n    },\n    set: function CFFIndex_set(index, data) {\n      this.length += data.length - this.objects[index].length;\n      this.objects[index] = data;\n    },\n    get: function CFFIndex_get(index) {\n      return this.objects[index];\n    },\n    get count() {\n      return this.objects.length;\n    }\n  };\n  return CFFIndex;\n}();\nvar CFFDict = function CFFDictClosure() {\n  function CFFDict(tables, strings) {\n    this.keyToNameMap = tables.keyToNameMap;\n    this.nameToKeyMap = tables.nameToKeyMap;\n    this.defaults = tables.defaults;\n    this.types = tables.types;\n    this.opcodes = tables.opcodes;\n    this.order = tables.order;\n    this.strings = strings;\n    this.values = Object.create(null);\n  }\n  CFFDict.prototype = {\n    setByKey: function CFFDict_setByKey(key, value) {\n      if (!(key in this.keyToNameMap)) {\n        return false;\n      }\n      var valueLength = value.length;\n      if (valueLength === 0) {\n        return true;\n      }\n      for (var i = 0; i < valueLength; i++) {\n        if (isNaN(value[i])) {\n          (0, _util.warn)('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n          return true;\n        }\n      }\n      var type = this.types[key];\n      if (type === 'num' || type === 'sid' || type === 'offset') {\n        value = value[0];\n      }\n      this.values[key] = value;\n      return true;\n    },\n    setByName: function CFFDict_setByName(name, value) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name \"' + name + '\"');\n      }\n      this.values[this.nameToKeyMap[name]] = value;\n    },\n    hasName: function CFFDict_hasName(name) {\n      return this.nameToKeyMap[name] in this.values;\n    },\n    getByName: function CFFDict_getByName(name) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name ' + name + '\"');\n      }\n      var key = this.nameToKeyMap[name];\n      if (!(key in this.values)) {\n        return this.defaults[key];\n      }\n      return this.values[key];\n    },\n    removeByName: function CFFDict_removeByName(name) {\n      delete this.values[this.nameToKeyMap[name]];\n    }\n  };\n  CFFDict.createTables = function CFFDict_createTables(layout) {\n    var tables = {\n      keyToNameMap: {},\n      nameToKeyMap: {},\n      defaults: {},\n      types: {},\n      opcodes: {},\n      order: []\n    };\n    for (var i = 0, ii = layout.length; i < ii; ++i) {\n      var entry = layout[i];\n      var key = Array.isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n      tables.keyToNameMap[key] = entry[1];\n      tables.nameToKeyMap[entry[1]] = key;\n      tables.types[key] = entry[2];\n      tables.defaults[key] = entry[3];\n      tables.opcodes[key] = Array.isArray(entry[0]) ? entry[0] : [entry[0]];\n      tables.order.push(key);\n    }\n    return tables;\n  };\n  return CFFDict;\n}();\nvar CFFTopDict = function CFFTopDictClosure() {\n  var layout = [[[12, 30], 'ROS', ['sid', 'sid', 'num'], null], [[12, 20], 'SyntheticBase', 'num', null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'num', 0], [[12, 2], 'ItalicAngle', 'num', 0], [[12, 3], 'UnderlinePosition', 'num', -100], [[12, 4], 'UnderlineThickness', 'num', 50], [[12, 5], 'PaintType', 'num', 0], [[12, 6], 'CharstringType', 'num', 2], [[12, 7], 'FontMatrix', ['num', 'num', 'num', 'num', 'num', 'num'], [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'num', null], [5, 'FontBBox', ['num', 'num', 'num', 'num'], [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'num', 0], [14, 'XUID', 'array', null], [15, 'charset', 'offset', 0], [16, 'Encoding', 'offset', 0], [17, 'CharStrings', 'offset', 0], [18, 'Private', ['offset', 'offset'], null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'num', 0], [[12, 32], 'CIDFontRevision', 'num', 0], [[12, 33], 'CIDFontType', 'num', 0], [[12, 34], 'CIDCount', 'num', 8720], [[12, 35], 'UIDBase', 'num', null], [[12, 37], 'FDSelect', 'offset', null], [[12, 36], 'FDArray', 'offset', null], [[12, 38], 'FontName', 'sid', null]];\n  var tables = null;\n  function CFFTopDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.privateDict = null;\n  }\n  CFFTopDict.prototype = Object.create(CFFDict.prototype);\n  return CFFTopDict;\n}();\nvar CFFPrivateDict = function CFFPrivateDictClosure() {\n  var layout = [[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'num', 0.039625], [[12, 10], 'BlueShift', 'num', 7], [[12, 11], 'BlueFuzz', 'num', 1], [10, 'StdHW', 'num', null], [11, 'StdVW', 'num', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'num', 0], [[12, 17], 'LanguageGroup', 'num', 0], [[12, 18], 'ExpansionFactor', 'num', 0.06], [[12, 19], 'initialRandomSeed', 'num', 0], [20, 'defaultWidthX', 'num', 0], [21, 'nominalWidthX', 'num', 0], [19, 'Subrs', 'offset', null]];\n  var tables = null;\n  function CFFPrivateDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.subrsIndex = null;\n  }\n  CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n  return CFFPrivateDict;\n}();\nvar CFFCharsetPredefinedTypes = {\n  ISO_ADOBE: 0,\n  EXPERT: 1,\n  EXPERT_SUBSET: 2\n};\nvar CFFCharset = function CFFCharsetClosure() {\n  function CFFCharset(predefined, format, charset, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.charset = charset;\n    this.raw = raw;\n  }\n  return CFFCharset;\n}();\nvar CFFEncoding = function CFFEncodingClosure() {\n  function CFFEncoding(predefined, format, encoding, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.encoding = encoding;\n    this.raw = raw;\n  }\n  return CFFEncoding;\n}();\nvar CFFFDSelect = function CFFFDSelectClosure() {\n  function CFFFDSelect(fdSelect, raw) {\n    this.fdSelect = fdSelect;\n    this.raw = raw;\n  }\n  CFFFDSelect.prototype = {\n    getFDIndex: function CFFFDSelect_get(glyphIndex) {\n      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n        return -1;\n      }\n      return this.fdSelect[glyphIndex];\n    }\n  };\n  return CFFFDSelect;\n}();\nvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n  function CFFOffsetTracker() {\n    this.offsets = Object.create(null);\n  }\n  CFFOffsetTracker.prototype = {\n    isTracking: function CFFOffsetTracker_isTracking(key) {\n      return key in this.offsets;\n    },\n    track: function CFFOffsetTracker_track(key, location) {\n      if (key in this.offsets) {\n        throw new _util.FormatError('Already tracking location of ' + key);\n      }\n      this.offsets[key] = location;\n    },\n    offset: function CFFOffsetTracker_offset(value) {\n      for (var key in this.offsets) {\n        this.offsets[key] += value;\n      }\n    },\n    setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n      if (!(key in this.offsets)) {\n        throw new _util.FormatError('Not tracking location of ' + key);\n      }\n      var data = output.data;\n      var dataOffset = this.offsets[key];\n      var size = 5;\n      for (var i = 0, ii = values.length; i < ii; ++i) {\n        var offset0 = i * size + dataOffset;\n        var offset1 = offset0 + 1;\n        var offset2 = offset0 + 2;\n        var offset3 = offset0 + 3;\n        var offset4 = offset0 + 4;\n        if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n          throw new _util.FormatError('writing to an offset that is not empty');\n        }\n        var value = values[i];\n        data[offset0] = 0x1d;\n        data[offset1] = value >> 24 & 0xFF;\n        data[offset2] = value >> 16 & 0xFF;\n        data[offset3] = value >> 8 & 0xFF;\n        data[offset4] = value & 0xFF;\n      }\n    }\n  };\n  return CFFOffsetTracker;\n}();\nvar CFFCompiler = function CFFCompilerClosure() {\n  function CFFCompiler(cff) {\n    this.cff = cff;\n  }\n  CFFCompiler.prototype = {\n    compile: function CFFCompiler_compile() {\n      var cff = this.cff;\n      var output = {\n        data: [],\n        length: 0,\n        add: function CFFCompiler_add(data) {\n          this.data = this.data.concat(data);\n          this.length = this.data.length;\n        }\n      };\n      var header = this.compileHeader(cff.header);\n      output.add(header);\n      var nameIndex = this.compileNameIndex(cff.names);\n      output.add(nameIndex);\n      if (cff.isCIDFont) {\n        if (cff.topDict.hasName('FontMatrix')) {\n          var base = cff.topDict.getByName('FontMatrix');\n          cff.topDict.removeByName('FontMatrix');\n          for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n            var subDict = cff.fdArray[i];\n            var matrix = base.slice(0);\n            if (subDict.hasName('FontMatrix')) {\n              matrix = _util.Util.transform(matrix, subDict.getByName('FontMatrix'));\n            }\n            subDict.setByName('FontMatrix', matrix);\n          }\n        }\n      }\n      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n      output.add(compiled.output);\n      var topDictTracker = compiled.trackers[0];\n      var stringIndex = this.compileStringIndex(cff.strings.strings);\n      output.add(stringIndex);\n      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n      output.add(globalSubrIndex);\n      if (cff.encoding && cff.topDict.hasName('Encoding')) {\n        if (cff.encoding.predefined) {\n          topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n        } else {\n          var encoding = this.compileEncoding(cff.encoding);\n          topDictTracker.setEntryLocation('Encoding', [output.length], output);\n          output.add(encoding);\n        }\n      }\n      if (cff.charset && cff.topDict.hasName('charset')) {\n        if (cff.charset.predefined) {\n          topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n        } else {\n          var charset = this.compileCharset(cff.charset);\n          topDictTracker.setEntryLocation('charset', [output.length], output);\n          output.add(charset);\n        }\n      }\n      var charStrings = this.compileCharStrings(cff.charStrings);\n      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n      output.add(charStrings);\n      if (cff.isCIDFont) {\n        topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n        var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n        output.add(fdSelect);\n        compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n        topDictTracker.setEntryLocation('FDArray', [output.length], output);\n        output.add(compiled.output);\n        var fontDictTrackers = compiled.trackers;\n        this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n      }\n      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n      output.add([0]);\n      return output.data;\n    },\n    encodeNumber: function CFFCompiler_encodeNumber(value) {\n      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n        return this.encodeInteger(value);\n      }\n      return this.encodeFloat(value);\n    },\n    encodeFloat: function CFFCompiler_encodeFloat(num) {\n      var value = num.toString();\n      var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n      if (m) {\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(num * epsilon) / epsilon).toString();\n      }\n      var nibbles = '';\n      var i, ii;\n      for (i = 0, ii = value.length; i < ii; ++i) {\n        var a = value[i];\n        if (a === 'e') {\n          nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (a === '.') {\n          nibbles += 'a';\n        } else if (a === '-') {\n          nibbles += 'e';\n        } else {\n          nibbles += a;\n        }\n      }\n      nibbles += nibbles.length & 1 ? 'f' : 'ff';\n      var out = [30];\n      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n      }\n      return out;\n    },\n    encodeInteger: function CFFCompiler_encodeInteger(value) {\n      var code;\n      if (value >= -107 && value <= 107) {\n        code = [value + 139];\n      } else if (value >= 108 && value <= 1131) {\n        value = value - 108;\n        code = [(value >> 8) + 247, value & 0xFF];\n      } else if (value >= -1131 && value <= -108) {\n        value = -value - 108;\n        code = [(value >> 8) + 251, value & 0xFF];\n      } else if (value >= -32768 && value <= 32767) {\n        code = [0x1c, value >> 8 & 0xFF, value & 0xFF];\n      } else {\n        code = [0x1d, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF];\n      }\n      return code;\n    },\n    compileHeader: function CFFCompiler_compileHeader(header) {\n      return [header.major, header.minor, header.hdrSize, header.offSize];\n    },\n    compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n      var nameIndex = new CFFIndex();\n      for (var i = 0, ii = names.length; i < ii; ++i) {\n        var name = names[i];\n        var length = Math.min(name.length, 127);\n        var sanitizedName = new Array(length);\n        for (var j = 0; j < length; j++) {\n          var char = name[j];\n          if (char < '!' || char > '~' || char === '[' || char === ']' || char === '(' || char === ')' || char === '{' || char === '}' || char === '<' || char === '>' || char === '/' || char === '%') {\n            char = '_';\n          }\n          sanitizedName[j] = char;\n        }\n        sanitizedName = sanitizedName.join('');\n        if (sanitizedName === '') {\n          sanitizedName = 'Bad_Font_Name';\n        }\n        nameIndex.add((0, _util.stringToBytes)(sanitizedName));\n      }\n      return this.compileIndex(nameIndex);\n    },\n    compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n      var fontDictTrackers = [];\n      var fdArrayIndex = new CFFIndex();\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        if (removeCidKeys) {\n          fontDict.removeByName('CIDFontVersion');\n          fontDict.removeByName('CIDFontRevision');\n          fontDict.removeByName('CIDFontType');\n          fontDict.removeByName('CIDCount');\n          fontDict.removeByName('UIDBase');\n        }\n        var fontDictTracker = new CFFOffsetTracker();\n        var fontDictData = this.compileDict(fontDict, fontDictTracker);\n        fontDictTrackers.push(fontDictTracker);\n        fdArrayIndex.add(fontDictData);\n        fontDictTracker.offset(length);\n      }\n      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n      return {\n        trackers: fontDictTrackers,\n        output: fdArrayIndex\n      };\n    },\n    compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        var privateDict = fontDict.privateDict;\n        if (!privateDict || !fontDict.hasName('Private')) {\n          throw new _util.FormatError('There must be a private dictionary.');\n        }\n        var privateDictTracker = new CFFOffsetTracker();\n        var privateDictData = this.compileDict(privateDict, privateDictTracker);\n        var outputLength = output.length;\n        privateDictTracker.offset(outputLength);\n        if (!privateDictData.length) {\n          outputLength = 0;\n        }\n        trackers[i].setEntryLocation('Private', [privateDictData.length, outputLength], output);\n        output.add(privateDictData);\n        if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n          var subrs = this.compileIndex(privateDict.subrsIndex);\n          privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n          output.add(subrs);\n        }\n      }\n    },\n    compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n      var out = [];\n      var order = dict.order;\n      for (var i = 0; i < order.length; ++i) {\n        var key = order[i];\n        if (!(key in dict.values)) {\n          continue;\n        }\n        var values = dict.values[key];\n        var types = dict.types[key];\n        if (!Array.isArray(types)) {\n          types = [types];\n        }\n        if (!Array.isArray(values)) {\n          values = [values];\n        }\n        if (values.length === 0) {\n          continue;\n        }\n        for (var j = 0, jj = types.length; j < jj; ++j) {\n          var type = types[j];\n          var value = values[j];\n          switch (type) {\n            case 'num':\n            case 'sid':\n              out = out.concat(this.encodeNumber(value));\n              break;\n            case 'offset':\n              var name = dict.keyToNameMap[key];\n              if (!offsetTracker.isTracking(name)) {\n                offsetTracker.track(name, out.length);\n              }\n              out = out.concat([0x1d, 0, 0, 0, 0]);\n              break;\n            case 'array':\n            case 'delta':\n              out = out.concat(this.encodeNumber(value));\n              for (var k = 1, kk = values.length; k < kk; ++k) {\n                out = out.concat(this.encodeNumber(values[k]));\n              }\n              break;\n            default:\n              throw new _util.FormatError('Unknown data type of ' + type);\n          }\n        }\n        out = out.concat(dict.opcodes[key]);\n      }\n      return out;\n    },\n    compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n      var stringIndex = new CFFIndex();\n      for (var i = 0, ii = strings.length; i < ii; ++i) {\n        stringIndex.add((0, _util.stringToBytes)(strings[i]));\n      }\n      return this.compileIndex(stringIndex);\n    },\n    compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n      var globalSubrIndex = this.cff.globalSubrIndex;\n      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n    },\n    compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n      return this.compileIndex(charStrings);\n    },\n    compileCharset: function CFFCompiler_compileCharset(charset) {\n      return this.compileTypedArray(charset.raw);\n    },\n    compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n      return this.compileTypedArray(encoding.raw);\n    },\n    compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n      return this.compileTypedArray(fdSelect);\n    },\n    compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n      var out = [];\n      for (var i = 0, ii = data.length; i < ii; ++i) {\n        out[i] = data[i];\n      }\n      return out;\n    },\n    compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n      trackers = trackers || [];\n      var objects = index.objects;\n      var count = objects.length;\n      if (count === 0) {\n        return [0, 0, 0];\n      }\n      var data = [count >> 8 & 0xFF, count & 0xff];\n      var lastOffset = 1,\n          i;\n      for (i = 0; i < count; ++i) {\n        lastOffset += objects[i].length;\n      }\n      var offsetSize;\n      if (lastOffset < 0x100) {\n        offsetSize = 1;\n      } else if (lastOffset < 0x10000) {\n        offsetSize = 2;\n      } else if (lastOffset < 0x1000000) {\n        offsetSize = 3;\n      } else {\n        offsetSize = 4;\n      }\n      data.push(offsetSize);\n      var relativeOffset = 1;\n      for (i = 0; i < count + 1; i++) {\n        if (offsetSize === 1) {\n          data.push(relativeOffset & 0xFF);\n        } else if (offsetSize === 2) {\n          data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else if (offsetSize === 3) {\n          data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else {\n          data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        }\n        if (objects[i]) {\n          relativeOffset += objects[i].length;\n        }\n      }\n      for (i = 0; i < count; i++) {\n        if (trackers[i]) {\n          trackers[i].offset(data.length);\n        }\n        for (var j = 0, jj = objects[i].length; j < jj; j++) {\n          data.push(objects[i][j]);\n        }\n      }\n      return data;\n    }\n  };\n  return CFFCompiler;\n}();\nexports.CFFStandardStrings = CFFStandardStrings;\nexports.CFFParser = CFFParser;\nexports.CFF = CFF;\nexports.CFFHeader = CFFHeader;\nexports.CFFStrings = CFFStrings;\nexports.CFFIndex = CFFIndex;\nexports.CFFCharset = CFFCharset;\nexports.CFFTopDict = CFFTopDict;\nexports.CFFPrivateDict = CFFPrivateDict;\nexports.CFFCompiler = CFFCompiler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/cff_parser.js\n// module id = kFzq\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LZWStream = exports.StringStream = exports.StreamsSequenceStream = exports.Stream = exports.RunLengthStream = exports.PredictorStream = exports.NullStream = exports.FlateStream = exports.DecodeStream = exports.DecryptStream = exports.AsciiHexStream = exports.Ascii85Stream = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar Stream = function StreamClosure() {\n  function Stream(arrayBuffer, start, length, dict) {\n    this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n    this.start = start || 0;\n    this.pos = this.start;\n    this.end = start + length || this.bytes.length;\n    this.dict = dict;\n  }\n  Stream.prototype = {\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function Stream_getByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.bytes[this.pos++];\n    },\n    getUint16: function Stream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function Stream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function Stream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function Stream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function Stream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    skip: function Stream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function Stream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function Stream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function Stream_makeSubStream(start, length, dict) {\n      return new Stream(this.bytes.buffer, start, length, dict);\n    }\n  };\n  return Stream;\n}();\nvar StringStream = function StringStreamClosure() {\n  function StringStream(str) {\n    var bytes = (0, _util.stringToBytes)(str);\n    Stream.call(this, bytes);\n  }\n  StringStream.prototype = Stream.prototype;\n  return StringStream;\n}();\nvar DecodeStream = function DecodeStreamClosure() {\n  var emptyBuffer = new Uint8Array(0);\n  function DecodeStream(maybeMinBufferLength) {\n    this.pos = 0;\n    this.bufferLength = 0;\n    this.eof = false;\n    this.buffer = emptyBuffer;\n    this.minBufferLength = 512;\n    if (maybeMinBufferLength) {\n      while (this.minBufferLength < maybeMinBufferLength) {\n        this.minBufferLength *= 2;\n      }\n    }\n  }\n  DecodeStream.prototype = {\n    get isEmpty() {\n      while (!this.eof && this.bufferLength === 0) {\n        this.readBlock();\n      }\n      return this.bufferLength === 0;\n    },\n    ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n      var buffer = this.buffer;\n      if (requested <= buffer.byteLength) {\n        return buffer;\n      }\n      var size = this.minBufferLength;\n      while (size < requested) {\n        size *= 2;\n      }\n      var buffer2 = new Uint8Array(size);\n      buffer2.set(buffer);\n      return this.buffer = buffer2;\n    },\n    getByte: function DecodeStream_getByte() {\n      var pos = this.pos;\n      while (this.bufferLength <= pos) {\n        if (this.eof) {\n          return -1;\n        }\n        this.readBlock();\n      }\n      return this.buffer[this.pos++];\n    },\n    getUint16: function DecodeStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function DecodeStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function DecodeStream_getBytes(length) {\n      var end,\n          pos = this.pos;\n      if (length) {\n        this.ensureBuffer(pos + length);\n        end = pos + length;\n        while (!this.eof && this.bufferLength < end) {\n          this.readBlock();\n        }\n        var bufEnd = this.bufferLength;\n        if (end > bufEnd) {\n          end = bufEnd;\n        }\n      } else {\n        while (!this.eof) {\n          this.readBlock();\n        }\n        end = this.bufferLength;\n      }\n      this.pos = end;\n      return this.buffer.subarray(pos, end);\n    },\n    peekByte: function DecodeStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function DecodeStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n      var end = start + length;\n      while (this.bufferLength <= end && !this.eof) {\n        this.readBlock();\n      }\n      return new Stream(this.buffer, start, length, dict);\n    },\n    skip: function DecodeStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function DecodeStream_reset() {\n      this.pos = 0;\n    },\n    getBaseStreams: function DecodeStream_getBaseStreams() {\n      if (this.str && this.str.getBaseStreams) {\n        return this.str.getBaseStreams();\n      }\n      return [];\n    }\n  };\n  return DecodeStream;\n}();\nvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n  function StreamsSequenceStream(streams) {\n    this.streams = streams;\n    DecodeStream.call(this, null);\n  }\n  StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n  StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n    var streams = this.streams;\n    if (streams.length === 0) {\n      this.eof = true;\n      return;\n    }\n    var stream = streams.shift();\n    var chunk = stream.getBytes();\n    var bufferLength = this.bufferLength;\n    var newLength = bufferLength + chunk.length;\n    var buffer = this.ensureBuffer(newLength);\n    buffer.set(chunk, bufferLength);\n    this.bufferLength = newLength;\n  };\n  StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n    var baseStreams = [];\n    for (var i = 0, ii = this.streams.length; i < ii; i++) {\n      var stream = this.streams[i];\n      if (stream.getBaseStreams) {\n        _util.Util.appendToArray(baseStreams, stream.getBaseStreams());\n      }\n    }\n    return baseStreams;\n  };\n  return StreamsSequenceStream;\n}();\nvar FlateStream = function FlateStreamClosure() {\n  var codeLenCodeMap = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n  var lengthDecode = new Int32Array([0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a, 0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f, 0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073, 0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102]);\n  var distDecode = new Int32Array([0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d, 0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1, 0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01, 0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001]);\n  var fixedLitCodeTab = [new Int32Array([0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0, 0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0, 0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0, 0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8, 0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8, 0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8, 0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4, 0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4, 0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4, 0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc, 0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec, 0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc, 0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2, 0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2, 0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2, 0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca, 0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea, 0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da, 0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6, 0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6, 0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6, 0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce, 0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee, 0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de, 0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe, 0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1, 0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1, 0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1, 0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9, 0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9, 0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9, 0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5, 0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5, 0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5, 0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd, 0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed, 0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd, 0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3, 0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3, 0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3, 0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb, 0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb, 0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db, 0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7, 0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7, 0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7, 0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf, 0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef, 0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df, 0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff]), 9];\n  var fixedDistCodeTab = [new Int32Array([0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c, 0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000, 0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d, 0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000]), 5];\n  function FlateStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    var cmf = str.getByte();\n    var flg = str.getByte();\n    if (cmf === -1 || flg === -1) {\n      throw new _util.FormatError('Invalid header in flate stream: ' + cmf + ', ' + flg);\n    }\n    if ((cmf & 0x0f) !== 0x08) {\n      throw new _util.FormatError('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (((cmf << 8) + flg) % 31 !== 0) {\n      throw new _util.FormatError('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (flg & 0x20) {\n      throw new _util.FormatError('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n    }\n    this.codeSize = 0;\n    this.codeBuf = 0;\n    DecodeStream.call(this, maybeLength);\n  }\n  FlateStream.prototype = Object.create(DecodeStream.prototype);\n  FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n    var str = this.str;\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < bits) {\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad encoding in flate stream');\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    b = codeBuf & (1 << bits) - 1;\n    this.codeBuf = codeBuf >> bits;\n    this.codeSize = codeSize -= bits;\n    return b;\n  };\n  FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n    var str = this.str;\n    var codes = table[0];\n    var maxLen = table[1];\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < maxLen) {\n      if ((b = str.getByte()) === -1) {\n        break;\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    var code = codes[codeBuf & (1 << maxLen) - 1];\n    var codeLen = code >> 16;\n    var codeVal = code & 0xffff;\n    if (codeLen < 1 || codeSize < codeLen) {\n      throw new _util.FormatError('Bad encoding in flate stream');\n    }\n    this.codeBuf = codeBuf >> codeLen;\n    this.codeSize = codeSize - codeLen;\n    return codeVal;\n  };\n  FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n    var n = lengths.length;\n    var maxLen = 0;\n    var i;\n    for (i = 0; i < n; ++i) {\n      if (lengths[i] > maxLen) {\n        maxLen = lengths[i];\n      }\n    }\n    var size = 1 << maxLen;\n    var codes = new Int32Array(size);\n    for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n      for (var val = 0; val < n; ++val) {\n        if (lengths[val] === len) {\n          var code2 = 0;\n          var t = code;\n          for (i = 0; i < len; ++i) {\n            code2 = code2 << 1 | t & 1;\n            t >>= 1;\n          }\n          for (i = code2; i < size; i += skip) {\n            codes[i] = len << 16 | val;\n          }\n          ++code;\n        }\n      }\n    }\n    return [codes, maxLen];\n  };\n  FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n    var buffer, len;\n    var str = this.str;\n    var hdr = this.getBits(3);\n    if (hdr & 1) {\n      this.eof = true;\n    }\n    hdr >>= 1;\n    if (hdr === 0) {\n      var b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var blockLen = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      blockLen |= b << 8;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var check = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      check |= b << 8;\n      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n        throw new _util.FormatError('Bad uncompressed block length in flate stream');\n      }\n      this.codeBuf = 0;\n      this.codeSize = 0;\n      var bufferLength = this.bufferLength;\n      buffer = this.ensureBuffer(bufferLength + blockLen);\n      var end = bufferLength + blockLen;\n      this.bufferLength = end;\n      if (blockLen === 0) {\n        if (str.peekByte() === -1) {\n          this.eof = true;\n        }\n      } else {\n        for (var n = bufferLength; n < end; ++n) {\n          if ((b = str.getByte()) === -1) {\n            this.eof = true;\n            break;\n          }\n          buffer[n] = b;\n        }\n      }\n      return;\n    }\n    var litCodeTable;\n    var distCodeTable;\n    if (hdr === 1) {\n      litCodeTable = fixedLitCodeTab;\n      distCodeTable = fixedDistCodeTab;\n    } else if (hdr === 2) {\n      var numLitCodes = this.getBits(5) + 257;\n      var numDistCodes = this.getBits(5) + 1;\n      var numCodeLenCodes = this.getBits(4) + 4;\n      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n      var i;\n      for (i = 0; i < numCodeLenCodes; ++i) {\n        codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n      }\n      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n      len = 0;\n      i = 0;\n      var codes = numLitCodes + numDistCodes;\n      var codeLengths = new Uint8Array(codes);\n      var bitsLength, bitsOffset, what;\n      while (i < codes) {\n        var code = this.getCode(codeLenCodeTab);\n        if (code === 16) {\n          bitsLength = 2;\n          bitsOffset = 3;\n          what = len;\n        } else if (code === 17) {\n          bitsLength = 3;\n          bitsOffset = 3;\n          what = len = 0;\n        } else if (code === 18) {\n          bitsLength = 7;\n          bitsOffset = 11;\n          what = len = 0;\n        } else {\n          codeLengths[i++] = len = code;\n          continue;\n        }\n        var repeatLength = this.getBits(bitsLength) + bitsOffset;\n        while (repeatLength-- > 0) {\n          codeLengths[i++] = what;\n        }\n      }\n      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n    } else {\n      throw new _util.FormatError('Unknown block type in flate stream');\n    }\n    buffer = this.buffer;\n    var limit = buffer ? buffer.length : 0;\n    var pos = this.bufferLength;\n    while (true) {\n      var code1 = this.getCode(litCodeTable);\n      if (code1 < 256) {\n        if (pos + 1 >= limit) {\n          buffer = this.ensureBuffer(pos + 1);\n          limit = buffer.length;\n        }\n        buffer[pos++] = code1;\n        continue;\n      }\n      if (code1 === 256) {\n        this.bufferLength = pos;\n        return;\n      }\n      code1 -= 257;\n      code1 = lengthDecode[code1];\n      var code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      len = (code1 & 0xffff) + code2;\n      code1 = this.getCode(distCodeTable);\n      code1 = distDecode[code1];\n      code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      var dist = (code1 & 0xffff) + code2;\n      if (pos + len >= limit) {\n        buffer = this.ensureBuffer(pos + len);\n        limit = buffer.length;\n      }\n      for (var k = 0; k < len; ++k, ++pos) {\n        buffer[pos] = buffer[pos - dist];\n      }\n    }\n  };\n  return FlateStream;\n}();\nvar PredictorStream = function PredictorStreamClosure() {\n  function PredictorStream(str, maybeLength, params) {\n    if (!(0, _primitives.isDict)(params)) {\n      return str;\n    }\n    var predictor = this.predictor = params.get('Predictor') || 1;\n    if (predictor <= 1) {\n      return str;\n    }\n    if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n      throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    if (predictor === 2) {\n      this.readBlock = this.readBlockTiff;\n    } else {\n      this.readBlock = this.readBlockPng;\n    }\n    this.str = str;\n    this.dict = str.dict;\n    var colors = this.colors = params.get('Colors') || 1;\n    var bits = this.bits = params.get('BitsPerComponent') || 8;\n    var columns = this.columns = params.get('Columns') || 1;\n    this.pixBytes = colors * bits + 7 >> 3;\n    this.rowBytes = columns * colors * bits + 7 >> 3;\n    DecodeStream.call(this, maybeLength);\n    return this;\n  }\n  PredictorStream.prototype = Object.create(DecodeStream.prototype);\n  PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n    var rowBytes = this.rowBytes;\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var bits = this.bits;\n    var colors = this.colors;\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var inbuf = 0,\n        outbuf = 0;\n    var inbits = 0,\n        outbits = 0;\n    var pos = bufferLength;\n    var i;\n    if (bits === 1 && colors === 1) {\n      for (i = 0; i < rowBytes; ++i) {\n        var c = rawBytes[i] ^ inbuf;\n        c ^= c >> 1;\n        c ^= c >> 2;\n        c ^= c >> 4;\n        inbuf = (c & 1) << 7;\n        buffer[pos++] = c;\n      }\n    } else if (bits === 8) {\n      for (i = 0; i < colors; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; ++i) {\n        buffer[pos] = buffer[pos - colors] + rawBytes[i];\n        pos++;\n      }\n    } else if (bits === 16) {\n      var bytesPerPixel = colors * 2;\n      for (i = 0; i < bytesPerPixel; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; i += 2) {\n        var sum = ((rawBytes[i] & 0xFF) << 8) + (rawBytes[i + 1] & 0xFF) + ((buffer[pos - bytesPerPixel] & 0xFF) << 8) + (buffer[pos - bytesPerPixel + 1] & 0xFF);\n        buffer[pos++] = sum >> 8 & 0xFF;\n        buffer[pos++] = sum & 0xFF;\n      }\n    } else {\n      var compArray = new Uint8Array(colors + 1);\n      var bitMask = (1 << bits) - 1;\n      var j = 0,\n          k = bufferLength;\n      var columns = this.columns;\n      for (i = 0; i < columns; ++i) {\n        for (var kk = 0; kk < colors; ++kk) {\n          if (inbits < bits) {\n            inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n            inbits += 8;\n          }\n          compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n          inbits -= bits;\n          outbuf = outbuf << bits | compArray[kk];\n          outbits += bits;\n          if (outbits >= 8) {\n            buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n            outbits -= 8;\n          }\n        }\n      }\n      if (outbits > 0) {\n        buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n      }\n    }\n    this.bufferLength += rowBytes;\n  };\n  PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n    var rowBytes = this.rowBytes;\n    var pixBytes = this.pixBytes;\n    var predictor = this.str.getByte();\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n    if (prevRow.length === 0) {\n      prevRow = new Uint8Array(rowBytes);\n    }\n    var i,\n        j = bufferLength,\n        up,\n        c;\n    switch (predictor) {\n      case 0:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        break;\n      case 1:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 2:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n        }\n        break;\n      case 3:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 4:\n        for (i = 0; i < pixBytes; ++i) {\n          up = prevRow[i];\n          c = rawBytes[i];\n          buffer[j++] = up + c;\n        }\n        for (; i < rowBytes; ++i) {\n          up = prevRow[i];\n          var upLeft = prevRow[i - pixBytes];\n          var left = buffer[j - pixBytes];\n          var p = left + up - upLeft;\n          var pa = p - left;\n          if (pa < 0) {\n            pa = -pa;\n          }\n          var pb = p - up;\n          if (pb < 0) {\n            pb = -pb;\n          }\n          var pc = p - upLeft;\n          if (pc < 0) {\n            pc = -pc;\n          }\n          c = rawBytes[i];\n          if (pa <= pb && pa <= pc) {\n            buffer[j++] = left + c;\n          } else if (pb <= pc) {\n            buffer[j++] = up + c;\n          } else {\n            buffer[j++] = upLeft + c;\n          }\n        }\n        break;\n      default:\n        throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    this.bufferLength += rowBytes;\n  };\n  return PredictorStream;\n}();\nvar DecryptStream = function DecryptStreamClosure() {\n  function DecryptStream(str, maybeLength, decrypt) {\n    this.str = str;\n    this.dict = str.dict;\n    this.decrypt = decrypt;\n    this.nextChunk = null;\n    this.initialized = false;\n    DecodeStream.call(this, maybeLength);\n  }\n  var chunkSize = 512;\n  DecryptStream.prototype = Object.create(DecodeStream.prototype);\n  DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n    var chunk;\n    if (this.initialized) {\n      chunk = this.nextChunk;\n    } else {\n      chunk = this.str.getBytes(chunkSize);\n      this.initialized = true;\n    }\n    if (!chunk || chunk.length === 0) {\n      this.eof = true;\n      return;\n    }\n    this.nextChunk = this.str.getBytes(chunkSize);\n    var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n    var decrypt = this.decrypt;\n    chunk = decrypt(chunk, !hasMoreData);\n    var bufferLength = this.bufferLength;\n    var i,\n        n = chunk.length;\n    var buffer = this.ensureBuffer(bufferLength + n);\n    for (i = 0; i < n; i++) {\n      buffer[bufferLength++] = chunk[i];\n    }\n    this.bufferLength = bufferLength;\n  };\n  return DecryptStream;\n}();\nvar Ascii85Stream = function Ascii85StreamClosure() {\n  function Ascii85Stream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.input = new Uint8Array(5);\n    if (maybeLength) {\n      maybeLength = 0.8 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n  Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n    var TILDA_CHAR = 0x7E;\n    var Z_LOWER_CHAR = 0x7A;\n    var EOF = -1;\n    var str = this.str;\n    var c = str.getByte();\n    while ((0, _util.isSpace)(c)) {\n      c = str.getByte();\n    }\n    if (c === EOF || c === TILDA_CHAR) {\n      this.eof = true;\n      return;\n    }\n    var bufferLength = this.bufferLength,\n        buffer;\n    var i;\n    if (c === Z_LOWER_CHAR) {\n      buffer = this.ensureBuffer(bufferLength + 4);\n      for (i = 0; i < 4; ++i) {\n        buffer[bufferLength + i] = 0;\n      }\n      this.bufferLength += 4;\n    } else {\n      var input = this.input;\n      input[0] = c;\n      for (i = 1; i < 5; ++i) {\n        c = str.getByte();\n        while ((0, _util.isSpace)(c)) {\n          c = str.getByte();\n        }\n        input[i] = c;\n        if (c === EOF || c === TILDA_CHAR) {\n          break;\n        }\n      }\n      buffer = this.ensureBuffer(bufferLength + i - 1);\n      this.bufferLength += i - 1;\n      if (i < 5) {\n        for (; i < 5; ++i) {\n          input[i] = 0x21 + 84;\n        }\n        this.eof = true;\n      }\n      var t = 0;\n      for (i = 0; i < 5; ++i) {\n        t = t * 85 + (input[i] - 0x21);\n      }\n      for (i = 3; i >= 0; --i) {\n        buffer[bufferLength + i] = t & 0xFF;\n        t >>= 8;\n      }\n    }\n  };\n  return Ascii85Stream;\n}();\nvar AsciiHexStream = function AsciiHexStreamClosure() {\n  function AsciiHexStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.firstDigit = -1;\n    if (maybeLength) {\n      maybeLength = 0.5 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n  AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n    var UPSTREAM_BLOCK_SIZE = 8000;\n    var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n    if (!bytes.length) {\n      this.eof = true;\n      return;\n    }\n    var maxDecodeLength = bytes.length + 1 >> 1;\n    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n    var bufferLength = this.bufferLength;\n    var firstDigit = this.firstDigit;\n    for (var i = 0, ii = bytes.length; i < ii; i++) {\n      var ch = bytes[i],\n          digit;\n      if (ch >= 0x30 && ch <= 0x39) {\n        digit = ch & 0x0F;\n      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n        digit = (ch & 0x0F) + 9;\n      } else if (ch === 0x3E) {\n        this.eof = true;\n        break;\n      } else {\n        continue;\n      }\n      if (firstDigit < 0) {\n        firstDigit = digit;\n      } else {\n        buffer[bufferLength++] = firstDigit << 4 | digit;\n        firstDigit = -1;\n      }\n    }\n    if (firstDigit >= 0 && this.eof) {\n      buffer[bufferLength++] = firstDigit << 4;\n      firstDigit = -1;\n    }\n    this.firstDigit = firstDigit;\n    this.bufferLength = bufferLength;\n  };\n  return AsciiHexStream;\n}();\nvar RunLengthStream = function RunLengthStreamClosure() {\n  function RunLengthStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    DecodeStream.call(this, maybeLength);\n  }\n  RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n  RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n    var repeatHeader = this.str.getBytes(2);\n    if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n      this.eof = true;\n      return;\n    }\n    var buffer;\n    var bufferLength = this.bufferLength;\n    var n = repeatHeader[0];\n    if (n < 128) {\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      buffer[bufferLength++] = repeatHeader[1];\n      if (n > 0) {\n        var source = this.str.getBytes(n);\n        buffer.set(source, bufferLength);\n        bufferLength += n;\n      }\n    } else {\n      n = 257 - n;\n      var b = repeatHeader[1];\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      for (var i = 0; i < n; i++) {\n        buffer[bufferLength++] = b;\n      }\n    }\n    this.bufferLength = bufferLength;\n  };\n  return RunLengthStream;\n}();\nvar LZWStream = function LZWStreamClosure() {\n  function LZWStream(str, maybeLength, earlyChange) {\n    this.str = str;\n    this.dict = str.dict;\n    this.cachedData = 0;\n    this.bitsCached = 0;\n    var maxLzwDictionarySize = 4096;\n    var lzwState = {\n      earlyChange: earlyChange,\n      codeLength: 9,\n      nextCode: 258,\n      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n      currentSequence: new Uint8Array(maxLzwDictionarySize),\n      currentSequenceLength: 0\n    };\n    for (var i = 0; i < 256; ++i) {\n      lzwState.dictionaryValues[i] = i;\n      lzwState.dictionaryLengths[i] = 1;\n    }\n    this.lzwState = lzwState;\n    DecodeStream.call(this, maybeLength);\n  }\n  LZWStream.prototype = Object.create(DecodeStream.prototype);\n  LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n    var bitsCached = this.bitsCached;\n    var cachedData = this.cachedData;\n    while (bitsCached < n) {\n      var c = this.str.getByte();\n      if (c === -1) {\n        this.eof = true;\n        return null;\n      }\n      cachedData = cachedData << 8 | c;\n      bitsCached += 8;\n    }\n    this.bitsCached = bitsCached -= n;\n    this.cachedData = cachedData;\n    this.lastCode = null;\n    return cachedData >>> bitsCached & (1 << n) - 1;\n  };\n  LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n    var blockSize = 512;\n    var estimatedDecodedSize = blockSize * 2,\n        decodedSizeDelta = blockSize;\n    var i, j, q;\n    var lzwState = this.lzwState;\n    if (!lzwState) {\n      return;\n    }\n    var earlyChange = lzwState.earlyChange;\n    var nextCode = lzwState.nextCode;\n    var dictionaryValues = lzwState.dictionaryValues;\n    var dictionaryLengths = lzwState.dictionaryLengths;\n    var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n    var codeLength = lzwState.codeLength;\n    var prevCode = lzwState.prevCode;\n    var currentSequence = lzwState.currentSequence;\n    var currentSequenceLength = lzwState.currentSequenceLength;\n    var decodedLength = 0;\n    var currentBufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n    for (i = 0; i < blockSize; i++) {\n      var code = this.readBits(codeLength);\n      var hasPrev = currentSequenceLength > 0;\n      if (code < 256) {\n        currentSequence[0] = code;\n        currentSequenceLength = 1;\n      } else if (code >= 258) {\n        if (code < nextCode) {\n          currentSequenceLength = dictionaryLengths[code];\n          for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n            currentSequence[j] = dictionaryValues[q];\n            q = dictionaryPrevCodes[q];\n          }\n        } else {\n          currentSequence[currentSequenceLength++] = currentSequence[0];\n        }\n      } else if (code === 256) {\n        codeLength = 9;\n        nextCode = 258;\n        currentSequenceLength = 0;\n        continue;\n      } else {\n        this.eof = true;\n        delete this.lzwState;\n        break;\n      }\n      if (hasPrev) {\n        dictionaryPrevCodes[nextCode] = prevCode;\n        dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n        dictionaryValues[nextCode] = currentSequence[0];\n        nextCode++;\n        codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n      }\n      prevCode = code;\n      decodedLength += currentSequenceLength;\n      if (estimatedDecodedSize < decodedLength) {\n        do {\n          estimatedDecodedSize += decodedSizeDelta;\n        } while (estimatedDecodedSize < decodedLength);\n        buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n      }\n      for (j = 0; j < currentSequenceLength; j++) {\n        buffer[currentBufferLength++] = currentSequence[j];\n      }\n    }\n    lzwState.nextCode = nextCode;\n    lzwState.codeLength = codeLength;\n    lzwState.prevCode = prevCode;\n    lzwState.currentSequenceLength = currentSequenceLength;\n    this.bufferLength = currentBufferLength;\n  };\n  return LZWStream;\n}();\nvar NullStream = function NullStreamClosure() {\n  function NullStream() {\n    Stream.call(this, new Uint8Array(0));\n  }\n  NullStream.prototype = Stream.prototype;\n  return NullStream;\n}();\nexports.Ascii85Stream = Ascii85Stream;\nexports.AsciiHexStream = AsciiHexStream;\nexports.DecryptStream = DecryptStream;\nexports.DecodeStream = DecodeStream;\nexports.FlateStream = FlateStream;\nexports.NullStream = NullStream;\nexports.PredictorStream = PredictorStream;\nexports.RunLengthStream = RunLengthStream;\nexports.Stream = Stream;\nexports.StreamsSequenceStream = StreamsSequenceStream;\nexports.StringStream = StringStream;\nexports.LZWStream = LZWStream;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/stream.js\n// module id = kbxB\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = undefined;\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = require('../shared/util');\n\nvar _obj = require('./obj');\n\nvar _primitives = require('./primitives');\n\nvar _colorspace = require('./colorspace');\n\nvar _operator_list = require('./operator_list');\n\nvar _stream = require('./stream');\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AnnotationFactory = function () {\n  function AnnotationFactory() {\n    _classCallCheck(this, AnnotationFactory);\n  }\n\n  _createClass(AnnotationFactory, null, [{\n    key: 'create',\n    value: function create(xref, ref, pdfManager, idFactory) {\n      var dict = xref.fetchIfRef(ref);\n      if (!(0, _primitives.isDict)(dict)) {\n        return;\n      }\n      var id = (0, _primitives.isRef)(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n      var subtype = dict.get('Subtype');\n      subtype = (0, _primitives.isName)(subtype) ? subtype.name : null;\n      var parameters = {\n        xref: xref,\n        dict: dict,\n        ref: (0, _primitives.isRef)(ref) ? ref : null,\n        subtype: subtype,\n        id: id,\n        pdfManager: pdfManager\n      };\n      switch (subtype) {\n        case 'Link':\n          return new LinkAnnotation(parameters);\n        case 'Text':\n          return new TextAnnotation(parameters);\n        case 'Widget':\n          var fieldType = (0, _util.getInheritableProperty)({\n            dict: dict,\n            key: 'FT'\n          });\n          fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n          switch (fieldType) {\n            case 'Tx':\n              return new TextWidgetAnnotation(parameters);\n            case 'Btn':\n              return new ButtonWidgetAnnotation(parameters);\n            case 'Ch':\n              return new ChoiceWidgetAnnotation(parameters);\n          }\n          (0, _util.warn)('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n          return new WidgetAnnotation(parameters);\n        case 'Popup':\n          return new PopupAnnotation(parameters);\n        case 'Line':\n          return new LineAnnotation(parameters);\n        case 'Square':\n          return new SquareAnnotation(parameters);\n        case 'Circle':\n          return new CircleAnnotation(parameters);\n        case 'PolyLine':\n          return new PolylineAnnotation(parameters);\n        case 'Polygon':\n          return new PolygonAnnotation(parameters);\n        case 'Highlight':\n          return new HighlightAnnotation(parameters);\n        case 'Underline':\n          return new UnderlineAnnotation(parameters);\n        case 'Squiggly':\n          return new SquigglyAnnotation(parameters);\n        case 'StrikeOut':\n          return new StrikeOutAnnotation(parameters);\n        case 'Stamp':\n          return new StampAnnotation(parameters);\n        case 'FileAttachment':\n          return new FileAttachmentAnnotation(parameters);\n        default:\n          if (!subtype) {\n            (0, _util.warn)('Annotation is missing the required /Subtype.');\n          } else {\n            (0, _util.warn)('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n          }\n          return new Annotation(parameters);\n      }\n    }\n  }]);\n\n  return AnnotationFactory;\n}();\n\nfunction getTransformMatrix(rect, bbox, matrix) {\n  var bounds = _util.Util.getAxialAlignedBoundingBox(bbox, matrix);\n  var minX = bounds[0];\n  var minY = bounds[1];\n  var maxX = bounds[2];\n  var maxY = bounds[3];\n  if (minX === maxX || minY === maxY) {\n    return [1, 0, 0, 1, rect[0], rect[1]];\n  }\n  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n  return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio];\n}\n\nvar Annotation = function () {\n  function Annotation(params) {\n    _classCallCheck(this, Annotation);\n\n    var dict = params.dict;\n    this.setFlags(dict.get('F'));\n    this.setRectangle(dict.getArray('Rect'));\n    this.setColor(dict.getArray('C'));\n    this.setBorderStyle(dict);\n    this.setAppearance(dict);\n    this.data = {\n      annotationFlags: this.flags,\n      borderStyle: this.borderStyle,\n      color: this.color,\n      hasAppearance: !!this.appearance,\n      id: params.id,\n      rect: this.rectangle,\n      subtype: params.subtype\n    };\n  }\n\n  _createClass(Annotation, [{\n    key: '_hasFlag',\n    value: function _hasFlag(flags, flag) {\n      return !!(flags & flag);\n    }\n  }, {\n    key: '_isViewable',\n    value: function _isViewable(flags) {\n      return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW);\n    }\n  }, {\n    key: '_isPrintable',\n    value: function _isPrintable(flags) {\n      return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN);\n    }\n  }, {\n    key: 'setFlags',\n    value: function setFlags(flags) {\n      this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0;\n    }\n  }, {\n    key: 'hasFlag',\n    value: function hasFlag(flag) {\n      return this._hasFlag(this.flags, flag);\n    }\n  }, {\n    key: 'setRectangle',\n    value: function setRectangle(rectangle) {\n      if (Array.isArray(rectangle) && rectangle.length === 4) {\n        this.rectangle = _util.Util.normalizeRect(rectangle);\n      } else {\n        this.rectangle = [0, 0, 0, 0];\n      }\n    }\n  }, {\n    key: 'setColor',\n    value: function setColor(color) {\n      var rgbColor = new Uint8Array(3);\n      if (!Array.isArray(color)) {\n        this.color = rgbColor;\n        return;\n      }\n      switch (color.length) {\n        case 0:\n          this.color = null;\n          break;\n        case 1:\n          _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 3:\n          _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 4:\n          _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        default:\n          this.color = rgbColor;\n          break;\n      }\n    }\n  }, {\n    key: 'setBorderStyle',\n    value: function setBorderStyle(borderStyle) {\n      this.borderStyle = new AnnotationBorderStyle();\n      if (!(0, _primitives.isDict)(borderStyle)) {\n        return;\n      }\n      if (borderStyle.has('BS')) {\n        var dict = borderStyle.get('BS');\n        var dictType = dict.get('Type');\n        if (!dictType || (0, _primitives.isName)(dictType, 'Border')) {\n          this.borderStyle.setWidth(dict.get('W'));\n          this.borderStyle.setStyle(dict.get('S'));\n          this.borderStyle.setDashArray(dict.getArray('D'));\n        }\n      } else if (borderStyle.has('Border')) {\n        var array = borderStyle.getArray('Border');\n        if (Array.isArray(array) && array.length >= 3) {\n          this.borderStyle.setHorizontalCornerRadius(array[0]);\n          this.borderStyle.setVerticalCornerRadius(array[1]);\n          this.borderStyle.setWidth(array[2]);\n          if (array.length === 4) {\n            this.borderStyle.setDashArray(array[3]);\n          }\n        }\n      } else {\n        this.borderStyle.setWidth(0);\n      }\n    }\n  }, {\n    key: 'setAppearance',\n    value: function setAppearance(dict) {\n      this.appearance = null;\n      var appearanceStates = dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if ((0, _primitives.isStream)(normalAppearanceState)) {\n        this.appearance = normalAppearanceState;\n        return;\n      }\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var as = dict.get('AS');\n      if (!(0, _primitives.isName)(as) || !normalAppearanceState.has(as.name)) {\n        return;\n      }\n      this.appearance = normalAppearanceState.get(as.name);\n    }\n  }, {\n    key: '_preparePopup',\n    value: function _preparePopup(dict) {\n      if (!dict.has('C')) {\n        this.data.color = null;\n      }\n      this.data.hasPopup = dict.has('Popup');\n      this.data.title = (0, _util.stringToPDFString)(dict.get('T') || '');\n      this.data.contents = (0, _util.stringToPDFString)(dict.get('Contents') || '');\n    }\n  }, {\n    key: 'loadResources',\n    value: function loadResources(keys) {\n      return this.appearance.dict.getAsync('Resources').then(function (resources) {\n        if (!resources) {\n          return;\n        }\n        var objectLoader = new _obj.ObjectLoader(resources, keys, resources.xref);\n        return objectLoader.load().then(function () {\n          return resources;\n        });\n      });\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      var _this = this;\n\n      if (!this.appearance) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      var data = this.data;\n      var appearanceDict = this.appearance.dict;\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var bbox = appearanceDict.getArray('BBox') || [0, 0, 1, 1];\n      var matrix = appearanceDict.getArray('Matrix') || [1, 0, 0, 1, 0, 0];\n      var transform = getTransformMatrix(data.rect, bbox, matrix);\n      return resourcesPromise.then(function (resources) {\n        var opList = new _operator_list.OperatorList();\n        opList.addOp(_util.OPS.beginAnnotation, [data.rect, transform, matrix]);\n        return evaluator.getOperatorList({\n          stream: _this.appearance,\n          task: task,\n          resources: resources,\n          operatorList: opList\n        }).then(function () {\n          opList.addOp(_util.OPS.endAnnotation, []);\n          _this.appearance.reset();\n          return opList;\n        });\n      });\n    }\n  }, {\n    key: 'viewable',\n    get: function get() {\n      if (this.flags === 0) {\n        return true;\n      }\n      return this._isViewable(this.flags);\n    }\n  }, {\n    key: 'printable',\n    get: function get() {\n      if (this.flags === 0) {\n        return false;\n      }\n      return this._isPrintable(this.flags);\n    }\n  }]);\n\n  return Annotation;\n}();\n\nvar AnnotationBorderStyle = function () {\n  function AnnotationBorderStyle() {\n    _classCallCheck(this, AnnotationBorderStyle);\n\n    this.width = 1;\n    this.style = _util.AnnotationBorderStyleType.SOLID;\n    this.dashArray = [3];\n    this.horizontalCornerRadius = 0;\n    this.verticalCornerRadius = 0;\n  }\n\n  _createClass(AnnotationBorderStyle, [{\n    key: 'setWidth',\n    value: function setWidth(width) {\n      if (Number.isInteger(width)) {\n        this.width = width;\n      }\n    }\n  }, {\n    key: 'setStyle',\n    value: function setStyle(style) {\n      if (!style) {\n        return;\n      }\n      switch (style.name) {\n        case 'S':\n          this.style = _util.AnnotationBorderStyleType.SOLID;\n          break;\n        case 'D':\n          this.style = _util.AnnotationBorderStyleType.DASHED;\n          break;\n        case 'B':\n          this.style = _util.AnnotationBorderStyleType.BEVELED;\n          break;\n        case 'I':\n          this.style = _util.AnnotationBorderStyleType.INSET;\n          break;\n        case 'U':\n          this.style = _util.AnnotationBorderStyleType.UNDERLINE;\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'setDashArray',\n    value: function setDashArray(dashArray) {\n      if (Array.isArray(dashArray) && dashArray.length > 0) {\n        var isValid = true;\n        var allZeros = true;\n        for (var i = 0, len = dashArray.length; i < len; i++) {\n          var element = dashArray[i];\n          var validNumber = +element >= 0;\n          if (!validNumber) {\n            isValid = false;\n            break;\n          } else if (element > 0) {\n            allZeros = false;\n          }\n        }\n        if (isValid && !allZeros) {\n          this.dashArray = dashArray;\n        } else {\n          this.width = 0;\n        }\n      } else if (dashArray) {\n        this.width = 0;\n      }\n    }\n  }, {\n    key: 'setHorizontalCornerRadius',\n    value: function setHorizontalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.horizontalCornerRadius = radius;\n      }\n    }\n  }, {\n    key: 'setVerticalCornerRadius',\n    value: function setVerticalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.verticalCornerRadius = radius;\n      }\n    }\n  }]);\n\n  return AnnotationBorderStyle;\n}();\n\nvar WidgetAnnotation = function (_Annotation) {\n  _inherits(WidgetAnnotation, _Annotation);\n\n  function WidgetAnnotation(params) {\n    _classCallCheck(this, WidgetAnnotation);\n\n    var _this2 = _possibleConstructorReturn(this, (WidgetAnnotation.__proto__ || Object.getPrototypeOf(WidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    var data = _this2.data;\n    data.annotationType = _util.AnnotationType.WIDGET;\n    data.fieldName = _this2._constructFieldName(dict);\n    data.fieldValue = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'V',\n      getArray: true\n    });\n    data.alternativeText = (0, _util.stringToPDFString)(dict.get('TU') || '');\n    data.defaultAppearance = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'DA'\n    }) || '';\n    var fieldType = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'FT'\n    });\n    data.fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n    _this2.fieldResources = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'DR'\n    }) || _primitives.Dict.empty;\n    data.fieldFlags = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'Ff'\n    });\n    if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) {\n      data.fieldFlags = 0;\n    }\n    data.readOnly = _this2.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);\n    if (data.fieldType === 'Sig') {\n      _this2.setFlags(_util.AnnotationFlag.HIDDEN);\n    }\n    return _this2;\n  }\n\n  _createClass(WidgetAnnotation, [{\n    key: '_constructFieldName',\n    value: function _constructFieldName(dict) {\n      if (!dict.has('T') && !dict.has('Parent')) {\n        (0, _util.warn)('Unknown field name, falling back to empty field name.');\n        return '';\n      }\n      if (!dict.has('Parent')) {\n        return (0, _util.stringToPDFString)(dict.get('T'));\n      }\n      var fieldName = [];\n      if (dict.has('T')) {\n        fieldName.unshift((0, _util.stringToPDFString)(dict.get('T')));\n      }\n      var loopDict = dict;\n      while (loopDict.has('Parent')) {\n        loopDict = loopDict.get('Parent');\n        if (!(0, _primitives.isDict)(loopDict)) {\n          break;\n        }\n        if (loopDict.has('T')) {\n          fieldName.unshift((0, _util.stringToPDFString)(loopDict.get('T')));\n        }\n      }\n      return fieldName.join('.');\n    }\n  }, {\n    key: 'hasFieldFlag',\n    value: function hasFieldFlag(flag) {\n      return !!(this.data.fieldFlags & flag);\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      return _get(WidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(WidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n    }\n  }]);\n\n  return WidgetAnnotation;\n}(Annotation);\n\nvar TextWidgetAnnotation = function (_WidgetAnnotation) {\n  _inherits(TextWidgetAnnotation, _WidgetAnnotation);\n\n  function TextWidgetAnnotation(params) {\n    _classCallCheck(this, TextWidgetAnnotation);\n\n    var _this3 = _possibleConstructorReturn(this, (TextWidgetAnnotation.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    _this3.data.fieldValue = (0, _util.stringToPDFString)(_this3.data.fieldValue || '');\n    var alignment = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'Q'\n    });\n    if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) {\n      alignment = null;\n    }\n    _this3.data.textAlignment = alignment;\n    var maximumLength = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'MaxLen'\n    });\n    if (!Number.isInteger(maximumLength) || maximumLength < 0) {\n      maximumLength = null;\n    }\n    _this3.data.maxLen = maximumLength;\n    _this3.data.multiLine = _this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);\n    _this3.data.comb = _this3.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && _this3.data.maxLen !== null;\n    return _this3;\n  }\n\n  _createClass(TextWidgetAnnotation, [{\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms || this.appearance) {\n        return _get(TextWidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n      }\n      var operatorList = new _operator_list.OperatorList();\n      if (!this.data.defaultAppearance) {\n        return Promise.resolve(operatorList);\n      }\n      var stream = new _stream.Stream((0, _util.stringToBytes)(this.data.defaultAppearance));\n      return evaluator.getOperatorList({\n        stream: stream,\n        task: task,\n        resources: this.fieldResources,\n        operatorList: operatorList\n      }).then(function () {\n        return operatorList;\n      });\n    }\n  }]);\n\n  return TextWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ButtonWidgetAnnotation = function (_WidgetAnnotation2) {\n  _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);\n\n  function ButtonWidgetAnnotation(params) {\n    _classCallCheck(this, ButtonWidgetAnnotation);\n\n    var _this4 = _possibleConstructorReturn(this, (ButtonWidgetAnnotation.__proto__ || Object.getPrototypeOf(ButtonWidgetAnnotation)).call(this, params));\n\n    _this4.data.checkBox = !_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.radioButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.pushButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    if (_this4.data.checkBox) {\n      _this4._processCheckBox();\n    } else if (_this4.data.radioButton) {\n      _this4._processRadioButton(params);\n    } else if (_this4.data.pushButton) {\n      _this4._processPushButton(params);\n    } else {\n      (0, _util.warn)('Invalid field flags for button widget annotation');\n    }\n    return _this4;\n  }\n\n  _createClass(ButtonWidgetAnnotation, [{\n    key: '_processCheckBox',\n    value: function _processCheckBox() {\n      if (!(0, _primitives.isName)(this.data.fieldValue)) {\n        return;\n      }\n      this.data.fieldValue = this.data.fieldValue.name;\n    }\n  }, {\n    key: '_processRadioButton',\n    value: function _processRadioButton(params) {\n      this.data.fieldValue = this.data.buttonValue = null;\n      var fieldParent = params.dict.get('Parent');\n      if ((0, _primitives.isDict)(fieldParent) && fieldParent.has('V')) {\n        var fieldParentValue = fieldParent.get('V');\n        if ((0, _primitives.isName)(fieldParentValue)) {\n          this.data.fieldValue = fieldParentValue.name;\n        }\n      }\n      var appearanceStates = params.dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var keys = normalAppearanceState.getKeys();\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        if (keys[i] !== 'Off') {\n          this.data.buttonValue = keys[i];\n          break;\n        }\n      }\n    }\n  }, {\n    key: '_processPushButton',\n    value: function _processPushButton(params) {\n      if (!params.dict.has('A')) {\n        (0, _util.warn)('Push buttons without action dictionaries are not supported');\n        return;\n      }\n      _obj.Catalog.parseDestDictionary({\n        destDict: params.dict,\n        resultObj: this.data,\n        docBaseUrl: params.pdfManager.docBaseUrl\n      });\n    }\n  }]);\n\n  return ButtonWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ChoiceWidgetAnnotation = function (_WidgetAnnotation3) {\n  _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);\n\n  function ChoiceWidgetAnnotation(params) {\n    _classCallCheck(this, ChoiceWidgetAnnotation);\n\n    var _this5 = _possibleConstructorReturn(this, (ChoiceWidgetAnnotation.__proto__ || Object.getPrototypeOf(ChoiceWidgetAnnotation)).call(this, params));\n\n    _this5.data.options = [];\n    var options = (0, _util.getInheritableProperty)({\n      dict: params.dict,\n      key: 'Opt'\n    });\n    if (Array.isArray(options)) {\n      var xref = params.xref;\n      for (var i = 0, ii = options.length; i < ii; i++) {\n        var option = xref.fetchIfRef(options[i]);\n        var isOptionArray = Array.isArray(option);\n        _this5.data.options[i] = {\n          exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n          displayValue: (0, _util.stringToPDFString)(isOptionArray ? xref.fetchIfRef(option[1]) : option)\n        };\n      }\n    }\n    if (!Array.isArray(_this5.data.fieldValue)) {\n      _this5.data.fieldValue = [_this5.data.fieldValue];\n    }\n    _this5.data.combo = _this5.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);\n    _this5.data.multiSelect = _this5.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);\n    return _this5;\n  }\n\n  return ChoiceWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar TextAnnotation = function (_Annotation2) {\n  _inherits(TextAnnotation, _Annotation2);\n\n  function TextAnnotation(parameters) {\n    _classCallCheck(this, TextAnnotation);\n\n    var DEFAULT_ICON_SIZE = 22;\n\n    var _this6 = _possibleConstructorReturn(this, (TextAnnotation.__proto__ || Object.getPrototypeOf(TextAnnotation)).call(this, parameters));\n\n    _this6.data.annotationType = _util.AnnotationType.TEXT;\n    if (_this6.data.hasAppearance) {\n      _this6.data.name = 'NoIcon';\n    } else {\n      _this6.data.rect[1] = _this6.data.rect[3] - DEFAULT_ICON_SIZE;\n      _this6.data.rect[2] = _this6.data.rect[0] + DEFAULT_ICON_SIZE;\n      _this6.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n    }\n    _this6._preparePopup(parameters.dict);\n    return _this6;\n  }\n\n  return TextAnnotation;\n}(Annotation);\n\nvar LinkAnnotation = function (_Annotation3) {\n  _inherits(LinkAnnotation, _Annotation3);\n\n  function LinkAnnotation(params) {\n    _classCallCheck(this, LinkAnnotation);\n\n    var _this7 = _possibleConstructorReturn(this, (LinkAnnotation.__proto__ || Object.getPrototypeOf(LinkAnnotation)).call(this, params));\n\n    _this7.data.annotationType = _util.AnnotationType.LINK;\n    _obj.Catalog.parseDestDictionary({\n      destDict: params.dict,\n      resultObj: _this7.data,\n      docBaseUrl: params.pdfManager.docBaseUrl\n    });\n    return _this7;\n  }\n\n  return LinkAnnotation;\n}(Annotation);\n\nvar PopupAnnotation = function (_Annotation4) {\n  _inherits(PopupAnnotation, _Annotation4);\n\n  function PopupAnnotation(parameters) {\n    _classCallCheck(this, PopupAnnotation);\n\n    var _this8 = _possibleConstructorReturn(this, (PopupAnnotation.__proto__ || Object.getPrototypeOf(PopupAnnotation)).call(this, parameters));\n\n    _this8.data.annotationType = _util.AnnotationType.POPUP;\n    var dict = parameters.dict;\n    var parentItem = dict.get('Parent');\n    if (!parentItem) {\n      (0, _util.warn)('Popup annotation has a missing or invalid parent annotation.');\n      return _possibleConstructorReturn(_this8);\n    }\n    var parentSubtype = parentItem.get('Subtype');\n    _this8.data.parentType = (0, _primitives.isName)(parentSubtype) ? parentSubtype.name : null;\n    _this8.data.parentId = dict.getRaw('Parent').toString();\n    _this8.data.title = (0, _util.stringToPDFString)(parentItem.get('T') || '');\n    _this8.data.contents = (0, _util.stringToPDFString)(parentItem.get('Contents') || '');\n    if (!parentItem.has('C')) {\n      _this8.data.color = null;\n    } else {\n      _this8.setColor(parentItem.getArray('C'));\n      _this8.data.color = _this8.color;\n    }\n    if (!_this8.viewable) {\n      var parentFlags = parentItem.get('F');\n      if (_this8._isViewable(parentFlags)) {\n        _this8.setFlags(parentFlags);\n      }\n    }\n    return _this8;\n  }\n\n  return PopupAnnotation;\n}(Annotation);\n\nvar LineAnnotation = function (_Annotation5) {\n  _inherits(LineAnnotation, _Annotation5);\n\n  function LineAnnotation(parameters) {\n    _classCallCheck(this, LineAnnotation);\n\n    var _this9 = _possibleConstructorReturn(this, (LineAnnotation.__proto__ || Object.getPrototypeOf(LineAnnotation)).call(this, parameters));\n\n    _this9.data.annotationType = _util.AnnotationType.LINE;\n    var dict = parameters.dict;\n    _this9.data.lineCoordinates = _util.Util.normalizeRect(dict.getArray('L'));\n    _this9._preparePopup(dict);\n    return _this9;\n  }\n\n  return LineAnnotation;\n}(Annotation);\n\nvar SquareAnnotation = function (_Annotation6) {\n  _inherits(SquareAnnotation, _Annotation6);\n\n  function SquareAnnotation(parameters) {\n    _classCallCheck(this, SquareAnnotation);\n\n    var _this10 = _possibleConstructorReturn(this, (SquareAnnotation.__proto__ || Object.getPrototypeOf(SquareAnnotation)).call(this, parameters));\n\n    _this10.data.annotationType = _util.AnnotationType.SQUARE;\n    _this10._preparePopup(parameters.dict);\n    return _this10;\n  }\n\n  return SquareAnnotation;\n}(Annotation);\n\nvar CircleAnnotation = function (_Annotation7) {\n  _inherits(CircleAnnotation, _Annotation7);\n\n  function CircleAnnotation(parameters) {\n    _classCallCheck(this, CircleAnnotation);\n\n    var _this11 = _possibleConstructorReturn(this, (CircleAnnotation.__proto__ || Object.getPrototypeOf(CircleAnnotation)).call(this, parameters));\n\n    _this11.data.annotationType = _util.AnnotationType.CIRCLE;\n    _this11._preparePopup(parameters.dict);\n    return _this11;\n  }\n\n  return CircleAnnotation;\n}(Annotation);\n\nvar PolylineAnnotation = function (_Annotation8) {\n  _inherits(PolylineAnnotation, _Annotation8);\n\n  function PolylineAnnotation(parameters) {\n    _classCallCheck(this, PolylineAnnotation);\n\n    var _this12 = _possibleConstructorReturn(this, (PolylineAnnotation.__proto__ || Object.getPrototypeOf(PolylineAnnotation)).call(this, parameters));\n\n    _this12.data.annotationType = _util.AnnotationType.POLYLINE;\n    var dict = parameters.dict;\n    var rawVertices = dict.getArray('Vertices');\n    _this12.data.vertices = [];\n    for (var i = 0, ii = rawVertices.length; i < ii; i += 2) {\n      _this12.data.vertices.push({\n        x: rawVertices[i],\n        y: rawVertices[i + 1]\n      });\n    }\n    _this12._preparePopup(dict);\n    return _this12;\n  }\n\n  return PolylineAnnotation;\n}(Annotation);\n\nvar PolygonAnnotation = function (_PolylineAnnotation) {\n  _inherits(PolygonAnnotation, _PolylineAnnotation);\n\n  function PolygonAnnotation(parameters) {\n    _classCallCheck(this, PolygonAnnotation);\n\n    var _this13 = _possibleConstructorReturn(this, (PolygonAnnotation.__proto__ || Object.getPrototypeOf(PolygonAnnotation)).call(this, parameters));\n\n    _this13.data.annotationType = _util.AnnotationType.POLYGON;\n    return _this13;\n  }\n\n  return PolygonAnnotation;\n}(PolylineAnnotation);\n\nvar HighlightAnnotation = function (_Annotation9) {\n  _inherits(HighlightAnnotation, _Annotation9);\n\n  function HighlightAnnotation(parameters) {\n    _classCallCheck(this, HighlightAnnotation);\n\n    var _this14 = _possibleConstructorReturn(this, (HighlightAnnotation.__proto__ || Object.getPrototypeOf(HighlightAnnotation)).call(this, parameters));\n\n    _this14.data.annotationType = _util.AnnotationType.HIGHLIGHT;\n    _this14._preparePopup(parameters.dict);\n    return _this14;\n  }\n\n  return HighlightAnnotation;\n}(Annotation);\n\nvar UnderlineAnnotation = function (_Annotation10) {\n  _inherits(UnderlineAnnotation, _Annotation10);\n\n  function UnderlineAnnotation(parameters) {\n    _classCallCheck(this, UnderlineAnnotation);\n\n    var _this15 = _possibleConstructorReturn(this, (UnderlineAnnotation.__proto__ || Object.getPrototypeOf(UnderlineAnnotation)).call(this, parameters));\n\n    _this15.data.annotationType = _util.AnnotationType.UNDERLINE;\n    _this15._preparePopup(parameters.dict);\n    return _this15;\n  }\n\n  return UnderlineAnnotation;\n}(Annotation);\n\nvar SquigglyAnnotation = function (_Annotation11) {\n  _inherits(SquigglyAnnotation, _Annotation11);\n\n  function SquigglyAnnotation(parameters) {\n    _classCallCheck(this, SquigglyAnnotation);\n\n    var _this16 = _possibleConstructorReturn(this, (SquigglyAnnotation.__proto__ || Object.getPrototypeOf(SquigglyAnnotation)).call(this, parameters));\n\n    _this16.data.annotationType = _util.AnnotationType.SQUIGGLY;\n    _this16._preparePopup(parameters.dict);\n    return _this16;\n  }\n\n  return SquigglyAnnotation;\n}(Annotation);\n\nvar StrikeOutAnnotation = function (_Annotation12) {\n  _inherits(StrikeOutAnnotation, _Annotation12);\n\n  function StrikeOutAnnotation(parameters) {\n    _classCallCheck(this, StrikeOutAnnotation);\n\n    var _this17 = _possibleConstructorReturn(this, (StrikeOutAnnotation.__proto__ || Object.getPrototypeOf(StrikeOutAnnotation)).call(this, parameters));\n\n    _this17.data.annotationType = _util.AnnotationType.STRIKEOUT;\n    _this17._preparePopup(parameters.dict);\n    return _this17;\n  }\n\n  return StrikeOutAnnotation;\n}(Annotation);\n\nvar StampAnnotation = function (_Annotation13) {\n  _inherits(StampAnnotation, _Annotation13);\n\n  function StampAnnotation(parameters) {\n    _classCallCheck(this, StampAnnotation);\n\n    var _this18 = _possibleConstructorReturn(this, (StampAnnotation.__proto__ || Object.getPrototypeOf(StampAnnotation)).call(this, parameters));\n\n    _this18.data.annotationType = _util.AnnotationType.STAMP;\n    _this18._preparePopup(parameters.dict);\n    return _this18;\n  }\n\n  return StampAnnotation;\n}(Annotation);\n\nvar FileAttachmentAnnotation = function (_Annotation14) {\n  _inherits(FileAttachmentAnnotation, _Annotation14);\n\n  function FileAttachmentAnnotation(parameters) {\n    _classCallCheck(this, FileAttachmentAnnotation);\n\n    var _this19 = _possibleConstructorReturn(this, (FileAttachmentAnnotation.__proto__ || Object.getPrototypeOf(FileAttachmentAnnotation)).call(this, parameters));\n\n    var file = new _obj.FileSpec(parameters.dict.get('FS'), parameters.xref);\n    _this19.data.annotationType = _util.AnnotationType.FILEATTACHMENT;\n    _this19.data.file = file.serializable;\n    _this19._preparePopup(parameters.dict);\n    return _this19;\n  }\n\n  return FileAttachmentAnnotation;\n}(Annotation);\n\nexports.Annotation = Annotation;\nexports.AnnotationBorderStyle = AnnotationBorderStyle;\nexports.AnnotationFactory = AnnotationFactory;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/annotation.js\n// module id = m9J8\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegImage = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = require('../shared/util');\n\nvar JpegError = function JpegErrorClosure() {\n  function JpegError(msg) {\n    this.message = 'JPEG error: ' + msg;\n  }\n  JpegError.prototype = new Error();\n  JpegError.prototype.name = 'JpegError';\n  JpegError.constructor = JpegError;\n  return JpegError;\n}();\nvar DNLMarkerError = function DNLMarkerErrorClosure() {\n  function DNLMarkerError(message, scanLines) {\n    this.message = message;\n    this.scanLines = scanLines;\n  }\n  DNLMarkerError.prototype = new Error();\n  DNLMarkerError.prototype.name = 'DNLMarkerError';\n  DNLMarkerError.constructor = DNLMarkerError;\n  return DNLMarkerError;\n}();\nvar JpegImage = function JpegImageClosure() {\n  var dctZigZag = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\n  var dctCos1 = 4017;\n  var dctSin1 = 799;\n  var dctCos3 = 3406;\n  var dctSin3 = 2276;\n  var dctCos6 = 1567;\n  var dctSin6 = 3784;\n  var dctSqrt2 = 5793;\n  var dctSqrt1d2 = 2896;\n  function JpegImage() {\n    this.decodeTransform = null;\n    this.colorTransform = -1;\n  }\n  function buildHuffmanTable(codeLengths, values) {\n    var k = 0,\n        code = [],\n        i,\n        j,\n        length = 16;\n    while (length > 0 && !codeLengths[length - 1]) {\n      length--;\n    }\n    code.push({\n      children: [],\n      index: 0\n    });\n    var p = code[0],\n        q;\n    for (i = 0; i < length; i++) {\n      for (j = 0; j < codeLengths[i]; j++) {\n        p = code.pop();\n        p.children[p.index] = values[k];\n        while (p.index > 0) {\n          p = code.pop();\n        }\n        p.index++;\n        code.push(p);\n        while (code.length <= i) {\n          code.push(q = {\n            children: [],\n            index: 0\n          });\n          p.children[p.index] = q.children;\n          p = q;\n        }\n        k++;\n      }\n      if (i + 1 < length) {\n        code.push(q = {\n          children: [],\n          index: 0\n        });\n        p.children[p.index] = q.children;\n        p = q;\n      }\n    }\n    return code[0].children;\n  }\n  function getBlockBufferOffset(component, row, col) {\n    return 64 * ((component.blocksPerLine + 1) * row + col);\n  }\n  function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n    var parseDNLMarker = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : false;\n\n    var mcusPerLine = frame.mcusPerLine;\n    var progressive = frame.progressive;\n    var startOffset = offset,\n        bitsData = 0,\n        bitsCount = 0;\n    function readBit() {\n      if (bitsCount > 0) {\n        bitsCount--;\n        return bitsData >> bitsCount & 1;\n      }\n      bitsData = data[offset++];\n      if (bitsData === 0xFF) {\n        var nextByte = data[offset++];\n        if (nextByte) {\n          if (nextByte === 0xDC && parseDNLMarker) {\n            offset += 2;\n            var scanLines = data[offset++] << 8 | data[offset++];\n            if (scanLines > 0 && scanLines !== frame.scanLines) {\n              throw new DNLMarkerError('Found DNL marker (0xFFDC) while parsing scan data', scanLines);\n            }\n          }\n          throw new JpegError('unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n        }\n      }\n      bitsCount = 7;\n      return bitsData >>> 7;\n    }\n    function decodeHuffman(tree) {\n      var node = tree;\n      while (true) {\n        node = node[readBit()];\n        if (typeof node === 'number') {\n          return node;\n        }\n        if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {\n          throw new JpegError('invalid huffman sequence');\n        }\n      }\n    }\n    function receive(length) {\n      var n = 0;\n      while (length > 0) {\n        n = n << 1 | readBit();\n        length--;\n      }\n      return n;\n    }\n    function receiveAndExtend(length) {\n      if (length === 1) {\n        return readBit() === 1 ? 1 : -1;\n      }\n      var n = receive(length);\n      if (n >= 1 << length - 1) {\n        return n;\n      }\n      return n + (-1 << length) + 1;\n    }\n    function decodeBaseline(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\n      component.blockData[offset] = component.pred += diff;\n      var k = 1;\n      while (k < 64) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n    function decodeDCFirst(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n      component.blockData[offset] = component.pred += diff;\n    }\n    function decodeDCSuccessive(component, offset) {\n      component.blockData[offset] |= readBit() << successive;\n    }\n    var eobrun = 0;\n    function decodeACFirst(component, offset) {\n      if (eobrun > 0) {\n        eobrun--;\n        return;\n      }\n      var k = spectralStart,\n          e = spectralEnd;\n      while (k <= e) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            eobrun = receive(r) + (1 << r) - 1;\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n    var successiveACState = 0,\n        successiveACNextValue;\n    function decodeACSuccessive(component, offset) {\n      var k = spectralStart;\n      var e = spectralEnd;\n      var r = 0;\n      var s;\n      var rs;\n      while (k <= e) {\n        var offsetZ = offset + dctZigZag[k];\n        var sign = component.blockData[offsetZ] < 0 ? -1 : 1;\n        switch (successiveACState) {\n          case 0:\n            rs = decodeHuffman(component.huffmanTableAC);\n            s = rs & 15;\n            r = rs >> 4;\n            if (s === 0) {\n              if (r < 15) {\n                eobrun = receive(r) + (1 << r);\n                successiveACState = 4;\n              } else {\n                r = 16;\n                successiveACState = 1;\n              }\n            } else {\n              if (s !== 1) {\n                throw new JpegError('invalid ACn encoding');\n              }\n              successiveACNextValue = receiveAndExtend(s);\n              successiveACState = r ? 2 : 3;\n            }\n            continue;\n          case 1:\n          case 2:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              r--;\n              if (r === 0) {\n                successiveACState = successiveACState === 2 ? 3 : 0;\n              }\n            }\n            break;\n          case 3:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              component.blockData[offsetZ] = successiveACNextValue << successive;\n              successiveACState = 0;\n            }\n            break;\n          case 4:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            }\n            break;\n        }\n        k++;\n      }\n      if (successiveACState === 4) {\n        eobrun--;\n        if (eobrun === 0) {\n          successiveACState = 0;\n        }\n      }\n    }\n    function decodeMcu(component, decode, mcu, row, col) {\n      var mcuRow = mcu / mcusPerLine | 0;\n      var mcuCol = mcu % mcusPerLine;\n      var blockRow = mcuRow * component.v + row;\n      var blockCol = mcuCol * component.h + col;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    function decodeBlock(component, decode, mcu) {\n      var blockRow = mcu / component.blocksPerLine | 0;\n      var blockCol = mcu % component.blocksPerLine;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    var componentsLength = components.length;\n    var component, i, j, k, n;\n    var decodeFn;\n    if (progressive) {\n      if (spectralStart === 0) {\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n      } else {\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n      }\n    } else {\n      decodeFn = decodeBaseline;\n    }\n    var mcu = 0,\n        fileMarker;\n    var mcuExpected;\n    if (componentsLength === 1) {\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n    } else {\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n    }\n    var h, v;\n    while (mcu < mcuExpected) {\n      var mcuToRead = resetInterval ? Math.min(mcuExpected - mcu, resetInterval) : mcuExpected;\n      for (i = 0; i < componentsLength; i++) {\n        components[i].pred = 0;\n      }\n      eobrun = 0;\n      if (componentsLength === 1) {\n        component = components[0];\n        for (n = 0; n < mcuToRead; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < mcuToRead; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n        }\n      }\n      bitsCount = 0;\n      fileMarker = findNextFileMarker(data, offset);\n      if (fileMarker && fileMarker.invalid) {\n        (0, _util.warn)('decodeScan - unexpected MCU data, current marker is: ' + fileMarker.invalid);\n        offset = fileMarker.offset;\n      }\n      var marker = fileMarker && fileMarker.marker;\n      if (!marker || marker <= 0xFF00) {\n        throw new JpegError('marker was not found');\n      }\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n        offset += 2;\n      } else {\n        break;\n      }\n    }\n    fileMarker = findNextFileMarker(data, offset);\n    if (fileMarker && fileMarker.invalid) {\n      (0, _util.warn)('decodeScan - unexpected Scan data, current marker is: ' + fileMarker.invalid);\n      offset = fileMarker.offset;\n    }\n    return offset - startOffset;\n  }\n  function quantizeAndInverse(component, blockBufferOffset, p) {\n    var qt = component.quantizationTable,\n        blockData = component.blockData;\n    var v0, v1, v2, v3, v4, v5, v6, v7;\n    var p0, p1, p2, p3, p4, p5, p6, p7;\n    var t;\n    if (!qt) {\n      throw new JpegError('missing required Quantization Table.');\n    }\n    for (var row = 0; row < 64; row += 8) {\n      p0 = blockData[blockBufferOffset + row];\n      p1 = blockData[blockBufferOffset + row + 1];\n      p2 = blockData[blockBufferOffset + row + 2];\n      p3 = blockData[blockBufferOffset + row + 3];\n      p4 = blockData[blockBufferOffset + row + 4];\n      p5 = blockData[blockBufferOffset + row + 5];\n      p6 = blockData[blockBufferOffset + row + 6];\n      p7 = blockData[blockBufferOffset + row + 7];\n      p0 *= qt[row];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 512 >> 10;\n        p[row] = t;\n        p[row + 1] = t;\n        p[row + 2] = t;\n        p[row + 3] = t;\n        p[row + 4] = t;\n        p[row + 5] = t;\n        p[row + 6] = t;\n        p[row + 7] = t;\n        continue;\n      }\n      p1 *= qt[row + 1];\n      p2 *= qt[row + 2];\n      p3 *= qt[row + 3];\n      p4 *= qt[row + 4];\n      p5 *= qt[row + 5];\n      p6 *= qt[row + 6];\n      p7 *= qt[row + 7];\n      v0 = dctSqrt2 * p0 + 128 >> 8;\n      v1 = dctSqrt2 * p4 + 128 >> 8;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n      v5 = p3 << 4;\n      v6 = p5 << 4;\n      v0 = v0 + v1 + 1 >> 1;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p[row] = v0 + v7;\n      p[row + 7] = v0 - v7;\n      p[row + 1] = v1 + v6;\n      p[row + 6] = v1 - v6;\n      p[row + 2] = v2 + v5;\n      p[row + 5] = v2 - v5;\n      p[row + 3] = v3 + v4;\n      p[row + 4] = v3 - v4;\n    }\n    for (var col = 0; col < 8; ++col) {\n      p0 = p[col];\n      p1 = p[col + 8];\n      p2 = p[col + 16];\n      p3 = p[col + 24];\n      p4 = p[col + 32];\n      p5 = p[col + 40];\n      p6 = p[col + 48];\n      p7 = p[col + 56];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 8192 >> 14;\n        t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n        blockData[blockBufferOffset + col] = t;\n        blockData[blockBufferOffset + col + 8] = t;\n        blockData[blockBufferOffset + col + 16] = t;\n        blockData[blockBufferOffset + col + 24] = t;\n        blockData[blockBufferOffset + col + 32] = t;\n        blockData[blockBufferOffset + col + 40] = t;\n        blockData[blockBufferOffset + col + 48] = t;\n        blockData[blockBufferOffset + col + 56] = t;\n        continue;\n      }\n      v0 = dctSqrt2 * p0 + 2048 >> 12;\n      v1 = dctSqrt2 * p4 + 2048 >> 12;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n      v5 = p3;\n      v6 = p5;\n      v0 = (v0 + v1 + 1 >> 1) + 4112;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p0 = v0 + v7;\n      p7 = v0 - v7;\n      p1 = v1 + v6;\n      p6 = v1 - v6;\n      p2 = v2 + v5;\n      p5 = v2 - v5;\n      p3 = v3 + v4;\n      p4 = v3 - v4;\n      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n      blockData[blockBufferOffset + col] = p0;\n      blockData[blockBufferOffset + col + 8] = p1;\n      blockData[blockBufferOffset + col + 16] = p2;\n      blockData[blockBufferOffset + col + 24] = p3;\n      blockData[blockBufferOffset + col + 32] = p4;\n      blockData[blockBufferOffset + col + 40] = p5;\n      blockData[blockBufferOffset + col + 48] = p6;\n      blockData[blockBufferOffset + col + 56] = p7;\n    }\n  }\n  function buildComponentData(frame, component) {\n    var blocksPerLine = component.blocksPerLine;\n    var blocksPerColumn = component.blocksPerColumn;\n    var computationBuffer = new Int16Array(64);\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n        quantizeAndInverse(component, offset, computationBuffer);\n      }\n    }\n    return component.blockData;\n  }\n  function findNextFileMarker(data, currentPos) {\n    var startPos = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : currentPos;\n\n    function peekUint16(pos) {\n      return data[pos] << 8 | data[pos + 1];\n    }\n    var maxPos = data.length - 1;\n    var newPos = startPos < currentPos ? startPos : currentPos;\n    if (currentPos >= maxPos) {\n      return null;\n    }\n    var currentMarker = peekUint16(currentPos);\n    if (currentMarker >= 0xFFC0 && currentMarker <= 0xFFFE) {\n      return {\n        invalid: null,\n        marker: currentMarker,\n        offset: currentPos\n      };\n    }\n    var newMarker = peekUint16(newPos);\n    while (!(newMarker >= 0xFFC0 && newMarker <= 0xFFFE)) {\n      if (++newPos >= maxPos) {\n        return null;\n      }\n      newMarker = peekUint16(newPos);\n    }\n    return {\n      invalid: currentMarker.toString(16),\n      marker: newMarker,\n      offset: newPos\n    };\n  }\n  JpegImage.prototype = {\n    parse: function parse(data) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref$dnlScanLines = _ref.dnlScanLines,\n          dnlScanLines = _ref$dnlScanLines === undefined ? null : _ref$dnlScanLines;\n\n      function readUint16() {\n        var value = data[offset] << 8 | data[offset + 1];\n        offset += 2;\n        return value;\n      }\n      function readDataBlock() {\n        var length = readUint16();\n        var endOffset = offset + length - 2;\n        var fileMarker = findNextFileMarker(data, endOffset, offset);\n        if (fileMarker && fileMarker.invalid) {\n          (0, _util.warn)('readDataBlock - incorrect length, current marker is: ' + fileMarker.invalid);\n          endOffset = fileMarker.offset;\n        }\n        var array = data.subarray(offset, endOffset);\n        offset += array.length;\n        return array;\n      }\n      function prepareComponents(frame) {\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n        for (var i = 0; i < frame.components.length; i++) {\n          component = frame.components[i];\n          var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n          var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n          var blocksPerLineForMcu = mcusPerLine * component.h;\n          var blocksPerColumnForMcu = mcusPerColumn * component.v;\n          var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n          component.blockData = new Int16Array(blocksBufferSize);\n          component.blocksPerLine = blocksPerLine;\n          component.blocksPerColumn = blocksPerColumn;\n        }\n        frame.mcusPerLine = mcusPerLine;\n        frame.mcusPerColumn = mcusPerColumn;\n      }\n      var offset = 0;\n      var jfif = null;\n      var adobe = null;\n      var frame, resetInterval;\n      var numSOSMarkers = 0;\n      var quantizationTables = [];\n      var huffmanTablesAC = [],\n          huffmanTablesDC = [];\n      var fileMarker = readUint16();\n      if (fileMarker !== 0xFFD8) {\n        throw new JpegError('SOI not found');\n      }\n      fileMarker = readUint16();\n      while (fileMarker !== 0xFFD9) {\n        var i, j, l;\n        switch (fileMarker) {\n          case 0xFFE0:\n          case 0xFFE1:\n          case 0xFFE2:\n          case 0xFFE3:\n          case 0xFFE4:\n          case 0xFFE5:\n          case 0xFFE6:\n          case 0xFFE7:\n          case 0xFFE8:\n          case 0xFFE9:\n          case 0xFFEA:\n          case 0xFFEB:\n          case 0xFFEC:\n          case 0xFFED:\n          case 0xFFEE:\n          case 0xFFEF:\n          case 0xFFFE:\n            var appData = readDataBlock();\n            if (fileMarker === 0xFFE0) {\n              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n                jfif = {\n                  version: {\n                    major: appData[5],\n                    minor: appData[6]\n                  },\n                  densityUnits: appData[7],\n                  xDensity: appData[8] << 8 | appData[9],\n                  yDensity: appData[10] << 8 | appData[11],\n                  thumbWidth: appData[12],\n                  thumbHeight: appData[13],\n                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n                };\n              }\n            }\n            if (fileMarker === 0xFFEE) {\n              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n                adobe = {\n                  version: appData[5] << 8 | appData[6],\n                  flags0: appData[7] << 8 | appData[8],\n                  flags1: appData[9] << 8 | appData[10],\n                  transformCode: appData[11]\n                };\n              }\n            }\n            break;\n          case 0xFFDB:\n            var quantizationTablesLength = readUint16();\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n            var z;\n            while (offset < quantizationTablesEnd) {\n              var quantizationTableSpec = data[offset++];\n              var tableData = new Uint16Array(64);\n              if (quantizationTableSpec >> 4 === 0) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = data[offset++];\n                }\n              } else if (quantizationTableSpec >> 4 === 1) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = readUint16();\n                }\n              } else {\n                throw new JpegError('DQT - invalid table spec');\n              }\n              quantizationTables[quantizationTableSpec & 15] = tableData;\n            }\n            break;\n          case 0xFFC0:\n          case 0xFFC1:\n          case 0xFFC2:\n            if (frame) {\n              throw new JpegError('Only single frame JPEGs supported');\n            }\n            readUint16();\n            frame = {};\n            frame.extended = fileMarker === 0xFFC1;\n            frame.progressive = fileMarker === 0xFFC2;\n            frame.precision = data[offset++];\n            var sofScanLines = readUint16();\n            frame.scanLines = dnlScanLines || sofScanLines;\n            frame.samplesPerLine = readUint16();\n            frame.components = [];\n            frame.componentIds = {};\n            var componentsCount = data[offset++],\n                componentId;\n            var maxH = 0,\n                maxV = 0;\n            for (i = 0; i < componentsCount; i++) {\n              componentId = data[offset];\n              var h = data[offset + 1] >> 4;\n              var v = data[offset + 1] & 15;\n              if (maxH < h) {\n                maxH = h;\n              }\n              if (maxV < v) {\n                maxV = v;\n              }\n              var qId = data[offset + 2];\n              l = frame.components.push({\n                h: h,\n                v: v,\n                quantizationId: qId,\n                quantizationTable: null\n              });\n              frame.componentIds[componentId] = l - 1;\n              offset += 3;\n            }\n            frame.maxH = maxH;\n            frame.maxV = maxV;\n            prepareComponents(frame);\n            break;\n          case 0xFFC4:\n            var huffmanLength = readUint16();\n            for (i = 2; i < huffmanLength;) {\n              var huffmanTableSpec = data[offset++];\n              var codeLengths = new Uint8Array(16);\n              var codeLengthSum = 0;\n              for (j = 0; j < 16; j++, offset++) {\n                codeLengthSum += codeLengths[j] = data[offset];\n              }\n              var huffmanValues = new Uint8Array(codeLengthSum);\n              for (j = 0; j < codeLengthSum; j++, offset++) {\n                huffmanValues[j] = data[offset];\n              }\n              i += 17 + codeLengthSum;\n              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n            }\n            break;\n          case 0xFFDD:\n            readUint16();\n            resetInterval = readUint16();\n            break;\n          case 0xFFDA:\n            var parseDNLMarker = ++numSOSMarkers === 1 && !dnlScanLines;\n            readUint16();\n            var selectorsCount = data[offset++];\n            var components = [],\n                component;\n            for (i = 0; i < selectorsCount; i++) {\n              var componentIndex = frame.componentIds[data[offset++]];\n              component = frame.components[componentIndex];\n              var tableSpec = data[offset++];\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n              components.push(component);\n            }\n            var spectralStart = data[offset++];\n            var spectralEnd = data[offset++];\n            var successiveApproximation = data[offset++];\n            try {\n              var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15, parseDNLMarker);\n              offset += processed;\n            } catch (ex) {\n              if (ex instanceof DNLMarkerError) {\n                (0, _util.warn)('Attempting to re-parse JPEG image using \"scanLines\" ' + 'parameter found in DNL marker (0xFFDC) segment.');\n                return this.parse(data, { dnlScanLines: ex.scanLines });\n              }\n              throw ex;\n            }\n            break;\n          case 0xFFDC:\n            offset += 4;\n            break;\n          case 0xFFFF:\n            if (data[offset] !== 0xFF) {\n              offset--;\n            }\n            break;\n          default:\n            if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n              offset -= 3;\n              break;\n            }\n            var nextFileMarker = findNextFileMarker(data, offset - 2);\n            if (nextFileMarker && nextFileMarker.invalid) {\n              (0, _util.warn)('JpegImage.parse - unexpected data, current marker is: ' + nextFileMarker.invalid);\n              offset = nextFileMarker.offset;\n              break;\n            }\n            throw new JpegError('unknown marker ' + fileMarker.toString(16));\n        }\n        fileMarker = readUint16();\n      }\n      this.width = frame.samplesPerLine;\n      this.height = frame.scanLines;\n      this.jfif = jfif;\n      this.adobe = adobe;\n      this.components = [];\n      for (i = 0; i < frame.components.length; i++) {\n        component = frame.components[i];\n        var quantizationTable = quantizationTables[component.quantizationId];\n        if (quantizationTable) {\n          component.quantizationTable = quantizationTable;\n        }\n        this.components.push({\n          output: buildComponentData(frame, component),\n          scaleX: component.h / frame.maxH,\n          scaleY: component.v / frame.maxV,\n          blocksPerLine: component.blocksPerLine,\n          blocksPerColumn: component.blocksPerColumn\n        });\n      }\n      this.numComponents = this.components.length;\n    },\n\n    _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n      var scaleX = this.width / width,\n          scaleY = this.height / height;\n      var component, componentScaleX, componentScaleY, blocksPerScanline;\n      var x, y, i, j, k;\n      var index;\n      var offset = 0;\n      var output;\n      var numComponents = this.components.length;\n      var dataLength = width * height * numComponents;\n      var data = new Uint8ClampedArray(dataLength);\n      var xScaleBlockOffset = new Uint32Array(width);\n      var mask3LSB = 0xfffffff8;\n      for (i = 0; i < numComponents; i++) {\n        component = this.components[i];\n        componentScaleX = component.scaleX * scaleX;\n        componentScaleY = component.scaleY * scaleY;\n        offset = i;\n        output = component.output;\n        blocksPerScanline = component.blocksPerLine + 1 << 3;\n        for (x = 0; x < width; x++) {\n          j = 0 | x * componentScaleX;\n          xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n        }\n        for (y = 0; y < height; y++) {\n          j = 0 | y * componentScaleY;\n          index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n          for (x = 0; x < width; x++) {\n            data[offset] = output[index + xScaleBlockOffset[x]];\n            offset += numComponents;\n          }\n        }\n      }\n      var transform = this.decodeTransform;\n      if (transform) {\n        for (i = 0; i < dataLength;) {\n          for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n            data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n          }\n        }\n      }\n      return data;\n    },\n    _isColorConversionNeeded: function _isColorConversionNeeded() {\n      if (this.adobe) {\n        return !!this.adobe.transformCode;\n      }\n      if (this.numComponents === 3) {\n        if (this.colorTransform === 0) {\n          return false;\n        }\n        return true;\n      }\n      if (this.colorTransform === 1) {\n        return true;\n      }\n      return false;\n    },\n\n    _convertYccToRgb: function convertYccToRgb(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 3) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = Y - 179.456 + 1.402 * Cr;\n        data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n        data[i + 2] = Y - 226.816 + 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertYcckToRgb: function convertYcckToRgb(data) {\n      var Y, Cb, Cr, k;\n      var offset = 0;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        k = data[i + 3];\n        data[offset++] = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n        data[offset++] = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n        data[offset++] = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n      }\n      return data.subarray(0, offset);\n    },\n    _convertYcckToCmyk: function convertYcckToCmyk(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = 434.456 - Y - 1.402 * Cr;\n        data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n        data[i + 2] = 481.816 - Y - 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertCmykToRgb: function convertCmykToRgb(data) {\n      var c, m, y, k;\n      var offset = 0;\n      var scale = 1 / 255;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        c = data[i] * scale;\n        m = data[i + 1] * scale;\n        y = data[i + 2] * scale;\n        k = data[i + 3] * scale;\n        data[offset++] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) - k * (21.86122147463605 * k + 189.48180835922747);\n        data[offset++] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) - k * (20.737325471181034 * k + 187.80453709719578);\n        data[offset++] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 193.58209356861505) - k * (22.33816807309886 * k + 180.12613974708367);\n      }\n      return data.subarray(0, offset);\n    },\n    getData: function getData(width, height, forceRGBoutput) {\n      if (this.numComponents > 4) {\n        throw new JpegError('Unsupported color mode');\n      }\n      var data = this._getLinearizedBlockData(width, height);\n      if (this.numComponents === 1 && forceRGBoutput) {\n        var dataLength = data.length;\n        var rgbData = new Uint8ClampedArray(dataLength * 3);\n        var offset = 0;\n        for (var i = 0; i < dataLength; i++) {\n          var grayColor = data[i];\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n        }\n        return rgbData;\n      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n        return this._convertYccToRgb(data);\n      } else if (this.numComponents === 4) {\n        if (this._isColorConversionNeeded()) {\n          if (forceRGBoutput) {\n            return this._convertYcckToRgb(data);\n          }\n          return this._convertYcckToCmyk(data);\n        } else if (forceRGBoutput) {\n          return this._convertCmykToRgb(data);\n        }\n      }\n      return data;\n    }\n  };\n  return JpegImage;\n}();\nexports.JpegImage = JpegImage;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/jpg.js\n// module id = mpq9\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar MacExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', 'centoldstyle', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', '', 'threequartersemdash', '', 'questionsmall', '', '', '', '', 'Ethsmall', '', '', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', '', '', '', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hypheninferior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', 'asuperior', 'centsuperior', '', '', '', '', 'Aacutesmall', 'Agravesmall', 'Acircumflexsmall', 'Adieresissmall', 'Atildesmall', 'Aringsmall', 'Ccedillasmall', 'Eacutesmall', 'Egravesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Iacutesmall', 'Igravesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ntildesmall', 'Oacutesmall', 'Ogravesmall', 'Ocircumflexsmall', 'Odieresissmall', 'Otildesmall', 'Uacutesmall', 'Ugravesmall', 'Ucircumflexsmall', 'Udieresissmall', '', 'eightsuperior', 'fourinferior', 'threeinferior', 'sixinferior', 'eightinferior', 'seveninferior', 'Scaronsmall', '', 'centinferior', 'twoinferior', '', 'Dieresissmall', '', 'Caronsmall', 'osuperior', 'fiveinferior', '', 'commainferior', 'periodinferior', 'Yacutesmall', '', 'dollarinferior', '', '', 'Thornsmall', '', 'nineinferior', 'zeroinferior', 'Zcaronsmall', 'AEsmall', 'Oslashsmall', 'questiondownsmall', 'oneinferior', 'Lslashsmall', '', '', '', '', '', '', 'Cedillasmall', '', '', '', '', '', 'OEsmall', 'figuredash', 'hyphensuperior', '', '', '', '', 'exclamdownsmall', '', 'Ydieresissmall', '', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'ninesuperior', 'zerosuperior', '', 'esuperior', 'rsuperior', 'tsuperior', '', '', 'isuperior', 'ssuperior', 'dsuperior', '', '', '', '', '', 'lsuperior', 'Ogoneksmall', 'Brevesmall', 'Macronsmall', 'bsuperior', 'nsuperior', 'msuperior', 'commasuperior', 'periodsuperior', 'Dotaccentsmall', 'Ringsmall', '', '', '', ''];\nvar MacRomanEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'space', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron'];\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls', '', '', '', ''];\nvar WinAnsiEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'bullet', 'Euro', 'bullet', 'quotesinglbase', 'florin', 'quotedblbase', 'ellipsis', 'dagger', 'daggerdbl', 'circumflex', 'perthousand', 'Scaron', 'guilsinglleft', 'OE', 'bullet', 'Zcaron', 'bullet', 'bullet', 'quoteleft', 'quoteright', 'quotedblleft', 'quotedblright', 'bullet', 'endash', 'emdash', 'tilde', 'trademark', 'scaron', 'guilsinglright', 'oe', 'bullet', 'zcaron', 'Ydieresis', 'space', 'exclamdown', 'cent', 'sterling', 'currency', 'yen', 'brokenbar', 'section', 'dieresis', 'copyright', 'ordfeminine', 'guillemotleft', 'logicalnot', 'hyphen', 'registered', 'macron', 'degree', 'plusminus', 'twosuperior', 'threesuperior', 'acute', 'mu', 'paragraph', 'periodcentered', 'cedilla', 'onesuperior', 'ordmasculine', 'guillemotright', 'onequarter', 'onehalf', 'threequarters', 'questiondown', 'Agrave', 'Aacute', 'Acircumflex', 'Atilde', 'Adieresis', 'Aring', 'AE', 'Ccedilla', 'Egrave', 'Eacute', 'Ecircumflex', 'Edieresis', 'Igrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Eth', 'Ntilde', 'Ograve', 'Oacute', 'Ocircumflex', 'Otilde', 'Odieresis', 'multiply', 'Oslash', 'Ugrave', 'Uacute', 'Ucircumflex', 'Udieresis', 'Yacute', 'Thorn', 'germandbls', 'agrave', 'aacute', 'acircumflex', 'atilde', 'adieresis', 'aring', 'ae', 'ccedilla', 'egrave', 'eacute', 'ecircumflex', 'edieresis', 'igrave', 'iacute', 'icircumflex', 'idieresis', 'eth', 'ntilde', 'ograve', 'oacute', 'ocircumflex', 'otilde', 'odieresis', 'divide', 'oslash', 'ugrave', 'uacute', 'ucircumflex', 'udieresis', 'yacute', 'thorn', 'ydieresis'];\nvar SymbolSetEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'universal', 'numbersign', 'existential', 'percent', 'ampersand', 'suchthat', 'parenleft', 'parenright', 'asteriskmath', 'plus', 'comma', 'minus', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'congruent', 'Alpha', 'Beta', 'Chi', 'Delta', 'Epsilon', 'Phi', 'Gamma', 'Eta', 'Iota', 'theta1', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Omicron', 'Pi', 'Theta', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'sigma1', 'Omega', 'Xi', 'Psi', 'Zeta', 'bracketleft', 'therefore', 'bracketright', 'perpendicular', 'underscore', 'radicalex', 'alpha', 'beta', 'chi', 'delta', 'epsilon', 'phi', 'gamma', 'eta', 'iota', 'phi1', 'kappa', 'lambda', 'mu', 'nu', 'omicron', 'pi', 'theta', 'rho', 'sigma', 'tau', 'upsilon', 'omega1', 'omega', 'xi', 'psi', 'zeta', 'braceleft', 'bar', 'braceright', 'similar', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'Euro', 'Upsilon1', 'minute', 'lessequal', 'fraction', 'infinity', 'florin', 'club', 'diamond', 'heart', 'spade', 'arrowboth', 'arrowleft', 'arrowup', 'arrowright', 'arrowdown', 'degree', 'plusminus', 'second', 'greaterequal', 'multiply', 'proportional', 'partialdiff', 'bullet', 'divide', 'notequal', 'equivalence', 'approxequal', 'ellipsis', 'arrowvertex', 'arrowhorizex', 'carriagereturn', 'aleph', 'Ifraktur', 'Rfraktur', 'weierstrass', 'circlemultiply', 'circleplus', 'emptyset', 'intersection', 'union', 'propersuperset', 'reflexsuperset', 'notsubset', 'propersubset', 'reflexsubset', 'element', 'notelement', 'angle', 'gradient', 'registerserif', 'copyrightserif', 'trademarkserif', 'product', 'radical', 'dotmath', 'logicalnot', 'logicaland', 'logicalor', 'arrowdblboth', 'arrowdblleft', 'arrowdblup', 'arrowdblright', 'arrowdbldown', 'lozenge', 'angleleft', 'registersans', 'copyrightsans', 'trademarksans', 'summation', 'parenlefttp', 'parenleftex', 'parenleftbt', 'bracketlefttp', 'bracketleftex', 'bracketleftbt', 'bracelefttp', 'braceleftmid', 'braceleftbt', 'braceex', '', 'angleright', 'integral', 'integraltp', 'integralex', 'integralbt', 'parenrighttp', 'parenrightex', 'parenrightbt', 'bracketrighttp', 'bracketrightex', 'bracketrightbt', 'bracerighttp', 'bracerightmid', 'bracerightbt', ''];\nvar ZapfDingbatsEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'a1', 'a2', 'a202', 'a3', 'a4', 'a5', 'a119', 'a118', 'a117', 'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a105', 'a17', 'a18', 'a19', 'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a6', 'a7', 'a8', 'a9', 'a10', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36', 'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46', 'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56', 'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66', 'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a203', 'a75', 'a204', 'a76', 'a77', 'a78', 'a79', 'a81', 'a82', 'a83', 'a84', 'a97', 'a98', 'a99', 'a100', '', 'a89', 'a90', 'a93', 'a94', 'a91', 'a92', 'a205', 'a85', 'a206', 'a86', 'a87', 'a88', 'a95', 'a96', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'a101', 'a102', 'a103', 'a104', 'a106', 'a107', 'a108', 'a112', 'a111', 'a110', 'a109', 'a120', 'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129', 'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138', 'a139', 'a140', 'a141', 'a142', 'a143', 'a144', 'a145', 'a146', 'a147', 'a148', 'a149', 'a150', 'a151', 'a152', 'a153', 'a154', 'a155', 'a156', 'a157', 'a158', 'a159', 'a160', 'a161', 'a163', 'a164', 'a196', 'a165', 'a192', 'a166', 'a167', 'a168', 'a169', 'a170', 'a171', 'a172', 'a173', 'a162', 'a174', 'a175', 'a176', 'a177', 'a178', 'a179', 'a193', 'a180', 'a199', 'a181', 'a200', 'a182', '', 'a201', 'a183', 'a184', 'a197', 'a185', 'a194', 'a198', 'a186', 'a195', 'a187', 'a188', 'a189', 'a190', 'a191', ''];\nfunction getEncoding(encodingName) {\n  switch (encodingName) {\n    case 'WinAnsiEncoding':\n      return WinAnsiEncoding;\n    case 'StandardEncoding':\n      return StandardEncoding;\n    case 'MacRomanEncoding':\n      return MacRomanEncoding;\n    case 'SymbolSetEncoding':\n      return SymbolSetEncoding;\n    case 'ZapfDingbatsEncoding':\n      return ZapfDingbatsEncoding;\n    case 'ExpertEncoding':\n      return ExpertEncoding;\n    case 'MacExpertEncoding':\n      return MacExpertEncoding;\n    default:\n      return null;\n  }\n}\nexports.WinAnsiEncoding = WinAnsiEncoding;\nexports.StandardEncoding = StandardEncoding;\nexports.MacRomanEncoding = MacRomanEncoding;\nexports.SymbolSetEncoding = SymbolSetEncoding;\nexports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\nexports.ExpertEncoding = ExpertEncoding;\nexports.getEncoding = getEncoding;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/encodings.js\n// module id = neq/\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar EOF = {};\nvar Name = function NameClosure() {\n  function Name(name) {\n    this.name = name;\n  }\n  Name.prototype = {};\n  var nameCache = Object.create(null);\n  Name.get = function Name_get(name) {\n    var nameValue = nameCache[name];\n    return nameValue ? nameValue : nameCache[name] = new Name(name);\n  };\n  return Name;\n}();\nvar Cmd = function CmdClosure() {\n  function Cmd(cmd) {\n    this.cmd = cmd;\n  }\n  Cmd.prototype = {};\n  var cmdCache = Object.create(null);\n  Cmd.get = function Cmd_get(cmd) {\n    var cmdValue = cmdCache[cmd];\n    return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n  };\n  return Cmd;\n}();\nvar Dict = function DictClosure() {\n  var nonSerializable = function nonSerializableClosure() {\n    return nonSerializable;\n  };\n  function Dict(xref) {\n    this._map = Object.create(null);\n    this.xref = xref;\n    this.objId = null;\n    this.suppressEncryption = false;\n    this.__nonSerializable__ = nonSerializable;\n  }\n  Dict.prototype = {\n    assignXref: function Dict_assignXref(newXref) {\n      this.xref = newXref;\n    },\n    get: function Dict_get(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      value = this._map[key3] || null;\n      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n    },\n    getAsync: function Dict_getAsync(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      value = this._map[key3] || null;\n      if (xref) {\n        return xref.fetchIfRefAsync(value, suppressEncryption);\n      }\n      return Promise.resolve(value);\n    },\n    getArray: function Dict_getArray(key1, key2, key3) {\n      var value = this.get(key1, key2, key3);\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (!Array.isArray(value) || !xref) {\n        return value;\n      }\n      value = value.slice();\n      for (var i = 0, ii = value.length; i < ii; i++) {\n        if (!isRef(value[i])) {\n          continue;\n        }\n        value[i] = xref.fetch(value[i], suppressEncryption);\n      }\n      return value;\n    },\n    getRaw: function Dict_getRaw(key) {\n      return this._map[key];\n    },\n    getKeys: function Dict_getKeys() {\n      return Object.keys(this._map);\n    },\n    set: function Dict_set(key, value) {\n      this._map[key] = value;\n    },\n    has: function Dict_has(key) {\n      return key in this._map;\n    },\n    forEach: function Dict_forEach(callback) {\n      for (var key in this._map) {\n        callback(key, this.get(key));\n      }\n    }\n  };\n  Dict.empty = new Dict(null);\n  Dict.merge = function (xref, dictArray) {\n    var mergedDict = new Dict(xref);\n    for (var i = 0, ii = dictArray.length; i < ii; i++) {\n      var dict = dictArray[i];\n      if (!isDict(dict)) {\n        continue;\n      }\n      for (var keyName in dict._map) {\n        if (mergedDict._map[keyName] !== undefined) {\n          continue;\n        }\n        mergedDict._map[keyName] = dict._map[keyName];\n      }\n    }\n    return mergedDict;\n  };\n  return Dict;\n}();\nvar Ref = function RefClosure() {\n  function Ref(num, gen) {\n    this.num = num;\n    this.gen = gen;\n  }\n  Ref.prototype = {\n    toString: function Ref_toString() {\n      var str = this.num + 'R';\n      if (this.gen !== 0) {\n        str += this.gen;\n      }\n      return str;\n    }\n  };\n  return Ref;\n}();\nvar RefSet = function RefSetClosure() {\n  function RefSet() {\n    this.dict = Object.create(null);\n  }\n  RefSet.prototype = {\n    has: function RefSet_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSet_put(ref) {\n      this.dict[ref.toString()] = true;\n    },\n    remove: function RefSet_remove(ref) {\n      delete this.dict[ref.toString()];\n    }\n  };\n  return RefSet;\n}();\nvar RefSetCache = function RefSetCacheClosure() {\n  function RefSetCache() {\n    this.dict = Object.create(null);\n  }\n  RefSetCache.prototype = {\n    get: function RefSetCache_get(ref) {\n      return this.dict[ref.toString()];\n    },\n    has: function RefSetCache_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSetCache_put(ref, obj) {\n      this.dict[ref.toString()] = obj;\n    },\n    putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n      this.dict[ref.toString()] = this.get(aliasRef);\n    },\n    forEach: function RefSetCache_forEach(fn, thisArg) {\n      for (var i in this.dict) {\n        fn.call(thisArg, this.dict[i]);\n      }\n    },\n    clear: function RefSetCache_clear() {\n      this.dict = Object.create(null);\n    }\n  };\n  return RefSetCache;\n}();\nfunction isEOF(v) {\n  return v === EOF;\n}\nfunction isName(v, name) {\n  return v instanceof Name && (name === undefined || v.name === name);\n}\nfunction isCmd(v, cmd) {\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\nfunction isDict(v, type) {\n  return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n}\nfunction isRef(v) {\n  return v instanceof Ref;\n}\nfunction isRefsEqual(v1, v2) {\n  return v1.num === v2.num && v1.gen === v2.gen;\n}\nfunction isStream(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.getBytes !== undefined;\n}\nexports.EOF = EOF;\nexports.Cmd = Cmd;\nexports.Dict = Dict;\nexports.Name = Name;\nexports.Ref = Ref;\nexports.RefSet = RefSet;\nexports.RefSetCache = RefSetCache;\nexports.isEOF = isEOF;\nexports.isCmd = isCmd;\nexports.isDict = isDict;\nexports.isName = isName;\nexports.isRef = isRef;\nexports.isRefsEqual = isRefsEqual;\nexports.isStream = isStream;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/primitives.js\n// module id = p2EL\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = exports.Linearization = exports.Lexer = undefined;\n\nvar _stream = require('./stream');\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _ccitt_stream = require('./ccitt_stream');\n\nvar _jbig2_stream = require('./jbig2_stream');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _jpx_stream = require('./jpx_stream');\n\nvar MAX_LENGTH_TO_CACHE = 1000;\nvar MAX_ADLER32_LENGTH = 5552;\nfunction computeAdler32(bytes) {\n  var bytesLength = bytes.length;\n  if (bytesLength >= MAX_ADLER32_LENGTH) {\n    throw new Error('computeAdler32: The input is too large.');\n  }\n  var a = 1,\n      b = 0;\n  for (var i = 0; i < bytesLength; ++i) {\n    a += bytes[i] & 0xFF;\n    b += a;\n  }\n  return b % 65521 << 16 | a % 65521;\n}\nvar Parser = function ParserClosure() {\n  function Parser(lexer, allowStreams, xref, recoveryMode) {\n    this.lexer = lexer;\n    this.allowStreams = allowStreams;\n    this.xref = xref;\n    this.recoveryMode = recoveryMode || false;\n    this.imageCache = Object.create(null);\n    this.refill();\n  }\n  Parser.prototype = {\n    refill: function Parser_refill() {\n      this.buf1 = this.lexer.getObj();\n      this.buf2 = this.lexer.getObj();\n    },\n    shift: function Parser_shift() {\n      if ((0, _primitives.isCmd)(this.buf2, 'ID')) {\n        this.buf1 = this.buf2;\n        this.buf2 = null;\n      } else {\n        this.buf1 = this.buf2;\n        this.buf2 = this.lexer.getObj();\n      }\n    },\n    tryShift: function Parser_tryShift() {\n      try {\n        this.shift();\n        return true;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        return false;\n      }\n    },\n    getObj: function Parser_getObj(cipherTransform) {\n      var buf1 = this.buf1;\n      this.shift();\n      if (buf1 instanceof _primitives.Cmd) {\n        switch (buf1.cmd) {\n          case 'BI':\n            return this.makeInlineImage(cipherTransform);\n          case '[':\n            var array = [];\n            while (!(0, _primitives.isCmd)(this.buf1, ']') && !(0, _primitives.isEOF)(this.buf1)) {\n              array.push(this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside array');\n              }\n              return array;\n            }\n            this.shift();\n            return array;\n          case '<<':\n            var dict = new _primitives.Dict(this.xref);\n            while (!(0, _primitives.isCmd)(this.buf1, '>>') && !(0, _primitives.isEOF)(this.buf1)) {\n              if (!(0, _primitives.isName)(this.buf1)) {\n                (0, _util.info)('Malformed dictionary: key must be a name object');\n                this.shift();\n                continue;\n              }\n              var key = this.buf1.name;\n              this.shift();\n              if ((0, _primitives.isEOF)(this.buf1)) {\n                break;\n              }\n              dict.set(key, this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside dictionary');\n              }\n              return dict;\n            }\n            if ((0, _primitives.isCmd)(this.buf2, 'stream')) {\n              return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n            }\n            this.shift();\n            return dict;\n          default:\n            return buf1;\n        }\n      }\n      if (Number.isInteger(buf1)) {\n        var num = buf1;\n        if (Number.isInteger(this.buf1) && (0, _primitives.isCmd)(this.buf2, 'R')) {\n          var ref = new _primitives.Ref(num, this.buf1);\n          this.shift();\n          this.shift();\n          return ref;\n        }\n        return num;\n      }\n      if ((0, _util.isString)(buf1)) {\n        var str = buf1;\n        if (cipherTransform) {\n          str = cipherTransform.decryptString(str);\n        }\n        return str;\n      }\n      return buf1;\n    },\n    findDefaultInlineStreamEnd: function findDefaultInlineStreamEnd(stream) {\n      var E = 0x45,\n          I = 0x49,\n          SPACE = 0x20,\n          LF = 0xA,\n          CR = 0xD;\n      var n = 10,\n          NUL = 0x0;\n      var startPos = stream.pos,\n          state = 0,\n          ch = void 0,\n          maybeEIPos = void 0;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else {\n          (0, _util.assert)(state === 2);\n          if (ch === SPACE || ch === LF || ch === CR) {\n            maybeEIPos = stream.pos;\n            var followingBytes = stream.peekBytes(n);\n            for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n              ch = followingBytes[i];\n              if (ch === NUL && followingBytes[i + 1] !== NUL) {\n                continue;\n              }\n              if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n                state = 0;\n                break;\n              }\n            }\n            if (state === 2) {\n              break;\n            }\n          } else {\n            state = 0;\n          }\n        }\n      }\n      if (ch === -1) {\n        (0, _util.warn)('findDefaultInlineStreamEnd: ' + 'Reached the end of the stream without finding a valid EI marker');\n        if (maybeEIPos) {\n          (0, _util.warn)('... trying to recover by using the last \"EI\" occurrence.');\n          stream.skip(-(stream.pos - maybeEIPos));\n        }\n      }\n      return stream.pos - 4 - startPos;\n    },\n\n    findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n      var startPos = stream.pos,\n          foundEOI = false,\n          b,\n          markerLength,\n          length;\n      while ((b = stream.getByte()) !== -1) {\n        if (b !== 0xFF) {\n          continue;\n        }\n        switch (stream.getByte()) {\n          case 0x00:\n            break;\n          case 0xFF:\n            stream.skip(-1);\n            break;\n          case 0xD9:\n            foundEOI = true;\n            break;\n          case 0xC0:\n          case 0xC1:\n          case 0xC2:\n          case 0xC3:\n          case 0xC5:\n          case 0xC6:\n          case 0xC7:\n          case 0xC9:\n          case 0xCA:\n          case 0xCB:\n          case 0xCD:\n          case 0xCE:\n          case 0xCF:\n          case 0xC4:\n          case 0xCC:\n          case 0xDA:\n          case 0xDB:\n          case 0xDC:\n          case 0xDD:\n          case 0xDE:\n          case 0xDF:\n          case 0xE0:\n          case 0xE1:\n          case 0xE2:\n          case 0xE3:\n          case 0xE4:\n          case 0xE5:\n          case 0xE6:\n          case 0xE7:\n          case 0xE8:\n          case 0xE9:\n          case 0xEA:\n          case 0xEB:\n          case 0xEC:\n          case 0xED:\n          case 0xEE:\n          case 0xEF:\n          case 0xFE:\n            markerLength = stream.getUint16();\n            if (markerLength > 2) {\n              stream.skip(markerLength - 2);\n            } else {\n              stream.skip(-2);\n            }\n            break;\n        }\n        if (foundEOI) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (b === -1) {\n        (0, _util.warn)('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n      var TILDE = 0x7E,\n          GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === TILDE && stream.peekByte() === GT) {\n          stream.skip();\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n      var GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === GT) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n      var E = 0x45,\n          I = 0x49;\n      var state = 0,\n          ch;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else if (state === 2) {\n          break;\n        }\n      }\n    },\n    makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      var dict = new _primitives.Dict(this.xref),\n          dictLength = void 0;\n      while (!(0, _primitives.isCmd)(this.buf1, 'ID') && !(0, _primitives.isEOF)(this.buf1)) {\n        if (!(0, _primitives.isName)(this.buf1)) {\n          throw new _util.FormatError('Dictionary key must be a name object');\n        }\n        var key = this.buf1.name;\n        this.shift();\n        if ((0, _primitives.isEOF)(this.buf1)) {\n          break;\n        }\n        dict.set(key, this.getObj(cipherTransform));\n      }\n      if (lexer.beginInlineImagePos !== -1) {\n        dictLength = stream.pos - lexer.beginInlineImagePos;\n      }\n      var filter = dict.get('Filter', 'F'),\n          filterName;\n      if ((0, _primitives.isName)(filter)) {\n        filterName = filter.name;\n      } else if (Array.isArray(filter)) {\n        var filterZero = this.xref.fetchIfRef(filter[0]);\n        if ((0, _primitives.isName)(filterZero)) {\n          filterName = filterZero.name;\n        }\n      }\n      var startPos = stream.pos,\n          length = void 0;\n      if (filterName === 'DCTDecode' || filterName === 'DCT') {\n        length = this.findDCTDecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCII85Decode' || filterName === 'A85') {\n        length = this.findASCII85DecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n        length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n      } else {\n        length = this.findDefaultInlineStreamEnd(stream);\n      }\n      var imageStream = stream.makeSubStream(startPos, length, dict);\n      var cacheKey = void 0;\n      if (length < MAX_LENGTH_TO_CACHE && dictLength < MAX_ADLER32_LENGTH) {\n        var imageBytes = imageStream.getBytes();\n        imageStream.reset();\n        var initialStreamPos = stream.pos;\n        stream.pos = lexer.beginInlineImagePos;\n        var dictBytes = stream.getBytes(dictLength);\n        stream.pos = initialStreamPos;\n        cacheKey = computeAdler32(imageBytes) + '_' + computeAdler32(dictBytes);\n        var cacheEntry = this.imageCache[cacheKey];\n        if (cacheEntry !== undefined) {\n          this.buf2 = _primitives.Cmd.get('EI');\n          this.shift();\n          cacheEntry.reset();\n          return cacheEntry;\n        }\n      }\n      if (cipherTransform) {\n        imageStream = cipherTransform.createStream(imageStream, length);\n      }\n      imageStream = this.filter(imageStream, dict, length);\n      imageStream.dict = dict;\n      if (cacheKey !== undefined) {\n        imageStream.cacheKey = 'inline_' + length + '_' + cacheKey;\n        this.imageCache[cacheKey] = imageStream;\n      }\n      this.buf2 = _primitives.Cmd.get('EI');\n      this.shift();\n      return imageStream;\n    },\n    makeStream: function Parser_makeStream(dict, cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      lexer.skipToNextLine();\n      var pos = stream.pos - 1;\n      var length = dict.get('Length');\n      if (!Number.isInteger(length)) {\n        (0, _util.info)('Bad ' + length + ' attribute in stream');\n        length = 0;\n      }\n      stream.pos = pos + length;\n      lexer.nextChar();\n      if (this.tryShift() && (0, _primitives.isCmd)(this.buf2, 'endstream')) {\n        this.shift();\n      } else {\n        stream.pos = pos;\n        var SCAN_BLOCK_SIZE = 2048;\n        var ENDSTREAM_SIGNATURE_LENGTH = 9;\n        var ENDSTREAM_SIGNATURE = [0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D];\n        var skipped = 0,\n            found = false,\n            i,\n            j;\n        while (stream.pos < stream.end) {\n          var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n          var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n          if (scanLength <= 0) {\n            break;\n          }\n          found = false;\n          i = 0;\n          while (i < scanLength) {\n            j = 0;\n            while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n              j++;\n            }\n            if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n              found = true;\n              break;\n            }\n            i++;\n          }\n          if (found) {\n            skipped += i;\n            stream.pos += i;\n            break;\n          }\n          skipped += scanLength;\n          stream.pos += scanLength;\n        }\n        if (!found) {\n          throw new _util.FormatError('Missing endstream');\n        }\n        length = skipped;\n        lexer.nextChar();\n        this.shift();\n        this.shift();\n      }\n      this.shift();\n      stream = stream.makeSubStream(pos, length, dict);\n      if (cipherTransform) {\n        stream = cipherTransform.createStream(stream, length);\n      }\n      stream = this.filter(stream, dict, length);\n      stream.dict = dict;\n      return stream;\n    },\n    filter: function Parser_filter(stream, dict, length) {\n      var filter = dict.get('Filter', 'F');\n      var params = dict.get('DecodeParms', 'DP');\n      if ((0, _primitives.isName)(filter)) {\n        if (Array.isArray(params)) {\n          (0, _util.warn)('/DecodeParms should not contain an Array, ' + 'when /Filter contains a Name.');\n        }\n        return this.makeFilter(stream, filter.name, length, params);\n      }\n      var maybeLength = length;\n      if (Array.isArray(filter)) {\n        var filterArray = filter;\n        var paramsArray = params;\n        for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n          filter = this.xref.fetchIfRef(filterArray[i]);\n          if (!(0, _primitives.isName)(filter)) {\n            throw new _util.FormatError('Bad filter name: ' + filter);\n          }\n          params = null;\n          if (Array.isArray(paramsArray) && i in paramsArray) {\n            params = this.xref.fetchIfRef(paramsArray[i]);\n          }\n          stream = this.makeFilter(stream, filter.name, maybeLength, params);\n          maybeLength = null;\n        }\n      }\n      return stream;\n    },\n    makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n      if (maybeLength === 0) {\n        (0, _util.warn)('Empty \"' + name + '\" stream.');\n        return new _stream.NullStream();\n      }\n      try {\n        var xrefStreamStats = this.xref.stats.streamTypes;\n        if (name === 'FlateDecode' || name === 'Fl') {\n          xrefStreamStats[_util.StreamType.FLATE] = true;\n          if (params) {\n            return new _stream.PredictorStream(new _stream.FlateStream(stream, maybeLength), maybeLength, params);\n          }\n          return new _stream.FlateStream(stream, maybeLength);\n        }\n        if (name === 'LZWDecode' || name === 'LZW') {\n          xrefStreamStats[_util.StreamType.LZW] = true;\n          var earlyChange = 1;\n          if (params) {\n            if (params.has('EarlyChange')) {\n              earlyChange = params.get('EarlyChange');\n            }\n            return new _stream.PredictorStream(new _stream.LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n          }\n          return new _stream.LZWStream(stream, maybeLength, earlyChange);\n        }\n        if (name === 'DCTDecode' || name === 'DCT') {\n          xrefStreamStats[_util.StreamType.DCT] = true;\n          return new _jpeg_stream.JpegStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'JPXDecode' || name === 'JPX') {\n          xrefStreamStats[_util.StreamType.JPX] = true;\n          return new _jpx_stream.JpxStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'ASCII85Decode' || name === 'A85') {\n          xrefStreamStats[_util.StreamType.A85] = true;\n          return new _stream.Ascii85Stream(stream, maybeLength);\n        }\n        if (name === 'ASCIIHexDecode' || name === 'AHx') {\n          xrefStreamStats[_util.StreamType.AHX] = true;\n          return new _stream.AsciiHexStream(stream, maybeLength);\n        }\n        if (name === 'CCITTFaxDecode' || name === 'CCF') {\n          xrefStreamStats[_util.StreamType.CCF] = true;\n          return new _ccitt_stream.CCITTFaxStream(stream, maybeLength, params);\n        }\n        if (name === 'RunLengthDecode' || name === 'RL') {\n          xrefStreamStats[_util.StreamType.RL] = true;\n          return new _stream.RunLengthStream(stream, maybeLength);\n        }\n        if (name === 'JBIG2Decode') {\n          xrefStreamStats[_util.StreamType.JBIG] = true;\n          return new _jbig2_stream.Jbig2Stream(stream, maybeLength, stream.dict, params);\n        }\n        (0, _util.warn)('filter \"' + name + '\" not supported yet');\n        return stream;\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid stream: \\\"' + ex + '\\\"');\n        return new _stream.NullStream();\n      }\n    }\n  };\n  return Parser;\n}();\nvar Lexer = function LexerClosure() {\n  function Lexer(stream, knownCommands) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n    this.knownCommands = knownCommands;\n    this.beginInlineImagePos = -1;\n  }\n  var specialChars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  function toHexDigit(ch) {\n    if (ch >= 0x30 && ch <= 0x39) {\n      return ch & 0x0F;\n    }\n    if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n      return (ch & 0x0F) + 9;\n    }\n    return -1;\n  }\n  Lexer.prototype = {\n    nextChar: function Lexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    peekChar: function Lexer_peekChar() {\n      return this.stream.peekByte();\n    },\n    getNumber: function Lexer_getNumber() {\n      var ch = this.currentChar;\n      var eNotation = false;\n      var divideBy = 0;\n      var sign = 1;\n      if (ch === 0x2D) {\n        sign = -1;\n        ch = this.nextChar();\n        if (ch === 0x2D) {\n          ch = this.nextChar();\n        }\n      } else if (ch === 0x2B) {\n        ch = this.nextChar();\n      }\n      if (ch === 0x2E) {\n        divideBy = 10;\n        ch = this.nextChar();\n      }\n      if (ch === 0x0A || ch === 0x0D) {\n        do {\n          ch = this.nextChar();\n        } while (ch === 0x0A || ch === 0x0D);\n      }\n      if (ch < 0x30 || ch > 0x39) {\n        throw new _util.FormatError('Invalid number: ' + String.fromCharCode(ch) + ' (charCode ' + ch + ')');\n      }\n      var baseValue = ch - 0x30;\n      var powerValue = 0;\n      var powerValueSign = 1;\n      while ((ch = this.nextChar()) >= 0) {\n        if (0x30 <= ch && ch <= 0x39) {\n          var currentDigit = ch - 0x30;\n          if (eNotation) {\n            powerValue = powerValue * 10 + currentDigit;\n          } else {\n            if (divideBy !== 0) {\n              divideBy *= 10;\n            }\n            baseValue = baseValue * 10 + currentDigit;\n          }\n        } else if (ch === 0x2E) {\n          if (divideBy === 0) {\n            divideBy = 1;\n          } else {\n            break;\n          }\n        } else if (ch === 0x2D) {\n          (0, _util.warn)('Badly formatted number');\n        } else if (ch === 0x45 || ch === 0x65) {\n          ch = this.peekChar();\n          if (ch === 0x2B || ch === 0x2D) {\n            powerValueSign = ch === 0x2D ? -1 : 1;\n            this.nextChar();\n          } else if (ch < 0x30 || ch > 0x39) {\n            break;\n          }\n          eNotation = true;\n        } else {\n          break;\n        }\n      }\n      if (divideBy !== 0) {\n        baseValue /= divideBy;\n      }\n      if (eNotation) {\n        baseValue *= Math.pow(10, powerValueSign * powerValue);\n      }\n      return sign * baseValue;\n    },\n    getString: function Lexer_getString() {\n      var numParen = 1;\n      var done = false;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.nextChar();\n      while (true) {\n        var charBuffered = false;\n        switch (ch | 0) {\n          case -1:\n            (0, _util.warn)('Unterminated string');\n            done = true;\n            break;\n          case 0x28:\n            ++numParen;\n            strBuf.push('(');\n            break;\n          case 0x29:\n            if (--numParen === 0) {\n              this.nextChar();\n              done = true;\n            } else {\n              strBuf.push(')');\n            }\n            break;\n          case 0x5C:\n            ch = this.nextChar();\n            switch (ch) {\n              case -1:\n                (0, _util.warn)('Unterminated string');\n                done = true;\n                break;\n              case 0x6E:\n                strBuf.push('\\n');\n                break;\n              case 0x72:\n                strBuf.push('\\r');\n                break;\n              case 0x74:\n                strBuf.push('\\t');\n                break;\n              case 0x62:\n                strBuf.push('\\b');\n                break;\n              case 0x66:\n                strBuf.push('\\f');\n                break;\n              case 0x5C:\n              case 0x28:\n              case 0x29:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n              case 0x30:\n              case 0x31:\n              case 0x32:\n              case 0x33:\n              case 0x34:\n              case 0x35:\n              case 0x36:\n              case 0x37:\n                var x = ch & 0x0F;\n                ch = this.nextChar();\n                charBuffered = true;\n                if (ch >= 0x30 && ch <= 0x37) {\n                  x = (x << 3) + (ch & 0x0F);\n                  ch = this.nextChar();\n                  if (ch >= 0x30 && ch <= 0x37) {\n                    charBuffered = false;\n                    x = (x << 3) + (ch & 0x0F);\n                  }\n                }\n                strBuf.push(String.fromCharCode(x));\n                break;\n              case 0x0D:\n                if (this.peekChar() === 0x0A) {\n                  this.nextChar();\n                }\n                break;\n              case 0x0A:\n                break;\n              default:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n            }\n            break;\n          default:\n            strBuf.push(String.fromCharCode(ch));\n            break;\n        }\n        if (done) {\n          break;\n        }\n        if (!charBuffered) {\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getName: function Lexer_getName() {\n      var ch, previousCh;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        if (ch === 0x23) {\n          ch = this.nextChar();\n          if (specialChars[ch]) {\n            (0, _util.warn)('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n            strBuf.push('#');\n            break;\n          }\n          var x = toHexDigit(ch);\n          if (x !== -1) {\n            previousCh = ch;\n            ch = this.nextChar();\n            var x2 = toHexDigit(ch);\n            if (x2 === -1) {\n              (0, _util.warn)('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n              strBuf.push('#', String.fromCharCode(previousCh));\n              if (specialChars[ch]) {\n                break;\n              }\n              strBuf.push(String.fromCharCode(ch));\n              continue;\n            }\n            strBuf.push(String.fromCharCode(x << 4 | x2));\n          } else {\n            strBuf.push('#', String.fromCharCode(ch));\n          }\n        } else {\n          strBuf.push(String.fromCharCode(ch));\n        }\n      }\n      if (strBuf.length > 127) {\n        (0, _util.warn)('name token is longer than allowed by the spec: ' + strBuf.length);\n      }\n      return _primitives.Name.get(strBuf.join(''));\n    },\n    getHexString: function Lexer_getHexString() {\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.currentChar;\n      var isFirstHex = true;\n      var firstDigit;\n      var secondDigit;\n      while (true) {\n        if (ch < 0) {\n          (0, _util.warn)('Unterminated hex string');\n          break;\n        } else if (ch === 0x3E) {\n          this.nextChar();\n          break;\n        } else if (specialChars[ch] === 1) {\n          ch = this.nextChar();\n          continue;\n        } else {\n          if (isFirstHex) {\n            firstDigit = toHexDigit(ch);\n            if (firstDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n          } else {\n            secondDigit = toHexDigit(ch);\n            if (secondDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n            strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n          }\n          isFirstHex = !isFirstHex;\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getObj: function Lexer_getObj() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (specialChars[ch] !== 1) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return this.getNumber();\n        case 0x28:\n          return this.getString();\n        case 0x2F:\n          return this.getName();\n        case 0x5B:\n          this.nextChar();\n          return _primitives.Cmd.get('[');\n        case 0x5D:\n          this.nextChar();\n          return _primitives.Cmd.get(']');\n        case 0x3C:\n          ch = this.nextChar();\n          if (ch === 0x3C) {\n            this.nextChar();\n            return _primitives.Cmd.get('<<');\n          }\n          return this.getHexString();\n        case 0x3E:\n          ch = this.nextChar();\n          if (ch === 0x3E) {\n            this.nextChar();\n            return _primitives.Cmd.get('>>');\n          }\n          return _primitives.Cmd.get('>');\n        case 0x7B:\n          this.nextChar();\n          return _primitives.Cmd.get('{');\n        case 0x7D:\n          this.nextChar();\n          return _primitives.Cmd.get('}');\n        case 0x29:\n          this.nextChar();\n          throw new _util.FormatError('Illegal character: ' + ch);\n      }\n      var str = String.fromCharCode(ch);\n      var knownCommands = this.knownCommands;\n      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        var possibleCommand = str + String.fromCharCode(ch);\n        if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n          break;\n        }\n        if (str.length === 128) {\n          throw new _util.FormatError('Command token too long: ' + str.length);\n        }\n        str = possibleCommand;\n        knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      }\n      if (str === 'true') {\n        return true;\n      }\n      if (str === 'false') {\n        return false;\n      }\n      if (str === 'null') {\n        return null;\n      }\n      if (str === 'BI') {\n        this.beginInlineImagePos = this.stream.pos;\n      }\n      return _primitives.Cmd.get(str);\n    },\n    skipToNextLine: function Lexer_skipToNextLine() {\n      var ch = this.currentChar;\n      while (ch >= 0) {\n        if (ch === 0x0D) {\n          ch = this.nextChar();\n          if (ch === 0x0A) {\n            this.nextChar();\n          }\n          break;\n        } else if (ch === 0x0A) {\n          this.nextChar();\n          break;\n        }\n        ch = this.nextChar();\n      }\n    }\n  };\n  return Lexer;\n}();\nvar Linearization = {\n  create: function LinearizationCreate(stream) {\n    function getInt(name, allowZeroValue) {\n      var obj = linDict.get(name);\n      if (Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n        return obj;\n      }\n      throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n    }\n    function getHints() {\n      var hints = linDict.get('H'),\n          hintsLength,\n          item;\n      if (Array.isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n        for (var index = 0; index < hintsLength; index++) {\n          if (!(Number.isInteger(item = hints[index]) && item > 0)) {\n            throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n          }\n        }\n        return hints;\n      }\n      throw new Error('Hint array in the linearization dictionary is invalid.');\n    }\n    var parser = new Parser(new Lexer(stream), false, null);\n    var obj1 = parser.getObj();\n    var obj2 = parser.getObj();\n    var obj3 = parser.getObj();\n    var linDict = parser.getObj();\n    var obj, length;\n    if (!(Number.isInteger(obj1) && Number.isInteger(obj2) && (0, _primitives.isCmd)(obj3, 'obj') && (0, _primitives.isDict)(linDict) && (0, _util.isNum)(obj = linDict.get('Linearized')) && obj > 0)) {\n      return null;\n    } else if ((length = getInt('L')) !== stream.length) {\n      throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n    }\n    return {\n      length: length,\n      hints: getHints(),\n      objectNumberFirst: getInt('O'),\n      endFirst: getInt('E'),\n      numPages: getInt('N'),\n      mainXRefEntriesOffset: getInt('T'),\n      pageFirst: linDict.has('P') ? getInt('P', true) : 0\n    };\n  }\n};\nexports.Lexer = Lexer;\nexports.Linearization = Linearization;\nexports.Parser = Parser;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/parser.js\n// module id = pN4A\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar getLookupTableFactory = require('../shared/util').getLookupTableFactory;\nvar getGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['A'] = 0x0041;\n  t['AE'] = 0x00C6;\n  t['AEacute'] = 0x01FC;\n  t['AEmacron'] = 0x01E2;\n  t['AEsmall'] = 0xF7E6;\n  t['Aacute'] = 0x00C1;\n  t['Aacutesmall'] = 0xF7E1;\n  t['Abreve'] = 0x0102;\n  t['Abreveacute'] = 0x1EAE;\n  t['Abrevecyrillic'] = 0x04D0;\n  t['Abrevedotbelow'] = 0x1EB6;\n  t['Abrevegrave'] = 0x1EB0;\n  t['Abrevehookabove'] = 0x1EB2;\n  t['Abrevetilde'] = 0x1EB4;\n  t['Acaron'] = 0x01CD;\n  t['Acircle'] = 0x24B6;\n  t['Acircumflex'] = 0x00C2;\n  t['Acircumflexacute'] = 0x1EA4;\n  t['Acircumflexdotbelow'] = 0x1EAC;\n  t['Acircumflexgrave'] = 0x1EA6;\n  t['Acircumflexhookabove'] = 0x1EA8;\n  t['Acircumflexsmall'] = 0xF7E2;\n  t['Acircumflextilde'] = 0x1EAA;\n  t['Acute'] = 0xF6C9;\n  t['Acutesmall'] = 0xF7B4;\n  t['Acyrillic'] = 0x0410;\n  t['Adblgrave'] = 0x0200;\n  t['Adieresis'] = 0x00C4;\n  t['Adieresiscyrillic'] = 0x04D2;\n  t['Adieresismacron'] = 0x01DE;\n  t['Adieresissmall'] = 0xF7E4;\n  t['Adotbelow'] = 0x1EA0;\n  t['Adotmacron'] = 0x01E0;\n  t['Agrave'] = 0x00C0;\n  t['Agravesmall'] = 0xF7E0;\n  t['Ahookabove'] = 0x1EA2;\n  t['Aiecyrillic'] = 0x04D4;\n  t['Ainvertedbreve'] = 0x0202;\n  t['Alpha'] = 0x0391;\n  t['Alphatonos'] = 0x0386;\n  t['Amacron'] = 0x0100;\n  t['Amonospace'] = 0xFF21;\n  t['Aogonek'] = 0x0104;\n  t['Aring'] = 0x00C5;\n  t['Aringacute'] = 0x01FA;\n  t['Aringbelow'] = 0x1E00;\n  t['Aringsmall'] = 0xF7E5;\n  t['Asmall'] = 0xF761;\n  t['Atilde'] = 0x00C3;\n  t['Atildesmall'] = 0xF7E3;\n  t['Aybarmenian'] = 0x0531;\n  t['B'] = 0x0042;\n  t['Bcircle'] = 0x24B7;\n  t['Bdotaccent'] = 0x1E02;\n  t['Bdotbelow'] = 0x1E04;\n  t['Becyrillic'] = 0x0411;\n  t['Benarmenian'] = 0x0532;\n  t['Beta'] = 0x0392;\n  t['Bhook'] = 0x0181;\n  t['Blinebelow'] = 0x1E06;\n  t['Bmonospace'] = 0xFF22;\n  t['Brevesmall'] = 0xF6F4;\n  t['Bsmall'] = 0xF762;\n  t['Btopbar'] = 0x0182;\n  t['C'] = 0x0043;\n  t['Caarmenian'] = 0x053E;\n  t['Cacute'] = 0x0106;\n  t['Caron'] = 0xF6CA;\n  t['Caronsmall'] = 0xF6F5;\n  t['Ccaron'] = 0x010C;\n  t['Ccedilla'] = 0x00C7;\n  t['Ccedillaacute'] = 0x1E08;\n  t['Ccedillasmall'] = 0xF7E7;\n  t['Ccircle'] = 0x24B8;\n  t['Ccircumflex'] = 0x0108;\n  t['Cdot'] = 0x010A;\n  t['Cdotaccent'] = 0x010A;\n  t['Cedillasmall'] = 0xF7B8;\n  t['Chaarmenian'] = 0x0549;\n  t['Cheabkhasiancyrillic'] = 0x04BC;\n  t['Checyrillic'] = 0x0427;\n  t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n  t['Chedescendercyrillic'] = 0x04B6;\n  t['Chedieresiscyrillic'] = 0x04F4;\n  t['Cheharmenian'] = 0x0543;\n  t['Chekhakassiancyrillic'] = 0x04CB;\n  t['Cheverticalstrokecyrillic'] = 0x04B8;\n  t['Chi'] = 0x03A7;\n  t['Chook'] = 0x0187;\n  t['Circumflexsmall'] = 0xF6F6;\n  t['Cmonospace'] = 0xFF23;\n  t['Coarmenian'] = 0x0551;\n  t['Csmall'] = 0xF763;\n  t['D'] = 0x0044;\n  t['DZ'] = 0x01F1;\n  t['DZcaron'] = 0x01C4;\n  t['Daarmenian'] = 0x0534;\n  t['Dafrican'] = 0x0189;\n  t['Dcaron'] = 0x010E;\n  t['Dcedilla'] = 0x1E10;\n  t['Dcircle'] = 0x24B9;\n  t['Dcircumflexbelow'] = 0x1E12;\n  t['Dcroat'] = 0x0110;\n  t['Ddotaccent'] = 0x1E0A;\n  t['Ddotbelow'] = 0x1E0C;\n  t['Decyrillic'] = 0x0414;\n  t['Deicoptic'] = 0x03EE;\n  t['Delta'] = 0x2206;\n  t['Deltagreek'] = 0x0394;\n  t['Dhook'] = 0x018A;\n  t['Dieresis'] = 0xF6CB;\n  t['DieresisAcute'] = 0xF6CC;\n  t['DieresisGrave'] = 0xF6CD;\n  t['Dieresissmall'] = 0xF7A8;\n  t['Digammagreek'] = 0x03DC;\n  t['Djecyrillic'] = 0x0402;\n  t['Dlinebelow'] = 0x1E0E;\n  t['Dmonospace'] = 0xFF24;\n  t['Dotaccentsmall'] = 0xF6F7;\n  t['Dslash'] = 0x0110;\n  t['Dsmall'] = 0xF764;\n  t['Dtopbar'] = 0x018B;\n  t['Dz'] = 0x01F2;\n  t['Dzcaron'] = 0x01C5;\n  t['Dzeabkhasiancyrillic'] = 0x04E0;\n  t['Dzecyrillic'] = 0x0405;\n  t['Dzhecyrillic'] = 0x040F;\n  t['E'] = 0x0045;\n  t['Eacute'] = 0x00C9;\n  t['Eacutesmall'] = 0xF7E9;\n  t['Ebreve'] = 0x0114;\n  t['Ecaron'] = 0x011A;\n  t['Ecedillabreve'] = 0x1E1C;\n  t['Echarmenian'] = 0x0535;\n  t['Ecircle'] = 0x24BA;\n  t['Ecircumflex'] = 0x00CA;\n  t['Ecircumflexacute'] = 0x1EBE;\n  t['Ecircumflexbelow'] = 0x1E18;\n  t['Ecircumflexdotbelow'] = 0x1EC6;\n  t['Ecircumflexgrave'] = 0x1EC0;\n  t['Ecircumflexhookabove'] = 0x1EC2;\n  t['Ecircumflexsmall'] = 0xF7EA;\n  t['Ecircumflextilde'] = 0x1EC4;\n  t['Ecyrillic'] = 0x0404;\n  t['Edblgrave'] = 0x0204;\n  t['Edieresis'] = 0x00CB;\n  t['Edieresissmall'] = 0xF7EB;\n  t['Edot'] = 0x0116;\n  t['Edotaccent'] = 0x0116;\n  t['Edotbelow'] = 0x1EB8;\n  t['Efcyrillic'] = 0x0424;\n  t['Egrave'] = 0x00C8;\n  t['Egravesmall'] = 0xF7E8;\n  t['Eharmenian'] = 0x0537;\n  t['Ehookabove'] = 0x1EBA;\n  t['Eightroman'] = 0x2167;\n  t['Einvertedbreve'] = 0x0206;\n  t['Eiotifiedcyrillic'] = 0x0464;\n  t['Elcyrillic'] = 0x041B;\n  t['Elevenroman'] = 0x216A;\n  t['Emacron'] = 0x0112;\n  t['Emacronacute'] = 0x1E16;\n  t['Emacrongrave'] = 0x1E14;\n  t['Emcyrillic'] = 0x041C;\n  t['Emonospace'] = 0xFF25;\n  t['Encyrillic'] = 0x041D;\n  t['Endescendercyrillic'] = 0x04A2;\n  t['Eng'] = 0x014A;\n  t['Enghecyrillic'] = 0x04A4;\n  t['Enhookcyrillic'] = 0x04C7;\n  t['Eogonek'] = 0x0118;\n  t['Eopen'] = 0x0190;\n  t['Epsilon'] = 0x0395;\n  t['Epsilontonos'] = 0x0388;\n  t['Ercyrillic'] = 0x0420;\n  t['Ereversed'] = 0x018E;\n  t['Ereversedcyrillic'] = 0x042D;\n  t['Escyrillic'] = 0x0421;\n  t['Esdescendercyrillic'] = 0x04AA;\n  t['Esh'] = 0x01A9;\n  t['Esmall'] = 0xF765;\n  t['Eta'] = 0x0397;\n  t['Etarmenian'] = 0x0538;\n  t['Etatonos'] = 0x0389;\n  t['Eth'] = 0x00D0;\n  t['Ethsmall'] = 0xF7F0;\n  t['Etilde'] = 0x1EBC;\n  t['Etildebelow'] = 0x1E1A;\n  t['Euro'] = 0x20AC;\n  t['Ezh'] = 0x01B7;\n  t['Ezhcaron'] = 0x01EE;\n  t['Ezhreversed'] = 0x01B8;\n  t['F'] = 0x0046;\n  t['Fcircle'] = 0x24BB;\n  t['Fdotaccent'] = 0x1E1E;\n  t['Feharmenian'] = 0x0556;\n  t['Feicoptic'] = 0x03E4;\n  t['Fhook'] = 0x0191;\n  t['Fitacyrillic'] = 0x0472;\n  t['Fiveroman'] = 0x2164;\n  t['Fmonospace'] = 0xFF26;\n  t['Fourroman'] = 0x2163;\n  t['Fsmall'] = 0xF766;\n  t['G'] = 0x0047;\n  t['GBsquare'] = 0x3387;\n  t['Gacute'] = 0x01F4;\n  t['Gamma'] = 0x0393;\n  t['Gammaafrican'] = 0x0194;\n  t['Gangiacoptic'] = 0x03EA;\n  t['Gbreve'] = 0x011E;\n  t['Gcaron'] = 0x01E6;\n  t['Gcedilla'] = 0x0122;\n  t['Gcircle'] = 0x24BC;\n  t['Gcircumflex'] = 0x011C;\n  t['Gcommaaccent'] = 0x0122;\n  t['Gdot'] = 0x0120;\n  t['Gdotaccent'] = 0x0120;\n  t['Gecyrillic'] = 0x0413;\n  t['Ghadarmenian'] = 0x0542;\n  t['Ghemiddlehookcyrillic'] = 0x0494;\n  t['Ghestrokecyrillic'] = 0x0492;\n  t['Gheupturncyrillic'] = 0x0490;\n  t['Ghook'] = 0x0193;\n  t['Gimarmenian'] = 0x0533;\n  t['Gjecyrillic'] = 0x0403;\n  t['Gmacron'] = 0x1E20;\n  t['Gmonospace'] = 0xFF27;\n  t['Grave'] = 0xF6CE;\n  t['Gravesmall'] = 0xF760;\n  t['Gsmall'] = 0xF767;\n  t['Gsmallhook'] = 0x029B;\n  t['Gstroke'] = 0x01E4;\n  t['H'] = 0x0048;\n  t['H18533'] = 0x25CF;\n  t['H18543'] = 0x25AA;\n  t['H18551'] = 0x25AB;\n  t['H22073'] = 0x25A1;\n  t['HPsquare'] = 0x33CB;\n  t['Haabkhasiancyrillic'] = 0x04A8;\n  t['Hadescendercyrillic'] = 0x04B2;\n  t['Hardsigncyrillic'] = 0x042A;\n  t['Hbar'] = 0x0126;\n  t['Hbrevebelow'] = 0x1E2A;\n  t['Hcedilla'] = 0x1E28;\n  t['Hcircle'] = 0x24BD;\n  t['Hcircumflex'] = 0x0124;\n  t['Hdieresis'] = 0x1E26;\n  t['Hdotaccent'] = 0x1E22;\n  t['Hdotbelow'] = 0x1E24;\n  t['Hmonospace'] = 0xFF28;\n  t['Hoarmenian'] = 0x0540;\n  t['Horicoptic'] = 0x03E8;\n  t['Hsmall'] = 0xF768;\n  t['Hungarumlaut'] = 0xF6CF;\n  t['Hungarumlautsmall'] = 0xF6F8;\n  t['Hzsquare'] = 0x3390;\n  t['I'] = 0x0049;\n  t['IAcyrillic'] = 0x042F;\n  t['IJ'] = 0x0132;\n  t['IUcyrillic'] = 0x042E;\n  t['Iacute'] = 0x00CD;\n  t['Iacutesmall'] = 0xF7ED;\n  t['Ibreve'] = 0x012C;\n  t['Icaron'] = 0x01CF;\n  t['Icircle'] = 0x24BE;\n  t['Icircumflex'] = 0x00CE;\n  t['Icircumflexsmall'] = 0xF7EE;\n  t['Icyrillic'] = 0x0406;\n  t['Idblgrave'] = 0x0208;\n  t['Idieresis'] = 0x00CF;\n  t['Idieresisacute'] = 0x1E2E;\n  t['Idieresiscyrillic'] = 0x04E4;\n  t['Idieresissmall'] = 0xF7EF;\n  t['Idot'] = 0x0130;\n  t['Idotaccent'] = 0x0130;\n  t['Idotbelow'] = 0x1ECA;\n  t['Iebrevecyrillic'] = 0x04D6;\n  t['Iecyrillic'] = 0x0415;\n  t['Ifraktur'] = 0x2111;\n  t['Igrave'] = 0x00CC;\n  t['Igravesmall'] = 0xF7EC;\n  t['Ihookabove'] = 0x1EC8;\n  t['Iicyrillic'] = 0x0418;\n  t['Iinvertedbreve'] = 0x020A;\n  t['Iishortcyrillic'] = 0x0419;\n  t['Imacron'] = 0x012A;\n  t['Imacroncyrillic'] = 0x04E2;\n  t['Imonospace'] = 0xFF29;\n  t['Iniarmenian'] = 0x053B;\n  t['Iocyrillic'] = 0x0401;\n  t['Iogonek'] = 0x012E;\n  t['Iota'] = 0x0399;\n  t['Iotaafrican'] = 0x0196;\n  t['Iotadieresis'] = 0x03AA;\n  t['Iotatonos'] = 0x038A;\n  t['Ismall'] = 0xF769;\n  t['Istroke'] = 0x0197;\n  t['Itilde'] = 0x0128;\n  t['Itildebelow'] = 0x1E2C;\n  t['Izhitsacyrillic'] = 0x0474;\n  t['Izhitsadblgravecyrillic'] = 0x0476;\n  t['J'] = 0x004A;\n  t['Jaarmenian'] = 0x0541;\n  t['Jcircle'] = 0x24BF;\n  t['Jcircumflex'] = 0x0134;\n  t['Jecyrillic'] = 0x0408;\n  t['Jheharmenian'] = 0x054B;\n  t['Jmonospace'] = 0xFF2A;\n  t['Jsmall'] = 0xF76A;\n  t['K'] = 0x004B;\n  t['KBsquare'] = 0x3385;\n  t['KKsquare'] = 0x33CD;\n  t['Kabashkircyrillic'] = 0x04A0;\n  t['Kacute'] = 0x1E30;\n  t['Kacyrillic'] = 0x041A;\n  t['Kadescendercyrillic'] = 0x049A;\n  t['Kahookcyrillic'] = 0x04C3;\n  t['Kappa'] = 0x039A;\n  t['Kastrokecyrillic'] = 0x049E;\n  t['Kaverticalstrokecyrillic'] = 0x049C;\n  t['Kcaron'] = 0x01E8;\n  t['Kcedilla'] = 0x0136;\n  t['Kcircle'] = 0x24C0;\n  t['Kcommaaccent'] = 0x0136;\n  t['Kdotbelow'] = 0x1E32;\n  t['Keharmenian'] = 0x0554;\n  t['Kenarmenian'] = 0x053F;\n  t['Khacyrillic'] = 0x0425;\n  t['Kheicoptic'] = 0x03E6;\n  t['Khook'] = 0x0198;\n  t['Kjecyrillic'] = 0x040C;\n  t['Klinebelow'] = 0x1E34;\n  t['Kmonospace'] = 0xFF2B;\n  t['Koppacyrillic'] = 0x0480;\n  t['Koppagreek'] = 0x03DE;\n  t['Ksicyrillic'] = 0x046E;\n  t['Ksmall'] = 0xF76B;\n  t['L'] = 0x004C;\n  t['LJ'] = 0x01C7;\n  t['LL'] = 0xF6BF;\n  t['Lacute'] = 0x0139;\n  t['Lambda'] = 0x039B;\n  t['Lcaron'] = 0x013D;\n  t['Lcedilla'] = 0x013B;\n  t['Lcircle'] = 0x24C1;\n  t['Lcircumflexbelow'] = 0x1E3C;\n  t['Lcommaaccent'] = 0x013B;\n  t['Ldot'] = 0x013F;\n  t['Ldotaccent'] = 0x013F;\n  t['Ldotbelow'] = 0x1E36;\n  t['Ldotbelowmacron'] = 0x1E38;\n  t['Liwnarmenian'] = 0x053C;\n  t['Lj'] = 0x01C8;\n  t['Ljecyrillic'] = 0x0409;\n  t['Llinebelow'] = 0x1E3A;\n  t['Lmonospace'] = 0xFF2C;\n  t['Lslash'] = 0x0141;\n  t['Lslashsmall'] = 0xF6F9;\n  t['Lsmall'] = 0xF76C;\n  t['M'] = 0x004D;\n  t['MBsquare'] = 0x3386;\n  t['Macron'] = 0xF6D0;\n  t['Macronsmall'] = 0xF7AF;\n  t['Macute'] = 0x1E3E;\n  t['Mcircle'] = 0x24C2;\n  t['Mdotaccent'] = 0x1E40;\n  t['Mdotbelow'] = 0x1E42;\n  t['Menarmenian'] = 0x0544;\n  t['Mmonospace'] = 0xFF2D;\n  t['Msmall'] = 0xF76D;\n  t['Mturned'] = 0x019C;\n  t['Mu'] = 0x039C;\n  t['N'] = 0x004E;\n  t['NJ'] = 0x01CA;\n  t['Nacute'] = 0x0143;\n  t['Ncaron'] = 0x0147;\n  t['Ncedilla'] = 0x0145;\n  t['Ncircle'] = 0x24C3;\n  t['Ncircumflexbelow'] = 0x1E4A;\n  t['Ncommaaccent'] = 0x0145;\n  t['Ndotaccent'] = 0x1E44;\n  t['Ndotbelow'] = 0x1E46;\n  t['Nhookleft'] = 0x019D;\n  t['Nineroman'] = 0x2168;\n  t['Nj'] = 0x01CB;\n  t['Njecyrillic'] = 0x040A;\n  t['Nlinebelow'] = 0x1E48;\n  t['Nmonospace'] = 0xFF2E;\n  t['Nowarmenian'] = 0x0546;\n  t['Nsmall'] = 0xF76E;\n  t['Ntilde'] = 0x00D1;\n  t['Ntildesmall'] = 0xF7F1;\n  t['Nu'] = 0x039D;\n  t['O'] = 0x004F;\n  t['OE'] = 0x0152;\n  t['OEsmall'] = 0xF6FA;\n  t['Oacute'] = 0x00D3;\n  t['Oacutesmall'] = 0xF7F3;\n  t['Obarredcyrillic'] = 0x04E8;\n  t['Obarreddieresiscyrillic'] = 0x04EA;\n  t['Obreve'] = 0x014E;\n  t['Ocaron'] = 0x01D1;\n  t['Ocenteredtilde'] = 0x019F;\n  t['Ocircle'] = 0x24C4;\n  t['Ocircumflex'] = 0x00D4;\n  t['Ocircumflexacute'] = 0x1ED0;\n  t['Ocircumflexdotbelow'] = 0x1ED8;\n  t['Ocircumflexgrave'] = 0x1ED2;\n  t['Ocircumflexhookabove'] = 0x1ED4;\n  t['Ocircumflexsmall'] = 0xF7F4;\n  t['Ocircumflextilde'] = 0x1ED6;\n  t['Ocyrillic'] = 0x041E;\n  t['Odblacute'] = 0x0150;\n  t['Odblgrave'] = 0x020C;\n  t['Odieresis'] = 0x00D6;\n  t['Odieresiscyrillic'] = 0x04E6;\n  t['Odieresissmall'] = 0xF7F6;\n  t['Odotbelow'] = 0x1ECC;\n  t['Ogoneksmall'] = 0xF6FB;\n  t['Ograve'] = 0x00D2;\n  t['Ogravesmall'] = 0xF7F2;\n  t['Oharmenian'] = 0x0555;\n  t['Ohm'] = 0x2126;\n  t['Ohookabove'] = 0x1ECE;\n  t['Ohorn'] = 0x01A0;\n  t['Ohornacute'] = 0x1EDA;\n  t['Ohorndotbelow'] = 0x1EE2;\n  t['Ohorngrave'] = 0x1EDC;\n  t['Ohornhookabove'] = 0x1EDE;\n  t['Ohorntilde'] = 0x1EE0;\n  t['Ohungarumlaut'] = 0x0150;\n  t['Oi'] = 0x01A2;\n  t['Oinvertedbreve'] = 0x020E;\n  t['Omacron'] = 0x014C;\n  t['Omacronacute'] = 0x1E52;\n  t['Omacrongrave'] = 0x1E50;\n  t['Omega'] = 0x2126;\n  t['Omegacyrillic'] = 0x0460;\n  t['Omegagreek'] = 0x03A9;\n  t['Omegaroundcyrillic'] = 0x047A;\n  t['Omegatitlocyrillic'] = 0x047C;\n  t['Omegatonos'] = 0x038F;\n  t['Omicron'] = 0x039F;\n  t['Omicrontonos'] = 0x038C;\n  t['Omonospace'] = 0xFF2F;\n  t['Oneroman'] = 0x2160;\n  t['Oogonek'] = 0x01EA;\n  t['Oogonekmacron'] = 0x01EC;\n  t['Oopen'] = 0x0186;\n  t['Oslash'] = 0x00D8;\n  t['Oslashacute'] = 0x01FE;\n  t['Oslashsmall'] = 0xF7F8;\n  t['Osmall'] = 0xF76F;\n  t['Ostrokeacute'] = 0x01FE;\n  t['Otcyrillic'] = 0x047E;\n  t['Otilde'] = 0x00D5;\n  t['Otildeacute'] = 0x1E4C;\n  t['Otildedieresis'] = 0x1E4E;\n  t['Otildesmall'] = 0xF7F5;\n  t['P'] = 0x0050;\n  t['Pacute'] = 0x1E54;\n  t['Pcircle'] = 0x24C5;\n  t['Pdotaccent'] = 0x1E56;\n  t['Pecyrillic'] = 0x041F;\n  t['Peharmenian'] = 0x054A;\n  t['Pemiddlehookcyrillic'] = 0x04A6;\n  t['Phi'] = 0x03A6;\n  t['Phook'] = 0x01A4;\n  t['Pi'] = 0x03A0;\n  t['Piwrarmenian'] = 0x0553;\n  t['Pmonospace'] = 0xFF30;\n  t['Psi'] = 0x03A8;\n  t['Psicyrillic'] = 0x0470;\n  t['Psmall'] = 0xF770;\n  t['Q'] = 0x0051;\n  t['Qcircle'] = 0x24C6;\n  t['Qmonospace'] = 0xFF31;\n  t['Qsmall'] = 0xF771;\n  t['R'] = 0x0052;\n  t['Raarmenian'] = 0x054C;\n  t['Racute'] = 0x0154;\n  t['Rcaron'] = 0x0158;\n  t['Rcedilla'] = 0x0156;\n  t['Rcircle'] = 0x24C7;\n  t['Rcommaaccent'] = 0x0156;\n  t['Rdblgrave'] = 0x0210;\n  t['Rdotaccent'] = 0x1E58;\n  t['Rdotbelow'] = 0x1E5A;\n  t['Rdotbelowmacron'] = 0x1E5C;\n  t['Reharmenian'] = 0x0550;\n  t['Rfraktur'] = 0x211C;\n  t['Rho'] = 0x03A1;\n  t['Ringsmall'] = 0xF6FC;\n  t['Rinvertedbreve'] = 0x0212;\n  t['Rlinebelow'] = 0x1E5E;\n  t['Rmonospace'] = 0xFF32;\n  t['Rsmall'] = 0xF772;\n  t['Rsmallinverted'] = 0x0281;\n  t['Rsmallinvertedsuperior'] = 0x02B6;\n  t['S'] = 0x0053;\n  t['SF010000'] = 0x250C;\n  t['SF020000'] = 0x2514;\n  t['SF030000'] = 0x2510;\n  t['SF040000'] = 0x2518;\n  t['SF050000'] = 0x253C;\n  t['SF060000'] = 0x252C;\n  t['SF070000'] = 0x2534;\n  t['SF080000'] = 0x251C;\n  t['SF090000'] = 0x2524;\n  t['SF100000'] = 0x2500;\n  t['SF110000'] = 0x2502;\n  t['SF190000'] = 0x2561;\n  t['SF200000'] = 0x2562;\n  t['SF210000'] = 0x2556;\n  t['SF220000'] = 0x2555;\n  t['SF230000'] = 0x2563;\n  t['SF240000'] = 0x2551;\n  t['SF250000'] = 0x2557;\n  t['SF260000'] = 0x255D;\n  t['SF270000'] = 0x255C;\n  t['SF280000'] = 0x255B;\n  t['SF360000'] = 0x255E;\n  t['SF370000'] = 0x255F;\n  t['SF380000'] = 0x255A;\n  t['SF390000'] = 0x2554;\n  t['SF400000'] = 0x2569;\n  t['SF410000'] = 0x2566;\n  t['SF420000'] = 0x2560;\n  t['SF430000'] = 0x2550;\n  t['SF440000'] = 0x256C;\n  t['SF450000'] = 0x2567;\n  t['SF460000'] = 0x2568;\n  t['SF470000'] = 0x2564;\n  t['SF480000'] = 0x2565;\n  t['SF490000'] = 0x2559;\n  t['SF500000'] = 0x2558;\n  t['SF510000'] = 0x2552;\n  t['SF520000'] = 0x2553;\n  t['SF530000'] = 0x256B;\n  t['SF540000'] = 0x256A;\n  t['Sacute'] = 0x015A;\n  t['Sacutedotaccent'] = 0x1E64;\n  t['Sampigreek'] = 0x03E0;\n  t['Scaron'] = 0x0160;\n  t['Scarondotaccent'] = 0x1E66;\n  t['Scaronsmall'] = 0xF6FD;\n  t['Scedilla'] = 0x015E;\n  t['Schwa'] = 0x018F;\n  t['Schwacyrillic'] = 0x04D8;\n  t['Schwadieresiscyrillic'] = 0x04DA;\n  t['Scircle'] = 0x24C8;\n  t['Scircumflex'] = 0x015C;\n  t['Scommaaccent'] = 0x0218;\n  t['Sdotaccent'] = 0x1E60;\n  t['Sdotbelow'] = 0x1E62;\n  t['Sdotbelowdotaccent'] = 0x1E68;\n  t['Seharmenian'] = 0x054D;\n  t['Sevenroman'] = 0x2166;\n  t['Shaarmenian'] = 0x0547;\n  t['Shacyrillic'] = 0x0428;\n  t['Shchacyrillic'] = 0x0429;\n  t['Sheicoptic'] = 0x03E2;\n  t['Shhacyrillic'] = 0x04BA;\n  t['Shimacoptic'] = 0x03EC;\n  t['Sigma'] = 0x03A3;\n  t['Sixroman'] = 0x2165;\n  t['Smonospace'] = 0xFF33;\n  t['Softsigncyrillic'] = 0x042C;\n  t['Ssmall'] = 0xF773;\n  t['Stigmagreek'] = 0x03DA;\n  t['T'] = 0x0054;\n  t['Tau'] = 0x03A4;\n  t['Tbar'] = 0x0166;\n  t['Tcaron'] = 0x0164;\n  t['Tcedilla'] = 0x0162;\n  t['Tcircle'] = 0x24C9;\n  t['Tcircumflexbelow'] = 0x1E70;\n  t['Tcommaaccent'] = 0x0162;\n  t['Tdotaccent'] = 0x1E6A;\n  t['Tdotbelow'] = 0x1E6C;\n  t['Tecyrillic'] = 0x0422;\n  t['Tedescendercyrillic'] = 0x04AC;\n  t['Tenroman'] = 0x2169;\n  t['Tetsecyrillic'] = 0x04B4;\n  t['Theta'] = 0x0398;\n  t['Thook'] = 0x01AC;\n  t['Thorn'] = 0x00DE;\n  t['Thornsmall'] = 0xF7FE;\n  t['Threeroman'] = 0x2162;\n  t['Tildesmall'] = 0xF6FE;\n  t['Tiwnarmenian'] = 0x054F;\n  t['Tlinebelow'] = 0x1E6E;\n  t['Tmonospace'] = 0xFF34;\n  t['Toarmenian'] = 0x0539;\n  t['Tonefive'] = 0x01BC;\n  t['Tonesix'] = 0x0184;\n  t['Tonetwo'] = 0x01A7;\n  t['Tretroflexhook'] = 0x01AE;\n  t['Tsecyrillic'] = 0x0426;\n  t['Tshecyrillic'] = 0x040B;\n  t['Tsmall'] = 0xF774;\n  t['Twelveroman'] = 0x216B;\n  t['Tworoman'] = 0x2161;\n  t['U'] = 0x0055;\n  t['Uacute'] = 0x00DA;\n  t['Uacutesmall'] = 0xF7FA;\n  t['Ubreve'] = 0x016C;\n  t['Ucaron'] = 0x01D3;\n  t['Ucircle'] = 0x24CA;\n  t['Ucircumflex'] = 0x00DB;\n  t['Ucircumflexbelow'] = 0x1E76;\n  t['Ucircumflexsmall'] = 0xF7FB;\n  t['Ucyrillic'] = 0x0423;\n  t['Udblacute'] = 0x0170;\n  t['Udblgrave'] = 0x0214;\n  t['Udieresis'] = 0x00DC;\n  t['Udieresisacute'] = 0x01D7;\n  t['Udieresisbelow'] = 0x1E72;\n  t['Udieresiscaron'] = 0x01D9;\n  t['Udieresiscyrillic'] = 0x04F0;\n  t['Udieresisgrave'] = 0x01DB;\n  t['Udieresismacron'] = 0x01D5;\n  t['Udieresissmall'] = 0xF7FC;\n  t['Udotbelow'] = 0x1EE4;\n  t['Ugrave'] = 0x00D9;\n  t['Ugravesmall'] = 0xF7F9;\n  t['Uhookabove'] = 0x1EE6;\n  t['Uhorn'] = 0x01AF;\n  t['Uhornacute'] = 0x1EE8;\n  t['Uhorndotbelow'] = 0x1EF0;\n  t['Uhorngrave'] = 0x1EEA;\n  t['Uhornhookabove'] = 0x1EEC;\n  t['Uhorntilde'] = 0x1EEE;\n  t['Uhungarumlaut'] = 0x0170;\n  t['Uhungarumlautcyrillic'] = 0x04F2;\n  t['Uinvertedbreve'] = 0x0216;\n  t['Ukcyrillic'] = 0x0478;\n  t['Umacron'] = 0x016A;\n  t['Umacroncyrillic'] = 0x04EE;\n  t['Umacrondieresis'] = 0x1E7A;\n  t['Umonospace'] = 0xFF35;\n  t['Uogonek'] = 0x0172;\n  t['Upsilon'] = 0x03A5;\n  t['Upsilon1'] = 0x03D2;\n  t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n  t['Upsilonafrican'] = 0x01B1;\n  t['Upsilondieresis'] = 0x03AB;\n  t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n  t['Upsilonhooksymbol'] = 0x03D2;\n  t['Upsilontonos'] = 0x038E;\n  t['Uring'] = 0x016E;\n  t['Ushortcyrillic'] = 0x040E;\n  t['Usmall'] = 0xF775;\n  t['Ustraightcyrillic'] = 0x04AE;\n  t['Ustraightstrokecyrillic'] = 0x04B0;\n  t['Utilde'] = 0x0168;\n  t['Utildeacute'] = 0x1E78;\n  t['Utildebelow'] = 0x1E74;\n  t['V'] = 0x0056;\n  t['Vcircle'] = 0x24CB;\n  t['Vdotbelow'] = 0x1E7E;\n  t['Vecyrillic'] = 0x0412;\n  t['Vewarmenian'] = 0x054E;\n  t['Vhook'] = 0x01B2;\n  t['Vmonospace'] = 0xFF36;\n  t['Voarmenian'] = 0x0548;\n  t['Vsmall'] = 0xF776;\n  t['Vtilde'] = 0x1E7C;\n  t['W'] = 0x0057;\n  t['Wacute'] = 0x1E82;\n  t['Wcircle'] = 0x24CC;\n  t['Wcircumflex'] = 0x0174;\n  t['Wdieresis'] = 0x1E84;\n  t['Wdotaccent'] = 0x1E86;\n  t['Wdotbelow'] = 0x1E88;\n  t['Wgrave'] = 0x1E80;\n  t['Wmonospace'] = 0xFF37;\n  t['Wsmall'] = 0xF777;\n  t['X'] = 0x0058;\n  t['Xcircle'] = 0x24CD;\n  t['Xdieresis'] = 0x1E8C;\n  t['Xdotaccent'] = 0x1E8A;\n  t['Xeharmenian'] = 0x053D;\n  t['Xi'] = 0x039E;\n  t['Xmonospace'] = 0xFF38;\n  t['Xsmall'] = 0xF778;\n  t['Y'] = 0x0059;\n  t['Yacute'] = 0x00DD;\n  t['Yacutesmall'] = 0xF7FD;\n  t['Yatcyrillic'] = 0x0462;\n  t['Ycircle'] = 0x24CE;\n  t['Ycircumflex'] = 0x0176;\n  t['Ydieresis'] = 0x0178;\n  t['Ydieresissmall'] = 0xF7FF;\n  t['Ydotaccent'] = 0x1E8E;\n  t['Ydotbelow'] = 0x1EF4;\n  t['Yericyrillic'] = 0x042B;\n  t['Yerudieresiscyrillic'] = 0x04F8;\n  t['Ygrave'] = 0x1EF2;\n  t['Yhook'] = 0x01B3;\n  t['Yhookabove'] = 0x1EF6;\n  t['Yiarmenian'] = 0x0545;\n  t['Yicyrillic'] = 0x0407;\n  t['Yiwnarmenian'] = 0x0552;\n  t['Ymonospace'] = 0xFF39;\n  t['Ysmall'] = 0xF779;\n  t['Ytilde'] = 0x1EF8;\n  t['Yusbigcyrillic'] = 0x046A;\n  t['Yusbigiotifiedcyrillic'] = 0x046C;\n  t['Yuslittlecyrillic'] = 0x0466;\n  t['Yuslittleiotifiedcyrillic'] = 0x0468;\n  t['Z'] = 0x005A;\n  t['Zaarmenian'] = 0x0536;\n  t['Zacute'] = 0x0179;\n  t['Zcaron'] = 0x017D;\n  t['Zcaronsmall'] = 0xF6FF;\n  t['Zcircle'] = 0x24CF;\n  t['Zcircumflex'] = 0x1E90;\n  t['Zdot'] = 0x017B;\n  t['Zdotaccent'] = 0x017B;\n  t['Zdotbelow'] = 0x1E92;\n  t['Zecyrillic'] = 0x0417;\n  t['Zedescendercyrillic'] = 0x0498;\n  t['Zedieresiscyrillic'] = 0x04DE;\n  t['Zeta'] = 0x0396;\n  t['Zhearmenian'] = 0x053A;\n  t['Zhebrevecyrillic'] = 0x04C1;\n  t['Zhecyrillic'] = 0x0416;\n  t['Zhedescendercyrillic'] = 0x0496;\n  t['Zhedieresiscyrillic'] = 0x04DC;\n  t['Zlinebelow'] = 0x1E94;\n  t['Zmonospace'] = 0xFF3A;\n  t['Zsmall'] = 0xF77A;\n  t['Zstroke'] = 0x01B5;\n  t['a'] = 0x0061;\n  t['aabengali'] = 0x0986;\n  t['aacute'] = 0x00E1;\n  t['aadeva'] = 0x0906;\n  t['aagujarati'] = 0x0A86;\n  t['aagurmukhi'] = 0x0A06;\n  t['aamatragurmukhi'] = 0x0A3E;\n  t['aarusquare'] = 0x3303;\n  t['aavowelsignbengali'] = 0x09BE;\n  t['aavowelsigndeva'] = 0x093E;\n  t['aavowelsigngujarati'] = 0x0ABE;\n  t['abbreviationmarkarmenian'] = 0x055F;\n  t['abbreviationsigndeva'] = 0x0970;\n  t['abengali'] = 0x0985;\n  t['abopomofo'] = 0x311A;\n  t['abreve'] = 0x0103;\n  t['abreveacute'] = 0x1EAF;\n  t['abrevecyrillic'] = 0x04D1;\n  t['abrevedotbelow'] = 0x1EB7;\n  t['abrevegrave'] = 0x1EB1;\n  t['abrevehookabove'] = 0x1EB3;\n  t['abrevetilde'] = 0x1EB5;\n  t['acaron'] = 0x01CE;\n  t['acircle'] = 0x24D0;\n  t['acircumflex'] = 0x00E2;\n  t['acircumflexacute'] = 0x1EA5;\n  t['acircumflexdotbelow'] = 0x1EAD;\n  t['acircumflexgrave'] = 0x1EA7;\n  t['acircumflexhookabove'] = 0x1EA9;\n  t['acircumflextilde'] = 0x1EAB;\n  t['acute'] = 0x00B4;\n  t['acutebelowcmb'] = 0x0317;\n  t['acutecmb'] = 0x0301;\n  t['acutecomb'] = 0x0301;\n  t['acutedeva'] = 0x0954;\n  t['acutelowmod'] = 0x02CF;\n  t['acutetonecmb'] = 0x0341;\n  t['acyrillic'] = 0x0430;\n  t['adblgrave'] = 0x0201;\n  t['addakgurmukhi'] = 0x0A71;\n  t['adeva'] = 0x0905;\n  t['adieresis'] = 0x00E4;\n  t['adieresiscyrillic'] = 0x04D3;\n  t['adieresismacron'] = 0x01DF;\n  t['adotbelow'] = 0x1EA1;\n  t['adotmacron'] = 0x01E1;\n  t['ae'] = 0x00E6;\n  t['aeacute'] = 0x01FD;\n  t['aekorean'] = 0x3150;\n  t['aemacron'] = 0x01E3;\n  t['afii00208'] = 0x2015;\n  t['afii08941'] = 0x20A4;\n  t['afii10017'] = 0x0410;\n  t['afii10018'] = 0x0411;\n  t['afii10019'] = 0x0412;\n  t['afii10020'] = 0x0413;\n  t['afii10021'] = 0x0414;\n  t['afii10022'] = 0x0415;\n  t['afii10023'] = 0x0401;\n  t['afii10024'] = 0x0416;\n  t['afii10025'] = 0x0417;\n  t['afii10026'] = 0x0418;\n  t['afii10027'] = 0x0419;\n  t['afii10028'] = 0x041A;\n  t['afii10029'] = 0x041B;\n  t['afii10030'] = 0x041C;\n  t['afii10031'] = 0x041D;\n  t['afii10032'] = 0x041E;\n  t['afii10033'] = 0x041F;\n  t['afii10034'] = 0x0420;\n  t['afii10035'] = 0x0421;\n  t['afii10036'] = 0x0422;\n  t['afii10037'] = 0x0423;\n  t['afii10038'] = 0x0424;\n  t['afii10039'] = 0x0425;\n  t['afii10040'] = 0x0426;\n  t['afii10041'] = 0x0427;\n  t['afii10042'] = 0x0428;\n  t['afii10043'] = 0x0429;\n  t['afii10044'] = 0x042A;\n  t['afii10045'] = 0x042B;\n  t['afii10046'] = 0x042C;\n  t['afii10047'] = 0x042D;\n  t['afii10048'] = 0x042E;\n  t['afii10049'] = 0x042F;\n  t['afii10050'] = 0x0490;\n  t['afii10051'] = 0x0402;\n  t['afii10052'] = 0x0403;\n  t['afii10053'] = 0x0404;\n  t['afii10054'] = 0x0405;\n  t['afii10055'] = 0x0406;\n  t['afii10056'] = 0x0407;\n  t['afii10057'] = 0x0408;\n  t['afii10058'] = 0x0409;\n  t['afii10059'] = 0x040A;\n  t['afii10060'] = 0x040B;\n  t['afii10061'] = 0x040C;\n  t['afii10062'] = 0x040E;\n  t['afii10063'] = 0xF6C4;\n  t['afii10064'] = 0xF6C5;\n  t['afii10065'] = 0x0430;\n  t['afii10066'] = 0x0431;\n  t['afii10067'] = 0x0432;\n  t['afii10068'] = 0x0433;\n  t['afii10069'] = 0x0434;\n  t['afii10070'] = 0x0435;\n  t['afii10071'] = 0x0451;\n  t['afii10072'] = 0x0436;\n  t['afii10073'] = 0x0437;\n  t['afii10074'] = 0x0438;\n  t['afii10075'] = 0x0439;\n  t['afii10076'] = 0x043A;\n  t['afii10077'] = 0x043B;\n  t['afii10078'] = 0x043C;\n  t['afii10079'] = 0x043D;\n  t['afii10080'] = 0x043E;\n  t['afii10081'] = 0x043F;\n  t['afii10082'] = 0x0440;\n  t['afii10083'] = 0x0441;\n  t['afii10084'] = 0x0442;\n  t['afii10085'] = 0x0443;\n  t['afii10086'] = 0x0444;\n  t['afii10087'] = 0x0445;\n  t['afii10088'] = 0x0446;\n  t['afii10089'] = 0x0447;\n  t['afii10090'] = 0x0448;\n  t['afii10091'] = 0x0449;\n  t['afii10092'] = 0x044A;\n  t['afii10093'] = 0x044B;\n  t['afii10094'] = 0x044C;\n  t['afii10095'] = 0x044D;\n  t['afii10096'] = 0x044E;\n  t['afii10097'] = 0x044F;\n  t['afii10098'] = 0x0491;\n  t['afii10099'] = 0x0452;\n  t['afii10100'] = 0x0453;\n  t['afii10101'] = 0x0454;\n  t['afii10102'] = 0x0455;\n  t['afii10103'] = 0x0456;\n  t['afii10104'] = 0x0457;\n  t['afii10105'] = 0x0458;\n  t['afii10106'] = 0x0459;\n  t['afii10107'] = 0x045A;\n  t['afii10108'] = 0x045B;\n  t['afii10109'] = 0x045C;\n  t['afii10110'] = 0x045E;\n  t['afii10145'] = 0x040F;\n  t['afii10146'] = 0x0462;\n  t['afii10147'] = 0x0472;\n  t['afii10148'] = 0x0474;\n  t['afii10192'] = 0xF6C6;\n  t['afii10193'] = 0x045F;\n  t['afii10194'] = 0x0463;\n  t['afii10195'] = 0x0473;\n  t['afii10196'] = 0x0475;\n  t['afii10831'] = 0xF6C7;\n  t['afii10832'] = 0xF6C8;\n  t['afii10846'] = 0x04D9;\n  t['afii299'] = 0x200E;\n  t['afii300'] = 0x200F;\n  t['afii301'] = 0x200D;\n  t['afii57381'] = 0x066A;\n  t['afii57388'] = 0x060C;\n  t['afii57392'] = 0x0660;\n  t['afii57393'] = 0x0661;\n  t['afii57394'] = 0x0662;\n  t['afii57395'] = 0x0663;\n  t['afii57396'] = 0x0664;\n  t['afii57397'] = 0x0665;\n  t['afii57398'] = 0x0666;\n  t['afii57399'] = 0x0667;\n  t['afii57400'] = 0x0668;\n  t['afii57401'] = 0x0669;\n  t['afii57403'] = 0x061B;\n  t['afii57407'] = 0x061F;\n  t['afii57409'] = 0x0621;\n  t['afii57410'] = 0x0622;\n  t['afii57411'] = 0x0623;\n  t['afii57412'] = 0x0624;\n  t['afii57413'] = 0x0625;\n  t['afii57414'] = 0x0626;\n  t['afii57415'] = 0x0627;\n  t['afii57416'] = 0x0628;\n  t['afii57417'] = 0x0629;\n  t['afii57418'] = 0x062A;\n  t['afii57419'] = 0x062B;\n  t['afii57420'] = 0x062C;\n  t['afii57421'] = 0x062D;\n  t['afii57422'] = 0x062E;\n  t['afii57423'] = 0x062F;\n  t['afii57424'] = 0x0630;\n  t['afii57425'] = 0x0631;\n  t['afii57426'] = 0x0632;\n  t['afii57427'] = 0x0633;\n  t['afii57428'] = 0x0634;\n  t['afii57429'] = 0x0635;\n  t['afii57430'] = 0x0636;\n  t['afii57431'] = 0x0637;\n  t['afii57432'] = 0x0638;\n  t['afii57433'] = 0x0639;\n  t['afii57434'] = 0x063A;\n  t['afii57440'] = 0x0640;\n  t['afii57441'] = 0x0641;\n  t['afii57442'] = 0x0642;\n  t['afii57443'] = 0x0643;\n  t['afii57444'] = 0x0644;\n  t['afii57445'] = 0x0645;\n  t['afii57446'] = 0x0646;\n  t['afii57448'] = 0x0648;\n  t['afii57449'] = 0x0649;\n  t['afii57450'] = 0x064A;\n  t['afii57451'] = 0x064B;\n  t['afii57452'] = 0x064C;\n  t['afii57453'] = 0x064D;\n  t['afii57454'] = 0x064E;\n  t['afii57455'] = 0x064F;\n  t['afii57456'] = 0x0650;\n  t['afii57457'] = 0x0651;\n  t['afii57458'] = 0x0652;\n  t['afii57470'] = 0x0647;\n  t['afii57505'] = 0x06A4;\n  t['afii57506'] = 0x067E;\n  t['afii57507'] = 0x0686;\n  t['afii57508'] = 0x0698;\n  t['afii57509'] = 0x06AF;\n  t['afii57511'] = 0x0679;\n  t['afii57512'] = 0x0688;\n  t['afii57513'] = 0x0691;\n  t['afii57514'] = 0x06BA;\n  t['afii57519'] = 0x06D2;\n  t['afii57534'] = 0x06D5;\n  t['afii57636'] = 0x20AA;\n  t['afii57645'] = 0x05BE;\n  t['afii57658'] = 0x05C3;\n  t['afii57664'] = 0x05D0;\n  t['afii57665'] = 0x05D1;\n  t['afii57666'] = 0x05D2;\n  t['afii57667'] = 0x05D3;\n  t['afii57668'] = 0x05D4;\n  t['afii57669'] = 0x05D5;\n  t['afii57670'] = 0x05D6;\n  t['afii57671'] = 0x05D7;\n  t['afii57672'] = 0x05D8;\n  t['afii57673'] = 0x05D9;\n  t['afii57674'] = 0x05DA;\n  t['afii57675'] = 0x05DB;\n  t['afii57676'] = 0x05DC;\n  t['afii57677'] = 0x05DD;\n  t['afii57678'] = 0x05DE;\n  t['afii57679'] = 0x05DF;\n  t['afii57680'] = 0x05E0;\n  t['afii57681'] = 0x05E1;\n  t['afii57682'] = 0x05E2;\n  t['afii57683'] = 0x05E3;\n  t['afii57684'] = 0x05E4;\n  t['afii57685'] = 0x05E5;\n  t['afii57686'] = 0x05E6;\n  t['afii57687'] = 0x05E7;\n  t['afii57688'] = 0x05E8;\n  t['afii57689'] = 0x05E9;\n  t['afii57690'] = 0x05EA;\n  t['afii57694'] = 0xFB2A;\n  t['afii57695'] = 0xFB2B;\n  t['afii57700'] = 0xFB4B;\n  t['afii57705'] = 0xFB1F;\n  t['afii57716'] = 0x05F0;\n  t['afii57717'] = 0x05F1;\n  t['afii57718'] = 0x05F2;\n  t['afii57723'] = 0xFB35;\n  t['afii57793'] = 0x05B4;\n  t['afii57794'] = 0x05B5;\n  t['afii57795'] = 0x05B6;\n  t['afii57796'] = 0x05BB;\n  t['afii57797'] = 0x05B8;\n  t['afii57798'] = 0x05B7;\n  t['afii57799'] = 0x05B0;\n  t['afii57800'] = 0x05B2;\n  t['afii57801'] = 0x05B1;\n  t['afii57802'] = 0x05B3;\n  t['afii57803'] = 0x05C2;\n  t['afii57804'] = 0x05C1;\n  t['afii57806'] = 0x05B9;\n  t['afii57807'] = 0x05BC;\n  t['afii57839'] = 0x05BD;\n  t['afii57841'] = 0x05BF;\n  t['afii57842'] = 0x05C0;\n  t['afii57929'] = 0x02BC;\n  t['afii61248'] = 0x2105;\n  t['afii61289'] = 0x2113;\n  t['afii61352'] = 0x2116;\n  t['afii61573'] = 0x202C;\n  t['afii61574'] = 0x202D;\n  t['afii61575'] = 0x202E;\n  t['afii61664'] = 0x200C;\n  t['afii63167'] = 0x066D;\n  t['afii64937'] = 0x02BD;\n  t['agrave'] = 0x00E0;\n  t['agujarati'] = 0x0A85;\n  t['agurmukhi'] = 0x0A05;\n  t['ahiragana'] = 0x3042;\n  t['ahookabove'] = 0x1EA3;\n  t['aibengali'] = 0x0990;\n  t['aibopomofo'] = 0x311E;\n  t['aideva'] = 0x0910;\n  t['aiecyrillic'] = 0x04D5;\n  t['aigujarati'] = 0x0A90;\n  t['aigurmukhi'] = 0x0A10;\n  t['aimatragurmukhi'] = 0x0A48;\n  t['ainarabic'] = 0x0639;\n  t['ainfinalarabic'] = 0xFECA;\n  t['aininitialarabic'] = 0xFECB;\n  t['ainmedialarabic'] = 0xFECC;\n  t['ainvertedbreve'] = 0x0203;\n  t['aivowelsignbengali'] = 0x09C8;\n  t['aivowelsigndeva'] = 0x0948;\n  t['aivowelsigngujarati'] = 0x0AC8;\n  t['akatakana'] = 0x30A2;\n  t['akatakanahalfwidth'] = 0xFF71;\n  t['akorean'] = 0x314F;\n  t['alef'] = 0x05D0;\n  t['alefarabic'] = 0x0627;\n  t['alefdageshhebrew'] = 0xFB30;\n  t['aleffinalarabic'] = 0xFE8E;\n  t['alefhamzaabovearabic'] = 0x0623;\n  t['alefhamzaabovefinalarabic'] = 0xFE84;\n  t['alefhamzabelowarabic'] = 0x0625;\n  t['alefhamzabelowfinalarabic'] = 0xFE88;\n  t['alefhebrew'] = 0x05D0;\n  t['aleflamedhebrew'] = 0xFB4F;\n  t['alefmaddaabovearabic'] = 0x0622;\n  t['alefmaddaabovefinalarabic'] = 0xFE82;\n  t['alefmaksuraarabic'] = 0x0649;\n  t['alefmaksurafinalarabic'] = 0xFEF0;\n  t['alefmaksurainitialarabic'] = 0xFEF3;\n  t['alefmaksuramedialarabic'] = 0xFEF4;\n  t['alefpatahhebrew'] = 0xFB2E;\n  t['alefqamatshebrew'] = 0xFB2F;\n  t['aleph'] = 0x2135;\n  t['allequal'] = 0x224C;\n  t['alpha'] = 0x03B1;\n  t['alphatonos'] = 0x03AC;\n  t['amacron'] = 0x0101;\n  t['amonospace'] = 0xFF41;\n  t['ampersand'] = 0x0026;\n  t['ampersandmonospace'] = 0xFF06;\n  t['ampersandsmall'] = 0xF726;\n  t['amsquare'] = 0x33C2;\n  t['anbopomofo'] = 0x3122;\n  t['angbopomofo'] = 0x3124;\n  t['angbracketleft'] = 0x3008;\n  t['angbracketright'] = 0x3009;\n  t['angkhankhuthai'] = 0x0E5A;\n  t['angle'] = 0x2220;\n  t['anglebracketleft'] = 0x3008;\n  t['anglebracketleftvertical'] = 0xFE3F;\n  t['anglebracketright'] = 0x3009;\n  t['anglebracketrightvertical'] = 0xFE40;\n  t['angleleft'] = 0x2329;\n  t['angleright'] = 0x232A;\n  t['angstrom'] = 0x212B;\n  t['anoteleia'] = 0x0387;\n  t['anudattadeva'] = 0x0952;\n  t['anusvarabengali'] = 0x0982;\n  t['anusvaradeva'] = 0x0902;\n  t['anusvaragujarati'] = 0x0A82;\n  t['aogonek'] = 0x0105;\n  t['apaatosquare'] = 0x3300;\n  t['aparen'] = 0x249C;\n  t['apostrophearmenian'] = 0x055A;\n  t['apostrophemod'] = 0x02BC;\n  t['apple'] = 0xF8FF;\n  t['approaches'] = 0x2250;\n  t['approxequal'] = 0x2248;\n  t['approxequalorimage'] = 0x2252;\n  t['approximatelyequal'] = 0x2245;\n  t['araeaekorean'] = 0x318E;\n  t['araeakorean'] = 0x318D;\n  t['arc'] = 0x2312;\n  t['arighthalfring'] = 0x1E9A;\n  t['aring'] = 0x00E5;\n  t['aringacute'] = 0x01FB;\n  t['aringbelow'] = 0x1E01;\n  t['arrowboth'] = 0x2194;\n  t['arrowdashdown'] = 0x21E3;\n  t['arrowdashleft'] = 0x21E0;\n  t['arrowdashright'] = 0x21E2;\n  t['arrowdashup'] = 0x21E1;\n  t['arrowdblboth'] = 0x21D4;\n  t['arrowdbldown'] = 0x21D3;\n  t['arrowdblleft'] = 0x21D0;\n  t['arrowdblright'] = 0x21D2;\n  t['arrowdblup'] = 0x21D1;\n  t['arrowdown'] = 0x2193;\n  t['arrowdownleft'] = 0x2199;\n  t['arrowdownright'] = 0x2198;\n  t['arrowdownwhite'] = 0x21E9;\n  t['arrowheaddownmod'] = 0x02C5;\n  t['arrowheadleftmod'] = 0x02C2;\n  t['arrowheadrightmod'] = 0x02C3;\n  t['arrowheadupmod'] = 0x02C4;\n  t['arrowhorizex'] = 0xF8E7;\n  t['arrowleft'] = 0x2190;\n  t['arrowleftdbl'] = 0x21D0;\n  t['arrowleftdblstroke'] = 0x21CD;\n  t['arrowleftoverright'] = 0x21C6;\n  t['arrowleftwhite'] = 0x21E6;\n  t['arrowright'] = 0x2192;\n  t['arrowrightdblstroke'] = 0x21CF;\n  t['arrowrightheavy'] = 0x279E;\n  t['arrowrightoverleft'] = 0x21C4;\n  t['arrowrightwhite'] = 0x21E8;\n  t['arrowtableft'] = 0x21E4;\n  t['arrowtabright'] = 0x21E5;\n  t['arrowup'] = 0x2191;\n  t['arrowupdn'] = 0x2195;\n  t['arrowupdnbse'] = 0x21A8;\n  t['arrowupdownbase'] = 0x21A8;\n  t['arrowupleft'] = 0x2196;\n  t['arrowupleftofdown'] = 0x21C5;\n  t['arrowupright'] = 0x2197;\n  t['arrowupwhite'] = 0x21E7;\n  t['arrowvertex'] = 0xF8E6;\n  t['asciicircum'] = 0x005E;\n  t['asciicircummonospace'] = 0xFF3E;\n  t['asciitilde'] = 0x007E;\n  t['asciitildemonospace'] = 0xFF5E;\n  t['ascript'] = 0x0251;\n  t['ascriptturned'] = 0x0252;\n  t['asmallhiragana'] = 0x3041;\n  t['asmallkatakana'] = 0x30A1;\n  t['asmallkatakanahalfwidth'] = 0xFF67;\n  t['asterisk'] = 0x002A;\n  t['asteriskaltonearabic'] = 0x066D;\n  t['asteriskarabic'] = 0x066D;\n  t['asteriskmath'] = 0x2217;\n  t['asteriskmonospace'] = 0xFF0A;\n  t['asterisksmall'] = 0xFE61;\n  t['asterism'] = 0x2042;\n  t['asuperior'] = 0xF6E9;\n  t['asymptoticallyequal'] = 0x2243;\n  t['at'] = 0x0040;\n  t['atilde'] = 0x00E3;\n  t['atmonospace'] = 0xFF20;\n  t['atsmall'] = 0xFE6B;\n  t['aturned'] = 0x0250;\n  t['aubengali'] = 0x0994;\n  t['aubopomofo'] = 0x3120;\n  t['audeva'] = 0x0914;\n  t['augujarati'] = 0x0A94;\n  t['augurmukhi'] = 0x0A14;\n  t['aulengthmarkbengali'] = 0x09D7;\n  t['aumatragurmukhi'] = 0x0A4C;\n  t['auvowelsignbengali'] = 0x09CC;\n  t['auvowelsigndeva'] = 0x094C;\n  t['auvowelsigngujarati'] = 0x0ACC;\n  t['avagrahadeva'] = 0x093D;\n  t['aybarmenian'] = 0x0561;\n  t['ayin'] = 0x05E2;\n  t['ayinaltonehebrew'] = 0xFB20;\n  t['ayinhebrew'] = 0x05E2;\n  t['b'] = 0x0062;\n  t['babengali'] = 0x09AC;\n  t['backslash'] = 0x005C;\n  t['backslashmonospace'] = 0xFF3C;\n  t['badeva'] = 0x092C;\n  t['bagujarati'] = 0x0AAC;\n  t['bagurmukhi'] = 0x0A2C;\n  t['bahiragana'] = 0x3070;\n  t['bahtthai'] = 0x0E3F;\n  t['bakatakana'] = 0x30D0;\n  t['bar'] = 0x007C;\n  t['barmonospace'] = 0xFF5C;\n  t['bbopomofo'] = 0x3105;\n  t['bcircle'] = 0x24D1;\n  t['bdotaccent'] = 0x1E03;\n  t['bdotbelow'] = 0x1E05;\n  t['beamedsixteenthnotes'] = 0x266C;\n  t['because'] = 0x2235;\n  t['becyrillic'] = 0x0431;\n  t['beharabic'] = 0x0628;\n  t['behfinalarabic'] = 0xFE90;\n  t['behinitialarabic'] = 0xFE91;\n  t['behiragana'] = 0x3079;\n  t['behmedialarabic'] = 0xFE92;\n  t['behmeeminitialarabic'] = 0xFC9F;\n  t['behmeemisolatedarabic'] = 0xFC08;\n  t['behnoonfinalarabic'] = 0xFC6D;\n  t['bekatakana'] = 0x30D9;\n  t['benarmenian'] = 0x0562;\n  t['bet'] = 0x05D1;\n  t['beta'] = 0x03B2;\n  t['betasymbolgreek'] = 0x03D0;\n  t['betdagesh'] = 0xFB31;\n  t['betdageshhebrew'] = 0xFB31;\n  t['bethebrew'] = 0x05D1;\n  t['betrafehebrew'] = 0xFB4C;\n  t['bhabengali'] = 0x09AD;\n  t['bhadeva'] = 0x092D;\n  t['bhagujarati'] = 0x0AAD;\n  t['bhagurmukhi'] = 0x0A2D;\n  t['bhook'] = 0x0253;\n  t['bihiragana'] = 0x3073;\n  t['bikatakana'] = 0x30D3;\n  t['bilabialclick'] = 0x0298;\n  t['bindigurmukhi'] = 0x0A02;\n  t['birusquare'] = 0x3331;\n  t['blackcircle'] = 0x25CF;\n  t['blackdiamond'] = 0x25C6;\n  t['blackdownpointingtriangle'] = 0x25BC;\n  t['blackleftpointingpointer'] = 0x25C4;\n  t['blackleftpointingtriangle'] = 0x25C0;\n  t['blacklenticularbracketleft'] = 0x3010;\n  t['blacklenticularbracketleftvertical'] = 0xFE3B;\n  t['blacklenticularbracketright'] = 0x3011;\n  t['blacklenticularbracketrightvertical'] = 0xFE3C;\n  t['blacklowerlefttriangle'] = 0x25E3;\n  t['blacklowerrighttriangle'] = 0x25E2;\n  t['blackrectangle'] = 0x25AC;\n  t['blackrightpointingpointer'] = 0x25BA;\n  t['blackrightpointingtriangle'] = 0x25B6;\n  t['blacksmallsquare'] = 0x25AA;\n  t['blacksmilingface'] = 0x263B;\n  t['blacksquare'] = 0x25A0;\n  t['blackstar'] = 0x2605;\n  t['blackupperlefttriangle'] = 0x25E4;\n  t['blackupperrighttriangle'] = 0x25E5;\n  t['blackuppointingsmalltriangle'] = 0x25B4;\n  t['blackuppointingtriangle'] = 0x25B2;\n  t['blank'] = 0x2423;\n  t['blinebelow'] = 0x1E07;\n  t['block'] = 0x2588;\n  t['bmonospace'] = 0xFF42;\n  t['bobaimaithai'] = 0x0E1A;\n  t['bohiragana'] = 0x307C;\n  t['bokatakana'] = 0x30DC;\n  t['bparen'] = 0x249D;\n  t['bqsquare'] = 0x33C3;\n  t['braceex'] = 0xF8F4;\n  t['braceleft'] = 0x007B;\n  t['braceleftbt'] = 0xF8F3;\n  t['braceleftmid'] = 0xF8F2;\n  t['braceleftmonospace'] = 0xFF5B;\n  t['braceleftsmall'] = 0xFE5B;\n  t['bracelefttp'] = 0xF8F1;\n  t['braceleftvertical'] = 0xFE37;\n  t['braceright'] = 0x007D;\n  t['bracerightbt'] = 0xF8FE;\n  t['bracerightmid'] = 0xF8FD;\n  t['bracerightmonospace'] = 0xFF5D;\n  t['bracerightsmall'] = 0xFE5C;\n  t['bracerighttp'] = 0xF8FC;\n  t['bracerightvertical'] = 0xFE38;\n  t['bracketleft'] = 0x005B;\n  t['bracketleftbt'] = 0xF8F0;\n  t['bracketleftex'] = 0xF8EF;\n  t['bracketleftmonospace'] = 0xFF3B;\n  t['bracketlefttp'] = 0xF8EE;\n  t['bracketright'] = 0x005D;\n  t['bracketrightbt'] = 0xF8FB;\n  t['bracketrightex'] = 0xF8FA;\n  t['bracketrightmonospace'] = 0xFF3D;\n  t['bracketrighttp'] = 0xF8F9;\n  t['breve'] = 0x02D8;\n  t['brevebelowcmb'] = 0x032E;\n  t['brevecmb'] = 0x0306;\n  t['breveinvertedbelowcmb'] = 0x032F;\n  t['breveinvertedcmb'] = 0x0311;\n  t['breveinverteddoublecmb'] = 0x0361;\n  t['bridgebelowcmb'] = 0x032A;\n  t['bridgeinvertedbelowcmb'] = 0x033A;\n  t['brokenbar'] = 0x00A6;\n  t['bstroke'] = 0x0180;\n  t['bsuperior'] = 0xF6EA;\n  t['btopbar'] = 0x0183;\n  t['buhiragana'] = 0x3076;\n  t['bukatakana'] = 0x30D6;\n  t['bullet'] = 0x2022;\n  t['bulletinverse'] = 0x25D8;\n  t['bulletoperator'] = 0x2219;\n  t['bullseye'] = 0x25CE;\n  t['c'] = 0x0063;\n  t['caarmenian'] = 0x056E;\n  t['cabengali'] = 0x099A;\n  t['cacute'] = 0x0107;\n  t['cadeva'] = 0x091A;\n  t['cagujarati'] = 0x0A9A;\n  t['cagurmukhi'] = 0x0A1A;\n  t['calsquare'] = 0x3388;\n  t['candrabindubengali'] = 0x0981;\n  t['candrabinducmb'] = 0x0310;\n  t['candrabindudeva'] = 0x0901;\n  t['candrabindugujarati'] = 0x0A81;\n  t['capslock'] = 0x21EA;\n  t['careof'] = 0x2105;\n  t['caron'] = 0x02C7;\n  t['caronbelowcmb'] = 0x032C;\n  t['caroncmb'] = 0x030C;\n  t['carriagereturn'] = 0x21B5;\n  t['cbopomofo'] = 0x3118;\n  t['ccaron'] = 0x010D;\n  t['ccedilla'] = 0x00E7;\n  t['ccedillaacute'] = 0x1E09;\n  t['ccircle'] = 0x24D2;\n  t['ccircumflex'] = 0x0109;\n  t['ccurl'] = 0x0255;\n  t['cdot'] = 0x010B;\n  t['cdotaccent'] = 0x010B;\n  t['cdsquare'] = 0x33C5;\n  t['cedilla'] = 0x00B8;\n  t['cedillacmb'] = 0x0327;\n  t['cent'] = 0x00A2;\n  t['centigrade'] = 0x2103;\n  t['centinferior'] = 0xF6DF;\n  t['centmonospace'] = 0xFFE0;\n  t['centoldstyle'] = 0xF7A2;\n  t['centsuperior'] = 0xF6E0;\n  t['chaarmenian'] = 0x0579;\n  t['chabengali'] = 0x099B;\n  t['chadeva'] = 0x091B;\n  t['chagujarati'] = 0x0A9B;\n  t['chagurmukhi'] = 0x0A1B;\n  t['chbopomofo'] = 0x3114;\n  t['cheabkhasiancyrillic'] = 0x04BD;\n  t['checkmark'] = 0x2713;\n  t['checyrillic'] = 0x0447;\n  t['chedescenderabkhasiancyrillic'] = 0x04BF;\n  t['chedescendercyrillic'] = 0x04B7;\n  t['chedieresiscyrillic'] = 0x04F5;\n  t['cheharmenian'] = 0x0573;\n  t['chekhakassiancyrillic'] = 0x04CC;\n  t['cheverticalstrokecyrillic'] = 0x04B9;\n  t['chi'] = 0x03C7;\n  t['chieuchacirclekorean'] = 0x3277;\n  t['chieuchaparenkorean'] = 0x3217;\n  t['chieuchcirclekorean'] = 0x3269;\n  t['chieuchkorean'] = 0x314A;\n  t['chieuchparenkorean'] = 0x3209;\n  t['chochangthai'] = 0x0E0A;\n  t['chochanthai'] = 0x0E08;\n  t['chochingthai'] = 0x0E09;\n  t['chochoethai'] = 0x0E0C;\n  t['chook'] = 0x0188;\n  t['cieucacirclekorean'] = 0x3276;\n  t['cieucaparenkorean'] = 0x3216;\n  t['cieuccirclekorean'] = 0x3268;\n  t['cieuckorean'] = 0x3148;\n  t['cieucparenkorean'] = 0x3208;\n  t['cieucuparenkorean'] = 0x321C;\n  t['circle'] = 0x25CB;\n  t['circlecopyrt'] = 0x00A9;\n  t['circlemultiply'] = 0x2297;\n  t['circleot'] = 0x2299;\n  t['circleplus'] = 0x2295;\n  t['circlepostalmark'] = 0x3036;\n  t['circlewithlefthalfblack'] = 0x25D0;\n  t['circlewithrighthalfblack'] = 0x25D1;\n  t['circumflex'] = 0x02C6;\n  t['circumflexbelowcmb'] = 0x032D;\n  t['circumflexcmb'] = 0x0302;\n  t['clear'] = 0x2327;\n  t['clickalveolar'] = 0x01C2;\n  t['clickdental'] = 0x01C0;\n  t['clicklateral'] = 0x01C1;\n  t['clickretroflex'] = 0x01C3;\n  t['club'] = 0x2663;\n  t['clubsuitblack'] = 0x2663;\n  t['clubsuitwhite'] = 0x2667;\n  t['cmcubedsquare'] = 0x33A4;\n  t['cmonospace'] = 0xFF43;\n  t['cmsquaredsquare'] = 0x33A0;\n  t['coarmenian'] = 0x0581;\n  t['colon'] = 0x003A;\n  t['colonmonetary'] = 0x20A1;\n  t['colonmonospace'] = 0xFF1A;\n  t['colonsign'] = 0x20A1;\n  t['colonsmall'] = 0xFE55;\n  t['colontriangularhalfmod'] = 0x02D1;\n  t['colontriangularmod'] = 0x02D0;\n  t['comma'] = 0x002C;\n  t['commaabovecmb'] = 0x0313;\n  t['commaaboverightcmb'] = 0x0315;\n  t['commaaccent'] = 0xF6C3;\n  t['commaarabic'] = 0x060C;\n  t['commaarmenian'] = 0x055D;\n  t['commainferior'] = 0xF6E1;\n  t['commamonospace'] = 0xFF0C;\n  t['commareversedabovecmb'] = 0x0314;\n  t['commareversedmod'] = 0x02BD;\n  t['commasmall'] = 0xFE50;\n  t['commasuperior'] = 0xF6E2;\n  t['commaturnedabovecmb'] = 0x0312;\n  t['commaturnedmod'] = 0x02BB;\n  t['compass'] = 0x263C;\n  t['congruent'] = 0x2245;\n  t['contourintegral'] = 0x222E;\n  t['control'] = 0x2303;\n  t['controlACK'] = 0x0006;\n  t['controlBEL'] = 0x0007;\n  t['controlBS'] = 0x0008;\n  t['controlCAN'] = 0x0018;\n  t['controlCR'] = 0x000D;\n  t['controlDC1'] = 0x0011;\n  t['controlDC2'] = 0x0012;\n  t['controlDC3'] = 0x0013;\n  t['controlDC4'] = 0x0014;\n  t['controlDEL'] = 0x007F;\n  t['controlDLE'] = 0x0010;\n  t['controlEM'] = 0x0019;\n  t['controlENQ'] = 0x0005;\n  t['controlEOT'] = 0x0004;\n  t['controlESC'] = 0x001B;\n  t['controlETB'] = 0x0017;\n  t['controlETX'] = 0x0003;\n  t['controlFF'] = 0x000C;\n  t['controlFS'] = 0x001C;\n  t['controlGS'] = 0x001D;\n  t['controlHT'] = 0x0009;\n  t['controlLF'] = 0x000A;\n  t['controlNAK'] = 0x0015;\n  t['controlNULL'] = 0x0000;\n  t['controlRS'] = 0x001E;\n  t['controlSI'] = 0x000F;\n  t['controlSO'] = 0x000E;\n  t['controlSOT'] = 0x0002;\n  t['controlSTX'] = 0x0001;\n  t['controlSUB'] = 0x001A;\n  t['controlSYN'] = 0x0016;\n  t['controlUS'] = 0x001F;\n  t['controlVT'] = 0x000B;\n  t['copyright'] = 0x00A9;\n  t['copyrightsans'] = 0xF8E9;\n  t['copyrightserif'] = 0xF6D9;\n  t['cornerbracketleft'] = 0x300C;\n  t['cornerbracketlefthalfwidth'] = 0xFF62;\n  t['cornerbracketleftvertical'] = 0xFE41;\n  t['cornerbracketright'] = 0x300D;\n  t['cornerbracketrighthalfwidth'] = 0xFF63;\n  t['cornerbracketrightvertical'] = 0xFE42;\n  t['corporationsquare'] = 0x337F;\n  t['cosquare'] = 0x33C7;\n  t['coverkgsquare'] = 0x33C6;\n  t['cparen'] = 0x249E;\n  t['cruzeiro'] = 0x20A2;\n  t['cstretched'] = 0x0297;\n  t['curlyand'] = 0x22CF;\n  t['curlyor'] = 0x22CE;\n  t['currency'] = 0x00A4;\n  t['cyrBreve'] = 0xF6D1;\n  t['cyrFlex'] = 0xF6D2;\n  t['cyrbreve'] = 0xF6D4;\n  t['cyrflex'] = 0xF6D5;\n  t['d'] = 0x0064;\n  t['daarmenian'] = 0x0564;\n  t['dabengali'] = 0x09A6;\n  t['dadarabic'] = 0x0636;\n  t['dadeva'] = 0x0926;\n  t['dadfinalarabic'] = 0xFEBE;\n  t['dadinitialarabic'] = 0xFEBF;\n  t['dadmedialarabic'] = 0xFEC0;\n  t['dagesh'] = 0x05BC;\n  t['dageshhebrew'] = 0x05BC;\n  t['dagger'] = 0x2020;\n  t['daggerdbl'] = 0x2021;\n  t['dagujarati'] = 0x0AA6;\n  t['dagurmukhi'] = 0x0A26;\n  t['dahiragana'] = 0x3060;\n  t['dakatakana'] = 0x30C0;\n  t['dalarabic'] = 0x062F;\n  t['dalet'] = 0x05D3;\n  t['daletdagesh'] = 0xFB33;\n  t['daletdageshhebrew'] = 0xFB33;\n  t['dalethebrew'] = 0x05D3;\n  t['dalfinalarabic'] = 0xFEAA;\n  t['dammaarabic'] = 0x064F;\n  t['dammalowarabic'] = 0x064F;\n  t['dammatanaltonearabic'] = 0x064C;\n  t['dammatanarabic'] = 0x064C;\n  t['danda'] = 0x0964;\n  t['dargahebrew'] = 0x05A7;\n  t['dargalefthebrew'] = 0x05A7;\n  t['dasiapneumatacyrilliccmb'] = 0x0485;\n  t['dblGrave'] = 0xF6D3;\n  t['dblanglebracketleft'] = 0x300A;\n  t['dblanglebracketleftvertical'] = 0xFE3D;\n  t['dblanglebracketright'] = 0x300B;\n  t['dblanglebracketrightvertical'] = 0xFE3E;\n  t['dblarchinvertedbelowcmb'] = 0x032B;\n  t['dblarrowleft'] = 0x21D4;\n  t['dblarrowright'] = 0x21D2;\n  t['dbldanda'] = 0x0965;\n  t['dblgrave'] = 0xF6D6;\n  t['dblgravecmb'] = 0x030F;\n  t['dblintegral'] = 0x222C;\n  t['dbllowline'] = 0x2017;\n  t['dbllowlinecmb'] = 0x0333;\n  t['dbloverlinecmb'] = 0x033F;\n  t['dblprimemod'] = 0x02BA;\n  t['dblverticalbar'] = 0x2016;\n  t['dblverticallineabovecmb'] = 0x030E;\n  t['dbopomofo'] = 0x3109;\n  t['dbsquare'] = 0x33C8;\n  t['dcaron'] = 0x010F;\n  t['dcedilla'] = 0x1E11;\n  t['dcircle'] = 0x24D3;\n  t['dcircumflexbelow'] = 0x1E13;\n  t['dcroat'] = 0x0111;\n  t['ddabengali'] = 0x09A1;\n  t['ddadeva'] = 0x0921;\n  t['ddagujarati'] = 0x0AA1;\n  t['ddagurmukhi'] = 0x0A21;\n  t['ddalarabic'] = 0x0688;\n  t['ddalfinalarabic'] = 0xFB89;\n  t['dddhadeva'] = 0x095C;\n  t['ddhabengali'] = 0x09A2;\n  t['ddhadeva'] = 0x0922;\n  t['ddhagujarati'] = 0x0AA2;\n  t['ddhagurmukhi'] = 0x0A22;\n  t['ddotaccent'] = 0x1E0B;\n  t['ddotbelow'] = 0x1E0D;\n  t['decimalseparatorarabic'] = 0x066B;\n  t['decimalseparatorpersian'] = 0x066B;\n  t['decyrillic'] = 0x0434;\n  t['degree'] = 0x00B0;\n  t['dehihebrew'] = 0x05AD;\n  t['dehiragana'] = 0x3067;\n  t['deicoptic'] = 0x03EF;\n  t['dekatakana'] = 0x30C7;\n  t['deleteleft'] = 0x232B;\n  t['deleteright'] = 0x2326;\n  t['delta'] = 0x03B4;\n  t['deltaturned'] = 0x018D;\n  t['denominatorminusonenumeratorbengali'] = 0x09F8;\n  t['dezh'] = 0x02A4;\n  t['dhabengali'] = 0x09A7;\n  t['dhadeva'] = 0x0927;\n  t['dhagujarati'] = 0x0AA7;\n  t['dhagurmukhi'] = 0x0A27;\n  t['dhook'] = 0x0257;\n  t['dialytikatonos'] = 0x0385;\n  t['dialytikatonoscmb'] = 0x0344;\n  t['diamond'] = 0x2666;\n  t['diamondsuitwhite'] = 0x2662;\n  t['dieresis'] = 0x00A8;\n  t['dieresisacute'] = 0xF6D7;\n  t['dieresisbelowcmb'] = 0x0324;\n  t['dieresiscmb'] = 0x0308;\n  t['dieresisgrave'] = 0xF6D8;\n  t['dieresistonos'] = 0x0385;\n  t['dihiragana'] = 0x3062;\n  t['dikatakana'] = 0x30C2;\n  t['dittomark'] = 0x3003;\n  t['divide'] = 0x00F7;\n  t['divides'] = 0x2223;\n  t['divisionslash'] = 0x2215;\n  t['djecyrillic'] = 0x0452;\n  t['dkshade'] = 0x2593;\n  t['dlinebelow'] = 0x1E0F;\n  t['dlsquare'] = 0x3397;\n  t['dmacron'] = 0x0111;\n  t['dmonospace'] = 0xFF44;\n  t['dnblock'] = 0x2584;\n  t['dochadathai'] = 0x0E0E;\n  t['dodekthai'] = 0x0E14;\n  t['dohiragana'] = 0x3069;\n  t['dokatakana'] = 0x30C9;\n  t['dollar'] = 0x0024;\n  t['dollarinferior'] = 0xF6E3;\n  t['dollarmonospace'] = 0xFF04;\n  t['dollaroldstyle'] = 0xF724;\n  t['dollarsmall'] = 0xFE69;\n  t['dollarsuperior'] = 0xF6E4;\n  t['dong'] = 0x20AB;\n  t['dorusquare'] = 0x3326;\n  t['dotaccent'] = 0x02D9;\n  t['dotaccentcmb'] = 0x0307;\n  t['dotbelowcmb'] = 0x0323;\n  t['dotbelowcomb'] = 0x0323;\n  t['dotkatakana'] = 0x30FB;\n  t['dotlessi'] = 0x0131;\n  t['dotlessj'] = 0xF6BE;\n  t['dotlessjstrokehook'] = 0x0284;\n  t['dotmath'] = 0x22C5;\n  t['dottedcircle'] = 0x25CC;\n  t['doubleyodpatah'] = 0xFB1F;\n  t['doubleyodpatahhebrew'] = 0xFB1F;\n  t['downtackbelowcmb'] = 0x031E;\n  t['downtackmod'] = 0x02D5;\n  t['dparen'] = 0x249F;\n  t['dsuperior'] = 0xF6EB;\n  t['dtail'] = 0x0256;\n  t['dtopbar'] = 0x018C;\n  t['duhiragana'] = 0x3065;\n  t['dukatakana'] = 0x30C5;\n  t['dz'] = 0x01F3;\n  t['dzaltone'] = 0x02A3;\n  t['dzcaron'] = 0x01C6;\n  t['dzcurl'] = 0x02A5;\n  t['dzeabkhasiancyrillic'] = 0x04E1;\n  t['dzecyrillic'] = 0x0455;\n  t['dzhecyrillic'] = 0x045F;\n  t['e'] = 0x0065;\n  t['eacute'] = 0x00E9;\n  t['earth'] = 0x2641;\n  t['ebengali'] = 0x098F;\n  t['ebopomofo'] = 0x311C;\n  t['ebreve'] = 0x0115;\n  t['ecandradeva'] = 0x090D;\n  t['ecandragujarati'] = 0x0A8D;\n  t['ecandravowelsigndeva'] = 0x0945;\n  t['ecandravowelsigngujarati'] = 0x0AC5;\n  t['ecaron'] = 0x011B;\n  t['ecedillabreve'] = 0x1E1D;\n  t['echarmenian'] = 0x0565;\n  t['echyiwnarmenian'] = 0x0587;\n  t['ecircle'] = 0x24D4;\n  t['ecircumflex'] = 0x00EA;\n  t['ecircumflexacute'] = 0x1EBF;\n  t['ecircumflexbelow'] = 0x1E19;\n  t['ecircumflexdotbelow'] = 0x1EC7;\n  t['ecircumflexgrave'] = 0x1EC1;\n  t['ecircumflexhookabove'] = 0x1EC3;\n  t['ecircumflextilde'] = 0x1EC5;\n  t['ecyrillic'] = 0x0454;\n  t['edblgrave'] = 0x0205;\n  t['edeva'] = 0x090F;\n  t['edieresis'] = 0x00EB;\n  t['edot'] = 0x0117;\n  t['edotaccent'] = 0x0117;\n  t['edotbelow'] = 0x1EB9;\n  t['eegurmukhi'] = 0x0A0F;\n  t['eematragurmukhi'] = 0x0A47;\n  t['efcyrillic'] = 0x0444;\n  t['egrave'] = 0x00E8;\n  t['egujarati'] = 0x0A8F;\n  t['eharmenian'] = 0x0567;\n  t['ehbopomofo'] = 0x311D;\n  t['ehiragana'] = 0x3048;\n  t['ehookabove'] = 0x1EBB;\n  t['eibopomofo'] = 0x311F;\n  t['eight'] = 0x0038;\n  t['eightarabic'] = 0x0668;\n  t['eightbengali'] = 0x09EE;\n  t['eightcircle'] = 0x2467;\n  t['eightcircleinversesansserif'] = 0x2791;\n  t['eightdeva'] = 0x096E;\n  t['eighteencircle'] = 0x2471;\n  t['eighteenparen'] = 0x2485;\n  t['eighteenperiod'] = 0x2499;\n  t['eightgujarati'] = 0x0AEE;\n  t['eightgurmukhi'] = 0x0A6E;\n  t['eighthackarabic'] = 0x0668;\n  t['eighthangzhou'] = 0x3028;\n  t['eighthnotebeamed'] = 0x266B;\n  t['eightideographicparen'] = 0x3227;\n  t['eightinferior'] = 0x2088;\n  t['eightmonospace'] = 0xFF18;\n  t['eightoldstyle'] = 0xF738;\n  t['eightparen'] = 0x247B;\n  t['eightperiod'] = 0x248F;\n  t['eightpersian'] = 0x06F8;\n  t['eightroman'] = 0x2177;\n  t['eightsuperior'] = 0x2078;\n  t['eightthai'] = 0x0E58;\n  t['einvertedbreve'] = 0x0207;\n  t['eiotifiedcyrillic'] = 0x0465;\n  t['ekatakana'] = 0x30A8;\n  t['ekatakanahalfwidth'] = 0xFF74;\n  t['ekonkargurmukhi'] = 0x0A74;\n  t['ekorean'] = 0x3154;\n  t['elcyrillic'] = 0x043B;\n  t['element'] = 0x2208;\n  t['elevencircle'] = 0x246A;\n  t['elevenparen'] = 0x247E;\n  t['elevenperiod'] = 0x2492;\n  t['elevenroman'] = 0x217A;\n  t['ellipsis'] = 0x2026;\n  t['ellipsisvertical'] = 0x22EE;\n  t['emacron'] = 0x0113;\n  t['emacronacute'] = 0x1E17;\n  t['emacrongrave'] = 0x1E15;\n  t['emcyrillic'] = 0x043C;\n  t['emdash'] = 0x2014;\n  t['emdashvertical'] = 0xFE31;\n  t['emonospace'] = 0xFF45;\n  t['emphasismarkarmenian'] = 0x055B;\n  t['emptyset'] = 0x2205;\n  t['enbopomofo'] = 0x3123;\n  t['encyrillic'] = 0x043D;\n  t['endash'] = 0x2013;\n  t['endashvertical'] = 0xFE32;\n  t['endescendercyrillic'] = 0x04A3;\n  t['eng'] = 0x014B;\n  t['engbopomofo'] = 0x3125;\n  t['enghecyrillic'] = 0x04A5;\n  t['enhookcyrillic'] = 0x04C8;\n  t['enspace'] = 0x2002;\n  t['eogonek'] = 0x0119;\n  t['eokorean'] = 0x3153;\n  t['eopen'] = 0x025B;\n  t['eopenclosed'] = 0x029A;\n  t['eopenreversed'] = 0x025C;\n  t['eopenreversedclosed'] = 0x025E;\n  t['eopenreversedhook'] = 0x025D;\n  t['eparen'] = 0x24A0;\n  t['epsilon'] = 0x03B5;\n  t['epsilontonos'] = 0x03AD;\n  t['equal'] = 0x003D;\n  t['equalmonospace'] = 0xFF1D;\n  t['equalsmall'] = 0xFE66;\n  t['equalsuperior'] = 0x207C;\n  t['equivalence'] = 0x2261;\n  t['erbopomofo'] = 0x3126;\n  t['ercyrillic'] = 0x0440;\n  t['ereversed'] = 0x0258;\n  t['ereversedcyrillic'] = 0x044D;\n  t['escyrillic'] = 0x0441;\n  t['esdescendercyrillic'] = 0x04AB;\n  t['esh'] = 0x0283;\n  t['eshcurl'] = 0x0286;\n  t['eshortdeva'] = 0x090E;\n  t['eshortvowelsigndeva'] = 0x0946;\n  t['eshreversedloop'] = 0x01AA;\n  t['eshsquatreversed'] = 0x0285;\n  t['esmallhiragana'] = 0x3047;\n  t['esmallkatakana'] = 0x30A7;\n  t['esmallkatakanahalfwidth'] = 0xFF6A;\n  t['estimated'] = 0x212E;\n  t['esuperior'] = 0xF6EC;\n  t['eta'] = 0x03B7;\n  t['etarmenian'] = 0x0568;\n  t['etatonos'] = 0x03AE;\n  t['eth'] = 0x00F0;\n  t['etilde'] = 0x1EBD;\n  t['etildebelow'] = 0x1E1B;\n  t['etnahtafoukhhebrew'] = 0x0591;\n  t['etnahtafoukhlefthebrew'] = 0x0591;\n  t['etnahtahebrew'] = 0x0591;\n  t['etnahtalefthebrew'] = 0x0591;\n  t['eturned'] = 0x01DD;\n  t['eukorean'] = 0x3161;\n  t['euro'] = 0x20AC;\n  t['evowelsignbengali'] = 0x09C7;\n  t['evowelsigndeva'] = 0x0947;\n  t['evowelsigngujarati'] = 0x0AC7;\n  t['exclam'] = 0x0021;\n  t['exclamarmenian'] = 0x055C;\n  t['exclamdbl'] = 0x203C;\n  t['exclamdown'] = 0x00A1;\n  t['exclamdownsmall'] = 0xF7A1;\n  t['exclammonospace'] = 0xFF01;\n  t['exclamsmall'] = 0xF721;\n  t['existential'] = 0x2203;\n  t['ezh'] = 0x0292;\n  t['ezhcaron'] = 0x01EF;\n  t['ezhcurl'] = 0x0293;\n  t['ezhreversed'] = 0x01B9;\n  t['ezhtail'] = 0x01BA;\n  t['f'] = 0x0066;\n  t['fadeva'] = 0x095E;\n  t['fagurmukhi'] = 0x0A5E;\n  t['fahrenheit'] = 0x2109;\n  t['fathaarabic'] = 0x064E;\n  t['fathalowarabic'] = 0x064E;\n  t['fathatanarabic'] = 0x064B;\n  t['fbopomofo'] = 0x3108;\n  t['fcircle'] = 0x24D5;\n  t['fdotaccent'] = 0x1E1F;\n  t['feharabic'] = 0x0641;\n  t['feharmenian'] = 0x0586;\n  t['fehfinalarabic'] = 0xFED2;\n  t['fehinitialarabic'] = 0xFED3;\n  t['fehmedialarabic'] = 0xFED4;\n  t['feicoptic'] = 0x03E5;\n  t['female'] = 0x2640;\n  t['ff'] = 0xFB00;\n  t['ffi'] = 0xFB03;\n  t['ffl'] = 0xFB04;\n  t['fi'] = 0xFB01;\n  t['fifteencircle'] = 0x246E;\n  t['fifteenparen'] = 0x2482;\n  t['fifteenperiod'] = 0x2496;\n  t['figuredash'] = 0x2012;\n  t['filledbox'] = 0x25A0;\n  t['filledrect'] = 0x25AC;\n  t['finalkaf'] = 0x05DA;\n  t['finalkafdagesh'] = 0xFB3A;\n  t['finalkafdageshhebrew'] = 0xFB3A;\n  t['finalkafhebrew'] = 0x05DA;\n  t['finalmem'] = 0x05DD;\n  t['finalmemhebrew'] = 0x05DD;\n  t['finalnun'] = 0x05DF;\n  t['finalnunhebrew'] = 0x05DF;\n  t['finalpe'] = 0x05E3;\n  t['finalpehebrew'] = 0x05E3;\n  t['finaltsadi'] = 0x05E5;\n  t['finaltsadihebrew'] = 0x05E5;\n  t['firsttonechinese'] = 0x02C9;\n  t['fisheye'] = 0x25C9;\n  t['fitacyrillic'] = 0x0473;\n  t['five'] = 0x0035;\n  t['fivearabic'] = 0x0665;\n  t['fivebengali'] = 0x09EB;\n  t['fivecircle'] = 0x2464;\n  t['fivecircleinversesansserif'] = 0x278E;\n  t['fivedeva'] = 0x096B;\n  t['fiveeighths'] = 0x215D;\n  t['fivegujarati'] = 0x0AEB;\n  t['fivegurmukhi'] = 0x0A6B;\n  t['fivehackarabic'] = 0x0665;\n  t['fivehangzhou'] = 0x3025;\n  t['fiveideographicparen'] = 0x3224;\n  t['fiveinferior'] = 0x2085;\n  t['fivemonospace'] = 0xFF15;\n  t['fiveoldstyle'] = 0xF735;\n  t['fiveparen'] = 0x2478;\n  t['fiveperiod'] = 0x248C;\n  t['fivepersian'] = 0x06F5;\n  t['fiveroman'] = 0x2174;\n  t['fivesuperior'] = 0x2075;\n  t['fivethai'] = 0x0E55;\n  t['fl'] = 0xFB02;\n  t['florin'] = 0x0192;\n  t['fmonospace'] = 0xFF46;\n  t['fmsquare'] = 0x3399;\n  t['fofanthai'] = 0x0E1F;\n  t['fofathai'] = 0x0E1D;\n  t['fongmanthai'] = 0x0E4F;\n  t['forall'] = 0x2200;\n  t['four'] = 0x0034;\n  t['fourarabic'] = 0x0664;\n  t['fourbengali'] = 0x09EA;\n  t['fourcircle'] = 0x2463;\n  t['fourcircleinversesansserif'] = 0x278D;\n  t['fourdeva'] = 0x096A;\n  t['fourgujarati'] = 0x0AEA;\n  t['fourgurmukhi'] = 0x0A6A;\n  t['fourhackarabic'] = 0x0664;\n  t['fourhangzhou'] = 0x3024;\n  t['fourideographicparen'] = 0x3223;\n  t['fourinferior'] = 0x2084;\n  t['fourmonospace'] = 0xFF14;\n  t['fournumeratorbengali'] = 0x09F7;\n  t['fouroldstyle'] = 0xF734;\n  t['fourparen'] = 0x2477;\n  t['fourperiod'] = 0x248B;\n  t['fourpersian'] = 0x06F4;\n  t['fourroman'] = 0x2173;\n  t['foursuperior'] = 0x2074;\n  t['fourteencircle'] = 0x246D;\n  t['fourteenparen'] = 0x2481;\n  t['fourteenperiod'] = 0x2495;\n  t['fourthai'] = 0x0E54;\n  t['fourthtonechinese'] = 0x02CB;\n  t['fparen'] = 0x24A1;\n  t['fraction'] = 0x2044;\n  t['franc'] = 0x20A3;\n  t['g'] = 0x0067;\n  t['gabengali'] = 0x0997;\n  t['gacute'] = 0x01F5;\n  t['gadeva'] = 0x0917;\n  t['gafarabic'] = 0x06AF;\n  t['gaffinalarabic'] = 0xFB93;\n  t['gafinitialarabic'] = 0xFB94;\n  t['gafmedialarabic'] = 0xFB95;\n  t['gagujarati'] = 0x0A97;\n  t['gagurmukhi'] = 0x0A17;\n  t['gahiragana'] = 0x304C;\n  t['gakatakana'] = 0x30AC;\n  t['gamma'] = 0x03B3;\n  t['gammalatinsmall'] = 0x0263;\n  t['gammasuperior'] = 0x02E0;\n  t['gangiacoptic'] = 0x03EB;\n  t['gbopomofo'] = 0x310D;\n  t['gbreve'] = 0x011F;\n  t['gcaron'] = 0x01E7;\n  t['gcedilla'] = 0x0123;\n  t['gcircle'] = 0x24D6;\n  t['gcircumflex'] = 0x011D;\n  t['gcommaaccent'] = 0x0123;\n  t['gdot'] = 0x0121;\n  t['gdotaccent'] = 0x0121;\n  t['gecyrillic'] = 0x0433;\n  t['gehiragana'] = 0x3052;\n  t['gekatakana'] = 0x30B2;\n  t['geometricallyequal'] = 0x2251;\n  t['gereshaccenthebrew'] = 0x059C;\n  t['gereshhebrew'] = 0x05F3;\n  t['gereshmuqdamhebrew'] = 0x059D;\n  t['germandbls'] = 0x00DF;\n  t['gershayimaccenthebrew'] = 0x059E;\n  t['gershayimhebrew'] = 0x05F4;\n  t['getamark'] = 0x3013;\n  t['ghabengali'] = 0x0998;\n  t['ghadarmenian'] = 0x0572;\n  t['ghadeva'] = 0x0918;\n  t['ghagujarati'] = 0x0A98;\n  t['ghagurmukhi'] = 0x0A18;\n  t['ghainarabic'] = 0x063A;\n  t['ghainfinalarabic'] = 0xFECE;\n  t['ghaininitialarabic'] = 0xFECF;\n  t['ghainmedialarabic'] = 0xFED0;\n  t['ghemiddlehookcyrillic'] = 0x0495;\n  t['ghestrokecyrillic'] = 0x0493;\n  t['gheupturncyrillic'] = 0x0491;\n  t['ghhadeva'] = 0x095A;\n  t['ghhagurmukhi'] = 0x0A5A;\n  t['ghook'] = 0x0260;\n  t['ghzsquare'] = 0x3393;\n  t['gihiragana'] = 0x304E;\n  t['gikatakana'] = 0x30AE;\n  t['gimarmenian'] = 0x0563;\n  t['gimel'] = 0x05D2;\n  t['gimeldagesh'] = 0xFB32;\n  t['gimeldageshhebrew'] = 0xFB32;\n  t['gimelhebrew'] = 0x05D2;\n  t['gjecyrillic'] = 0x0453;\n  t['glottalinvertedstroke'] = 0x01BE;\n  t['glottalstop'] = 0x0294;\n  t['glottalstopinverted'] = 0x0296;\n  t['glottalstopmod'] = 0x02C0;\n  t['glottalstopreversed'] = 0x0295;\n  t['glottalstopreversedmod'] = 0x02C1;\n  t['glottalstopreversedsuperior'] = 0x02E4;\n  t['glottalstopstroke'] = 0x02A1;\n  t['glottalstopstrokereversed'] = 0x02A2;\n  t['gmacron'] = 0x1E21;\n  t['gmonospace'] = 0xFF47;\n  t['gohiragana'] = 0x3054;\n  t['gokatakana'] = 0x30B4;\n  t['gparen'] = 0x24A2;\n  t['gpasquare'] = 0x33AC;\n  t['gradient'] = 0x2207;\n  t['grave'] = 0x0060;\n  t['gravebelowcmb'] = 0x0316;\n  t['gravecmb'] = 0x0300;\n  t['gravecomb'] = 0x0300;\n  t['gravedeva'] = 0x0953;\n  t['gravelowmod'] = 0x02CE;\n  t['gravemonospace'] = 0xFF40;\n  t['gravetonecmb'] = 0x0340;\n  t['greater'] = 0x003E;\n  t['greaterequal'] = 0x2265;\n  t['greaterequalorless'] = 0x22DB;\n  t['greatermonospace'] = 0xFF1E;\n  t['greaterorequivalent'] = 0x2273;\n  t['greaterorless'] = 0x2277;\n  t['greateroverequal'] = 0x2267;\n  t['greatersmall'] = 0xFE65;\n  t['gscript'] = 0x0261;\n  t['gstroke'] = 0x01E5;\n  t['guhiragana'] = 0x3050;\n  t['guillemotleft'] = 0x00AB;\n  t['guillemotright'] = 0x00BB;\n  t['guilsinglleft'] = 0x2039;\n  t['guilsinglright'] = 0x203A;\n  t['gukatakana'] = 0x30B0;\n  t['guramusquare'] = 0x3318;\n  t['gysquare'] = 0x33C9;\n  t['h'] = 0x0068;\n  t['haabkhasiancyrillic'] = 0x04A9;\n  t['haaltonearabic'] = 0x06C1;\n  t['habengali'] = 0x09B9;\n  t['hadescendercyrillic'] = 0x04B3;\n  t['hadeva'] = 0x0939;\n  t['hagujarati'] = 0x0AB9;\n  t['hagurmukhi'] = 0x0A39;\n  t['haharabic'] = 0x062D;\n  t['hahfinalarabic'] = 0xFEA2;\n  t['hahinitialarabic'] = 0xFEA3;\n  t['hahiragana'] = 0x306F;\n  t['hahmedialarabic'] = 0xFEA4;\n  t['haitusquare'] = 0x332A;\n  t['hakatakana'] = 0x30CF;\n  t['hakatakanahalfwidth'] = 0xFF8A;\n  t['halantgurmukhi'] = 0x0A4D;\n  t['hamzaarabic'] = 0x0621;\n  t['hamzalowarabic'] = 0x0621;\n  t['hangulfiller'] = 0x3164;\n  t['hardsigncyrillic'] = 0x044A;\n  t['harpoonleftbarbup'] = 0x21BC;\n  t['harpoonrightbarbup'] = 0x21C0;\n  t['hasquare'] = 0x33CA;\n  t['hatafpatah'] = 0x05B2;\n  t['hatafpatah16'] = 0x05B2;\n  t['hatafpatah23'] = 0x05B2;\n  t['hatafpatah2f'] = 0x05B2;\n  t['hatafpatahhebrew'] = 0x05B2;\n  t['hatafpatahnarrowhebrew'] = 0x05B2;\n  t['hatafpatahquarterhebrew'] = 0x05B2;\n  t['hatafpatahwidehebrew'] = 0x05B2;\n  t['hatafqamats'] = 0x05B3;\n  t['hatafqamats1b'] = 0x05B3;\n  t['hatafqamats28'] = 0x05B3;\n  t['hatafqamats34'] = 0x05B3;\n  t['hatafqamatshebrew'] = 0x05B3;\n  t['hatafqamatsnarrowhebrew'] = 0x05B3;\n  t['hatafqamatsquarterhebrew'] = 0x05B3;\n  t['hatafqamatswidehebrew'] = 0x05B3;\n  t['hatafsegol'] = 0x05B1;\n  t['hatafsegol17'] = 0x05B1;\n  t['hatafsegol24'] = 0x05B1;\n  t['hatafsegol30'] = 0x05B1;\n  t['hatafsegolhebrew'] = 0x05B1;\n  t['hatafsegolnarrowhebrew'] = 0x05B1;\n  t['hatafsegolquarterhebrew'] = 0x05B1;\n  t['hatafsegolwidehebrew'] = 0x05B1;\n  t['hbar'] = 0x0127;\n  t['hbopomofo'] = 0x310F;\n  t['hbrevebelow'] = 0x1E2B;\n  t['hcedilla'] = 0x1E29;\n  t['hcircle'] = 0x24D7;\n  t['hcircumflex'] = 0x0125;\n  t['hdieresis'] = 0x1E27;\n  t['hdotaccent'] = 0x1E23;\n  t['hdotbelow'] = 0x1E25;\n  t['he'] = 0x05D4;\n  t['heart'] = 0x2665;\n  t['heartsuitblack'] = 0x2665;\n  t['heartsuitwhite'] = 0x2661;\n  t['hedagesh'] = 0xFB34;\n  t['hedageshhebrew'] = 0xFB34;\n  t['hehaltonearabic'] = 0x06C1;\n  t['heharabic'] = 0x0647;\n  t['hehebrew'] = 0x05D4;\n  t['hehfinalaltonearabic'] = 0xFBA7;\n  t['hehfinalalttwoarabic'] = 0xFEEA;\n  t['hehfinalarabic'] = 0xFEEA;\n  t['hehhamzaabovefinalarabic'] = 0xFBA5;\n  t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n  t['hehinitialaltonearabic'] = 0xFBA8;\n  t['hehinitialarabic'] = 0xFEEB;\n  t['hehiragana'] = 0x3078;\n  t['hehmedialaltonearabic'] = 0xFBA9;\n  t['hehmedialarabic'] = 0xFEEC;\n  t['heiseierasquare'] = 0x337B;\n  t['hekatakana'] = 0x30D8;\n  t['hekatakanahalfwidth'] = 0xFF8D;\n  t['hekutaarusquare'] = 0x3336;\n  t['henghook'] = 0x0267;\n  t['herutusquare'] = 0x3339;\n  t['het'] = 0x05D7;\n  t['hethebrew'] = 0x05D7;\n  t['hhook'] = 0x0266;\n  t['hhooksuperior'] = 0x02B1;\n  t['hieuhacirclekorean'] = 0x327B;\n  t['hieuhaparenkorean'] = 0x321B;\n  t['hieuhcirclekorean'] = 0x326D;\n  t['hieuhkorean'] = 0x314E;\n  t['hieuhparenkorean'] = 0x320D;\n  t['hihiragana'] = 0x3072;\n  t['hikatakana'] = 0x30D2;\n  t['hikatakanahalfwidth'] = 0xFF8B;\n  t['hiriq'] = 0x05B4;\n  t['hiriq14'] = 0x05B4;\n  t['hiriq21'] = 0x05B4;\n  t['hiriq2d'] = 0x05B4;\n  t['hiriqhebrew'] = 0x05B4;\n  t['hiriqnarrowhebrew'] = 0x05B4;\n  t['hiriqquarterhebrew'] = 0x05B4;\n  t['hiriqwidehebrew'] = 0x05B4;\n  t['hlinebelow'] = 0x1E96;\n  t['hmonospace'] = 0xFF48;\n  t['hoarmenian'] = 0x0570;\n  t['hohipthai'] = 0x0E2B;\n  t['hohiragana'] = 0x307B;\n  t['hokatakana'] = 0x30DB;\n  t['hokatakanahalfwidth'] = 0xFF8E;\n  t['holam'] = 0x05B9;\n  t['holam19'] = 0x05B9;\n  t['holam26'] = 0x05B9;\n  t['holam32'] = 0x05B9;\n  t['holamhebrew'] = 0x05B9;\n  t['holamnarrowhebrew'] = 0x05B9;\n  t['holamquarterhebrew'] = 0x05B9;\n  t['holamwidehebrew'] = 0x05B9;\n  t['honokhukthai'] = 0x0E2E;\n  t['hookabovecomb'] = 0x0309;\n  t['hookcmb'] = 0x0309;\n  t['hookpalatalizedbelowcmb'] = 0x0321;\n  t['hookretroflexbelowcmb'] = 0x0322;\n  t['hoonsquare'] = 0x3342;\n  t['horicoptic'] = 0x03E9;\n  t['horizontalbar'] = 0x2015;\n  t['horncmb'] = 0x031B;\n  t['hotsprings'] = 0x2668;\n  t['house'] = 0x2302;\n  t['hparen'] = 0x24A3;\n  t['hsuperior'] = 0x02B0;\n  t['hturned'] = 0x0265;\n  t['huhiragana'] = 0x3075;\n  t['huiitosquare'] = 0x3333;\n  t['hukatakana'] = 0x30D5;\n  t['hukatakanahalfwidth'] = 0xFF8C;\n  t['hungarumlaut'] = 0x02DD;\n  t['hungarumlautcmb'] = 0x030B;\n  t['hv'] = 0x0195;\n  t['hyphen'] = 0x002D;\n  t['hypheninferior'] = 0xF6E5;\n  t['hyphenmonospace'] = 0xFF0D;\n  t['hyphensmall'] = 0xFE63;\n  t['hyphensuperior'] = 0xF6E6;\n  t['hyphentwo'] = 0x2010;\n  t['i'] = 0x0069;\n  t['iacute'] = 0x00ED;\n  t['iacyrillic'] = 0x044F;\n  t['ibengali'] = 0x0987;\n  t['ibopomofo'] = 0x3127;\n  t['ibreve'] = 0x012D;\n  t['icaron'] = 0x01D0;\n  t['icircle'] = 0x24D8;\n  t['icircumflex'] = 0x00EE;\n  t['icyrillic'] = 0x0456;\n  t['idblgrave'] = 0x0209;\n  t['ideographearthcircle'] = 0x328F;\n  t['ideographfirecircle'] = 0x328B;\n  t['ideographicallianceparen'] = 0x323F;\n  t['ideographiccallparen'] = 0x323A;\n  t['ideographiccentrecircle'] = 0x32A5;\n  t['ideographicclose'] = 0x3006;\n  t['ideographiccomma'] = 0x3001;\n  t['ideographiccommaleft'] = 0xFF64;\n  t['ideographiccongratulationparen'] = 0x3237;\n  t['ideographiccorrectcircle'] = 0x32A3;\n  t['ideographicearthparen'] = 0x322F;\n  t['ideographicenterpriseparen'] = 0x323D;\n  t['ideographicexcellentcircle'] = 0x329D;\n  t['ideographicfestivalparen'] = 0x3240;\n  t['ideographicfinancialcircle'] = 0x3296;\n  t['ideographicfinancialparen'] = 0x3236;\n  t['ideographicfireparen'] = 0x322B;\n  t['ideographichaveparen'] = 0x3232;\n  t['ideographichighcircle'] = 0x32A4;\n  t['ideographiciterationmark'] = 0x3005;\n  t['ideographiclaborcircle'] = 0x3298;\n  t['ideographiclaborparen'] = 0x3238;\n  t['ideographicleftcircle'] = 0x32A7;\n  t['ideographiclowcircle'] = 0x32A6;\n  t['ideographicmedicinecircle'] = 0x32A9;\n  t['ideographicmetalparen'] = 0x322E;\n  t['ideographicmoonparen'] = 0x322A;\n  t['ideographicnameparen'] = 0x3234;\n  t['ideographicperiod'] = 0x3002;\n  t['ideographicprintcircle'] = 0x329E;\n  t['ideographicreachparen'] = 0x3243;\n  t['ideographicrepresentparen'] = 0x3239;\n  t['ideographicresourceparen'] = 0x323E;\n  t['ideographicrightcircle'] = 0x32A8;\n  t['ideographicsecretcircle'] = 0x3299;\n  t['ideographicselfparen'] = 0x3242;\n  t['ideographicsocietyparen'] = 0x3233;\n  t['ideographicspace'] = 0x3000;\n  t['ideographicspecialparen'] = 0x3235;\n  t['ideographicstockparen'] = 0x3231;\n  t['ideographicstudyparen'] = 0x323B;\n  t['ideographicsunparen'] = 0x3230;\n  t['ideographicsuperviseparen'] = 0x323C;\n  t['ideographicwaterparen'] = 0x322C;\n  t['ideographicwoodparen'] = 0x322D;\n  t['ideographiczero'] = 0x3007;\n  t['ideographmetalcircle'] = 0x328E;\n  t['ideographmooncircle'] = 0x328A;\n  t['ideographnamecircle'] = 0x3294;\n  t['ideographsuncircle'] = 0x3290;\n  t['ideographwatercircle'] = 0x328C;\n  t['ideographwoodcircle'] = 0x328D;\n  t['ideva'] = 0x0907;\n  t['idieresis'] = 0x00EF;\n  t['idieresisacute'] = 0x1E2F;\n  t['idieresiscyrillic'] = 0x04E5;\n  t['idotbelow'] = 0x1ECB;\n  t['iebrevecyrillic'] = 0x04D7;\n  t['iecyrillic'] = 0x0435;\n  t['ieungacirclekorean'] = 0x3275;\n  t['ieungaparenkorean'] = 0x3215;\n  t['ieungcirclekorean'] = 0x3267;\n  t['ieungkorean'] = 0x3147;\n  t['ieungparenkorean'] = 0x3207;\n  t['igrave'] = 0x00EC;\n  t['igujarati'] = 0x0A87;\n  t['igurmukhi'] = 0x0A07;\n  t['ihiragana'] = 0x3044;\n  t['ihookabove'] = 0x1EC9;\n  t['iibengali'] = 0x0988;\n  t['iicyrillic'] = 0x0438;\n  t['iideva'] = 0x0908;\n  t['iigujarati'] = 0x0A88;\n  t['iigurmukhi'] = 0x0A08;\n  t['iimatragurmukhi'] = 0x0A40;\n  t['iinvertedbreve'] = 0x020B;\n  t['iishortcyrillic'] = 0x0439;\n  t['iivowelsignbengali'] = 0x09C0;\n  t['iivowelsigndeva'] = 0x0940;\n  t['iivowelsigngujarati'] = 0x0AC0;\n  t['ij'] = 0x0133;\n  t['ikatakana'] = 0x30A4;\n  t['ikatakanahalfwidth'] = 0xFF72;\n  t['ikorean'] = 0x3163;\n  t['ilde'] = 0x02DC;\n  t['iluyhebrew'] = 0x05AC;\n  t['imacron'] = 0x012B;\n  t['imacroncyrillic'] = 0x04E3;\n  t['imageorapproximatelyequal'] = 0x2253;\n  t['imatragurmukhi'] = 0x0A3F;\n  t['imonospace'] = 0xFF49;\n  t['increment'] = 0x2206;\n  t['infinity'] = 0x221E;\n  t['iniarmenian'] = 0x056B;\n  t['integral'] = 0x222B;\n  t['integralbottom'] = 0x2321;\n  t['integralbt'] = 0x2321;\n  t['integralex'] = 0xF8F5;\n  t['integraltop'] = 0x2320;\n  t['integraltp'] = 0x2320;\n  t['intersection'] = 0x2229;\n  t['intisquare'] = 0x3305;\n  t['invbullet'] = 0x25D8;\n  t['invcircle'] = 0x25D9;\n  t['invsmileface'] = 0x263B;\n  t['iocyrillic'] = 0x0451;\n  t['iogonek'] = 0x012F;\n  t['iota'] = 0x03B9;\n  t['iotadieresis'] = 0x03CA;\n  t['iotadieresistonos'] = 0x0390;\n  t['iotalatin'] = 0x0269;\n  t['iotatonos'] = 0x03AF;\n  t['iparen'] = 0x24A4;\n  t['irigurmukhi'] = 0x0A72;\n  t['ismallhiragana'] = 0x3043;\n  t['ismallkatakana'] = 0x30A3;\n  t['ismallkatakanahalfwidth'] = 0xFF68;\n  t['issharbengali'] = 0x09FA;\n  t['istroke'] = 0x0268;\n  t['isuperior'] = 0xF6ED;\n  t['iterationhiragana'] = 0x309D;\n  t['iterationkatakana'] = 0x30FD;\n  t['itilde'] = 0x0129;\n  t['itildebelow'] = 0x1E2D;\n  t['iubopomofo'] = 0x3129;\n  t['iucyrillic'] = 0x044E;\n  t['ivowelsignbengali'] = 0x09BF;\n  t['ivowelsigndeva'] = 0x093F;\n  t['ivowelsigngujarati'] = 0x0ABF;\n  t['izhitsacyrillic'] = 0x0475;\n  t['izhitsadblgravecyrillic'] = 0x0477;\n  t['j'] = 0x006A;\n  t['jaarmenian'] = 0x0571;\n  t['jabengali'] = 0x099C;\n  t['jadeva'] = 0x091C;\n  t['jagujarati'] = 0x0A9C;\n  t['jagurmukhi'] = 0x0A1C;\n  t['jbopomofo'] = 0x3110;\n  t['jcaron'] = 0x01F0;\n  t['jcircle'] = 0x24D9;\n  t['jcircumflex'] = 0x0135;\n  t['jcrossedtail'] = 0x029D;\n  t['jdotlessstroke'] = 0x025F;\n  t['jecyrillic'] = 0x0458;\n  t['jeemarabic'] = 0x062C;\n  t['jeemfinalarabic'] = 0xFE9E;\n  t['jeeminitialarabic'] = 0xFE9F;\n  t['jeemmedialarabic'] = 0xFEA0;\n  t['jeharabic'] = 0x0698;\n  t['jehfinalarabic'] = 0xFB8B;\n  t['jhabengali'] = 0x099D;\n  t['jhadeva'] = 0x091D;\n  t['jhagujarati'] = 0x0A9D;\n  t['jhagurmukhi'] = 0x0A1D;\n  t['jheharmenian'] = 0x057B;\n  t['jis'] = 0x3004;\n  t['jmonospace'] = 0xFF4A;\n  t['jparen'] = 0x24A5;\n  t['jsuperior'] = 0x02B2;\n  t['k'] = 0x006B;\n  t['kabashkircyrillic'] = 0x04A1;\n  t['kabengali'] = 0x0995;\n  t['kacute'] = 0x1E31;\n  t['kacyrillic'] = 0x043A;\n  t['kadescendercyrillic'] = 0x049B;\n  t['kadeva'] = 0x0915;\n  t['kaf'] = 0x05DB;\n  t['kafarabic'] = 0x0643;\n  t['kafdagesh'] = 0xFB3B;\n  t['kafdageshhebrew'] = 0xFB3B;\n  t['kaffinalarabic'] = 0xFEDA;\n  t['kafhebrew'] = 0x05DB;\n  t['kafinitialarabic'] = 0xFEDB;\n  t['kafmedialarabic'] = 0xFEDC;\n  t['kafrafehebrew'] = 0xFB4D;\n  t['kagujarati'] = 0x0A95;\n  t['kagurmukhi'] = 0x0A15;\n  t['kahiragana'] = 0x304B;\n  t['kahookcyrillic'] = 0x04C4;\n  t['kakatakana'] = 0x30AB;\n  t['kakatakanahalfwidth'] = 0xFF76;\n  t['kappa'] = 0x03BA;\n  t['kappasymbolgreek'] = 0x03F0;\n  t['kapyeounmieumkorean'] = 0x3171;\n  t['kapyeounphieuphkorean'] = 0x3184;\n  t['kapyeounpieupkorean'] = 0x3178;\n  t['kapyeounssangpieupkorean'] = 0x3179;\n  t['karoriisquare'] = 0x330D;\n  t['kashidaautoarabic'] = 0x0640;\n  t['kashidaautonosidebearingarabic'] = 0x0640;\n  t['kasmallkatakana'] = 0x30F5;\n  t['kasquare'] = 0x3384;\n  t['kasraarabic'] = 0x0650;\n  t['kasratanarabic'] = 0x064D;\n  t['kastrokecyrillic'] = 0x049F;\n  t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n  t['kaverticalstrokecyrillic'] = 0x049D;\n  t['kbopomofo'] = 0x310E;\n  t['kcalsquare'] = 0x3389;\n  t['kcaron'] = 0x01E9;\n  t['kcedilla'] = 0x0137;\n  t['kcircle'] = 0x24DA;\n  t['kcommaaccent'] = 0x0137;\n  t['kdotbelow'] = 0x1E33;\n  t['keharmenian'] = 0x0584;\n  t['kehiragana'] = 0x3051;\n  t['kekatakana'] = 0x30B1;\n  t['kekatakanahalfwidth'] = 0xFF79;\n  t['kenarmenian'] = 0x056F;\n  t['kesmallkatakana'] = 0x30F6;\n  t['kgreenlandic'] = 0x0138;\n  t['khabengali'] = 0x0996;\n  t['khacyrillic'] = 0x0445;\n  t['khadeva'] = 0x0916;\n  t['khagujarati'] = 0x0A96;\n  t['khagurmukhi'] = 0x0A16;\n  t['khaharabic'] = 0x062E;\n  t['khahfinalarabic'] = 0xFEA6;\n  t['khahinitialarabic'] = 0xFEA7;\n  t['khahmedialarabic'] = 0xFEA8;\n  t['kheicoptic'] = 0x03E7;\n  t['khhadeva'] = 0x0959;\n  t['khhagurmukhi'] = 0x0A59;\n  t['khieukhacirclekorean'] = 0x3278;\n  t['khieukhaparenkorean'] = 0x3218;\n  t['khieukhcirclekorean'] = 0x326A;\n  t['khieukhkorean'] = 0x314B;\n  t['khieukhparenkorean'] = 0x320A;\n  t['khokhaithai'] = 0x0E02;\n  t['khokhonthai'] = 0x0E05;\n  t['khokhuatthai'] = 0x0E03;\n  t['khokhwaithai'] = 0x0E04;\n  t['khomutthai'] = 0x0E5B;\n  t['khook'] = 0x0199;\n  t['khorakhangthai'] = 0x0E06;\n  t['khzsquare'] = 0x3391;\n  t['kihiragana'] = 0x304D;\n  t['kikatakana'] = 0x30AD;\n  t['kikatakanahalfwidth'] = 0xFF77;\n  t['kiroguramusquare'] = 0x3315;\n  t['kiromeetorusquare'] = 0x3316;\n  t['kirosquare'] = 0x3314;\n  t['kiyeokacirclekorean'] = 0x326E;\n  t['kiyeokaparenkorean'] = 0x320E;\n  t['kiyeokcirclekorean'] = 0x3260;\n  t['kiyeokkorean'] = 0x3131;\n  t['kiyeokparenkorean'] = 0x3200;\n  t['kiyeoksioskorean'] = 0x3133;\n  t['kjecyrillic'] = 0x045C;\n  t['klinebelow'] = 0x1E35;\n  t['klsquare'] = 0x3398;\n  t['kmcubedsquare'] = 0x33A6;\n  t['kmonospace'] = 0xFF4B;\n  t['kmsquaredsquare'] = 0x33A2;\n  t['kohiragana'] = 0x3053;\n  t['kohmsquare'] = 0x33C0;\n  t['kokaithai'] = 0x0E01;\n  t['kokatakana'] = 0x30B3;\n  t['kokatakanahalfwidth'] = 0xFF7A;\n  t['kooposquare'] = 0x331E;\n  t['koppacyrillic'] = 0x0481;\n  t['koreanstandardsymbol'] = 0x327F;\n  t['koroniscmb'] = 0x0343;\n  t['kparen'] = 0x24A6;\n  t['kpasquare'] = 0x33AA;\n  t['ksicyrillic'] = 0x046F;\n  t['ktsquare'] = 0x33CF;\n  t['kturned'] = 0x029E;\n  t['kuhiragana'] = 0x304F;\n  t['kukatakana'] = 0x30AF;\n  t['kukatakanahalfwidth'] = 0xFF78;\n  t['kvsquare'] = 0x33B8;\n  t['kwsquare'] = 0x33BE;\n  t['l'] = 0x006C;\n  t['labengali'] = 0x09B2;\n  t['lacute'] = 0x013A;\n  t['ladeva'] = 0x0932;\n  t['lagujarati'] = 0x0AB2;\n  t['lagurmukhi'] = 0x0A32;\n  t['lakkhangyaothai'] = 0x0E45;\n  t['lamaleffinalarabic'] = 0xFEFC;\n  t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n  t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n  t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n  t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n  t['lamalefisolatedarabic'] = 0xFEFB;\n  t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n  t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n  t['lamarabic'] = 0x0644;\n  t['lambda'] = 0x03BB;\n  t['lambdastroke'] = 0x019B;\n  t['lamed'] = 0x05DC;\n  t['lameddagesh'] = 0xFB3C;\n  t['lameddageshhebrew'] = 0xFB3C;\n  t['lamedhebrew'] = 0x05DC;\n  t['lamfinalarabic'] = 0xFEDE;\n  t['lamhahinitialarabic'] = 0xFCCA;\n  t['laminitialarabic'] = 0xFEDF;\n  t['lamjeeminitialarabic'] = 0xFCC9;\n  t['lamkhahinitialarabic'] = 0xFCCB;\n  t['lamlamhehisolatedarabic'] = 0xFDF2;\n  t['lammedialarabic'] = 0xFEE0;\n  t['lammeemhahinitialarabic'] = 0xFD88;\n  t['lammeeminitialarabic'] = 0xFCCC;\n  t['largecircle'] = 0x25EF;\n  t['lbar'] = 0x019A;\n  t['lbelt'] = 0x026C;\n  t['lbopomofo'] = 0x310C;\n  t['lcaron'] = 0x013E;\n  t['lcedilla'] = 0x013C;\n  t['lcircle'] = 0x24DB;\n  t['lcircumflexbelow'] = 0x1E3D;\n  t['lcommaaccent'] = 0x013C;\n  t['ldot'] = 0x0140;\n  t['ldotaccent'] = 0x0140;\n  t['ldotbelow'] = 0x1E37;\n  t['ldotbelowmacron'] = 0x1E39;\n  t['leftangleabovecmb'] = 0x031A;\n  t['lefttackbelowcmb'] = 0x0318;\n  t['less'] = 0x003C;\n  t['lessequal'] = 0x2264;\n  t['lessequalorgreater'] = 0x22DA;\n  t['lessmonospace'] = 0xFF1C;\n  t['lessorequivalent'] = 0x2272;\n  t['lessorgreater'] = 0x2276;\n  t['lessoverequal'] = 0x2266;\n  t['lesssmall'] = 0xFE64;\n  t['lezh'] = 0x026E;\n  t['lfblock'] = 0x258C;\n  t['lhookretroflex'] = 0x026D;\n  t['lira'] = 0x20A4;\n  t['liwnarmenian'] = 0x056C;\n  t['lj'] = 0x01C9;\n  t['ljecyrillic'] = 0x0459;\n  t['ll'] = 0xF6C0;\n  t['lladeva'] = 0x0933;\n  t['llagujarati'] = 0x0AB3;\n  t['llinebelow'] = 0x1E3B;\n  t['llladeva'] = 0x0934;\n  t['llvocalicbengali'] = 0x09E1;\n  t['llvocalicdeva'] = 0x0961;\n  t['llvocalicvowelsignbengali'] = 0x09E3;\n  t['llvocalicvowelsigndeva'] = 0x0963;\n  t['lmiddletilde'] = 0x026B;\n  t['lmonospace'] = 0xFF4C;\n  t['lmsquare'] = 0x33D0;\n  t['lochulathai'] = 0x0E2C;\n  t['logicaland'] = 0x2227;\n  t['logicalnot'] = 0x00AC;\n  t['logicalnotreversed'] = 0x2310;\n  t['logicalor'] = 0x2228;\n  t['lolingthai'] = 0x0E25;\n  t['longs'] = 0x017F;\n  t['lowlinecenterline'] = 0xFE4E;\n  t['lowlinecmb'] = 0x0332;\n  t['lowlinedashed'] = 0xFE4D;\n  t['lozenge'] = 0x25CA;\n  t['lparen'] = 0x24A7;\n  t['lslash'] = 0x0142;\n  t['lsquare'] = 0x2113;\n  t['lsuperior'] = 0xF6EE;\n  t['ltshade'] = 0x2591;\n  t['luthai'] = 0x0E26;\n  t['lvocalicbengali'] = 0x098C;\n  t['lvocalicdeva'] = 0x090C;\n  t['lvocalicvowelsignbengali'] = 0x09E2;\n  t['lvocalicvowelsigndeva'] = 0x0962;\n  t['lxsquare'] = 0x33D3;\n  t['m'] = 0x006D;\n  t['mabengali'] = 0x09AE;\n  t['macron'] = 0x00AF;\n  t['macronbelowcmb'] = 0x0331;\n  t['macroncmb'] = 0x0304;\n  t['macronlowmod'] = 0x02CD;\n  t['macronmonospace'] = 0xFFE3;\n  t['macute'] = 0x1E3F;\n  t['madeva'] = 0x092E;\n  t['magujarati'] = 0x0AAE;\n  t['magurmukhi'] = 0x0A2E;\n  t['mahapakhhebrew'] = 0x05A4;\n  t['mahapakhlefthebrew'] = 0x05A4;\n  t['mahiragana'] = 0x307E;\n  t['maichattawalowleftthai'] = 0xF895;\n  t['maichattawalowrightthai'] = 0xF894;\n  t['maichattawathai'] = 0x0E4B;\n  t['maichattawaupperleftthai'] = 0xF893;\n  t['maieklowleftthai'] = 0xF88C;\n  t['maieklowrightthai'] = 0xF88B;\n  t['maiekthai'] = 0x0E48;\n  t['maiekupperleftthai'] = 0xF88A;\n  t['maihanakatleftthai'] = 0xF884;\n  t['maihanakatthai'] = 0x0E31;\n  t['maitaikhuleftthai'] = 0xF889;\n  t['maitaikhuthai'] = 0x0E47;\n  t['maitholowleftthai'] = 0xF88F;\n  t['maitholowrightthai'] = 0xF88E;\n  t['maithothai'] = 0x0E49;\n  t['maithoupperleftthai'] = 0xF88D;\n  t['maitrilowleftthai'] = 0xF892;\n  t['maitrilowrightthai'] = 0xF891;\n  t['maitrithai'] = 0x0E4A;\n  t['maitriupperleftthai'] = 0xF890;\n  t['maiyamokthai'] = 0x0E46;\n  t['makatakana'] = 0x30DE;\n  t['makatakanahalfwidth'] = 0xFF8F;\n  t['male'] = 0x2642;\n  t['mansyonsquare'] = 0x3347;\n  t['maqafhebrew'] = 0x05BE;\n  t['mars'] = 0x2642;\n  t['masoracirclehebrew'] = 0x05AF;\n  t['masquare'] = 0x3383;\n  t['mbopomofo'] = 0x3107;\n  t['mbsquare'] = 0x33D4;\n  t['mcircle'] = 0x24DC;\n  t['mcubedsquare'] = 0x33A5;\n  t['mdotaccent'] = 0x1E41;\n  t['mdotbelow'] = 0x1E43;\n  t['meemarabic'] = 0x0645;\n  t['meemfinalarabic'] = 0xFEE2;\n  t['meeminitialarabic'] = 0xFEE3;\n  t['meemmedialarabic'] = 0xFEE4;\n  t['meemmeeminitialarabic'] = 0xFCD1;\n  t['meemmeemisolatedarabic'] = 0xFC48;\n  t['meetorusquare'] = 0x334D;\n  t['mehiragana'] = 0x3081;\n  t['meizierasquare'] = 0x337E;\n  t['mekatakana'] = 0x30E1;\n  t['mekatakanahalfwidth'] = 0xFF92;\n  t['mem'] = 0x05DE;\n  t['memdagesh'] = 0xFB3E;\n  t['memdageshhebrew'] = 0xFB3E;\n  t['memhebrew'] = 0x05DE;\n  t['menarmenian'] = 0x0574;\n  t['merkhahebrew'] = 0x05A5;\n  t['merkhakefulahebrew'] = 0x05A6;\n  t['merkhakefulalefthebrew'] = 0x05A6;\n  t['merkhalefthebrew'] = 0x05A5;\n  t['mhook'] = 0x0271;\n  t['mhzsquare'] = 0x3392;\n  t['middledotkatakanahalfwidth'] = 0xFF65;\n  t['middot'] = 0x00B7;\n  t['mieumacirclekorean'] = 0x3272;\n  t['mieumaparenkorean'] = 0x3212;\n  t['mieumcirclekorean'] = 0x3264;\n  t['mieumkorean'] = 0x3141;\n  t['mieumpansioskorean'] = 0x3170;\n  t['mieumparenkorean'] = 0x3204;\n  t['mieumpieupkorean'] = 0x316E;\n  t['mieumsioskorean'] = 0x316F;\n  t['mihiragana'] = 0x307F;\n  t['mikatakana'] = 0x30DF;\n  t['mikatakanahalfwidth'] = 0xFF90;\n  t['minus'] = 0x2212;\n  t['minusbelowcmb'] = 0x0320;\n  t['minuscircle'] = 0x2296;\n  t['minusmod'] = 0x02D7;\n  t['minusplus'] = 0x2213;\n  t['minute'] = 0x2032;\n  t['miribaarusquare'] = 0x334A;\n  t['mirisquare'] = 0x3349;\n  t['mlonglegturned'] = 0x0270;\n  t['mlsquare'] = 0x3396;\n  t['mmcubedsquare'] = 0x33A3;\n  t['mmonospace'] = 0xFF4D;\n  t['mmsquaredsquare'] = 0x339F;\n  t['mohiragana'] = 0x3082;\n  t['mohmsquare'] = 0x33C1;\n  t['mokatakana'] = 0x30E2;\n  t['mokatakanahalfwidth'] = 0xFF93;\n  t['molsquare'] = 0x33D6;\n  t['momathai'] = 0x0E21;\n  t['moverssquare'] = 0x33A7;\n  t['moverssquaredsquare'] = 0x33A8;\n  t['mparen'] = 0x24A8;\n  t['mpasquare'] = 0x33AB;\n  t['mssquare'] = 0x33B3;\n  t['msuperior'] = 0xF6EF;\n  t['mturned'] = 0x026F;\n  t['mu'] = 0x00B5;\n  t['mu1'] = 0x00B5;\n  t['muasquare'] = 0x3382;\n  t['muchgreater'] = 0x226B;\n  t['muchless'] = 0x226A;\n  t['mufsquare'] = 0x338C;\n  t['mugreek'] = 0x03BC;\n  t['mugsquare'] = 0x338D;\n  t['muhiragana'] = 0x3080;\n  t['mukatakana'] = 0x30E0;\n  t['mukatakanahalfwidth'] = 0xFF91;\n  t['mulsquare'] = 0x3395;\n  t['multiply'] = 0x00D7;\n  t['mumsquare'] = 0x339B;\n  t['munahhebrew'] = 0x05A3;\n  t['munahlefthebrew'] = 0x05A3;\n  t['musicalnote'] = 0x266A;\n  t['musicalnotedbl'] = 0x266B;\n  t['musicflatsign'] = 0x266D;\n  t['musicsharpsign'] = 0x266F;\n  t['mussquare'] = 0x33B2;\n  t['muvsquare'] = 0x33B6;\n  t['muwsquare'] = 0x33BC;\n  t['mvmegasquare'] = 0x33B9;\n  t['mvsquare'] = 0x33B7;\n  t['mwmegasquare'] = 0x33BF;\n  t['mwsquare'] = 0x33BD;\n  t['n'] = 0x006E;\n  t['nabengali'] = 0x09A8;\n  t['nabla'] = 0x2207;\n  t['nacute'] = 0x0144;\n  t['nadeva'] = 0x0928;\n  t['nagujarati'] = 0x0AA8;\n  t['nagurmukhi'] = 0x0A28;\n  t['nahiragana'] = 0x306A;\n  t['nakatakana'] = 0x30CA;\n  t['nakatakanahalfwidth'] = 0xFF85;\n  t['napostrophe'] = 0x0149;\n  t['nasquare'] = 0x3381;\n  t['nbopomofo'] = 0x310B;\n  t['nbspace'] = 0x00A0;\n  t['ncaron'] = 0x0148;\n  t['ncedilla'] = 0x0146;\n  t['ncircle'] = 0x24DD;\n  t['ncircumflexbelow'] = 0x1E4B;\n  t['ncommaaccent'] = 0x0146;\n  t['ndotaccent'] = 0x1E45;\n  t['ndotbelow'] = 0x1E47;\n  t['nehiragana'] = 0x306D;\n  t['nekatakana'] = 0x30CD;\n  t['nekatakanahalfwidth'] = 0xFF88;\n  t['newsheqelsign'] = 0x20AA;\n  t['nfsquare'] = 0x338B;\n  t['ngabengali'] = 0x0999;\n  t['ngadeva'] = 0x0919;\n  t['ngagujarati'] = 0x0A99;\n  t['ngagurmukhi'] = 0x0A19;\n  t['ngonguthai'] = 0x0E07;\n  t['nhiragana'] = 0x3093;\n  t['nhookleft'] = 0x0272;\n  t['nhookretroflex'] = 0x0273;\n  t['nieunacirclekorean'] = 0x326F;\n  t['nieunaparenkorean'] = 0x320F;\n  t['nieuncieuckorean'] = 0x3135;\n  t['nieuncirclekorean'] = 0x3261;\n  t['nieunhieuhkorean'] = 0x3136;\n  t['nieunkorean'] = 0x3134;\n  t['nieunpansioskorean'] = 0x3168;\n  t['nieunparenkorean'] = 0x3201;\n  t['nieunsioskorean'] = 0x3167;\n  t['nieuntikeutkorean'] = 0x3166;\n  t['nihiragana'] = 0x306B;\n  t['nikatakana'] = 0x30CB;\n  t['nikatakanahalfwidth'] = 0xFF86;\n  t['nikhahitleftthai'] = 0xF899;\n  t['nikhahitthai'] = 0x0E4D;\n  t['nine'] = 0x0039;\n  t['ninearabic'] = 0x0669;\n  t['ninebengali'] = 0x09EF;\n  t['ninecircle'] = 0x2468;\n  t['ninecircleinversesansserif'] = 0x2792;\n  t['ninedeva'] = 0x096F;\n  t['ninegujarati'] = 0x0AEF;\n  t['ninegurmukhi'] = 0x0A6F;\n  t['ninehackarabic'] = 0x0669;\n  t['ninehangzhou'] = 0x3029;\n  t['nineideographicparen'] = 0x3228;\n  t['nineinferior'] = 0x2089;\n  t['ninemonospace'] = 0xFF19;\n  t['nineoldstyle'] = 0xF739;\n  t['nineparen'] = 0x247C;\n  t['nineperiod'] = 0x2490;\n  t['ninepersian'] = 0x06F9;\n  t['nineroman'] = 0x2178;\n  t['ninesuperior'] = 0x2079;\n  t['nineteencircle'] = 0x2472;\n  t['nineteenparen'] = 0x2486;\n  t['nineteenperiod'] = 0x249A;\n  t['ninethai'] = 0x0E59;\n  t['nj'] = 0x01CC;\n  t['njecyrillic'] = 0x045A;\n  t['nkatakana'] = 0x30F3;\n  t['nkatakanahalfwidth'] = 0xFF9D;\n  t['nlegrightlong'] = 0x019E;\n  t['nlinebelow'] = 0x1E49;\n  t['nmonospace'] = 0xFF4E;\n  t['nmsquare'] = 0x339A;\n  t['nnabengali'] = 0x09A3;\n  t['nnadeva'] = 0x0923;\n  t['nnagujarati'] = 0x0AA3;\n  t['nnagurmukhi'] = 0x0A23;\n  t['nnnadeva'] = 0x0929;\n  t['nohiragana'] = 0x306E;\n  t['nokatakana'] = 0x30CE;\n  t['nokatakanahalfwidth'] = 0xFF89;\n  t['nonbreakingspace'] = 0x00A0;\n  t['nonenthai'] = 0x0E13;\n  t['nonuthai'] = 0x0E19;\n  t['noonarabic'] = 0x0646;\n  t['noonfinalarabic'] = 0xFEE6;\n  t['noonghunnaarabic'] = 0x06BA;\n  t['noonghunnafinalarabic'] = 0xFB9F;\n  t['nooninitialarabic'] = 0xFEE7;\n  t['noonjeeminitialarabic'] = 0xFCD2;\n  t['noonjeemisolatedarabic'] = 0xFC4B;\n  t['noonmedialarabic'] = 0xFEE8;\n  t['noonmeeminitialarabic'] = 0xFCD5;\n  t['noonmeemisolatedarabic'] = 0xFC4E;\n  t['noonnoonfinalarabic'] = 0xFC8D;\n  t['notcontains'] = 0x220C;\n  t['notelement'] = 0x2209;\n  t['notelementof'] = 0x2209;\n  t['notequal'] = 0x2260;\n  t['notgreater'] = 0x226F;\n  t['notgreaternorequal'] = 0x2271;\n  t['notgreaternorless'] = 0x2279;\n  t['notidentical'] = 0x2262;\n  t['notless'] = 0x226E;\n  t['notlessnorequal'] = 0x2270;\n  t['notparallel'] = 0x2226;\n  t['notprecedes'] = 0x2280;\n  t['notsubset'] = 0x2284;\n  t['notsucceeds'] = 0x2281;\n  t['notsuperset'] = 0x2285;\n  t['nowarmenian'] = 0x0576;\n  t['nparen'] = 0x24A9;\n  t['nssquare'] = 0x33B1;\n  t['nsuperior'] = 0x207F;\n  t['ntilde'] = 0x00F1;\n  t['nu'] = 0x03BD;\n  t['nuhiragana'] = 0x306C;\n  t['nukatakana'] = 0x30CC;\n  t['nukatakanahalfwidth'] = 0xFF87;\n  t['nuktabengali'] = 0x09BC;\n  t['nuktadeva'] = 0x093C;\n  t['nuktagujarati'] = 0x0ABC;\n  t['nuktagurmukhi'] = 0x0A3C;\n  t['numbersign'] = 0x0023;\n  t['numbersignmonospace'] = 0xFF03;\n  t['numbersignsmall'] = 0xFE5F;\n  t['numeralsigngreek'] = 0x0374;\n  t['numeralsignlowergreek'] = 0x0375;\n  t['numero'] = 0x2116;\n  t['nun'] = 0x05E0;\n  t['nundagesh'] = 0xFB40;\n  t['nundageshhebrew'] = 0xFB40;\n  t['nunhebrew'] = 0x05E0;\n  t['nvsquare'] = 0x33B5;\n  t['nwsquare'] = 0x33BB;\n  t['nyabengali'] = 0x099E;\n  t['nyadeva'] = 0x091E;\n  t['nyagujarati'] = 0x0A9E;\n  t['nyagurmukhi'] = 0x0A1E;\n  t['o'] = 0x006F;\n  t['oacute'] = 0x00F3;\n  t['oangthai'] = 0x0E2D;\n  t['obarred'] = 0x0275;\n  t['obarredcyrillic'] = 0x04E9;\n  t['obarreddieresiscyrillic'] = 0x04EB;\n  t['obengali'] = 0x0993;\n  t['obopomofo'] = 0x311B;\n  t['obreve'] = 0x014F;\n  t['ocandradeva'] = 0x0911;\n  t['ocandragujarati'] = 0x0A91;\n  t['ocandravowelsigndeva'] = 0x0949;\n  t['ocandravowelsigngujarati'] = 0x0AC9;\n  t['ocaron'] = 0x01D2;\n  t['ocircle'] = 0x24DE;\n  t['ocircumflex'] = 0x00F4;\n  t['ocircumflexacute'] = 0x1ED1;\n  t['ocircumflexdotbelow'] = 0x1ED9;\n  t['ocircumflexgrave'] = 0x1ED3;\n  t['ocircumflexhookabove'] = 0x1ED5;\n  t['ocircumflextilde'] = 0x1ED7;\n  t['ocyrillic'] = 0x043E;\n  t['odblacute'] = 0x0151;\n  t['odblgrave'] = 0x020D;\n  t['odeva'] = 0x0913;\n  t['odieresis'] = 0x00F6;\n  t['odieresiscyrillic'] = 0x04E7;\n  t['odotbelow'] = 0x1ECD;\n  t['oe'] = 0x0153;\n  t['oekorean'] = 0x315A;\n  t['ogonek'] = 0x02DB;\n  t['ogonekcmb'] = 0x0328;\n  t['ograve'] = 0x00F2;\n  t['ogujarati'] = 0x0A93;\n  t['oharmenian'] = 0x0585;\n  t['ohiragana'] = 0x304A;\n  t['ohookabove'] = 0x1ECF;\n  t['ohorn'] = 0x01A1;\n  t['ohornacute'] = 0x1EDB;\n  t['ohorndotbelow'] = 0x1EE3;\n  t['ohorngrave'] = 0x1EDD;\n  t['ohornhookabove'] = 0x1EDF;\n  t['ohorntilde'] = 0x1EE1;\n  t['ohungarumlaut'] = 0x0151;\n  t['oi'] = 0x01A3;\n  t['oinvertedbreve'] = 0x020F;\n  t['okatakana'] = 0x30AA;\n  t['okatakanahalfwidth'] = 0xFF75;\n  t['okorean'] = 0x3157;\n  t['olehebrew'] = 0x05AB;\n  t['omacron'] = 0x014D;\n  t['omacronacute'] = 0x1E53;\n  t['omacrongrave'] = 0x1E51;\n  t['omdeva'] = 0x0950;\n  t['omega'] = 0x03C9;\n  t['omega1'] = 0x03D6;\n  t['omegacyrillic'] = 0x0461;\n  t['omegalatinclosed'] = 0x0277;\n  t['omegaroundcyrillic'] = 0x047B;\n  t['omegatitlocyrillic'] = 0x047D;\n  t['omegatonos'] = 0x03CE;\n  t['omgujarati'] = 0x0AD0;\n  t['omicron'] = 0x03BF;\n  t['omicrontonos'] = 0x03CC;\n  t['omonospace'] = 0xFF4F;\n  t['one'] = 0x0031;\n  t['onearabic'] = 0x0661;\n  t['onebengali'] = 0x09E7;\n  t['onecircle'] = 0x2460;\n  t['onecircleinversesansserif'] = 0x278A;\n  t['onedeva'] = 0x0967;\n  t['onedotenleader'] = 0x2024;\n  t['oneeighth'] = 0x215B;\n  t['onefitted'] = 0xF6DC;\n  t['onegujarati'] = 0x0AE7;\n  t['onegurmukhi'] = 0x0A67;\n  t['onehackarabic'] = 0x0661;\n  t['onehalf'] = 0x00BD;\n  t['onehangzhou'] = 0x3021;\n  t['oneideographicparen'] = 0x3220;\n  t['oneinferior'] = 0x2081;\n  t['onemonospace'] = 0xFF11;\n  t['onenumeratorbengali'] = 0x09F4;\n  t['oneoldstyle'] = 0xF731;\n  t['oneparen'] = 0x2474;\n  t['oneperiod'] = 0x2488;\n  t['onepersian'] = 0x06F1;\n  t['onequarter'] = 0x00BC;\n  t['oneroman'] = 0x2170;\n  t['onesuperior'] = 0x00B9;\n  t['onethai'] = 0x0E51;\n  t['onethird'] = 0x2153;\n  t['oogonek'] = 0x01EB;\n  t['oogonekmacron'] = 0x01ED;\n  t['oogurmukhi'] = 0x0A13;\n  t['oomatragurmukhi'] = 0x0A4B;\n  t['oopen'] = 0x0254;\n  t['oparen'] = 0x24AA;\n  t['openbullet'] = 0x25E6;\n  t['option'] = 0x2325;\n  t['ordfeminine'] = 0x00AA;\n  t['ordmasculine'] = 0x00BA;\n  t['orthogonal'] = 0x221F;\n  t['oshortdeva'] = 0x0912;\n  t['oshortvowelsigndeva'] = 0x094A;\n  t['oslash'] = 0x00F8;\n  t['oslashacute'] = 0x01FF;\n  t['osmallhiragana'] = 0x3049;\n  t['osmallkatakana'] = 0x30A9;\n  t['osmallkatakanahalfwidth'] = 0xFF6B;\n  t['ostrokeacute'] = 0x01FF;\n  t['osuperior'] = 0xF6F0;\n  t['otcyrillic'] = 0x047F;\n  t['otilde'] = 0x00F5;\n  t['otildeacute'] = 0x1E4D;\n  t['otildedieresis'] = 0x1E4F;\n  t['oubopomofo'] = 0x3121;\n  t['overline'] = 0x203E;\n  t['overlinecenterline'] = 0xFE4A;\n  t['overlinecmb'] = 0x0305;\n  t['overlinedashed'] = 0xFE49;\n  t['overlinedblwavy'] = 0xFE4C;\n  t['overlinewavy'] = 0xFE4B;\n  t['overscore'] = 0x00AF;\n  t['ovowelsignbengali'] = 0x09CB;\n  t['ovowelsigndeva'] = 0x094B;\n  t['ovowelsigngujarati'] = 0x0ACB;\n  t['p'] = 0x0070;\n  t['paampssquare'] = 0x3380;\n  t['paasentosquare'] = 0x332B;\n  t['pabengali'] = 0x09AA;\n  t['pacute'] = 0x1E55;\n  t['padeva'] = 0x092A;\n  t['pagedown'] = 0x21DF;\n  t['pageup'] = 0x21DE;\n  t['pagujarati'] = 0x0AAA;\n  t['pagurmukhi'] = 0x0A2A;\n  t['pahiragana'] = 0x3071;\n  t['paiyannoithai'] = 0x0E2F;\n  t['pakatakana'] = 0x30D1;\n  t['palatalizationcyrilliccmb'] = 0x0484;\n  t['palochkacyrillic'] = 0x04C0;\n  t['pansioskorean'] = 0x317F;\n  t['paragraph'] = 0x00B6;\n  t['parallel'] = 0x2225;\n  t['parenleft'] = 0x0028;\n  t['parenleftaltonearabic'] = 0xFD3E;\n  t['parenleftbt'] = 0xF8ED;\n  t['parenleftex'] = 0xF8EC;\n  t['parenleftinferior'] = 0x208D;\n  t['parenleftmonospace'] = 0xFF08;\n  t['parenleftsmall'] = 0xFE59;\n  t['parenleftsuperior'] = 0x207D;\n  t['parenlefttp'] = 0xF8EB;\n  t['parenleftvertical'] = 0xFE35;\n  t['parenright'] = 0x0029;\n  t['parenrightaltonearabic'] = 0xFD3F;\n  t['parenrightbt'] = 0xF8F8;\n  t['parenrightex'] = 0xF8F7;\n  t['parenrightinferior'] = 0x208E;\n  t['parenrightmonospace'] = 0xFF09;\n  t['parenrightsmall'] = 0xFE5A;\n  t['parenrightsuperior'] = 0x207E;\n  t['parenrighttp'] = 0xF8F6;\n  t['parenrightvertical'] = 0xFE36;\n  t['partialdiff'] = 0x2202;\n  t['paseqhebrew'] = 0x05C0;\n  t['pashtahebrew'] = 0x0599;\n  t['pasquare'] = 0x33A9;\n  t['patah'] = 0x05B7;\n  t['patah11'] = 0x05B7;\n  t['patah1d'] = 0x05B7;\n  t['patah2a'] = 0x05B7;\n  t['patahhebrew'] = 0x05B7;\n  t['patahnarrowhebrew'] = 0x05B7;\n  t['patahquarterhebrew'] = 0x05B7;\n  t['patahwidehebrew'] = 0x05B7;\n  t['pazerhebrew'] = 0x05A1;\n  t['pbopomofo'] = 0x3106;\n  t['pcircle'] = 0x24DF;\n  t['pdotaccent'] = 0x1E57;\n  t['pe'] = 0x05E4;\n  t['pecyrillic'] = 0x043F;\n  t['pedagesh'] = 0xFB44;\n  t['pedageshhebrew'] = 0xFB44;\n  t['peezisquare'] = 0x333B;\n  t['pefinaldageshhebrew'] = 0xFB43;\n  t['peharabic'] = 0x067E;\n  t['peharmenian'] = 0x057A;\n  t['pehebrew'] = 0x05E4;\n  t['pehfinalarabic'] = 0xFB57;\n  t['pehinitialarabic'] = 0xFB58;\n  t['pehiragana'] = 0x307A;\n  t['pehmedialarabic'] = 0xFB59;\n  t['pekatakana'] = 0x30DA;\n  t['pemiddlehookcyrillic'] = 0x04A7;\n  t['perafehebrew'] = 0xFB4E;\n  t['percent'] = 0x0025;\n  t['percentarabic'] = 0x066A;\n  t['percentmonospace'] = 0xFF05;\n  t['percentsmall'] = 0xFE6A;\n  t['period'] = 0x002E;\n  t['periodarmenian'] = 0x0589;\n  t['periodcentered'] = 0x00B7;\n  t['periodhalfwidth'] = 0xFF61;\n  t['periodinferior'] = 0xF6E7;\n  t['periodmonospace'] = 0xFF0E;\n  t['periodsmall'] = 0xFE52;\n  t['periodsuperior'] = 0xF6E8;\n  t['perispomenigreekcmb'] = 0x0342;\n  t['perpendicular'] = 0x22A5;\n  t['perthousand'] = 0x2030;\n  t['peseta'] = 0x20A7;\n  t['pfsquare'] = 0x338A;\n  t['phabengali'] = 0x09AB;\n  t['phadeva'] = 0x092B;\n  t['phagujarati'] = 0x0AAB;\n  t['phagurmukhi'] = 0x0A2B;\n  t['phi'] = 0x03C6;\n  t['phi1'] = 0x03D5;\n  t['phieuphacirclekorean'] = 0x327A;\n  t['phieuphaparenkorean'] = 0x321A;\n  t['phieuphcirclekorean'] = 0x326C;\n  t['phieuphkorean'] = 0x314D;\n  t['phieuphparenkorean'] = 0x320C;\n  t['philatin'] = 0x0278;\n  t['phinthuthai'] = 0x0E3A;\n  t['phisymbolgreek'] = 0x03D5;\n  t['phook'] = 0x01A5;\n  t['phophanthai'] = 0x0E1E;\n  t['phophungthai'] = 0x0E1C;\n  t['phosamphaothai'] = 0x0E20;\n  t['pi'] = 0x03C0;\n  t['pieupacirclekorean'] = 0x3273;\n  t['pieupaparenkorean'] = 0x3213;\n  t['pieupcieuckorean'] = 0x3176;\n  t['pieupcirclekorean'] = 0x3265;\n  t['pieupkiyeokkorean'] = 0x3172;\n  t['pieupkorean'] = 0x3142;\n  t['pieupparenkorean'] = 0x3205;\n  t['pieupsioskiyeokkorean'] = 0x3174;\n  t['pieupsioskorean'] = 0x3144;\n  t['pieupsiostikeutkorean'] = 0x3175;\n  t['pieupthieuthkorean'] = 0x3177;\n  t['pieuptikeutkorean'] = 0x3173;\n  t['pihiragana'] = 0x3074;\n  t['pikatakana'] = 0x30D4;\n  t['pisymbolgreek'] = 0x03D6;\n  t['piwrarmenian'] = 0x0583;\n  t['plus'] = 0x002B;\n  t['plusbelowcmb'] = 0x031F;\n  t['pluscircle'] = 0x2295;\n  t['plusminus'] = 0x00B1;\n  t['plusmod'] = 0x02D6;\n  t['plusmonospace'] = 0xFF0B;\n  t['plussmall'] = 0xFE62;\n  t['plussuperior'] = 0x207A;\n  t['pmonospace'] = 0xFF50;\n  t['pmsquare'] = 0x33D8;\n  t['pohiragana'] = 0x307D;\n  t['pointingindexdownwhite'] = 0x261F;\n  t['pointingindexleftwhite'] = 0x261C;\n  t['pointingindexrightwhite'] = 0x261E;\n  t['pointingindexupwhite'] = 0x261D;\n  t['pokatakana'] = 0x30DD;\n  t['poplathai'] = 0x0E1B;\n  t['postalmark'] = 0x3012;\n  t['postalmarkface'] = 0x3020;\n  t['pparen'] = 0x24AB;\n  t['precedes'] = 0x227A;\n  t['prescription'] = 0x211E;\n  t['primemod'] = 0x02B9;\n  t['primereversed'] = 0x2035;\n  t['product'] = 0x220F;\n  t['projective'] = 0x2305;\n  t['prolongedkana'] = 0x30FC;\n  t['propellor'] = 0x2318;\n  t['propersubset'] = 0x2282;\n  t['propersuperset'] = 0x2283;\n  t['proportion'] = 0x2237;\n  t['proportional'] = 0x221D;\n  t['psi'] = 0x03C8;\n  t['psicyrillic'] = 0x0471;\n  t['psilipneumatacyrilliccmb'] = 0x0486;\n  t['pssquare'] = 0x33B0;\n  t['puhiragana'] = 0x3077;\n  t['pukatakana'] = 0x30D7;\n  t['pvsquare'] = 0x33B4;\n  t['pwsquare'] = 0x33BA;\n  t['q'] = 0x0071;\n  t['qadeva'] = 0x0958;\n  t['qadmahebrew'] = 0x05A8;\n  t['qafarabic'] = 0x0642;\n  t['qaffinalarabic'] = 0xFED6;\n  t['qafinitialarabic'] = 0xFED7;\n  t['qafmedialarabic'] = 0xFED8;\n  t['qamats'] = 0x05B8;\n  t['qamats10'] = 0x05B8;\n  t['qamats1a'] = 0x05B8;\n  t['qamats1c'] = 0x05B8;\n  t['qamats27'] = 0x05B8;\n  t['qamats29'] = 0x05B8;\n  t['qamats33'] = 0x05B8;\n  t['qamatsde'] = 0x05B8;\n  t['qamatshebrew'] = 0x05B8;\n  t['qamatsnarrowhebrew'] = 0x05B8;\n  t['qamatsqatanhebrew'] = 0x05B8;\n  t['qamatsqatannarrowhebrew'] = 0x05B8;\n  t['qamatsqatanquarterhebrew'] = 0x05B8;\n  t['qamatsqatanwidehebrew'] = 0x05B8;\n  t['qamatsquarterhebrew'] = 0x05B8;\n  t['qamatswidehebrew'] = 0x05B8;\n  t['qarneyparahebrew'] = 0x059F;\n  t['qbopomofo'] = 0x3111;\n  t['qcircle'] = 0x24E0;\n  t['qhook'] = 0x02A0;\n  t['qmonospace'] = 0xFF51;\n  t['qof'] = 0x05E7;\n  t['qofdagesh'] = 0xFB47;\n  t['qofdageshhebrew'] = 0xFB47;\n  t['qofhebrew'] = 0x05E7;\n  t['qparen'] = 0x24AC;\n  t['quarternote'] = 0x2669;\n  t['qubuts'] = 0x05BB;\n  t['qubuts18'] = 0x05BB;\n  t['qubuts25'] = 0x05BB;\n  t['qubuts31'] = 0x05BB;\n  t['qubutshebrew'] = 0x05BB;\n  t['qubutsnarrowhebrew'] = 0x05BB;\n  t['qubutsquarterhebrew'] = 0x05BB;\n  t['qubutswidehebrew'] = 0x05BB;\n  t['question'] = 0x003F;\n  t['questionarabic'] = 0x061F;\n  t['questionarmenian'] = 0x055E;\n  t['questiondown'] = 0x00BF;\n  t['questiondownsmall'] = 0xF7BF;\n  t['questiongreek'] = 0x037E;\n  t['questionmonospace'] = 0xFF1F;\n  t['questionsmall'] = 0xF73F;\n  t['quotedbl'] = 0x0022;\n  t['quotedblbase'] = 0x201E;\n  t['quotedblleft'] = 0x201C;\n  t['quotedblmonospace'] = 0xFF02;\n  t['quotedblprime'] = 0x301E;\n  t['quotedblprimereversed'] = 0x301D;\n  t['quotedblright'] = 0x201D;\n  t['quoteleft'] = 0x2018;\n  t['quoteleftreversed'] = 0x201B;\n  t['quotereversed'] = 0x201B;\n  t['quoteright'] = 0x2019;\n  t['quoterightn'] = 0x0149;\n  t['quotesinglbase'] = 0x201A;\n  t['quotesingle'] = 0x0027;\n  t['quotesinglemonospace'] = 0xFF07;\n  t['r'] = 0x0072;\n  t['raarmenian'] = 0x057C;\n  t['rabengali'] = 0x09B0;\n  t['racute'] = 0x0155;\n  t['radeva'] = 0x0930;\n  t['radical'] = 0x221A;\n  t['radicalex'] = 0xF8E5;\n  t['radoverssquare'] = 0x33AE;\n  t['radoverssquaredsquare'] = 0x33AF;\n  t['radsquare'] = 0x33AD;\n  t['rafe'] = 0x05BF;\n  t['rafehebrew'] = 0x05BF;\n  t['ragujarati'] = 0x0AB0;\n  t['ragurmukhi'] = 0x0A30;\n  t['rahiragana'] = 0x3089;\n  t['rakatakana'] = 0x30E9;\n  t['rakatakanahalfwidth'] = 0xFF97;\n  t['ralowerdiagonalbengali'] = 0x09F1;\n  t['ramiddlediagonalbengali'] = 0x09F0;\n  t['ramshorn'] = 0x0264;\n  t['ratio'] = 0x2236;\n  t['rbopomofo'] = 0x3116;\n  t['rcaron'] = 0x0159;\n  t['rcedilla'] = 0x0157;\n  t['rcircle'] = 0x24E1;\n  t['rcommaaccent'] = 0x0157;\n  t['rdblgrave'] = 0x0211;\n  t['rdotaccent'] = 0x1E59;\n  t['rdotbelow'] = 0x1E5B;\n  t['rdotbelowmacron'] = 0x1E5D;\n  t['referencemark'] = 0x203B;\n  t['reflexsubset'] = 0x2286;\n  t['reflexsuperset'] = 0x2287;\n  t['registered'] = 0x00AE;\n  t['registersans'] = 0xF8E8;\n  t['registerserif'] = 0xF6DA;\n  t['reharabic'] = 0x0631;\n  t['reharmenian'] = 0x0580;\n  t['rehfinalarabic'] = 0xFEAE;\n  t['rehiragana'] = 0x308C;\n  t['rekatakana'] = 0x30EC;\n  t['rekatakanahalfwidth'] = 0xFF9A;\n  t['resh'] = 0x05E8;\n  t['reshdageshhebrew'] = 0xFB48;\n  t['reshhebrew'] = 0x05E8;\n  t['reversedtilde'] = 0x223D;\n  t['reviahebrew'] = 0x0597;\n  t['reviamugrashhebrew'] = 0x0597;\n  t['revlogicalnot'] = 0x2310;\n  t['rfishhook'] = 0x027E;\n  t['rfishhookreversed'] = 0x027F;\n  t['rhabengali'] = 0x09DD;\n  t['rhadeva'] = 0x095D;\n  t['rho'] = 0x03C1;\n  t['rhook'] = 0x027D;\n  t['rhookturned'] = 0x027B;\n  t['rhookturnedsuperior'] = 0x02B5;\n  t['rhosymbolgreek'] = 0x03F1;\n  t['rhotichookmod'] = 0x02DE;\n  t['rieulacirclekorean'] = 0x3271;\n  t['rieulaparenkorean'] = 0x3211;\n  t['rieulcirclekorean'] = 0x3263;\n  t['rieulhieuhkorean'] = 0x3140;\n  t['rieulkiyeokkorean'] = 0x313A;\n  t['rieulkiyeoksioskorean'] = 0x3169;\n  t['rieulkorean'] = 0x3139;\n  t['rieulmieumkorean'] = 0x313B;\n  t['rieulpansioskorean'] = 0x316C;\n  t['rieulparenkorean'] = 0x3203;\n  t['rieulphieuphkorean'] = 0x313F;\n  t['rieulpieupkorean'] = 0x313C;\n  t['rieulpieupsioskorean'] = 0x316B;\n  t['rieulsioskorean'] = 0x313D;\n  t['rieulthieuthkorean'] = 0x313E;\n  t['rieultikeutkorean'] = 0x316A;\n  t['rieulyeorinhieuhkorean'] = 0x316D;\n  t['rightangle'] = 0x221F;\n  t['righttackbelowcmb'] = 0x0319;\n  t['righttriangle'] = 0x22BF;\n  t['rihiragana'] = 0x308A;\n  t['rikatakana'] = 0x30EA;\n  t['rikatakanahalfwidth'] = 0xFF98;\n  t['ring'] = 0x02DA;\n  t['ringbelowcmb'] = 0x0325;\n  t['ringcmb'] = 0x030A;\n  t['ringhalfleft'] = 0x02BF;\n  t['ringhalfleftarmenian'] = 0x0559;\n  t['ringhalfleftbelowcmb'] = 0x031C;\n  t['ringhalfleftcentered'] = 0x02D3;\n  t['ringhalfright'] = 0x02BE;\n  t['ringhalfrightbelowcmb'] = 0x0339;\n  t['ringhalfrightcentered'] = 0x02D2;\n  t['rinvertedbreve'] = 0x0213;\n  t['rittorusquare'] = 0x3351;\n  t['rlinebelow'] = 0x1E5F;\n  t['rlongleg'] = 0x027C;\n  t['rlonglegturned'] = 0x027A;\n  t['rmonospace'] = 0xFF52;\n  t['rohiragana'] = 0x308D;\n  t['rokatakana'] = 0x30ED;\n  t['rokatakanahalfwidth'] = 0xFF9B;\n  t['roruathai'] = 0x0E23;\n  t['rparen'] = 0x24AD;\n  t['rrabengali'] = 0x09DC;\n  t['rradeva'] = 0x0931;\n  t['rragurmukhi'] = 0x0A5C;\n  t['rreharabic'] = 0x0691;\n  t['rrehfinalarabic'] = 0xFB8D;\n  t['rrvocalicbengali'] = 0x09E0;\n  t['rrvocalicdeva'] = 0x0960;\n  t['rrvocalicgujarati'] = 0x0AE0;\n  t['rrvocalicvowelsignbengali'] = 0x09C4;\n  t['rrvocalicvowelsigndeva'] = 0x0944;\n  t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n  t['rsuperior'] = 0xF6F1;\n  t['rtblock'] = 0x2590;\n  t['rturned'] = 0x0279;\n  t['rturnedsuperior'] = 0x02B4;\n  t['ruhiragana'] = 0x308B;\n  t['rukatakana'] = 0x30EB;\n  t['rukatakanahalfwidth'] = 0xFF99;\n  t['rupeemarkbengali'] = 0x09F2;\n  t['rupeesignbengali'] = 0x09F3;\n  t['rupiah'] = 0xF6DD;\n  t['ruthai'] = 0x0E24;\n  t['rvocalicbengali'] = 0x098B;\n  t['rvocalicdeva'] = 0x090B;\n  t['rvocalicgujarati'] = 0x0A8B;\n  t['rvocalicvowelsignbengali'] = 0x09C3;\n  t['rvocalicvowelsigndeva'] = 0x0943;\n  t['rvocalicvowelsigngujarati'] = 0x0AC3;\n  t['s'] = 0x0073;\n  t['sabengali'] = 0x09B8;\n  t['sacute'] = 0x015B;\n  t['sacutedotaccent'] = 0x1E65;\n  t['sadarabic'] = 0x0635;\n  t['sadeva'] = 0x0938;\n  t['sadfinalarabic'] = 0xFEBA;\n  t['sadinitialarabic'] = 0xFEBB;\n  t['sadmedialarabic'] = 0xFEBC;\n  t['sagujarati'] = 0x0AB8;\n  t['sagurmukhi'] = 0x0A38;\n  t['sahiragana'] = 0x3055;\n  t['sakatakana'] = 0x30B5;\n  t['sakatakanahalfwidth'] = 0xFF7B;\n  t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n  t['samekh'] = 0x05E1;\n  t['samekhdagesh'] = 0xFB41;\n  t['samekhdageshhebrew'] = 0xFB41;\n  t['samekhhebrew'] = 0x05E1;\n  t['saraaathai'] = 0x0E32;\n  t['saraaethai'] = 0x0E41;\n  t['saraaimaimalaithai'] = 0x0E44;\n  t['saraaimaimuanthai'] = 0x0E43;\n  t['saraamthai'] = 0x0E33;\n  t['saraathai'] = 0x0E30;\n  t['saraethai'] = 0x0E40;\n  t['saraiileftthai'] = 0xF886;\n  t['saraiithai'] = 0x0E35;\n  t['saraileftthai'] = 0xF885;\n  t['saraithai'] = 0x0E34;\n  t['saraothai'] = 0x0E42;\n  t['saraueeleftthai'] = 0xF888;\n  t['saraueethai'] = 0x0E37;\n  t['saraueleftthai'] = 0xF887;\n  t['sarauethai'] = 0x0E36;\n  t['sarauthai'] = 0x0E38;\n  t['sarauuthai'] = 0x0E39;\n  t['sbopomofo'] = 0x3119;\n  t['scaron'] = 0x0161;\n  t['scarondotaccent'] = 0x1E67;\n  t['scedilla'] = 0x015F;\n  t['schwa'] = 0x0259;\n  t['schwacyrillic'] = 0x04D9;\n  t['schwadieresiscyrillic'] = 0x04DB;\n  t['schwahook'] = 0x025A;\n  t['scircle'] = 0x24E2;\n  t['scircumflex'] = 0x015D;\n  t['scommaaccent'] = 0x0219;\n  t['sdotaccent'] = 0x1E61;\n  t['sdotbelow'] = 0x1E63;\n  t['sdotbelowdotaccent'] = 0x1E69;\n  t['seagullbelowcmb'] = 0x033C;\n  t['second'] = 0x2033;\n  t['secondtonechinese'] = 0x02CA;\n  t['section'] = 0x00A7;\n  t['seenarabic'] = 0x0633;\n  t['seenfinalarabic'] = 0xFEB2;\n  t['seeninitialarabic'] = 0xFEB3;\n  t['seenmedialarabic'] = 0xFEB4;\n  t['segol'] = 0x05B6;\n  t['segol13'] = 0x05B6;\n  t['segol1f'] = 0x05B6;\n  t['segol2c'] = 0x05B6;\n  t['segolhebrew'] = 0x05B6;\n  t['segolnarrowhebrew'] = 0x05B6;\n  t['segolquarterhebrew'] = 0x05B6;\n  t['segoltahebrew'] = 0x0592;\n  t['segolwidehebrew'] = 0x05B6;\n  t['seharmenian'] = 0x057D;\n  t['sehiragana'] = 0x305B;\n  t['sekatakana'] = 0x30BB;\n  t['sekatakanahalfwidth'] = 0xFF7E;\n  t['semicolon'] = 0x003B;\n  t['semicolonarabic'] = 0x061B;\n  t['semicolonmonospace'] = 0xFF1B;\n  t['semicolonsmall'] = 0xFE54;\n  t['semivoicedmarkkana'] = 0x309C;\n  t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n  t['sentisquare'] = 0x3322;\n  t['sentosquare'] = 0x3323;\n  t['seven'] = 0x0037;\n  t['sevenarabic'] = 0x0667;\n  t['sevenbengali'] = 0x09ED;\n  t['sevencircle'] = 0x2466;\n  t['sevencircleinversesansserif'] = 0x2790;\n  t['sevendeva'] = 0x096D;\n  t['seveneighths'] = 0x215E;\n  t['sevengujarati'] = 0x0AED;\n  t['sevengurmukhi'] = 0x0A6D;\n  t['sevenhackarabic'] = 0x0667;\n  t['sevenhangzhou'] = 0x3027;\n  t['sevenideographicparen'] = 0x3226;\n  t['seveninferior'] = 0x2087;\n  t['sevenmonospace'] = 0xFF17;\n  t['sevenoldstyle'] = 0xF737;\n  t['sevenparen'] = 0x247A;\n  t['sevenperiod'] = 0x248E;\n  t['sevenpersian'] = 0x06F7;\n  t['sevenroman'] = 0x2176;\n  t['sevensuperior'] = 0x2077;\n  t['seventeencircle'] = 0x2470;\n  t['seventeenparen'] = 0x2484;\n  t['seventeenperiod'] = 0x2498;\n  t['seventhai'] = 0x0E57;\n  t['sfthyphen'] = 0x00AD;\n  t['shaarmenian'] = 0x0577;\n  t['shabengali'] = 0x09B6;\n  t['shacyrillic'] = 0x0448;\n  t['shaddaarabic'] = 0x0651;\n  t['shaddadammaarabic'] = 0xFC61;\n  t['shaddadammatanarabic'] = 0xFC5E;\n  t['shaddafathaarabic'] = 0xFC60;\n  t['shaddakasraarabic'] = 0xFC62;\n  t['shaddakasratanarabic'] = 0xFC5F;\n  t['shade'] = 0x2592;\n  t['shadedark'] = 0x2593;\n  t['shadelight'] = 0x2591;\n  t['shademedium'] = 0x2592;\n  t['shadeva'] = 0x0936;\n  t['shagujarati'] = 0x0AB6;\n  t['shagurmukhi'] = 0x0A36;\n  t['shalshelethebrew'] = 0x0593;\n  t['shbopomofo'] = 0x3115;\n  t['shchacyrillic'] = 0x0449;\n  t['sheenarabic'] = 0x0634;\n  t['sheenfinalarabic'] = 0xFEB6;\n  t['sheeninitialarabic'] = 0xFEB7;\n  t['sheenmedialarabic'] = 0xFEB8;\n  t['sheicoptic'] = 0x03E3;\n  t['sheqel'] = 0x20AA;\n  t['sheqelhebrew'] = 0x20AA;\n  t['sheva'] = 0x05B0;\n  t['sheva115'] = 0x05B0;\n  t['sheva15'] = 0x05B0;\n  t['sheva22'] = 0x05B0;\n  t['sheva2e'] = 0x05B0;\n  t['shevahebrew'] = 0x05B0;\n  t['shevanarrowhebrew'] = 0x05B0;\n  t['shevaquarterhebrew'] = 0x05B0;\n  t['shevawidehebrew'] = 0x05B0;\n  t['shhacyrillic'] = 0x04BB;\n  t['shimacoptic'] = 0x03ED;\n  t['shin'] = 0x05E9;\n  t['shindagesh'] = 0xFB49;\n  t['shindageshhebrew'] = 0xFB49;\n  t['shindageshshindot'] = 0xFB2C;\n  t['shindageshshindothebrew'] = 0xFB2C;\n  t['shindageshsindot'] = 0xFB2D;\n  t['shindageshsindothebrew'] = 0xFB2D;\n  t['shindothebrew'] = 0x05C1;\n  t['shinhebrew'] = 0x05E9;\n  t['shinshindot'] = 0xFB2A;\n  t['shinshindothebrew'] = 0xFB2A;\n  t['shinsindot'] = 0xFB2B;\n  t['shinsindothebrew'] = 0xFB2B;\n  t['shook'] = 0x0282;\n  t['sigma'] = 0x03C3;\n  t['sigma1'] = 0x03C2;\n  t['sigmafinal'] = 0x03C2;\n  t['sigmalunatesymbolgreek'] = 0x03F2;\n  t['sihiragana'] = 0x3057;\n  t['sikatakana'] = 0x30B7;\n  t['sikatakanahalfwidth'] = 0xFF7C;\n  t['siluqhebrew'] = 0x05BD;\n  t['siluqlefthebrew'] = 0x05BD;\n  t['similar'] = 0x223C;\n  t['sindothebrew'] = 0x05C2;\n  t['siosacirclekorean'] = 0x3274;\n  t['siosaparenkorean'] = 0x3214;\n  t['sioscieuckorean'] = 0x317E;\n  t['sioscirclekorean'] = 0x3266;\n  t['sioskiyeokkorean'] = 0x317A;\n  t['sioskorean'] = 0x3145;\n  t['siosnieunkorean'] = 0x317B;\n  t['siosparenkorean'] = 0x3206;\n  t['siospieupkorean'] = 0x317D;\n  t['siostikeutkorean'] = 0x317C;\n  t['six'] = 0x0036;\n  t['sixarabic'] = 0x0666;\n  t['sixbengali'] = 0x09EC;\n  t['sixcircle'] = 0x2465;\n  t['sixcircleinversesansserif'] = 0x278F;\n  t['sixdeva'] = 0x096C;\n  t['sixgujarati'] = 0x0AEC;\n  t['sixgurmukhi'] = 0x0A6C;\n  t['sixhackarabic'] = 0x0666;\n  t['sixhangzhou'] = 0x3026;\n  t['sixideographicparen'] = 0x3225;\n  t['sixinferior'] = 0x2086;\n  t['sixmonospace'] = 0xFF16;\n  t['sixoldstyle'] = 0xF736;\n  t['sixparen'] = 0x2479;\n  t['sixperiod'] = 0x248D;\n  t['sixpersian'] = 0x06F6;\n  t['sixroman'] = 0x2175;\n  t['sixsuperior'] = 0x2076;\n  t['sixteencircle'] = 0x246F;\n  t['sixteencurrencydenominatorbengali'] = 0x09F9;\n  t['sixteenparen'] = 0x2483;\n  t['sixteenperiod'] = 0x2497;\n  t['sixthai'] = 0x0E56;\n  t['slash'] = 0x002F;\n  t['slashmonospace'] = 0xFF0F;\n  t['slong'] = 0x017F;\n  t['slongdotaccent'] = 0x1E9B;\n  t['smileface'] = 0x263A;\n  t['smonospace'] = 0xFF53;\n  t['sofpasuqhebrew'] = 0x05C3;\n  t['softhyphen'] = 0x00AD;\n  t['softsigncyrillic'] = 0x044C;\n  t['sohiragana'] = 0x305D;\n  t['sokatakana'] = 0x30BD;\n  t['sokatakanahalfwidth'] = 0xFF7F;\n  t['soliduslongoverlaycmb'] = 0x0338;\n  t['solidusshortoverlaycmb'] = 0x0337;\n  t['sorusithai'] = 0x0E29;\n  t['sosalathai'] = 0x0E28;\n  t['sosothai'] = 0x0E0B;\n  t['sosuathai'] = 0x0E2A;\n  t['space'] = 0x0020;\n  t['spacehackarabic'] = 0x0020;\n  t['spade'] = 0x2660;\n  t['spadesuitblack'] = 0x2660;\n  t['spadesuitwhite'] = 0x2664;\n  t['sparen'] = 0x24AE;\n  t['squarebelowcmb'] = 0x033B;\n  t['squarecc'] = 0x33C4;\n  t['squarecm'] = 0x339D;\n  t['squarediagonalcrosshatchfill'] = 0x25A9;\n  t['squarehorizontalfill'] = 0x25A4;\n  t['squarekg'] = 0x338F;\n  t['squarekm'] = 0x339E;\n  t['squarekmcapital'] = 0x33CE;\n  t['squareln'] = 0x33D1;\n  t['squarelog'] = 0x33D2;\n  t['squaremg'] = 0x338E;\n  t['squaremil'] = 0x33D5;\n  t['squaremm'] = 0x339C;\n  t['squaremsquared'] = 0x33A1;\n  t['squareorthogonalcrosshatchfill'] = 0x25A6;\n  t['squareupperlefttolowerrightfill'] = 0x25A7;\n  t['squareupperrighttolowerleftfill'] = 0x25A8;\n  t['squareverticalfill'] = 0x25A5;\n  t['squarewhitewithsmallblack'] = 0x25A3;\n  t['srsquare'] = 0x33DB;\n  t['ssabengali'] = 0x09B7;\n  t['ssadeva'] = 0x0937;\n  t['ssagujarati'] = 0x0AB7;\n  t['ssangcieuckorean'] = 0x3149;\n  t['ssanghieuhkorean'] = 0x3185;\n  t['ssangieungkorean'] = 0x3180;\n  t['ssangkiyeokkorean'] = 0x3132;\n  t['ssangnieunkorean'] = 0x3165;\n  t['ssangpieupkorean'] = 0x3143;\n  t['ssangsioskorean'] = 0x3146;\n  t['ssangtikeutkorean'] = 0x3138;\n  t['ssuperior'] = 0xF6F2;\n  t['sterling'] = 0x00A3;\n  t['sterlingmonospace'] = 0xFFE1;\n  t['strokelongoverlaycmb'] = 0x0336;\n  t['strokeshortoverlaycmb'] = 0x0335;\n  t['subset'] = 0x2282;\n  t['subsetnotequal'] = 0x228A;\n  t['subsetorequal'] = 0x2286;\n  t['succeeds'] = 0x227B;\n  t['suchthat'] = 0x220B;\n  t['suhiragana'] = 0x3059;\n  t['sukatakana'] = 0x30B9;\n  t['sukatakanahalfwidth'] = 0xFF7D;\n  t['sukunarabic'] = 0x0652;\n  t['summation'] = 0x2211;\n  t['sun'] = 0x263C;\n  t['superset'] = 0x2283;\n  t['supersetnotequal'] = 0x228B;\n  t['supersetorequal'] = 0x2287;\n  t['svsquare'] = 0x33DC;\n  t['syouwaerasquare'] = 0x337C;\n  t['t'] = 0x0074;\n  t['tabengali'] = 0x09A4;\n  t['tackdown'] = 0x22A4;\n  t['tackleft'] = 0x22A3;\n  t['tadeva'] = 0x0924;\n  t['tagujarati'] = 0x0AA4;\n  t['tagurmukhi'] = 0x0A24;\n  t['taharabic'] = 0x0637;\n  t['tahfinalarabic'] = 0xFEC2;\n  t['tahinitialarabic'] = 0xFEC3;\n  t['tahiragana'] = 0x305F;\n  t['tahmedialarabic'] = 0xFEC4;\n  t['taisyouerasquare'] = 0x337D;\n  t['takatakana'] = 0x30BF;\n  t['takatakanahalfwidth'] = 0xFF80;\n  t['tatweelarabic'] = 0x0640;\n  t['tau'] = 0x03C4;\n  t['tav'] = 0x05EA;\n  t['tavdages'] = 0xFB4A;\n  t['tavdagesh'] = 0xFB4A;\n  t['tavdageshhebrew'] = 0xFB4A;\n  t['tavhebrew'] = 0x05EA;\n  t['tbar'] = 0x0167;\n  t['tbopomofo'] = 0x310A;\n  t['tcaron'] = 0x0165;\n  t['tccurl'] = 0x02A8;\n  t['tcedilla'] = 0x0163;\n  t['tcheharabic'] = 0x0686;\n  t['tchehfinalarabic'] = 0xFB7B;\n  t['tchehinitialarabic'] = 0xFB7C;\n  t['tchehmedialarabic'] = 0xFB7D;\n  t['tcircle'] = 0x24E3;\n  t['tcircumflexbelow'] = 0x1E71;\n  t['tcommaaccent'] = 0x0163;\n  t['tdieresis'] = 0x1E97;\n  t['tdotaccent'] = 0x1E6B;\n  t['tdotbelow'] = 0x1E6D;\n  t['tecyrillic'] = 0x0442;\n  t['tedescendercyrillic'] = 0x04AD;\n  t['teharabic'] = 0x062A;\n  t['tehfinalarabic'] = 0xFE96;\n  t['tehhahinitialarabic'] = 0xFCA2;\n  t['tehhahisolatedarabic'] = 0xFC0C;\n  t['tehinitialarabic'] = 0xFE97;\n  t['tehiragana'] = 0x3066;\n  t['tehjeeminitialarabic'] = 0xFCA1;\n  t['tehjeemisolatedarabic'] = 0xFC0B;\n  t['tehmarbutaarabic'] = 0x0629;\n  t['tehmarbutafinalarabic'] = 0xFE94;\n  t['tehmedialarabic'] = 0xFE98;\n  t['tehmeeminitialarabic'] = 0xFCA4;\n  t['tehmeemisolatedarabic'] = 0xFC0E;\n  t['tehnoonfinalarabic'] = 0xFC73;\n  t['tekatakana'] = 0x30C6;\n  t['tekatakanahalfwidth'] = 0xFF83;\n  t['telephone'] = 0x2121;\n  t['telephoneblack'] = 0x260E;\n  t['telishagedolahebrew'] = 0x05A0;\n  t['telishaqetanahebrew'] = 0x05A9;\n  t['tencircle'] = 0x2469;\n  t['tenideographicparen'] = 0x3229;\n  t['tenparen'] = 0x247D;\n  t['tenperiod'] = 0x2491;\n  t['tenroman'] = 0x2179;\n  t['tesh'] = 0x02A7;\n  t['tet'] = 0x05D8;\n  t['tetdagesh'] = 0xFB38;\n  t['tetdageshhebrew'] = 0xFB38;\n  t['tethebrew'] = 0x05D8;\n  t['tetsecyrillic'] = 0x04B5;\n  t['tevirhebrew'] = 0x059B;\n  t['tevirlefthebrew'] = 0x059B;\n  t['thabengali'] = 0x09A5;\n  t['thadeva'] = 0x0925;\n  t['thagujarati'] = 0x0AA5;\n  t['thagurmukhi'] = 0x0A25;\n  t['thalarabic'] = 0x0630;\n  t['thalfinalarabic'] = 0xFEAC;\n  t['thanthakhatlowleftthai'] = 0xF898;\n  t['thanthakhatlowrightthai'] = 0xF897;\n  t['thanthakhatthai'] = 0x0E4C;\n  t['thanthakhatupperleftthai'] = 0xF896;\n  t['theharabic'] = 0x062B;\n  t['thehfinalarabic'] = 0xFE9A;\n  t['thehinitialarabic'] = 0xFE9B;\n  t['thehmedialarabic'] = 0xFE9C;\n  t['thereexists'] = 0x2203;\n  t['therefore'] = 0x2234;\n  t['theta'] = 0x03B8;\n  t['theta1'] = 0x03D1;\n  t['thetasymbolgreek'] = 0x03D1;\n  t['thieuthacirclekorean'] = 0x3279;\n  t['thieuthaparenkorean'] = 0x3219;\n  t['thieuthcirclekorean'] = 0x326B;\n  t['thieuthkorean'] = 0x314C;\n  t['thieuthparenkorean'] = 0x320B;\n  t['thirteencircle'] = 0x246C;\n  t['thirteenparen'] = 0x2480;\n  t['thirteenperiod'] = 0x2494;\n  t['thonangmonthothai'] = 0x0E11;\n  t['thook'] = 0x01AD;\n  t['thophuthaothai'] = 0x0E12;\n  t['thorn'] = 0x00FE;\n  t['thothahanthai'] = 0x0E17;\n  t['thothanthai'] = 0x0E10;\n  t['thothongthai'] = 0x0E18;\n  t['thothungthai'] = 0x0E16;\n  t['thousandcyrillic'] = 0x0482;\n  t['thousandsseparatorarabic'] = 0x066C;\n  t['thousandsseparatorpersian'] = 0x066C;\n  t['three'] = 0x0033;\n  t['threearabic'] = 0x0663;\n  t['threebengali'] = 0x09E9;\n  t['threecircle'] = 0x2462;\n  t['threecircleinversesansserif'] = 0x278C;\n  t['threedeva'] = 0x0969;\n  t['threeeighths'] = 0x215C;\n  t['threegujarati'] = 0x0AE9;\n  t['threegurmukhi'] = 0x0A69;\n  t['threehackarabic'] = 0x0663;\n  t['threehangzhou'] = 0x3023;\n  t['threeideographicparen'] = 0x3222;\n  t['threeinferior'] = 0x2083;\n  t['threemonospace'] = 0xFF13;\n  t['threenumeratorbengali'] = 0x09F6;\n  t['threeoldstyle'] = 0xF733;\n  t['threeparen'] = 0x2476;\n  t['threeperiod'] = 0x248A;\n  t['threepersian'] = 0x06F3;\n  t['threequarters'] = 0x00BE;\n  t['threequartersemdash'] = 0xF6DE;\n  t['threeroman'] = 0x2172;\n  t['threesuperior'] = 0x00B3;\n  t['threethai'] = 0x0E53;\n  t['thzsquare'] = 0x3394;\n  t['tihiragana'] = 0x3061;\n  t['tikatakana'] = 0x30C1;\n  t['tikatakanahalfwidth'] = 0xFF81;\n  t['tikeutacirclekorean'] = 0x3270;\n  t['tikeutaparenkorean'] = 0x3210;\n  t['tikeutcirclekorean'] = 0x3262;\n  t['tikeutkorean'] = 0x3137;\n  t['tikeutparenkorean'] = 0x3202;\n  t['tilde'] = 0x02DC;\n  t['tildebelowcmb'] = 0x0330;\n  t['tildecmb'] = 0x0303;\n  t['tildecomb'] = 0x0303;\n  t['tildedoublecmb'] = 0x0360;\n  t['tildeoperator'] = 0x223C;\n  t['tildeoverlaycmb'] = 0x0334;\n  t['tildeverticalcmb'] = 0x033E;\n  t['timescircle'] = 0x2297;\n  t['tipehahebrew'] = 0x0596;\n  t['tipehalefthebrew'] = 0x0596;\n  t['tippigurmukhi'] = 0x0A70;\n  t['titlocyrilliccmb'] = 0x0483;\n  t['tiwnarmenian'] = 0x057F;\n  t['tlinebelow'] = 0x1E6F;\n  t['tmonospace'] = 0xFF54;\n  t['toarmenian'] = 0x0569;\n  t['tohiragana'] = 0x3068;\n  t['tokatakana'] = 0x30C8;\n  t['tokatakanahalfwidth'] = 0xFF84;\n  t['tonebarextrahighmod'] = 0x02E5;\n  t['tonebarextralowmod'] = 0x02E9;\n  t['tonebarhighmod'] = 0x02E6;\n  t['tonebarlowmod'] = 0x02E8;\n  t['tonebarmidmod'] = 0x02E7;\n  t['tonefive'] = 0x01BD;\n  t['tonesix'] = 0x0185;\n  t['tonetwo'] = 0x01A8;\n  t['tonos'] = 0x0384;\n  t['tonsquare'] = 0x3327;\n  t['topatakthai'] = 0x0E0F;\n  t['tortoiseshellbracketleft'] = 0x3014;\n  t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n  t['tortoiseshellbracketleftvertical'] = 0xFE39;\n  t['tortoiseshellbracketright'] = 0x3015;\n  t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n  t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n  t['totaothai'] = 0x0E15;\n  t['tpalatalhook'] = 0x01AB;\n  t['tparen'] = 0x24AF;\n  t['trademark'] = 0x2122;\n  t['trademarksans'] = 0xF8EA;\n  t['trademarkserif'] = 0xF6DB;\n  t['tretroflexhook'] = 0x0288;\n  t['triagdn'] = 0x25BC;\n  t['triaglf'] = 0x25C4;\n  t['triagrt'] = 0x25BA;\n  t['triagup'] = 0x25B2;\n  t['ts'] = 0x02A6;\n  t['tsadi'] = 0x05E6;\n  t['tsadidagesh'] = 0xFB46;\n  t['tsadidageshhebrew'] = 0xFB46;\n  t['tsadihebrew'] = 0x05E6;\n  t['tsecyrillic'] = 0x0446;\n  t['tsere'] = 0x05B5;\n  t['tsere12'] = 0x05B5;\n  t['tsere1e'] = 0x05B5;\n  t['tsere2b'] = 0x05B5;\n  t['tserehebrew'] = 0x05B5;\n  t['tserenarrowhebrew'] = 0x05B5;\n  t['tserequarterhebrew'] = 0x05B5;\n  t['tserewidehebrew'] = 0x05B5;\n  t['tshecyrillic'] = 0x045B;\n  t['tsuperior'] = 0xF6F3;\n  t['ttabengali'] = 0x099F;\n  t['ttadeva'] = 0x091F;\n  t['ttagujarati'] = 0x0A9F;\n  t['ttagurmukhi'] = 0x0A1F;\n  t['tteharabic'] = 0x0679;\n  t['ttehfinalarabic'] = 0xFB67;\n  t['ttehinitialarabic'] = 0xFB68;\n  t['ttehmedialarabic'] = 0xFB69;\n  t['tthabengali'] = 0x09A0;\n  t['tthadeva'] = 0x0920;\n  t['tthagujarati'] = 0x0AA0;\n  t['tthagurmukhi'] = 0x0A20;\n  t['tturned'] = 0x0287;\n  t['tuhiragana'] = 0x3064;\n  t['tukatakana'] = 0x30C4;\n  t['tukatakanahalfwidth'] = 0xFF82;\n  t['tusmallhiragana'] = 0x3063;\n  t['tusmallkatakana'] = 0x30C3;\n  t['tusmallkatakanahalfwidth'] = 0xFF6F;\n  t['twelvecircle'] = 0x246B;\n  t['twelveparen'] = 0x247F;\n  t['twelveperiod'] = 0x2493;\n  t['twelveroman'] = 0x217B;\n  t['twentycircle'] = 0x2473;\n  t['twentyhangzhou'] = 0x5344;\n  t['twentyparen'] = 0x2487;\n  t['twentyperiod'] = 0x249B;\n  t['two'] = 0x0032;\n  t['twoarabic'] = 0x0662;\n  t['twobengali'] = 0x09E8;\n  t['twocircle'] = 0x2461;\n  t['twocircleinversesansserif'] = 0x278B;\n  t['twodeva'] = 0x0968;\n  t['twodotenleader'] = 0x2025;\n  t['twodotleader'] = 0x2025;\n  t['twodotleadervertical'] = 0xFE30;\n  t['twogujarati'] = 0x0AE8;\n  t['twogurmukhi'] = 0x0A68;\n  t['twohackarabic'] = 0x0662;\n  t['twohangzhou'] = 0x3022;\n  t['twoideographicparen'] = 0x3221;\n  t['twoinferior'] = 0x2082;\n  t['twomonospace'] = 0xFF12;\n  t['twonumeratorbengali'] = 0x09F5;\n  t['twooldstyle'] = 0xF732;\n  t['twoparen'] = 0x2475;\n  t['twoperiod'] = 0x2489;\n  t['twopersian'] = 0x06F2;\n  t['tworoman'] = 0x2171;\n  t['twostroke'] = 0x01BB;\n  t['twosuperior'] = 0x00B2;\n  t['twothai'] = 0x0E52;\n  t['twothirds'] = 0x2154;\n  t['u'] = 0x0075;\n  t['uacute'] = 0x00FA;\n  t['ubar'] = 0x0289;\n  t['ubengali'] = 0x0989;\n  t['ubopomofo'] = 0x3128;\n  t['ubreve'] = 0x016D;\n  t['ucaron'] = 0x01D4;\n  t['ucircle'] = 0x24E4;\n  t['ucircumflex'] = 0x00FB;\n  t['ucircumflexbelow'] = 0x1E77;\n  t['ucyrillic'] = 0x0443;\n  t['udattadeva'] = 0x0951;\n  t['udblacute'] = 0x0171;\n  t['udblgrave'] = 0x0215;\n  t['udeva'] = 0x0909;\n  t['udieresis'] = 0x00FC;\n  t['udieresisacute'] = 0x01D8;\n  t['udieresisbelow'] = 0x1E73;\n  t['udieresiscaron'] = 0x01DA;\n  t['udieresiscyrillic'] = 0x04F1;\n  t['udieresisgrave'] = 0x01DC;\n  t['udieresismacron'] = 0x01D6;\n  t['udotbelow'] = 0x1EE5;\n  t['ugrave'] = 0x00F9;\n  t['ugujarati'] = 0x0A89;\n  t['ugurmukhi'] = 0x0A09;\n  t['uhiragana'] = 0x3046;\n  t['uhookabove'] = 0x1EE7;\n  t['uhorn'] = 0x01B0;\n  t['uhornacute'] = 0x1EE9;\n  t['uhorndotbelow'] = 0x1EF1;\n  t['uhorngrave'] = 0x1EEB;\n  t['uhornhookabove'] = 0x1EED;\n  t['uhorntilde'] = 0x1EEF;\n  t['uhungarumlaut'] = 0x0171;\n  t['uhungarumlautcyrillic'] = 0x04F3;\n  t['uinvertedbreve'] = 0x0217;\n  t['ukatakana'] = 0x30A6;\n  t['ukatakanahalfwidth'] = 0xFF73;\n  t['ukcyrillic'] = 0x0479;\n  t['ukorean'] = 0x315C;\n  t['umacron'] = 0x016B;\n  t['umacroncyrillic'] = 0x04EF;\n  t['umacrondieresis'] = 0x1E7B;\n  t['umatragurmukhi'] = 0x0A41;\n  t['umonospace'] = 0xFF55;\n  t['underscore'] = 0x005F;\n  t['underscoredbl'] = 0x2017;\n  t['underscoremonospace'] = 0xFF3F;\n  t['underscorevertical'] = 0xFE33;\n  t['underscorewavy'] = 0xFE4F;\n  t['union'] = 0x222A;\n  t['universal'] = 0x2200;\n  t['uogonek'] = 0x0173;\n  t['uparen'] = 0x24B0;\n  t['upblock'] = 0x2580;\n  t['upperdothebrew'] = 0x05C4;\n  t['upsilon'] = 0x03C5;\n  t['upsilondieresis'] = 0x03CB;\n  t['upsilondieresistonos'] = 0x03B0;\n  t['upsilonlatin'] = 0x028A;\n  t['upsilontonos'] = 0x03CD;\n  t['uptackbelowcmb'] = 0x031D;\n  t['uptackmod'] = 0x02D4;\n  t['uragurmukhi'] = 0x0A73;\n  t['uring'] = 0x016F;\n  t['ushortcyrillic'] = 0x045E;\n  t['usmallhiragana'] = 0x3045;\n  t['usmallkatakana'] = 0x30A5;\n  t['usmallkatakanahalfwidth'] = 0xFF69;\n  t['ustraightcyrillic'] = 0x04AF;\n  t['ustraightstrokecyrillic'] = 0x04B1;\n  t['utilde'] = 0x0169;\n  t['utildeacute'] = 0x1E79;\n  t['utildebelow'] = 0x1E75;\n  t['uubengali'] = 0x098A;\n  t['uudeva'] = 0x090A;\n  t['uugujarati'] = 0x0A8A;\n  t['uugurmukhi'] = 0x0A0A;\n  t['uumatragurmukhi'] = 0x0A42;\n  t['uuvowelsignbengali'] = 0x09C2;\n  t['uuvowelsigndeva'] = 0x0942;\n  t['uuvowelsigngujarati'] = 0x0AC2;\n  t['uvowelsignbengali'] = 0x09C1;\n  t['uvowelsigndeva'] = 0x0941;\n  t['uvowelsigngujarati'] = 0x0AC1;\n  t['v'] = 0x0076;\n  t['vadeva'] = 0x0935;\n  t['vagujarati'] = 0x0AB5;\n  t['vagurmukhi'] = 0x0A35;\n  t['vakatakana'] = 0x30F7;\n  t['vav'] = 0x05D5;\n  t['vavdagesh'] = 0xFB35;\n  t['vavdagesh65'] = 0xFB35;\n  t['vavdageshhebrew'] = 0xFB35;\n  t['vavhebrew'] = 0x05D5;\n  t['vavholam'] = 0xFB4B;\n  t['vavholamhebrew'] = 0xFB4B;\n  t['vavvavhebrew'] = 0x05F0;\n  t['vavyodhebrew'] = 0x05F1;\n  t['vcircle'] = 0x24E5;\n  t['vdotbelow'] = 0x1E7F;\n  t['vecyrillic'] = 0x0432;\n  t['veharabic'] = 0x06A4;\n  t['vehfinalarabic'] = 0xFB6B;\n  t['vehinitialarabic'] = 0xFB6C;\n  t['vehmedialarabic'] = 0xFB6D;\n  t['vekatakana'] = 0x30F9;\n  t['venus'] = 0x2640;\n  t['verticalbar'] = 0x007C;\n  t['verticallineabovecmb'] = 0x030D;\n  t['verticallinebelowcmb'] = 0x0329;\n  t['verticallinelowmod'] = 0x02CC;\n  t['verticallinemod'] = 0x02C8;\n  t['vewarmenian'] = 0x057E;\n  t['vhook'] = 0x028B;\n  t['vikatakana'] = 0x30F8;\n  t['viramabengali'] = 0x09CD;\n  t['viramadeva'] = 0x094D;\n  t['viramagujarati'] = 0x0ACD;\n  t['visargabengali'] = 0x0983;\n  t['visargadeva'] = 0x0903;\n  t['visargagujarati'] = 0x0A83;\n  t['vmonospace'] = 0xFF56;\n  t['voarmenian'] = 0x0578;\n  t['voicediterationhiragana'] = 0x309E;\n  t['voicediterationkatakana'] = 0x30FE;\n  t['voicedmarkkana'] = 0x309B;\n  t['voicedmarkkanahalfwidth'] = 0xFF9E;\n  t['vokatakana'] = 0x30FA;\n  t['vparen'] = 0x24B1;\n  t['vtilde'] = 0x1E7D;\n  t['vturned'] = 0x028C;\n  t['vuhiragana'] = 0x3094;\n  t['vukatakana'] = 0x30F4;\n  t['w'] = 0x0077;\n  t['wacute'] = 0x1E83;\n  t['waekorean'] = 0x3159;\n  t['wahiragana'] = 0x308F;\n  t['wakatakana'] = 0x30EF;\n  t['wakatakanahalfwidth'] = 0xFF9C;\n  t['wakorean'] = 0x3158;\n  t['wasmallhiragana'] = 0x308E;\n  t['wasmallkatakana'] = 0x30EE;\n  t['wattosquare'] = 0x3357;\n  t['wavedash'] = 0x301C;\n  t['wavyunderscorevertical'] = 0xFE34;\n  t['wawarabic'] = 0x0648;\n  t['wawfinalarabic'] = 0xFEEE;\n  t['wawhamzaabovearabic'] = 0x0624;\n  t['wawhamzaabovefinalarabic'] = 0xFE86;\n  t['wbsquare'] = 0x33DD;\n  t['wcircle'] = 0x24E6;\n  t['wcircumflex'] = 0x0175;\n  t['wdieresis'] = 0x1E85;\n  t['wdotaccent'] = 0x1E87;\n  t['wdotbelow'] = 0x1E89;\n  t['wehiragana'] = 0x3091;\n  t['weierstrass'] = 0x2118;\n  t['wekatakana'] = 0x30F1;\n  t['wekorean'] = 0x315E;\n  t['weokorean'] = 0x315D;\n  t['wgrave'] = 0x1E81;\n  t['whitebullet'] = 0x25E6;\n  t['whitecircle'] = 0x25CB;\n  t['whitecircleinverse'] = 0x25D9;\n  t['whitecornerbracketleft'] = 0x300E;\n  t['whitecornerbracketleftvertical'] = 0xFE43;\n  t['whitecornerbracketright'] = 0x300F;\n  t['whitecornerbracketrightvertical'] = 0xFE44;\n  t['whitediamond'] = 0x25C7;\n  t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n  t['whitedownpointingsmalltriangle'] = 0x25BF;\n  t['whitedownpointingtriangle'] = 0x25BD;\n  t['whiteleftpointingsmalltriangle'] = 0x25C3;\n  t['whiteleftpointingtriangle'] = 0x25C1;\n  t['whitelenticularbracketleft'] = 0x3016;\n  t['whitelenticularbracketright'] = 0x3017;\n  t['whiterightpointingsmalltriangle'] = 0x25B9;\n  t['whiterightpointingtriangle'] = 0x25B7;\n  t['whitesmallsquare'] = 0x25AB;\n  t['whitesmilingface'] = 0x263A;\n  t['whitesquare'] = 0x25A1;\n  t['whitestar'] = 0x2606;\n  t['whitetelephone'] = 0x260F;\n  t['whitetortoiseshellbracketleft'] = 0x3018;\n  t['whitetortoiseshellbracketright'] = 0x3019;\n  t['whiteuppointingsmalltriangle'] = 0x25B5;\n  t['whiteuppointingtriangle'] = 0x25B3;\n  t['wihiragana'] = 0x3090;\n  t['wikatakana'] = 0x30F0;\n  t['wikorean'] = 0x315F;\n  t['wmonospace'] = 0xFF57;\n  t['wohiragana'] = 0x3092;\n  t['wokatakana'] = 0x30F2;\n  t['wokatakanahalfwidth'] = 0xFF66;\n  t['won'] = 0x20A9;\n  t['wonmonospace'] = 0xFFE6;\n  t['wowaenthai'] = 0x0E27;\n  t['wparen'] = 0x24B2;\n  t['wring'] = 0x1E98;\n  t['wsuperior'] = 0x02B7;\n  t['wturned'] = 0x028D;\n  t['wynn'] = 0x01BF;\n  t['x'] = 0x0078;\n  t['xabovecmb'] = 0x033D;\n  t['xbopomofo'] = 0x3112;\n  t['xcircle'] = 0x24E7;\n  t['xdieresis'] = 0x1E8D;\n  t['xdotaccent'] = 0x1E8B;\n  t['xeharmenian'] = 0x056D;\n  t['xi'] = 0x03BE;\n  t['xmonospace'] = 0xFF58;\n  t['xparen'] = 0x24B3;\n  t['xsuperior'] = 0x02E3;\n  t['y'] = 0x0079;\n  t['yaadosquare'] = 0x334E;\n  t['yabengali'] = 0x09AF;\n  t['yacute'] = 0x00FD;\n  t['yadeva'] = 0x092F;\n  t['yaekorean'] = 0x3152;\n  t['yagujarati'] = 0x0AAF;\n  t['yagurmukhi'] = 0x0A2F;\n  t['yahiragana'] = 0x3084;\n  t['yakatakana'] = 0x30E4;\n  t['yakatakanahalfwidth'] = 0xFF94;\n  t['yakorean'] = 0x3151;\n  t['yamakkanthai'] = 0x0E4E;\n  t['yasmallhiragana'] = 0x3083;\n  t['yasmallkatakana'] = 0x30E3;\n  t['yasmallkatakanahalfwidth'] = 0xFF6C;\n  t['yatcyrillic'] = 0x0463;\n  t['ycircle'] = 0x24E8;\n  t['ycircumflex'] = 0x0177;\n  t['ydieresis'] = 0x00FF;\n  t['ydotaccent'] = 0x1E8F;\n  t['ydotbelow'] = 0x1EF5;\n  t['yeharabic'] = 0x064A;\n  t['yehbarreearabic'] = 0x06D2;\n  t['yehbarreefinalarabic'] = 0xFBAF;\n  t['yehfinalarabic'] = 0xFEF2;\n  t['yehhamzaabovearabic'] = 0x0626;\n  t['yehhamzaabovefinalarabic'] = 0xFE8A;\n  t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n  t['yehhamzaabovemedialarabic'] = 0xFE8C;\n  t['yehinitialarabic'] = 0xFEF3;\n  t['yehmedialarabic'] = 0xFEF4;\n  t['yehmeeminitialarabic'] = 0xFCDD;\n  t['yehmeemisolatedarabic'] = 0xFC58;\n  t['yehnoonfinalarabic'] = 0xFC94;\n  t['yehthreedotsbelowarabic'] = 0x06D1;\n  t['yekorean'] = 0x3156;\n  t['yen'] = 0x00A5;\n  t['yenmonospace'] = 0xFFE5;\n  t['yeokorean'] = 0x3155;\n  t['yeorinhieuhkorean'] = 0x3186;\n  t['yerahbenyomohebrew'] = 0x05AA;\n  t['yerahbenyomolefthebrew'] = 0x05AA;\n  t['yericyrillic'] = 0x044B;\n  t['yerudieresiscyrillic'] = 0x04F9;\n  t['yesieungkorean'] = 0x3181;\n  t['yesieungpansioskorean'] = 0x3183;\n  t['yesieungsioskorean'] = 0x3182;\n  t['yetivhebrew'] = 0x059A;\n  t['ygrave'] = 0x1EF3;\n  t['yhook'] = 0x01B4;\n  t['yhookabove'] = 0x1EF7;\n  t['yiarmenian'] = 0x0575;\n  t['yicyrillic'] = 0x0457;\n  t['yikorean'] = 0x3162;\n  t['yinyang'] = 0x262F;\n  t['yiwnarmenian'] = 0x0582;\n  t['ymonospace'] = 0xFF59;\n  t['yod'] = 0x05D9;\n  t['yoddagesh'] = 0xFB39;\n  t['yoddageshhebrew'] = 0xFB39;\n  t['yodhebrew'] = 0x05D9;\n  t['yodyodhebrew'] = 0x05F2;\n  t['yodyodpatahhebrew'] = 0xFB1F;\n  t['yohiragana'] = 0x3088;\n  t['yoikorean'] = 0x3189;\n  t['yokatakana'] = 0x30E8;\n  t['yokatakanahalfwidth'] = 0xFF96;\n  t['yokorean'] = 0x315B;\n  t['yosmallhiragana'] = 0x3087;\n  t['yosmallkatakana'] = 0x30E7;\n  t['yosmallkatakanahalfwidth'] = 0xFF6E;\n  t['yotgreek'] = 0x03F3;\n  t['yoyaekorean'] = 0x3188;\n  t['yoyakorean'] = 0x3187;\n  t['yoyakthai'] = 0x0E22;\n  t['yoyingthai'] = 0x0E0D;\n  t['yparen'] = 0x24B4;\n  t['ypogegrammeni'] = 0x037A;\n  t['ypogegrammenigreekcmb'] = 0x0345;\n  t['yr'] = 0x01A6;\n  t['yring'] = 0x1E99;\n  t['ysuperior'] = 0x02B8;\n  t['ytilde'] = 0x1EF9;\n  t['yturned'] = 0x028E;\n  t['yuhiragana'] = 0x3086;\n  t['yuikorean'] = 0x318C;\n  t['yukatakana'] = 0x30E6;\n  t['yukatakanahalfwidth'] = 0xFF95;\n  t['yukorean'] = 0x3160;\n  t['yusbigcyrillic'] = 0x046B;\n  t['yusbigiotifiedcyrillic'] = 0x046D;\n  t['yuslittlecyrillic'] = 0x0467;\n  t['yuslittleiotifiedcyrillic'] = 0x0469;\n  t['yusmallhiragana'] = 0x3085;\n  t['yusmallkatakana'] = 0x30E5;\n  t['yusmallkatakanahalfwidth'] = 0xFF6D;\n  t['yuyekorean'] = 0x318B;\n  t['yuyeokorean'] = 0x318A;\n  t['yyabengali'] = 0x09DF;\n  t['yyadeva'] = 0x095F;\n  t['z'] = 0x007A;\n  t['zaarmenian'] = 0x0566;\n  t['zacute'] = 0x017A;\n  t['zadeva'] = 0x095B;\n  t['zagurmukhi'] = 0x0A5B;\n  t['zaharabic'] = 0x0638;\n  t['zahfinalarabic'] = 0xFEC6;\n  t['zahinitialarabic'] = 0xFEC7;\n  t['zahiragana'] = 0x3056;\n  t['zahmedialarabic'] = 0xFEC8;\n  t['zainarabic'] = 0x0632;\n  t['zainfinalarabic'] = 0xFEB0;\n  t['zakatakana'] = 0x30B6;\n  t['zaqefgadolhebrew'] = 0x0595;\n  t['zaqefqatanhebrew'] = 0x0594;\n  t['zarqahebrew'] = 0x0598;\n  t['zayin'] = 0x05D6;\n  t['zayindagesh'] = 0xFB36;\n  t['zayindageshhebrew'] = 0xFB36;\n  t['zayinhebrew'] = 0x05D6;\n  t['zbopomofo'] = 0x3117;\n  t['zcaron'] = 0x017E;\n  t['zcircle'] = 0x24E9;\n  t['zcircumflex'] = 0x1E91;\n  t['zcurl'] = 0x0291;\n  t['zdot'] = 0x017C;\n  t['zdotaccent'] = 0x017C;\n  t['zdotbelow'] = 0x1E93;\n  t['zecyrillic'] = 0x0437;\n  t['zedescendercyrillic'] = 0x0499;\n  t['zedieresiscyrillic'] = 0x04DF;\n  t['zehiragana'] = 0x305C;\n  t['zekatakana'] = 0x30BC;\n  t['zero'] = 0x0030;\n  t['zeroarabic'] = 0x0660;\n  t['zerobengali'] = 0x09E6;\n  t['zerodeva'] = 0x0966;\n  t['zerogujarati'] = 0x0AE6;\n  t['zerogurmukhi'] = 0x0A66;\n  t['zerohackarabic'] = 0x0660;\n  t['zeroinferior'] = 0x2080;\n  t['zeromonospace'] = 0xFF10;\n  t['zerooldstyle'] = 0xF730;\n  t['zeropersian'] = 0x06F0;\n  t['zerosuperior'] = 0x2070;\n  t['zerothai'] = 0x0E50;\n  t['zerowidthjoiner'] = 0xFEFF;\n  t['zerowidthnonjoiner'] = 0x200C;\n  t['zerowidthspace'] = 0x200B;\n  t['zeta'] = 0x03B6;\n  t['zhbopomofo'] = 0x3113;\n  t['zhearmenian'] = 0x056A;\n  t['zhebrevecyrillic'] = 0x04C2;\n  t['zhecyrillic'] = 0x0436;\n  t['zhedescendercyrillic'] = 0x0497;\n  t['zhedieresiscyrillic'] = 0x04DD;\n  t['zihiragana'] = 0x3058;\n  t['zikatakana'] = 0x30B8;\n  t['zinorhebrew'] = 0x05AE;\n  t['zlinebelow'] = 0x1E95;\n  t['zmonospace'] = 0xFF5A;\n  t['zohiragana'] = 0x305E;\n  t['zokatakana'] = 0x30BE;\n  t['zparen'] = 0x24B5;\n  t['zretroflexhook'] = 0x0290;\n  t['zstroke'] = 0x01B6;\n  t['zuhiragana'] = 0x305A;\n  t['zukatakana'] = 0x30BA;\n  t['.notdef'] = 0x0000;\n  t['angbracketleftbig'] = 0x2329;\n  t['angbracketleftBig'] = 0x2329;\n  t['angbracketleftbigg'] = 0x2329;\n  t['angbracketleftBigg'] = 0x2329;\n  t['angbracketrightBig'] = 0x232A;\n  t['angbracketrightbig'] = 0x232A;\n  t['angbracketrightBigg'] = 0x232A;\n  t['angbracketrightbigg'] = 0x232A;\n  t['arrowhookleft'] = 0x21AA;\n  t['arrowhookright'] = 0x21A9;\n  t['arrowlefttophalf'] = 0x21BC;\n  t['arrowleftbothalf'] = 0x21BD;\n  t['arrownortheast'] = 0x2197;\n  t['arrownorthwest'] = 0x2196;\n  t['arrowrighttophalf'] = 0x21C0;\n  t['arrowrightbothalf'] = 0x21C1;\n  t['arrowsoutheast'] = 0x2198;\n  t['arrowsouthwest'] = 0x2199;\n  t['backslashbig'] = 0x2216;\n  t['backslashBig'] = 0x2216;\n  t['backslashBigg'] = 0x2216;\n  t['backslashbigg'] = 0x2216;\n  t['bardbl'] = 0x2016;\n  t['bracehtipdownleft'] = 0xFE37;\n  t['bracehtipdownright'] = 0xFE37;\n  t['bracehtipupleft'] = 0xFE38;\n  t['bracehtipupright'] = 0xFE38;\n  t['braceleftBig'] = 0x007B;\n  t['braceleftbig'] = 0x007B;\n  t['braceleftbigg'] = 0x007B;\n  t['braceleftBigg'] = 0x007B;\n  t['bracerightBig'] = 0x007D;\n  t['bracerightbig'] = 0x007D;\n  t['bracerightbigg'] = 0x007D;\n  t['bracerightBigg'] = 0x007D;\n  t['bracketleftbig'] = 0x005B;\n  t['bracketleftBig'] = 0x005B;\n  t['bracketleftbigg'] = 0x005B;\n  t['bracketleftBigg'] = 0x005B;\n  t['bracketrightBig'] = 0x005D;\n  t['bracketrightbig'] = 0x005D;\n  t['bracketrightbigg'] = 0x005D;\n  t['bracketrightBigg'] = 0x005D;\n  t['ceilingleftbig'] = 0x2308;\n  t['ceilingleftBig'] = 0x2308;\n  t['ceilingleftBigg'] = 0x2308;\n  t['ceilingleftbigg'] = 0x2308;\n  t['ceilingrightbig'] = 0x2309;\n  t['ceilingrightBig'] = 0x2309;\n  t['ceilingrightbigg'] = 0x2309;\n  t['ceilingrightBigg'] = 0x2309;\n  t['circledotdisplay'] = 0x2299;\n  t['circledottext'] = 0x2299;\n  t['circlemultiplydisplay'] = 0x2297;\n  t['circlemultiplytext'] = 0x2297;\n  t['circleplusdisplay'] = 0x2295;\n  t['circleplustext'] = 0x2295;\n  t['contintegraldisplay'] = 0x222E;\n  t['contintegraltext'] = 0x222E;\n  t['coproductdisplay'] = 0x2210;\n  t['coproducttext'] = 0x2210;\n  t['floorleftBig'] = 0x230A;\n  t['floorleftbig'] = 0x230A;\n  t['floorleftbigg'] = 0x230A;\n  t['floorleftBigg'] = 0x230A;\n  t['floorrightbig'] = 0x230B;\n  t['floorrightBig'] = 0x230B;\n  t['floorrightBigg'] = 0x230B;\n  t['floorrightbigg'] = 0x230B;\n  t['hatwide'] = 0x0302;\n  t['hatwider'] = 0x0302;\n  t['hatwidest'] = 0x0302;\n  t['intercal'] = 0x1D40;\n  t['integraldisplay'] = 0x222B;\n  t['integraltext'] = 0x222B;\n  t['intersectiondisplay'] = 0x22C2;\n  t['intersectiontext'] = 0x22C2;\n  t['logicalanddisplay'] = 0x2227;\n  t['logicalandtext'] = 0x2227;\n  t['logicalordisplay'] = 0x2228;\n  t['logicalortext'] = 0x2228;\n  t['parenleftBig'] = 0x0028;\n  t['parenleftbig'] = 0x0028;\n  t['parenleftBigg'] = 0x0028;\n  t['parenleftbigg'] = 0x0028;\n  t['parenrightBig'] = 0x0029;\n  t['parenrightbig'] = 0x0029;\n  t['parenrightBigg'] = 0x0029;\n  t['parenrightbigg'] = 0x0029;\n  t['prime'] = 0x2032;\n  t['productdisplay'] = 0x220F;\n  t['producttext'] = 0x220F;\n  t['radicalbig'] = 0x221A;\n  t['radicalBig'] = 0x221A;\n  t['radicalBigg'] = 0x221A;\n  t['radicalbigg'] = 0x221A;\n  t['radicalbt'] = 0x221A;\n  t['radicaltp'] = 0x221A;\n  t['radicalvertex'] = 0x221A;\n  t['slashbig'] = 0x002F;\n  t['slashBig'] = 0x002F;\n  t['slashBigg'] = 0x002F;\n  t['slashbigg'] = 0x002F;\n  t['summationdisplay'] = 0x2211;\n  t['summationtext'] = 0x2211;\n  t['tildewide'] = 0x02DC;\n  t['tildewider'] = 0x02DC;\n  t['tildewidest'] = 0x02DC;\n  t['uniondisplay'] = 0x22C3;\n  t['unionmultidisplay'] = 0x228E;\n  t['unionmultitext'] = 0x228E;\n  t['unionsqdisplay'] = 0x2294;\n  t['unionsqtext'] = 0x2294;\n  t['uniontext'] = 0x22C3;\n  t['vextenddouble'] = 0x2225;\n  t['vextendsingle'] = 0x2223;\n});\nvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['space'] = 0x0020;\n  t['a1'] = 0x2701;\n  t['a2'] = 0x2702;\n  t['a202'] = 0x2703;\n  t['a3'] = 0x2704;\n  t['a4'] = 0x260E;\n  t['a5'] = 0x2706;\n  t['a119'] = 0x2707;\n  t['a118'] = 0x2708;\n  t['a117'] = 0x2709;\n  t['a11'] = 0x261B;\n  t['a12'] = 0x261E;\n  t['a13'] = 0x270C;\n  t['a14'] = 0x270D;\n  t['a15'] = 0x270E;\n  t['a16'] = 0x270F;\n  t['a105'] = 0x2710;\n  t['a17'] = 0x2711;\n  t['a18'] = 0x2712;\n  t['a19'] = 0x2713;\n  t['a20'] = 0x2714;\n  t['a21'] = 0x2715;\n  t['a22'] = 0x2716;\n  t['a23'] = 0x2717;\n  t['a24'] = 0x2718;\n  t['a25'] = 0x2719;\n  t['a26'] = 0x271A;\n  t['a27'] = 0x271B;\n  t['a28'] = 0x271C;\n  t['a6'] = 0x271D;\n  t['a7'] = 0x271E;\n  t['a8'] = 0x271F;\n  t['a9'] = 0x2720;\n  t['a10'] = 0x2721;\n  t['a29'] = 0x2722;\n  t['a30'] = 0x2723;\n  t['a31'] = 0x2724;\n  t['a32'] = 0x2725;\n  t['a33'] = 0x2726;\n  t['a34'] = 0x2727;\n  t['a35'] = 0x2605;\n  t['a36'] = 0x2729;\n  t['a37'] = 0x272A;\n  t['a38'] = 0x272B;\n  t['a39'] = 0x272C;\n  t['a40'] = 0x272D;\n  t['a41'] = 0x272E;\n  t['a42'] = 0x272F;\n  t['a43'] = 0x2730;\n  t['a44'] = 0x2731;\n  t['a45'] = 0x2732;\n  t['a46'] = 0x2733;\n  t['a47'] = 0x2734;\n  t['a48'] = 0x2735;\n  t['a49'] = 0x2736;\n  t['a50'] = 0x2737;\n  t['a51'] = 0x2738;\n  t['a52'] = 0x2739;\n  t['a53'] = 0x273A;\n  t['a54'] = 0x273B;\n  t['a55'] = 0x273C;\n  t['a56'] = 0x273D;\n  t['a57'] = 0x273E;\n  t['a58'] = 0x273F;\n  t['a59'] = 0x2740;\n  t['a60'] = 0x2741;\n  t['a61'] = 0x2742;\n  t['a62'] = 0x2743;\n  t['a63'] = 0x2744;\n  t['a64'] = 0x2745;\n  t['a65'] = 0x2746;\n  t['a66'] = 0x2747;\n  t['a67'] = 0x2748;\n  t['a68'] = 0x2749;\n  t['a69'] = 0x274A;\n  t['a70'] = 0x274B;\n  t['a71'] = 0x25CF;\n  t['a72'] = 0x274D;\n  t['a73'] = 0x25A0;\n  t['a74'] = 0x274F;\n  t['a203'] = 0x2750;\n  t['a75'] = 0x2751;\n  t['a204'] = 0x2752;\n  t['a76'] = 0x25B2;\n  t['a77'] = 0x25BC;\n  t['a78'] = 0x25C6;\n  t['a79'] = 0x2756;\n  t['a81'] = 0x25D7;\n  t['a82'] = 0x2758;\n  t['a83'] = 0x2759;\n  t['a84'] = 0x275A;\n  t['a97'] = 0x275B;\n  t['a98'] = 0x275C;\n  t['a99'] = 0x275D;\n  t['a100'] = 0x275E;\n  t['a101'] = 0x2761;\n  t['a102'] = 0x2762;\n  t['a103'] = 0x2763;\n  t['a104'] = 0x2764;\n  t['a106'] = 0x2765;\n  t['a107'] = 0x2766;\n  t['a108'] = 0x2767;\n  t['a112'] = 0x2663;\n  t['a111'] = 0x2666;\n  t['a110'] = 0x2665;\n  t['a109'] = 0x2660;\n  t['a120'] = 0x2460;\n  t['a121'] = 0x2461;\n  t['a122'] = 0x2462;\n  t['a123'] = 0x2463;\n  t['a124'] = 0x2464;\n  t['a125'] = 0x2465;\n  t['a126'] = 0x2466;\n  t['a127'] = 0x2467;\n  t['a128'] = 0x2468;\n  t['a129'] = 0x2469;\n  t['a130'] = 0x2776;\n  t['a131'] = 0x2777;\n  t['a132'] = 0x2778;\n  t['a133'] = 0x2779;\n  t['a134'] = 0x277A;\n  t['a135'] = 0x277B;\n  t['a136'] = 0x277C;\n  t['a137'] = 0x277D;\n  t['a138'] = 0x277E;\n  t['a139'] = 0x277F;\n  t['a140'] = 0x2780;\n  t['a141'] = 0x2781;\n  t['a142'] = 0x2782;\n  t['a143'] = 0x2783;\n  t['a144'] = 0x2784;\n  t['a145'] = 0x2785;\n  t['a146'] = 0x2786;\n  t['a147'] = 0x2787;\n  t['a148'] = 0x2788;\n  t['a149'] = 0x2789;\n  t['a150'] = 0x278A;\n  t['a151'] = 0x278B;\n  t['a152'] = 0x278C;\n  t['a153'] = 0x278D;\n  t['a154'] = 0x278E;\n  t['a155'] = 0x278F;\n  t['a156'] = 0x2790;\n  t['a157'] = 0x2791;\n  t['a158'] = 0x2792;\n  t['a159'] = 0x2793;\n  t['a160'] = 0x2794;\n  t['a161'] = 0x2192;\n  t['a163'] = 0x2194;\n  t['a164'] = 0x2195;\n  t['a196'] = 0x2798;\n  t['a165'] = 0x2799;\n  t['a192'] = 0x279A;\n  t['a166'] = 0x279B;\n  t['a167'] = 0x279C;\n  t['a168'] = 0x279D;\n  t['a169'] = 0x279E;\n  t['a170'] = 0x279F;\n  t['a171'] = 0x27A0;\n  t['a172'] = 0x27A1;\n  t['a173'] = 0x27A2;\n  t['a162'] = 0x27A3;\n  t['a174'] = 0x27A4;\n  t['a175'] = 0x27A5;\n  t['a176'] = 0x27A6;\n  t['a177'] = 0x27A7;\n  t['a178'] = 0x27A8;\n  t['a179'] = 0x27A9;\n  t['a193'] = 0x27AA;\n  t['a180'] = 0x27AB;\n  t['a199'] = 0x27AC;\n  t['a181'] = 0x27AD;\n  t['a200'] = 0x27AE;\n  t['a182'] = 0x27AF;\n  t['a201'] = 0x27B1;\n  t['a183'] = 0x27B2;\n  t['a184'] = 0x27B3;\n  t['a197'] = 0x27B4;\n  t['a185'] = 0x27B5;\n  t['a194'] = 0x27B6;\n  t['a198'] = 0x27B7;\n  t['a186'] = 0x27B8;\n  t['a195'] = 0x27B9;\n  t['a187'] = 0x27BA;\n  t['a188'] = 0x27BB;\n  t['a189'] = 0x27BC;\n  t['a190'] = 0x27BD;\n  t['a191'] = 0x27BE;\n  t['a89'] = 0x2768;\n  t['a90'] = 0x2769;\n  t['a93'] = 0x276A;\n  t['a94'] = 0x276B;\n  t['a91'] = 0x276C;\n  t['a92'] = 0x276D;\n  t['a205'] = 0x276E;\n  t['a85'] = 0x276F;\n  t['a206'] = 0x2770;\n  t['a86'] = 0x2771;\n  t['a87'] = 0x2772;\n  t['a88'] = 0x2773;\n  t['a95'] = 0x2774;\n  t['a96'] = 0x2775;\n  t['.notdef'] = 0x0000;\n});\nexports.getGlyphsUnicode = getGlyphsUnicode;\nexports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/glyphlist.js\n// module id = qITr\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FileSpec = exports.XRef = exports.ObjectLoader = exports.Catalog = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _parser = require('./parser');\n\nvar _chunked_stream = require('./chunked_stream');\n\nvar _crypto = require('./crypto');\n\nvar _colorspace = require('./colorspace');\n\nvar Catalog = function CatalogClosure() {\n  function Catalog(pdfManager, xref, pageFactory) {\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.catDict = xref.getCatalogObj();\n    if (!(0, _primitives.isDict)(this.catDict)) {\n      throw new _util.FormatError('catalog object is not a dictionary');\n    }\n    this.fontCache = new _primitives.RefSetCache();\n    this.builtInCMapCache = Object.create(null);\n    this.pageKidsCountCache = new _primitives.RefSetCache();\n    this.pageFactory = pageFactory;\n    this.pagePromises = [];\n  }\n  Catalog.prototype = {\n    get metadata() {\n      var streamRef = this.catDict.getRaw('Metadata');\n      if (!(0, _primitives.isRef)(streamRef)) {\n        return (0, _util.shadow)(this, 'metadata', null);\n      }\n      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n      var stream = this.xref.fetch(streamRef, !encryptMetadata);\n      var metadata;\n      if (stream && (0, _primitives.isDict)(stream.dict)) {\n        var type = stream.dict.get('Type');\n        var subtype = stream.dict.get('Subtype');\n        if ((0, _primitives.isName)(type, 'Metadata') && (0, _primitives.isName)(subtype, 'XML')) {\n          try {\n            metadata = (0, _util.stringToUTF8String)((0, _util.bytesToString)(stream.getBytes()));\n          } catch (e) {\n            if (e instanceof _util.MissingDataException) {\n              throw e;\n            }\n            (0, _util.info)('Skipping invalid metadata.');\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'metadata', metadata);\n    },\n    get toplevelPagesDict() {\n      var pagesObj = this.catDict.get('Pages');\n      if (!(0, _primitives.isDict)(pagesObj)) {\n        throw new _util.FormatError('invalid top-level pages dictionary');\n      }\n      return (0, _util.shadow)(this, 'toplevelPagesDict', pagesObj);\n    },\n    get documentOutline() {\n      var obj = null;\n      try {\n        obj = this.readDocumentOutline();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read document outline');\n      }\n      return (0, _util.shadow)(this, 'documentOutline', obj);\n    },\n    readDocumentOutline: function Catalog_readDocumentOutline() {\n      var obj = this.catDict.get('Outlines');\n      if (!(0, _primitives.isDict)(obj)) {\n        return null;\n      }\n      obj = obj.getRaw('First');\n      if (!(0, _primitives.isRef)(obj)) {\n        return null;\n      }\n      var root = { items: [] };\n      var queue = [{\n        obj: obj,\n        parent: root\n      }];\n      var processed = new _primitives.RefSet();\n      processed.put(obj);\n      var xref = this.xref,\n          blackColor = new Uint8Array(3);\n      while (queue.length > 0) {\n        var i = queue.shift();\n        var outlineDict = xref.fetchIfRef(i.obj);\n        if (outlineDict === null) {\n          continue;\n        }\n        if (!outlineDict.has('Title')) {\n          throw new _util.FormatError('Invalid outline item');\n        }\n        var data = {\n          url: null,\n          dest: null\n        };\n        Catalog.parseDestDictionary({\n          destDict: outlineDict,\n          resultObj: data,\n          docBaseUrl: this.pdfManager.docBaseUrl\n        });\n        var title = outlineDict.get('Title');\n        var flags = outlineDict.get('F') || 0;\n        var color = outlineDict.getArray('C'),\n            rgbColor = blackColor;\n        if (Array.isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n          rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(color, 0);\n        }\n        var outlineItem = {\n          dest: data.dest,\n          url: data.url,\n          unsafeUrl: data.unsafeUrl,\n          newWindow: data.newWindow,\n          title: (0, _util.stringToPDFString)(title),\n          color: rgbColor,\n          count: outlineDict.get('Count'),\n          bold: !!(flags & 2),\n          italic: !!(flags & 1),\n          items: []\n        };\n        i.parent.items.push(outlineItem);\n        obj = outlineDict.getRaw('First');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: outlineItem\n          });\n          processed.put(obj);\n        }\n        obj = outlineDict.getRaw('Next');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: i.parent\n          });\n          processed.put(obj);\n        }\n      }\n      return root.items.length > 0 ? root.items : null;\n    },\n    get numPages() {\n      var obj = this.toplevelPagesDict.get('Count');\n      if (!Number.isInteger(obj)) {\n        throw new _util.FormatError('page count in top level pages object is not an integer');\n      }\n      return (0, _util.shadow)(this, 'numPages', obj);\n    },\n    get destinations() {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dests = {},\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        obj = nameDictionaryRef;\n        obj.forEach(function catalogForEach(key, value) {\n          if (!value) {\n            return;\n          }\n          dests[key] = fetchDestination(value);\n        });\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          dests[name] = fetchDestination(names[name]);\n        }\n      }\n      return (0, _util.shadow)(this, 'destinations', dests);\n    },\n    getDestination: function Catalog_getDestination(destinationId) {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dest = null,\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        var value = nameDictionaryRef.get(destinationId);\n        if (value) {\n          dest = fetchDestination(value);\n        }\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        dest = fetchDestination(nameTree.get(destinationId));\n      }\n      return dest;\n    },\n    get pageLabels() {\n      var obj = null;\n      try {\n        obj = this.readPageLabels();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read page labels.');\n      }\n      return (0, _util.shadow)(this, 'pageLabels', obj);\n    },\n    readPageLabels: function Catalog_readPageLabels() {\n      var obj = this.catDict.getRaw('PageLabels');\n      if (!obj) {\n        return null;\n      }\n      var pageLabels = new Array(this.numPages);\n      var style = null;\n      var prefix = '';\n      var numberTree = new NumberTree(obj, this.xref);\n      var nums = numberTree.getAll();\n      var currentLabel = '',\n          currentIndex = 1;\n      for (var i = 0, ii = this.numPages; i < ii; i++) {\n        if (i in nums) {\n          var labelDict = nums[i];\n          if (!(0, _primitives.isDict)(labelDict)) {\n            throw new _util.FormatError('The PageLabel is not a dictionary.');\n          }\n          if (labelDict.has('Type') && !(0, _primitives.isName)(labelDict.get('Type'), 'PageLabel')) {\n            throw new _util.FormatError('Invalid type in PageLabel dictionary.');\n          }\n          if (labelDict.has('S')) {\n            var s = labelDict.get('S');\n            if (!(0, _primitives.isName)(s)) {\n              throw new _util.FormatError('Invalid style in PageLabel dictionary.');\n            }\n            style = s.name;\n          } else {\n            style = null;\n          }\n          if (labelDict.has('P')) {\n            var p = labelDict.get('P');\n            if (!(0, _util.isString)(p)) {\n              throw new _util.FormatError('Invalid prefix in PageLabel dictionary.');\n            }\n            prefix = (0, _util.stringToPDFString)(p);\n          } else {\n            prefix = '';\n          }\n          if (labelDict.has('St')) {\n            var st = labelDict.get('St');\n            if (!(Number.isInteger(st) && st >= 1)) {\n              throw new _util.FormatError('Invalid start in PageLabel dictionary.');\n            }\n            currentIndex = st;\n          } else {\n            currentIndex = 1;\n          }\n        }\n        switch (style) {\n          case 'D':\n            currentLabel = currentIndex;\n            break;\n          case 'R':\n          case 'r':\n            currentLabel = _util.Util.toRoman(currentIndex, style === 'r');\n            break;\n          case 'A':\n          case 'a':\n            var LIMIT = 26;\n            var A_UPPER_CASE = 0x41,\n                A_LOWER_CASE = 0x61;\n            var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n            var letterIndex = currentIndex - 1;\n            var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n            var charBuf = [];\n            for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n              charBuf.push(character);\n            }\n            currentLabel = charBuf.join('');\n            break;\n          default:\n            if (style) {\n              throw new _util.FormatError('Invalid style \"' + style + '\" in PageLabel dictionary.');\n            }\n            currentLabel = '';\n        }\n        pageLabels[i] = prefix + currentLabel;\n        currentIndex++;\n      }\n      return pageLabels;\n    },\n    get pageMode() {\n      var obj = this.catDict.get('PageMode');\n      var pageMode = 'UseNone';\n      if ((0, _primitives.isName)(obj)) {\n        switch (obj.name) {\n          case 'UseNone':\n          case 'UseOutlines':\n          case 'UseThumbs':\n          case 'FullScreen':\n          case 'UseOC':\n          case 'UseAttachments':\n            pageMode = obj.name;\n        }\n      }\n      return (0, _util.shadow)(this, 'pageMode', pageMode);\n    },\n    get attachments() {\n      var xref = this.xref;\n      var attachments = null,\n          nameTreeRef;\n      var obj = this.catDict.get('Names');\n      if (obj) {\n        nameTreeRef = obj.getRaw('EmbeddedFiles');\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var fs = new FileSpec(names[name], xref);\n          if (!attachments) {\n            attachments = Object.create(null);\n          }\n          attachments[(0, _util.stringToPDFString)(name)] = fs.serializable;\n        }\n      }\n      return (0, _util.shadow)(this, 'attachments', attachments);\n    },\n    get javaScript() {\n      var xref = this.xref;\n      var obj = this.catDict.get('Names');\n      var javaScript = null;\n      function appendIfJavaScriptDict(jsDict) {\n        var type = jsDict.get('S');\n        if (!(0, _primitives.isName)(type, 'JavaScript')) {\n          return;\n        }\n        var js = jsDict.get('JS');\n        if ((0, _primitives.isStream)(js)) {\n          js = (0, _util.bytesToString)(js.getBytes());\n        } else if (!(0, _util.isString)(js)) {\n          return;\n        }\n        if (!javaScript) {\n          javaScript = [];\n        }\n        javaScript.push((0, _util.stringToPDFString)(js));\n      }\n      if (obj && obj.has('JavaScript')) {\n        var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var jsDict = names[name];\n          if ((0, _primitives.isDict)(jsDict)) {\n            appendIfJavaScriptDict(jsDict);\n          }\n        }\n      }\n      var openactionDict = this.catDict.get('OpenAction');\n      if ((0, _primitives.isDict)(openactionDict, 'Action')) {\n        var actionType = openactionDict.get('S');\n        if ((0, _primitives.isName)(actionType, 'Named')) {\n          var action = openactionDict.get('N');\n          if ((0, _primitives.isName)(action, 'Print')) {\n            if (!javaScript) {\n              javaScript = [];\n            }\n            javaScript.push('print({});');\n          }\n        } else {\n          appendIfJavaScriptDict(openactionDict);\n        }\n      }\n      return (0, _util.shadow)(this, 'javaScript', javaScript);\n    },\n    cleanup: function Catalog_cleanup() {\n      var _this = this;\n\n      this.pageKidsCountCache.clear();\n      var promises = [];\n      this.fontCache.forEach(function (promise) {\n        promises.push(promise);\n      });\n      return Promise.all(promises).then(function (translatedFonts) {\n        for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n          var font = translatedFonts[i].dict;\n          delete font.translated;\n        }\n        _this.fontCache.clear();\n        _this.builtInCMapCache = Object.create(null);\n      });\n    },\n    getPage: function Catalog_getPage(pageIndex) {\n      var _this2 = this;\n\n      if (!(pageIndex in this.pagePromises)) {\n        this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              dict = _ref2[0],\n              ref = _ref2[1];\n\n          return _this2.pageFactory.createPage(pageIndex, dict, ref, _this2.fontCache, _this2.builtInCMapCache);\n        });\n      }\n      return this.pagePromises[pageIndex];\n    },\n    getPageDict: function Catalog_getPageDict(pageIndex) {\n      var capability = (0, _util.createPromiseCapability)();\n      var nodesToVisit = [this.catDict.getRaw('Pages')];\n      var count,\n          currentPageIndex = 0;\n      var xref = this.xref,\n          pageKidsCountCache = this.pageKidsCountCache;\n      function next() {\n        while (nodesToVisit.length) {\n          var currentNode = nodesToVisit.pop();\n          if ((0, _primitives.isRef)(currentNode)) {\n            count = pageKidsCountCache.get(currentNode);\n            if (count > 0 && currentPageIndex + count < pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n            xref.fetchAsync(currentNode).then(function (obj) {\n              if ((0, _primitives.isDict)(obj, 'Page') || (0, _primitives.isDict)(obj) && !obj.has('Kids')) {\n                if (pageIndex === currentPageIndex) {\n                  if (currentNode && !pageKidsCountCache.has(currentNode)) {\n                    pageKidsCountCache.put(currentNode, 1);\n                  }\n                  capability.resolve([obj, currentNode]);\n                } else {\n                  currentPageIndex++;\n                  next();\n                }\n                return;\n              }\n              nodesToVisit.push(obj);\n              next();\n            }, capability.reject);\n            return;\n          }\n          if (!(0, _primitives.isDict)(currentNode)) {\n            capability.reject(new _util.FormatError('page dictionary kid reference points to wrong type of object'));\n            return;\n          }\n          count = currentNode.get('Count');\n          if (Number.isInteger(count) && count >= 0) {\n            var objId = currentNode.objId;\n            if (objId && !pageKidsCountCache.has(objId)) {\n              pageKidsCountCache.put(objId, count);\n            }\n            if (currentPageIndex + count <= pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n          }\n          var kids = currentNode.get('Kids');\n          if (!Array.isArray(kids)) {\n            if ((0, _primitives.isName)(currentNode.get('Type'), 'Page') || !currentNode.has('Type') && currentNode.has('Contents')) {\n              if (currentPageIndex === pageIndex) {\n                capability.resolve([currentNode, null]);\n                return;\n              }\n              currentPageIndex++;\n              continue;\n            }\n            capability.reject(new _util.FormatError('page dictionary kids object is not an array'));\n            return;\n          }\n          for (var last = kids.length - 1; last >= 0; last--) {\n            nodesToVisit.push(kids[last]);\n          }\n        }\n        capability.reject(new Error('Page index ' + pageIndex + ' not found.'));\n      }\n      next();\n      return capability.promise;\n    },\n    getPageIndex: function Catalog_getPageIndex(pageRef) {\n      var xref = this.xref;\n      function pagesBeforeRef(kidRef) {\n        var total = 0;\n        var parentRef;\n        return xref.fetchAsync(kidRef).then(function (node) {\n          if ((0, _primitives.isRefsEqual)(kidRef, pageRef) && !(0, _primitives.isDict)(node, 'Page') && !((0, _primitives.isDict)(node) && !node.has('Type') && node.has('Contents'))) {\n            throw new _util.FormatError('The reference does not point to a /Page Dict.');\n          }\n          if (!node) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(node)) {\n            throw new _util.FormatError('node must be a Dict.');\n          }\n          parentRef = node.getRaw('Parent');\n          return node.getAsync('Parent');\n        }).then(function (parent) {\n          if (!parent) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(parent)) {\n            throw new _util.FormatError('parent must be a Dict.');\n          }\n          return parent.getAsync('Kids');\n        }).then(function (kids) {\n          if (!kids) {\n            return null;\n          }\n          var kidPromises = [];\n          var found = false;\n          for (var i = 0; i < kids.length; i++) {\n            var kid = kids[i];\n            if (!(0, _primitives.isRef)(kid)) {\n              throw new _util.FormatError('kid must be a Ref.');\n            }\n            if ((0, _primitives.isRefsEqual)(kid, kidRef)) {\n              found = true;\n              break;\n            }\n            kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n              if (!(0, _primitives.isDict)(kid)) {\n                throw new _util.FormatError('kid node must be a Dict.');\n              }\n              if (kid.has('Count')) {\n                var count = kid.get('Count');\n                total += count;\n              } else {\n                total++;\n              }\n            }));\n          }\n          if (!found) {\n            throw new _util.FormatError('kid ref not found in parents kids');\n          }\n          return Promise.all(kidPromises).then(function () {\n            return [total, parentRef];\n          });\n        });\n      }\n      var total = 0;\n      function next(ref) {\n        return pagesBeforeRef(ref).then(function (args) {\n          if (!args) {\n            return total;\n          }\n          var count = args[0];\n          var parentRef = args[1];\n          total += count;\n          return next(parentRef);\n        });\n      }\n      return next(pageRef);\n    }\n  };\n  Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n    function addDefaultProtocolToUrl(url) {\n      if (url.indexOf('www.') === 0) {\n        return 'http://' + url;\n      }\n      return url;\n    }\n    function tryConvertUrlEncoding(url) {\n      try {\n        return (0, _util.stringToUTF8String)(url);\n      } catch (e) {\n        return url;\n      }\n    }\n    var destDict = params.destDict;\n    if (!(0, _primitives.isDict)(destDict)) {\n      (0, _util.warn)('parseDestDictionary: \"destDict\" must be a dictionary.');\n      return;\n    }\n    var resultObj = params.resultObj;\n    if ((typeof resultObj === 'undefined' ? 'undefined' : _typeof(resultObj)) !== 'object') {\n      (0, _util.warn)('parseDestDictionary: \"resultObj\" must be an object.');\n      return;\n    }\n    var docBaseUrl = params.docBaseUrl || null;\n    var action = destDict.get('A'),\n        url,\n        dest;\n    if (!(0, _primitives.isDict)(action) && destDict.has('Dest')) {\n      action = destDict.get('Dest');\n    }\n    if ((0, _primitives.isDict)(action)) {\n      var actionType = action.get('S');\n      if (!(0, _primitives.isName)(actionType)) {\n        (0, _util.warn)('parseDestDictionary: Invalid type in Action dictionary.');\n        return;\n      }\n      var actionName = actionType.name;\n      switch (actionName) {\n        case 'URI':\n          url = action.get('URI');\n          if ((0, _primitives.isName)(url)) {\n            url = '/' + url.name;\n          } else if ((0, _util.isString)(url)) {\n            url = addDefaultProtocolToUrl(url);\n          }\n          break;\n        case 'GoTo':\n          dest = action.get('D');\n          break;\n        case 'Launch':\n        case 'GoToR':\n          var urlDict = action.get('F');\n          if ((0, _primitives.isDict)(urlDict)) {\n            url = urlDict.get('F') || null;\n          } else if ((0, _util.isString)(urlDict)) {\n            url = urlDict;\n          }\n          var remoteDest = action.get('D');\n          if (remoteDest) {\n            if ((0, _primitives.isName)(remoteDest)) {\n              remoteDest = remoteDest.name;\n            }\n            if ((0, _util.isString)(url)) {\n              var baseUrl = url.split('#')[0];\n              if ((0, _util.isString)(remoteDest)) {\n                url = baseUrl + '#' + remoteDest;\n              } else if (Array.isArray(remoteDest)) {\n                url = baseUrl + '#' + JSON.stringify(remoteDest);\n              }\n            }\n          }\n          var newWindow = action.get('NewWindow');\n          if ((0, _util.isBool)(newWindow)) {\n            resultObj.newWindow = newWindow;\n          }\n          break;\n        case 'Named':\n          var namedAction = action.get('N');\n          if ((0, _primitives.isName)(namedAction)) {\n            resultObj.action = namedAction.name;\n          }\n          break;\n        case 'JavaScript':\n          var jsAction = action.get('JS'),\n              js;\n          if ((0, _primitives.isStream)(jsAction)) {\n            js = (0, _util.bytesToString)(jsAction.getBytes());\n          } else if ((0, _util.isString)(jsAction)) {\n            js = jsAction;\n          }\n          if (js) {\n            var URL_OPEN_METHODS = ['app.launchURL', 'window.open'];\n            var regex = new RegExp('^\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\.') + ')\\\\((?:\\'|\\\")([^\\'\\\"]*)(?:\\'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))', 'i');\n            var jsUrl = regex.exec((0, _util.stringToPDFString)(js));\n            if (jsUrl && jsUrl[2]) {\n              url = jsUrl[2];\n              if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\n                resultObj.newWindow = true;\n              }\n              break;\n            }\n          }\n        default:\n          (0, _util.warn)('parseDestDictionary: Unsupported Action type \"' + actionName + '\".');\n          break;\n      }\n    } else if (destDict.has('Dest')) {\n      dest = destDict.get('Dest');\n    }\n    if ((0, _util.isString)(url)) {\n      url = tryConvertUrlEncoding(url);\n      var absoluteUrl = (0, _util.createValidAbsoluteUrl)(url, docBaseUrl);\n      if (absoluteUrl) {\n        resultObj.url = absoluteUrl.href;\n      }\n      resultObj.unsafeUrl = url;\n    }\n    if (dest) {\n      if ((0, _primitives.isName)(dest)) {\n        dest = dest.name;\n      }\n      if ((0, _util.isString)(dest) || Array.isArray(dest)) {\n        resultObj.dest = dest;\n      }\n    }\n  };\n  return Catalog;\n}();\nvar XRef = function XRefClosure() {\n  function XRef(stream, pdfManager) {\n    this.stream = stream;\n    this.pdfManager = pdfManager;\n    this.entries = [];\n    this.xrefstms = Object.create(null);\n    this.cache = [];\n    this.stats = {\n      streamTypes: [],\n      fontTypes: []\n    };\n  }\n  XRef.prototype = {\n    setStartXRef: function XRef_setStartXRef(startXRef) {\n      this.startXRefQueue = [startXRef];\n    },\n    parse: function XRef_parse(recoveryMode) {\n      var trailerDict;\n      if (!recoveryMode) {\n        trailerDict = this.readXRef();\n      } else {\n        (0, _util.warn)('Indexing all PDF objects');\n        trailerDict = this.indexObjects();\n      }\n      trailerDict.assignXref(this);\n      this.trailer = trailerDict;\n      var encrypt = trailerDict.get('Encrypt');\n      if ((0, _primitives.isDict)(encrypt)) {\n        var ids = trailerDict.get('ID');\n        var fileId = ids && ids.length ? ids[0] : '';\n        encrypt.suppressEncryption = true;\n        this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n      }\n      if (!(this.root = trailerDict.get('Root'))) {\n        throw new _util.FormatError('Invalid root reference');\n      }\n    },\n    processXRefTable: function XRef_processXRefTable(parser) {\n      if (!('tableState' in this)) {\n        this.tableState = {\n          entryNum: 0,\n          streamPos: parser.lexer.stream.pos,\n          parserBuf1: parser.buf1,\n          parserBuf2: parser.buf2\n        };\n      }\n      var obj = this.readXRefTable(parser);\n      if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n        throw new _util.FormatError('Invalid XRef table: could not find trailer dictionary');\n      }\n      var dict = parser.getObj();\n      if (!(0, _primitives.isDict)(dict) && dict.dict) {\n        dict = dict.dict;\n      }\n      if (!(0, _primitives.isDict)(dict)) {\n        throw new _util.FormatError('Invalid XRef table: could not parse trailer dictionary');\n      }\n      delete this.tableState;\n      return dict;\n    },\n    readXRefTable: function XRef_readXRefTable(parser) {\n      var stream = parser.lexer.stream;\n      var tableState = this.tableState;\n      stream.pos = tableState.streamPos;\n      parser.buf1 = tableState.parserBuf1;\n      parser.buf2 = tableState.parserBuf2;\n      var obj;\n      while (true) {\n        if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n          if ((0, _primitives.isCmd)(obj = parser.getObj(), 'trailer')) {\n            break;\n          }\n          tableState.firstEntryNum = obj;\n          tableState.entryCount = parser.getObj();\n        }\n        var first = tableState.firstEntryNum;\n        var count = tableState.entryCount;\n        if (!Number.isInteger(first) || !Number.isInteger(count)) {\n          throw new _util.FormatError('Invalid XRef table: wrong types in subsection header');\n        }\n        for (var i = tableState.entryNum; i < count; i++) {\n          tableState.streamPos = stream.pos;\n          tableState.entryNum = i;\n          tableState.parserBuf1 = parser.buf1;\n          tableState.parserBuf2 = parser.buf2;\n          var entry = {};\n          entry.offset = parser.getObj();\n          entry.gen = parser.getObj();\n          var type = parser.getObj();\n          if ((0, _primitives.isCmd)(type, 'f')) {\n            entry.free = true;\n          } else if ((0, _primitives.isCmd)(type, 'n')) {\n            entry.uncompressed = true;\n          }\n          if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n            throw new _util.FormatError('Invalid entry in XRef subsection: ' + first + ', ' + count);\n          }\n          if (i === 0 && entry.free && first === 1) {\n            first = 0;\n          }\n          if (!this.entries[i + first]) {\n            this.entries[i + first] = entry;\n          }\n        }\n        tableState.entryNum = 0;\n        tableState.streamPos = stream.pos;\n        tableState.parserBuf1 = parser.buf1;\n        tableState.parserBuf2 = parser.buf2;\n        delete tableState.firstEntryNum;\n        delete tableState.entryCount;\n      }\n      if (this.entries[0] && !this.entries[0].free) {\n        throw new _util.FormatError('Invalid XRef table: unexpected first object');\n      }\n      return obj;\n    },\n    processXRefStream: function XRef_processXRefStream(stream) {\n      if (!('streamState' in this)) {\n        var streamParameters = stream.dict;\n        var byteWidths = streamParameters.get('W');\n        var range = streamParameters.get('Index');\n        if (!range) {\n          range = [0, streamParameters.get('Size')];\n        }\n        this.streamState = {\n          entryRanges: range,\n          byteWidths: byteWidths,\n          entryNum: 0,\n          streamPos: stream.pos\n        };\n      }\n      this.readXRefStream(stream);\n      delete this.streamState;\n      return stream.dict;\n    },\n    readXRefStream: function XRef_readXRefStream(stream) {\n      var i, j;\n      var streamState = this.streamState;\n      stream.pos = streamState.streamPos;\n      var byteWidths = streamState.byteWidths;\n      var typeFieldWidth = byteWidths[0];\n      var offsetFieldWidth = byteWidths[1];\n      var generationFieldWidth = byteWidths[2];\n      var entryRanges = streamState.entryRanges;\n      while (entryRanges.length > 0) {\n        var first = entryRanges[0];\n        var n = entryRanges[1];\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n          throw new _util.FormatError('Invalid XRef range fields: ' + first + ', ' + n);\n        }\n        if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n          throw new _util.FormatError('Invalid XRef entry fields length: ' + first + ', ' + n);\n        }\n        for (i = streamState.entryNum; i < n; ++i) {\n          streamState.entryNum = i;\n          streamState.streamPos = stream.pos;\n          var type = 0,\n              offset = 0,\n              generation = 0;\n          for (j = 0; j < typeFieldWidth; ++j) {\n            type = type << 8 | stream.getByte();\n          }\n          if (typeFieldWidth === 0) {\n            type = 1;\n          }\n          for (j = 0; j < offsetFieldWidth; ++j) {\n            offset = offset << 8 | stream.getByte();\n          }\n          for (j = 0; j < generationFieldWidth; ++j) {\n            generation = generation << 8 | stream.getByte();\n          }\n          var entry = {};\n          entry.offset = offset;\n          entry.gen = generation;\n          switch (type) {\n            case 0:\n              entry.free = true;\n              break;\n            case 1:\n              entry.uncompressed = true;\n              break;\n            case 2:\n              break;\n            default:\n              throw new _util.FormatError('Invalid XRef entry type: ' + type);\n          }\n          if (!this.entries[first + i]) {\n            this.entries[first + i] = entry;\n          }\n        }\n        streamState.entryNum = 0;\n        streamState.streamPos = stream.pos;\n        entryRanges.splice(0, 2);\n      }\n    },\n    indexObjects: function XRef_indexObjects() {\n      var TAB = 0x9,\n          LF = 0xA,\n          CR = 0xD,\n          SPACE = 0x20;\n      var PERCENT = 0x25,\n          LT = 0x3C;\n      function readToken(data, offset) {\n        var token = '',\n            ch = data[offset];\n        while (ch !== LF && ch !== CR && ch !== LT) {\n          if (++offset >= data.length) {\n            break;\n          }\n          token += String.fromCharCode(ch);\n          ch = data[offset];\n        }\n        return token;\n      }\n      function skipUntil(data, offset, what) {\n        var length = what.length,\n            dataLength = data.length;\n        var skipped = 0;\n        while (offset < dataLength) {\n          var i = 0;\n          while (i < length && data[offset + i] === what[i]) {\n            ++i;\n          }\n          if (i >= length) {\n            break;\n          }\n          offset++;\n          skipped++;\n        }\n        return skipped;\n      }\n      var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n      var endobjRegExp = /\\bendobj[\\b\\s]$/;\n      var nestedObjRegExp = /\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s])$/;\n      var CHECK_CONTENT_LENGTH = 25;\n      var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n      var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n      var objBytes = new Uint8Array([111, 98, 106]);\n      var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n      this.entries.length = 0;\n      var stream = this.stream;\n      stream.pos = 0;\n      var buffer = stream.getBytes();\n      var position = stream.start,\n          length = buffer.length;\n      var trailers = [],\n          xrefStms = [];\n      while (position < length) {\n        var ch = buffer[position];\n        if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n          ++position;\n          continue;\n        }\n        if (ch === PERCENT) {\n          do {\n            ++position;\n            if (position >= length) {\n              break;\n            }\n            ch = buffer[position];\n          } while (ch !== LF && ch !== CR);\n          continue;\n        }\n        var token = readToken(buffer, position);\n        var m;\n        if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n          position += skipUntil(buffer, position, trailerBytes);\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else if (m = objRegExp.exec(token)) {\n          if (typeof this.entries[m[1]] === 'undefined') {\n            this.entries[m[1]] = {\n              offset: position - stream.start,\n              gen: m[2] | 0,\n              uncompressed: true\n            };\n          }\n          var contentLength = void 0,\n              startPos = position + token.length;\n          while (startPos < buffer.length) {\n            var endPos = startPos + skipUntil(buffer, startPos, objBytes) + 4;\n            contentLength = endPos - position;\n            var checkPos = Math.max(endPos - CHECK_CONTENT_LENGTH, startPos);\n            var tokenStr = (0, _util.bytesToString)(buffer.subarray(checkPos, endPos));\n            if (endobjRegExp.test(tokenStr)) {\n              break;\n            } else {\n              var objToken = nestedObjRegExp.exec(tokenStr);\n              if (objToken && objToken[1]) {\n                (0, _util.warn)('indexObjects: Found new \"obj\" inside of another \"obj\", ' + 'caused by missing \"endobj\" -- trying to recover.');\n                contentLength -= objToken[1].length;\n                break;\n              }\n            }\n            startPos += contentLength;\n          }\n          var content = buffer.subarray(position, position + contentLength);\n          var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n          if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n            xrefStms.push(position - stream.start);\n            this.xrefstms[position - stream.start] = 1;\n          }\n          position += contentLength;\n        } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else {\n          position += token.length + 1;\n        }\n      }\n      var i, ii;\n      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n        this.startXRefQueue.push(xrefStms[i]);\n        this.readXRef(true);\n      }\n      var dict;\n      for (i = 0, ii = trailers.length; i < ii; ++i) {\n        stream.pos = trailers[i];\n        var parser = new _parser.Parser(new _parser.Lexer(stream), true, this, true);\n        var obj = parser.getObj();\n        if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n          continue;\n        }\n        dict = parser.getObj();\n        if (!(0, _primitives.isDict)(dict)) {\n          continue;\n        }\n        if (dict.has('ID')) {\n          return dict;\n        }\n      }\n      if (dict) {\n        return dict;\n      }\n      throw new _util.InvalidPDFException('Invalid PDF structure');\n    },\n    readXRef: function XRef_readXRef(recoveryMode) {\n      var stream = this.stream;\n      var startXRefParsedCache = Object.create(null);\n      try {\n        while (this.startXRefQueue.length) {\n          var startXRef = this.startXRefQueue[0];\n          if (startXRefParsedCache[startXRef]) {\n            (0, _util.warn)('readXRef - skipping XRef table since it was already parsed.');\n            this.startXRefQueue.shift();\n            continue;\n          }\n          startXRefParsedCache[startXRef] = true;\n          stream.pos = startXRef + stream.start;\n          var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n          var obj = parser.getObj();\n          var dict;\n          if ((0, _primitives.isCmd)(obj, 'xref')) {\n            dict = this.processXRefTable(parser);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            obj = dict.get('XRefStm');\n            if (Number.isInteger(obj)) {\n              var pos = obj;\n              if (!(pos in this.xrefstms)) {\n                this.xrefstms[pos] = 1;\n                this.startXRefQueue.push(pos);\n              }\n            }\n          } else if (Number.isInteger(obj)) {\n            if (!Number.isInteger(parser.getObj()) || !(0, _primitives.isCmd)(parser.getObj(), 'obj') || !(0, _primitives.isStream)(obj = parser.getObj())) {\n              throw new _util.FormatError('Invalid XRef stream');\n            }\n            dict = this.processXRefStream(obj);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            if (!dict) {\n              throw new _util.FormatError('Failed to read XRef stream');\n            }\n          } else {\n            throw new _util.FormatError('Invalid XRef stream header');\n          }\n          obj = dict.get('Prev');\n          if (Number.isInteger(obj)) {\n            this.startXRefQueue.push(obj);\n          } else if ((0, _primitives.isRef)(obj)) {\n            this.startXRefQueue.push(obj.num);\n          }\n          this.startXRefQueue.shift();\n        }\n        return this.topDict;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        (0, _util.info)('(while reading XRef): ' + e);\n      }\n      if (recoveryMode) {\n        return;\n      }\n      throw new _util.XRefParseException();\n    },\n    getEntry: function XRef_getEntry(i) {\n      var xrefEntry = this.entries[i];\n      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n        return xrefEntry;\n      }\n      return null;\n    },\n    fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return obj;\n      }\n      return this.fetch(obj, suppressEncryption);\n    },\n    fetch: function XRef_fetch(ref, suppressEncryption) {\n      if (!(0, _primitives.isRef)(ref)) {\n        throw new Error('ref object is not a reference');\n      }\n      var num = ref.num;\n      if (num in this.cache) {\n        var cacheEntry = this.cache[num];\n        if (cacheEntry instanceof _primitives.Dict && !cacheEntry.objId) {\n          cacheEntry.objId = ref.toString();\n        }\n        return cacheEntry;\n      }\n      var xrefEntry = this.getEntry(num);\n      if (xrefEntry === null) {\n        return this.cache[num] = null;\n      }\n      if (xrefEntry.uncompressed) {\n        xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n      } else {\n        xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n      }\n      if ((0, _primitives.isDict)(xrefEntry)) {\n        xrefEntry.objId = ref.toString();\n      } else if ((0, _primitives.isStream)(xrefEntry)) {\n        xrefEntry.dict.objId = ref.toString();\n      }\n      return xrefEntry;\n    },\n    fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n      var gen = ref.gen;\n      var num = ref.num;\n      if (xrefEntry.gen !== gen) {\n        throw new _util.FormatError('inconsistent generation in XRef');\n      }\n      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n      var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n      var obj1 = parser.getObj();\n      var obj2 = parser.getObj();\n      var obj3 = parser.getObj();\n      if (!Number.isInteger(obj1)) {\n        obj1 = parseInt(obj1, 10);\n      }\n      if (!Number.isInteger(obj2)) {\n        obj2 = parseInt(obj2, 10);\n      }\n      if (obj1 !== num || obj2 !== gen || !(0, _primitives.isCmd)(obj3)) {\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (obj3.cmd !== 'obj') {\n        if (obj3.cmd.indexOf('obj') === 0) {\n          num = parseInt(obj3.cmd.substring(3), 10);\n          if (!Number.isNaN(num)) {\n            return num;\n          }\n        }\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (this.encrypt && !suppressEncryption) {\n        xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n      } else {\n        xrefEntry = parser.getObj();\n      }\n      if (!(0, _primitives.isStream)(xrefEntry)) {\n        this.cache[num] = xrefEntry;\n      }\n      return xrefEntry;\n    },\n    fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n      var tableOffset = xrefEntry.offset;\n      var stream = this.fetch(new _primitives.Ref(tableOffset, 0));\n      if (!(0, _primitives.isStream)(stream)) {\n        throw new _util.FormatError('bad ObjStm stream');\n      }\n      var first = stream.dict.get('First');\n      var n = stream.dict.get('N');\n      if (!Number.isInteger(first) || !Number.isInteger(n)) {\n        throw new _util.FormatError('invalid first and n parameters for ObjStm stream');\n      }\n      var parser = new _parser.Parser(new _parser.Lexer(stream), false, this);\n      parser.allowStreams = true;\n      var i,\n          entries = [],\n          num,\n          nums = [];\n      for (i = 0; i < n; ++i) {\n        num = parser.getObj();\n        if (!Number.isInteger(num)) {\n          throw new _util.FormatError('invalid object number in the ObjStm stream: ' + num);\n        }\n        nums.push(num);\n        var offset = parser.getObj();\n        if (!Number.isInteger(offset)) {\n          throw new _util.FormatError('invalid object offset in the ObjStm stream: ' + offset);\n        }\n      }\n      for (i = 0; i < n; ++i) {\n        entries.push(parser.getObj());\n        if ((0, _primitives.isCmd)(parser.buf1, 'endobj')) {\n          parser.shift();\n        }\n        num = nums[i];\n        var entry = this.entries[num];\n        if (entry && entry.offset === tableOffset && entry.gen === i) {\n          this.cache[num] = entries[i];\n        }\n      }\n      xrefEntry = entries[xrefEntry.gen];\n      if (xrefEntry === undefined) {\n        throw new _util.FormatError('bad XRef entry for compressed object');\n      }\n      return xrefEntry;\n    },\n    fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return Promise.resolve(obj);\n      }\n      return this.fetchAsync(obj, suppressEncryption);\n    },\n    fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n      var streamManager = this.stream.manager;\n      var xref = this;\n      return new Promise(function tryFetch(resolve, reject) {\n        try {\n          resolve(xref.fetch(ref, suppressEncryption));\n        } catch (e) {\n          if (e instanceof _util.MissingDataException) {\n            streamManager.requestRange(e.begin, e.end).then(function () {\n              tryFetch(resolve, reject);\n            }, reject);\n            return;\n          }\n          reject(e);\n        }\n      });\n    },\n    getCatalogObj: function XRef_getCatalogObj() {\n      return this.root;\n    }\n  };\n  return XRef;\n}();\nvar NameOrNumberTree = function NameOrNumberTreeClosure() {\n  function NameOrNumberTree(root, xref) {\n    (0, _util.unreachable)('Cannot initialize NameOrNumberTree.');\n  }\n  NameOrNumberTree.prototype = {\n    getAll: function NameOrNumberTree_getAll() {\n      var dict = Object.create(null);\n      if (!this.root) {\n        return dict;\n      }\n      var xref = this.xref;\n      var processed = new _primitives.RefSet();\n      processed.put(this.root);\n      var queue = [this.root];\n      while (queue.length > 0) {\n        var i, n;\n        var obj = xref.fetchIfRef(queue.shift());\n        if (!(0, _primitives.isDict)(obj)) {\n          continue;\n        }\n        if (obj.has('Kids')) {\n          var kids = obj.get('Kids');\n          for (i = 0, n = kids.length; i < n; i++) {\n            var kid = kids[i];\n            if (processed.has(kid)) {\n              throw new _util.FormatError('Duplicate entry in \"' + this._type + '\" tree.');\n            }\n            queue.push(kid);\n            processed.put(kid);\n          }\n          continue;\n        }\n        var entries = obj.get(this._type);\n        if (Array.isArray(entries)) {\n          for (i = 0, n = entries.length; i < n; i += 2) {\n            dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n          }\n        }\n      }\n      return dict;\n    },\n    get: function NameOrNumberTree_get(key) {\n      if (!this.root) {\n        return null;\n      }\n      var xref = this.xref;\n      var kidsOrEntries = xref.fetchIfRef(this.root);\n      var loopCount = 0;\n      var MAX_LEVELS = 10;\n      var l, r, m;\n      while (kidsOrEntries.has('Kids')) {\n        if (++loopCount > MAX_LEVELS) {\n          (0, _util.warn)('Search depth limit reached for \"' + this._type + '\" tree.');\n          return null;\n        }\n        var kids = kidsOrEntries.get('Kids');\n        if (!Array.isArray(kids)) {\n          return null;\n        }\n        l = 0;\n        r = kids.length - 1;\n        while (l <= r) {\n          m = l + r >> 1;\n          var kid = xref.fetchIfRef(kids[m]);\n          var limits = kid.get('Limits');\n          if (key < xref.fetchIfRef(limits[0])) {\n            r = m - 1;\n          } else if (key > xref.fetchIfRef(limits[1])) {\n            l = m + 1;\n          } else {\n            kidsOrEntries = xref.fetchIfRef(kids[m]);\n            break;\n          }\n        }\n        if (l > r) {\n          return null;\n        }\n      }\n      var entries = kidsOrEntries.get(this._type);\n      if (Array.isArray(entries)) {\n        l = 0;\n        r = entries.length - 2;\n        while (l <= r) {\n          m = l + r & ~1;\n          var currentKey = xref.fetchIfRef(entries[m]);\n          if (key < currentKey) {\n            r = m - 2;\n          } else if (key > currentKey) {\n            l = m + 2;\n          } else {\n            return xref.fetchIfRef(entries[m + 1]);\n          }\n        }\n      }\n      return null;\n    }\n  };\n  return NameOrNumberTree;\n}();\nvar NameTree = function NameTreeClosure() {\n  function NameTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Names';\n  }\n  _util.Util.inherit(NameTree, NameOrNumberTree, {});\n  return NameTree;\n}();\nvar NumberTree = function NumberTreeClosure() {\n  function NumberTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Nums';\n  }\n  _util.Util.inherit(NumberTree, NameOrNumberTree, {});\n  return NumberTree;\n}();\nvar FileSpec = function FileSpecClosure() {\n  function FileSpec(root, xref) {\n    if (!root || !(0, _primitives.isDict)(root)) {\n      return;\n    }\n    this.xref = xref;\n    this.root = root;\n    if (root.has('FS')) {\n      this.fs = root.get('FS');\n    }\n    this.description = root.has('Desc') ? (0, _util.stringToPDFString)(root.get('Desc')) : '';\n    if (root.has('RF')) {\n      (0, _util.warn)('Related file specifications are not supported');\n    }\n    this.contentAvailable = true;\n    if (!root.has('EF')) {\n      this.contentAvailable = false;\n      (0, _util.warn)('Non-embedded file specifications are not supported');\n    }\n  }\n  function pickPlatformItem(dict) {\n    if (dict.has('UF')) {\n      return dict.get('UF');\n    } else if (dict.has('F')) {\n      return dict.get('F');\n    } else if (dict.has('Unix')) {\n      return dict.get('Unix');\n    } else if (dict.has('Mac')) {\n      return dict.get('Mac');\n    } else if (dict.has('DOS')) {\n      return dict.get('DOS');\n    }\n    return null;\n  }\n  FileSpec.prototype = {\n    get filename() {\n      if (!this._filename && this.root) {\n        var filename = pickPlatformItem(this.root) || 'unnamed';\n        this._filename = (0, _util.stringToPDFString)(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n      }\n      return this._filename;\n    },\n    get content() {\n      if (!this.contentAvailable) {\n        return null;\n      }\n      if (!this.contentRef && this.root) {\n        this.contentRef = pickPlatformItem(this.root.get('EF'));\n      }\n      var content = null;\n      if (this.contentRef) {\n        var xref = this.xref;\n        var fileObj = xref.fetchIfRef(this.contentRef);\n        if (fileObj && (0, _primitives.isStream)(fileObj)) {\n          content = fileObj.getBytes();\n        } else {\n          (0, _util.warn)('Embedded file specification points to non-existing/invalid ' + 'content');\n        }\n      } else {\n        (0, _util.warn)('Embedded file specification does not have a content');\n      }\n      return content;\n    },\n    get serializable() {\n      return {\n        filename: this.filename,\n        content: this.content\n      };\n    }\n  };\n  return FileSpec;\n}();\nvar ObjectLoader = function () {\n  function mayHaveChildren(value) {\n    return (0, _primitives.isRef)(value) || (0, _primitives.isDict)(value) || Array.isArray(value) || (0, _primitives.isStream)(value);\n  }\n  function addChildren(node, nodesToVisit) {\n    if ((0, _primitives.isDict)(node) || (0, _primitives.isStream)(node)) {\n      var dict = (0, _primitives.isDict)(node) ? node : node.dict;\n      var dictKeys = dict.getKeys();\n      for (var i = 0, ii = dictKeys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(dictKeys[i]);\n        if (mayHaveChildren(rawValue)) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n    } else if (Array.isArray(node)) {\n      for (var _i = 0, _ii = node.length; _i < _ii; _i++) {\n        var value = node[_i];\n        if (mayHaveChildren(value)) {\n          nodesToVisit.push(value);\n        }\n      }\n    }\n  }\n  function ObjectLoader(dict, keys, xref) {\n    this.dict = dict;\n    this.keys = keys;\n    this.xref = xref;\n    this.refSet = null;\n    this.capability = null;\n  }\n  ObjectLoader.prototype = {\n    load: function load() {\n      this.capability = (0, _util.createPromiseCapability)();\n      if (!(this.xref.stream instanceof _chunked_stream.ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n        this.capability.resolve();\n        return this.capability.promise;\n      }\n      var keys = this.keys,\n          dict = this.dict;\n\n      this.refSet = new _primitives.RefSet();\n      var nodesToVisit = [];\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(keys[i]);\n        if (rawValue !== undefined) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n      this._walk(nodesToVisit);\n      return this.capability.promise;\n    },\n    _walk: function _walk(nodesToVisit) {\n      var _this3 = this;\n\n      var nodesToRevisit = [];\n      var pendingRequests = [];\n      while (nodesToVisit.length) {\n        var currentNode = nodesToVisit.pop();\n        if ((0, _primitives.isRef)(currentNode)) {\n          if (this.refSet.has(currentNode)) {\n            continue;\n          }\n          try {\n            this.refSet.put(currentNode);\n            currentNode = this.xref.fetch(currentNode);\n          } catch (ex) {\n            if (!(ex instanceof _util.MissingDataException)) {\n              throw ex;\n            }\n            nodesToRevisit.push(currentNode);\n            pendingRequests.push({\n              begin: ex.begin,\n              end: ex.end\n            });\n          }\n        }\n        if (currentNode && currentNode.getBaseStreams) {\n          var baseStreams = currentNode.getBaseStreams();\n          var foundMissingData = false;\n          for (var i = 0, ii = baseStreams.length; i < ii; i++) {\n            var stream = baseStreams[i];\n            if (stream.getMissingChunks && stream.getMissingChunks().length) {\n              foundMissingData = true;\n              pendingRequests.push({\n                begin: stream.start,\n                end: stream.end\n              });\n            }\n          }\n          if (foundMissingData) {\n            nodesToRevisit.push(currentNode);\n          }\n        }\n        addChildren(currentNode, nodesToVisit);\n      }\n      if (pendingRequests.length) {\n        this.xref.stream.manager.requestRanges(pendingRequests).then(function () {\n          for (var _i2 = 0, _ii2 = nodesToRevisit.length; _i2 < _ii2; _i2++) {\n            var node = nodesToRevisit[_i2];\n            if ((0, _primitives.isRef)(node)) {\n              _this3.refSet.remove(node);\n            }\n          }\n          _this3._walk(nodesToRevisit);\n        }, this.capability.reject);\n        return;\n      }\n      this.refSet = null;\n      this.capability.resolve();\n    }\n  };\n  return ObjectLoader;\n}();\nexports.Catalog = Catalog;\nexports.ObjectLoader = ObjectLoader;\nexports.XRef = XRef;\nexports.FileSpec = FileSpec;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/obj.js\n// module id = qyH+\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CMapFactory = exports.IdentityCMap = exports.CMap = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _parser = require('./parser');\n\nvar _stream = require('./stream');\n\nvar BUILT_IN_CMAPS = ['Adobe-GB1-UCS2', 'Adobe-CNS1-UCS2', 'Adobe-Japan1-UCS2', 'Adobe-Korea1-UCS2', '78-EUC-H', '78-EUC-V', '78-H', '78-RKSJ-H', '78-RKSJ-V', '78-V', '78ms-RKSJ-H', '78ms-RKSJ-V', '83pv-RKSJ-H', '90ms-RKSJ-H', '90ms-RKSJ-V', '90msp-RKSJ-H', '90msp-RKSJ-V', '90pv-RKSJ-H', '90pv-RKSJ-V', 'Add-H', 'Add-RKSJ-H', 'Add-RKSJ-V', 'Add-V', 'Adobe-CNS1-0', 'Adobe-CNS1-1', 'Adobe-CNS1-2', 'Adobe-CNS1-3', 'Adobe-CNS1-4', 'Adobe-CNS1-5', 'Adobe-CNS1-6', 'Adobe-GB1-0', 'Adobe-GB1-1', 'Adobe-GB1-2', 'Adobe-GB1-3', 'Adobe-GB1-4', 'Adobe-GB1-5', 'Adobe-Japan1-0', 'Adobe-Japan1-1', 'Adobe-Japan1-2', 'Adobe-Japan1-3', 'Adobe-Japan1-4', 'Adobe-Japan1-5', 'Adobe-Japan1-6', 'Adobe-Korea1-0', 'Adobe-Korea1-1', 'Adobe-Korea1-2', 'B5-H', 'B5-V', 'B5pc-H', 'B5pc-V', 'CNS-EUC-H', 'CNS-EUC-V', 'CNS1-H', 'CNS1-V', 'CNS2-H', 'CNS2-V', 'ETHK-B5-H', 'ETHK-B5-V', 'ETen-B5-H', 'ETen-B5-V', 'ETenms-B5-H', 'ETenms-B5-V', 'EUC-H', 'EUC-V', 'Ext-H', 'Ext-RKSJ-H', 'Ext-RKSJ-V', 'Ext-V', 'GB-EUC-H', 'GB-EUC-V', 'GB-H', 'GB-V', 'GBK-EUC-H', 'GBK-EUC-V', 'GBK2K-H', 'GBK2K-V', 'GBKp-EUC-H', 'GBKp-EUC-V', 'GBT-EUC-H', 'GBT-EUC-V', 'GBT-H', 'GBT-V', 'GBTpc-EUC-H', 'GBTpc-EUC-V', 'GBpc-EUC-H', 'GBpc-EUC-V', 'H', 'HKdla-B5-H', 'HKdla-B5-V', 'HKdlb-B5-H', 'HKdlb-B5-V', 'HKgccs-B5-H', 'HKgccs-B5-V', 'HKm314-B5-H', 'HKm314-B5-V', 'HKm471-B5-H', 'HKm471-B5-V', 'HKscs-B5-H', 'HKscs-B5-V', 'Hankaku', 'Hiragana', 'KSC-EUC-H', 'KSC-EUC-V', 'KSC-H', 'KSC-Johab-H', 'KSC-Johab-V', 'KSC-V', 'KSCms-UHC-H', 'KSCms-UHC-HW-H', 'KSCms-UHC-HW-V', 'KSCms-UHC-V', 'KSCpc-EUC-H', 'KSCpc-EUC-V', 'Katakana', 'NWP-H', 'NWP-V', 'RKSJ-H', 'RKSJ-V', 'Roman', 'UniCNS-UCS2-H', 'UniCNS-UCS2-V', 'UniCNS-UTF16-H', 'UniCNS-UTF16-V', 'UniCNS-UTF32-H', 'UniCNS-UTF32-V', 'UniCNS-UTF8-H', 'UniCNS-UTF8-V', 'UniGB-UCS2-H', 'UniGB-UCS2-V', 'UniGB-UTF16-H', 'UniGB-UTF16-V', 'UniGB-UTF32-H', 'UniGB-UTF32-V', 'UniGB-UTF8-H', 'UniGB-UTF8-V', 'UniJIS-UCS2-H', 'UniJIS-UCS2-HW-H', 'UniJIS-UCS2-HW-V', 'UniJIS-UCS2-V', 'UniJIS-UTF16-H', 'UniJIS-UTF16-V', 'UniJIS-UTF32-H', 'UniJIS-UTF32-V', 'UniJIS-UTF8-H', 'UniJIS-UTF8-V', 'UniJIS2004-UTF16-H', 'UniJIS2004-UTF16-V', 'UniJIS2004-UTF32-H', 'UniJIS2004-UTF32-V', 'UniJIS2004-UTF8-H', 'UniJIS2004-UTF8-V', 'UniJISPro-UCS2-HW-V', 'UniJISPro-UCS2-V', 'UniJISPro-UTF8-V', 'UniJISX0213-UTF32-H', 'UniJISX0213-UTF32-V', 'UniJISX02132004-UTF32-H', 'UniJISX02132004-UTF32-V', 'UniKS-UCS2-H', 'UniKS-UCS2-V', 'UniKS-UTF16-H', 'UniKS-UTF16-V', 'UniKS-UTF32-H', 'UniKS-UTF32-V', 'UniKS-UTF8-H', 'UniKS-UTF8-V', 'V', 'WP-Symbol'];\nvar CMap = function CMapClosure() {\n  function CMap(builtInCMap) {\n    this.codespaceRanges = [[], [], [], []];\n    this.numCodespaceRanges = 0;\n    this._map = [];\n    this.name = '';\n    this.vertical = false;\n    this.useCMap = null;\n    this.builtInCMap = builtInCMap;\n  }\n  CMap.prototype = {\n    addCodespaceRange: function addCodespaceRange(n, low, high) {\n      this.codespaceRanges[n - 1].push(low, high);\n      this.numCodespaceRanges++;\n    },\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      while (low <= high) {\n        this._map[low++] = dstLow++;\n      }\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      var lastByte = dstLow.length - 1;\n      while (low <= high) {\n        this._map[low++] = dstLow;\n        dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n      }\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      var i = 0,\n          ii = array.length;\n      while (low <= high && i < ii) {\n        this._map[low] = array[i++];\n        ++low;\n      }\n    },\n    mapOne: function mapOne(src, dst) {\n      this._map[src] = dst;\n    },\n    lookup: function lookup(code) {\n      return this._map[code];\n    },\n    contains: function contains(code) {\n      return this._map[code] !== undefined;\n    },\n    forEach: function forEach(callback) {\n      var map = this._map;\n      var length = map.length;\n      if (length <= 0x10000) {\n        for (var i = 0; i < length; i++) {\n          if (map[i] !== undefined) {\n            callback(i, map[i]);\n          }\n        }\n      } else {\n        for (var _i in map) {\n          callback(_i, map[_i]);\n        }\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    getMap: function getMap() {\n      return this._map;\n    },\n    readCharCode: function readCharCode(str, offset, out) {\n      var c = 0;\n      var codespaceRanges = this.codespaceRanges;\n      var codespaceRangesLen = this.codespaceRanges.length;\n      for (var n = 0; n < codespaceRangesLen; n++) {\n        c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n        var codespaceRange = codespaceRanges[n];\n        for (var k = 0, kk = codespaceRange.length; k < kk;) {\n          var low = codespaceRange[k++];\n          var high = codespaceRange[k++];\n          if (c >= low && c <= high) {\n            out.charcode = c;\n            out.length = n + 1;\n            return;\n          }\n        }\n      }\n      out.charcode = 0;\n      out.length = 1;\n    },\n\n    get length() {\n      return this._map.length;\n    },\n    get isIdentityCMap() {\n      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n        return false;\n      }\n      if (this._map.length !== 0x10000) {\n        return false;\n      }\n      for (var i = 0; i < 0x10000; i++) {\n        if (this._map[i] !== i) {\n          return false;\n        }\n      }\n      return true;\n    }\n  };\n  return CMap;\n}();\nvar IdentityCMap = function IdentityCMapClosure() {\n  function IdentityCMap(vertical, n) {\n    CMap.call(this);\n    this.vertical = vertical;\n    this.addCodespaceRange(n, 0, 0xffff);\n  }\n  _util.Util.inherit(IdentityCMap, CMap, {});\n  IdentityCMap.prototype = {\n    addCodespaceRange: CMap.prototype.addCodespaceRange,\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapCidRange');\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapBfRange');\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      (0, _util.unreachable)('should not call mapBfRangeToArray');\n    },\n    mapOne: function mapOne(src, dst) {\n      (0, _util.unreachable)('should not call mapCidOne');\n    },\n    lookup: function lookup(code) {\n      return Number.isInteger(code) && code <= 0xffff ? code : undefined;\n    },\n    contains: function contains(code) {\n      return Number.isInteger(code) && code <= 0xffff;\n    },\n    forEach: function forEach(callback) {\n      for (var i = 0; i <= 0xffff; i++) {\n        callback(i, i);\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      return Number.isInteger(value) && value <= 0xffff ? value : -1;\n    },\n    getMap: function getMap() {\n      var map = new Array(0x10000);\n      for (var i = 0; i <= 0xffff; i++) {\n        map[i] = i;\n      }\n      return map;\n    },\n\n    readCharCode: CMap.prototype.readCharCode,\n    get length() {\n      return 0x10000;\n    },\n    get isIdentityCMap() {\n      (0, _util.unreachable)('should not access .isIdentityCMap');\n    }\n  };\n  return IdentityCMap;\n}();\nvar BinaryCMapReader = function BinaryCMapReaderClosure() {\n  function hexToInt(a, size) {\n    var n = 0;\n    for (var i = 0; i <= size; i++) {\n      n = n << 8 | a[i];\n    }\n    return n >>> 0;\n  }\n  function hexToStr(a, size) {\n    if (size === 1) {\n      return String.fromCharCode(a[0], a[1]);\n    }\n    if (size === 3) {\n      return String.fromCharCode(a[0], a[1], a[2], a[3]);\n    }\n    return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n  }\n  function addHex(a, b, size) {\n    var c = 0;\n    for (var i = size; i >= 0; i--) {\n      c += a[i] + b[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  function incHex(a, size) {\n    var c = 1;\n    for (var i = size; i >= 0 && c > 0; i--) {\n      c += a[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  var MAX_NUM_SIZE = 16;\n  var MAX_ENCODED_NUM_SIZE = 19;\n  function BinaryCMapStream(data) {\n    this.buffer = data;\n    this.pos = 0;\n    this.end = data.length;\n    this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n  }\n  BinaryCMapStream.prototype = {\n    readByte: function readByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.buffer[this.pos++];\n    },\n    readNumber: function readNumber() {\n      var n = 0;\n      var last;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        n = n << 7 | b & 0x7F;\n      } while (!last);\n      return n;\n    },\n    readSigned: function readSigned() {\n      var n = this.readNumber();\n      return n & 1 ? ~(n >>> 1) : n >>> 1;\n    },\n    readHex: function readHex(num, size) {\n      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n      this.pos += size + 1;\n    },\n    readHexNumber: function readHexNumber(num, size) {\n      var last;\n      var stack = this.tmpBuf,\n          sp = 0;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        stack[sp++] = b & 0x7F;\n      } while (!last);\n      var i = size,\n          buffer = 0,\n          bufferSize = 0;\n      while (i >= 0) {\n        while (bufferSize < 8 && stack.length > 0) {\n          buffer = stack[--sp] << bufferSize | buffer;\n          bufferSize += 7;\n        }\n        num[i] = buffer & 255;\n        i--;\n        buffer >>= 8;\n        bufferSize -= 8;\n      }\n    },\n    readHexSigned: function readHexSigned(num, size) {\n      this.readHexNumber(num, size);\n      var sign = num[size] & 1 ? 255 : 0;\n      var c = 0;\n      for (var i = 0; i <= size; i++) {\n        c = (c & 1) << 8 | num[i];\n        num[i] = c >> 1 ^ sign;\n      }\n    },\n    readString: function readString() {\n      var len = this.readNumber();\n      var s = '';\n      for (var i = 0; i < len; i++) {\n        s += String.fromCharCode(this.readNumber());\n      }\n      return s;\n    }\n  };\n  function processBinaryCMap(data, cMap, extend) {\n    return new Promise(function (resolve, reject) {\n      var stream = new BinaryCMapStream(data);\n      var header = stream.readByte();\n      cMap.vertical = !!(header & 1);\n      var useCMap = null;\n      var start = new Uint8Array(MAX_NUM_SIZE);\n      var end = new Uint8Array(MAX_NUM_SIZE);\n      var char = new Uint8Array(MAX_NUM_SIZE);\n      var charCode = new Uint8Array(MAX_NUM_SIZE);\n      var tmp = new Uint8Array(MAX_NUM_SIZE);\n      var code;\n      var b;\n      while ((b = stream.readByte()) >= 0) {\n        var type = b >> 5;\n        if (type === 7) {\n          switch (b & 0x1F) {\n            case 0:\n              stream.readString();\n              break;\n            case 1:\n              useCMap = stream.readString();\n              break;\n          }\n          continue;\n        }\n        var sequence = !!(b & 0x10);\n        var dataSize = b & 15;\n        if (dataSize + 1 > MAX_NUM_SIZE) {\n          throw new Error('processBinaryCMap: Invalid dataSize.');\n        }\n        var ucs2DataSize = 1;\n        var subitemsCount = stream.readNumber();\n        var i;\n        switch (type) {\n          case 0:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            }\n            break;\n          case 1:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            stream.readNumber();\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              stream.readNumber();\n            }\n            break;\n          case 2:\n            stream.readHex(char, dataSize);\n            code = stream.readNumber();\n            cMap.mapOne(hexToInt(char, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, dataSize);\n                addHex(char, tmp, dataSize);\n              }\n              code = stream.readSigned() + (code + 1);\n              cMap.mapOne(hexToInt(char, dataSize), code);\n            }\n            break;\n          case 3:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            code = stream.readNumber();\n            cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, dataSize);\n                addHex(start, end, dataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              code = stream.readNumber();\n              cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            }\n            break;\n          case 4:\n            stream.readHex(char, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, ucs2DataSize);\n                addHex(char, tmp, ucs2DataSize);\n              }\n              incHex(charCode, dataSize);\n              stream.readHexSigned(tmp, dataSize);\n              addHex(charCode, tmp, dataSize);\n              cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          case 5:\n            stream.readHex(start, ucs2DataSize);\n            stream.readHexNumber(end, ucs2DataSize);\n            addHex(end, start, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, ucs2DataSize);\n                addHex(start, end, ucs2DataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, ucs2DataSize);\n              addHex(end, start, ucs2DataSize);\n              stream.readHex(charCode, dataSize);\n              cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          default:\n            reject(new Error('processBinaryCMap: Unknown type: ' + type));\n            return;\n        }\n      }\n      if (useCMap) {\n        resolve(extend(useCMap));\n        return;\n      }\n      resolve(cMap);\n    });\n  }\n  function BinaryCMapReader() {}\n  BinaryCMapReader.prototype = { process: processBinaryCMap };\n  return BinaryCMapReader;\n}();\nvar CMapFactory = function CMapFactoryClosure() {\n  function strToInt(str) {\n    var a = 0;\n    for (var i = 0; i < str.length; i++) {\n      a = a << 8 | str.charCodeAt(i);\n    }\n    return a >>> 0;\n  }\n  function expectString(obj) {\n    if (!(0, _util.isString)(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected string.');\n    }\n  }\n  function expectInt(obj) {\n    if (!Number.isInteger(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected int.');\n    }\n  }\n  function parseBfChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseBfRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      if (Number.isInteger(obj) || (0, _util.isString)(obj)) {\n        var dstLow = Number.isInteger(obj) ? String.fromCharCode(obj) : obj;\n        cMap.mapBfRange(low, high, dstLow);\n      } else if ((0, _primitives.isCmd)(obj, '[')) {\n        obj = lexer.getObj();\n        var array = [];\n        while (!(0, _primitives.isCmd)(obj, ']') && !(0, _primitives.isEOF)(obj)) {\n          array.push(obj);\n          obj = lexer.getObj();\n        }\n        cMap.mapBfRangeToArray(low, high, array);\n      } else {\n        break;\n      }\n    }\n    throw new _util.FormatError('Invalid bf range.');\n  }\n  function parseCidChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseCidRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dstLow = obj;\n      cMap.mapCidRange(low, high, dstLow);\n    }\n  }\n  function parseCodespaceRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcodespacerange')) {\n        return;\n      }\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var high = strToInt(obj);\n      cMap.addCodespaceRange(obj.length, low, high);\n    }\n    throw new _util.FormatError('Invalid codespace range.');\n  }\n  function parseWMode(cMap, lexer) {\n    var obj = lexer.getObj();\n    if (Number.isInteger(obj)) {\n      cMap.vertical = !!obj;\n    }\n  }\n  function parseCMapName(cMap, lexer) {\n    var obj = lexer.getObj();\n    if ((0, _primitives.isName)(obj) && (0, _util.isString)(obj.name)) {\n      cMap.name = obj.name;\n    }\n  }\n  function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\n    var previous;\n    var embeddedUseCMap;\n    objLoop: while (true) {\n      try {\n        var obj = lexer.getObj();\n        if ((0, _primitives.isEOF)(obj)) {\n          break;\n        } else if ((0, _primitives.isName)(obj)) {\n          if (obj.name === 'WMode') {\n            parseWMode(cMap, lexer);\n          } else if (obj.name === 'CMapName') {\n            parseCMapName(cMap, lexer);\n          }\n          previous = obj;\n        } else if ((0, _primitives.isCmd)(obj)) {\n          switch (obj.cmd) {\n            case 'endcmap':\n              break objLoop;\n            case 'usecmap':\n              if ((0, _primitives.isName)(previous)) {\n                embeddedUseCMap = previous.name;\n              }\n              break;\n            case 'begincodespacerange':\n              parseCodespaceRange(cMap, lexer);\n              break;\n            case 'beginbfchar':\n              parseBfChar(cMap, lexer);\n              break;\n            case 'begincidchar':\n              parseCidChar(cMap, lexer);\n              break;\n            case 'beginbfrange':\n              parseBfRange(cMap, lexer);\n              break;\n            case 'begincidrange':\n              parseCidRange(cMap, lexer);\n              break;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid cMap data: ' + ex);\n        continue;\n      }\n    }\n    if (!useCMap && embeddedUseCMap) {\n      useCMap = embeddedUseCMap;\n    }\n    if (useCMap) {\n      return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n    }\n    return Promise.resolve(cMap);\n  }\n  function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\n    return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\n      cMap.useCMap = newCMap;\n      if (cMap.numCodespaceRanges === 0) {\n        var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n        for (var i = 0; i < useCodespaceRanges.length; i++) {\n          cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n        }\n        cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n      }\n      cMap.useCMap.forEach(function (key, value) {\n        if (!cMap.contains(key)) {\n          cMap.mapOne(key, cMap.useCMap.lookup(key));\n        }\n      });\n      return cMap;\n    });\n  }\n  function createBuiltInCMap(name, fetchBuiltInCMap) {\n    if (name === 'Identity-H') {\n      return Promise.resolve(new IdentityCMap(false, 2));\n    } else if (name === 'Identity-V') {\n      return Promise.resolve(new IdentityCMap(true, 2));\n    }\n    if (!BUILT_IN_CMAPS.includes(name)) {\n      return Promise.reject(new Error('Unknown CMap name: ' + name));\n    }\n    if (!fetchBuiltInCMap) {\n      return Promise.reject(new Error('Built-in CMap parameters are not provided.'));\n    }\n    return fetchBuiltInCMap(name).then(function (data) {\n      var cMapData = data.cMapData,\n          compressionType = data.compressionType;\n      var cMap = new CMap(true);\n      if (compressionType === _util.CMapCompressionType.BINARY) {\n        return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\n          return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n        });\n      }\n      if (compressionType === _util.CMapCompressionType.NONE) {\n        var lexer = new _parser.Lexer(new _stream.Stream(cMapData));\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\n      }\n      return Promise.reject(new Error('TODO: Only BINARY/NONE CMap compression is currently supported.'));\n    });\n  }\n  return {\n    create: function create(params) {\n      var encoding = params.encoding;\n      var fetchBuiltInCMap = params.fetchBuiltInCMap;\n      var useCMap = params.useCMap;\n      if ((0, _primitives.isName)(encoding)) {\n        return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\n      } else if ((0, _primitives.isStream)(encoding)) {\n        var cMap = new CMap();\n        var lexer = new _parser.Lexer(encoding);\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\n          if (parsedCMap.isIdentityCMap) {\n            return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\n          }\n          return parsedCMap;\n        });\n      }\n      return Promise.reject(new Error('Encoding required.'));\n    }\n  };\n}();\nexports.CMap = CMap;\nexports.IdentityCMap = IdentityCMap;\nexports.CMapFactory = CMapFactory;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/cmap.js\n// module id = tUWx\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegStream = undefined;\n\nvar _util = require('../shared/util');\n\nvar _stream = require('./stream');\n\nvar _primitives = require('./primitives');\n\nvar _jpg = require('./jpg');\n\nvar JpegStream = function JpegStreamClosure() {\n  function JpegStream(stream, maybeLength, dict, params) {\n    var ch = void 0;\n    while ((ch = stream.getByte()) !== -1) {\n      if (ch === 0xFF) {\n        stream.skip(-1);\n        break;\n      }\n    }\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpegStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpegStream.prototype, 'bytes', {\n    get: function JpegStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpegStream.prototype.ensureBuffer = function (requested) {};\n  JpegStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpegImage = new _jpg.JpegImage();\n    var decodeArr = this.dict.getArray('Decode', 'D');\n    if (this.forceRGB && Array.isArray(decodeArr)) {\n      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n      var decodeArrLength = decodeArr.length;\n      var transform = new Int32Array(decodeArrLength);\n      var transformNeeded = false;\n      var maxValue = (1 << bitsPerComponent) - 1;\n      for (var i = 0; i < decodeArrLength; i += 2) {\n        transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n        transform[i + 1] = decodeArr[i] * maxValue | 0;\n        if (transform[i] !== 256 || transform[i + 1] !== 0) {\n          transformNeeded = true;\n        }\n      }\n      if (transformNeeded) {\n        jpegImage.decodeTransform = transform;\n      }\n    }\n    if ((0, _primitives.isDict)(this.params)) {\n      var colorTransform = this.params.get('ColorTransform');\n      if (Number.isInteger(colorTransform)) {\n        jpegImage.colorTransform = colorTransform;\n      }\n    }\n    jpegImage.parse(this.bytes);\n    var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n    this.buffer = data;\n    this.bufferLength = data.length;\n    this.eof = true;\n  };\n  JpegStream.prototype.getIR = function () {\n    var forceDataSchema = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    return (0, _util.createObjectURL)(this.bytes, 'image/jpeg', forceDataSchema);\n  };\n  return JpegStream;\n}();\nexports.JpegStream = JpegStream;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/jpeg_stream.js\n// module id = vWh0\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxStream = undefined;\n\nvar _primitives = require('./primitives');\n\nvar _ccitt = require('./ccitt');\n\nvar _stream = require('./stream');\n\nvar CCITTFaxStream = function CCITTFaxStreamClosure() {\n  function CCITTFaxStream(str, maybeLength, params) {\n    this.str = str;\n    this.dict = str.dict;\n    if (!(0, _primitives.isDict)(params)) {\n      params = _primitives.Dict.empty;\n    }\n    var source = {\n      next: function next() {\n        return str.getByte();\n      }\n    };\n    this.ccittFaxDecoder = new _ccitt.CCITTFaxDecoder(source, {\n      K: params.get('K'),\n      EndOfLine: params.get('EndOfLine'),\n      EncodedByteAlign: params.get('EncodedByteAlign'),\n      Columns: params.get('Columns'),\n      Rows: params.get('Rows'),\n      EndOfBlock: params.get('EndOfBlock'),\n      BlackIs1: params.get('BlackIs1')\n    });\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  CCITTFaxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  CCITTFaxStream.prototype.readBlock = function () {\n    while (!this.eof) {\n      var c = this.ccittFaxDecoder.readNextChar();\n      if (c === -1) {\n        this.eof = true;\n        return;\n      }\n      this.ensureBuffer(this.bufferLength + 1);\n      this.buffer[this.bufferLength++] = c;\n    }\n  };\n  return CCITTFaxStream;\n}();\nexports.CCITTFaxStream = CCITTFaxStream;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/ccitt_stream.js\n// module id = vzKh\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxDecoder = undefined;\n\nvar _util = require('../shared/util');\n\nvar CCITTFaxDecoder = function CCITTFaxDecoder() {\n  var ccittEOL = -2;\n  var ccittEOF = -1;\n  var twoDimPass = 0;\n  var twoDimHoriz = 1;\n  var twoDimVert0 = 2;\n  var twoDimVertR1 = 3;\n  var twoDimVertL1 = 4;\n  var twoDimVertR2 = 5;\n  var twoDimVertL2 = 6;\n  var twoDimVertR3 = 7;\n  var twoDimVertL3 = 8;\n  var twoDimTable = [[-1, -1], [-1, -1], [7, twoDimVertL3], [7, twoDimVertR3], [6, twoDimVertL2], [6, twoDimVertL2], [6, twoDimVertR2], [6, twoDimVertR2], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0]];\n  var whiteTable1 = [[-1, -1], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]];\n  var whiteTable2 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]];\n  var blackTable1 = [[-1, -1], [-1, -1], [12, ccittEOL], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]];\n  var blackTable2 = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]];\n  var blackTable3 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];\n  function CCITTFaxDecoder(source) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!source || typeof source.next !== 'function') {\n      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n    }\n    this.source = source;\n    this.eof = false;\n    this.encoding = options['K'] || 0;\n    this.eoline = options['EndOfLine'] || false;\n    this.byteAlign = options['EncodedByteAlign'] || false;\n    this.columns = options['Columns'] || 1728;\n    this.rows = options['Rows'] || 0;\n    var eoblock = options['EndOfBlock'];\n    if (eoblock === null || eoblock === undefined) {\n      eoblock = true;\n    }\n    this.eoblock = eoblock;\n    this.black = options['BlackIs1'] || false;\n    this.codingLine = new Uint32Array(this.columns + 1);\n    this.refLine = new Uint32Array(this.columns + 2);\n    this.codingLine[0] = this.columns;\n    this.codingPos = 0;\n    this.row = 0;\n    this.nextLine2D = this.encoding < 0;\n    this.inputBits = 0;\n    this.inputBuf = 0;\n    this.outputBits = 0;\n    this.rowsDone = false;\n    var code1 = void 0;\n    while ((code1 = this._lookBits(12)) === 0) {\n      this._eatBits(1);\n    }\n    if (code1 === 1) {\n      this._eatBits(12);\n    }\n    if (this.encoding > 0) {\n      this.nextLine2D = !this._lookBits(1);\n      this._eatBits(1);\n    }\n  }\n  CCITTFaxDecoder.prototype = {\n    readNextChar: function readNextChar() {\n      if (this.eof) {\n        return -1;\n      }\n      var refLine = this.refLine;\n      var codingLine = this.codingLine;\n      var columns = this.columns;\n      var refPos = void 0,\n          blackPixels = void 0,\n          bits = void 0,\n          i = void 0;\n      if (this.outputBits === 0) {\n        if (this.rowsDone) {\n          this.eof = true;\n        }\n        if (this.eof) {\n          return -1;\n        }\n        this.err = false;\n        var code1 = void 0,\n            code2 = void 0,\n            code3 = void 0;\n        if (this.nextLine2D) {\n          for (i = 0; codingLine[i] < columns; ++i) {\n            refLine[i] = codingLine[i];\n          }\n          refLine[i++] = columns;\n          refLine[i] = columns;\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          refPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = this._getTwoDimCode();\n            switch (code1) {\n              case twoDimPass:\n                this._addPixels(refLine[refPos + 1], blackPixels);\n                if (refLine[refPos + 1] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimHoriz:\n                code1 = code2 = 0;\n                if (blackPixels) {\n                  do {\n                    code1 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                } else {\n                  do {\n                    code1 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                }\n                this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n                if (codingLine[this.codingPos] < columns) {\n                  this._addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n                }\n                while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimVertR3:\n                this._addPixels(refLine[refPos] + 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR2:\n                this._addPixels(refLine[refPos] + 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR1:\n                this._addPixels(refLine[refPos] + 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVert0:\n                this._addPixels(refLine[refPos], blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL3:\n                this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL2:\n                this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL1:\n                this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case ccittEOF:\n                this._addPixels(columns, 0);\n                this.eof = true;\n                break;\n              default:\n                (0, _util.info)('bad 2d code');\n                this._addPixels(columns, 0);\n                this.err = true;\n            }\n          }\n        } else {\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = 0;\n            if (blackPixels) {\n              do {\n                code1 += code3 = this._getBlackCode();\n              } while (code3 >= 64);\n            } else {\n              do {\n                code1 += code3 = this._getWhiteCode();\n              } while (code3 >= 64);\n            }\n            this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n            blackPixels ^= 1;\n          }\n        }\n        var gotEOL = false;\n        if (this.byteAlign) {\n          this.inputBits &= ~7;\n        }\n        if (!this.eoblock && this.row === this.rows - 1) {\n          this.rowsDone = true;\n        } else {\n          code1 = this._lookBits(12);\n          if (this.eoline) {\n            while (code1 !== ccittEOF && code1 !== 1) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          } else {\n            while (code1 === 0) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          }\n          if (code1 === 1) {\n            this._eatBits(12);\n            gotEOL = true;\n          } else if (code1 === ccittEOF) {\n            this.eof = true;\n          }\n        }\n        if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n          this.nextLine2D = !this._lookBits(1);\n          this._eatBits(1);\n        }\n        if (this.eoblock && gotEOL && this.byteAlign) {\n          code1 = this._lookBits(12);\n          if (code1 === 1) {\n            this._eatBits(12);\n            if (this.encoding > 0) {\n              this._lookBits(1);\n              this._eatBits(1);\n            }\n            if (this.encoding >= 0) {\n              for (i = 0; i < 4; ++i) {\n                code1 = this._lookBits(12);\n                if (code1 !== 1) {\n                  (0, _util.info)('bad rtc code: ' + code1);\n                }\n                this._eatBits(12);\n                if (this.encoding > 0) {\n                  this._lookBits(1);\n                  this._eatBits(1);\n                }\n              }\n            }\n            this.eof = true;\n          }\n        } else if (this.err && this.eoline) {\n          while (true) {\n            code1 = this._lookBits(13);\n            if (code1 === ccittEOF) {\n              this.eof = true;\n              return -1;\n            }\n            if (code1 >> 1 === 1) {\n              break;\n            }\n            this._eatBits(1);\n          }\n          this._eatBits(12);\n          if (this.encoding > 0) {\n            this._eatBits(1);\n            this.nextLine2D = !(code1 & 1);\n          }\n        }\n        if (codingLine[0] > 0) {\n          this.outputBits = codingLine[this.codingPos = 0];\n        } else {\n          this.outputBits = codingLine[this.codingPos = 1];\n        }\n        this.row++;\n      }\n      var c = void 0;\n      if (this.outputBits >= 8) {\n        c = this.codingPos & 1 ? 0 : 0xFF;\n        this.outputBits -= 8;\n        if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n          this.codingPos++;\n          this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n        }\n      } else {\n        bits = 8;\n        c = 0;\n        do {\n          if (this.outputBits > bits) {\n            c <<= bits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - bits;\n            }\n            this.outputBits -= bits;\n            bits = 0;\n          } else {\n            c <<= this.outputBits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - this.outputBits;\n            }\n            bits -= this.outputBits;\n            this.outputBits = 0;\n            if (codingLine[this.codingPos] < columns) {\n              this.codingPos++;\n              this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n            } else if (bits > 0) {\n              c <<= bits;\n              bits = 0;\n            }\n          }\n        } while (bits);\n      }\n      if (this.black) {\n        c ^= 0xFF;\n      }\n      return c;\n    },\n    _addPixels: function _addPixels(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _addPixelsNeg: function _addPixelsNeg(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      } else if (a1 < codingLine[codingPos]) {\n        if (a1 < 0) {\n          (0, _util.info)('invalid code');\n          this.err = true;\n          a1 = 0;\n        }\n        while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n          --codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _findTableCode: function _findTableCode(start, end, table, limit) {\n      var limitValue = limit || 0;\n      for (var i = start; i <= end; ++i) {\n        var code = this._lookBits(i);\n        if (code === ccittEOF) {\n          return [true, 1, false];\n        }\n        if (i < end) {\n          code <<= end - i;\n        }\n        if (!limitValue || code >= limitValue) {\n          var p = table[code - limitValue];\n          if (p[0] === i) {\n            this._eatBits(i);\n            return [true, p[1], true];\n          }\n        }\n      }\n      return [false, 0, false];\n    },\n    _getTwoDimCode: function _getTwoDimCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(7);\n        p = twoDimTable[code];\n        if (p && p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 7, twoDimTable);\n        if (result[0] && result[2]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('Bad two dim code');\n      return ccittEOF;\n    },\n    _getWhiteCode: function _getWhiteCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(12);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 5 === 0) {\n          p = whiteTable1[code];\n        } else {\n          p = whiteTable2[code >> 3];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 9, whiteTable2);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(11, 12, whiteTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad white code');\n      this._eatBits(1);\n      return 1;\n    },\n    _getBlackCode: function _getBlackCode() {\n      var code = void 0,\n          p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(13);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 7 === 0) {\n          p = blackTable1[code];\n        } else if (code >> 9 === 0 && code >> 7 !== 0) {\n          p = blackTable2[(code >> 1) - 64];\n        } else {\n          p = blackTable3[code >> 7];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(2, 6, blackTable3);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(7, 12, blackTable2, 64);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(10, 13, blackTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad black code');\n      this._eatBits(1);\n      return 1;\n    },\n    _lookBits: function _lookBits(n) {\n      var c = void 0;\n      while (this.inputBits < n) {\n        if ((c = this.source.next()) === -1) {\n          if (this.inputBits === 0) {\n            return ccittEOF;\n          }\n          return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n        }\n        this.inputBuf = this.inputBuf << 8 | c;\n        this.inputBits += 8;\n      }\n      return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n    },\n    _eatBits: function _eatBits(n) {\n      if ((this.inputBits -= n) < 0) {\n        this.inputBits = 0;\n      }\n    }\n  };\n  return CCITTFaxDecoder;\n}();\nexports.CCITTFaxDecoder = CCITTFaxDecoder;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/ccitt.js\n// module id = wh20\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PartialEvaluator = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cmap = require('./cmap');\n\nvar _stream = require('./stream');\n\nvar _primitives = require('./primitives');\n\nvar _fonts = require('./fonts');\n\nvar _encodings = require('./encodings');\n\nvar _unicode = require('./unicode');\n\nvar _standard_fonts = require('./standard_fonts');\n\nvar _pattern = require('./pattern');\n\nvar _parser = require('./parser');\n\nvar _bidi = require('./bidi');\n\nvar _colorspace = require('./colorspace');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _metrics = require('./metrics');\n\nvar _function = require('./function');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _murmurhash = require('./murmurhash3');\n\nvar _operator_list = require('./operator_list');\n\nvar _image = require('./image');\n\nvar PartialEvaluator = function PartialEvaluatorClosure() {\n  var DefaultPartialEvaluatorOptions = {\n    forceDataSchema: false,\n    maxImageSize: -1,\n    disableFontFace: false,\n    nativeImageDecoderSupport: _util.NativeImageDecoding.DECODE,\n    ignoreErrors: false,\n    isEvalSupported: true\n  };\n  function NativeImageDecoder(_ref) {\n    var xref = _ref.xref,\n        resources = _ref.resources,\n        handler = _ref.handler,\n        _ref$forceDataSchema = _ref.forceDataSchema,\n        forceDataSchema = _ref$forceDataSchema === undefined ? false : _ref$forceDataSchema,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.xref = xref;\n    this.resources = resources;\n    this.handler = handler;\n    this.forceDataSchema = forceDataSchema;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n  }\n  NativeImageDecoder.prototype = {\n    canDecode: function canDecode(image) {\n      return image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources, this.pdfFunctionFactory);\n    },\n    decode: function decode(image) {\n      var dict = image.dict;\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      colorSpace = _colorspace.ColorSpace.parse(colorSpace, this.xref, this.resources, this.pdfFunctionFactory);\n      return this.handler.sendWithPromise('JpegDecode', [image.getIR(this.forceDataSchema), colorSpace.numComps]).then(function (_ref2) {\n        var data = _ref2.data,\n            width = _ref2.width,\n            height = _ref2.height;\n\n        return new _stream.Stream(data, 0, data.length, image.dict);\n      });\n    }\n  };\n  NativeImageDecoder.isSupported = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  NativeImageDecoder.isDecodable = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  function PartialEvaluator(_ref3) {\n    var _this = this;\n\n    var pdfManager = _ref3.pdfManager,\n        xref = _ref3.xref,\n        handler = _ref3.handler,\n        pageIndex = _ref3.pageIndex,\n        idFactory = _ref3.idFactory,\n        fontCache = _ref3.fontCache,\n        builtInCMapCache = _ref3.builtInCMapCache,\n        _ref3$options = _ref3.options,\n        options = _ref3$options === undefined ? null : _ref3$options,\n        pdfFunctionFactory = _ref3.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.handler = handler;\n    this.pageIndex = pageIndex;\n    this.idFactory = idFactory;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.options = options || DefaultPartialEvaluatorOptions;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.fetchBuiltInCMap = function (name) {\n      var cachedCMap = _this.builtInCMapCache[name];\n      if (cachedCMap) {\n        return Promise.resolve(cachedCMap);\n      }\n      return _this.handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\n        if (data.compressionType !== _util.CMapCompressionType.NONE) {\n          _this.builtInCMapCache[name] = data;\n        }\n        return data;\n      });\n    };\n  }\n  var TIME_SLOT_DURATION_MS = 20;\n  var CHECK_TIME_EVERY = 100;\n  function TimeSlotManager() {\n    this.reset();\n  }\n  TimeSlotManager.prototype = {\n    check: function TimeSlotManager_check() {\n      if (++this.checked < CHECK_TIME_EVERY) {\n        return false;\n      }\n      this.checked = 0;\n      return this.endTime <= Date.now();\n    },\n    reset: function TimeSlotManager_reset() {\n      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n      this.checked = 0;\n    }\n  };\n  function normalizeBlendMode(value) {\n    if (!(0, _primitives.isName)(value)) {\n      return 'source-over';\n    }\n    switch (value.name) {\n      case 'Normal':\n      case 'Compatible':\n        return 'source-over';\n      case 'Multiply':\n        return 'multiply';\n      case 'Screen':\n        return 'screen';\n      case 'Overlay':\n        return 'overlay';\n      case 'Darken':\n        return 'darken';\n      case 'Lighten':\n        return 'lighten';\n      case 'ColorDodge':\n        return 'color-dodge';\n      case 'ColorBurn':\n        return 'color-burn';\n      case 'HardLight':\n        return 'hard-light';\n      case 'SoftLight':\n        return 'soft-light';\n      case 'Difference':\n        return 'difference';\n      case 'Exclusion':\n        return 'exclusion';\n      case 'Hue':\n        return 'hue';\n      case 'Saturation':\n        return 'saturation';\n      case 'Color':\n        return 'color';\n      case 'Luminosity':\n        return 'luminosity';\n    }\n    (0, _util.warn)('Unsupported blend mode: ' + value.name);\n    return 'source-over';\n  }\n  var deferred = Promise.resolve();\n  var TILING_PATTERN = 1,\n      SHADING_PATTERN = 2;\n  PartialEvaluator.prototype = {\n    clone: function clone() {\n      var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultPartialEvaluatorOptions;\n\n      var newEvaluator = Object.create(this);\n      newEvaluator.options = newOptions;\n      return newEvaluator;\n    },\n\n    hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n      if (!(0, _primitives.isDict)(resources)) {\n        return false;\n      }\n      var processed = Object.create(null);\n      if (resources.objId) {\n        processed[resources.objId] = true;\n      }\n      var nodes = [resources],\n          xref = this.xref;\n      while (nodes.length) {\n        var key, i, ii;\n        var node = nodes.shift();\n        var graphicStates = node.get('ExtGState');\n        if ((0, _primitives.isDict)(graphicStates)) {\n          var graphicStatesKeys = graphicStates.getKeys();\n          for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n            key = graphicStatesKeys[i];\n            var graphicState = graphicStates.get(key);\n            var bm = graphicState.get('BM');\n            if ((0, _primitives.isName)(bm) && bm.name !== 'Normal') {\n              return true;\n            }\n          }\n        }\n        var xObjects = node.get('XObject');\n        if (!(0, _primitives.isDict)(xObjects)) {\n          continue;\n        }\n        var xObjectsKeys = xObjects.getKeys();\n        for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n          key = xObjectsKeys[i];\n          var xObject = xObjects.getRaw(key);\n          if ((0, _primitives.isRef)(xObject)) {\n            if (processed[xObject.toString()]) {\n              continue;\n            }\n            xObject = xref.fetch(xObject);\n          }\n          if (!(0, _primitives.isStream)(xObject)) {\n            continue;\n          }\n          if (xObject.dict.objId) {\n            if (processed[xObject.dict.objId]) {\n              continue;\n            }\n            processed[xObject.dict.objId] = true;\n          }\n          var xResources = xObject.dict.get('Resources');\n          if ((0, _primitives.isDict)(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n            nodes.push(xResources);\n            if (xResources.objId) {\n              processed[xResources.objId] = true;\n            }\n          }\n        }\n      }\n      return false;\n    },\n    buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n      var dict = xobj.dict;\n      var matrix = dict.getArray('Matrix');\n      var bbox = dict.getArray('BBox');\n      var group = dict.get('Group');\n      if (group) {\n        var groupOptions = {\n          matrix: matrix,\n          bbox: bbox,\n          smask: smask,\n          isolated: false,\n          knockout: false\n        };\n        var groupSubtype = group.get('S');\n        var colorSpace = null;\n        if ((0, _primitives.isName)(groupSubtype, 'Transparency')) {\n          groupOptions.isolated = group.get('I') || false;\n          groupOptions.knockout = group.get('K') || false;\n          if (group.has('CS')) {\n            colorSpace = _colorspace.ColorSpace.parse(group.get('CS'), this.xref, resources, this.pdfFunctionFactory);\n          }\n        }\n        if (smask && smask.backdrop) {\n          colorSpace = colorSpace || _colorspace.ColorSpace.singletons.rgb;\n          smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n        }\n        operatorList.addOp(_util.OPS.beginGroup, [groupOptions]);\n      }\n      operatorList.addOp(_util.OPS.paintFormXObjectBegin, [matrix, bbox]);\n      return this.getOperatorList({\n        stream: xobj,\n        task: task,\n        resources: dict.get('Resources') || resources,\n        operatorList: operatorList,\n        initialState: initialState\n      }).then(function () {\n        operatorList.addOp(_util.OPS.paintFormXObjectEnd, []);\n        if (group) {\n          operatorList.addOp(_util.OPS.endGroup, [groupOptions]);\n        }\n      });\n    },\n    buildPaintImageXObject: function buildPaintImageXObject(_ref4) {\n      var _this2 = this;\n\n      var resources = _ref4.resources,\n          image = _ref4.image,\n          _ref4$isInline = _ref4.isInline,\n          isInline = _ref4$isInline === undefined ? false : _ref4$isInline,\n          operatorList = _ref4.operatorList,\n          cacheKey = _ref4.cacheKey,\n          imageCache = _ref4.imageCache,\n          _ref4$forceDisableNat = _ref4.forceDisableNativeImageDecoder,\n          forceDisableNativeImageDecoder = _ref4$forceDisableNat === undefined ? false : _ref4$forceDisableNat;\n\n      var dict = image.dict;\n      var w = dict.get('Width', 'W');\n      var h = dict.get('Height', 'H');\n      if (!(w && (0, _util.isNum)(w)) || !(h && (0, _util.isNum)(h))) {\n        (0, _util.warn)('Image dimensions are missing, or not numbers.');\n        return Promise.resolve();\n      }\n      var maxImageSize = this.options.maxImageSize;\n      if (maxImageSize !== -1 && w * h > maxImageSize) {\n        (0, _util.warn)('Image exceeded maximum allowed size and was removed.');\n        return Promise.resolve();\n      }\n      var imageMask = dict.get('ImageMask', 'IM') || false;\n      var imgData, args;\n      if (imageMask) {\n        var width = dict.get('Width', 'W');\n        var height = dict.get('Height', 'H');\n        var bitStrideLength = width + 7 >> 3;\n        var imgArray = image.getBytes(bitStrideLength * height);\n        var decode = dict.getArray('Decode', 'D');\n        imgData = _image.PDFImage.createMask({\n          imgArray: imgArray,\n          width: width,\n          height: height,\n          imageIsFromDecodeStream: image instanceof _stream.DecodeStream,\n          inverseDecode: !!decode && decode[0] > 0\n        });\n        imgData.cached = true;\n        args = [imgData];\n        operatorList.addOp(_util.OPS.paintImageMaskXObject, args);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintImageMaskXObject,\n            args: args\n          };\n        }\n        return Promise.resolve();\n      }\n      var softMask = dict.get('SMask', 'SM') || false;\n      var mask = dict.get('Mask') || false;\n      var SMALL_IMAGE_DIMENSIONS = 200;\n      if (isInline && !softMask && !mask && !(image instanceof _jpeg_stream.JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n        var imageObj = new _image.PDFImage({\n          xref: this.xref,\n          res: resources,\n          image: image,\n          isInline: isInline,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n        imgData = imageObj.createImageData(true);\n        operatorList.addOp(_util.OPS.paintInlineImageXObject, [imgData]);\n        return Promise.resolve();\n      }\n      var nativeImageDecoderSupport = forceDisableNativeImageDecoder ? _util.NativeImageDecoding.NONE : this.options.nativeImageDecoderSupport;\n      var objId = 'img_' + this.idFactory.createObjId();\n      if (nativeImageDecoderSupport !== _util.NativeImageDecoding.NONE && !softMask && !mask && image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources, this.pdfFunctionFactory)) {\n        return this.handler.sendWithPromise('obj', [objId, this.pageIndex, 'JpegStream', image.getIR(this.options.forceDataSchema)]).then(function () {\n          operatorList.addDependency(objId);\n          args = [objId, w, h];\n          operatorList.addOp(_util.OPS.paintJpegXObject, args);\n          if (cacheKey) {\n            imageCache[cacheKey] = {\n              fn: _util.OPS.paintJpegXObject,\n              args: args\n            };\n          }\n        }, function (reason) {\n          (0, _util.warn)('Native JPEG decoding failed -- trying to recover: ' + (reason && reason.message));\n          return _this2.buildPaintImageXObject({\n            resources: resources,\n            image: image,\n            isInline: isInline,\n            operatorList: operatorList,\n            cacheKey: cacheKey,\n            imageCache: imageCache,\n            forceDisableNativeImageDecoder: true\n          });\n        });\n      }\n      var nativeImageDecoder = null;\n      if (nativeImageDecoderSupport === _util.NativeImageDecoding.DECODE && (image instanceof _jpeg_stream.JpegStream || mask instanceof _jpeg_stream.JpegStream || softMask instanceof _jpeg_stream.JpegStream)) {\n        nativeImageDecoder = new NativeImageDecoder({\n          xref: this.xref,\n          resources: resources,\n          handler: this.handler,\n          forceDataSchema: this.options.forceDataSchema,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n      }\n      operatorList.addDependency(objId);\n      args = [objId, w, h];\n      _image.PDFImage.buildImage({\n        handler: this.handler,\n        xref: this.xref,\n        res: resources,\n        image: image,\n        isInline: isInline,\n        nativeDecoder: nativeImageDecoder,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      }).then(function (imageObj) {\n        var imgData = imageObj.createImageData(false);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', imgData], [imgData.data.buffer]);\n      }).catch(function (reason) {\n        (0, _util.warn)('Unable to decode image: ' + reason);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', null]);\n      });\n      operatorList.addOp(_util.OPS.paintImageXObject, args);\n      if (cacheKey) {\n        imageCache[cacheKey] = {\n          fn: _util.OPS.paintImageXObject,\n          args: args\n        };\n      }\n      return Promise.resolve();\n    },\n\n    handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n      var smaskContent = smask.get('G');\n      var smaskOptions = {\n        subtype: smask.get('S').name,\n        backdrop: smask.get('BC')\n      };\n      var transferObj = smask.get('TR');\n      if ((0, _function.isPDFFunction)(transferObj)) {\n        var transferFn = this.pdfFunctionFactory.create(transferObj);\n        var transferMap = new Uint8Array(256);\n        var tmp = new Float32Array(1);\n        for (var i = 0; i < 256; i++) {\n          tmp[0] = i / 255;\n          transferFn(tmp, 0, tmp, 0);\n          transferMap[i] = tmp[0] * 255 | 0;\n        }\n        smaskOptions.transferMap = transferMap;\n      }\n      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n    },\n    handleTilingType: function handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n      var _this3 = this;\n\n      var tilingOpList = new _operator_list.OperatorList();\n      var resourcesArray = [patternDict.get('Resources'), resources];\n      var patternResources = _primitives.Dict.merge(this.xref, resourcesArray);\n      return this.getOperatorList({\n        stream: pattern,\n        task: task,\n        resources: patternResources,\n        operatorList: tilingOpList\n      }).then(function () {\n        return (0, _pattern.getTilingPatternIR)({\n          fnArray: tilingOpList.fnArray,\n          argsArray: tilingOpList.argsArray\n        }, patternDict, args);\n      }).then(function (tilingPatternIR) {\n        operatorList.addDependencies(tilingOpList.dependencies);\n        operatorList.addOp(fn, tilingPatternIR);\n      }, function (reason) {\n        if (_this3.options.ignoreErrors) {\n          _this3.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('handleTilingType - ignoring pattern: \"' + reason + '\".');\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n      var _this4 = this;\n\n      var fontName;\n      if (fontArgs) {\n        fontArgs = fontArgs.slice();\n        fontName = fontArgs[0].name;\n      }\n      return this.loadFont(fontName, fontRef, resources).then(function (translated) {\n        if (!translated.font.isType3Font) {\n          return translated;\n        }\n        return translated.loadType3Data(_this4, resources, operatorList, task).then(function () {\n          return translated;\n        }).catch(function (reason) {\n          _this4.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n          return new TranslatedFont('g_font_error', new _fonts.ErrorFont('Type3 font load error: ' + reason), translated.font);\n        });\n      }).then(function (translated) {\n        state.font = translated.font;\n        translated.send(_this4.handler);\n        return translated.loadedName;\n      });\n    },\n    handleText: function PartialEvaluator_handleText(chars, state) {\n      var _this5 = this;\n\n      var font = state.font;\n      var glyphs = font.charsToGlyphs(chars);\n      var isAddToPathSet = !!(state.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n      if (font.data && (isAddToPathSet || this.options.disableFontFace || state.fillColorSpace.name === 'Pattern')) {\n        var buildPath = function buildPath(fontChar) {\n          if (!font.renderer.hasBuiltPath(fontChar)) {\n            var path = font.renderer.getPathJs(fontChar);\n            _this5.handler.send('commonobj', [font.loadedName + '_path_' + fontChar, 'FontPath', path]);\n          }\n        };\n        for (var i = 0, ii = glyphs.length; i < ii; i++) {\n          var glyph = glyphs[i];\n          buildPath(glyph.fontChar);\n          var accent = glyph.accent;\n          if (accent && accent.fontChar) {\n            buildPath(accent.fontChar);\n          }\n        }\n      }\n      return glyphs;\n    },\n    setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, stateManager) {\n      var _this6 = this;\n\n      var gStateObj = [];\n      var gStateKeys = gState.getKeys();\n      var promise = Promise.resolve();\n\n      var _loop = function _loop() {\n        var key = gStateKeys[i];\n        var value = gState.get(key);\n        switch (key) {\n          case 'Type':\n            break;\n          case 'LW':\n          case 'LC':\n          case 'LJ':\n          case 'ML':\n          case 'D':\n          case 'RI':\n          case 'FL':\n          case 'CA':\n          case 'ca':\n            gStateObj.push([key, value]);\n            break;\n          case 'Font':\n            promise = promise.then(function () {\n              return _this6.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                gStateObj.push([key, [loadedName, value[1]]]);\n              });\n            });\n            break;\n          case 'BM':\n            gStateObj.push([key, normalizeBlendMode(value)]);\n            break;\n          case 'SMask':\n            if ((0, _primitives.isName)(value, 'None')) {\n              gStateObj.push([key, false]);\n              break;\n            }\n            if ((0, _primitives.isDict)(value)) {\n              promise = promise.then(function () {\n                return _this6.handleSMask(value, resources, operatorList, task, stateManager);\n              });\n              gStateObj.push([key, true]);\n            } else {\n              (0, _util.warn)('Unsupported SMask type');\n            }\n            break;\n          case 'OP':\n          case 'op':\n          case 'OPM':\n          case 'BG':\n          case 'BG2':\n          case 'UCR':\n          case 'UCR2':\n          case 'TR':\n          case 'TR2':\n          case 'HT':\n          case 'SM':\n          case 'SA':\n          case 'AIS':\n          case 'TK':\n            (0, _util.info)('graphic state operator ' + key);\n            break;\n          default:\n            (0, _util.info)('Unknown graphic state operator ' + key);\n            break;\n        }\n      };\n\n      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n        _loop();\n      }\n      return promise.then(function () {\n        if (gStateObj.length > 0) {\n          operatorList.addOp(_util.OPS.setGState, [gStateObj]);\n        }\n      });\n    },\n    loadFont: function PartialEvaluator_loadFont(fontName, font, resources) {\n      var _this7 = this;\n\n      function errorFont() {\n        return Promise.resolve(new TranslatedFont('g_font_error', new _fonts.ErrorFont('Font ' + fontName + ' is not available'), font));\n      }\n      var fontRef,\n          xref = this.xref;\n      if (font) {\n        if (!(0, _primitives.isRef)(font)) {\n          throw new Error('The \"font\" object should be a reference.');\n        }\n        fontRef = font;\n      } else {\n        var fontRes = resources.get('Font');\n        if (fontRes) {\n          fontRef = fontRes.getRaw(fontName);\n        } else {\n          (0, _util.warn)('fontRes not available');\n          return errorFont();\n        }\n      }\n      if (!fontRef) {\n        (0, _util.warn)('fontRef not available');\n        return errorFont();\n      }\n      if (this.fontCache.has(fontRef)) {\n        return this.fontCache.get(fontRef);\n      }\n      font = xref.fetchIfRef(fontRef);\n      if (!(0, _primitives.isDict)(font)) {\n        return errorFont();\n      }\n      if (font.translated) {\n        return font.translated;\n      }\n      var fontCapability = (0, _util.createPromiseCapability)();\n      var preEvaluatedFont = this.preEvaluateFont(font);\n      var descriptor = preEvaluatedFont.descriptor;\n      var fontRefIsRef = (0, _primitives.isRef)(fontRef),\n          fontID;\n      if (fontRefIsRef) {\n        fontID = fontRef.toString();\n      }\n      if ((0, _primitives.isDict)(descriptor)) {\n        if (!descriptor.fontAliases) {\n          descriptor.fontAliases = Object.create(null);\n        }\n        var fontAliases = descriptor.fontAliases;\n        var hash = preEvaluatedFont.hash;\n        if (fontAliases[hash]) {\n          var aliasFontRef = fontAliases[hash].aliasRef;\n          if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n            this.fontCache.putAlias(fontRef, aliasFontRef);\n            return this.fontCache.get(fontRef);\n          }\n        } else {\n          fontAliases[hash] = { fontID: _fonts.Font.getFontID() };\n        }\n        if (fontRefIsRef) {\n          fontAliases[hash].aliasRef = fontRef;\n        }\n        fontID = fontAliases[hash].fontID;\n      }\n      if (fontRefIsRef) {\n        this.fontCache.put(fontRef, fontCapability.promise);\n      } else {\n        if (!fontID) {\n          fontID = this.idFactory.createObjId();\n        }\n        this.fontCache.put('id_' + fontID, fontCapability.promise);\n      }\n      (0, _util.assert)(fontID, 'The \"fontID\" must be defined.');\n      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n      font.translated = fontCapability.promise;\n      var translatedPromise;\n      try {\n        translatedPromise = this.translateFont(preEvaluatedFont);\n      } catch (e) {\n        translatedPromise = Promise.reject(e);\n      }\n      translatedPromise.then(function (translatedFont) {\n        if (translatedFont.fontType !== undefined) {\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[translatedFont.fontType] = true;\n        }\n        fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n      }).catch(function (reason) {\n        _this7.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n        try {\n          var descriptor = preEvaluatedFont.descriptor;\n          var fontFile3 = descriptor && descriptor.get('FontFile3');\n          var subtype = fontFile3 && fontFile3.get('Subtype');\n          var fontType = (0, _fonts.getFontType)(preEvaluatedFont.type, subtype && subtype.name);\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[fontType] = true;\n        } catch (ex) {}\n        fontCapability.resolve(new TranslatedFont(font.loadedName, new _fonts.ErrorFont(reason instanceof Error ? reason.message : reason), font));\n      });\n      return fontCapability.promise;\n    },\n    buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n      var lastIndex = operatorList.length - 1;\n      if (!args) {\n        args = [];\n      }\n      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== _util.OPS.constructPath) {\n        operatorList.addOp(_util.OPS.constructPath, [[fn], args]);\n      } else {\n        var opArgs = operatorList.argsArray[lastIndex];\n        opArgs[0].push(fn);\n        Array.prototype.push.apply(opArgs[1], args);\n      }\n    },\n    handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task) {\n      var patternName = args[args.length - 1];\n      var pattern;\n      if ((0, _primitives.isName)(patternName) && (pattern = patterns.get(patternName.name))) {\n        var dict = (0, _primitives.isStream)(pattern) ? pattern.dict : pattern;\n        var typeNum = dict.get('PatternType');\n        if (typeNum === TILING_PATTERN) {\n          var color = cs.base ? cs.base.getRgb(args, 0) : null;\n          return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n        } else if (typeNum === SHADING_PATTERN) {\n          var shading = dict.get('Shading');\n          var matrix = dict.getArray('Matrix');\n          pattern = _pattern.Pattern.parseShading(shading, matrix, this.xref, resources, this.handler, this.pdfFunctionFactory);\n          operatorList.addOp(fn, pattern.getIR());\n          return Promise.resolve();\n        }\n        return Promise.reject(new Error('Unknown PatternType: ' + typeNum));\n      }\n      operatorList.addOp(fn, args);\n      return Promise.resolve();\n    },\n    getOperatorList: function getOperatorList(_ref5) {\n      var _this8 = this;\n\n      var stream = _ref5.stream,\n          task = _ref5.task,\n          resources = _ref5.resources,\n          operatorList = _ref5.operatorList,\n          _ref5$initialState = _ref5.initialState,\n          initialState = _ref5$initialState === undefined ? null : _ref5$initialState;\n\n      resources = resources || _primitives.Dict.empty;\n      initialState = initialState || new EvalState();\n      if (!operatorList) {\n        throw new Error('getOperatorList: missing \"operatorList\" parameter');\n      }\n      var self = this;\n      var xref = this.xref;\n      var imageCache = Object.create(null);\n      var xobjs = resources.get('XObject') || _primitives.Dict.empty;\n      var patterns = resources.get('Pattern') || _primitives.Dict.empty;\n      var stateManager = new StateManager(initialState);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var timeSlotManager = new TimeSlotManager();\n      function closePendingRestoreOPS(argument) {\n        for (var i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n          operatorList.addOp(_util.OPS.restore, []);\n        }\n      }\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          promise.then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            i,\n            ii,\n            cs;\n        while (!(stop = timeSlotManager.check())) {\n          operation.args = null;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          var args = operation.args;\n          var fn = operation.fn;\n          switch (fn | 0) {\n            case _util.OPS.paintXObject:\n              var name = args[0].name;\n              if (name && imageCache[name] !== undefined) {\n                operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n                args = null;\n                continue;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  operatorList.addOp(fn, args);\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name === 'Form') {\n                  stateManager.save();\n                  self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n                    stateManager.restore();\n                    resolveXObject();\n                  }, rejectXObject);\n                  return;\n                } else if (type.name === 'Image') {\n                  self.buildPaintImageXObject({\n                    resources: resources,\n                    image: xobj,\n                    operatorList: operatorList,\n                    cacheKey: name,\n                    imageCache: imageCache\n                  }).then(resolveXObject, rejectXObject);\n                  return;\n                } else if (type.name === 'PS') {\n                  (0, _util.info)('Ignored XObject subtype PS');\n                } else {\n                  throw new _util.FormatError('Unhandled XObject subtype ' + type.name);\n                }\n                resolveXObject();\n              }).catch(function (reason) {\n                if (self.options.ignoreErrors) {\n                  self.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n                  (0, _util.warn)('getOperatorList - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setFont:\n              var fontSize = args[1];\n              next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                operatorList.addOp(_util.OPS.setFont, [loadedName, fontSize]);\n              }));\n              return;\n            case _util.OPS.endInlineImage:\n              var cacheKey = args[0].cacheKey;\n              if (cacheKey) {\n                var cacheEntry = imageCache[cacheKey];\n                if (cacheEntry !== undefined) {\n                  operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n                  args = null;\n                  continue;\n                }\n              }\n              next(self.buildPaintImageXObject({\n                resources: resources,\n                image: args[0],\n                isInline: true,\n                operatorList: operatorList,\n                cacheKey: cacheKey,\n                imageCache: imageCache\n              }));\n              return;\n            case _util.OPS.showText:\n              args[0] = self.handleText(args[0], stateManager.state);\n              break;\n            case _util.OPS.showSpacedText:\n              var arr = args[0];\n              var combinedGlyphs = [];\n              var arrLength = arr.length;\n              var state = stateManager.state;\n              for (i = 0; i < arrLength; ++i) {\n                var arrItem = arr[i];\n                if ((0, _util.isString)(arrItem)) {\n                  Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n                } else if ((0, _util.isNum)(arrItem)) {\n                  combinedGlyphs.push(arrItem);\n                }\n              }\n              args[0] = combinedGlyphs;\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              operatorList.addOp(_util.OPS.setWordSpacing, [args.shift()]);\n              operatorList.addOp(_util.OPS.setCharSpacing, [args.shift()]);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.setTextRenderingMode:\n              stateManager.state.textRenderingMode = args[0];\n              break;\n            case _util.OPS.setFillColorSpace:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setStrokeColorSpace:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setFillColor:\n              cs = stateManager.state.fillColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColor:\n              cs = stateManager.state.strokeColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillGray:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeGray:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillCMYKColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeCMYKColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillRGBColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setStrokeRGBColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setFillColorN:\n              cs = stateManager.state.fillColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setFillColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColorN:\n              cs = stateManager.state.strokeColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setStrokeColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.shadingFill:\n              var shadingRes = resources.get('Shading');\n              if (!shadingRes) {\n                throw new _util.FormatError('No shading resource found');\n              }\n              var shading = shadingRes.get(args[0].name);\n              if (!shading) {\n                throw new _util.FormatError('No shading object found');\n              }\n              var shadingFill = _pattern.Pattern.parseShading(shading, null, xref, resources, self.handler, self.pdfFunctionFactory);\n              var patternIR = shadingFill.getIR();\n              args = [patternIR];\n              fn = _util.OPS.shadingFill;\n              break;\n            case _util.OPS.setGState:\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !extGState.has(dictName.name)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              next(self.setGState(resources, gState, operatorList, task, stateManager));\n              return;\n            case _util.OPS.moveTo:\n            case _util.OPS.lineTo:\n            case _util.OPS.curveTo:\n            case _util.OPS.curveTo2:\n            case _util.OPS.curveTo3:\n            case _util.OPS.closePath:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.rectangle:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.markPoint:\n            case _util.OPS.markPointProps:\n            case _util.OPS.beginMarkedContent:\n            case _util.OPS.beginMarkedContentProps:\n            case _util.OPS.endMarkedContent:\n            case _util.OPS.beginCompat:\n            case _util.OPS.endCompat:\n              continue;\n            default:\n              if (args !== null) {\n                for (i = 0, ii = args.length; i < ii; i++) {\n                  if (args[i] instanceof _primitives.Dict) {\n                    break;\n                  }\n                }\n                if (i < ii) {\n                  (0, _util.warn)('getOperatorList - ignoring operator: ' + fn);\n                  continue;\n                }\n              }\n          }\n          operatorList.addOp(fn, args);\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        closePendingRestoreOPS();\n        resolve();\n      }).catch(function (reason) {\n        if (_this8.options.ignoreErrors) {\n          _this8.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('getOperatorList - ignoring errors during task: ' + task.name);\n          closePendingRestoreOPS();\n          return;\n        }\n        throw reason;\n      });\n    },\n    getTextContent: function getTextContent(_ref6) {\n      var _this9 = this;\n\n      var stream = _ref6.stream,\n          task = _ref6.task,\n          resources = _ref6.resources,\n          _ref6$stateManager = _ref6.stateManager,\n          stateManager = _ref6$stateManager === undefined ? null : _ref6$stateManager,\n          _ref6$normalizeWhites = _ref6.normalizeWhitespace,\n          normalizeWhitespace = _ref6$normalizeWhites === undefined ? false : _ref6$normalizeWhites,\n          _ref6$combineTextItem = _ref6.combineTextItems,\n          combineTextItems = _ref6$combineTextItem === undefined ? false : _ref6$combineTextItem,\n          sink = _ref6.sink,\n          _ref6$seenStyles = _ref6.seenStyles,\n          seenStyles = _ref6$seenStyles === undefined ? Object.create(null) : _ref6$seenStyles;\n\n      resources = resources || _primitives.Dict.empty;\n      stateManager = stateManager || new StateManager(new TextState());\n      var WhitespaceRegexp = /\\s/g;\n      var textContent = {\n        items: [],\n        styles: Object.create(null)\n      };\n      var textContentItem = {\n        initialized: false,\n        str: [],\n        width: 0,\n        height: 0,\n        vertical: false,\n        lastAdvanceWidth: 0,\n        lastAdvanceHeight: 0,\n        textAdvanceScale: 0,\n        spaceWidth: 0,\n        fakeSpaceMin: Infinity,\n        fakeMultiSpaceMin: Infinity,\n        fakeMultiSpaceMax: -0,\n        textRunBreakAllowed: false,\n        transform: null,\n        fontName: null\n      };\n      var SPACE_FACTOR = 0.3;\n      var MULTI_SPACE_FACTOR = 1.5;\n      var MULTI_SPACE_FACTOR_MAX = 4;\n      var self = this;\n      var xref = this.xref;\n      var xobjs = null;\n      var skipEmptyXObjs = Object.create(null);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var textState;\n      function ensureTextContentItem() {\n        if (textContentItem.initialized) {\n          return textContentItem;\n        }\n        var font = textState.font;\n        if (!(font.loadedName in seenStyles)) {\n          seenStyles[font.loadedName] = true;\n          textContent.styles[font.loadedName] = {\n            fontFamily: font.fallbackName,\n            ascent: font.ascent,\n            descent: font.descent,\n            vertical: font.vertical\n          };\n        }\n        textContentItem.fontName = font.loadedName;\n        var tsm = [textState.fontSize * textState.textHScale, 0, 0, textState.fontSize, 0, textState.textRise];\n        if (font.isType3Font && textState.fontMatrix !== _util.FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n          var glyphHeight = font.bbox[3] - font.bbox[1];\n          if (glyphHeight > 0) {\n            glyphHeight = glyphHeight * textState.fontMatrix[3];\n            tsm[3] *= glyphHeight;\n          }\n        }\n        var trm = _util.Util.transform(textState.ctm, _util.Util.transform(textState.textMatrix, tsm));\n        textContentItem.transform = trm;\n        if (!font.vertical) {\n          textContentItem.width = 0;\n          textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n          textContentItem.vertical = false;\n        } else {\n          textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n          textContentItem.height = 0;\n          textContentItem.vertical = true;\n        }\n        var a = textState.textLineMatrix[0];\n        var b = textState.textLineMatrix[1];\n        var scaleLineX = Math.sqrt(a * a + b * b);\n        a = textState.ctm[0];\n        b = textState.ctm[1];\n        var scaleCtmX = Math.sqrt(a * a + b * b);\n        textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n        textContentItem.lastAdvanceWidth = 0;\n        textContentItem.lastAdvanceHeight = 0;\n        var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n        if (spaceWidth) {\n          textContentItem.spaceWidth = spaceWidth;\n          textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n          textContentItem.textRunBreakAllowed = !font.isMonospace;\n        } else {\n          textContentItem.spaceWidth = 0;\n          textContentItem.fakeSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMax = 0;\n          textContentItem.textRunBreakAllowed = false;\n        }\n        textContentItem.initialized = true;\n        return textContentItem;\n      }\n      function replaceWhitespace(str) {\n        var i = 0,\n            ii = str.length,\n            code;\n        while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n          i++;\n        }\n        return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n      }\n      function runBidiTransform(textChunk) {\n        var str = textChunk.str.join('');\n        var bidiResult = (0, _bidi.bidi)(str, -1, textChunk.vertical);\n        return {\n          str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n          dir: bidiResult.dir,\n          width: textChunk.width,\n          height: textChunk.height,\n          transform: textChunk.transform,\n          fontName: textChunk.fontName\n        };\n      }\n      function handleSetFont(fontName, fontRef) {\n        return self.loadFont(fontName, fontRef, resources).then(function (translated) {\n          textState.font = translated.font;\n          textState.fontMatrix = translated.font.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        });\n      }\n      function buildTextContentItem(chars) {\n        var font = textState.font;\n        var textChunk = ensureTextContentItem();\n        var width = 0;\n        var height = 0;\n        var glyphs = font.charsToGlyphs(chars);\n        for (var i = 0; i < glyphs.length; i++) {\n          var glyph = glyphs[i];\n          var glyphWidth = null;\n          if (font.vertical && glyph.vmetric) {\n            glyphWidth = glyph.vmetric[0];\n          } else {\n            glyphWidth = glyph.width;\n          }\n          var glyphUnicode = glyph.unicode;\n          var NormalizedUnicodes = (0, _unicode.getNormalizedUnicodes)();\n          if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n            glyphUnicode = NormalizedUnicodes[glyphUnicode];\n          }\n          glyphUnicode = (0, _unicode.reverseIfRtl)(glyphUnicode);\n          var charSpacing = textState.charSpacing;\n          if (glyph.isSpace) {\n            var wordSpacing = textState.wordSpacing;\n            charSpacing += wordSpacing;\n            if (wordSpacing > 0) {\n              addFakeSpaces(wordSpacing, textChunk.str);\n            }\n          }\n          var tx = 0;\n          var ty = 0;\n          if (!font.vertical) {\n            var w0 = glyphWidth * textState.fontMatrix[0];\n            tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n            width += tx;\n          } else {\n            var w1 = glyphWidth * textState.fontMatrix[0];\n            ty = w1 * textState.fontSize + charSpacing;\n            height += ty;\n          }\n          textState.translateTextMatrix(tx, ty);\n          textChunk.str.push(glyphUnicode);\n        }\n        if (!font.vertical) {\n          textChunk.lastAdvanceWidth = width;\n          textChunk.width += width;\n        } else {\n          textChunk.lastAdvanceHeight = height;\n          textChunk.height += Math.abs(height);\n        }\n        return textChunk;\n      }\n      function addFakeSpaces(width, strBuf) {\n        if (width < textContentItem.fakeSpaceMin) {\n          return;\n        }\n        if (width < textContentItem.fakeMultiSpaceMin) {\n          strBuf.push(' ');\n          return;\n        }\n        var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n        while (fakeSpaces-- > 0) {\n          strBuf.push(' ');\n        }\n      }\n      function flushTextContentItem() {\n        if (!textContentItem.initialized) {\n          return;\n        }\n        textContentItem.width *= textContentItem.textAdvanceScale;\n        textContentItem.height *= textContentItem.textAdvanceScale;\n        textContent.items.push(runBidiTransform(textContentItem));\n        textContentItem.initialized = false;\n        textContentItem.str.length = 0;\n      }\n      function enqueueChunk() {\n        var length = textContent.items.length;\n        if (length > 0) {\n          sink.enqueue(textContent, length);\n          textContent.items = [];\n          textContent.styles = Object.create(null);\n        }\n      }\n      var timeSlotManager = new TimeSlotManager();\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          enqueueChunk();\n          Promise.all([promise, sink.ready]).then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            args = [];\n        while (!(stop = timeSlotManager.check())) {\n          args.length = 0;\n          operation.args = args;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          textState = stateManager.state;\n          var fn = operation.fn;\n          args = operation.args;\n          var advance, diff;\n          switch (fn | 0) {\n            case _util.OPS.setFont:\n              var fontNameArg = args[0].name,\n                  fontSizeArg = args[1];\n              if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n                break;\n              }\n              flushTextContentItem();\n              textState.fontName = fontNameArg;\n              textState.fontSize = fontSizeArg;\n              next(handleSetFont(fontNameArg, null));\n              return;\n            case _util.OPS.setTextRise:\n              flushTextContentItem();\n              textState.textRise = args[0];\n              break;\n            case _util.OPS.setHScale:\n              flushTextContentItem();\n              textState.textHScale = args[0] / 100;\n              break;\n            case _util.OPS.setLeading:\n              flushTextContentItem();\n              textState.leading = args[0];\n              break;\n            case _util.OPS.moveText:\n              var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n              advance = args[0] - args[1];\n              if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(args[0], args[1]);\n                textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n                textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n                diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.setLeadingMoveText:\n              flushTextContentItem();\n              textState.leading = -args[1];\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.nextLine:\n              flushTextContentItem();\n              textState.carriageReturn();\n              break;\n            case _util.OPS.setTextMatrix:\n              advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n              if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(advance.width, advance.height);\n                textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n                textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n                diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              break;\n            case _util.OPS.setCharSpacing:\n              textState.charSpacing = args[0];\n              break;\n            case _util.OPS.setWordSpacing:\n              textState.wordSpacing = args[0];\n              break;\n            case _util.OPS.beginText:\n              flushTextContentItem();\n              textState.textMatrix = _util.IDENTITY_MATRIX.slice();\n              textState.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n              break;\n            case _util.OPS.showSpacedText:\n              var items = args[0];\n              var offset;\n              for (var j = 0, jj = items.length; j < jj; j++) {\n                if (typeof items[j] === 'string') {\n                  buildTextContentItem(items[j]);\n                } else if ((0, _util.isNum)(items[j])) {\n                  ensureTextContentItem();\n                  advance = items[j] * textState.fontSize / 1000;\n                  var breakTextRun = false;\n                  if (textState.font.vertical) {\n                    offset = advance;\n                    textState.translateTextMatrix(0, offset);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.height += offset;\n                    }\n                  } else {\n                    advance = -advance;\n                    offset = advance * textState.textHScale;\n                    textState.translateTextMatrix(offset, 0);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.width += offset;\n                    }\n                  }\n                  if (breakTextRun) {\n                    flushTextContentItem();\n                  } else if (advance > 0) {\n                    addFakeSpaces(advance, textContentItem.str);\n                  }\n                }\n              }\n              break;\n            case _util.OPS.showText:\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineShowText:\n              flushTextContentItem();\n              textState.carriageReturn();\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              flushTextContentItem();\n              textState.wordSpacing = args[0];\n              textState.charSpacing = args[1];\n              textState.carriageReturn();\n              buildTextContentItem(args[2]);\n              break;\n            case _util.OPS.paintXObject:\n              flushTextContentItem();\n              if (!xobjs) {\n                xobjs = resources.get('XObject') || _primitives.Dict.empty;\n              }\n              var name = args[0].name;\n              if (name && skipEmptyXObjs[name] !== undefined) {\n                break;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name !== 'Form') {\n                  skipEmptyXObjs[name] = true;\n                  resolveXObject();\n                  return;\n                }\n                var currentState = stateManager.state.clone();\n                var xObjStateManager = new StateManager(currentState);\n                var matrix = xobj.dict.getArray('Matrix');\n                if (Array.isArray(matrix) && matrix.length === 6) {\n                  xObjStateManager.transform(matrix);\n                }\n                enqueueChunk();\n                var sinkWrapper = {\n                  enqueueInvoked: false,\n                  enqueue: function enqueue(chunk, size) {\n                    this.enqueueInvoked = true;\n                    sink.enqueue(chunk, size);\n                  },\n\n                  get desiredSize() {\n                    return sink.desiredSize;\n                  },\n                  get ready() {\n                    return sink.ready;\n                  }\n                };\n                self.getTextContent({\n                  stream: xobj,\n                  task: task,\n                  resources: xobj.dict.get('Resources') || resources,\n                  stateManager: xObjStateManager,\n                  normalizeWhitespace: normalizeWhitespace,\n                  combineTextItems: combineTextItems,\n                  sink: sinkWrapper,\n                  seenStyles: seenStyles\n                }).then(function () {\n                  if (!sinkWrapper.enqueueInvoked) {\n                    skipEmptyXObjs[name] = true;\n                  }\n                  resolveXObject();\n                }, rejectXObject);\n              }).catch(function (reason) {\n                if (reason instanceof _util.AbortException) {\n                  return;\n                }\n                if (self.options.ignoreErrors) {\n                  (0, _util.warn)('getTextContent - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setGState:\n              flushTextContentItem();\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !(0, _primitives.isName)(dictName)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              if (!(0, _primitives.isDict)(gState)) {\n                break;\n              }\n              var gStateFont = gState.get('Font');\n              if (gStateFont) {\n                textState.fontName = null;\n                textState.fontSize = gStateFont[1];\n                next(handleSetFont(null, gStateFont[0]));\n                return;\n              }\n              break;\n          }\n          if (textContent.items.length >= sink.desiredSize) {\n            stop = true;\n            break;\n          }\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        flushTextContentItem();\n        enqueueChunk();\n        resolve();\n      }).catch(function (reason) {\n        if (reason instanceof _util.AbortException) {\n          return;\n        }\n        if (_this9.options.ignoreErrors) {\n          (0, _util.warn)('getTextContent - ignoring errors during task: ' + task.name);\n          flushTextContentItem();\n          enqueueChunk();\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, properties) {\n      var _this10 = this;\n\n      var xref = this.xref;\n      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n      if (properties.composite) {\n        var cidSystemInfo = dict.get('CIDSystemInfo');\n        if ((0, _primitives.isDict)(cidSystemInfo)) {\n          properties.cidSystemInfo = {\n            registry: cidSystemInfo.get('Registry'),\n            ordering: cidSystemInfo.get('Ordering'),\n            supplement: cidSystemInfo.get('Supplement')\n          };\n        }\n        var cidToGidMap = dict.get('CIDToGIDMap');\n        if ((0, _primitives.isStream)(cidToGidMap)) {\n          properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n        }\n      }\n      var differences = [];\n      var baseEncodingName = null;\n      var encoding;\n      if (dict.has('Encoding')) {\n        encoding = dict.get('Encoding');\n        if ((0, _primitives.isDict)(encoding)) {\n          baseEncodingName = encoding.get('BaseEncoding');\n          baseEncodingName = (0, _primitives.isName)(baseEncodingName) ? baseEncodingName.name : null;\n          if (encoding.has('Differences')) {\n            var diffEncoding = encoding.get('Differences');\n            var index = 0;\n            for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n              var data = xref.fetchIfRef(diffEncoding[j]);\n              if ((0, _util.isNum)(data)) {\n                index = data;\n              } else if ((0, _primitives.isName)(data)) {\n                differences[index++] = data.name;\n              } else {\n                throw new _util.FormatError('Invalid entry in \\'Differences\\' array: ' + data);\n              }\n            }\n          }\n        } else if ((0, _primitives.isName)(encoding)) {\n          baseEncodingName = encoding.name;\n        } else {\n          throw new _util.FormatError('Encoding is not a Name nor a Dict');\n        }\n        if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n          baseEncodingName = null;\n        }\n      }\n      if (baseEncodingName) {\n        properties.defaultEncoding = (0, _encodings.getEncoding)(baseEncodingName).slice();\n      } else {\n        var isSymbolicFont = !!(properties.flags & _fonts.FontFlags.Symbolic);\n        var isNonsymbolicFont = !!(properties.flags & _fonts.FontFlags.Nonsymbolic);\n        encoding = _encodings.StandardEncoding;\n        if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n          encoding = _encodings.WinAnsiEncoding;\n        }\n        if (isSymbolicFont) {\n          encoding = _encodings.MacRomanEncoding;\n          if (!properties.file) {\n            if (/Symbol/i.test(properties.name)) {\n              encoding = _encodings.SymbolSetEncoding;\n            } else if (/Dingbats/i.test(properties.name)) {\n              encoding = _encodings.ZapfDingbatsEncoding;\n            }\n          }\n        }\n        properties.defaultEncoding = encoding;\n      }\n      properties.differences = differences;\n      properties.baseEncodingName = baseEncodingName;\n      properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n      properties.dict = dict;\n      return toUnicodePromise.then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return _this10.buildToUnicode(properties);\n      }).then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return properties;\n      });\n    },\n    _buildSimpleFontToUnicode: function _buildSimpleFontToUnicode(properties) {\n      (0, _util.assert)(!properties.composite, 'Must be a simple font.');\n      var toUnicode = [],\n          charcode = void 0,\n          glyphName = void 0;\n      var encoding = properties.defaultEncoding.slice();\n      var baseEncodingName = properties.baseEncodingName;\n      var differences = properties.differences;\n      for (charcode in differences) {\n        glyphName = differences[charcode];\n        if (glyphName === '.notdef') {\n          continue;\n        }\n        encoding[charcode] = glyphName;\n      }\n      var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n      for (charcode in encoding) {\n        glyphName = encoding[charcode];\n        if (glyphName === '') {\n          continue;\n        } else if (glyphsUnicodeMap[glyphName] === undefined) {\n          var code = 0;\n          switch (glyphName[0]) {\n            case 'G':\n              if (glyphName.length === 3) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'g':\n              if (glyphName.length === 5) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'C':\n            case 'c':\n              if (glyphName.length >= 3) {\n                code = +glyphName.substr(1);\n              }\n              break;\n            default:\n              var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n              if (unicode !== -1) {\n                code = unicode;\n              }\n          }\n          if (code) {\n            if (baseEncodingName && code === +charcode) {\n              var baseEncoding = (0, _encodings.getEncoding)(baseEncodingName);\n              if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n                toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n                continue;\n              }\n            }\n            toUnicode[charcode] = String.fromCharCode(code);\n          }\n          continue;\n        }\n        toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n      }\n      return new _fonts.ToUnicodeMap(toUnicode);\n    },\n    buildToUnicode: function buildToUnicode(properties) {\n      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n      if (properties.hasIncludedToUnicodeMap) {\n        if (!properties.composite && properties.hasEncoding) {\n          properties.fallbackToUnicode = this._buildSimpleFontToUnicode(properties);\n        }\n        return Promise.resolve(properties.toUnicode);\n      }\n      if (!properties.composite) {\n        return Promise.resolve(this._buildSimpleFontToUnicode(properties));\n      }\n      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof _cmap.IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n        var registry = properties.cidSystemInfo.registry;\n        var ordering = properties.cidSystemInfo.ordering;\n        var ucs2CMapName = _primitives.Name.get(registry + '-' + ordering + '-UCS2');\n        return _cmap.CMapFactory.create({\n          encoding: ucs2CMapName,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (ucs2CMap) {\n          var cMap = properties.cMap;\n          var toUnicode = [];\n          cMap.forEach(function (charcode, cid) {\n            if (cid > 0xffff) {\n              throw new _util.FormatError('Max size of CID is 65,535');\n            }\n            var ucs2 = ucs2CMap.lookup(cid);\n            if (ucs2) {\n              toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n            }\n          });\n          return new _fonts.ToUnicodeMap(toUnicode);\n        });\n      }\n      return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n    },\n\n    readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n      var cmapObj = toUnicode;\n      if ((0, _primitives.isName)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          return new _fonts.ToUnicodeMap(cmap.getMap());\n        });\n      } else if ((0, _primitives.isStream)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          var map = new Array(cmap.length);\n          cmap.forEach(function (charCode, token) {\n            var str = [];\n            for (var k = 0; k < token.length; k += 2) {\n              var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              if ((w1 & 0xF800) !== 0xD800) {\n                str.push(w1);\n                continue;\n              }\n              k += 2;\n              var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n            }\n            map[charCode] = String.fromCharCode.apply(String, str);\n          });\n          return new _fonts.ToUnicodeMap(map);\n        });\n      }\n      return Promise.resolve(null);\n    },\n    readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n      var glyphsData = cidToGidStream.getBytes();\n      var result = [];\n      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n        var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n        if (glyphID === 0) {\n          continue;\n        }\n        var code = j >> 1;\n        result[code] = glyphID;\n      }\n      return result;\n    },\n    extractWidths: function PartialEvaluator_extractWidths(dict, descriptor, properties) {\n      var xref = this.xref;\n      var glyphsWidths = [];\n      var defaultWidth = 0;\n      var glyphsVMetrics = [];\n      var defaultVMetrics;\n      var i, ii, j, jj, start, code, widths;\n      if (properties.composite) {\n        defaultWidth = dict.has('DW') ? dict.get('DW') : 1000;\n        widths = dict.get('W');\n        if (widths) {\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            start = xref.fetchIfRef(widths[i++]);\n            code = xref.fetchIfRef(widths[i]);\n            if (Array.isArray(code)) {\n              for (j = 0, jj = code.length; j < jj; j++) {\n                glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n              }\n            } else {\n              var width = xref.fetchIfRef(widths[++i]);\n              for (j = start; j <= code; j++) {\n                glyphsWidths[j] = width;\n              }\n            }\n          }\n        }\n        if (properties.vertical) {\n          var vmetrics = dict.getArray('DW2') || [880, -1000];\n          defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\n          vmetrics = dict.get('W2');\n          if (vmetrics) {\n            for (i = 0, ii = vmetrics.length; i < ii; i++) {\n              start = xref.fetchIfRef(vmetrics[i++]);\n              code = xref.fetchIfRef(vmetrics[i]);\n              if (Array.isArray(code)) {\n                for (j = 0, jj = code.length; j < jj; j++) {\n                  glyphsVMetrics[start++] = [xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j])];\n                }\n              } else {\n                var vmetric = [xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i])];\n                for (j = start; j <= code; j++) {\n                  glyphsVMetrics[j] = vmetric;\n                }\n              }\n            }\n          }\n        }\n      } else {\n        var firstChar = properties.firstChar;\n        widths = dict.get('Widths');\n        if (widths) {\n          j = firstChar;\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n          }\n          defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if ((0, _primitives.isName)(baseFontName)) {\n            var metrics = this.getBaseFontMetrics(baseFontName.name);\n            glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n            defaultWidth = metrics.defaultWidth;\n          }\n        }\n      }\n      var isMonospace = true;\n      var firstWidth = defaultWidth;\n      for (var glyph in glyphsWidths) {\n        var glyphWidth = glyphsWidths[glyph];\n        if (!glyphWidth) {\n          continue;\n        }\n        if (!firstWidth) {\n          firstWidth = glyphWidth;\n          continue;\n        }\n        if (firstWidth !== glyphWidth) {\n          isMonospace = false;\n          break;\n        }\n      }\n      if (isMonospace) {\n        properties.flags |= _fonts.FontFlags.FixedPitch;\n      }\n      properties.defaultWidth = defaultWidth;\n      properties.widths = glyphsWidths;\n      properties.defaultVMetrics = defaultVMetrics;\n      properties.vmetrics = glyphsVMetrics;\n    },\n    isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n      var fontNameWoStyle = baseFontName.split('-')[0];\n      return fontNameWoStyle in (0, _standard_fonts.getSerifFonts)() || fontNameWoStyle.search(/serif/gi) !== -1;\n    },\n    getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n      var defaultWidth = 0;\n      var widths = [];\n      var monospace = false;\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)();\n      var lookupName = stdFontMap[name] || name;\n      var Metrics = (0, _metrics.getMetrics)();\n      if (!(lookupName in Metrics)) {\n        if (this.isSerifFont(name)) {\n          lookupName = 'Times-Roman';\n        } else {\n          lookupName = 'Helvetica';\n        }\n      }\n      var glyphWidths = Metrics[lookupName];\n      if ((0, _util.isNum)(glyphWidths)) {\n        defaultWidth = glyphWidths;\n        monospace = true;\n      } else {\n        widths = glyphWidths();\n      }\n      return {\n        defaultWidth: defaultWidth,\n        monospace: monospace,\n        widths: widths\n      };\n    },\n    buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n      var widths = Object.create(null);\n      var differences = properties.differences;\n      var encoding = properties.defaultEncoding;\n      for (var charCode = 0; charCode < 256; charCode++) {\n        if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n          widths[charCode] = widthsByGlyphName[differences[charCode]];\n          continue;\n        }\n        if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n          widths[charCode] = widthsByGlyphName[encoding[charCode]];\n          continue;\n        }\n      }\n      return widths;\n    },\n    preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict) {\n      var baseDict = dict;\n      var type = dict.get('Subtype');\n      if (!(0, _primitives.isName)(type)) {\n        throw new _util.FormatError('invalid font Subtype');\n      }\n      var composite = false;\n      var uint8array;\n      if (type.name === 'Type0') {\n        var df = dict.get('DescendantFonts');\n        if (!df) {\n          throw new _util.FormatError('Descendant fonts are not specified');\n        }\n        dict = Array.isArray(df) ? this.xref.fetchIfRef(df[0]) : df;\n        type = dict.get('Subtype');\n        if (!(0, _primitives.isName)(type)) {\n          throw new _util.FormatError('invalid font Subtype');\n        }\n        composite = true;\n      }\n      var descriptor = dict.get('FontDescriptor');\n      if (descriptor) {\n        var hash = new _murmurhash.MurmurHash3_64();\n        var encoding = baseDict.getRaw('Encoding');\n        if ((0, _primitives.isName)(encoding)) {\n          hash.update(encoding.name);\n        } else if ((0, _primitives.isRef)(encoding)) {\n          hash.update(encoding.toString());\n        } else if ((0, _primitives.isDict)(encoding)) {\n          var keys = encoding.getKeys();\n          for (var i = 0, ii = keys.length; i < ii; i++) {\n            var entry = encoding.getRaw(keys[i]);\n            if ((0, _primitives.isName)(entry)) {\n              hash.update(entry.name);\n            } else if ((0, _primitives.isRef)(entry)) {\n              hash.update(entry.toString());\n            } else if (Array.isArray(entry)) {\n              var diffLength = entry.length,\n                  diffBuf = new Array(diffLength);\n              for (var j = 0; j < diffLength; j++) {\n                var diffEntry = entry[j];\n                if ((0, _primitives.isName)(diffEntry)) {\n                  diffBuf[j] = diffEntry.name;\n                } else if ((0, _util.isNum)(diffEntry) || (0, _primitives.isRef)(diffEntry)) {\n                  diffBuf[j] = diffEntry.toString();\n                }\n              }\n              hash.update(diffBuf.join());\n            }\n          }\n        }\n        var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n        if ((0, _primitives.isStream)(toUnicode)) {\n          var stream = toUnicode.str || toUnicode;\n          uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n          hash.update(uint8array);\n        } else if ((0, _primitives.isName)(toUnicode)) {\n          hash.update(toUnicode.name);\n        }\n        var widths = dict.get('Widths') || baseDict.get('Widths');\n        if (widths) {\n          uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n          hash.update(uint8array);\n        }\n      }\n      return {\n        descriptor: descriptor,\n        dict: dict,\n        baseDict: baseDict,\n        composite: composite,\n        type: type.name,\n        hash: hash ? hash.hexdigest() : ''\n      };\n    },\n    translateFont: function PartialEvaluator_translateFont(preEvaluatedFont) {\n      var _this11 = this;\n\n      var baseDict = preEvaluatedFont.baseDict;\n      var dict = preEvaluatedFont.dict;\n      var composite = preEvaluatedFont.composite;\n      var descriptor = preEvaluatedFont.descriptor;\n      var type = preEvaluatedFont.type;\n      var maxCharIndex = composite ? 0xFFFF : 0xFF;\n      var properties;\n      if (!descriptor) {\n        if (type === 'Type3') {\n          descriptor = new _primitives.Dict(null);\n          descriptor.set('FontName', _primitives.Name.get(type));\n          descriptor.set('FontBBox', dict.getArray('FontBBox'));\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if (!(0, _primitives.isName)(baseFontName)) {\n            throw new _util.FormatError('Base font is not specified');\n          }\n          baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n          var metrics = this.getBaseFontMetrics(baseFontName);\n          var fontNameWoStyle = baseFontName.split('-')[0];\n          var flags = (this.isSerifFont(fontNameWoStyle) ? _fonts.FontFlags.Serif : 0) | (metrics.monospace ? _fonts.FontFlags.FixedPitch : 0) | ((0, _standard_fonts.getSymbolsFonts)()[fontNameWoStyle] ? _fonts.FontFlags.Symbolic : _fonts.FontFlags.Nonsymbolic);\n          properties = {\n            type: type,\n            name: baseFontName,\n            widths: metrics.widths,\n            defaultWidth: metrics.defaultWidth,\n            flags: flags,\n            firstChar: 0,\n            lastChar: maxCharIndex\n          };\n          return this.extractDataStructures(dict, dict, properties).then(function (properties) {\n            properties.widths = _this11.buildCharCodeToWidth(metrics.widths, properties);\n            return new _fonts.Font(baseFontName, null, properties);\n          });\n        }\n      }\n      var firstChar = dict.get('FirstChar') || 0;\n      var lastChar = dict.get('LastChar') || maxCharIndex;\n      var fontName = descriptor.get('FontName');\n      var baseFont = dict.get('BaseFont');\n      if ((0, _util.isString)(fontName)) {\n        fontName = _primitives.Name.get(fontName);\n      }\n      if ((0, _util.isString)(baseFont)) {\n        baseFont = _primitives.Name.get(baseFont);\n      }\n      if (type !== 'Type3') {\n        var fontNameStr = fontName && fontName.name;\n        var baseFontStr = baseFont && baseFont.name;\n        if (fontNameStr !== baseFontStr) {\n          (0, _util.info)('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n          if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n            fontName = baseFont;\n          }\n        }\n      }\n      fontName = fontName || baseFont;\n      if (!(0, _primitives.isName)(fontName)) {\n        throw new _util.FormatError('invalid font name');\n      }\n      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n      if (fontFile) {\n        if (fontFile.dict) {\n          var subtype = fontFile.dict.get('Subtype');\n          if (subtype) {\n            subtype = subtype.name;\n          }\n          var length1 = fontFile.dict.get('Length1');\n          var length2 = fontFile.dict.get('Length2');\n          var length3 = fontFile.dict.get('Length3');\n        }\n      }\n      properties = {\n        type: type,\n        name: fontName.name,\n        subtype: subtype,\n        file: fontFile,\n        length1: length1,\n        length2: length2,\n        length3: length3,\n        loadedName: baseDict.loadedName,\n        composite: composite,\n        wideChars: composite,\n        fixedPitch: false,\n        fontMatrix: dict.getArray('FontMatrix') || _util.FONT_IDENTITY_MATRIX,\n        firstChar: firstChar || 0,\n        lastChar: lastChar || maxCharIndex,\n        bbox: descriptor.getArray('FontBBox'),\n        ascent: descriptor.get('Ascent'),\n        descent: descriptor.get('Descent'),\n        xHeight: descriptor.get('XHeight'),\n        capHeight: descriptor.get('CapHeight'),\n        flags: descriptor.get('Flags'),\n        italicAngle: descriptor.get('ItalicAngle'),\n        isType3Font: false\n      };\n      var cMapPromise;\n      if (composite) {\n        var cidEncoding = baseDict.get('Encoding');\n        if ((0, _primitives.isName)(cidEncoding)) {\n          properties.cidEncoding = cidEncoding.name;\n        }\n        cMapPromise = _cmap.CMapFactory.create({\n          encoding: cidEncoding,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cMap) {\n          properties.cMap = cMap;\n          properties.vertical = properties.cMap.vertical;\n        });\n      } else {\n        cMapPromise = Promise.resolve(undefined);\n      }\n      return cMapPromise.then(function () {\n        return _this11.extractDataStructures(dict, baseDict, properties);\n      }).then(function (properties) {\n        _this11.extractWidths(dict, descriptor, properties);\n        if (type === 'Type3') {\n          properties.isType3Font = true;\n        }\n        return new _fonts.Font(fontName.name, fontFile, properties);\n      });\n    }\n  };\n  return PartialEvaluator;\n}();\nvar TranslatedFont = function TranslatedFontClosure() {\n  function TranslatedFont(loadedName, font, dict) {\n    this.loadedName = loadedName;\n    this.font = font;\n    this.dict = dict;\n    this.type3Loaded = null;\n    this.sent = false;\n  }\n  TranslatedFont.prototype = {\n    send: function send(handler) {\n      if (this.sent) {\n        return;\n      }\n      var fontData = this.font.exportData();\n      handler.send('commonobj', [this.loadedName, 'Font', fontData]);\n      this.sent = true;\n    },\n    loadType3Data: function loadType3Data(evaluator, resources, parentOperatorList, task) {\n      if (!this.font.isType3Font) {\n        throw new Error('Must be a Type3 font.');\n      }\n      if (this.type3Loaded) {\n        return this.type3Loaded;\n      }\n      var type3Options = Object.create(evaluator.options);\n      type3Options.ignoreErrors = false;\n      var type3Evaluator = evaluator.clone(type3Options);\n      var translatedFont = this.font;\n      var loadCharProcsPromise = Promise.resolve();\n      var charProcs = this.dict.get('CharProcs');\n      var fontResources = this.dict.get('Resources') || resources;\n      var charProcKeys = charProcs.getKeys();\n      var charProcOperatorList = Object.create(null);\n\n      var _loop2 = function _loop2() {\n        var key = charProcKeys[i];\n        loadCharProcsPromise = loadCharProcsPromise.then(function () {\n          var glyphStream = charProcs.get(key);\n          var operatorList = new _operator_list.OperatorList();\n          return type3Evaluator.getOperatorList({\n            stream: glyphStream,\n            task: task,\n            resources: fontResources,\n            operatorList: operatorList\n          }).then(function () {\n            charProcOperatorList[key] = operatorList.getIR();\n            parentOperatorList.addDependencies(operatorList.dependencies);\n          }).catch(function (reason) {\n            (0, _util.warn)('Type3 font resource \"' + key + '\" is not available.');\n            var operatorList = new _operator_list.OperatorList();\n            charProcOperatorList[key] = operatorList.getIR();\n          });\n        });\n      };\n\n      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n        _loop2();\n      }\n      this.type3Loaded = loadCharProcsPromise.then(function () {\n        translatedFont.charProcOperatorList = charProcOperatorList;\n      });\n      return this.type3Loaded;\n    }\n  };\n  return TranslatedFont;\n}();\nvar StateManager = function StateManagerClosure() {\n  function StateManager(initialState) {\n    this.state = initialState;\n    this.stateStack = [];\n  }\n  StateManager.prototype = {\n    save: function save() {\n      var old = this.state;\n      this.stateStack.push(this.state);\n      this.state = old.clone();\n    },\n    restore: function restore() {\n      var prev = this.stateStack.pop();\n      if (prev) {\n        this.state = prev;\n      }\n    },\n    transform: function transform(args) {\n      this.state.ctm = _util.Util.transform(this.state.ctm, args);\n    }\n  };\n  return StateManager;\n}();\nvar TextState = function TextStateClosure() {\n  function TextState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.fontName = null;\n    this.fontSize = 0;\n    this.font = null;\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n    this.textMatrix = _util.IDENTITY_MATRIX.slice();\n    this.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.leading = 0;\n    this.textHScale = 1;\n    this.textRise = 0;\n  }\n  TextState.prototype = {\n    setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textLineMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textLineMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n      var font = this.font;\n      if (!font) {\n        return null;\n      }\n      var m = this.textLineMatrix;\n      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n        return null;\n      }\n      var txDiff = e - m[4],\n          tyDiff = f - m[5];\n      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n        return null;\n      }\n      var tx,\n          ty,\n          denominator = a * d - b * c;\n      if (font.vertical) {\n        tx = -tyDiff * c / denominator;\n        ty = tyDiff * a / denominator;\n      } else {\n        tx = txDiff * d / denominator;\n        ty = -txDiff * b / denominator;\n      }\n      return {\n        width: tx,\n        height: ty,\n        value: font.vertical ? ty : tx\n      };\n    },\n    calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n      var tsm = [this.fontSize * this.textHScale, 0, 0, this.fontSize, 0, this.textRise];\n      return _util.Util.transform(ctm, _util.Util.transform(this.textMatrix, tsm));\n    },\n    carriageReturn: function TextState_carriageReturn() {\n      this.translateTextLineMatrix(0, -this.leading);\n      this.textMatrix = this.textLineMatrix.slice();\n    },\n    clone: function TextState_clone() {\n      var clone = Object.create(this);\n      clone.textMatrix = this.textMatrix.slice();\n      clone.textLineMatrix = this.textLineMatrix.slice();\n      clone.fontMatrix = this.fontMatrix.slice();\n      return clone;\n    }\n  };\n  return TextState;\n}();\nvar EvalState = function EvalStateClosure() {\n  function EvalState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.font = null;\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\n    this.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n    this.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n  }\n  EvalState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    }\n  };\n  return EvalState;\n}();\nvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n  var getOPMap = (0, _util.getLookupTableFactory)(function (t) {\n    t['w'] = {\n      id: _util.OPS.setLineWidth,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['J'] = {\n      id: _util.OPS.setLineCap,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['j'] = {\n      id: _util.OPS.setLineJoin,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['M'] = {\n      id: _util.OPS.setMiterLimit,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['d'] = {\n      id: _util.OPS.setDash,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['ri'] = {\n      id: _util.OPS.setRenderingIntent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['i'] = {\n      id: _util.OPS.setFlatness,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['gs'] = {\n      id: _util.OPS.setGState,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['q'] = {\n      id: _util.OPS.save,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Q'] = {\n      id: _util.OPS.restore,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['cm'] = {\n      id: _util.OPS.transform,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['m'] = {\n      id: _util.OPS.moveTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['l'] = {\n      id: _util.OPS.lineTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['c'] = {\n      id: _util.OPS.curveTo,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['v'] = {\n      id: _util.OPS.curveTo2,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['y'] = {\n      id: _util.OPS.curveTo3,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['h'] = {\n      id: _util.OPS.closePath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['re'] = {\n      id: _util.OPS.rectangle,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['S'] = {\n      id: _util.OPS.stroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['s'] = {\n      id: _util.OPS.closeStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['F'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f*'] = {\n      id: _util.OPS.eoFill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B'] = {\n      id: _util.OPS.fillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B*'] = {\n      id: _util.OPS.eoFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b'] = {\n      id: _util.OPS.closeFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b*'] = {\n      id: _util.OPS.closeEOFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['n'] = {\n      id: _util.OPS.endPath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W'] = {\n      id: _util.OPS.clip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W*'] = {\n      id: _util.OPS.eoClip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BT'] = {\n      id: _util.OPS.beginText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ET'] = {\n      id: _util.OPS.endText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tc'] = {\n      id: _util.OPS.setCharSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tw'] = {\n      id: _util.OPS.setWordSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tz'] = {\n      id: _util.OPS.setHScale,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TL'] = {\n      id: _util.OPS.setLeading,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tf'] = {\n      id: _util.OPS.setFont,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tr'] = {\n      id: _util.OPS.setTextRenderingMode,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Ts'] = {\n      id: _util.OPS.setTextRise,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Td'] = {\n      id: _util.OPS.moveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['TD'] = {\n      id: _util.OPS.setLeadingMoveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tm'] = {\n      id: _util.OPS.setTextMatrix,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['T*'] = {\n      id: _util.OPS.nextLine,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tj'] = {\n      id: _util.OPS.showText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TJ'] = {\n      id: _util.OPS.showSpacedText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\\''] = {\n      id: _util.OPS.nextLineShowText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\"'] = {\n      id: _util.OPS.nextLineSetSpacingShowText,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['d0'] = {\n      id: _util.OPS.setCharWidth,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['d1'] = {\n      id: _util.OPS.setCharWidthAndBounds,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['CS'] = {\n      id: _util.OPS.setStrokeColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['cs'] = {\n      id: _util.OPS.setFillColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['SC'] = {\n      id: _util.OPS.setStrokeColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['SCN'] = {\n      id: _util.OPS.setStrokeColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['sc'] = {\n      id: _util.OPS.setFillColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['scn'] = {\n      id: _util.OPS.setFillColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['G'] = {\n      id: _util.OPS.setStrokeGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['g'] = {\n      id: _util.OPS.setFillGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['RG'] = {\n      id: _util.OPS.setStrokeRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['rg'] = {\n      id: _util.OPS.setFillRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['K'] = {\n      id: _util.OPS.setStrokeCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['k'] = {\n      id: _util.OPS.setFillCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['sh'] = {\n      id: _util.OPS.shadingFill,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BI'] = {\n      id: _util.OPS.beginInlineImage,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ID'] = {\n      id: _util.OPS.beginImageData,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EI'] = {\n      id: _util.OPS.endInlineImage,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Do'] = {\n      id: _util.OPS.paintXObject,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['MP'] = {\n      id: _util.OPS.markPoint,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['DP'] = {\n      id: _util.OPS.markPointProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['BMC'] = {\n      id: _util.OPS.beginMarkedContent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BDC'] = {\n      id: _util.OPS.beginMarkedContentProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['EMC'] = {\n      id: _util.OPS.endMarkedContent,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BX'] = {\n      id: _util.OPS.beginCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EX'] = {\n      id: _util.OPS.endCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BM'] = null;\n    t['BD'] = null;\n    t['true'] = null;\n    t['fa'] = null;\n    t['fal'] = null;\n    t['fals'] = null;\n    t['false'] = null;\n    t['nu'] = null;\n    t['nul'] = null;\n    t['null'] = null;\n  });\n  function EvaluatorPreprocessor(stream, xref, stateManager) {\n    this.opMap = getOPMap();\n    this.parser = new _parser.Parser(new _parser.Lexer(stream, this.opMap), false, xref);\n    this.stateManager = stateManager;\n    this.nonProcessedArgs = [];\n  }\n  EvaluatorPreprocessor.prototype = {\n    get savedStatesDepth() {\n      return this.stateManager.stateStack.length;\n    },\n    read: function EvaluatorPreprocessor_read(operation) {\n      var args = operation.args;\n      while (true) {\n        var obj = this.parser.getObj();\n        if ((0, _primitives.isCmd)(obj)) {\n          var cmd = obj.cmd;\n          var opSpec = this.opMap[cmd];\n          if (!opSpec) {\n            (0, _util.warn)('Unknown command \"' + cmd + '\"');\n            continue;\n          }\n          var fn = opSpec.id;\n          var numArgs = opSpec.numArgs;\n          var argsLength = args !== null ? args.length : 0;\n          if (!opSpec.variableArgs) {\n            if (argsLength !== numArgs) {\n              var nonProcessedArgs = this.nonProcessedArgs;\n              while (argsLength > numArgs) {\n                nonProcessedArgs.push(args.shift());\n                argsLength--;\n              }\n              while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n                if (args === null) {\n                  args = [];\n                }\n                args.unshift(nonProcessedArgs.pop());\n                argsLength++;\n              }\n            }\n            if (argsLength < numArgs) {\n              (0, _util.warn)('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n              if (args !== null) {\n                args.length = 0;\n              }\n              continue;\n            }\n          } else if (argsLength > numArgs) {\n            (0, _util.info)('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n          }\n          this.preprocessCommand(fn, args);\n          operation.fn = fn;\n          operation.args = args;\n          return true;\n        }\n        if ((0, _primitives.isEOF)(obj)) {\n          return false;\n        }\n        if (obj !== null) {\n          if (args === null) {\n            args = [];\n          }\n          args.push(obj);\n          if (args.length > 33) {\n            throw new _util.FormatError('Too many arguments');\n          }\n        }\n      }\n    },\n    preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n      switch (fn | 0) {\n        case _util.OPS.save:\n          this.stateManager.save();\n          break;\n        case _util.OPS.restore:\n          this.stateManager.restore();\n          break;\n        case _util.OPS.transform:\n          this.stateManager.transform(args);\n          break;\n      }\n    }\n  };\n  return EvaluatorPreprocessor;\n}();\nexports.PartialEvaluator = PartialEvaluator;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/evaluator.js\n// module id = wh6h\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFDocument = exports.Page = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _obj = require('./obj');\n\nvar _primitives = require('./primitives');\n\nvar _util = require('../shared/util');\n\nvar _stream = require('./stream');\n\nvar _annotation = require('./annotation');\n\nvar _crypto = require('./crypto');\n\nvar _parser = require('./parser');\n\nvar _operator_list = require('./operator_list');\n\nvar _evaluator = require('./evaluator');\n\nvar _function = require('./function');\n\nvar Page = function PageClosure() {\n  var DEFAULT_USER_UNIT = 1.0;\n  var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\n  function isAnnotationRenderable(annotation, intent) {\n    return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\n  }\n  function Page(_ref) {\n    var pdfManager = _ref.pdfManager,\n        xref = _ref.xref,\n        pageIndex = _ref.pageIndex,\n        pageDict = _ref.pageDict,\n        ref = _ref.ref,\n        fontCache = _ref.fontCache,\n        builtInCMapCache = _ref.builtInCMapCache,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.pageIndex = pageIndex;\n    this.pageDict = pageDict;\n    this.xref = xref;\n    this.ref = ref;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.evaluatorOptions = pdfManager.evaluatorOptions;\n    this.resourcesPromise = null;\n    var uniquePrefix = 'p' + this.pageIndex + '_';\n    var idCounters = { obj: 0 };\n    this.idFactory = {\n      createObjId: function createObjId() {\n        return uniquePrefix + ++idCounters.obj;\n      }\n    };\n  }\n  Page.prototype = {\n    _getInheritableProperty: function _getInheritableProperty(key) {\n      var getArray = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var value = (0, _util.getInheritableProperty)({\n        dict: this.pageDict,\n        key: key,\n        getArray: getArray,\n        stopWhenFound: false\n      });\n      if (!Array.isArray(value)) {\n        return value;\n      }\n      if (value.length === 1 || !(0, _primitives.isDict)(value[0])) {\n        return value[0];\n      }\n      return _primitives.Dict.merge(this.xref, value);\n    },\n\n    get content() {\n      return this.pageDict.get('Contents');\n    },\n    get resources() {\n      return (0, _util.shadow)(this, 'resources', this._getInheritableProperty('Resources') || _primitives.Dict.empty);\n    },\n    get mediaBox() {\n      var mediaBox = this._getInheritableProperty('MediaBox', true);\n      if (!Array.isArray(mediaBox) || mediaBox.length !== 4) {\n        return (0, _util.shadow)(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n      }\n      return (0, _util.shadow)(this, 'mediaBox', mediaBox);\n    },\n    get cropBox() {\n      var cropBox = this._getInheritableProperty('CropBox', true);\n      if (!Array.isArray(cropBox) || cropBox.length !== 4) {\n        return (0, _util.shadow)(this, 'cropBox', this.mediaBox);\n      }\n      return (0, _util.shadow)(this, 'cropBox', cropBox);\n    },\n    get userUnit() {\n      var obj = this.pageDict.get('UserUnit');\n      if (!(0, _util.isNum)(obj) || obj <= 0) {\n        obj = DEFAULT_USER_UNIT;\n      }\n      return (0, _util.shadow)(this, 'userUnit', obj);\n    },\n    get view() {\n      var mediaBox = this.mediaBox,\n          cropBox = this.cropBox;\n      if (mediaBox === cropBox) {\n        return (0, _util.shadow)(this, 'view', mediaBox);\n      }\n      var intersection = _util.Util.intersect(cropBox, mediaBox);\n      return (0, _util.shadow)(this, 'view', intersection || mediaBox);\n    },\n    get rotate() {\n      var rotate = this._getInheritableProperty('Rotate') || 0;\n      if (rotate % 90 !== 0) {\n        rotate = 0;\n      } else if (rotate >= 360) {\n        rotate = rotate % 360;\n      } else if (rotate < 0) {\n        rotate = (rotate % 360 + 360) % 360;\n      }\n      return (0, _util.shadow)(this, 'rotate', rotate);\n    },\n    getContentStream: function Page_getContentStream() {\n      var content = this.content;\n      var stream;\n      if (Array.isArray(content)) {\n        var xref = this.xref;\n        var i,\n            n = content.length;\n        var streams = [];\n        for (i = 0; i < n; ++i) {\n          streams.push(xref.fetchIfRef(content[i]));\n        }\n        stream = new _stream.StreamsSequenceStream(streams);\n      } else if ((0, _primitives.isStream)(content)) {\n        stream = content;\n      } else {\n        stream = new _stream.NullStream();\n      }\n      return stream;\n    },\n    loadResources: function Page_loadResources(keys) {\n      var _this = this;\n\n      if (!this.resourcesPromise) {\n        this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n      }\n      return this.resourcesPromise.then(function () {\n        var objectLoader = new _obj.ObjectLoader(_this.resources, keys, _this.xref);\n        return objectLoader.load();\n      });\n    },\n    getOperatorList: function getOperatorList(_ref2) {\n      var _this2 = this;\n\n      var handler = _ref2.handler,\n          task = _ref2.task,\n          intent = _ref2.intent,\n          renderInteractiveForms = _ref2.renderInteractiveForms;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var partialEvaluator = new _evaluator.PartialEvaluator({\n        pdfManager: this.pdfManager,\n        xref: this.xref,\n        handler: handler,\n        pageIndex: this.pageIndex,\n        idFactory: this.idFactory,\n        fontCache: this.fontCache,\n        builtInCMapCache: this.builtInCMapCache,\n        options: this.evaluatorOptions,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      });\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      var pageListPromise = dataPromises.then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n            contentStream = _ref4[0];\n\n        var opList = new _operator_list.OperatorList(intent, handler, _this2.pageIndex);\n        handler.send('StartRenderPage', {\n          transparency: partialEvaluator.hasBlendModes(_this2.resources),\n          pageIndex: _this2.pageIndex,\n          intent: intent\n        });\n        return partialEvaluator.getOperatorList({\n          stream: contentStream,\n          task: task,\n          resources: _this2.resources,\n          operatorList: opList\n        }).then(function () {\n          return opList;\n        });\n      });\n      var annotationsPromise = this.pdfManager.ensure(this, 'annotations');\n      return Promise.all([pageListPromise, annotationsPromise]).then(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            pageOpList = _ref6[0],\n            annotations = _ref6[1];\n\n        if (annotations.length === 0) {\n          pageOpList.flush(true);\n          return pageOpList;\n        }\n        var i,\n            ii,\n            opListPromises = [];\n        for (i = 0, ii = annotations.length; i < ii; i++) {\n          if (isAnnotationRenderable(annotations[i], intent)) {\n            opListPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderInteractiveForms));\n          }\n        }\n        return Promise.all(opListPromises).then(function (opLists) {\n          pageOpList.addOp(_util.OPS.beginAnnotations, []);\n          for (i = 0, ii = opLists.length; i < ii; i++) {\n            pageOpList.addOpList(opLists[i]);\n          }\n          pageOpList.addOp(_util.OPS.endAnnotations, []);\n          pageOpList.flush(true);\n          return pageOpList;\n        });\n      });\n    },\n    extractTextContent: function extractTextContent(_ref7) {\n      var _this3 = this;\n\n      var handler = _ref7.handler,\n          task = _ref7.task,\n          normalizeWhitespace = _ref7.normalizeWhitespace,\n          sink = _ref7.sink,\n          combineTextItems = _ref7.combineTextItems;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'XObject', 'Font']);\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      return dataPromises.then(function (_ref8) {\n        var _ref9 = _slicedToArray(_ref8, 1),\n            contentStream = _ref9[0];\n\n        var partialEvaluator = new _evaluator.PartialEvaluator({\n          pdfManager: _this3.pdfManager,\n          xref: _this3.xref,\n          handler: handler,\n          pageIndex: _this3.pageIndex,\n          idFactory: _this3.idFactory,\n          fontCache: _this3.fontCache,\n          builtInCMapCache: _this3.builtInCMapCache,\n          options: _this3.evaluatorOptions,\n          pdfFunctionFactory: _this3.pdfFunctionFactory\n        });\n        return partialEvaluator.getTextContent({\n          stream: contentStream,\n          task: task,\n          resources: _this3.resources,\n          normalizeWhitespace: normalizeWhitespace,\n          combineTextItems: combineTextItems,\n          sink: sink\n        });\n      });\n    },\n\n    getAnnotationsData: function Page_getAnnotationsData(intent) {\n      var annotations = this.annotations;\n      var annotationsData = [];\n      for (var i = 0, n = annotations.length; i < n; ++i) {\n        if (!intent || isAnnotationRenderable(annotations[i], intent)) {\n          annotationsData.push(annotations[i].data);\n        }\n      }\n      return annotationsData;\n    },\n    get annotations() {\n      var annotations = [];\n      var annotationRefs = this._getInheritableProperty('Annots') || [];\n      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n        var annotationRef = annotationRefs[i];\n        var annotation = _annotation.AnnotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n        if (annotation) {\n          annotations.push(annotation);\n        }\n      }\n      return (0, _util.shadow)(this, 'annotations', annotations);\n    }\n  };\n  return Page;\n}();\nvar PDFDocument = function PDFDocumentClosure() {\n  var FINGERPRINT_FIRST_BYTES = 1024;\n  var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n  function PDFDocument(pdfManager, arg) {\n    var stream;\n    if ((0, _primitives.isStream)(arg)) {\n      stream = arg;\n    } else if ((0, _util.isArrayBuffer)(arg)) {\n      stream = new _stream.Stream(arg);\n    } else {\n      throw new Error('PDFDocument: Unknown argument type');\n    }\n    if (stream.length <= 0) {\n      throw new Error('PDFDocument: stream must have data');\n    }\n    this.pdfManager = pdfManager;\n    this.stream = stream;\n    this.xref = new _obj.XRef(stream, pdfManager);\n    var evaluatorOptions = pdfManager.evaluatorOptions;\n    this.pdfFunctionFactory = new _function.PDFFunctionFactory({\n      xref: this.xref,\n      isEvalSupported: evaluatorOptions.isEvalSupported\n    });\n  }\n  function find(stream, needle, limit, backwards) {\n    var pos = stream.pos;\n    var end = stream.end;\n    var strBuf = [];\n    if (pos + limit > end) {\n      limit = end - pos;\n    }\n    for (var n = 0; n < limit; ++n) {\n      strBuf.push(String.fromCharCode(stream.getByte()));\n    }\n    var str = strBuf.join('');\n    stream.pos = pos;\n    var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n    if (index === -1) {\n      return false;\n    }\n    stream.pos += index;\n    return true;\n  }\n  var DocumentInfoValidators = {\n    get entries() {\n      return (0, _util.shadow)(this, 'entries', {\n        Title: _util.isString,\n        Author: _util.isString,\n        Subject: _util.isString,\n        Keywords: _util.isString,\n        Creator: _util.isString,\n        Producer: _util.isString,\n        CreationDate: _util.isString,\n        ModDate: _util.isString,\n        Trapped: _primitives.isName\n      });\n    }\n  };\n  PDFDocument.prototype = {\n    parse: function PDFDocument_parse(recoveryMode) {\n      this.setup(recoveryMode);\n      var version = this.catalog.catDict.get('Version');\n      if ((0, _primitives.isName)(version)) {\n        this.pdfFormatVersion = version.name;\n      }\n      try {\n        this.acroForm = this.catalog.catDict.get('AcroForm');\n        if (this.acroForm) {\n          this.xfa = this.acroForm.get('XFA');\n          var fields = this.acroForm.get('Fields');\n          if ((!fields || !Array.isArray(fields) || fields.length === 0) && !this.xfa) {\n            this.acroForm = null;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.info)('Something wrong with AcroForm entry');\n        this.acroForm = null;\n      }\n    },\n    get linearization() {\n      var linearization = null;\n      if (this.stream.length) {\n        try {\n          linearization = _parser.Linearization.create(this.stream);\n        } catch (err) {\n          if (err instanceof _util.MissingDataException) {\n            throw err;\n          }\n          (0, _util.info)(err);\n        }\n      }\n      return (0, _util.shadow)(this, 'linearization', linearization);\n    },\n    get startXRef() {\n      var stream = this.stream;\n      var startXRef = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        stream.reset();\n        if (find(stream, 'endobj', 1024)) {\n          startXRef = stream.pos + 6;\n        }\n      } else {\n        var step = 1024;\n        var found = false,\n            pos = stream.end;\n        while (!found && pos > 0) {\n          pos -= step - 'startxref'.length;\n          if (pos < 0) {\n            pos = 0;\n          }\n          stream.pos = pos;\n          found = find(stream, 'startxref', step, true);\n        }\n        if (found) {\n          stream.skip(9);\n          var ch;\n          do {\n            ch = stream.getByte();\n          } while ((0, _util.isSpace)(ch));\n          var str = '';\n          while (ch >= 0x20 && ch <= 0x39) {\n            str += String.fromCharCode(ch);\n            ch = stream.getByte();\n          }\n          startXRef = parseInt(str, 10);\n          if (isNaN(startXRef)) {\n            startXRef = 0;\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'startXRef', startXRef);\n    },\n    get mainXRefEntriesOffset() {\n      var mainXRefEntriesOffset = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n      }\n      return (0, _util.shadow)(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n    },\n    checkHeader: function PDFDocument_checkHeader() {\n      var stream = this.stream;\n      stream.reset();\n      if (find(stream, '%PDF-', 1024)) {\n        stream.moveStart();\n        var MAX_VERSION_LENGTH = 12;\n        var version = '',\n            ch;\n        while ((ch = stream.getByte()) > 0x20) {\n          if (version.length >= MAX_VERSION_LENGTH) {\n            break;\n          }\n          version += String.fromCharCode(ch);\n        }\n        if (!this.pdfFormatVersion) {\n          this.pdfFormatVersion = version.substring(5);\n        }\n        return;\n      }\n    },\n    parseStartXRef: function PDFDocument_parseStartXRef() {\n      var startXRef = this.startXRef;\n      this.xref.setStartXRef(startXRef);\n    },\n    setup: function PDFDocument_setup(recoveryMode) {\n      var _this4 = this;\n\n      this.xref.parse(recoveryMode);\n      var pageFactory = {\n        createPage: function createPage(pageIndex, dict, ref, fontCache, builtInCMapCache) {\n          return new Page({\n            pdfManager: _this4.pdfManager,\n            xref: _this4.xref,\n            pageIndex: pageIndex,\n            pageDict: dict,\n            ref: ref,\n            fontCache: fontCache,\n            builtInCMapCache: builtInCMapCache,\n            pdfFunctionFactory: _this4.pdfFunctionFactory\n          });\n        }\n      };\n      this.catalog = new _obj.Catalog(this.pdfManager, this.xref, pageFactory);\n    },\n    get numPages() {\n      var linearization = this.linearization;\n      var num = linearization ? linearization.numPages : this.catalog.numPages;\n      return (0, _util.shadow)(this, 'numPages', num);\n    },\n    get documentInfo() {\n      var docInfo = {\n        PDFFormatVersion: this.pdfFormatVersion,\n        IsAcroFormPresent: !!this.acroForm,\n        IsXFAPresent: !!this.xfa\n      };\n      var infoDict;\n      try {\n        infoDict = this.xref.trailer.get('Info');\n      } catch (err) {\n        if (err instanceof _util.MissingDataException) {\n          throw err;\n        }\n        (0, _util.info)('The document information dictionary is invalid.');\n      }\n      if (infoDict) {\n        var validEntries = DocumentInfoValidators.entries;\n        for (var key in validEntries) {\n          if (infoDict.has(key)) {\n            var value = infoDict.get(key);\n            if (validEntries[key](value)) {\n              docInfo[key] = typeof value !== 'string' ? value : (0, _util.stringToPDFString)(value);\n            } else {\n              (0, _util.info)('Bad value in document info for \"' + key + '\"');\n            }\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'documentInfo', docInfo);\n    },\n    get fingerprint() {\n      var xref = this.xref,\n          hash,\n          fileID = '';\n      var idArray = xref.trailer.get('ID');\n      if (Array.isArray(idArray) && idArray[0] && (0, _util.isString)(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n        hash = (0, _util.stringToBytes)(idArray[0]);\n      } else {\n        if (this.stream.ensureRange) {\n          this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n        }\n        hash = (0, _crypto.calculateMD5)(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n      }\n      for (var i = 0, n = hash.length; i < n; i++) {\n        var hex = hash[i].toString(16);\n        fileID += hex.length === 1 ? '0' + hex : hex;\n      }\n      return (0, _util.shadow)(this, 'fingerprint', fileID);\n    },\n    getPage: function PDFDocument_getPage(pageIndex) {\n      return this.catalog.getPage(pageIndex);\n    },\n    cleanup: function PDFDocument_cleanup() {\n      return this.catalog.cleanup();\n    }\n  };\n  return PDFDocument;\n}();\nexports.Page = Page;\nexports.PDFDocument = PDFDocument;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/document.js\n// module id = xAR1\n// module chunks = 35","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSupplementalGlyphMapForCalibri = exports.getSupplementalGlyphMapForArialBlack = exports.getGlyphMapForStandardFonts = exports.getSymbolsFonts = exports.getSerifFonts = exports.getNonStdFontMap = exports.getStdFontMap = undefined;\n\nvar _util = require('../shared/util');\n\nvar getStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['ArialNarrow'] = 'Helvetica';\n  t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n  t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n  t['ArialBlack'] = 'Helvetica';\n  t['ArialBlack-Bold'] = 'Helvetica-Bold';\n  t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n  t['Arial-Black'] = 'Helvetica';\n  t['Arial-Black-Bold'] = 'Helvetica-Bold';\n  t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n  t['Arial'] = 'Helvetica';\n  t['Arial-Bold'] = 'Helvetica-Bold';\n  t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Italic'] = 'Helvetica-Oblique';\n  t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n  t['Arial-BoldMT'] = 'Helvetica-Bold';\n  t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n  t['ArialMT'] = 'Helvetica';\n  t['Courier-Bold'] = 'Courier-Bold';\n  t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n  t['Courier-Italic'] = 'Courier-Oblique';\n  t['CourierNew'] = 'Courier';\n  t['CourierNew-Bold'] = 'Courier-Bold';\n  t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n  t['CourierNew-Italic'] = 'Courier-Oblique';\n  t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n  t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n  t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n  t['CourierNewPSMT'] = 'Courier';\n  t['Helvetica'] = 'Helvetica';\n  t['Helvetica-Bold'] = 'Helvetica-Bold';\n  t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n  t['Helvetica-Italic'] = 'Helvetica-Oblique';\n  t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n  t['SegoeUISymbol'] = 'Helvetica';\n  t['Symbol-Bold'] = 'Symbol';\n  t['Symbol-BoldItalic'] = 'Symbol';\n  t['Symbol-Italic'] = 'Symbol';\n  t['TimesNewRoman'] = 'Times-Roman';\n  t['TimesNewRoman-Bold'] = 'Times-Bold';\n  t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRoman-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS'] = 'Times-Roman';\n  t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n  t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n  t['TimesNewRomanPSMT'] = 'Times-Roman';\n  t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n});\nvar getNonStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['Calibri'] = 'Helvetica';\n  t['Calibri-Bold'] = 'Helvetica-Bold';\n  t['Calibri-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Calibri-Italic'] = 'Helvetica-Oblique';\n  t['CenturyGothic'] = 'Helvetica';\n  t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n  t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n  t['ComicSansMS'] = 'Comic Sans MS';\n  t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n  t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n  t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n  t['LucidaConsole'] = 'Courier';\n  t['LucidaConsole-Bold'] = 'Courier-Bold';\n  t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n  t['LucidaConsole-Italic'] = 'Courier-Oblique';\n  t['LucidaSans-Demi'] = 'Helvetica-Bold';\n  t['MS-Gothic'] = 'MS Gothic';\n  t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n  t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n  t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n  t['MS-Mincho'] = 'MS Mincho';\n  t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n  t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n  t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n  t['MS-PGothic'] = 'MS PGothic';\n  t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n  t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n  t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n  t['MS-PMincho'] = 'MS PMincho';\n  t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n  t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n  t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n  t['NuptialScript'] = 'Times-Italic';\n  t['Wingdings'] = 'ZapfDingbats';\n});\nvar getSerifFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Adobe Jenson'] = true;\n  t['Adobe Text'] = true;\n  t['Albertus'] = true;\n  t['Aldus'] = true;\n  t['Alexandria'] = true;\n  t['Algerian'] = true;\n  t['American Typewriter'] = true;\n  t['Antiqua'] = true;\n  t['Apex'] = true;\n  t['Arno'] = true;\n  t['Aster'] = true;\n  t['Aurora'] = true;\n  t['Baskerville'] = true;\n  t['Bell'] = true;\n  t['Bembo'] = true;\n  t['Bembo Schoolbook'] = true;\n  t['Benguiat'] = true;\n  t['Berkeley Old Style'] = true;\n  t['Bernhard Modern'] = true;\n  t['Berthold City'] = true;\n  t['Bodoni'] = true;\n  t['Bauer Bodoni'] = true;\n  t['Book Antiqua'] = true;\n  t['Bookman'] = true;\n  t['Bordeaux Roman'] = true;\n  t['Californian FB'] = true;\n  t['Calisto'] = true;\n  t['Calvert'] = true;\n  t['Capitals'] = true;\n  t['Cambria'] = true;\n  t['Cartier'] = true;\n  t['Caslon'] = true;\n  t['Catull'] = true;\n  t['Centaur'] = true;\n  t['Century Old Style'] = true;\n  t['Century Schoolbook'] = true;\n  t['Chaparral'] = true;\n  t['Charis SIL'] = true;\n  t['Cheltenham'] = true;\n  t['Cholla Slab'] = true;\n  t['Clarendon'] = true;\n  t['Clearface'] = true;\n  t['Cochin'] = true;\n  t['Colonna'] = true;\n  t['Computer Modern'] = true;\n  t['Concrete Roman'] = true;\n  t['Constantia'] = true;\n  t['Cooper Black'] = true;\n  t['Corona'] = true;\n  t['Ecotype'] = true;\n  t['Egyptienne'] = true;\n  t['Elephant'] = true;\n  t['Excelsior'] = true;\n  t['Fairfield'] = true;\n  t['FF Scala'] = true;\n  t['Folkard'] = true;\n  t['Footlight'] = true;\n  t['FreeSerif'] = true;\n  t['Friz Quadrata'] = true;\n  t['Garamond'] = true;\n  t['Gentium'] = true;\n  t['Georgia'] = true;\n  t['Gloucester'] = true;\n  t['Goudy Old Style'] = true;\n  t['Goudy Schoolbook'] = true;\n  t['Goudy Pro Font'] = true;\n  t['Granjon'] = true;\n  t['Guardian Egyptian'] = true;\n  t['Heather'] = true;\n  t['Hercules'] = true;\n  t['High Tower Text'] = true;\n  t['Hiroshige'] = true;\n  t['Hoefler Text'] = true;\n  t['Humana Serif'] = true;\n  t['Imprint'] = true;\n  t['Ionic No. 5'] = true;\n  t['Janson'] = true;\n  t['Joanna'] = true;\n  t['Korinna'] = true;\n  t['Lexicon'] = true;\n  t['Liberation Serif'] = true;\n  t['Linux Libertine'] = true;\n  t['Literaturnaya'] = true;\n  t['Lucida'] = true;\n  t['Lucida Bright'] = true;\n  t['Melior'] = true;\n  t['Memphis'] = true;\n  t['Miller'] = true;\n  t['Minion'] = true;\n  t['Modern'] = true;\n  t['Mona Lisa'] = true;\n  t['Mrs Eaves'] = true;\n  t['MS Serif'] = true;\n  t['Museo Slab'] = true;\n  t['New York'] = true;\n  t['Nimbus Roman'] = true;\n  t['NPS Rawlinson Roadway'] = true;\n  t['NuptialScript'] = true;\n  t['Palatino'] = true;\n  t['Perpetua'] = true;\n  t['Plantin'] = true;\n  t['Plantin Schoolbook'] = true;\n  t['Playbill'] = true;\n  t['Poor Richard'] = true;\n  t['Rawlinson Roadway'] = true;\n  t['Renault'] = true;\n  t['Requiem'] = true;\n  t['Rockwell'] = true;\n  t['Roman'] = true;\n  t['Rotis Serif'] = true;\n  t['Sabon'] = true;\n  t['Scala'] = true;\n  t['Seagull'] = true;\n  t['Sistina'] = true;\n  t['Souvenir'] = true;\n  t['STIX'] = true;\n  t['Stone Informal'] = true;\n  t['Stone Serif'] = true;\n  t['Sylfaen'] = true;\n  t['Times'] = true;\n  t['Trajan'] = true;\n  t['Trinité'] = true;\n  t['Trump Mediaeval'] = true;\n  t['Utopia'] = true;\n  t['Vale Type'] = true;\n  t['Bitstream Vera'] = true;\n  t['Vera Serif'] = true;\n  t['Versailles'] = true;\n  t['Wanted'] = true;\n  t['Weiss'] = true;\n  t['Wide Latin'] = true;\n  t['Windsor'] = true;\n  t['XITS'] = true;\n});\nvar getSymbolsFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Dingbats'] = true;\n  t['Symbol'] = true;\n  t['ZapfDingbats'] = true;\n});\nvar getGlyphMapForStandardFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t[2] = 10;\n  t[3] = 32;\n  t[4] = 33;\n  t[5] = 34;\n  t[6] = 35;\n  t[7] = 36;\n  t[8] = 37;\n  t[9] = 38;\n  t[10] = 39;\n  t[11] = 40;\n  t[12] = 41;\n  t[13] = 42;\n  t[14] = 43;\n  t[15] = 44;\n  t[16] = 45;\n  t[17] = 46;\n  t[18] = 47;\n  t[19] = 48;\n  t[20] = 49;\n  t[21] = 50;\n  t[22] = 51;\n  t[23] = 52;\n  t[24] = 53;\n  t[25] = 54;\n  t[26] = 55;\n  t[27] = 56;\n  t[28] = 57;\n  t[29] = 58;\n  t[30] = 894;\n  t[31] = 60;\n  t[32] = 61;\n  t[33] = 62;\n  t[34] = 63;\n  t[35] = 64;\n  t[36] = 65;\n  t[37] = 66;\n  t[38] = 67;\n  t[39] = 68;\n  t[40] = 69;\n  t[41] = 70;\n  t[42] = 71;\n  t[43] = 72;\n  t[44] = 73;\n  t[45] = 74;\n  t[46] = 75;\n  t[47] = 76;\n  t[48] = 77;\n  t[49] = 78;\n  t[50] = 79;\n  t[51] = 80;\n  t[52] = 81;\n  t[53] = 82;\n  t[54] = 83;\n  t[55] = 84;\n  t[56] = 85;\n  t[57] = 86;\n  t[58] = 87;\n  t[59] = 88;\n  t[60] = 89;\n  t[61] = 90;\n  t[62] = 91;\n  t[63] = 92;\n  t[64] = 93;\n  t[65] = 94;\n  t[66] = 95;\n  t[67] = 96;\n  t[68] = 97;\n  t[69] = 98;\n  t[70] = 99;\n  t[71] = 100;\n  t[72] = 101;\n  t[73] = 102;\n  t[74] = 103;\n  t[75] = 104;\n  t[76] = 105;\n  t[77] = 106;\n  t[78] = 107;\n  t[79] = 108;\n  t[80] = 109;\n  t[81] = 110;\n  t[82] = 111;\n  t[83] = 112;\n  t[84] = 113;\n  t[85] = 114;\n  t[86] = 115;\n  t[87] = 116;\n  t[88] = 117;\n  t[89] = 118;\n  t[90] = 119;\n  t[91] = 120;\n  t[92] = 121;\n  t[93] = 122;\n  t[94] = 123;\n  t[95] = 124;\n  t[96] = 125;\n  t[97] = 126;\n  t[98] = 196;\n  t[99] = 197;\n  t[100] = 199;\n  t[101] = 201;\n  t[102] = 209;\n  t[103] = 214;\n  t[104] = 220;\n  t[105] = 225;\n  t[106] = 224;\n  t[107] = 226;\n  t[108] = 228;\n  t[109] = 227;\n  t[110] = 229;\n  t[111] = 231;\n  t[112] = 233;\n  t[113] = 232;\n  t[114] = 234;\n  t[115] = 235;\n  t[116] = 237;\n  t[117] = 236;\n  t[118] = 238;\n  t[119] = 239;\n  t[120] = 241;\n  t[121] = 243;\n  t[122] = 242;\n  t[123] = 244;\n  t[124] = 246;\n  t[125] = 245;\n  t[126] = 250;\n  t[127] = 249;\n  t[128] = 251;\n  t[129] = 252;\n  t[130] = 8224;\n  t[131] = 176;\n  t[132] = 162;\n  t[133] = 163;\n  t[134] = 167;\n  t[135] = 8226;\n  t[136] = 182;\n  t[137] = 223;\n  t[138] = 174;\n  t[139] = 169;\n  t[140] = 8482;\n  t[141] = 180;\n  t[142] = 168;\n  t[143] = 8800;\n  t[144] = 198;\n  t[145] = 216;\n  t[146] = 8734;\n  t[147] = 177;\n  t[148] = 8804;\n  t[149] = 8805;\n  t[150] = 165;\n  t[151] = 181;\n  t[152] = 8706;\n  t[153] = 8721;\n  t[154] = 8719;\n  t[156] = 8747;\n  t[157] = 170;\n  t[158] = 186;\n  t[159] = 8486;\n  t[160] = 230;\n  t[161] = 248;\n  t[162] = 191;\n  t[163] = 161;\n  t[164] = 172;\n  t[165] = 8730;\n  t[166] = 402;\n  t[167] = 8776;\n  t[168] = 8710;\n  t[169] = 171;\n  t[170] = 187;\n  t[171] = 8230;\n  t[210] = 218;\n  t[223] = 711;\n  t[224] = 321;\n  t[225] = 322;\n  t[227] = 353;\n  t[229] = 382;\n  t[234] = 253;\n  t[252] = 263;\n  t[253] = 268;\n  t[254] = 269;\n  t[258] = 258;\n  t[260] = 260;\n  t[261] = 261;\n  t[265] = 280;\n  t[266] = 281;\n  t[268] = 283;\n  t[269] = 313;\n  t[275] = 323;\n  t[276] = 324;\n  t[278] = 328;\n  t[284] = 345;\n  t[285] = 346;\n  t[286] = 347;\n  t[292] = 367;\n  t[295] = 377;\n  t[296] = 378;\n  t[298] = 380;\n  t[305] = 963;\n  t[306] = 964;\n  t[307] = 966;\n  t[308] = 8215;\n  t[309] = 8252;\n  t[310] = 8319;\n  t[311] = 8359;\n  t[312] = 8592;\n  t[313] = 8593;\n  t[337] = 9552;\n  t[493] = 1039;\n  t[494] = 1040;\n  t[705] = 1524;\n  t[706] = 8362;\n  t[710] = 64288;\n  t[711] = 64298;\n  t[759] = 1617;\n  t[761] = 1776;\n  t[763] = 1778;\n  t[775] = 1652;\n  t[777] = 1764;\n  t[778] = 1780;\n  t[779] = 1781;\n  t[780] = 1782;\n  t[782] = 771;\n  t[783] = 64726;\n  t[786] = 8363;\n  t[788] = 8532;\n  t[790] = 768;\n  t[791] = 769;\n  t[792] = 768;\n  t[795] = 803;\n  t[797] = 64336;\n  t[798] = 64337;\n  t[799] = 64342;\n  t[800] = 64343;\n  t[801] = 64344;\n  t[802] = 64345;\n  t[803] = 64362;\n  t[804] = 64363;\n  t[805] = 64364;\n  t[2424] = 7821;\n  t[2425] = 7822;\n  t[2426] = 7823;\n  t[2427] = 7824;\n  t[2428] = 7825;\n  t[2429] = 7826;\n  t[2430] = 7827;\n  t[2433] = 7682;\n  t[2678] = 8045;\n  t[2679] = 8046;\n  t[2830] = 1552;\n  t[2838] = 686;\n  t[2840] = 751;\n  t[2842] = 753;\n  t[2843] = 754;\n  t[2844] = 755;\n  t[2846] = 757;\n  t[2856] = 767;\n  t[2857] = 848;\n  t[2858] = 849;\n  t[2862] = 853;\n  t[2863] = 854;\n  t[2864] = 855;\n  t[2865] = 861;\n  t[2866] = 862;\n  t[2906] = 7460;\n  t[2908] = 7462;\n  t[2909] = 7463;\n  t[2910] = 7464;\n  t[2912] = 7466;\n  t[2913] = 7467;\n  t[2914] = 7468;\n  t[2916] = 7470;\n  t[2917] = 7471;\n  t[2918] = 7472;\n  t[2920] = 7474;\n  t[2921] = 7475;\n  t[2922] = 7476;\n  t[2924] = 7478;\n  t[2925] = 7479;\n  t[2926] = 7480;\n  t[2928] = 7482;\n  t[2929] = 7483;\n  t[2930] = 7484;\n  t[2932] = 7486;\n  t[2933] = 7487;\n  t[2934] = 7488;\n  t[2936] = 7490;\n  t[2937] = 7491;\n  t[2938] = 7492;\n  t[2940] = 7494;\n  t[2941] = 7495;\n  t[2942] = 7496;\n  t[2944] = 7498;\n  t[2946] = 7500;\n  t[2948] = 7502;\n  t[2950] = 7504;\n  t[2951] = 7505;\n  t[2952] = 7506;\n  t[2954] = 7508;\n  t[2955] = 7509;\n  t[2956] = 7510;\n  t[2958] = 7512;\n  t[2959] = 7513;\n  t[2960] = 7514;\n  t[2962] = 7516;\n  t[2963] = 7517;\n  t[2964] = 7518;\n  t[2966] = 7520;\n  t[2967] = 7521;\n  t[2968] = 7522;\n  t[2970] = 7524;\n  t[2971] = 7525;\n  t[2972] = 7526;\n  t[2974] = 7528;\n  t[2975] = 7529;\n  t[2976] = 7530;\n  t[2978] = 1537;\n  t[2979] = 1538;\n  t[2980] = 1539;\n  t[2982] = 1549;\n  t[2983] = 1551;\n  t[2984] = 1552;\n  t[2986] = 1554;\n  t[2987] = 1555;\n  t[2988] = 1556;\n  t[2990] = 1623;\n  t[2991] = 1624;\n  t[2995] = 1775;\n  t[2999] = 1791;\n  t[3002] = 64290;\n  t[3003] = 64291;\n  t[3004] = 64292;\n  t[3006] = 64294;\n  t[3007] = 64295;\n  t[3008] = 64296;\n  t[3011] = 1900;\n  t[3014] = 8223;\n  t[3015] = 8244;\n  t[3017] = 7532;\n  t[3018] = 7533;\n  t[3019] = 7534;\n  t[3075] = 7590;\n  t[3076] = 7591;\n  t[3079] = 7594;\n  t[3080] = 7595;\n  t[3083] = 7598;\n  t[3084] = 7599;\n  t[3087] = 7602;\n  t[3088] = 7603;\n  t[3091] = 7606;\n  t[3092] = 7607;\n  t[3095] = 7610;\n  t[3096] = 7611;\n  t[3099] = 7614;\n  t[3100] = 7615;\n  t[3103] = 7618;\n  t[3104] = 7619;\n  t[3107] = 8337;\n  t[3108] = 8338;\n  t[3116] = 1884;\n  t[3119] = 1885;\n  t[3120] = 1885;\n  t[3123] = 1886;\n  t[3124] = 1886;\n  t[3127] = 1887;\n  t[3128] = 1887;\n  t[3131] = 1888;\n  t[3132] = 1888;\n  t[3135] = 1889;\n  t[3136] = 1889;\n  t[3139] = 1890;\n  t[3140] = 1890;\n  t[3143] = 1891;\n  t[3144] = 1891;\n  t[3147] = 1892;\n  t[3148] = 1892;\n  t[3153] = 580;\n  t[3154] = 581;\n  t[3157] = 584;\n  t[3158] = 585;\n  t[3161] = 588;\n  t[3162] = 589;\n  t[3165] = 891;\n  t[3166] = 892;\n  t[3169] = 1274;\n  t[3170] = 1275;\n  t[3173] = 1278;\n  t[3174] = 1279;\n  t[3181] = 7622;\n  t[3182] = 7623;\n  t[3282] = 11799;\n  t[3316] = 578;\n  t[3379] = 42785;\n  t[3393] = 1159;\n  t[3416] = 8377;\n});\nvar getSupplementalGlyphMapForArialBlack = (0, _util.getLookupTableFactory)(function (t) {\n  t[227] = 322;\n  t[264] = 261;\n  t[291] = 346;\n});\nvar getSupplementalGlyphMapForCalibri = (0, _util.getLookupTableFactory)(function (t) {\n  t[1] = 32;\n  t[4] = 65;\n  t[17] = 66;\n  t[18] = 67;\n  t[24] = 68;\n  t[28] = 69;\n  t[38] = 70;\n  t[39] = 71;\n  t[44] = 72;\n  t[47] = 73;\n  t[58] = 74;\n  t[60] = 75;\n  t[62] = 76;\n  t[68] = 77;\n  t[69] = 78;\n  t[75] = 79;\n  t[87] = 80;\n  t[89] = 81;\n  t[90] = 82;\n  t[94] = 83;\n  t[100] = 84;\n  t[104] = 85;\n  t[115] = 86;\n  t[116] = 87;\n  t[121] = 88;\n  t[122] = 89;\n  t[127] = 90;\n  t[258] = 97;\n  t[268] = 261;\n  t[271] = 98;\n  t[272] = 99;\n  t[273] = 263;\n  t[282] = 100;\n  t[286] = 101;\n  t[295] = 281;\n  t[296] = 102;\n  t[336] = 103;\n  t[346] = 104;\n  t[349] = 105;\n  t[361] = 106;\n  t[364] = 107;\n  t[367] = 108;\n  t[371] = 322;\n  t[373] = 109;\n  t[374] = 110;\n  t[381] = 111;\n  t[383] = 243;\n  t[393] = 112;\n  t[395] = 113;\n  t[396] = 114;\n  t[400] = 115;\n  t[401] = 347;\n  t[410] = 116;\n  t[437] = 117;\n  t[448] = 118;\n  t[449] = 119;\n  t[454] = 120;\n  t[455] = 121;\n  t[460] = 122;\n  t[463] = 380;\n  t[853] = 44;\n  t[855] = 58;\n  t[856] = 46;\n  t[876] = 47;\n  t[878] = 45;\n  t[882] = 45;\n  t[894] = 40;\n  t[895] = 41;\n  t[896] = 91;\n  t[897] = 93;\n  t[923] = 64;\n  t[1004] = 48;\n  t[1005] = 49;\n  t[1006] = 50;\n  t[1007] = 51;\n  t[1008] = 52;\n  t[1009] = 53;\n  t[1010] = 54;\n  t[1011] = 55;\n  t[1012] = 56;\n  t[1013] = 57;\n  t[1081] = 37;\n  t[1085] = 43;\n  t[1086] = 45;\n});\nexports.getStdFontMap = getStdFontMap;\nexports.getNonStdFontMap = getNonStdFontMap;\nexports.getSerifFonts = getSerifFonts;\nexports.getSymbolsFonts = getSymbolsFonts;\nexports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\nexports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\nexports.getSupplementalGlyphMapForCalibri = getSupplementalGlyphMapForCalibri;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/standard_fonts.js\n// module id = zpPo\n// module chunks = 35"],"sourceRoot":""}